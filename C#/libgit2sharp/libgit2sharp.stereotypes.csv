Class Name,Class Stereotype,Method Name,Method Stereotype
"UsernamePasswordCredentials","data-provider boundary small-class","GitCredentialHandler","property wrapper",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","get","collaborator incidental",
"TreeEntry","boundary","TreeEntry","constructor",
"TreeEntry","boundary","TreeEntry","copy-constructor",
"TreeEntry","boundary","RetrieveTreeEntryTarget","property non-void-command factory collaborator",
"TreeEntry","boundary","Equals","predicate non-void-command collaborator",
"TreeEntry","boundary","Equals","predicate non-void-command",
"TreeEntry","boundary","GetHashCode","property non-void-command",
"TreeEntry","boundary","get","get",
"TreeEntry","boundary","get","get collaborator",
"TreeEntry","boundary","get","get collaborator",
"TreeEntry","boundary","get","wrapper stateless",
"TreeDefinition","entity boundary","AddEntry","command collaborator",
"TreeDefinition","entity boundary","Remove","get non-void-command collaborator",
"TreeDefinition","entity boundary","Remove","get non-void-command",
"TreeDefinition","entity boundary","Add","get non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","AddGitLink","property non-void-command collaborator",
"TreeDefinition","entity boundary","RetrieveOrBuildTreeDefinition","property non-void-command factory",
"TreeDefinition","entity boundary","Build","property set collaborator",
"TreeDefinition","entity boundary","WrapAllTreeDefinitions","set collaborator",
"TreeDefinition","entity boundary","WrapTree","set collaborator",
"TreeDefinition","entity boundary","get","property non-void-command collaborator",
"WorktreeLock","data-provider boundary small-class","WorktreeLock","constructor",
"WorktreeLock","data-provider boundary small-class","WorktreeLock","constructor",
"WorktreeLock","data-provider boundary small-class","get","property wrapper",
"Tree","boundary","Tree","constructor",
"Tree","boundary","Tree","constructor",
"Tree","boundary","RetrieveFromPath","property factory controller",
"Tree","boundary","byIndex","factory wrapper stateless",
"Tree","boundary","GetEnumerator","property non-void-command collaborator",
"Tree","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Tree","boundary","get","property non-void-command collaborator",
"Tree","boundary","get","property non-void-command",
"TreeChanges","entity boundary","TreeChanges","constructor",
"TreeChanges","entity boundary","TreeChanges","constructor",
"TreeChanges","entity boundary","GetChangesOfKind","property non-void-command collaborator",
"TreeChanges","entity boundary","TryGetEntryWithChangeTypeAt","predicate wrapper",
"TreeChanges","entity boundary","GetEnumerator","property non-void-command collaborator",
"TreeChanges","entity boundary","GetEntryAt","property factory wrapper",
"TreeChanges","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"TreeChanges","entity boundary","Dispose","command",
"TreeChanges","entity boundary","Dispose","command",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","get",
"TreeChanges","entity boundary","get","wrapper stateless",
"SubmoduleCollection","boundary","SubmoduleCollection","constructor",
"SubmoduleCollection","boundary","SubmoduleCollection","constructor",
"SubmoduleCollection","boundary","Init","wrapper",
"SubmoduleCollection","boundary","Update","void-accessor controller",
"SubmoduleCollection","boundary","GetEnumerator","property non-void-command collaborator",
"SubmoduleCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"SubmoduleCollection","boundary","TryStage","wrapper stateless",
"SubmoduleCollection","boundary","Lookup<T>","property wrapper",
"SubmoduleCollection","boundary","get","property wrapper",
"SubmoduleCollection","boundary","get","property non-void-command",
"Submodule","data-provider boundary","Submodule","constructor",
"Submodule","data-provider boundary","Submodule","constructor",
"Submodule","data-provider boundary","RetrieveStatus","property wrapper",
"Submodule","data-provider boundary","Equals","predicate non-void-command collaborator",
"Submodule","data-provider boundary","Equals","predicate non-void-command",
"Submodule","data-provider boundary","GetHashCode","property non-void-command",
"Submodule","data-provider boundary","ToString","incidental",
"Submodule","data-provider boundary","get","get",
"Submodule","data-provider boundary","get","get",
"Submodule","data-provider boundary","get","get",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","wrapper stateless",
"Submodule","data-provider boundary","get","get collaborator",
"StatusOptions","empty","StatusOptions","constructor",
"StatusEntry","data-provider boundary","StatusEntry","constructor",
"StatusEntry","data-provider boundary","StatusEntry","constructor",
"StatusEntry","data-provider boundary","Equals","predicate non-void-command collaborator",
"StatusEntry","data-provider boundary","Equals","predicate non-void-command",
"StatusEntry","data-provider boundary","GetHashCode","property non-void-command",
"StatusEntry","data-provider boundary","get","get collaborator",
"StatusEntry","data-provider boundary","get","get",
"StatusEntry","data-provider boundary","get","get collaborator",
"StatusEntry","data-provider boundary","get","get collaborator",
"StatusEntry","data-provider boundary","get","wrapper stateless",
"Stash","empty","Stash","constructor",
"Stash","empty","Stash","constructor",
"Version","boundary degenerate","Version","constructor",
"Version","boundary degenerate","RetrieveAbbrevShaFrom","controller stateless",
"Version","boundary degenerate","ToString","property non-void-command",
"Version","boundary degenerate","RetrieveVersion","wrapper stateless",
"Version","boundary degenerate","get","wrapper stateless",
"Version","boundary degenerate","get","wrapper stateless",
"SmartSubtransportRegistration<T>","commander boundary lazy-class degenerate","SmartSubtransportRegistration","constructor",
"SmartSubtransportRegistration<T>","commander boundary lazy-class degenerate","CreateRegistrationPointer","wrapper stateless",
"SmartSubtransportRegistration<T>","commander boundary lazy-class degenerate","CreateFunctionPointer","wrapper stateless",
"SmartSubtransportRegistration<T>","commander boundary lazy-class degenerate","Free","set",
"SmartSubtransport","boundary","CertificateCheck","property controller",
"SmartSubtransport","boundary","AcquireCredentials","property wrapper",
"SmartSubtransport","boundary","Close","empty",
"SmartSubtransport","boundary","Dispose","set",
"SmartSubtransport","boundary","get","get set collaborator",
"SimilarityOptions","factory controller data-class","SimilarityOptions","constructor",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryInformation","data-provider boundary","RepositoryInformation","constructor",
"RepositoryInformation","data-provider boundary","RepositoryInformation","constructor",
"RepositoryInformation","data-provider boundary","get","predicate wrapper",
"RepositoryInformation","data-provider boundary","get","predicate wrapper",
"RepositoryInformation","data-provider boundary","get","property wrapper",
"RepositoryInformation","data-provider boundary","get","property wrapper",
"Repository","data-provider boundary","Repository","constructor",
"Repository","data-provider boundary","Repository","constructor",
"Repository","data-provider boundary","Repository","copy-constructor",
"Repository","data-provider boundary","Repository","constructor",
"Repository","data-provider boundary","Repository","copy-constructor",
"Repository","data-provider boundary","EagerlyLoadComponentsWithSpecifiedPaths","void-accessor wrapper",
"Repository","data-provider boundary","Dispose","command",
"Repository","data-provider boundary","Dispose","wrapper stateless",
"Repository","data-provider boundary","Lookup","property non-void-command collaborator",
"Repository","data-provider boundary","Lookup","property non-void-command collaborator",
"Repository","data-provider boundary","Lookup","property non-void-command collaborator",
"Repository","data-provider boundary","Lookup","property non-void-command collaborator",
"Repository","data-provider boundary","LookupInternal","property wrapper",
"Repository","data-provider boundary","Lookup","property controller",
"Repository","data-provider boundary","LookupCommit","property non-void-command collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","property factory collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","property collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"RemoteUpdater","entity boundary","RemoteUpdater","constructor",
"RemoteUpdater","entity boundary","RemoteUpdater","constructor",
"RemoteUpdater","entity boundary","RemoteUpdater","constructor",
"RemoteUpdater","entity boundary","GetFetchRefSpecs","property wrapper",
"RemoteUpdater","entity boundary","SetFetchRefSpecs","command collaborator",
"RemoteUpdater","entity boundary","GetPushRefSpecs","property wrapper",
"RemoteUpdater","entity boundary","SetPushRefSpecs","command collaborator",
"RemoteUpdater","entity boundary","set","wrapper",
"RemoteUpdater","entity boundary","set","wrapper",
"RemoteUpdater","entity boundary","set","wrapper",
"RemoteUpdater","entity boundary","get","get collaborator",
"RemoteUpdater","entity boundary","set","non-void-command collaborator",
"RemoteUpdater","entity boundary","get","get collaborator",
"RemoteUpdater","entity boundary","set","non-void-command collaborator",
"RemoteCallbacks","boundary","RemoteCallbacks","constructor",
"RemoteCallbacks","boundary","RemoteCallbacks","constructor",
"RemoteCallbacks","boundary","RemoteCallbacks","constructor",
"RemoteCallbacks","boundary","GenerateCallbacks","factory collaborator",
"RemoteCallbacks","boundary","GitProgressHandler","property wrapper",
"RemoteCallbacks","boundary","GitUpdateTipsHandler","property wrapper",
"RemoteCallbacks","boundary","GitPushUpdateReference","property wrapper",
"RemoteCallbacks","boundary","GitDownloadTransferProgressHandler","property wrapper",
"RemoteCallbacks","boundary","GitPushTransferProgressHandler","property wrapper",
"RemoteCallbacks","boundary","GitPackbuilderProgressHandler","property wrapper",
"RemoteCallbacks","boundary","GitCredentialHandler","controller stateless",
"RemoteCallbacks","boundary","GitCertificateCheck","wrapper stateless",
"RemoteCallbacks","boundary","GitPushNegotiationHandler","controller stateless",
"ReflogEntry","data-provider boundary data-class","ReflogEntry","constructor",
"ReflogEntry","data-provider boundary data-class","ReflogEntry","constructor",
"ReflogEntry","data-provider boundary data-class","get","get collaborator",
"ReflogEntry","data-provider boundary data-class","get","get collaborator",
"ReflogEntry","data-provider boundary data-class","get","get collaborator",
"ReflogEntry","data-provider boundary data-class","get","get",
"ReflogCollection","unclassified","ReflogCollection","constructor",
"ReflogCollection","unclassified","ReflogCollection","constructor",
"ReflogCollection","unclassified","GetEnumerator","property controller",
"ReflogCollection","unclassified","IEnumerable.GetEnumerator","property non-void-command collaborator",
"ReflogCollection","unclassified","get","property non-void-command",
"ReferenceCollection","boundary","ReferenceCollection","constructor",
"ReferenceCollection","boundary","ReferenceCollection","constructor",
"ReferenceCollection","boundary","GetEnumerator","property non-void-command collaborator",
"ReferenceCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property wrapper",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property wrapper",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Remove","command collaborator",
"ReferenceCollection","boundary","Remove","void-accessor wrapper",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property wrapper",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Resolve<T>","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateDirectReferenceTarget","property wrapper",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateSymbolicRefenceTarget","property wrapper",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","MoveHeadTarget<T>","property controller",
"ReferenceCollection","boundary","UpdateHeadTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateHeadTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateHeadTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","RetrieveReferencePtr","property wrapper",
"ReferenceCollection","boundary","FromGlob","property wrapper",
"ReferenceCollection","boundary","ReachableFrom","property factory controller",
"ReferenceCollection","boundary","ReachableFrom","property non-void-command collaborator",
"ReferenceCollection","boundary","Log","property factory wrapper",
"ReferenceCollection","boundary","Log","property factory wrapper",
"ReferenceCollection","boundary","RewriteHistory","void-accessor command collaborator",
"ReferenceCollection","boundary","RewriteHistory","void-accessor command collaborator",
"ReferenceCollection","boundary","EnsureHasLog","wrapper",
"ReferenceCollection","boundary","get","wrapper stateless",
"ReferenceCollection","boundary","get","get collaborator",
"ReferenceCollection","boundary","get","property non-void-command",
"Reference","lazy-class degenerate","Reference","constructor",
"Reference","lazy-class degenerate","Reference","constructor",
"Reference","lazy-class degenerate","Equals","predicate non-void-command collaborator",
"Reference","lazy-class degenerate","Equals","predicate non-void-command",
"Reference","lazy-class degenerate","GetHashCode","property non-void-command",
"Reference","lazy-class degenerate","ToString","incidental",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","get",
"Reference","lazy-class degenerate","get","get",
"Reference","lazy-class degenerate","get","incidental",
"Reference","lazy-class degenerate","get","incidental",
"Reference","lazy-class degenerate","get","incidental",
"Reference","lazy-class degenerate","get","incidental",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","get collaborator",
"RefSpecCollection","entity boundary","RefSpecCollection","constructor",
"RefSpecCollection","entity boundary","RefSpecCollection","constructor",
"RefSpecCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"RefSpecCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"RefSpecCollection","entity boundary","get","property non-void-command",
"RecurseSubmodulesException","empty","RecurseSubmodulesException","constructor",
"RecurseSubmodulesException","empty","RecurseSubmodulesException","constructor",
"RecurseSubmodulesException","empty","RecurseSubmodulesException","constructor",
"RebaseResult","empty","RebaseResult","constructor",
"RebaseResult","empty","RebaseResult","constructor",
"Rebase","entity boundary","Rebase","constructor",
"Rebase","entity boundary","Rebase","constructor",
"Rebase","entity boundary","AnnotatedCommitHandleFromRefHandle","property wrapper",
"Rebase","entity boundary","Start","property non-void-command collaborator",
"Rebase","entity boundary","Continue","property non-void-command collaborator",
"Rebase","entity boundary","Abort","command",
"Rebase","entity boundary","Abort","command collaborator",
"Rebase","entity boundary","GetCurrentStepInfo","property non-void-command factory collaborator",
"Rebase","entity boundary","GetStepInfo","property non-void-command factory collaborator",
"Rebase","entity boundary","GetCurrentStepIndex","property wrapper",
"Rebase","entity boundary","GetTotalStepCount","property wrapper",
"Rebase","entity boundary","EnsureNonBareRepo","unclassified",
"PushUpdate","empty","PushUpdate","constructor",
"PushUpdate","empty","PushUpdate","constructor",
"PushUpdate","empty","PushUpdate","constructor",
"PushStatusError","empty","PushStatusError","constructor",
"PushStatusError","empty","PushStatusError","constructor",
"PullOptions","empty","PullOptions","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","get","collaborator incidental",
"VoidReference","boundary degenerate small-class","VoidReference","constructor",
"VoidReference","boundary degenerate small-class","ResolveToDirectReference","collaborator incidental",
"PatchStats","boundary","PatchStats","constructor",
"PatchStats","boundary","PatchStats","constructor",
"PatchStats","boundary","GetEnumerator","property non-void-command collaborator",
"PatchStats","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"PatchStats","boundary","Dispose","command",
"PatchStats","boundary","Dispose","empty",
"PatchStats","boundary","get","get collaborator",
"PatchStats","boundary","get","property non-void-command collaborator",
"PatchStats","boundary","get","get",
"PatchStats","boundary","get","get",
"PatchStats","boundary","get","wrapper stateless",
"OdbBackendStream","boundary","OdbBackendStream","constructor",
"OdbBackendStream","boundary","OdbBackendStream","constructor",
"OdbBackendStream","boundary","Dispose","set",
"OdbBackendStream","boundary","get","get collaborator",
"OdbBackendStream","boundary","get","get set collaborator",
"Worktree","unclassified","Worktree","constructor",
"Worktree","unclassified","Worktree","copy-constructor",
"Worktree","unclassified","GetWorktreeHandle","property wrapper",
"Worktree","unclassified","Equals","predicate non-void-command collaborator",
"Worktree","unclassified","Equals","predicate non-void-command",
"Worktree","unclassified","Unlock","set",
"Worktree","unclassified","Lock","set",
"Worktree","unclassified","GetHashCode","property non-void-command",
"Worktree","unclassified","ToString","incidental",
"Worktree","unclassified","get","get",
"Worktree","unclassified","get","property non-void-command factory collaborator",
"Worktree","unclassified","get","predicate",
"Worktree","unclassified","get","property",
"Worktree","unclassified","get","property wrapper",
"Worktree","unclassified","get","get collaborator",
"OdbBackend","entity minimal-entity boundary","Free","set",
"OdbBackend","entity minimal-entity boundary","AllocateAndBuildFrom","property non-void-command collaborator",
"OdbBackend","entity minimal-entity boundary","Allocate","factory wrapper stateless",
"OdbBackend","entity minimal-entity boundary","get","get set collaborator",
"RevertOptions","empty","RevertOptions","constructor",
"NoteCollection","entity boundary","NoteCollection","constructor",
"NoteCollection","entity boundary","NoteCollection","constructor",
"NoteCollection","entity boundary","GetEnumerator","get non-void-command collaborator",
"NoteCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"NoteCollection","entity boundary","RetrieveDefaultNamespace","property wrapper",
"NoteCollection","entity boundary","Add","get non-void-command collaborator",
"NoteCollection","entity boundary","Remove","wrapper",
"NoteCollection","entity boundary","get","get",
"NoteCollection","entity boundary","get","wrapper stateless",
"NoteCollection","entity boundary","get","property non-void-command factory collaborator",
"NoteCollection","entity boundary","get","property wrapper",
"NoteCollection","entity boundary","get","property wrapper",
"NoteCollection","entity boundary","get","property wrapper",
"NoteCollection","entity boundary","get","property non-void-command",
"Note","unclassified","Note","constructor",
"Note","unclassified","Note","constructor",
"Note","unclassified","Equals","predicate non-void-command collaborator",
"Note","unclassified","Equals","predicate non-void-command",
"Note","unclassified","GetHashCode","property non-void-command",
"Note","unclassified","get","property non-void-command",
"WorktreeCollection","data-provider boundary","WorktreeCollection","constructor",
"WorktreeCollection","data-provider boundary","WorktreeCollection","constructor",
"WorktreeCollection","data-provider boundary","Add","get property wrapper",
"WorktreeCollection","data-provider boundary","Add","property factory wrapper",
"WorktreeCollection","data-provider boundary","Prune","predicate non-void-command collaborator",
"WorktreeCollection","data-provider boundary","Prune","controller stateless",
"WorktreeCollection","data-provider boundary","Lookup<T>","property wrapper",
"WorktreeCollection","data-provider boundary","GetEnumerator","property non-void-command collaborator",
"WorktreeCollection","data-provider boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"WorktreeCollection","data-provider boundary","get","property wrapper",
"WorktreeCollection","data-provider boundary","get","property non-void-command",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","get","collaborator incidental",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","get","collaborator incidental",
"MergeTreeOptions","empty","MergeTreeOptions","constructor",
"MergeOptions","empty","MergeOptions","constructor",
"MergeAndCheckoutOptionsBase","data-provider boundary small-class","MergeAndCheckoutOptionsBase","constructor",
"MergeAndCheckoutOptionsBase","data-provider boundary small-class","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"MergeAndCheckoutOptionsBase","data-provider boundary small-class","get","property wrapper",
"MatchedPathsAggregator","entity boundary","OnGitDiffNotify","property non-void-command collaborator",
"MatchedPathsAggregator","entity boundary","GetEnumerator","property non-void-command collaborator",
"MatchedPathsAggregator","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Line","empty","Line","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","get","collaborator incidental",
"IndexReucEntryCollection","boundary","IndexReucEntryCollection","constructor",
"IndexReucEntryCollection","boundary","IndexReucEntryCollection","constructor",
"IndexReucEntryCollection","boundary","AllIndexReucs","factory controller",
"IndexReucEntryCollection","boundary","GetEnumerator","property non-void-command collaborator",
"IndexReucEntryCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"IndexReucEntryCollection","boundary","get","property wrapper",
"IndexReucEntryCollection","boundary","get","property wrapper",
"IndexReucEntry","unclassified","IndexReucEntry","constructor",
"IndexReucEntry","unclassified","Equals","predicate non-void-command collaborator",
"IndexReucEntry","unclassified","Equals","predicate non-void-command",
"IndexReucEntry","unclassified","GetHashCode","property non-void-command",
"IndexReucEntry","unclassified","get","property wrapper",
"IndexNameEntryCollection","boundary","IndexNameEntryCollection","constructor",
"IndexNameEntryCollection","boundary","IndexNameEntryCollection","constructor",
"IndexNameEntryCollection","boundary","AllIndexNames","factory controller",
"IndexNameEntryCollection","boundary","GetEnumerator","property non-void-command collaborator",
"IndexNameEntryCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"IndexNameEntryCollection","boundary","get","property wrapper",
"IndexNameEntry","unclassified","IndexNameEntry","constructor",
"IndexNameEntry","unclassified","Equals","predicate non-void-command collaborator",
"IndexNameEntry","unclassified","Equals","predicate non-void-command",
"IndexNameEntry","unclassified","GetHashCode","property non-void-command",
"IndexNameEntry","unclassified","get","property wrapper",
"RewriteHistoryOptions","empty","RewriteHistoryOptions","constructor",
"IndexEntry","unclassified","Equals","predicate non-void-command collaborator",
"IndexEntry","unclassified","Equals","predicate non-void-command",
"IndexEntry","unclassified","GetHashCode","property non-void-command",
"IndexEntry","unclassified","get","property non-void-command",
"Index","boundary","Index","constructor",
"Index","boundary","Index","copy-constructor",
"Index","boundary","Index","constructor",
"Index","boundary","Index","constructor",
"Index","boundary","AllIndexEntries","factory controller",
"Index","boundary","GetEnumerator","property non-void-command collaborator",
"Index","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Index","boundary","Replace","void-accessor wrapper",
"Index","boundary","Clear","wrapper",
"Index","boundary","RemoveFromIndex","wrapper",
"Index","boundary","Remove","command",
"Index","boundary","Add","wrapper",
"Index","boundary","Add","void-accessor command collaborator",
"Index","boundary","Replace","command collaborator",
"Index","boundary","AddEntryToTheIndex","void-accessor wrapper",
"Index","boundary","Replace","command collaborator",
"Index","boundary","Replace","command collaborator",
"Index","boundary","Replace","command collaborator",
"Index","boundary","Write","wrapper",
"Index","boundary","WriteToTree","property non-void-command collaborator",
"Index","boundary","get","get collaborator",
"Index","boundary","get","property wrapper",
"Index","boundary","get","predicate wrapper",
"Index","boundary","get","property wrapper",
"Index","boundary","get","property wrapper",
"Index","boundary","get","get collaborator",
"Index","boundary","get","wrapper stateless",
"Ignore","unclassified","Ignore","constructor",
"Ignore","unclassified","Ignore","constructor",
"Ignore","unclassified","AddTemporaryRules","controller",
"Ignore","unclassified","ResetAllTemporaryRules","wrapper",
"Ignore","unclassified","IsPathIgnored","predicate wrapper",
"Identity","data-provider lazy-class","Identity","constructor",
"Identity","data-provider lazy-class","BuildNowSignatureHandle","wrapper stateless",
"Identity","data-provider lazy-class","get","get",
"Identity","data-provider lazy-class","get","get",
"TransientIndex","commander small-class","TransientIndex","constructor",
"TransientIndex","commander small-class","TransientIndex","constructor",
"TransientIndex","commander small-class","Dispose","command",
"NullHistoryDivergence","boundary degenerate small-class","get","collaborator incidental",
"GlobalSettings","unclassified","GlobalSettings","constructor",
"GlobalSettings","unclassified","set","set collaborator",
"GlobalSettings","unclassified","get","get collaborator",
"GlobalSettings","unclassified","get","property",
"GlobalSettings","unclassified","set","set",
"GitObjectMetadata","entity boundary small-class","GitObjectMetadata","constructor",
"GitObjectMetadata","entity boundary small-class","get","property non-void-command collaborator",
"GitObject","unclassified","GitObject","constructor",
"GitObject","unclassified","GitObject","constructor",
"GitObject","unclassified","Peel<T>","property non-void-command collaborator",
"GitObject","unclassified","Peel<T>","property non-void-command collaborator",
"GitObject","unclassified","Equals","predicate non-void-command collaborator",
"GitObject","unclassified","Equals","predicate non-void-command",
"GitObject","unclassified","GetHashCode","property non-void-command",
"GitObject","unclassified","ToString","property non-void-command",
"GitObject","unclassified","get","property non-void-command",
"GitObject","unclassified","get","get collaborator",
"GitLink","small-class","GitLink","constructor",
"GitLink","small-class","GitLink","constructor",
"GitLink","small-class","get","property non-void-command",
"RepositoryStatus","entity data-provider boundary","RepositoryStatus","constructor",
"RepositoryStatus","entity data-provider boundary","RepositoryStatus","constructor",
"RepositoryStatus","entity data-provider boundary","AddStatusEntryForDelta","void-accessor command collaborator",
"RepositoryStatus","entity data-provider boundary","GetEnumerator","property non-void-command collaborator",
"RepositoryStatus","entity data-provider boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"RepositoryStatus","entity data-provider boundary","get","property non-void-command factory collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get",
"RepositoryStatus","entity data-provider boundary","get","wrapper stateless",
"FilteringOptions","empty","FilteringOptions","constructor",
"FilterRegistration","unclassified","FilterRegistration","constructor",
"FilterRegistration","unclassified","~FilterRegistration","destructor",
"FilterRegistration","unclassified","Free","set",
"FilterRegistration","unclassified","get","predicate",
"FilterRegistration","unclassified","get","get",
"FetchOptionsBase","empty","FetchOptionsBase","constructor",
"FetchHead","boundary degenerate small-class","FetchHead","constructor",
"FetchHead","boundary degenerate small-class","FetchHead","constructor",
"FetchHead","boundary degenerate small-class","get","collaborator incidental",
"ExplicitPathsOptions","empty","ExplicitPathsOptions","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"DirectReference","data-provider data-class small-class","DirectReference","constructor",
"DirectReference","data-provider data-class small-class","DirectReference","constructor",
"DirectReference","data-provider data-class small-class","ResolveToDirectReference","get",
"DirectReference","data-provider data-class small-class","get","get collaborator",
"DetachedHead","degenerate small-class","DetachedHead","constructor",
"DetachedHead","degenerate small-class","Shorten","incidental",
"DetachedHead","degenerate small-class","get","collaborator incidental",
"DefaultCredentials","boundary degenerate small-class","GitCredentialHandler","wrapper stateless",
"TreeEntryChanges","data-provider boundary small-class","TreeEntryChanges","constructor",
"TreeEntryChanges","data-provider boundary small-class","TreeEntryChanges","constructor",
"TreeEntryChanges","data-provider boundary small-class","get","property wrapper",
"WriteStream","commander degenerate","WriteStream","copy-constructor",
"WriteStream","commander degenerate","Flush","empty",
"WriteStream","commander degenerate","SetLength","stateless",
"WriteStream","commander degenerate","Read","stateless",
"WriteStream","commander degenerate","Seek","collaborator stateless",
"WriteStream","commander degenerate","Write","command",
"WriteStream","commander degenerate","get","incidental",
"WriteStream","commander degenerate","get","incidental",
"WriteStream","commander degenerate","get","incidental",
"WriteStream","commander degenerate","get","stateless",
"WriteStream","commander degenerate","set","stateless",
"WriteStream","commander degenerate","get","stateless",
"StrictUtf8Marshaler","boundary degenerate small-class","StrictUtf8Marshaler","constructor",
"StrictUtf8Marshaler","boundary degenerate small-class","StrictUtf8Marshaler","constructor",
"StrictUtf8Marshaler","boundary degenerate small-class","MarshalNativeToManaged","wrapper stateless",
"LaxUtf8NoCleanupMarshaler","degenerate small-class","CleanUpNativeData","empty",
"RawContentStream","commander small-class","RawContentStream","constructor",
"RawContentStream","commander small-class","Dispose","command",
"PushTransferCallbacks","small-class","PushTransferCallbacks","constructor",
"PushTransferCallbacks","small-class","GenerateCallback","property factory collaborator",
"PushTransferCallbacks","small-class","OnGitTransferProgress","wrapper stateless",
"PathCase","small-class","PathCase","constructor",
"PathCase","small-class","StartsWith","predicate controller",
"PathCase","small-class","get","get collaborator",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"PackBuilder","entity boundary","PackBuilder","constructor",
"PackBuilder","entity boundary","Add<T>","void-accessor command collaborator",
"PackBuilder","entity boundary","AddRecursively<T>","void-accessor command collaborator",
"PackBuilder","entity boundary","Add","wrapper",
"PackBuilder","entity boundary","AddRecursively","wrapper",
"PackBuilder","entity boundary","IDisposable.Dispose","command",
"PackBuilder","entity boundary","Write","wrapper",
"PackBuilder","entity boundary","SetMaximumNumberOfThreads","property wrapper",
"PackBuilder","entity boundary","get","property wrapper",
"PackBuilder","entity boundary","get","property wrapper",
"PackBuilder","entity boundary","get","get collaborator",
"PackbuilderCallbacks","small-class","PackbuilderCallbacks","constructor",
"PackbuilderCallbacks","small-class","GenerateCallback","property factory collaborator",
"PackbuilderCallbacks","small-class","OnGitPackBuilderProgress","wrapper stateless",
"RemoteHandle","boundary small-class","RemoteHandle","constructor",
"RemoteHandle","boundary small-class","RemoteHandle","constructor",
"RemoteHandle","boundary small-class","Free","wrapper",
"FilePath","data-provider","FilePath","constructor",
"FilePath","data-provider","ToString","incidental",
"FilePath","data-provider","Equals","predicate wrapper",
"FilePath","data-provider","Equals","predicate non-void-command collaborator",
"FilePath","data-provider","GetHashCode","property non-void-command",
"FilePath","data-provider","get","get",
"FilePath","data-provider","get","get",
"EncodingMarshaler","data-provider boundary degenerate","EncodingMarshaler","constructor",
"EncodingMarshaler","data-provider boundary degenerate","CleanUpManagedData","empty",
"EncodingMarshaler","data-provider boundary degenerate","CleanUpNativeData","wrapper stateless",
"EncodingMarshaler","data-provider boundary degenerate","GetNativeDataSize","incidental",
"EncodingMarshaler","data-provider boundary degenerate","MarshalManagedToNative","property wrapper",
"EncodingMarshaler","data-provider boundary degenerate","MarshalNativeToManaged","property wrapper",
"ArrayMarshaler<T>","data-provider","ArrayMarshaler","constructor",
"ArrayMarshaler<T>","data-provider","ToArray","get",
"ArrayMarshaler<T>","data-provider","Dispose","wrapper",
"ArrayMarshaler<T>","data-provider","get","get",
"StashFixture","commander","CannotAddStashAgainstBareRepository","command collaborator",
"StashFixture","commander","CanAddAndRemoveStash","command collaborator",
"StashFixture","commander","AddingAStashWithNoMessageGeneratesADefaultOne","command collaborator",
"StashFixture","commander","AddStashWithBadParamsShouldThrows","command",
"StashFixture","commander","StashingAgainstCleanWorkDirShouldReturnANullStash","command collaborator",
"StashFixture","commander","CanStashWithoutOptions","command collaborator",
"StashFixture","commander","CanStashAndKeepIndex","command collaborator",
"StashFixture","commander","CanStashIgnoredFiles","command collaborator",
"StashFixture","commander","CanStashAndApplyWithOptions","command",
"StashFixture","commander","CanStashAndPop","command",
"StashFixture","commander","StashFailsWithUncommittedChangesIntheIndex","command",
"StashFixture","commander","StashCallsTheCallback","command",
"StashFixture","commander","StashApplyReportsNotFound","command",
"StashFixture","commander","RemovingStashWithBadParamShouldThrow","command",
"StashFixture","commander","CanGetStashByIndexer","command collaborator",
"StashFixture","commander","GettingStashWithBadIndexThrows","command",
"StashFixture","commander","GettingAStashThatDoesNotExistReturnsNull","command",
"PatchEntryChangesFixture","commander boundary small-class","PatchEntryBasics","command collaborator",
"Configuration","entity boundary","Configuration","constructor",
"Configuration","entity boundary","Configuration","copy-constructor",
"Configuration","entity boundary","Init","void-accessor set collaborator",
"Configuration","entity boundary","NormalizeConfigPath","wrapper stateless",
"Configuration","entity boundary","HasConfig","predicate non-void-command collaborator",
"Configuration","entity boundary","Dispose","command",
"Configuration","entity boundary","Unset","predicate non-void-command",
"Configuration","entity boundary","Unset","predicate non-void-command collaborator",
"Configuration","entity boundary","UnsetAll","predicate non-void-command",
"Configuration","entity boundary","UnsetAll","predicate non-void-command collaborator",
"Configuration","entity boundary","Dispose","command",
"Configuration","entity boundary","Get<T>","property non-void-command collaborator",
"Configuration","entity boundary","Get<T>","property non-void-command collaborator",
"Configuration","entity boundary","Get<T>","property non-void-command collaborator",
"Configuration","entity boundary","Get<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","Set<T>","wrapper stateless",
"Configuration","entity boundary","Set<T>","command collaborator",
"Configuration","entity boundary","Add","command",
"Configuration","entity boundary","Add","command collaborator",
"Configuration","entity boundary","Find","property non-void-command collaborator",
"Configuration","entity boundary","Find","property non-void-command collaborator",
"Configuration","entity boundary","RetrieveConfigurationHandle","wrapper stateless",
"Configuration","entity boundary","GetEnumerator","property non-void-command collaborator",
"Configuration","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Configuration","entity boundary","BuildConfigEntries","property wrapper",
"Configuration","entity boundary","BuildSignature","property non-void-command factory collaborator",
"Configuration","entity boundary","BuildSignatureOrThrow","property non-void-command collaborator",
"Configuration","entity boundary","Snapshot","property wrapper",
"Configuration","entity boundary","WithinTransaction","wrapper",
"FileHistory","entity boundary small-class","FileHistory","constructor",
"FileHistory","entity boundary small-class","FileHistory","constructor",
"FileHistory","entity boundary small-class","GetEnumerator","property non-void-command collaborator",
"FileHistory","entity boundary small-class","IEnumerable.GetEnumerator","property non-void-command collaborator",
"TreeEntryDefinition","unclassified","TreeEntryDefinition","constructor",
"TreeEntryDefinition","unclassified","Equals","predicate non-void-command collaborator",
"TreeEntryDefinition","unclassified","Equals","predicate non-void-command",
"TreeEntryDefinition","unclassified","GetHashCode","property non-void-command",
"TreeEntryDefinition","unclassified","get","get collaborator",
"CommitFilter","data-provider boundary small-class","CommitFilter","constructor",
"CommitFilter","data-provider boundary small-class","get","property wrapper",
"CommitFilter","data-provider boundary small-class","get","property wrapper",
"Filter","boundary","Filter","copy-constructor",
"Filter","boundary","~Filter","destructor",
"Filter","boundary","Complete","empty",
"Filter","boundary","Initialize","empty",
"Filter","boundary","Create","empty",
"Filter","boundary","Clean","controller stateless",
"Filter","boundary","Smudge","controller stateless",
"Filter","boundary","Equals","predicate non-void-command collaborator",
"Filter","boundary","Equals","predicate non-void-command",
"Filter","boundary","GetHashCode","property non-void-command",
"Filter","boundary","InitializeCallback","property non-void-command",
"Filter","boundary","StreamCreateCallback","property non-void-command collaborator",
"Filter","boundary","StreamCloseCallback","property non-void-command collaborator",
"Filter","boundary","StreamFreeCallback","command collaborator",
"Filter","boundary","StreamWriteCallback","property non-void-command collaborator",
"Filter","boundary","get","get",
"Filter","boundary","get","get collaborator",
"Filter","boundary","get","get collaborator",
"TarWriter","boundary","TarWriter","constructor",
"TarWriter","boundary","Dispose","command",
"TarWriter","boundary","Write","void-accessor command collaborator",
"TarWriter","boundary","AlignTo512","wrapper stateless",
"TarWriter","boundary","WriteHeader","controller stateless",
"TarWriter","boundary","WriteExtendedHeader","wrapper stateless",
"TarWriter","boundary","get","get collaborator",
"CherryPickResult","empty","CherryPickResult","constructor",
"CherryPickResult","empty","CherryPickResult","constructor",
"Blob","entity boundary","Blob","constructor",
"Blob","entity boundary","Blob","constructor",
"Blob","entity boundary","GetContentStream","property wrapper",
"Blob","entity boundary","GetContentStream","property wrapper",
"Blob","entity boundary","GetContentText","property non-void-command",
"Blob","entity boundary","GetContentText","property non-void-command collaborator",
"Blob","entity boundary","GetContentText","property non-void-command collaborator",
"Blob","entity boundary","GetContentText","property non-void-command collaborator",
"CheckoutOptions","entity boundary small-class","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"CheckoutOptions","entity boundary small-class","get","property non-void-command collaborator",
"CheckoutCallbacks","data-provider boundary","CheckoutCallbacks","constructor",
"CheckoutCallbacks","data-provider boundary","OnGitCheckoutProgress","wrapper",
"CheckoutCallbacks","data-provider boundary","OnGitCheckoutNotify","property wrapper",
"CheckoutCallbacks","data-provider boundary","get","property collaborator",
"CheckoutCallbacks","data-provider boundary","get","property collaborator",
"PackBuilderOptions","data-class","PackBuilderOptions","constructor",
"PackBuilderOptions","data-class","set","set",
"PackBuilderOptions","data-class","get","get",
"PackBuilderOptions","data-class","set","set",
"PackBuilderOptions","data-class","get","get",
"StrictFilePathMarshaler","entity boundary small-class","MarshalManagedToNative","property non-void-command collaborator",
"BlameHunkCollection","entity boundary","BlameHunkCollection","constructor",
"BlameHunkCollection","entity boundary","BlameHunkCollection","constructor",
"BlameHunkCollection","entity boundary","HunkForLine","property non-void-command collaborator",
"BlameHunkCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"BlameHunkCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"BlameHunkCollection","entity boundary","get","get collaborator",
"ContentChangeStats","empty","ContentChangeStats","constructor",
"ContentChangeStats","empty","ContentChangeStats","constructor",
"SymbolicReference","data-provider boundary lazy-class degenerate","SymbolicReference","constructor",
"SymbolicReference","data-provider boundary lazy-class degenerate","SymbolicReference","constructor",
"SymbolicReference","data-provider boundary lazy-class degenerate","ResolveToDirectReference","wrapper stateless",
"SymbolicReference","data-provider boundary lazy-class degenerate","get","get collaborator",
"SymbolicReference","data-provider boundary lazy-class degenerate","get","wrapper stateless",
"SubmoduleUpdateOptions","data-provider boundary","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"SubmoduleUpdateOptions","data-provider boundary","get","get collaborator",
"SubmoduleUpdateOptions","data-provider boundary","get","get collaborator",
"MergeHead","empty","MergeHead","constructor",
"MergeHead","empty","MergeHead","constructor",
"TreeEntryHandle","boundary small-class","TreeEntryHandle","constructor",
"TreeEntryHandle","boundary small-class","TreeEntryHandle","constructor",
"TreeEntryHandle","boundary small-class","Free","wrapper",
"BeforeRebaseStepInfo","empty","BeforeRebaseStepInfo","constructor",
"BeforeRebaseStepInfo","empty","BeforeRebaseStepInfo","constructor",
"BranchUpdater","commander","BranchUpdater","constructor",
"BranchUpdater","commander","BranchUpdater","constructor",
"BranchUpdater","commander","UnsetUpstream","command",
"BranchUpdater","commander","SetUpstream","command",
"BranchUpdater","commander","SetUpstreamBranch","command",
"BranchUpdater","commander","SetUpstreamRemote","command",
"BranchUpdater","commander","GetUpstreamInformation","void-accessor command",
"BranchUpdater","commander","set","non-void-command",
"BranchUpdater","commander","set","non-void-command",
"BranchUpdater","commander","set","non-void-command",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","get","collaborator incidental",
"TreeFixture","commander boundary","CanCompareTwoTreeEntries","command collaborator",
"TreeFixture","commander boundary","CanConvertEntryToBlob","command collaborator",
"TreeFixture","commander boundary","CanConvertEntryToTree","command collaborator",
"TreeFixture","commander boundary","CanEnumerateBlobs","command collaborator",
"TreeFixture","commander boundary","CanEnumerateSubTrees","command collaborator",
"TreeFixture","commander boundary","CanEnumerateTreeEntries","command collaborator",
"TreeFixture","commander boundary","CanGetEntryByName","command collaborator",
"TreeFixture","commander boundary","GettingAnUknownTreeEntryReturnsNull","command collaborator",
"TreeFixture","commander boundary","CanGetEntryCountFromTree","command collaborator",
"TreeFixture","commander boundary","CanReadEntryAttributes","command collaborator",
"TreeFixture","commander boundary","CanReadTheTreeData","command collaborator",
"TreeFixture","commander boundary","TreeDataIsPresent","command collaborator",
"TreeFixture","commander boundary","TreeUsesPosixStylePaths","wrapper",
"TreeFixture","commander boundary","CanRetrieveTreeEntryPath","command collaborator",
"TreeFixture","commander boundary","CanParseSymlinkTreeEntries","command collaborator",
"TreeFixture","commander boundary","CanTellIfATreeIsMissing","command collaborator",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","get","collaborator incidental",
"TagCollection","entity boundary","TagCollection","constructor",
"TagCollection","entity boundary","TagCollection","constructor",
"TagCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"TagCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","get wrapper",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","get wrapper",
"TagCollection","entity boundary","Remove","wrapper",
"TagCollection","entity boundary","Remove","void-accessor command collaborator",
"TagCollection","entity boundary","get","property non-void-command collaborator",
"TagCollection","entity boundary","get","property non-void-command",
"RebaseStepInfo","empty","RebaseStepInfo","constructor",
"RebaseStepInfo","empty","RebaseStepInfo","constructor",
"GitOdbBackendStream","empty","GitOdbBackendStream","constructor",
"CompareOptions","empty","CompareOptions","constructor",
"SmartSubtransportFixture","commander boundary degenerate","CustomSmartSubtransportTest","command collaborator",
"SmartSubtransportFixture","commander boundary degenerate","CannotReregisterScheme","wrapper stateless",
"SmartSubtransportFixture","commander boundary degenerate","CannotUnregisterTwice","wrapper stateless",
"RemoveFixture","commander boundary","CanRemoveAnUnalteredFileFromTheIndexWithoutRemovingItFromTheWorkingDirectory","command collaborator",
"RemoveFixture","commander boundary","RemovingAModifiedFileWhoseChangesHaveBeenPromotedToTheIndexAndWithAdditionalModificationsMadeToItThrows","command",
"RemoveFixture","commander boundary","CanRemoveAFolderThroughUsageOfPathspecsForNewlyAddedFiles","command",
"RemoveFixture","commander boundary","CanRemoveAFolderThroughUsageOfPathspecsForFilesAlreadyInTheIndexAndInTheHEAD","command",
"RemoveFixture","commander boundary","RemovingAnUnknownFileWithLaxExplicitPathsValidationDoesntThrow","command collaborator",
"RemoveFixture","commander boundary","RemovingAnUnknownFileThrowsIfExplicitPath","command collaborator",
"RemoveFixture","commander boundary","RemovingFileWithBadParamsThrows","command collaborator",
"ExpectedFetchState","entity commander boundary","ExpectedFetchState","constructor",
"ExpectedFetchState","entity commander boundary","AddExpectedBranch","command collaborator",
"ExpectedFetchState","entity commander boundary","AddExpectedTag","command collaborator",
"ExpectedFetchState","entity commander boundary","RemoteUpdateTipsHandler","predicate non-void-command collaborator",
"ExpectedFetchState","entity commander boundary","CheckUpdatedReferences","command collaborator",
"Platform","boundary degenerate small-class","get","wrapper stateless",
"ContentChanges","unclassified","ContentChanges","constructor",
"ContentChanges","unclassified","ContentChanges","constructor",
"ContentChanges","unclassified","ContentChanges","constructor",
"ContentChanges","unclassified","AppendToPatch","command",
"ContentChanges","unclassified","FileCallback","property set",
"ContentChanges","unclassified","HunkCallback","property non-void-command",
"ContentChanges","unclassified","LineCallback","property non-void-command",
"ContentChanges","unclassified","get","property non-void-command",
"ContentChanges","unclassified","get","property wrapper",
"ReferenceFixture","commander boundary","CanAddADirectReference","command collaborator",
"ReferenceFixture","commander boundary","CanAddADirectReferenceFromRevParseSpec","command collaborator",
"ReferenceFixture","commander boundary","CreatingADirectReferenceWithARevparseSpecPointingAtAnUnknownObjectFails","command",
"ReferenceFixture","commander boundary","CanAddASymbolicReferenceFromTheTargetName","command collaborator",
"ReferenceFixture","commander boundary","CanAddASymbolicReferenceFromTheTargetReference","command collaborator",
"ReferenceFixture","commander boundary","BlindlyCreatingADirectReferenceOverAnExistingOneThrows","command",
"ReferenceFixture","commander boundary","BlindlyCreatingASymbolicReferenceOverAnExistingOneThrows","command",
"ReferenceFixture","commander boundary","CanAddAndOverwriteADirectReference","command collaborator",
"ReferenceFixture","commander boundary","CanAddAndOverwriteASymbolicReference","command collaborator",
"ReferenceFixture","commander boundary","AddWithEmptyStringForTargetThrows","command",
"ReferenceFixture","commander boundary","AddWithEmptyStringThrows","command",
"ReferenceFixture","commander boundary","AddWithNullForTargetThrows","command",
"ReferenceFixture","commander boundary","AddWithNullStringThrows","command",
"ReferenceFixture","commander boundary","CanRemoveAReference","command",
"ReferenceFixture","commander boundary","CanRemoveANonExistingReference","command",
"ReferenceFixture","commander boundary","ARemovedReferenceCannotBeLookedUp","command",
"ReferenceFixture","commander boundary","RemovingAReferenceDecreasesTheRefsCount","command",
"ReferenceFixture","commander boundary","RemoveWithEmptyNameThrows","command",
"ReferenceFixture","commander boundary","RemoveWithNullNameThrows","command",
"ReferenceFixture","commander boundary","CanListAllReferencesEvenCorruptedOnes","command",
"ReferenceFixture","commander boundary","CanResolveHeadByName","command collaborator",
"ReferenceFixture","commander boundary","CanResolveReferenceToALightweightTag","command collaborator",
"ReferenceFixture","commander boundary","CanResolveReferenceToAnAnnotatedTag","command collaborator",
"ReferenceFixture","commander boundary","CanResolveRefsByName","command collaborator",
"ReferenceFixture","commander boundary","ResolvingWithEmptyStringThrows","command collaborator",
"ReferenceFixture","commander boundary","ResolvingWithNullThrows","command collaborator",
"ReferenceFixture","commander boundary","CanUpdateTargetOfADirectReference","command collaborator",
"ReferenceFixture","commander boundary","CanUpdateTargetOfADirectReferenceWithAnAbbreviatedSha","command collaborator",
"ReferenceFixture","commander boundary","CanUpdateTargetOfASymbolicReference","command collaborator",
"ReferenceFixture","commander boundary","CanUpdateHeadWithARevparseSpec","command collaborator",
"ReferenceFixture","commander boundary","CanUpdateHeadWithEitherAnObjectIdOrAReference","command collaborator",
"ReferenceFixture","commander boundary","CanUpdateTargetOfADirectReferenceWithARevparseSpec","command collaborator",
"ReferenceFixture","commander boundary","UpdatingADirectRefWithSymbolFails","command collaborator",
"ReferenceFixture","commander boundary","CanUpdateTargetOfADirectReferenceWithAShortReferenceNameAsARevparseSpec","command collaborator",
"ReferenceFixture","commander boundary","UpdatingAReferenceTargetWithBadParametersFails","command",
"ReferenceFixture","commander boundary","UpdatingADirectReferenceTargetWithARevparsePointingAtAnUnknownObjectFails","command",
"ReferenceFixture","commander boundary","CanRenameAReferenceToADeeperReferenceHierarchy","command collaborator",
"ReferenceFixture","commander boundary","CanRenameAReferenceToAUpperReferenceHierarchy","command collaborator",
"ReferenceFixture","commander boundary","CanRenameAReferenceToADifferentReferenceHierarchy","command collaborator",
"ReferenceFixture","commander boundary","RenamingANonExistingReferenceThrows","command",
"ReferenceFixture","commander boundary","CanRenameAndOverWriteAExistingReference","command collaborator",
"ReferenceFixture","commander boundary","BlindlyOverwritingAExistingReferenceThrows","command",
"ReferenceFixture","commander boundary","RenamingAReferenceDoesNotDecreaseTheRefsCount","command",
"ReferenceFixture","commander boundary","CanLookupARenamedReference","command collaborator",
"ReferenceFixture","commander boundary","CanFilterReferencesWithAGlob","command",
"ReferenceFixture","commander boundary","CanTellIfAReferenceIsValid","wrapper stateless",
"ReferenceFixture","commander boundary","CanUpdateTheTargetOfASymbolicReferenceWithAnotherSymbolicReference","command collaborator",
"ReferenceFixture","commander boundary","LookingForLowerCaseHeadThrows","command",
"ReferenceFixture","commander boundary","CanIdentifyReferenceKind","command",
"ReferenceFixture","commander boundary","CanQueryReachability","command collaborator",
"ReferenceFixture","commander boundary","CanQueryReachabilityAmongASubsetOfreferences","command collaborator",
"ReferenceFixture","commander boundary","CanHandleInvalidArguments","command",
"BranchCollection","entity boundary","BranchCollection","constructor",
"BranchCollection","entity boundary","BranchCollection","constructor",
"BranchCollection","entity boundary","BuildFromReferenceName","property non-void-command collaborator",
"BranchCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"BranchCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"BranchCollection","entity boundary","Add","property non-void-command collaborator",
"BranchCollection","entity boundary","Add","property non-void-command collaborator",
"BranchCollection","entity boundary","Add","property non-void-command collaborator",
"BranchCollection","entity boundary","Add","property wrapper",
"BranchCollection","entity boundary","Remove","command",
"BranchCollection","entity boundary","Remove","command collaborator",
"BranchCollection","entity boundary","Remove","void-accessor command collaborator",
"BranchCollection","entity boundary","Rename","property non-void-command collaborator",
"BranchCollection","entity boundary","Rename","property non-void-command collaborator",
"BranchCollection","entity boundary","Rename","property non-void-command collaborator",
"BranchCollection","entity boundary","Rename","property non-void-command factory collaborator",
"BranchCollection","entity boundary","Update","get wrapper",
"BranchCollection","entity boundary","get","property non-void-command collaborator",
"BranchCollection","entity boundary","get","property non-void-command",
"TagFixture","commander boundary","CanAddALightWeightTagFromSha","command collaborator",
"TagFixture","commander boundary","CanAddALightWeightTagFromAGitObject","command collaborator",
"TagFixture","commander boundary","CanAddALightWeightTagFromAbbreviatedSha","command collaborator",
"TagFixture","commander boundary","CanAddALightweightTagFromABranchName","command collaborator",
"TagFixture","commander boundary","CanAddALightweightTagFromARevparseSpec","command collaborator",
"TagFixture","commander boundary","CanAddAndOverwriteALightweightTag","command collaborator",
"TagFixture","commander boundary","CanAddATagWithNameContainingASlash","command collaborator",
"TagFixture","commander boundary","CreatingATagWithNameMatchingAnAlreadyExistingReferenceHierarchyThrows","command",
"TagFixture","commander boundary","CanAddAnAnnotatedTagFromABranchName","command collaborator",
"TagFixture","commander boundary","CanAddAnAnnotatedTagFromSha","command collaborator",
"TagFixture","commander boundary","CanAddAnAnnotatedTagFromObject","command collaborator",
"TagFixture","commander boundary","CanAddAnAnnotatedTagFromARevparseSpec","command collaborator",
"TagFixture","commander boundary","CanAddAnAnnotatedTagWithAnEmptyMessage","command collaborator",
"TagFixture","commander boundary","CanAddAndOverwriteAnAnnotatedTag","command collaborator",
"TagFixture","commander boundary","CreatingAnAnnotatedTagIsDeterministic","command collaborator",
"TagFixture","commander boundary","CreatingATagInAEmptyRepositoryThrows","command",
"TagFixture","commander boundary","CreatingATagForHeadInAEmptyRepositoryThrows","command",
"TagFixture","commander boundary","CreatingATagForAnUnknowReferenceThrows","command",
"TagFixture","commander boundary","CreatingATagForAnUnknowObjectIdThrows","command",
"TagFixture","commander boundary","CanAddATagForImplicitHead","command collaborator",
"TagFixture","commander boundary","CanAddATagForImplicitHeadInDetachedState","command collaborator",
"TagFixture","commander boundary","CreatingADuplicateTagThrows","command",
"TagFixture","commander boundary","CreatingATagWithANonValidNameShouldFail","command",
"TagFixture","commander boundary","CanAddATagUsingHead","command collaborator",
"TagFixture","commander boundary","CanAddATagPointingToATree","command collaborator",
"TagFixture","commander boundary","CanReadTagWithoutTagger","command collaborator",
"TagFixture","commander boundary","CanAddATagPointingToABlob","command collaborator",
"TagFixture","commander boundary","CreatingALightweightTagPointingToATagAnnotationGeneratesAnAnnotatedTagReusingThePointedAtTagAnnotation","command collaborator",
"TagFixture","commander boundary","CanAddAnAnnotatedTagPointingToATagAnnotation","command collaborator",
"TagFixture","commander boundary","BlindlyCreatingALightweightTagOverAnExistingOneThrows","command",
"TagFixture","commander boundary","BlindlyCreatingAnAnnotatedTagOverAnExistingOneThrows","command",
"TagFixture","commander boundary","AddTagWithADuplicateNameThrows","command",
"TagFixture","commander boundary","AddTagWithEmptyNameThrows","command",
"TagFixture","commander boundary","AddTagWithEmptyTargetThrows","command",
"TagFixture","commander boundary","AddTagWithNotExistingTargetThrows","command",
"TagFixture","commander boundary","AddTagWithNullMessageThrows","command",
"TagFixture","commander boundary","AddTagWithNullNameThrows","command",
"TagFixture","commander boundary","AddTagWithNullSignatureThrows","command",
"TagFixture","commander boundary","AddTagWithNullTargetThrows","command",
"TagFixture","commander boundary","CanRemoveATagThroughItsName","command",
"TagFixture","commander boundary","CanRemoveATagThroughItsCanonicalName","command",
"TagFixture","commander boundary","CanRemoveATag","command collaborator",
"TagFixture","commander boundary","ARemovedTagCannotBeLookedUp","command",
"TagFixture","commander boundary","RemovingATagDecreasesTheTagsCount","command",
"TagFixture","commander boundary","RemovingAnUnknownTagShouldFail","command",
"TagFixture","commander boundary","GetTagByNameWithBadParamsThrows","command collaborator",
"TagFixture","commander boundary","CanListTags","command",
"TagFixture","commander boundary","CanListAllTagsInAEmptyRepository","command",
"TagFixture","commander boundary","CanLookupALightweightTag","command collaborator",
"TagFixture","commander boundary","CanLookupATagByItsCanonicalName","command collaborator",
"TagFixture","commander boundary","CanLookupAnAnnotatedTag","command collaborator",
"TagFixture","commander boundary","LookupEmptyTagNameThrows","command collaborator",
"TagFixture","commander boundary","LookupNullTagNameThrows","command collaborator",
"TagFixture","commander boundary","CanRetrieveThePeeledTargetOfATagPointingToATag","command collaborator",
"TagFixture","commander boundary","PeeledTargetAndTargetAreEqualWhenTagIsNotChained","command collaborator",
"CloneOptions","data-provider boundary","CloneOptions","constructor",
"CloneOptions","data-provider boundary","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"CloneOptions","data-provider boundary","get","property collaborator",
"CloneOptions","data-provider boundary","get","get collaborator",
"TransientBlobTreeEntryDefinition","boundary degenerate small-class","get","collaborator incidental",
"Conflict","entity boundary","Conflict","constructor",
"Conflict","entity boundary","Conflict","constructor",
"Conflict","entity boundary","Equals","predicate non-void-command collaborator",
"Conflict","entity boundary","Equals","predicate non-void-command",
"Conflict","entity boundary","GetHashCode","property non-void-command",
"Conflict","entity boundary","get","get collaborator",
"Conflict","entity boundary","get","get collaborator",
"Conflict","entity boundary","get","get collaborator",
"TestRemoteInfo","empty","TestRemoteInfo","constructor",
"SubmoduleFixture","commander boundary","RetrievingSubmoduleForNormalDirectoryReturnsNull","command collaborator",
"SubmoduleFixture","commander boundary","RetrievingSubmoduleInBranchShouldWork","command collaborator",
"SubmoduleFixture","commander boundary","CanRetrieveTheStatusOfASubmodule","command collaborator",
"SubmoduleFixture","commander boundary","CanRetrieveTheCommitIdsOfASubmodule","command collaborator",
"SubmoduleFixture","commander boundary","CanEnumerateRepositorySubmodules","command collaborator",
"SubmoduleFixture","commander boundary","CanStageChangeInSubmoduleViaIndexStage","command collaborator",
"SubmoduleFixture","commander boundary","CanStageChangeInSubmoduleViaIndexStageWithOtherPaths","command collaborator",
"SubmoduleFixture","commander boundary","CanInitSubmodule","command collaborator",
"SubmoduleFixture","commander boundary","UpdatingUninitializedSubmoduleThrows","command collaborator",
"SubmoduleFixture","commander boundary","CanUpdateSubmodule","command collaborator",
"SubmoduleFixture","commander boundary","CanInitializeAndUpdateSubmodule","command collaborator",
"SubmoduleFixture","commander boundary","CanUpdateSubmoduleAfterCheckout","command collaborator",
"SubmoduleFixture","commander boundary","CanReadSubmoduleProperties","command collaborator",
"HistoryDivergence","data-provider boundary data-class small-class","HistoryDivergence","constructor",
"HistoryDivergence","data-provider boundary data-class small-class","HistoryDivergence","constructor",
"HistoryDivergence","data-provider boundary data-class small-class","get","get collaborator",
"ReferenceHandle","boundary small-class","ReferenceHandle","constructor",
"ReferenceHandle","boundary small-class","ReferenceHandle","constructor",
"ReferenceHandle","boundary small-class","Free","wrapper",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfAFile","command collaborator",
"StatusFixture","commander boundary","CanLimitStatusToWorkDirOnly","command collaborator",
"StatusFixture","commander boundary","CanLimitStatusToIndexOnly","command collaborator",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfAnUntrackedFile","command collaborator",
"StatusFixture","commander boundary","RetrievingTheStatusOfADirectoryThrows","command collaborator",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfTheWholeWorkingDirectory","command collaborator",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfRenamedFilesInWorkDir","command collaborator",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfRenamedFilesInIndex","command collaborator",
"StatusFixture","commander boundary","CanDetectedVariousKindsOfRenaming","command collaborator",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfANewRepository","command collaborator",
"StatusFixture","commander boundary","RetrievingTheStatusOfARepositoryReturnsGitPaths","command collaborator",
"StatusFixture","commander boundary","RetrievingTheStatusOfAnEmptyRepositoryHonorsTheGitIgnoreDirectives","command collaborator",
"StatusFixture","commander boundary","RetrievingTheStatusWithoutIncludeIgnoredIgnoresButDoesntInclude","command collaborator",
"StatusFixture","commander boundary","RetrievingTheStatusOfTheRepositoryHonorsTheGitIgnoreDirectives","command collaborator",
"StatusFixture","commander boundary","RetrievingTheStatusOfAFilePathHonorsTheIgnoreCaseConfigurationSetting","command collaborator",
"StatusFixture","commander boundary","RetrievingTheStatusOfTheRepositoryHonorsTheGitIgnoreDirectivesThroughoutDirectories","command collaborator",
"StatusFixture","commander boundary","CanRetrieveStatusOfFilesInSubmodule","command collaborator",
"StatusFixture","commander boundary","CanExcludeStatusOfFilesInSubmodule","command collaborator",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfARelativeWorkingDirectory","command collaborator",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfMultiplePathSpec","command collaborator",
"StatusFixture","commander boundary","CanRetrieveTheStatusOfAGlobSpec","command collaborator",
"StatusFixture","commander boundary","RetrievingTheStatusHonorsAssumedUnchangedMarkedIndexEntries","command collaborator",
"StatusFixture","commander boundary","CanIncludeStatusOfUnalteredFiles","command collaborator",
"StatusFixture","commander boundary","UnalteredFilesDontMarkIndexAsDirty","command collaborator",
"SetErrorFixture","commander","FormatSimpleException","command",
"SetErrorFixture","commander","FormatExceptionWithInnerException","command",
"SetErrorFixture","commander","FormatAggregateException","command",
"SetErrorFixture","commander","AssertExpectedExceptionMessage","command collaborator",
"SetErrorFixture","commander","AppendIndentedText","command",
"SetErrorFixture","commander","AppendIndentedLine","command",
"SetErrorFixture","commander","IndentString","stateless",
"RefSpec","data-provider boundary","RefSpec","constructor",
"RefSpec","data-provider boundary","RefSpec","constructor",
"RefSpec","data-provider boundary","SourceMatches","predicate wrapper",
"RefSpec","data-provider boundary","DestinationMatches","predicate wrapper",
"RefSpec","data-provider boundary","Transform","property wrapper",
"RefSpec","data-provider boundary","ReverseTransform","property wrapper",
"RefSpec","data-provider boundary","get","property wrapper",
"RefSpec","data-provider boundary","get","property wrapper",
"RefSpec","data-provider boundary","get","property wrapper",
"RefSpec","data-provider boundary","get","property wrapper",
"RefSpec","data-provider boundary","get","predicate wrapper",
"RefSpec","data-provider boundary","get","wrapper stateless",
"IndexFixture","commander boundary","CanCountEntriesInIndex","command collaborator",
"IndexFixture","commander boundary","CanEnumerateIndex","command collaborator",
"IndexFixture","commander boundary","CanFetchAnIndexEntryByItsName","command collaborator",
"IndexFixture","commander boundary","FetchingAnUnknownIndexEntryReturnsNull","command collaborator",
"IndexFixture","commander boundary","ReadIndexWithBadParamsFails","command collaborator",
"IndexFixture","commander boundary","CanRenameAFile","command collaborator",
"IndexFixture","commander boundary","CanMoveAnExistingFileOverANonExistingFile","command collaborator",
"IndexFixture","commander boundary","MovingOverAnExistingFileThrows","command collaborator",
"IndexFixture","commander boundary","MovingAFileWichIsNotUnderSourceControlThrows","command collaborator",
"IndexFixture","commander boundary","MovingAFileNotInTheWorkingDirectoryThrows","command collaborator",
"IndexFixture","commander boundary","InvalidMoveUseCases","command collaborator",
"IndexFixture","commander boundary","PathsOfIndexEntriesAreExpressedInNativeFormat","command collaborator",
"IndexFixture","commander boundary","CanReadIndexEntryAttributes","command collaborator",
"IndexFixture","commander boundary","StagingAFileWhenTheIndexIsLockedThrowsALockedFileException","command",
"IndexFixture","commander boundary","CanCopeWithExternalChangesToTheIndex","command collaborator",
"IndexFixture","commander boundary","CanResetFullyMergedIndexFromTree","command collaborator",
"IndexFixture","commander boundary","CanResetIndexWithUnmergedEntriesFromTree","command collaborator",
"IndexFixture","commander boundary","CanClearTheIndex","command collaborator",
"IndexFixture","commander boundary","CanRemoveAnEntryFromTheIndex","command collaborator",
"IndexFixture","commander boundary","CanAddAnEntryToTheIndexFromAFileInTheWorkdir","command collaborator",
"IndexFixture","commander boundary","CanAddAnEntryToTheIndexFromABlob","command collaborator",
"IndexFixture","commander boundary","AddingAnEntryToTheIndexFromAUnknwonFileInTheWorkdirThrows","command collaborator",
"IndexFixture","commander boundary","CanMimicGitAddAll","command collaborator",
"IndexFixture","commander boundary","RetrievingAssumedUnchangedMarkedIndexEntries","command collaborator",
"Branch","empty","Branch","constructor",
"Branch","empty","Branch","constructor",
"LambdaEqualityHelper<T>","entity boundary small-class","LambdaEqualityHelper","constructor",
"LambdaEqualityHelper<T>","entity boundary small-class","Equals","predicate non-void-command collaborator",
"LambdaEqualityHelper<T>","entity boundary small-class","GetHashCode","property non-void-command collaborator",
"FileExportFilter","commander boundary","FileExportFilter","constructor",
"FileExportFilter","commander boundary","Create","wrapper stateless",
"FileExportFilter","commander boundary","Clean","command collaborator",
"FileExportFilter","commander boundary","Complete","set collaborator",
"FileExportFilter","commander boundary","Smudge","command collaborator",
"GlobalSettingsFixture","boundary degenerate","CanGetMinimumCompiledInFeatures","controller stateless",
"GlobalSettingsFixture","boundary degenerate","CanRetrieveValidVersionString","wrapper stateless",
"GlobalSettingsFixture","boundary degenerate","TryingToResetNativeLibraryPathAfterLoadedThrows","wrapper stateless",
"GlobalSettingsFixture","boundary degenerate","LoadFromSpecifiedPath","wrapper stateless",
"GlobalSettingsFixture","boundary degenerate","SetExtensions","wrapper stateless",
"ConfigurationFixture","commander boundary","CanUnsetAnEntryFromTheLocalConfiguration","command",
"ConfigurationFixture","commander boundary","CanUnsetAnEntryFromTheGlobalConfiguration","command",
"ConfigurationFixture","commander boundary","CanAddAndReadMultivarFromTheLocalConfiguration","command",
"ConfigurationFixture","commander boundary","CanAddAndReadMultivarFromTheGlobalConfiguration","command",
"ConfigurationFixture","commander boundary","CanUnsetAllFromTheGlobalConfiguration","command",
"ConfigurationFixture","commander boundary","CanUnsetAllFromTheLocalConfiguration","command",
"ConfigurationFixture","commander boundary","CanReadBooleanValue","command collaborator",
"ConfigurationFixture","commander boundary","CanReadIntValue","command collaborator",
"ConfigurationFixture","commander boundary","CanReadLongValue","command collaborator",
"ConfigurationFixture","commander boundary","CanReadStringValue","command collaborator",
"ConfigurationFixture","commander boundary","CanEnumerateGlobalConfig","command collaborator",
"ConfigurationFixture","commander boundary","CanEnumerateLocalConfig","command collaborator",
"ConfigurationFixture","commander boundary","CanEnumerateLocalConfigContainingAKeyWithNoValue","command collaborator",
"ConfigurationFixture","commander boundary","CanFindInLocalConfig","command collaborator",
"ConfigurationFixture","commander boundary","CanFindInGlobalConfig","command collaborator",
"ConfigurationFixture","commander boundary","CanSetBooleanValue","command",
"ConfigurationFixture","commander boundary","SettingLocalConfigurationOutsideAReposThrows","wrapper stateless",
"ConfigurationFixture","commander boundary","CanSetIntValue","command",
"ConfigurationFixture","commander boundary","CanSetLongValue","command",
"ConfigurationFixture","commander boundary","CanSetStringValue","command",
"ConfigurationFixture","commander boundary","CanSetAndReadUnicodeStringValue","command",
"ConfigurationFixture","commander boundary","ReadingUnsupportedTypeThrows","command collaborator",
"ConfigurationFixture","commander boundary","ReadingValueThatDoesntExistReturnsNull","command collaborator",
"ConfigurationFixture","commander boundary","SettingUnsupportedTypeThrows","command collaborator",
"ConfigurationFixture","commander boundary","CanGetAnEntryFromASpecificStore","command",
"ConfigurationFixture","commander boundary","CanTellIfASpecificStoreContainsAKey","command",
"ConfigurationFixture","commander boundary","CanAccessConfigurationWithoutARepository","command collaborator",
"ConfigurationFixture","commander boundary","PassingANonExistingLocalConfigurationFileToBuildFromthrowss","wrapper stateless",
"ConfigurationFixture","commander boundary","CannotBuildAProperSignatureFromConfigWhenFullIdentityCannotBeFoundInTheConfig","command collaborator",
"ConfigurationFixture","commander boundary","CanSetAndGetSearchPath","wrapper stateless",
"ConfigurationFixture","commander boundary","CanSetAndGetMultipleSearchPaths","wrapper stateless",
"ConfigurationFixture","commander boundary","CanResetSearchPaths","wrapper stateless",
"ConfigurationFixture","commander boundary","CanAppendToSearchPaths","controller stateless",
"ConfigurationFixture","commander boundary","CanRedirectConfigAccess","command collaborator",
"ConfigurationFixture","commander boundary","get","factory wrapper stateless",
"FileHistoryFixture","entity commander boundary","CanFollowBranches","command collaborator",
"FileHistoryFixture","entity commander boundary","CanTellComplexCommitHistory","command collaborator",
"FileHistoryFixture","entity commander boundary","CanTellSimpleCommitHistory","command collaborator",
"FileHistoryFixture","entity commander boundary","CanTellSingleCommitHistory","command collaborator",
"FileHistoryFixture","entity commander boundary","EmptyRepositoryHasNoHistory","command collaborator",
"FileHistoryFixture","entity commander boundary","UnsupportedSortStrategyThrows","command",
"FileHistoryFixture","entity commander boundary","GetNextSignature","get set collaborator",
"FileHistoryFixture","entity commander boundary","CreateEmptyRepository","property non-void-command collaborator",
"FileHistoryFixture","entity commander boundary","AddCommitToOdb","property non-void-command collaborator",
"FileHistoryFixture","entity commander boundary","AddCommitToOdb","property non-void-command collaborator",
"FileHistoryFixture","entity commander boundary","MakeAndCommitChange","property non-void-command collaborator",
"TransientTreeEntryDefinition","boundary degenerate small-class","get","collaborator incidental",
"TransientTreeEntryDefinition","boundary degenerate small-class","get","collaborator incidental",
"GitProxyOptionsWrapper","commander small-class","GitProxyOptionsWrapper","constructor",
"GitProxyOptionsWrapper","commander small-class","GitProxyOptionsWrapper","constructor",
"GitProxyOptionsWrapper","commander small-class","Dispose","set",
"GitProxyOptionsWrapper","commander small-class","Dispose","command",
"DiffWorkdirToIndexFixture","commander boundary","CanCompareTheWorkDirAgainstTheIndex","command collaborator",
"DiffWorkdirToIndexFixture","commander boundary","CanCompareTheWorkDirAgainstTheIndexWithLaxUnmatchedExplicitPathsValidation","command collaborator",
"DiffWorkdirToIndexFixture","commander boundary","ComparingTheWorkDirAgainstTheIndexWithStrictUnmatchedExplicitPathsValidationAndANonExistentPathspecThrows","command collaborator",
"DiffWorkdirToIndexFixture","commander boundary","CallbackForUnmatchedExplicitPathsIsCalledWhenSet","command collaborator",
"DiffWorkdirToIndexFixture","commander boundary","ComparingReliesOnProvidedConfigEntriesIfAny","command collaborator",
"DiffWorkdirToIndexFixture","commander boundary","SetFilemode","controller stateless",
"DiffWorkdirToIndexFixture","commander boundary","CanCompareTheWorkDirAgainstTheIndexWithUntrackedFiles","command collaborator",
"StashCollection","boundary","StashCollection","constructor",
"StashCollection","boundary","StashCollection","constructor",
"StashCollection","boundary","GetEnumerator","property non-void-command collaborator",
"StashCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"StashCollection","boundary","Add","property non-void-command collaborator",
"StashCollection","boundary","Add","property non-void-command collaborator",
"StashCollection","boundary","Add","property non-void-command collaborator",
"StashCollection","boundary","Add","property factory wrapper",
"StashCollection","boundary","Apply","property controller",
"StashCollection","boundary","Apply","property non-void-command collaborator",
"StashCollection","boundary","Pop","property controller",
"StashCollection","boundary","Pop","property non-void-command collaborator",
"StashCollection","boundary","Remove","wrapper",
"StashCollection","boundary","get","property non-void-command collaborator",
"StashCollection","boundary","get","property non-void-command",
"WorktreeHandle","boundary small-class","WorktreeHandle","constructor",
"WorktreeHandle","boundary small-class","WorktreeHandle","constructor",
"WorktreeHandle","boundary small-class","Free","wrapper",
"LaxFilePathNoCleanupMarshaler","degenerate small-class","CleanUpNativeData","empty",
"ArchiveTarFixture","commander small-class","CanArchiveACommitWithDirectoryAsTar","command",
"DiffBlobToBlobFixture","commander boundary","ComparingABlobAgainstItselfReturnsNoDifference","command collaborator",
"DiffBlobToBlobFixture","commander boundary","CanCompareTwoVersionsOfABlobWithADiffOfTwoHunks","command collaborator",
"DiffBlobToBlobFixture","commander boundary","CreateBinaryBlob","controller stateless",
"DiffBlobToBlobFixture","commander boundary","CanCompareATextualBlobAgainstABinaryBlob","command collaborator",
"DiffBlobToBlobFixture","commander boundary","CanCompareABlobAgainstANullBlob","command collaborator",
"DiffBlobToBlobFixture","commander boundary","ComparingTwoNullBlobsReturnsAnEmptyContentChanges","command collaborator",
"DiffBlobToBlobFixture","commander boundary","ComparingBlobsWithNoSpacesAndIndentHeuristicOptionMakesADifference","command collaborator",
"DiffBlobToBlobFixture","commander boundary","ComparingBlobsWithNoSpacesIndentHeuristicOptionMakesNoDifference","command collaborator",
"DiffBlobToBlobFixture","commander boundary","DiffSetsTheAddedAndDeletedLinesCorrectly","command collaborator",
"DiffTreeToTreeFixture","commander boundary","ComparingATreeAgainstItselfReturnsNoDifference","command collaborator",
"DiffTreeToTreeFixture","commander boundary","RetrievingANonExistentFileChangeReturnsNull","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanCompareACommitTreeAgainstItsParent","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanDetectABinaryChange","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanDetectABinaryDeletion","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanCompareASubsetofTheTreeAgainstOneOfItsAncestor","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanCompareACommitTreeAgainstATreeWithNoCommonAncestor","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanCompareATreeAgainstAnotherTreeWithLaxExplicitPathsValidationAndNonExistentPath","command collaborator",
"DiffTreeToTreeFixture","commander boundary","ComparingATreeAgainstAnotherTreeWithStrictExplicitPathsValidationThrows","command collaborator",
"DiffTreeToTreeFixture","commander boundary","DetectsTheRenamingOfAModifiedFileByDefault","command collaborator",
"DiffTreeToTreeFixture","commander boundary","DetectsTheExactRenamingOfFilesByDefault","command collaborator",
"DiffTreeToTreeFixture","commander boundary","RenameDetectionObeysConfigurationSetting","empty",
"DiffTreeToTreeFixture","commander boundary","RenameThresholdsAreObeyed","command collaborator",
"DiffTreeToTreeFixture","commander boundary","ExactModeDetectsExactRenames","command collaborator",
"DiffTreeToTreeFixture","commander boundary","ExactModeDetectsExactCopies","command collaborator",
"DiffTreeToTreeFixture","commander boundary","ExactModeDoesntDetectRenamesWithEdits","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanIncludeUnmodifiedEntriesWhenDetectingTheExactRenamingOfFilesWhenEnabled","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanNotDetectTheExactRenamingFilesWhenNotEnabled","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanDetectTheExactCopyingOfNonModifiedFilesWhenEnabled","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanNotDetectTheExactCopyingOfNonModifiedFilesWhenNotEnabled","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanDetectTheExactCopyingOfModifiedFilesWhenEnabled","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanNotDetectTheExactCopyingOfModifiedFilesWhenNotEnabled","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanIncludeUnmodifiedEntriesWhenEnabled","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanDetectTheExactRenamingExactCopyingOfNonModifiedAndModifiedFilesWhenEnabled","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanCompareTwoVersionsOfAFileWithATrailingNewlineDeletion","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanCompareTwoVersionsOfAFileWithADiffOfTwoHunks","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanHandleTwoTreeEntryChangesWithTheSamePath","command collaborator",
"DiffTreeToTreeFixture","commander boundary","CanHandleTwoTreeEntryChangesWithTheSamePathUsingSimilarityNone","wrapper stateless",
"DiffTreeToTreeFixture","commander boundary","CanHandleTwoTreeEntryChangesWithTheSamePathUsingSimilarityDefault","wrapper stateless",
"DiffTreeToTreeFixture","commander boundary","CanCompareATreeAgainstANullTree","command collaborator",
"DiffTreeToTreeFixture","commander boundary","ComparingTwoNullTreesReturnsAnEmptyTreeChanges","command collaborator",
"DiffTreeToTreeFixture","commander boundary","ComparingReliesOnProvidedConfigEntriesIfAny","command collaborator",
"DiffTreeToTreeFixture","commander boundary","SetFilemode","controller stateless",
"DiffTreeToTreeFixture","commander boundary","RetrievingDiffChangesMustAlwaysBeCaseSensitive","command collaborator",
"DiffTreeToTreeFixture","commander boundary","RetrievingDiffContainsRightAmountOfAddedAndDeletedLines","command collaborator",
"DiffTreeToTreeFixture","commander boundary","UsingPatienceAlgorithmCompareOptionProducesPatienceDiff","command",
"DiffTreeToTreeFixture","commander boundary","DiffThrowsANotFoundExceptionIfATreeIsMissing","command collaborator",
"DescribeFixture","commander boundary small-class","CanDescribeACommit","command collaborator",
"DescribeFixture","commander boundary small-class","CanFollowFirstParent","command collaborator",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"LogFixture","boundary degenerate small-class","CanEnableAndDisableLogging","wrapper stateless",
"ConflictIteratorHandle","boundary small-class","ConflictIteratorHandle","constructor",
"ConflictIteratorHandle","boundary small-class","ConflictIteratorHandle","constructor",
"ConflictIteratorHandle","boundary small-class","Free","wrapper",
"CurrentOperationFixture","commander","CurrentOperationIsNoneForNewRepo","command",
"CurrentOperationFixture","commander","CurrentOperationInNoneForABareRepo","command",
"CurrentOperationFixture","commander","CurrentOperationHasExpectedPendingOperationValues","command collaborator",
"CheckoutFixture","commander boundary","CanCheckoutAnExistingBranch","command collaborator",
"CheckoutFixture","commander boundary","CanCheckoutAnExistingBranchByName","command collaborator",
"CheckoutFixture","commander boundary","CanCheckoutAnArbitraryCommit","command collaborator",
"CheckoutFixture","commander boundary","CheckoutAddsMissingFilesInWorkingDirectory","command collaborator",
"CheckoutFixture","commander boundary","CheckoutRemovesExtraFilesInWorkingDirectory","command collaborator",
"CheckoutFixture","commander boundary","CheckoutUpdatesModifiedFilesInWorkingDirectory","command collaborator",
"CheckoutFixture","commander boundary","CanForcefullyCheckoutWithConflictingStagedChanges","command collaborator",
"CheckoutFixture","commander boundary","CheckingOutWithMergeConflictsThrows","command",
"CheckoutFixture","commander boundary","CanCancelCheckoutThroughNotifyCallback","command collaborator",
"CheckoutFixture","commander boundary","CheckingOutInABareRepoThrows","command",
"CheckoutFixture","commander boundary","CheckingOutAgainstAnUnbornBranchThrows","command",
"CheckoutFixture","commander boundary","CheckingOutANonExistingBranchThrows","command",
"CheckoutFixture","commander boundary","CheckingOutABranchWithBadParamsThrows","command",
"CheckoutFixture","commander boundary","CheckingOutThroughBranchCallsCheckoutProgress","command collaborator",
"CheckoutFixture","commander boundary","CheckingOutThroughRepositoryCallsCheckoutProgress","command",
"CheckoutFixture","commander boundary","CheckingOutCallsCheckoutNotify","void-accessor command collaborator",
"CheckoutFixture","commander boundary","CheckoutRetainsUntrackedChanges","command",
"CheckoutFixture","commander boundary","ForceCheckoutRetainsUntrackedChanges","command",
"CheckoutFixture","commander boundary","CheckoutRetainsUnstagedChanges","command",
"CheckoutFixture","commander boundary","CheckoutRetainsStagedChanges","command",
"CheckoutFixture","commander boundary","CheckoutRetainsIgnoredChanges","command",
"CheckoutFixture","commander boundary","ForceCheckoutRetainsIgnoredChanges","command",
"CheckoutFixture","commander boundary","CheckoutBranchSnapshot","command",
"CheckoutFixture","commander boundary","CheckingOutRemoteBranchResultsInDetachedHead","command collaborator",
"CheckoutFixture","commander boundary","CheckingOutABranchDoesNotAlterBinaryFiles","command collaborator",
"CheckoutFixture","commander boundary","CheckoutFromDetachedHead","command collaborator",
"CheckoutFixture","commander boundary","CheckoutBranchFromDetachedHead","command collaborator",
"CheckoutFixture","commander boundary","CheckoutBranchByShortNameAttachesTheHead","command collaborator",
"CheckoutFixture","commander boundary","CheckoutPreviousCheckedOutBranch","command collaborator",
"CheckoutFixture","commander boundary","CheckoutCurrentReference","command collaborator",
"CheckoutFixture","commander boundary","CheckoutLowerCasedHeadThrows","command",
"CheckoutFixture","commander boundary","CanCheckoutAttachedHead","command",
"CheckoutFixture","commander boundary","CanCheckoutDetachedHead","command",
"CheckoutFixture","commander boundary","CanCheckoutPath","command collaborator",
"CheckoutFixture","commander boundary","CanCheckoutPaths","command",
"CheckoutFixture","commander boundary","CannotCheckoutPathsWithEmptyOrNullPathArgument","command",
"CheckoutFixture","commander boundary","CanCheckoutPathFromCurrentBranch","command collaborator",
"CheckoutFixture","commander boundary","CheckoutBranchTriesRemoteTrackingBranchAsFallbackAndSucceedsIfOnlyOne","command collaborator",
"CheckoutFixture","commander boundary","CheckoutBranchTriesRemoteTrackingBranchAsFallbackAndThrowsIfMoreThanOne","command collaborator",
"CheckoutFixture","commander boundary","PopulateBasicRepository","void-accessor controller",
"CheckoutFixture","commander boundary","ResetAndCleanWorkingDirectory","controller stateless",
"RefSpecFixture","commander boundary","CanCountRefSpecs","command collaborator",
"RefSpecFixture","commander boundary","CanIterateOverRefSpecs","command collaborator",
"RefSpecFixture","commander boundary","FetchAndPushRefSpecsComposeRefSpecs","command collaborator",
"RefSpecFixture","commander boundary","CanReadRefSpecDetails","command collaborator",
"RefSpecFixture","commander boundary","RemoteUpdaterSavesRefSpecsPermanently","command collaborator",
"RefSpecFixture","commander boundary","CanAddAndRemoveRefSpecs","command collaborator",
"RefSpecFixture","commander boundary","CanClearRefSpecs","command collaborator",
"RefSpecFixture","commander boundary","SettingInvalidRefSpecsThrows","command collaborator",
"RefSpecFixture","commander boundary","CanCheckForMatches","command collaborator",
"RefSpecFixture","commander boundary","CanTransformRefspecs","command collaborator",
"BlameFixture","commander boundary","CanBlameSimply","command",
"BlameFixture","commander boundary","CanBlameFromADifferentCommit","command collaborator",
"BlameFixture","commander boundary","ValidatesLimits","command collaborator",
"BlameFixture","commander boundary","CanBlameFromVariousTypes","command",
"BlameFixture","commander boundary","CanStopBlame","command collaborator",
"Constants","degenerate small-class","get","incidental",
"GitOdbBackend","empty","GitOdbBackend","constructor",
"MergeResult","empty","MergeResult","constructor",
"MergeResult","empty","MergeResult","constructor",
"PushResult","data-provider small-class","PushResult","constructor",
"PushResult","data-provider small-class","PushResult","constructor",
"PushResult","data-provider small-class","get","get collaborator",
"PushResult","data-provider small-class","get","predicate",
"ObjectIdFixture","unclassified","PreventsFromBuildingWithAnInvalidSha","wrapper",
"ObjectIdFixture","unclassified","CanConvertOidToSha","controller",
"ObjectIdFixture","unclassified","CanConvertShaToOid","wrapper",
"ObjectIdFixture","unclassified","CanCastShaToObjectId","wrapper",
"ObjectIdFixture","unclassified","CanCastNullToObjectId","wrapper stateless",
"ObjectIdFixture","unclassified","CreatingObjectIdWithWrongNumberOfBytesThrows","wrapper stateless",
"ObjectIdFixture","unclassified","DifferentObjectIdsAreEqual","controller",
"ObjectIdFixture","unclassified","DifferentObjectIdsDoesNotHaveSameHashCode","controller",
"ObjectIdFixture","unclassified","SimilarObjectIdsAreEqual","controller",
"ObjectIdFixture","unclassified","SimilarObjectIdsHaveSameHashCode","controller",
"ObjectIdFixture","unclassified","TryParse","controller",
"ObjectIdFixture","unclassified","StartsWith","controller stateless",
"TagAnnotation","data-provider data-class","TagAnnotation","constructor",
"TagAnnotation","data-provider data-class","TagAnnotation","constructor",
"TagAnnotation","data-provider data-class","get","get",
"TagAnnotation","data-provider data-class","get","get",
"TagAnnotation","data-provider data-class","get","get collaborator",
"TagAnnotation","data-provider data-class","get","get collaborator",
"RepositoryHandle","boundary small-class","RepositoryHandle","constructor",
"RepositoryHandle","boundary small-class","RepositoryHandle","constructor",
"RepositoryHandle","boundary small-class","Free","wrapper",
"SecureUsernamePasswordCredentials","data-provider boundary small-class","GitCredentialHandler","property wrapper",
"CleanFixture","commander small-class","CanCleanWorkingDirectory","command",
"CleanFixture","commander small-class","CannotCleanABareRepository","command",
"SignatureHandle","boundary small-class","SignatureHandle","constructor",
"SignatureHandle","boundary small-class","SignatureHandle","constructor",
"SignatureHandle","boundary small-class","Free","wrapper",
"ArchiveFixture","commander boundary","CanArchiveATree","command collaborator",
"ArchiveFixture","commander boundary","CanArchiveACommit","command collaborator",
"ArchiveFixture","commander boundary","ArchivingANullTreeOrCommitThrows","command",
"Network","boundary","Network","constructor",
"Network","boundary","Network","constructor",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferencesInternal","property controller",
"Network","boundary","Fetch","command collaborator",
"Network","boundary","Fetch","command collaborator",
"Network","boundary","Fetch","command",
"Network","boundary","Fetch","wrapper",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","wrapper stateless",
"Network","boundary","Push","wrapper stateless",
"Network","boundary","Push","command",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","void-accessor controller",
"Network","boundary","get","get collaborator",
"Network","boundary","get","property wrapper",
"FilterSource","empty","FilterSource","constructor",
"FilterSource","empty","FilterSource","constructor",
"FilterBranchFixture","entity commander boundary","FilterBranchFixture","constructor",
"FilterBranchFixture","entity commander boundary","Dispose","command",
"FilterBranchFixture","entity commander boundary","CanRewriteHistoryWithoutChangingCommitMetadata","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteHistoryWithoutChangingTrees","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRollbackRewriteByThrowingInOnCompleting","command collaborator",
"FilterBranchFixture","entity commander boundary","ErrorThrownInOnErrorTakesPrecedenceOverErrorDuringCommitHeaderRewriter","command collaborator",
"FilterBranchFixture","entity commander boundary","ErrorThrownInOnErrorTakesPrecedenceOverErrorDuringCommitTreeRewriter","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteAuthorOfCommits","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteAuthorOfCommitsOnlyBeingPointedAtByTags","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteTrees","command",
"FilterBranchFixture","entity commander boundary","CanRewriteTreesByInjectingTreeEntry","command collaborator",
"FilterBranchFixture","entity commander boundary","OnlyRewriteSelectedCommits","command collaborator",
"FilterBranchFixture","entity commander boundary","CanCustomizeTheNamespaceOfBackedUpRefs","command",
"FilterBranchFixture","entity commander boundary","RefRewritingRollsBackOnFailure","command collaborator",
"FilterBranchFixture","entity commander boundary","DoesNotRewriteRefsThatDontChange","command collaborator",
"FilterBranchFixture","entity commander boundary","CanNotOverWriteBackedUpReferences","command collaborator",
"FilterBranchFixture","entity commander boundary","CanNotOverWriteAnExistingReference","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteParents","command",
"FilterBranchFixture","entity commander boundary","CanRewriteParentWithRewrittenCommit","command collaborator",
"FilterBranchFixture","entity commander boundary","WritesCorrectReflogMessagesForSimpleRewrites","command",
"FilterBranchFixture","entity commander boundary","CanProvideNewNamesForTags","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteSymbolicRefsPointingToTags","command",
"FilterBranchFixture","entity commander boundary","HandlesNameRewritingOfChainedTags","command collaborator",
"FilterBranchFixture","entity commander boundary","RewritingNotesHasNoEffect","command collaborator",
"FilterBranchFixture","entity commander boundary","AssertSucceedingButNotError","wrapper",
"FilterBranchFixture","entity commander boundary","AssertSucceedingNotFired","wrapper",
"FilterBranchFixture","entity commander boundary","AssertErrorFired","wrapper",
"FilterBranchFixture","entity commander boundary","get","property set collaborator",
"FilterBranchFixture","entity commander boundary","get","property set collaborator",
"FetchFixture","commander boundary","CanFetchIntoAnEmptyRepository","command collaborator",
"FetchFixture","commander boundary","CanFetchIntoAnEmptyRepositoryWithCredentials","command",
"FetchFixture","commander boundary","CanFetchAllTagsIntoAnEmptyRepository","command collaborator",
"FetchFixture","commander boundary","CanFetchCustomRefSpecsIntoAnEmptyRepository","command collaborator",
"FetchFixture","commander boundary","FetchRespectsConfiguredAutoTagSetting","command collaborator",
"FetchFixture","commander boundary","CanFetchAllTagsAfterAnInitialClone","command",
"FetchFixture","commander boundary","FetchHonorsTheFetchPruneConfigurationEntry","command",
"FetchFixture","commander boundary","CannotFetchWithForbiddenCustomHeaders","command collaborator",
"FetchFixture","commander boundary","CanFetchWithCustomHeaders","command collaborator",
"FetchFixture","commander boundary","CannotFetchWithMalformedCustomHeaders","command collaborator",
"RemoteCollection","entity boundary","RemoteCollection","constructor",
"RemoteCollection","entity boundary","RemoteCollection","constructor",
"RemoteCollection","entity boundary","RemoteForName","property wrapper",
"RemoteCollection","entity boundary","Update","void-accessor command collaborator",
"RemoteCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"RemoteCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"RemoteCollection","entity boundary","Add","get factory wrapper",
"RemoteCollection","entity boundary","Add","get factory wrapper",
"RemoteCollection","entity boundary","Remove","wrapper",
"RemoteCollection","entity boundary","Rename","property non-void-command collaborator",
"RemoteCollection","entity boundary","Rename","get wrapper",
"RemoteCollection","entity boundary","get","property non-void-command collaborator",
"RemoteCollection","entity boundary","get","property non-void-command",
"ObjectDatabase","boundary","ObjectDatabase","constructor",
"ObjectDatabase","boundary","ObjectDatabase","constructor",
"ObjectDatabase","boundary","GetEnumerator","property non-void-command collaborator",
"ObjectDatabase","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"ObjectDatabase","boundary","Contains","predicate wrapper",
"ObjectDatabase","boundary","RetrieveObjectMetadata","property wrapper",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","AddBackend","void-accessor wrapper",
"ObjectDatabase","boundary","Write<T>","property wrapper",
"ObjectDatabase","boundary","Write<T>","property controller",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateTree","property controller",
"ObjectDatabase","boundary","CreateTree","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateCommit","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateCommit","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateCommitWithSignature","property wrapper",
"ObjectDatabase","boundary","CreateCommitWithSignature","property wrapper",
"ObjectDatabase","boundary","CreateTagAnnotation","property non-void-command collaborator",
"ObjectDatabase","boundary","Archive","command",
"ObjectDatabase","boundary","Archive","command",
"ObjectDatabase","boundary","Archive","controller stateless",
"ObjectDatabase","boundary","Archive","controller stateless",
"ObjectDatabase","boundary","CalculateHistoryDivergence","property factory wrapper",
"ObjectDatabase","boundary","CherryPickCommit","property non-void-command factory collaborator",
"ObjectDatabase","boundary","ShortenObjectId","property wrapper",
"ObjectDatabase","boundary","ShortenObjectId","property controller",
"ObjectDatabase","boundary","CanMergeWithoutConflict","predicate non-void-command collaborator",
"ObjectDatabase","boundary","FindMergeBase","wrapper stateless",
"ObjectDatabase","boundary","FindMergeBase","property non-void-command collaborator",
"ObjectDatabase","boundary","MergeCommits","property non-void-command factory collaborator",
"ObjectDatabase","boundary","Pack","property non-void-command collaborator",
"ObjectDatabase","boundary","Pack","property non-void-command collaborator",
"ObjectDatabase","boundary","MergeCommitsIntoIndex","property non-void-command factory collaborator",
"ObjectDatabase","boundary","CherryPickCommitIntoIndex","property non-void-command factory collaborator",
"ObjectDatabase","boundary","MergeCommits","property wrapper",
"ObjectDatabase","boundary","CherryPickCommit","property wrapper",
"ObjectDatabase","boundary","InternalPack","factory wrapper",
"ObjectDatabase","boundary","RevertCommit","property non-void-command factory collaborator",
"NoteFixture","commander boundary","RetrievingNotesFromANonExistingGitObjectYieldsNoResult","command collaborator",
"NoteFixture","commander boundary","RetrievingNotesFromAGitObjectWhichHasNoNoteYieldsNoResult","command collaborator",
"NoteFixture","commander boundary","CanRetrieveNotesFromAGitObject","command collaborator",
"NoteFixture","commander boundary","CanRetrieveASpecificNoteFromAKnownNamespace","command collaborator",
"NoteFixture","commander boundary","CanGetListOfNotesNamespaces","command",
"NoteFixture","commander boundary","CanAccessNotesFromACommit","command collaborator",
"NoteFixture","commander boundary","CanAddANoteOnAGitObject","command collaborator",
"NoteFixture","commander boundary","CreatingANoteWhichAlreadyExistsOverwritesThePreviousNote","command collaborator",
"NoteFixture","commander boundary","CanAddANoteWithSignatureFromConfig","command collaborator",
"NoteFixture","commander boundary","CanCompareTwoUniqueNotes","command collaborator",
"NoteFixture","commander boundary","CanRemoveANoteFromAGitObject","command collaborator",
"NoteFixture","commander boundary","RemovingANonExistingNoteDoesntThrow","command collaborator",
"NoteFixture","commander boundary","CanRemoveANoteWithSignatureFromConfig","command collaborator",
"NoteFixture","commander boundary","CanRetrieveTheListOfNotesForAGivenNamespace","command",
"NoteFixture","commander boundary","CanRetrieveNotesWhenThereAreNotAny","command collaborator",
"DescribeOptions","empty","DescribeOptions","constructor",
"NetworkFixture","commander boundary","CanListRemoteReferences","command",
"NetworkFixture","commander boundary","CanListRemoteReferencesFromUrl","command",
"NetworkFixture","commander boundary","CanListRemoteReferenceObjects","command",
"NetworkFixture","commander boundary","CanListRemoteReferencesWithCredentials","command collaborator",
"NetworkFixture","commander boundary","CanPull","command collaborator",
"NetworkFixture","commander boundary","CanPullIntoEmptyRepo","command collaborator",
"NetworkFixture","commander boundary","PullWithoutMergeBranchThrows","command collaborator",
"NetworkFixture","commander boundary","CanMergeFetchedRefs","command collaborator",
"NetworkFixture","commander boundary","CanPruneRefs","command",
"AttributesFixture","commander small-class","StagingHonorsTheAttributesFiles","command",
"GitStrArrayManaged","commander small-class","Dispose","command",
"CherryPickFixture","commander boundary","CanCherryPick","command collaborator",
"CherryPickFixture","commander boundary","CherryPickWithConflictDoesNotCommit","command collaborator",
"CherryPickFixture","commander boundary","CanSpecifyConflictFileStrategy","command collaborator",
"CherryPickFixture","commander boundary","CanCherryPickCommit","command collaborator",
"CherryPickFixture","commander boundary","CherryPickWithConflictsReturnsConflicts","command collaborator",
"CherryPickFixture","commander boundary","CanCherryPickCommitIntoIndex","command collaborator",
"CherryPickFixture","commander boundary","CanCherryPickIntoIndexWithConflicts","command collaborator",
"CherryPickFixture","commander boundary","AddFileCommitToRepo","controller stateless",
"TreeBuilderHandle","boundary small-class","TreeBuilderHandle","constructor",
"TreeBuilderHandle","boundary small-class","TreeBuilderHandle","constructor",
"TreeBuilderHandle","boundary small-class","Free","wrapper",
"UnstageFixture","commander boundary","StagingANewVersionOfAFileThenUnstagingItRevertsTheBlobToTheVersionOfHead","command",
"UnstageFixture","commander boundary","CanStageAndUnstageAnIgnoredFile","command",
"UnstageFixture","commander boundary","CanUnstage","command",
"UnstageFixture","commander boundary","UnstagingWritesIndex","command collaborator",
"UnstageFixture","commander boundary","UnstagingUnknownPathsWithStrictUnmatchedExplicitPathsValidationThrows","command collaborator",
"UnstageFixture","commander boundary","CanUnstageUnknownPathsWithLaxUnmatchedExplicitPathsValidation","command collaborator",
"UnstageFixture","commander boundary","CanUnstageTheRemovalOfAFile","command",
"UnstageFixture","commander boundary","CanUnstageUntrackedFileAgainstAnOrphanedHead","command collaborator",
"UnstageFixture","commander boundary","UnstagingUnknownPathsAgainstAnOrphanedHeadWithStrictUnmatchedExplicitPathsValidationThrows","command collaborator",
"UnstageFixture","commander boundary","CanUnstageUnknownPathsAgainstAnOrphanedHeadWithLaxUnmatchedExplicitPathsValidation","command collaborator",
"UnstageFixture","commander boundary","UnstagingANewFileWithAFullPathWhichEscapesOutOfTheWorkingDirThrows","command",
"UnstageFixture","commander boundary","UnstagingANewFileWithAFullPathWhichEscapesOutOfTheWorkingDirAgainstAnOrphanedHeadThrows","command",
"UnstageFixture","commander boundary","UnstagingFileWithBadParamsThrows","command collaborator",
"UnstageFixture","commander boundary","CanUnstageSourceOfARename","command collaborator",
"UnstageFixture","commander boundary","CanUnstageTargetOfARename","command collaborator",
"UnstageFixture","commander boundary","CanUnstageBothSidesOfARename","command collaborator",
"BaseFixture","data-provider boundary","BaseFixture","constructor",
"BaseFixture","data-provider boundary","BaseFixture","constructor",
"BaseFixture","data-provider boundary","CreateCorruptedDeadBeefHead","wrapper stateless",
"BaseFixture","data-provider boundary","BuildSelfCleaningDirectory","property factory collaborator",
"BaseFixture","data-provider boundary","BuildSelfCleaningDirectory","property factory collaborator",
"BaseFixture","data-provider boundary","SandboxBareTestRepo","property wrapper",
"BaseFixture","data-provider boundary","SandboxStandardTestRepo","property wrapper",
"BaseFixture","data-provider boundary","SandboxMergedTestRepo","property wrapper",
"BaseFixture","data-provider boundary","SandboxStandardTestRepoGitDir","property wrapper",
"BaseFixture","data-provider boundary","SandboxMergeTestRepo","property wrapper",
"BaseFixture","data-provider boundary","SandboxRevertTestRepo","property wrapper",
"BaseFixture","data-provider boundary","SandboxSubmoduleTestRepo","property non-void-command",
"BaseFixture","data-provider boundary","SandboxAssumeUnchangedTestRepo","property wrapper",
"BaseFixture","data-provider boundary","SandboxSubmoduleSmallTestRepo","property non-void-command collaborator",
"BaseFixture","data-provider boundary","SandboxWorktreeTestRepo","property non-void-command",
"BaseFixture","data-provider boundary","SandboxPackBuilderTestRepo","property wrapper",
"BaseFixture","data-provider boundary","Sandbox","property non-void-command collaborator",
"BaseFixture","data-provider boundary","InitNewRepository","property non-void-command collaborator",
"BaseFixture","data-provider boundary","Register","command",
"BaseFixture","data-provider boundary","Dispose","wrapper",
"BaseFixture","data-provider boundary","RequiresDotNetOrMonoGreaterThanOrEqualTo","controller stateless",
"BaseFixture","data-provider boundary","CreateConfigurationWithDummyUser","void-accessor command collaborator",
"BaseFixture","data-provider boundary","CreateConfigurationWithDummyUser","controller stateless",
"BaseFixture","data-provider boundary","AssertCommitIdentitiesAre","wrapper stateless",
"BaseFixture","data-provider boundary","Expected","property wrapper",
"BaseFixture","data-provider boundary","Expected","wrapper stateless",
"BaseFixture","data-provider boundary","AssertBelongsToARepository<T>","wrapper stateless",
"BaseFixture","data-provider boundary","CreateAttributesFile","wrapper stateless",
"TransientTreeTreeEntryDefinition","data-provider boundary lazy-class small-class","get","get collaborator",
"TransientTreeTreeEntryDefinition","data-provider boundary lazy-class small-class","get","collaborator incidental",
"CloneFixture","commander boundary","CanClone","command",
"CloneFixture","commander boundary","CanCloneWithCheckoutBranchName","command collaborator",
"CloneFixture","commander boundary","AssertLocalClone","command",
"CloneFixture","commander boundary","CanCloneALocalRepositoryFromALocalUri","wrapper",
"CloneFixture","commander boundary","CanCloneALocalRepositoryFromAStandardPath","wrapper",
"CloneFixture","commander boundary","CanCloneALocalRepositoryFromANewlyCreatedTemporaryPath","command collaborator",
"CloneFixture","commander boundary","CanCloneBarely","command",
"CloneFixture","commander boundary","WontCheckoutIfAskedNotTo","command",
"CloneFixture","commander boundary","CallsProgressCallbacks","command collaborator",
"CloneFixture","commander boundary","CanCloneWithCredentials","command",
"CloneFixture","commander boundary","CanInspectCertificateOnClone","command collaborator",
"Commit","data-provider boundary","Commit","constructor",
"Commit","data-provider boundary","Commit","constructor",
"Commit","data-provider boundary","RetrieveNotesOfCommit","get collaborator",
"Commit","data-provider boundary","get","collaborator incidental",
"Commit","data-provider boundary","get","get",
"Commit","data-provider boundary","get","get",
"Commit","data-provider boundary","get","get",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","property non-void-command",
"FilterFixture","entity commander boundary","CanRegisterFilterWithSingleAttribute","wrapper",
"FilterFixture","entity commander boundary","CanRegisterAndUnregisterTheSameFilter","wrapper",
"FilterFixture","entity commander boundary","CanRegisterAndDeregisterAfterGarbageCollection","wrapper",
"FilterFixture","entity commander boundary","SameFilterIsEqual","wrapper",
"FilterFixture","entity commander boundary","InitCallbackNotMadeWhenFilterNeverUsed","wrapper",
"FilterFixture","entity commander boundary","InitCallbackMadeWhenUsingTheFilter","command",
"FilterFixture","entity commander boundary","WhenStagingFileApplyIsCalledWithCleanForCorrectPath","command collaborator",
"FilterFixture","entity commander boundary","CleanFilterWritesOutputToObjectTree","command collaborator",
"FilterFixture","entity commander boundary","CanHandleMultipleSmudgesConcurrently","property non-void-command collaborator",
"FilterFixture","entity commander boundary","WhenCheckingOutAFileFileSmudgeWritesCorrectFileToWorkingDirectory","command",
"FilterFixture","entity commander boundary","CanFilterLargeFiles","command",
"FilterFixture","entity commander boundary","DoubleRegistrationFailsButDoubleDeregistrationDoesNot","wrapper",
"FilterFixture","entity commander boundary","CharArrayAreEqual","wrapper stateless",
"FilterFixture","entity commander boundary","CheckoutFileForSmudge","property non-void-command collaborator",
"FilterFixture","entity commander boundary","CreateTestRepository","non-void-command factory collaborator",
"ArchiverBase","commander degenerate","BeforeArchiving","empty",
"ArchiverBase","commander degenerate","AfterArchiving","empty",
"ArchiverBase","commander degenerate","OrchestrateArchiving","command collaborator",
"ArchiverBase","commander degenerate","ArchiveTree","wrapper stateless",
"RevertFixture","commander boundary","CanRevert","command",
"RevertFixture","commander boundary","CanRevertAndNotCommit","command",
"RevertFixture","commander boundary","RevertWithConflictDoesNotCommit","command collaborator",
"RevertFixture","commander boundary","RevertWithFileConflictStrategyOption","command collaborator",
"RevertFixture","commander boundary","RevertReportsCheckoutProgress","command collaborator",
"RevertFixture","commander boundary","RevertReportsCheckoutNotification","command collaborator",
"RevertFixture","commander boundary","RevertFindsRenames","command",
"RevertFixture","commander boundary","CanRevertMergeCommit","command collaborator",
"RevertFixture","commander boundary","CanNotRevertAMergeCommitWithoutSpecifyingTheMainlineBranch","command collaborator",
"RevertFixture","commander boundary","RevertWithNothingToRevert","command collaborator",
"RevertFixture","commander boundary","RevertOrphanedBranchThrows","command collaborator",
"RevertFixture","commander boundary","RevertWithNothingToRevertInObjectDatabaseSucceeds","command collaborator",
"RevertFixture","commander boundary","RevertWithConflictReportsConflict","command collaborator",
"RevertFixture","commander boundary","CanRevertInObjectDatabase","command collaborator",
"MetaFixture","controller degenerate","LibGit2SharpPublicInterfacesCoverAllPublicMembers","command collaborator",
"MetaFixture","controller degenerate","LibGit2SharpExplicitOnlyInterfacesAreIndeedExplicitOnly","command collaborator",
"MetaFixture","controller degenerate","PublicTestMethodsAreFactsOrTheories","controller stateless",
"MetaFixture","controller degenerate","TypesInLibGit2DecoratedWithDebuggerDisplayMustFollowTheStandardImplPattern","command collaborator",
"MetaFixture","controller degenerate","TypesInLibGit2SharpMustBeExtensibleInATestingContext","controller stateless",
"MetaFixture","controller degenerate","EnumsWithFlagsHaveMutuallyExclusiveValues","controller stateless",
"MetaFixture","controller degenerate","BuildMissingDebuggerDisplayPropertyMessage","controller stateless",
"MetaFixture","controller degenerate","GetEnumeratorMethodsInLibGit2SharpMustBeVirtualForTestability","controller stateless",
"MetaFixture","controller degenerate","NoPublicTypesUnderLibGit2SharpCoreNamespace","controller stateless",
"MetaFixture","controller degenerate","NoOptionalParametersinMethods","controller stateless",
"MetaFixture","controller degenerate","NoOptionalParametersinConstructors","controller stateless",
"MetaFixture","controller degenerate","PublicExtensionMethodsShouldonlyTargetInterfacesOrEnums","controller stateless",
"MetaFixture","controller degenerate","AllIDiffResultsAreInChangesBuilder","controller stateless",
"PatchEntryChanges","data-provider boundary data-class","PatchEntryChanges","constructor",
"PatchEntryChanges","data-provider boundary data-class","PatchEntryChanges","constructor",
"PatchEntryChanges","data-provider boundary data-class","get","get",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"PatchEntryChanges","data-provider boundary data-class","get","get",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"MergeOptionsBase","empty","MergeOptionsBase","constructor",
"LazyGroup<T>","small-class","LazyGroup","constructor",
"LazyGroup<T>","small-class","AddLazy<TResult>","non-void-command factory collaborator",
"LazyGroup<T>","small-class","Evaluate","set collaborator",
"LazyGroup<T>","small-class","LazyWrapper","constructor",
"CertificateX509","entity boundary small-class","CertificateX509","constructor",
"CertificateX509","entity boundary small-class","CertificateX509","constructor",
"CertificateX509","entity boundary small-class","CertificateX509","constructor",
"CertificateX509","entity boundary small-class","ToPointers","property non-void-command collaborator",
"TarArchiver","entity boundary","TarArchiver","constructor",
"TarArchiver","entity boundary","BeforeArchiving","wrapper stateless",
"TarArchiver","entity boundary","AddTreeEntry","void-accessor command collaborator",
"TarArchiver","entity boundary","WriteStream","wrapper stateless",
"TarArchiver","entity boundary","Dispose","command",
"BlameHunk","data-provider boundary","BlameHunk","constructor",
"BlameHunk","data-provider boundary","BlameHunk","constructor",
"BlameHunk","data-provider boundary","ContainsLine","predicate",
"BlameHunk","data-provider boundary","Equals","predicate non-void-command",
"BlameHunk","data-provider boundary","Equals","predicate non-void-command collaborator",
"BlameHunk","data-provider boundary","GetHashCode","property non-void-command",
"BlameHunk","data-provider boundary","get","get collaborator",
"BlameHunk","data-provider boundary","get","get collaborator",
"BlameHunk","data-provider boundary","get","property wrapper",
"DiffTreeToTargetFixture","commander boundary","CanCompareASimpleTreeAgainstTheWorkDir","command collaborator",
"DiffTreeToTargetFixture","commander boundary","CanCompareAMoreComplexTreeAgainstTheWorkdir","command collaborator",
"DiffTreeToTargetFixture","commander boundary","CanCompareASimpleTreeAgainstTheWorkDirAndTheIndex","command collaborator",
"DiffTreeToTargetFixture","commander boundary","ShowcaseTheDifferenceBetweenTheTwoKindOfComparison","command collaborator",
"DiffTreeToTargetFixture","commander boundary","CanCompareASimpleTreeAgainstTheIndex","command collaborator",
"DiffTreeToTargetFixture","commander boundary","CanCompareAMoreComplexTreeAgainstTheIndex","command collaborator",
"DiffTreeToTargetFixture","commander boundary","CanCompareASubsetofTheTreeAgainstTheIndex","command collaborator",
"DiffTreeToTargetFixture","commander boundary","CanCompareASubsetofTheTreeAgainstTheIndexWithLaxExplicitPathsValidationAndANonExistentPath","command collaborator",
"DiffTreeToTargetFixture","commander boundary","ComparingASubsetofTheTreeAgainstTheIndexWithStrictExplicitPathsValidationAndANonExistentPathThrows","command collaborator",
"DiffTreeToTargetFixture","commander boundary","CanCopeWithEndOfFileNewlineChanges","command collaborator",
"DiffTreeToTargetFixture","commander boundary","ComparingATreeInABareRepositoryAgainstTheWorkDirOrTheIndexThrows","command",
"DiffTreeToTargetFixture","commander boundary","CanCompareANullTreeAgainstTheIndex","command",
"DiffTreeToTargetFixture","commander boundary","CanCompareANullTreeAgainstTheWorkdir","command",
"DiffTreeToTargetFixture","commander boundary","CanCompareANullTreeAgainstTheWorkdirAndTheIndex","command",
"DiffTreeToTargetFixture","commander boundary","CompareSetsCorrectAddedAndDeletedLines","command collaborator",
"HistoryRewriter","entity boundary","HistoryRewriter","constructor",
"HistoryRewriter","entity boundary","Execute","command collaborator",
"HistoryRewriter","entity boundary","RewriteReference","get property non-void-command collaborator",
"HistoryRewriter","entity boundary","RewriteReference<TRef,TTarget>","get property non-void-command collaborator",
"HistoryRewriter","entity boundary","RewriteCommit","void-accessor command collaborator",
"HistoryRewriter","entity boundary","TryPruneEmptyCommit","predicate set collaborator",
"HistoryRewriter","entity boundary","RewriteTarget","get property non-void-command factory collaborator",
"HistoryRewriter","entity boundary","ReferenceDepth","property non-void-command collaborator",
"ProxyOptions","degenerate","CreateGitProxyOptions","factory wrapper",
"ProxyOptions","degenerate","GitCredentialHandler","controller stateless",
"ProxyOptions","degenerate","GitCertificateCheck","wrapper stateless",
"EqualityFixture","pure-controller degenerate small-class","EqualityHelperCanTestNullInEquals","controller stateless",
"EqualityFixture","pure-controller degenerate small-class","EqualityHelperCanTestNullInHashCode","controller stateless",
"RepositoryOperationContext","empty","RepositoryOperationContext","constructor",
"RepositoryOperationContext","empty","RepositoryOperationContext","constructor",
"RepositoryOperationContext","empty","RepositoryOperationContext","constructor",
"PushFixture","commander boundary","OnPushStatusError","wrapper stateless",
"PushFixture","commander boundary","AssertPush","command collaborator",
"PushFixture","commander boundary","CanPushABranchTrackingAnUpstreamBranch","command collaborator",
"PushFixture","commander boundary","CanInvokePrePushCallbackAndSucceed","command collaborator",
"PushFixture","commander boundary","CanInvokePrePushCallbackAndFail","command collaborator",
"PushFixture","commander boundary","PushingABranchThatDoesNotTrackAnUpstreamBranchThrows","wrapper stateless",
"CommitFixture","commander boundary","CanCountCommits","command",
"CommitFixture","commander boundary","CanCorrectlyCountCommitsWhenSwitchingToAnotherBranch","command",
"CommitFixture","commander boundary","CanEnumerateCommits","command collaborator",
"CommitFixture","commander boundary","CanEnumerateCommitsInDetachedHeadState","command collaborator",
"CommitFixture","commander boundary","DefaultOrderingWhenEnumeratingCommitsIsTimeBased","command",
"CommitFixture","commander boundary","CanEnumerateCommitsFromSha","command collaborator",
"CommitFixture","commander boundary","QueryingTheCommitHistoryWithUnknownShaOrInvalidEntryPointThrows","command",
"CommitFixture","commander boundary","QueryingTheCommitHistoryFromACorruptedReferenceThrows","command",
"CommitFixture","commander boundary","QueryingTheCommitHistoryWithBadParamsThrows","command",
"CommitFixture","commander boundary","CanEnumerateCommitsWithReverseTimeSorting","command collaborator",
"CommitFixture","commander boundary","CanEnumerateCommitsWithReverseTopoSorting","command collaborator",
"CommitFixture","commander boundary","CanSimplifyByFirstParent","incidental",
"CommitFixture","commander boundary","CanGetParentsCount","command",
"CommitFixture","commander boundary","CanEnumerateCommitsWithTimeSorting","command collaborator",
"CommitFixture","commander boundary","CanEnumerateCommitsWithTopoSorting","command collaborator",
"CommitFixture","commander boundary","CanEnumerateFromHead","incidental",
"CommitFixture","commander boundary","CanEnumerateFromDetachedHead","command",
"CommitFixture","commander boundary","CanEnumerateUsingTwoHeadsAsBoundaries","incidental",
"CommitFixture","commander boundary","CanEnumerateUsingImplicitHeadAsSinceBoundary","incidental",
"CommitFixture","commander boundary","CanEnumerateUsingTwoAbbreviatedShasAsBoundaries","incidental",
"CommitFixture","commander boundary","CanEnumerateCommitsFromTwoHeads","incidental",
"CommitFixture","commander boundary","CanEnumerateCommitsFromMixedStartingPoints","incidental",
"CommitFixture","commander boundary","CanEnumerateCommitsUsingGlob","incidental",
"CommitFixture","commander boundary","CanHideCommitsUsingGlob","incidental",
"CommitFixture","commander boundary","CanEnumerateCommitsFromAnAnnotatedTag","command",
"CommitFixture","commander boundary","CanEnumerateCommitsFromATagAnnotation","command",
"CommitFixture","commander boundary","CanEnumerateCommitsFromATag","collaborator incidental",
"CommitFixture","commander boundary","CanEnumerateAllCommits","incidental",
"CommitFixture","commander boundary","CanEnumerateCommitsFromATagWhichPointsToABlob","incidental",
"CommitFixture","commander boundary","CanEnumerateCommitsFromATagWhichPointsToATree","command collaborator",
"CommitFixture","commander boundary","AssertEnumerationOfCommits","command collaborator",
"CommitFixture","commander boundary","CanLookupCommitGeneric","command collaborator",
"CommitFixture","commander boundary","CanReadCommitData","command collaborator",
"CommitFixture","commander boundary","CanReadCommitWithMultipleParents","command collaborator",
"CommitFixture","commander boundary","CanDirectlyAccessABlobOfTheCommit","command collaborator",
"CommitFixture","commander boundary","CanDirectlyAccessATreeOfTheCommit","command collaborator",
"CommitFixture","commander boundary","DirectlyAccessingAnUnknownTreeEntryOfTheCommitReturnsNull","command collaborator",
"CommitFixture","commander boundary","CanCommitWithSignatureFromConfig","command collaborator",
"CommitFixture","commander boundary","CommitParentsAreMergeHeads","command collaborator",
"CommitFixture","commander boundary","CommitCleansUpMergeMetadata","command collaborator",
"CommitFixture","commander boundary","CanCommitALittleBit","command collaborator",
"CommitFixture","commander boundary","CanGeneratePredictableObjectShas","command collaborator",
"CommitFixture","commander boundary","CanAmendARootCommit","command collaborator",
"CommitFixture","commander boundary","CanAmendACommitWithMoreThanOneParent","command collaborator",
"CommitFixture","commander boundary","CanNotAmendAnEmptyRepository","command",
"CommitFixture","commander boundary","CanRetrieveChildrenOfASpecificCommit","command collaborator",
"CommitFixture","commander boundary","CanCorrectlyDistinguishAuthorFromCommitter","command collaborator",
"CommitFixture","commander boundary","CanCommitOnOrphanedBranch","command",
"CommitFixture","commander boundary","CanNotCommitAnEmptyCommit","command",
"CommitFixture","commander boundary","CanCommitAnEmptyCommitWhenForced","command",
"CommitFixture","commander boundary","CanNotAmendAnEmptyCommit","command",
"CommitFixture","commander boundary","CanAmendAnEmptyCommitWhenForced","command collaborator",
"CommitFixture","commander boundary","CanCommitAnEmptyCommitWhenMerging","command collaborator",
"CommitFixture","commander boundary","CanAmendAnEmptyMergeCommit","command collaborator",
"CommitFixture","commander boundary","CanNotAmendACommitInAWayThatWouldLeadTheNewCommitToBecomeEmpty","command",
"CommitFixture","commander boundary","CanPrettifyAMessage","controller stateless",
"CommitFixture","commander boundary","CanExtractSignatureFromCommit","command collaborator",
"CommitFixture","commander boundary","CanCreateACommitString","command collaborator",
"CommitFixture","commander boundary","CanCreateASignedCommit","command collaborator",
"SubstitutionCipherFilter","commander boundary data-class small-class","SubstitutionCipherFilter","constructor",
"SubstitutionCipherFilter","commander boundary data-class small-class","Clean","set collaborator",
"SubstitutionCipherFilter","commander boundary data-class small-class","Smudge","set collaborator",
"BranchTrackingDetails","data-provider data-class","BranchTrackingDetails","constructor",
"BranchTrackingDetails","data-provider data-class","BranchTrackingDetails","constructor",
"BranchTrackingDetails","data-provider data-class","get","get",
"BranchTrackingDetails","data-provider data-class","get","get",
"BranchTrackingDetails","data-provider data-class","get","get collaborator",
"StatusListHandle","boundary small-class","StatusListHandle","constructor",
"StatusListHandle","boundary small-class","StatusListHandle","constructor",
"StatusListHandle","boundary small-class","Free","wrapper",
"MergeFixture","commander boundary","ANewRepoIsFullyMerged","command",
"MergeFixture","commander boundary","AFullyMergedRepoOnlyContainsStagedIndexEntries","command collaborator",
"MergeFixture","commander boundary","SoftResetARepoWithUnmergedEntriesThrows","command collaborator",
"MergeFixture","commander boundary","CommitAgainARepoWithUnmergedEntriesThrows","command collaborator",
"MergeFixture","commander boundary","CanRetrieveTheBranchBeingMerged","command",
"MergeFixture","commander boundary","CanMergeRepoNonFastForward","command collaborator",
"MergeFixture","commander boundary","IsUpToDateMerge","command collaborator",
"MergeFixture","commander boundary","CanFastForwardRepos","command collaborator",
"MergeFixture","commander boundary","ConflictingMergeRepos","command collaborator",
"MergeFixture","commander boundary","ConflictingMergeReposBinary","command collaborator",
"MergeFixture","commander boundary","CanFailOnFirstMergeConflict","command collaborator",
"MergeFixture","commander boundary","CanFastForwardCommit","command collaborator",
"MergeFixture","commander boundary","CanNonFastForwardMergeCommit","command collaborator",
"MergeFixture","commander boundary","MergeReportsCheckoutProgress","command collaborator",
"MergeFixture","commander boundary","MergeReportsCheckoutNotifications","command collaborator",
"MergeFixture","commander boundary","FastForwardMergeReportsCheckoutProgress","command collaborator",
"MergeFixture","commander boundary","FastForwardMergeReportsCheckoutNotifications","command collaborator",
"MergeFixture","commander boundary","MergeCanDetectRenames","command collaborator",
"MergeFixture","commander boundary","FastForwardNonFastForwardableMergeThrows","command collaborator",
"MergeFixture","commander boundary","CanForceFastForwardMergeThroughConfig","command collaborator",
"MergeFixture","commander boundary","CanMergeAndNotCommit","command collaborator",
"MergeFixture","commander boundary","CanForceNonFastForwardMerge","command collaborator",
"MergeFixture","commander boundary","CanForceNonFastForwardMergeThroughConfig","command collaborator",
"MergeFixture","commander boundary","VerifyUpToDateMerge","command collaborator",
"MergeFixture","commander boundary","CanMergeCommittish","command collaborator",
"MergeFixture","commander boundary","MergeWithWorkDirConflictsThrows","command collaborator",
"MergeFixture","commander boundary","CanSpecifyConflictFileStrategy","command collaborator",
"MergeFixture","commander boundary","MergeCanSpecifyMergeFileFavorOption","command collaborator",
"MergeFixture","commander boundary","CanMergeBranch","command collaborator",
"MergeFixture","commander boundary","CanMergeIntoOrphanedBranch","command collaborator",
"MergeFixture","commander boundary","CanMergeTreeIntoSameTree","command collaborator",
"MergeFixture","commander boundary","CanMergeTreeIntoTreeFromUnbornBranch","command collaborator",
"MergeFixture","commander boundary","CanMergeCommitsAndDetectConflicts","command collaborator",
"MergeFixture","commander boundary","CanMergeFastForwardTreeWithoutConflicts","command collaborator",
"MergeFixture","commander boundary","CanIdentifyConflictsInMergeCommits","command collaborator",
"MergeFixture","commander boundary","CanConflictOnWhitespaceChangeMergeConflict","command collaborator",
"MergeFixture","commander boundary","CanIgnoreWhitespaceChangeMergeConflict","command collaborator",
"MergeFixture","commander boundary","CanMergeIntoIndex","command collaborator",
"MergeFixture","commander boundary","CanMergeIntoIndexWithConflicts","command collaborator",
"MergeFixture","commander boundary","AddFileCommitToRepo","controller stateless",
"ConflictFixture","boundary","CanResolveConflictsByRemovingFromTheIndex","command",
"ConflictFixture","boundary","CanGetOriginalNamesOfRenameConflicts","controller",
"ConflictFixture","boundary","CanRetrieveSingleConflictByPath","command collaborator",
"ConflictFixture","boundary","GetPath","collaborator incidental",
"ConflictFixture","boundary","GetId","controller stateless",
"ConflictFixture","boundary","CanRetrieveAllConflicts","command collaborator",
"ConflictFixture","boundary","get","factory collaborator incidental",
"ConflictFixture","boundary","get","factory collaborator incidental",
"ReflogFixture","commander boundary","CanReadReflog","command collaborator",
"ReflogFixture","commander boundary","ReflogOfUnbornReferenceIsEmpty","command",
"ReflogFixture","commander boundary","ReadingReflogOfInvalidReferenceNameThrows","command",
"ReflogFixture","commander boundary","CommitShouldCreateReflogEntryOnHeadAndOnTargetedDirectReference","command collaborator",
"ReflogFixture","commander boundary","CommitOnUnbornReferenceShouldCreateReflogEntryWithInitialTag","command",
"ReflogFixture","commander boundary","CommitOnDetachedHeadShouldInsertReflogEntry","command collaborator",
"ReflogFixture","commander boundary","AppendingToReflogDependsOnCoreLogAllRefUpdatesSetting","void-accessor command collaborator",
"ReflogFixture","commander boundary","UnsignedMethodsWriteCorrectlyToTheReflog","command collaborator",
"ObjectHandle","boundary small-class","ObjectHandle","constructor",
"ObjectHandle","boundary small-class","ObjectHandle","constructor",
"ObjectHandle","boundary small-class","Free","wrapper",
"LeaksContainer","entity boundary small-class","get","property non-void-command collaborator",
"PatchStatsFixture","commander boundary small-class","CanExtractStatisticsFromDiff","command collaborator",
"CommitLog","controller","CommitLog","constructor",
"CommitLog","controller","CommitLog","constructor",
"CommitLog","controller","GetEnumerator","property factory collaborator",
"CommitLog","controller","IEnumerable.GetEnumerator","property non-void-command collaborator",
"CommitLog","controller","QueryBy","property factory controller",
"CommitLog","controller","QueryBy","property factory wrapper",
"CommitLog","controller","QueryBy","property factory wrapper",
"CommitLog","controller","get","get collaborator",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","get","collaborator incidental",
"MockingFixture","degenerate","CanCountCommitsWithConcreteRepository","command collaborator",
"MockingFixture","degenerate","CanCountCommitsWithMockedRepository","wrapper stateless",
"MockingFixture","degenerate","CanFakeConfigurationBuildSignature","controller stateless",
"MockingFixture","degenerate","CanFakeEnumerationOfConfiguration","controller stateless",
"SignatureFixture","boundary degenerate","CreatingASignatureWithANameContainingZerosThrows","wrapper stateless",
"SignatureFixture","boundary degenerate","CreatingASignatureWithAnEmailContainingZerosThrows","wrapper stateless",
"SignatureFixture","boundary degenerate","CreatingASignatureWithBadParamsThrows","wrapper stateless",
"FilterAttributeEntry","data-provider data-class small-class","FilterAttributeEntry","constructor",
"FilterAttributeEntry","data-provider data-class small-class","FilterAttributeEntry","constructor",
"FilterAttributeEntry","data-provider data-class small-class","get","get",
"OdbBackendFixture","commander boundary","CanGeneratePredictableObjectShasWithTheDefaultBackend","command",
"OdbBackendFixture","commander boundary","CanGeneratePredictableObjectShasWithAProvidedBackend","command collaborator",
"OdbBackendFixture","commander boundary","CanRetrieveObjectsThroughOddSizedShortShas","command collaborator",
"OdbBackendFixture","commander boundary","CanEnumerateTheContentOfTheObjectDatabase","command collaborator",
"OdbBackendFixture","commander boundary","CanPushWithACustomBackend","command collaborator",
"OdbBackendFixture","commander boundary","CanShortenObjectIdentifier","command collaborator",
"OdbBackendFixture","commander boundary","ADisposableOdbBackendGetsDisposedUponRepositoryDisposal","command collaborator",
"BlobFixture","commander boundary","CanGetBlobAsText","command collaborator",
"BlobFixture","commander boundary","CanGetBlobAsFilteredText","command collaborator",
"BlobFixture","commander boundary","CanGetBlobAsTextWithVariousEncodings","command collaborator",
"BlobFixture","commander boundary","CanGetBlobSize","command collaborator",
"BlobFixture","commander boundary","CanLookUpBlob","command collaborator",
"BlobFixture","commander boundary","CanReadBlobStream","command",
"BlobFixture","commander boundary","CanReadBlobFilteredStream","command",
"BlobFixture","commander boundary","CanReadBlobFilteredStreamOfUnmodifiedBinary","command collaborator",
"BlobFixture","commander boundary","CanStageAFileGeneratedFromABlobContentStream","command collaborator",
"BlobFixture","commander boundary","CanTellIfTheBlobContentLooksLikeBinary","command collaborator",
"BlobFixture","commander boundary","CanTellIfABlobIsMissing","command collaborator",
"GitPushOptionsWrapper","commander small-class","GitPushOptionsWrapper","constructor",
"GitPushOptionsWrapper","commander small-class","GitPushOptionsWrapper","constructor",
"GitPushOptionsWrapper","commander small-class","Dispose","set",
"GitPushOptionsWrapper","commander small-class","Dispose","command",
"ResetIndexFixture","commander boundary","ResetANewlyInitializedBareRepositoryThrows","command",
"ResetIndexFixture","commander boundary","ResettingInABareRepositoryThrows","command",
"ResetIndexFixture","commander boundary","ResetTheIndexWithTheHeadUnstagesEverything","command collaborator",
"ResetIndexFixture","commander boundary","CanResetTheIndexToTheContentOfACommitWithCommitAsArgument","command collaborator",
"ResetIndexFixture","commander boundary","CanResetTheIndexToASubsetOfTheContentOfACommitWithCommitAsArgumentAndLaxUnmatchedExplicitPathsValidation","command",
"ResetIndexFixture","commander boundary","ResettingTheIndexToASubsetOfTheContentOfACommitWithCommitAsArgumentAndStrictUnmatchedPathspecsValidationThrows","command",
"ResetIndexFixture","commander boundary","CanResetTheIndexWhenARenameExists","command collaborator",
"ResetIndexFixture","commander boundary","CanResetSourceOfARenameInIndex","command collaborator",
"ResetIndexFixture","commander boundary","CanResetTargetOfARenameInIndex","command collaborator",
"NoteHandle","boundary small-class","NoteHandle","constructor",
"NoteHandle","boundary small-class","NoteHandle","constructor",
"NoteHandle","boundary small-class","Free","wrapper",
"TransferProgress","data-provider","TransferProgress","constructor",
"TransferProgress","data-provider","TransferProgress","copy-constructor",
"TransferProgress","data-provider","get","property",
"TransferProgress","data-provider","get","property",
"TransferProgress","data-provider","get","property",
"TransferProgress","data-provider","get","property",
"TransferProgress","data-provider","get","wrapper stateless",
"RevertResult","empty","RevertResult","constructor",
"RevertResult","empty","RevertResult","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","get","collaborator incidental",
"AnnotatedCommitHandle","boundary small-class","AnnotatedCommitHandle","constructor",
"AnnotatedCommitHandle","boundary small-class","AnnotatedCommitHandle","constructor",
"AnnotatedCommitHandle","boundary small-class","Free","wrapper",
"FilterSubstitutionCipherFixture","commander boundary","SmugdeIsNotCalledForFileWhichDoesNotMatchAnAttributeEntry","command collaborator",
"FilterSubstitutionCipherFixture","commander boundary","CorrectlyEncodesAndDecodesInput","command collaborator",
"FilterSubstitutionCipherFixture","commander boundary","WhenStagedFileDoesNotMatchPathSpecFileIsNotFiltered","command",
"FilterSubstitutionCipherFixture","commander boundary","CleanIsCalledIfAttributeEntryMatches","command",
"FilterSubstitutionCipherFixture","commander boundary","SmudgeIsCalledIfAttributeEntryMatches","command collaborator",
"RepositoryOptionsFixture","entity commander boundary","RepositoryOptionsFixture","constructor",
"RepositoryOptionsFixture","entity commander boundary","CanOpenABareRepoAsIfItWasAStandardOne","command collaborator",
"RepositoryOptionsFixture","entity commander boundary","CanOpenABareRepoAsIfItWasAStandardOneWithANonExisitingIndexFile","command collaborator",
"RepositoryOptionsFixture","entity commander boundary","CanOpenABareRepoWithOptions","command",
"RepositoryOptionsFixture","entity commander boundary","CanProvideADifferentWorkDirToAStandardRepo","command collaborator",
"RepositoryOptionsFixture","entity commander boundary","CanProvideADifferentIndexToAStandardRepo","command collaborator",
"RepositoryOptionsFixture","entity commander boundary","OpeningABareRepoWithoutProvidingBothWorkDirAndIndexThrows","command",
"RepositoryOptionsFixture","entity commander boundary","CanSneakAdditionalCommitsIntoAStandardRepoWithoutAlteringTheWorkdirOrTheIndex","command collaborator",
"RepositoryOptionsFixture","entity commander boundary","MeanwhileInAnotherDimensionAnEvilMastermindIsAtWork","property wrapper",
"RepositoryOptionsFixture","entity commander boundary","CanCommitOnBareRepository","command",
"StageFixture","commander","CanStage","command",
"StageFixture","commander","StagingWritesIndex","command collaborator",
"StageFixture","commander","CanStageTheUpdationOfAStagedFile","command collaborator",
"StageFixture","commander","StagingAnUnknownFileThrowsIfExplicitPath","command collaborator",
"StageFixture","commander","CanStageAnUnknownFileWithLaxUnmatchedExplicitPathsValidation","command collaborator",
"StageFixture","commander","StagingAnUnknownFileWithLaxExplicitPathsValidationDoesntThrow","command collaborator",
"StageFixture","commander","CanStageTheRemovalOfAStagedFile","command",
"StageFixture","commander","CanStageANewFileInAPersistentManner","command",
"StageFixture","commander","CanStageANewFileWithAFullPath","command",
"StageFixture","commander","CanStageANewFileWithARelativePathContainingNativeDirectorySeparatorCharacters","command",
"StageFixture","commander","StagingANewFileWithAFullPathWhichEscapesOutOfTheWorkingDirThrows","command",
"StageFixture","commander","StagingFileWithBadParamsThrows","command collaborator",
"StageFixture","commander","CanStageWithPathspec","command",
"StageFixture","commander","CanStageWithMultiplePathspecs","command",
"StageFixture","commander","CanIgnoreIgnoredPaths","command",
"StageFixture","commander","CanStageIgnoredPaths","command",
"StageFixture","commander","IgnoredFilesAreOnlyStagedIfTheyreInTheRepo","command collaborator",
"StageFixture","commander","CanStageConflictedIgnoredFiles","command collaborator",
"StageFixture","commander","CanSuccessfullyStageTheContentOfAModifiedFileOfTheSameSizeWithinTheSameSecond","command",
"LaxFilePathMarshaler","boundary degenerate small-class","MarshalNativeToManaged","wrapper stateless",
"PackBuilderFixture","commander boundary","TestDefaultPackDelegate","command",
"PackBuilderFixture","commander boundary","TestCommitsPerBranchPackDelegate","command",
"PackBuilderFixture","commander boundary","TestCommitsPerBranchIdsPackDelegate","command",
"PackBuilderFixture","commander boundary","TestIfSameRepoAfterPacking","command collaborator",
"PackBuilderFixture","commander boundary","AddingObjectIdsTestDelegate","controller stateless",
"PackBuilderFixture","commander boundary","AddingObjectsTestDelegate","controller stateless",
"PackBuilderFixture","commander boundary","ExceptionIfPathDoesNotExist","wrapper stateless",
"PackBuilderFixture","commander boundary","ExceptionIfPathEqualsNull","wrapper stateless",
"PackBuilderFixture","commander boundary","ExceptionIfOptionsEqualsNull","command",
"PackBuilderFixture","commander boundary","ExceptionIfBuildDelegateEqualsNull","command collaborator",
"PackBuilderFixture","commander boundary","ExceptionIfNegativeNumberOfThreads","command collaborator",
"PackBuilderFixture","commander boundary","ExceptionIfAddNullObjectID","command collaborator",
"PackBuilderFixture","commander boundary","ExceptionIfAddRecursivelyNullObjectID","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanTellIfObjectsExists","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateABlobFromAFileInTheWorkingDirectory","command collaborator",
"ObjectDatabaseFixture","commander boundary","RetrieveObjectMetadataReturnsCorrectSizeAndTypeForBlob","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateABlobIntoTheDatabaseOfABareRepository","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateABlobFromAStream","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanWriteABlobFromAByteArray","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanWriteABlobFromAStream","command collaborator",
"ObjectDatabaseFixture","commander boundary","PrepareMemoryStream","factory controller stateless",
"ObjectDatabaseFixture","commander boundary","CanCreateABlobFromAStreamWithANumberOfBytesToConsume","command collaborator",
"ObjectDatabaseFixture","commander boundary","CreatingABlobFromTooShortAStreamThrows","command",
"ObjectDatabaseFixture","commander boundary","CreatingABlobFromANonReadableStreamThrows","command",
"ObjectDatabaseFixture","commander boundary","CanCreateATreeByAlteringAnExistingOne","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateATreeByRemovingEntriesFromExistingOne","command collaborator",
"ObjectDatabaseFixture","commander boundary","RemovingANonExistingEntryFromATreeDefinitionHasNoSideEffect","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateAnEmptyTree","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanReplaceAnExistingTreeWithAnotherPersitedTree","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateATreeContainingABlobFromAFileInTheWorkingDirectory","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateATreeContainingAGitLinkFromAnUntrackedSubmoduleInTheWorkingDirectory","command collaborator",
"ObjectDatabaseFixture","commander boundary","CannotCreateATreeContainingABlobFromARelativePathAgainstABareRepository","command collaborator",
"ObjectDatabaseFixture","commander boundary","CreatingATreeFromIndexWithUnmergedEntriesThrows","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateATreeFromIndex","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateACommit","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateABinaryBlobFromAStream","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCreateATagAnnotationPointingToAGitObject","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanEnumerateTheGitObjectsFromBareRepository","command collaborator",
"ObjectDatabaseFixture","commander boundary","CreatingACommitWithMessageContainingZeroByteThrows","command",
"ObjectDatabaseFixture","commander boundary","CreatingATagAnnotationWithNameOrMessageContainingZeroByteThrows","command",
"ObjectDatabaseFixture","commander boundary","CreatingATagAnnotationWithBadParametersThrows","command",
"ObjectDatabaseFixture","commander boundary","CanCreateATagAnnotationWithAnEmptyMessage","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCalculateHistoryDivergence","command collaborator",
"ObjectDatabaseFixture","commander boundary","CanCalculateHistoryDivergenceWhenNoAncestorIsShared","command collaborator",
"ObjectDatabaseFixture","commander boundary","CalculatingHistoryDivergenceWithBadParamsThrows","command",
"ObjectDatabaseFixture","commander boundary","CanShortenObjectIdentifier","command collaborator",
"ObjectDatabaseFixture","commander boundary","TestMergeIntoSelfHasNoConflicts","command collaborator",
"ObjectDatabaseFixture","commander boundary","TestMergeIntoOtherUnbornBranchHasNoConflicts","command collaborator",
"ObjectDatabaseFixture","commander boundary","TestMergeIntoOtherUnbornBranchHasConflicts","command collaborator",
"ObjectDatabaseFixture","commander boundary","TestMergeIntoOtherBranchHasNoConflicts","command collaborator",
"ObjectDatabaseFixture","commander boundary","TestMergeIntoWrongBranchHasConflicts","command collaborator",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"ObjectId","unclassified","ObjectId","constructor",
"ObjectId","unclassified","ObjectId","constructor",
"ObjectId","unclassified","ObjectId","constructor",
"ObjectId","unclassified","ObjectId","constructor",
"ObjectId","unclassified","Equals","predicate non-void-command collaborator",
"ObjectId","unclassified","Equals","predicate non-void-command",
"ObjectId","unclassified","GetHashCode","property non-void-command",
"ObjectId","unclassified","ToString","incidental",
"ObjectId","unclassified","ToString","wrapper stateless",
"ObjectId","unclassified","StartsWith","wrapper stateless",
"ObjectId","unclassified","get","get collaborator",
"ObjectId","unclassified","get","get",
"ObjectId","unclassified","get","get",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","get","collaborator incidental",
"RebaseFixture","commander boundary small-class","CanRebase","command collaborator",
"RebaseFixture","commander boundary small-class","CanRebaseBranchOntoItself","command collaborator",
"GitRepositoryInitOptions","commander data-class small-class","Dispose","set",
"Remote","entity boundary","Remote","constructor",
"Remote","entity boundary","Remote","copy-constructor",
"Remote","entity boundary","~Remote","destructor",
"Remote","entity boundary","Dispose","command",
"Remote","entity boundary","Dispose","set",
"Remote","entity boundary","FetchSpecTransformToSource","property wrapper",
"Remote","entity boundary","get","property wrapper",
"Remote","entity boundary","get","property wrapper",
"Remote","entity boundary","get","property wrapper",
"Remote","entity boundary","get","property wrapper",
"Remote","entity boundary","get","get collaborator",
"Remote","entity boundary","get","property non-void-command collaborator",
"Remote","entity boundary","get","property non-void-command collaborator",
"Remote","entity boundary","get","predicate non-void-command collaborator",
"Remote","entity boundary","get","wrapper stateless",
"Remote","entity boundary","get","get collaborator",
"RemoteFixture","commander boundary","CanGetRemoteOrigin","command collaborator",
"RemoteFixture","commander boundary","GettingRemoteThatDoesntExistReturnsNull","command collaborator",
"RemoteFixture","commander boundary","CanEnumerateTheRemotes","command collaborator",
"RemoteFixture","commander boundary","CanSetTagFetchMode","command collaborator",
"RemoteFixture","commander boundary","CanSetRemoteUrl","command collaborator",
"RemoteFixture","commander boundary","CanSetRemotePushUrl","command collaborator",
"RemoteFixture","commander boundary","CreatingANewRemoteAddsADefaultRefSpec","command collaborator",
"RemoteFixture","commander boundary","CanAddANewRemoteWithAFetchRefSpec","command collaborator",
"RemoteFixture","commander boundary","AddingARemoteWithAnInvalidNameThrows","command",
"RemoteFixture","commander boundary","CanTellIfARemoteNameIsValid","wrapper stateless",
"RemoteFixture","commander boundary","DoesNotThrowWhenARemoteHasNoUrlSet","command collaborator",
"RemoteFixture","commander boundary","CreatingARemoteAddsADefaultFetchRefSpec","command collaborator",
"RemoteFixture","commander boundary","CanCreateARemoteWithASpecifiedFetchRefSpec","command collaborator",
"RemoteFixture","commander boundary","CanDeleteExistingRemote","command collaborator",
"RemoteFixture","commander boundary","CanDeleteNonExistingRemote","command collaborator",
"RemoteFixture","commander boundary","CanRenameExistingRemote","command collaborator",
"RemoteFixture","commander boundary","RenamingNonExistingRemoteThrows","command collaborator",
"RemoteFixture","commander boundary","ReportsRemotesWithNonDefaultRefSpecs","command collaborator",
"RemoteFixture","commander boundary","DoesNotReportRemotesWithAlreadyExistingRefSpec","command collaborator",
"RemoteFixture","commander boundary","CanNotRenameWhenRemoteWithSameNameExists","command collaborator",
"RemoteFixture","commander boundary","ShoudlPruneOnFetchReflectsTheConfiguredSetting","command collaborator",
"RemoteFixture","commander boundary","SetIfNotNull","controller stateless",
"IgnoreFixture","commander","TemporaryRulesShouldApplyUntilCleared","command",
"IgnoreFixture","commander","IsPathIgnoredShouldVerifyWhetherPathIsIgnored","command",
"IgnoreFixture","commander","CallingIsPathIgnoredWithBadParamsThrows","command",
"IgnoreFixture","commander","AddingATemporaryRuleWithBadParamsThrows","command",
"IgnoreFixture","commander","CanCheckIfAPathIsIgnoredUsingThePreferedPlatformDirectorySeparatorChar","command",
"IgnoreFixture","commander","HonorDeeplyNestedGitIgnoreFile","command collaborator",
"WorktreeFixture","commander boundary","RetrievingWorktreeForRandomNameReturnsNull","command collaborator",
"WorktreeFixture","commander boundary","RetrievingWorktreeForWorktreeNameReturnsWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanEnumerateRepositoryWorktrees","command collaborator",
"WorktreeFixture","commander boundary","CanViewLockStatusForWorktrees","command collaborator",
"WorktreeFixture","commander boundary","CanUnlockWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanLockWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanGetRepositoryForWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanPruneUnlockedWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanPruneDeletedWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanNotPruneLockedWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanUnlockThenPruneLockedWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanForcePruneLockedWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanAddWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanAddLockedWorktree","command collaborator",
"WorktreeFixture","commander boundary","CanAddWorktreeForCommittish","command collaborator",
"RepositoryFixture","commander boundary","CanCreateBareRepo","command collaborator",
"RepositoryFixture","commander boundary","AccessingTheIndexInABareRepoThrows","command",
"RepositoryFixture","commander boundary","CanCheckIfADirectoryLeadsToAValidRepository","command collaborator",
"RepositoryFixture","commander boundary","IsValidWithNullPathThrows","wrapper stateless",
"RepositoryFixture","commander boundary","IsNotValidWithEmptyPath","wrapper stateless",
"RepositoryFixture","commander boundary","IsValidWithValidPath","command",
"RepositoryFixture","commander boundary","CanCreateStandardRepo","command",
"RepositoryFixture","commander boundary","CanCreateStandardRepoAndSpecifyAFolderWhichWillContainTheNewlyCreatedGitDirectory","command",
"RepositoryFixture","commander boundary","CanCreateStandardRepoAndDirectlySpecifyAGitDirectory","command",
"RepositoryFixture","commander boundary","CanFetchFromRemoteByName","command collaborator",
"RepositoryFixture","commander boundary","CanReinitARepository","command",
"RepositoryFixture","commander boundary","CreatingRepoWithBadParamsThrows","wrapper stateless",
"RepositoryFixture","commander boundary","CanOpenBareRepositoryThroughAFullPathToTheGitDir","command",
"RepositoryFixture","commander boundary","CanOpenStandardRepositoryThroughAWorkingDirPath","command",
"RepositoryFixture","commander boundary","OpeningStandardRepositoryThroughTheGitDirGuessesTheWorkingDirPath","command collaborator",
"RepositoryFixture","commander boundary","CanOpenRepository","command",
"RepositoryFixture","commander boundary","OpeningNonExistentRepoThrows","wrapper stateless",
"RepositoryFixture","commander boundary","OpeningRepositoryWithBadParamsThrows","wrapper stateless",
"RepositoryFixture","commander boundary","CanLookupACommitByTheNameOfABranch","command collaborator",
"RepositoryFixture","commander boundary","CanLookupACommitByTheNameOfALightweightTag","command collaborator",
"RepositoryFixture","commander boundary","CanLookupATagAnnotationByTheNameOfAnAnnotatedTag","command collaborator",
"RepositoryFixture","commander boundary","CanLookupObjects","command",
"RepositoryFixture","commander boundary","CanLookupSameObjectTwiceAndTheyAreEqual","command collaborator",
"RepositoryFixture","commander boundary","LookupObjectByWrongShaReturnsNull","command",
"RepositoryFixture","commander boundary","LookupObjectByWrongTypeReturnsNull","command",
"RepositoryFixture","commander boundary","LookupObjectByUnknownReferenceNameReturnsNull","command",
"RepositoryFixture","commander boundary","CanLookupWhithShortIdentifers","command collaborator",
"RepositoryFixture","commander boundary","CanLookupUsingRevparseSyntax","command",
"RepositoryFixture","commander boundary","CanResolveAmbiguousRevparseSpecs","command collaborator",
"RepositoryFixture","commander boundary","LookingUpWithBadParamsThrows","command",
"RepositoryFixture","commander boundary","LookingUpWithATooShortShaThrows","command",
"RepositoryFixture","commander boundary","LookingUpByAWrongRevParseExpressionThrows","command",
"RepositoryFixture","commander boundary","LookingUpAGitLinkThrows","command",
"RepositoryFixture","commander boundary","CanDiscoverABareRepoGivenTheRepoPath","wrapper",
"RepositoryFixture","commander boundary","CanDiscoverABareRepoGivenASubDirectoryOfTheRepoPath","wrapper",
"RepositoryFixture","commander boundary","CanDiscoverAStandardRepoGivenTheRepoPath","wrapper",
"RepositoryFixture","commander boundary","CanDiscoverAStandardRepoGivenASubDirectoryOfTheRepoPath","wrapper",
"RepositoryFixture","commander boundary","CanDiscoverAStandardRepoGivenTheWorkingDirPath","wrapper",
"RepositoryFixture","commander boundary","DiscoverReturnsNullWhenNoRepoCanBeFound","command collaborator",
"RepositoryFixture","commander boundary","CanDetectIfTheHeadIsOrphaned","command",
"RepositoryFixture","commander boundary","QueryingTheRemoteForADetachedHeadBranchReturnsNull","command collaborator",
"RepositoryFixture","commander boundary","ReadingEmptyRepositoryMessageReturnsNull","command",
"RepositoryFixture","commander boundary","CanReadRepositoryMessage","command",
"RepositoryFixture","commander boundary","AccessingADeletedHeadThrows","command",
"RepositoryFixture","commander boundary","CanDetectShallowness","command collaborator",
"RepositoryFixture","commander boundary","CanCreateInMemoryRepository","wrapper stateless",
"RepositoryFixture","commander boundary","CanListRemoteReferencesWithCredentials","wrapper stateless",
"RepositoryFixture","commander boundary","CanListRemoteReferences","controller stateless",
"RepositoryFixture","commander boundary","CanListRemoteReferencesWithDetachedRemoteHead","command collaborator",
"RepositoryFixture","commander boundary","ReadingReferenceRepositoryThroughListRemoteReferencesThrows","wrapper stateless",
"RepositoryFixture","commander boundary","ReadingReferenceTargetFromListRemoteReferencesThrows","controller stateless",
"ResetHeadFixture","commander","ResetANewlyInitializedRepositoryThrows","command",
"ResetHeadFixture","commander","SoftResetToTheHeadOfARepositoryDoesNotChangeTheTargetOfTheHead","command collaborator",
"ResetHeadFixture","commander","SoftResetToAParentCommitChangesTheTargetOfTheHead","command collaborator",
"ResetHeadFixture","commander","SoftResetSetsTheHeadToTheDereferencedCommitOfAChainedTag","command collaborator",
"ResetHeadFixture","commander","ResettingWithBadParamsThrows","command",
"ResetHeadFixture","commander","SoftResetSetsTheHeadToTheSpecifiedCommit","command",
"ResetHeadFixture","commander","SoftResetSetsTheDetachedHeadToTheSpecifiedCommit","command",
"ResetHeadFixture","commander","AssertSoftReset","command collaborator",
"ResetHeadFixture","commander","MixedResetRefreshesTheIndex","command collaborator",
"ResetHeadFixture","commander","MixedResetInABareRepositoryThrows","command",
"ResetHeadFixture","commander","HardResetInABareRepositoryThrows","command",
"ResetHeadFixture","commander","HardResetUpdatesTheContentOfTheWorkingDirectory","command collaborator",
"GitBuf","boundary small-class","Dispose","wrapper",
"GitObjectLazyGroup","boundary small-class","GitObjectLazyGroup","constructor",
"GitObjectLazyGroup","boundary small-class","EvaluateInternal","wrapper",
"RenameDetails","unclassified","RenameDetails","constructor",
"RenameDetails","unclassified","RenameDetails","constructor",
"RenameDetails","unclassified","Equals","predicate non-void-command collaborator",
"RenameDetails","unclassified","Equals","predicate non-void-command",
"RenameDetails","unclassified","GetHashCode","property non-void-command",
"RenameDetails","unclassified","get","get",
"RenameDetails","unclassified","get","get",
"RenameDetails","unclassified","get","get",
"RenameDetails","unclassified","get","wrapper stateless",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"FastForwardCheckoutOptionsAdapter","entity data-provider boundary","FastForwardCheckoutOptionsAdapter","constructor",
"FastForwardCheckoutOptionsAdapter","entity data-provider boundary","GenerateCallbacks","property non-void-command collaborator",
"FastForwardCheckoutOptionsAdapter","entity data-provider boundary","get","get collaborator",
"FastForwardCheckoutOptionsAdapter","entity data-provider boundary","get","get collaborator",
"GitCheckoutOptsWrapper","commander small-class","GitCheckoutOptsWrapper","constructor",
"GitCheckoutOptsWrapper","commander small-class","Dispose","command",
"CommitAncestorFixture","commander boundary small-class","FindCommonAncestorForTwoCommits","command collaborator",
"CommitAncestorFixture","commander boundary small-class","FindCommonAncestorForTwoCommitsThrows","command collaborator",
"MergeTreeResult","empty","MergeTreeResult","constructor",
"MergeTreeResult","empty","MergeTreeResult","constructor",
"MergeTreeResult","empty","MergeTreeResult","constructor",
"Diff","entity boundary","Diff","constructor",
"Diff","entity boundary","Diff","constructor",
"Diff","entity boundary","Compare","property non-void-command collaborator",
"Diff","entity boundary","Compare","property factory wrapper",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","BuildDiffList","property non-void-command collaborator",
"PackBuilderHandle","boundary small-class","PackBuilderHandle","constructor",
"PackBuilderHandle","boundary small-class","PackBuilderHandle","constructor",
"PackBuilderHandle","boundary small-class","Free","wrapper",
"GitDiffOptions","commander small-class","Dispose","command",
"ConfigurationEntry<T>","data-provider boundary small-class","ConfigurationEntry","constructor",
"ConfigurationEntry<T>","data-provider boundary small-class","ConfigurationEntry","constructor",
"ConfigurationEntry<T>","data-provider boundary small-class","get","property wrapper",
"GitFetchOptionsWrapper","commander small-class","GitFetchOptionsWrapper","constructor",
"GitFetchOptionsWrapper","commander small-class","GitFetchOptionsWrapper","constructor",
"GitFetchOptionsWrapper","commander small-class","Dispose","set",
"GitFetchOptionsWrapper","commander small-class","Dispose","command",
"BranchFixture","commander boundary","CanCreateBranch","command collaborator",
"BranchFixture","commander boundary","CanHeadBeDetached","command",
"BranchFixture","commander boundary","CanCreateAnUnbornBranch","command collaborator",
"BranchFixture","commander boundary","CanCreateBranchUsingAbbreviatedSha","command collaborator",
"BranchFixture","commander boundary","CanCreateBranchFromImplicitHead","command collaborator",
"BranchFixture","commander boundary","CanCreateBranchFromExplicitHead","command collaborator",
"BranchFixture","commander boundary","CanCreateBranchFromCommit","command collaborator",
"BranchFixture","commander boundary","CanCreateBranchFromRevparseSpec","command collaborator",
"BranchFixture","commander boundary","CreatingABranchFromATagPeelsToTheCommit","command collaborator",
"BranchFixture","commander boundary","CreatingABranchTriggersTheCreationOfADirectReference","command collaborator",
"BranchFixture","commander boundary","CreatingABranchFromANonCommitObjectThrows","command",
"BranchFixture","commander boundary","CreatingBranchWithUnknownNamedTargetThrows","command",
"BranchFixture","commander boundary","CreatingBranchWithUnknownShaTargetThrows","command",
"BranchFixture","commander boundary","CreatingBranchWithBadParamsThrows","command",
"BranchFixture","commander boundary","CanListAllBranches","command",
"BranchFixture","commander boundary","CanListBranchesWithRemoteAndLocalBranchWithSameShortName","command collaborator",
"BranchFixture","commander boundary","CanListAllBranchesWhenGivenWorkingDir","command collaborator",
"BranchFixture","commander boundary","CanListAllBranchesIncludingRemoteRefs","command collaborator",
"BranchFixture","commander boundary","CanResolveRemote","command collaborator",
"BranchFixture","commander boundary","RemoteAndUpstreamBranchCanonicalNameForNonTrackingBranchIsNull","command collaborator",
"BranchFixture","commander boundary","QueryRemoteForLocalTrackingBranch","command collaborator",
"BranchFixture","commander boundary","QueryUpstreamBranchCanonicalNameForLocalTrackingBranch","command collaborator",
"BranchFixture","commander boundary","QueryRemoteForRemoteBranch","command collaborator",
"BranchFixture","commander boundary","QueryUnresolvableRemoteForRemoteBranch","command collaborator",
"BranchFixture","commander boundary","QueryAmbigousRemoteForRemoteBranch","command collaborator",
"BranchFixture","commander boundary","CanLookupABranchByItsCanonicalName","command collaborator",
"BranchFixture","commander boundary","CanLookupLocalBranch","command collaborator",
"BranchFixture","commander boundary","CanLookupABranchWhichNameIsMadeOfNon7BitsAsciiCharacters","command collaborator",
"BranchFixture","commander boundary","LookingOutABranchByNameWithBadParamsThrows","command collaborator",
"BranchFixture","commander boundary","CanGetInformationFromUnbornBranch","command collaborator",
"BranchFixture","commander boundary","CanGetTrackingInformationFromBranchSharingNoHistoryWithItsTrackedBranch","command collaborator",
"BranchFixture","commander boundary","TrackingInformationIsEmptyForBranchTrackingPrunedRemoteBranch","command collaborator",
"BranchFixture","commander boundary","TrackingInformationIsEmptyForNonTrackingBranch","command collaborator",
"BranchFixture","commander boundary","CanGetTrackingInformationForTrackingBranch","command collaborator",
"BranchFixture","commander boundary","CanGetTrackingInformationForLocalTrackingBranch","command collaborator",
"BranchFixture","commander boundary","RenamingARemoteTrackingBranchThrows","command collaborator",
"BranchFixture","commander boundary","CanWalkCommitsFromAnotherBranch","command collaborator",
"BranchFixture","commander boundary","CanSetTrackedBranch","command collaborator",
"BranchFixture","commander boundary","SetTrackedBranchForUnreasolvableRemoteThrows","command collaborator",
"BranchFixture","commander boundary","CanSetUpstreamBranch","command collaborator",
"BranchFixture","commander boundary","CanSetLocalTrackedBranch","command collaborator",
"BranchFixture","commander boundary","CanUnsetTrackedBranch","command collaborator",
"BranchFixture","commander boundary","CanWalkCommitsFromBranch","command collaborator",
"BranchFixture","commander boundary","AssertRemoval","command collaborator",
"BranchFixture","commander boundary","CanRemoveAnExistingNamedBranch","command",
"BranchFixture","commander boundary","CanRemoveAnExistingBranch","command collaborator",
"BranchFixture","commander boundary","CanCreateBranchInDeletedNestedBranchNamespace","command collaborator",
"BranchFixture","commander boundary","CanRemoveANonExistingBranch","command",
"BranchFixture","commander boundary","RemovingABranchWhichIsTheCurrentHeadThrows","command",
"BranchFixture","commander boundary","RemovingABranchWithBadParamsThrows","command",
"BranchFixture","commander boundary","OnlyOneBranchIsTheHead","command",
"BranchFixture","commander boundary","TwoBranchesPointingAtTheSameCommitAreNotBothCurrent","command collaborator",
"BranchFixture","commander boundary","CanRenameABranch","command collaborator",
"BranchFixture","commander boundary","BlindlyRenamingABranchOverAnExistingOneThrows","command",
"BranchFixture","commander boundary","CanRenameABranchWhileOverwritingAnExistingOne","command collaborator",
"BranchFixture","commander boundary","DetachedHeadIsNotATrackingBranch","command",
"BranchFixture","commander boundary","TrackedBranchExistsFromDefaultConfigInEmptyClone","command",
"BranchFixture","commander boundary","RemoteBranchesDoNotTrackAnything","command collaborator",
"BranchFixture","commander boundary","CreatingABranchIncludesTheCorrectReflogEntries","command collaborator",
"BranchFixture","commander boundary","RenamingABranchIncludesTheCorrectReflogEntries","command collaborator",
"AfterRebaseStepInfo","empty","AfterRebaseStepInfo","constructor",
"AfterRebaseStepInfo","empty","AfterRebaseStepInfo","constructor",
"AfterRebaseStepInfo","empty","AfterRebaseStepInfo","constructor",
"SelfCleaningDirectory","empty","SelfCleaningDirectory","constructor",
"SelfCleaningDirectory","empty","SelfCleaningDirectory","constructor",
"SmartSubtransportStream","boundary","SmartSubtransportStream","constructor",
"SmartSubtransportStream","boundary","SmartSubtransportStream","constructor",
"SmartSubtransportStream","boundary","Free","set",
"SmartSubtransportStream","boundary","SetError","set collaborator",
"SmartSubtransportStream","boundary","get","get collaborator",
"SmartSubtransportStream","boundary","get","get set collaborator",
"GitSmartSubtransport","empty","GitSmartSubtransport","constructor",
"GitSmartSubtransportStream","empty","GitSmartSubtransportStream","constructor",
"CherryPickOptions","empty","CherryPickOptions","constructor",
"Tag","empty","Tag","constructor",
"Tag","empty","Tag","constructor",
"TreeDefinitionFixture","commander boundary","CanBuildATreeDefinitionFromATree","command collaborator",
"TreeDefinitionFixture","commander boundary","BuildingATreeDefinitionWithBadParamsThrows","wrapper stateless",
"TreeDefinitionFixture","commander boundary","RequestingANonExistingEntryReturnsNull","command collaborator",
"TreeDefinitionFixture","commander boundary","RequestingAnEntryWithBadParamsThrows","command collaborator",
"TreeDefinitionFixture","commander boundary","CanRetrieveEntries","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddAnExistingTreeEntryDefinition","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddAnExistingGitLinkTreeEntryDefinition","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddAndRemoveAnExistingTreeEntry","command collaborator",
"TreeDefinitionFixture","commander boundary","TreeNamesCanContainCharsForbiddenOnSomeOS","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddAnExistingGitLinkTreeEntry","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddAnExistingBlob","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddBlobById","command collaborator",
"TreeDefinitionFixture","commander boundary","CannotAddTreeById","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddAnExistingSubmodule","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddAnExistingTree","command collaborator",
"TreeDefinitionFixture","commander boundary","CanReplaceAnExistingTreeWithABlob","command collaborator",
"TreeDefinitionFixture","commander boundary","CanReplaceAnExistingBlobWithATree","command collaborator",
"TreeDefinitionFixture","commander boundary","CanReplaceAnExistingTreeWithAGitLink","command collaborator",
"TreeDefinitionFixture","commander boundary","CanReplaceAnExistingGitLinkWithATree","command collaborator",
"TreeDefinitionFixture","commander boundary","CanReplaceAnExistingBlobWithAGitLink","command collaborator",
"TreeDefinitionFixture","commander boundary","CanReplaceAnExistingGitLinkWithABlob","command collaborator",
"TreeDefinitionFixture","commander boundary","CanNotReplaceAnExistingTreeWithATreeBeingAssembled","command collaborator",
"TreeDefinitionFixture","commander boundary","ModifyingTheContentOfATreeSetsItsOidToNull","command collaborator",
"TreeDefinitionFixture","commander boundary","CanAddAnExistingBlobEntryWithAnExistingTree","command collaborator",
"ConflictCollection","unclassified","ConflictCollection","constructor",
"ConflictCollection","unclassified","ConflictCollection","constructor",
"ConflictCollection","unclassified","AllConflicts","factory controller",
"ConflictCollection","unclassified","GetEnumerator","property non-void-command collaborator",
"ConflictCollection","unclassified","IEnumerable.GetEnumerator","property non-void-command collaborator",
"ConflictCollection","unclassified","get","property wrapper",
"ConflictCollection","unclassified","get","property factory collaborator",
"ConflictCollection","unclassified","get","property factory collaborator",
"GitStatusOptions","commander small-class","Dispose","command",
"GitStrArray","commander small-class","Reset","command",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","get","collaborator incidental",
"GitStrArrayNative","small-class","ReadStrings","property non-void-command",
"GitStrArrayNative","small-class","Dispose","command",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"CertificateSsh","data-provider boundary small-class","CertificateSsh","constructor",
"CertificateSsh","data-provider boundary small-class","CertificateSsh","constructor",
"CertificateSsh","data-provider boundary small-class","ToPointer","property wrapper",
"Libgit2Object","unclassified","Libgit2Object","constructor",
"Libgit2Object","unclassified","Libgit2Object","constructor",
"Libgit2Object","unclassified","~Libgit2Object","destructor",
"Libgit2Object","unclassified","AsIntPtr","property",
"Libgit2Object","unclassified","Dispose","command",
"Libgit2Object","unclassified","Dispose","command",
"Libgit2Object","unclassified","get","get collaborator",
"Libgit2Object","unclassified","get","predicate",
"BlameHandle","boundary small-class","BlameHandle","constructor",
"BlameHandle","boundary small-class","BlameHandle","constructor",
"BlameHandle","boundary small-class","Free","wrapper",
"CommitOptions","empty","CommitOptions","constructor",
"LogConfiguration","boundary degenerate small-class","LogConfiguration","constructor",
"LogConfiguration","boundary degenerate small-class","LogConfiguration","constructor",
"LogConfiguration","boundary degenerate small-class","GitTraceHandler","wrapper stateless",
"DiffHandle","boundary small-class","DiffHandle","constructor",
"DiffHandle","boundary small-class","DiffHandle","constructor",
"DiffHandle","boundary small-class","Free","wrapper",
"PatchHandle","boundary small-class","PatchHandle","constructor",
"PatchHandle","boundary small-class","PatchHandle","constructor",
"PatchHandle","boundary small-class","Free","wrapper",
"ConfigurationHandle","boundary small-class","ConfigurationHandle","constructor",
"ConfigurationHandle","boundary small-class","ConfigurationHandle","constructor",
"ConfigurationHandle","boundary small-class","Free","wrapper",
"IndexHandle","boundary small-class","IndexHandle","constructor",
"IndexHandle","boundary small-class","IndexHandle","constructor",
"IndexHandle","boundary small-class","Free","wrapper",
"ReflogHandle","boundary small-class","ReflogHandle","constructor",
"ReflogHandle","boundary small-class","ReflogHandle","constructor",
"ReflogHandle","boundary small-class","Free","wrapper",
"Patch","unclassified","Patch","constructor",
"Patch","unclassified","Patch","constructor",
"Patch","unclassified","AddFileChange","void-accessor command collaborator",
"Patch","unclassified","PrintCallBack","property non-void-command",
"Patch","unclassified","GetEnumerator","property non-void-command collaborator",
"Patch","unclassified","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Patch","unclassified","Dispose","command",
"Patch","unclassified","Dispose","empty",
"Patch","unclassified","get","get collaborator",
"Patch","unclassified","get","property non-void-command collaborator",
"Patch","unclassified","get","get",
"Patch","unclassified","get","get",
"Patch","unclassified","get","property non-void-command",
"Patch","unclassified","get","property wrapper",
"DescribeResultHandle","boundary small-class","DescribeResultHandle","constructor",
"DescribeResultHandle","boundary small-class","DescribeResultHandle","constructor",
"DescribeResultHandle","boundary small-class","Free","wrapper",
"SubmoduleHandle","boundary small-class","SubmoduleHandle","constructor",
"SubmoduleHandle","boundary small-class","SubmoduleHandle","constructor",
"SubmoduleHandle","boundary small-class","Free","wrapper",
"ObjectDatabaseHandle","boundary small-class","ObjectDatabaseHandle","constructor",
"ObjectDatabaseHandle","boundary small-class","ObjectDatabaseHandle","constructor",
"ObjectDatabaseHandle","boundary small-class","Free","wrapper",
"SubmoduleLazyGroup","commander boundary small-class","SubmoduleLazyGroup","constructor",
"SubmoduleLazyGroup","commander boundary small-class","EvaluateInternal","command collaborator",
"RevWalkerHandle","boundary small-class","RevWalkerHandle","constructor",
"RevWalkerHandle","boundary small-class","RevWalkerHandle","constructor",
"RevWalkerHandle","boundary small-class","Free","wrapper",
"NativeMethods","empty","NativeMethods","constructor",
"Signature","data-provider","Signature","constructor",
"Signature","data-provider","Signature","constructor",
"Signature","data-provider","Signature","constructor",
"Signature","data-provider","BuildHandle","property wrapper",
"Signature","data-provider","Equals","predicate non-void-command collaborator",
"Signature","data-provider","Equals","predicate non-void-command",
"Signature","data-provider","GetHashCode","property non-void-command",
"Signature","data-provider","ToString","wrapper stateless",
"Signature","data-provider","get","get",
"Signature","data-provider","get","get",
"Signature","data-provider","get","get collaborator",
"LaxUtf8Marshaler","boundary degenerate small-class","LaxUtf8Marshaler","constructor",
"LaxUtf8Marshaler","boundary degenerate small-class","MarshalManagedToNative","wrapper stateless",
"RebaseHandle","boundary small-class","RebaseHandle","constructor",
"RebaseHandle","boundary small-class","RebaseHandle","constructor",
"RebaseHandle","boundary small-class","Free","wrapper",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"OdbStreamHandle","boundary small-class","OdbStreamHandle","constructor",
"OdbStreamHandle","boundary small-class","OdbStreamHandle","constructor",
"OdbStreamHandle","boundary small-class","Free","wrapper",
"RebaseOptions","data-provider boundary small-class","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"RebaseOptions","data-provider boundary small-class","get","property wrapper",
"ObjectSafeWrapper","commander small-class","ObjectSafeWrapper","constructor",
"ObjectSafeWrapper","commander small-class","Dispose","command",
"ObjectSafeWrapper","commander small-class","Dispose","command",
"ShadowCopyFixture","commander small-class","CanProbeForNativeBinariesFromAShadowCopiedAssembly","command",
