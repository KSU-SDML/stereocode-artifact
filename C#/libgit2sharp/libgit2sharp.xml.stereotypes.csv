Class Name,Class Stereotype,Method Name,Method Stereotype
"UsernamePasswordCredentials","data-provider boundary small-class","GitCredentialHandler","property wrapper",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","UnmergedIndexEntriesException","constructor",
"UnmergedIndexEntriesException","boundary degenerate small-class","get","collaborator incidental",
"TreeEntry","boundary","TreeEntry","constructor",
"TreeEntry","boundary","TreeEntry","copy-constructor",
"TreeEntry","boundary","RetrieveTreeEntryTarget","property non-void-command factory collaborator",
"TreeEntry","boundary","Equals","predicate non-void-command collaborator",
"TreeEntry","boundary","Equals","predicate non-void-command",
"TreeEntry","boundary","GetHashCode","property non-void-command",
"TreeEntry","boundary","get","get",
"TreeEntry","boundary","get","get collaborator",
"TreeEntry","boundary","get","get collaborator",
"TreeEntry","boundary","get","wrapper stateless",
"TreeDefinition","entity boundary","AddEntry","command collaborator",
"TreeDefinition","entity boundary","Remove","property non-void-command collaborator",
"TreeDefinition","entity boundary","Remove","property non-void-command",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","Add","property non-void-command collaborator",
"TreeDefinition","entity boundary","AddGitLink","property non-void-command collaborator",
"TreeDefinition","entity boundary","RetrieveOrBuildTreeDefinition","property factory",
"TreeDefinition","entity boundary","Build","property set collaborator",
"TreeDefinition","entity boundary","WrapAllTreeDefinitions","set collaborator",
"TreeDefinition","entity boundary","WrapTree","set collaborator",
"TreeDefinition","entity boundary","get","property non-void-command collaborator",
"WorktreeLock","data-provider boundary small-class","WorktreeLock","constructor",
"WorktreeLock","data-provider boundary small-class","WorktreeLock","constructor",
"WorktreeLock","data-provider boundary small-class","get","property wrapper",
"Tree","entity boundary","Tree","constructor",
"Tree","entity boundary","Tree","constructor",
"Tree","entity boundary","RetrieveFromPath","property non-void-command factory collaborator",
"Tree","entity boundary","byIndex","factory wrapper stateless",
"Tree","entity boundary","GetEnumerator","property non-void-command collaborator",
"Tree","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Tree","entity boundary","get","property non-void-command collaborator",
"Tree","entity boundary","get","property non-void-command",
"TreeChanges","entity boundary","TreeChanges","constructor",
"TreeChanges","entity boundary","TreeChanges","constructor",
"TreeChanges","entity boundary","GetChangesOfKind","property non-void-command collaborator",
"TreeChanges","entity boundary","TryGetEntryWithChangeTypeAt","predicate wrapper",
"TreeChanges","entity boundary","GetEnumerator","property non-void-command collaborator",
"TreeChanges","entity boundary","GetEntryAt","property factory wrapper",
"TreeChanges","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"TreeChanges","entity boundary","Dispose","command",
"TreeChanges","entity boundary","Dispose","command",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","property non-void-command collaborator",
"TreeChanges","entity boundary","get","get",
"TreeChanges","entity boundary","get","wrapper stateless",
"SubmoduleCollection","boundary","SubmoduleCollection","constructor",
"SubmoduleCollection","boundary","SubmoduleCollection","constructor",
"SubmoduleCollection","boundary","Init","wrapper",
"SubmoduleCollection","boundary","Update","controller",
"SubmoduleCollection","boundary","GetEnumerator","property non-void-command collaborator",
"SubmoduleCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"SubmoduleCollection","boundary","TryStage","wrapper stateless",
"SubmoduleCollection","boundary","Lookup<T>","property wrapper",
"SubmoduleCollection","boundary","get","property wrapper",
"SubmoduleCollection","boundary","get","property non-void-command",
"Submodule","data-provider boundary","Submodule","constructor",
"Submodule","data-provider boundary","Submodule","constructor",
"Submodule","data-provider boundary","RetrieveStatus","property wrapper",
"Submodule","data-provider boundary","Equals","predicate non-void-command collaborator",
"Submodule","data-provider boundary","Equals","predicate non-void-command",
"Submodule","data-provider boundary","GetHashCode","property non-void-command",
"Submodule","data-provider boundary","ToString","incidental",
"Submodule","data-provider boundary","get","get",
"Submodule","data-provider boundary","get","get",
"Submodule","data-provider boundary","get","get",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","get collaborator",
"Submodule","data-provider boundary","get","wrapper stateless",
"Submodule","data-provider boundary","get","get collaborator",
"StatusOptions","empty","StatusOptions","constructor",
"StatusEntry","data-provider boundary","StatusEntry","constructor",
"StatusEntry","data-provider boundary","StatusEntry","constructor",
"StatusEntry","data-provider boundary","Equals","predicate non-void-command collaborator",
"StatusEntry","data-provider boundary","Equals","predicate non-void-command",
"StatusEntry","data-provider boundary","GetHashCode","property non-void-command",
"StatusEntry","data-provider boundary","get","get collaborator",
"StatusEntry","data-provider boundary","get","get",
"StatusEntry","data-provider boundary","get","get collaborator",
"StatusEntry","data-provider boundary","get","get collaborator",
"StatusEntry","data-provider boundary","get","wrapper stateless",
"Stash","empty","Stash","constructor",
"Stash","empty","Stash","constructor",
"Version","boundary degenerate","Version","constructor",
"Version","boundary degenerate","RetrieveAbbrevShaFrom","controller stateless",
"Version","boundary degenerate","ToString","property non-void-command",
"Version","boundary degenerate","RetrieveVersion","wrapper stateless",
"Version","boundary degenerate","get","wrapper stateless",
"Version","boundary degenerate","get","wrapper stateless",
"SmartSubtransportRegistration<T>","commander boundary lazy-class degenerate","SmartSubtransportRegistration","constructor",
"SmartSubtransportRegistration<T>","commander boundary lazy-class degenerate","CreateRegistrationPointer","wrapper stateless",
"SmartSubtransportRegistration<T>","commander boundary lazy-class degenerate","CreateFunctionPointer","wrapper stateless",
"SmartSubtransportRegistration<T>","commander boundary lazy-class degenerate","Free","set",
"SmartSubtransport","boundary","CertificateCheck","property controller",
"SmartSubtransport","boundary","AcquireCredentials","property wrapper",
"SmartSubtransport","boundary","Close","empty",
"SmartSubtransport","boundary","Dispose","set",
"SmartSubtransport","boundary","get","get set collaborator",
"SimilarityOptions","factory controller data-class","SimilarityOptions","constructor",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"SimilarityOptions","factory controller data-class","get","property set factory",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryNotFoundException","empty","RepositoryNotFoundException","constructor",
"RepositoryInformation","data-provider boundary","RepositoryInformation","constructor",
"RepositoryInformation","data-provider boundary","RepositoryInformation","constructor",
"RepositoryInformation","data-provider boundary","get","predicate wrapper",
"RepositoryInformation","data-provider boundary","get","predicate wrapper",
"RepositoryInformation","data-provider boundary","get","property wrapper",
"RepositoryInformation","data-provider boundary","get","property wrapper",
"Repository","data-provider boundary","Repository","constructor",
"Repository","data-provider boundary","Repository","constructor",
"Repository","data-provider boundary","Repository","copy-constructor",
"Repository","data-provider boundary","Repository","constructor",
"Repository","data-provider boundary","Repository","copy-constructor",
"Repository","data-provider boundary","EagerlyLoadComponentsWithSpecifiedPaths","wrapper",
"Repository","data-provider boundary","Dispose","command",
"Repository","data-provider boundary","Dispose","wrapper stateless",
"Repository","data-provider boundary","Lookup","property non-void-command collaborator",
"Repository","data-provider boundary","Lookup","property non-void-command collaborator",
"Repository","data-provider boundary","Lookup","property non-void-command collaborator",
"Repository","data-provider boundary","Lookup","property non-void-command collaborator",
"Repository","data-provider boundary","LookupInternal","property wrapper",
"Repository","data-provider boundary","Lookup","property controller",
"Repository","data-provider boundary","LookupCommit","property non-void-command collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","property factory wrapper",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","property wrapper",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"Repository","data-provider boundary","get","get collaborator",
"RemoteUpdater","entity boundary","RemoteUpdater","constructor",
"RemoteUpdater","entity boundary","RemoteUpdater","constructor",
"RemoteUpdater","entity boundary","RemoteUpdater","constructor",
"RemoteUpdater","entity boundary","GetFetchRefSpecs","property wrapper",
"RemoteUpdater","entity boundary","SetFetchRefSpecs","command collaborator",
"RemoteUpdater","entity boundary","GetPushRefSpecs","property wrapper",
"RemoteUpdater","entity boundary","SetPushRefSpecs","command collaborator",
"RemoteUpdater","entity boundary","set","wrapper",
"RemoteUpdater","entity boundary","set","wrapper",
"RemoteUpdater","entity boundary","set","wrapper",
"RemoteUpdater","entity boundary","get","get collaborator",
"RemoteUpdater","entity boundary","set","non-void-command collaborator",
"RemoteUpdater","entity boundary","get","get collaborator",
"RemoteUpdater","entity boundary","set","non-void-command collaborator",
"RemoteCallbacks","data-provider boundary","RemoteCallbacks","constructor",
"RemoteCallbacks","data-provider boundary","RemoteCallbacks","constructor",
"RemoteCallbacks","data-provider boundary","RemoteCallbacks","constructor",
"RemoteCallbacks","data-provider boundary","GenerateCallbacks","property factory collaborator",
"RemoteCallbacks","data-provider boundary","GitProgressHandler","property wrapper",
"RemoteCallbacks","data-provider boundary","GitUpdateTipsHandler","property wrapper",
"RemoteCallbacks","data-provider boundary","GitPushUpdateReference","property wrapper",
"RemoteCallbacks","data-provider boundary","GitDownloadTransferProgressHandler","property wrapper",
"RemoteCallbacks","data-provider boundary","GitPushTransferProgressHandler","property wrapper",
"RemoteCallbacks","data-provider boundary","GitPackbuilderProgressHandler","property wrapper",
"RemoteCallbacks","data-provider boundary","GitCredentialHandler","controller stateless",
"RemoteCallbacks","data-provider boundary","GitCertificateCheck","wrapper stateless",
"RemoteCallbacks","data-provider boundary","GitPushNegotiationHandler","controller stateless",
"ReflogEntry","data-provider boundary data-class","ReflogEntry","constructor",
"ReflogEntry","data-provider boundary data-class","ReflogEntry","constructor",
"ReflogEntry","data-provider boundary data-class","get","get collaborator",
"ReflogEntry","data-provider boundary data-class","get","get collaborator",
"ReflogEntry","data-provider boundary data-class","get","get collaborator",
"ReflogEntry","data-provider boundary data-class","get","get",
"ReflogCollection","unclassified","ReflogCollection","constructor",
"ReflogCollection","unclassified","ReflogCollection","constructor",
"ReflogCollection","unclassified","GetEnumerator","property controller",
"ReflogCollection","unclassified","IEnumerable.GetEnumerator","property non-void-command collaborator",
"ReflogCollection","unclassified","get","property non-void-command",
"ReferenceCollection","boundary","ReferenceCollection","constructor",
"ReferenceCollection","boundary","ReferenceCollection","constructor",
"ReferenceCollection","boundary","GetEnumerator","property non-void-command collaborator",
"ReferenceCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property wrapper",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property wrapper",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Add","property non-void-command collaborator",
"ReferenceCollection","boundary","Remove","command collaborator",
"ReferenceCollection","boundary","Remove","wrapper",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property wrapper",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Rename","property non-void-command collaborator",
"ReferenceCollection","boundary","Resolve<T>","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateDirectReferenceTarget","property wrapper",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateSymbolicRefenceTarget","property wrapper",
"ReferenceCollection","boundary","UpdateTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","MoveHeadTarget<T>","property controller",
"ReferenceCollection","boundary","UpdateHeadTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateHeadTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","UpdateHeadTarget","property non-void-command collaborator",
"ReferenceCollection","boundary","RetrieveReferencePtr","property wrapper",
"ReferenceCollection","boundary","FromGlob","property wrapper",
"ReferenceCollection","boundary","ReachableFrom","property factory controller",
"ReferenceCollection","boundary","ReachableFrom","property non-void-command collaborator",
"ReferenceCollection","boundary","Log","property factory wrapper",
"ReferenceCollection","boundary","Log","property factory wrapper",
"ReferenceCollection","boundary","RewriteHistory","command collaborator",
"ReferenceCollection","boundary","RewriteHistory","command collaborator",
"ReferenceCollection","boundary","EnsureHasLog","wrapper",
"ReferenceCollection","boundary","get","wrapper stateless",
"ReferenceCollection","boundary","get","collaborator incidental",
"ReferenceCollection","boundary","get","property non-void-command",
"Reference","lazy-class degenerate","Reference","constructor",
"Reference","lazy-class degenerate","Reference","constructor",
"Reference","lazy-class degenerate","Equals","predicate non-void-command collaborator",
"Reference","lazy-class degenerate","Equals","predicate non-void-command",
"Reference","lazy-class degenerate","GetHashCode","property non-void-command",
"Reference","lazy-class degenerate","ToString","incidental",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","get",
"Reference","lazy-class degenerate","get","get",
"Reference","lazy-class degenerate","get","incidental",
"Reference","lazy-class degenerate","get","incidental",
"Reference","lazy-class degenerate","get","incidental",
"Reference","lazy-class degenerate","get","incidental",
"Reference","lazy-class degenerate","get","wrapper stateless",
"Reference","lazy-class degenerate","get","get wrapper",
"RefSpecCollection","entity boundary","RefSpecCollection","constructor",
"RefSpecCollection","entity boundary","RefSpecCollection","constructor",
"RefSpecCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"RefSpecCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"RefSpecCollection","entity boundary","get","property non-void-command",
"RecurseSubmodulesException","empty","RecurseSubmodulesException","constructor",
"RecurseSubmodulesException","empty","RecurseSubmodulesException","constructor",
"RecurseSubmodulesException","empty","RecurseSubmodulesException","constructor",
"RebaseResult","empty","RebaseResult","constructor",
"RebaseResult","empty","RebaseResult","constructor",
"Rebase","entity boundary","Rebase","constructor",
"Rebase","entity boundary","Rebase","constructor",
"Rebase","entity boundary","AnnotatedCommitHandleFromRefHandle","property wrapper",
"Rebase","entity boundary","Start","property non-void-command collaborator",
"Rebase","entity boundary","Continue","property non-void-command collaborator",
"Rebase","entity boundary","Abort","command",
"Rebase","entity boundary","Abort","command collaborator",
"Rebase","entity boundary","GetCurrentStepInfo","property non-void-command factory collaborator",
"Rebase","entity boundary","GetStepInfo","property non-void-command factory collaborator",
"Rebase","entity boundary","GetCurrentStepIndex","property wrapper",
"Rebase","entity boundary","GetTotalStepCount","property wrapper",
"Rebase","entity boundary","EnsureNonBareRepo","wrapper",
"PushUpdate","empty","PushUpdate","constructor",
"PushUpdate","empty","PushUpdate","constructor",
"PushUpdate","empty","PushUpdate","constructor",
"PushStatusError","empty","PushStatusError","constructor",
"PushStatusError","empty","PushStatusError","constructor",
"PullOptions","empty","PullOptions","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","PeelException","constructor",
"PeelException","boundary degenerate small-class","get","collaborator incidental",
"VoidReference","boundary degenerate small-class","VoidReference","constructor",
"VoidReference","boundary degenerate small-class","ResolveToDirectReference","collaborator incidental",
"PatchStats","boundary","PatchStats","constructor",
"PatchStats","boundary","PatchStats","constructor",
"PatchStats","boundary","GetEnumerator","property non-void-command collaborator",
"PatchStats","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"PatchStats","boundary","Dispose","command",
"PatchStats","boundary","Dispose","empty",
"PatchStats","boundary","get","collaborator incidental",
"PatchStats","boundary","get","property non-void-command collaborator",
"PatchStats","boundary","get","get",
"PatchStats","boundary","get","get",
"PatchStats","boundary","get","wrapper stateless",
"OdbBackendStream","boundary","OdbBackendStream","constructor",
"OdbBackendStream","boundary","OdbBackendStream","constructor",
"OdbBackendStream","boundary","Dispose","set",
"OdbBackendStream","boundary","get","get collaborator",
"OdbBackendStream","boundary","get","get set collaborator",
"Worktree","unclassified","Worktree","constructor",
"Worktree","unclassified","Worktree","copy-constructor",
"Worktree","unclassified","GetWorktreeHandle","property wrapper",
"Worktree","unclassified","Equals","predicate non-void-command collaborator",
"Worktree","unclassified","Equals","predicate non-void-command",
"Worktree","unclassified","Unlock","set",
"Worktree","unclassified","Lock","set",
"Worktree","unclassified","GetHashCode","property non-void-command",
"Worktree","unclassified","ToString","incidental",
"Worktree","unclassified","get","get",
"Worktree","unclassified","get","property non-void-command factory collaborator",
"Worktree","unclassified","get","predicate",
"Worktree","unclassified","get","property",
"Worktree","unclassified","get","property wrapper",
"Worktree","unclassified","get","get collaborator",
"OdbBackend","entity minimal-entity boundary","Free","set",
"OdbBackend","entity minimal-entity boundary","AllocateAndBuildFrom","property non-void-command collaborator",
"OdbBackend","entity minimal-entity boundary","Allocate","factory wrapper stateless",
"OdbBackend","entity minimal-entity boundary","get","get set collaborator",
"RevertOptions","empty","RevertOptions","constructor",
"NoteCollection","entity boundary","NoteCollection","constructor",
"NoteCollection","entity boundary","NoteCollection","constructor",
"NoteCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"NoteCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"NoteCollection","entity boundary","RetrieveDefaultNamespace","property wrapper",
"NoteCollection","entity boundary","Add","property non-void-command collaborator",
"NoteCollection","entity boundary","Remove","wrapper",
"NoteCollection","entity boundary","get","get",
"NoteCollection","entity boundary","get","wrapper stateless",
"NoteCollection","entity boundary","get","property non-void-command factory collaborator",
"NoteCollection","entity boundary","get","wrapper stateless",
"NoteCollection","entity boundary","get","property wrapper",
"NoteCollection","entity boundary","get","property wrapper",
"NoteCollection","entity boundary","get","property non-void-command",
"Note","unclassified","Note","constructor",
"Note","unclassified","Note","constructor",
"Note","unclassified","Equals","predicate non-void-command collaborator",
"Note","unclassified","Equals","predicate non-void-command",
"Note","unclassified","GetHashCode","property non-void-command",
"Note","unclassified","get","property non-void-command",
"WorktreeCollection","boundary","WorktreeCollection","constructor",
"WorktreeCollection","boundary","WorktreeCollection","constructor",
"WorktreeCollection","boundary","Add","property wrapper",
"WorktreeCollection","boundary","Add","property factory wrapper",
"WorktreeCollection","boundary","Prune","predicate non-void-command collaborator",
"WorktreeCollection","boundary","Prune","controller stateless",
"WorktreeCollection","boundary","Lookup<T>","property wrapper",
"WorktreeCollection","boundary","GetEnumerator","property non-void-command collaborator",
"WorktreeCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"WorktreeCollection","boundary","get","property wrapper",
"WorktreeCollection","boundary","get","property non-void-command",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","NotFoundException","constructor",
"NotFoundException","boundary degenerate small-class","get","collaborator incidental",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","NameConflictException","constructor",
"NameConflictException","boundary degenerate small-class","get","collaborator incidental",
"MergeTreeOptions","empty","MergeTreeOptions","constructor",
"MergeOptions","empty","MergeOptions","constructor",
"MergeAndCheckoutOptionsBase","data-provider boundary small-class","MergeAndCheckoutOptionsBase","constructor",
"MergeAndCheckoutOptionsBase","data-provider boundary small-class","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"MergeAndCheckoutOptionsBase","data-provider boundary small-class","get","property wrapper",
"MatchedPathsAggregator","entity boundary","OnGitDiffNotify","property non-void-command collaborator",
"MatchedPathsAggregator","entity boundary","GetEnumerator","property non-void-command collaborator",
"MatchedPathsAggregator","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Line","empty","Line","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","InvalidSpecificationException","constructor",
"InvalidSpecificationException","boundary degenerate small-class","get","collaborator incidental",
"IndexReucEntryCollection","data-provider boundary","IndexReucEntryCollection","constructor",
"IndexReucEntryCollection","data-provider boundary","IndexReucEntryCollection","constructor",
"IndexReucEntryCollection","data-provider boundary","AllIndexReucs","property factory controller",
"IndexReucEntryCollection","data-provider boundary","GetEnumerator","property non-void-command collaborator",
"IndexReucEntryCollection","data-provider boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"IndexReucEntryCollection","data-provider boundary","get","property wrapper",
"IndexReucEntryCollection","data-provider boundary","get","property wrapper",
"IndexReucEntry","unclassified","IndexReucEntry","constructor",
"IndexReucEntry","unclassified","Equals","predicate non-void-command collaborator",
"IndexReucEntry","unclassified","Equals","predicate non-void-command",
"IndexReucEntry","unclassified","GetHashCode","property non-void-command",
"IndexReucEntry","unclassified","get","property wrapper",
"IndexNameEntryCollection","boundary","IndexNameEntryCollection","constructor",
"IndexNameEntryCollection","boundary","IndexNameEntryCollection","constructor",
"IndexNameEntryCollection","boundary","AllIndexNames","property factory controller",
"IndexNameEntryCollection","boundary","GetEnumerator","property non-void-command collaborator",
"IndexNameEntryCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"IndexNameEntryCollection","boundary","get","property wrapper",
"IndexNameEntry","unclassified","IndexNameEntry","constructor",
"IndexNameEntry","unclassified","Equals","predicate non-void-command collaborator",
"IndexNameEntry","unclassified","Equals","predicate non-void-command",
"IndexNameEntry","unclassified","GetHashCode","property non-void-command",
"IndexNameEntry","unclassified","get","property wrapper",
"RewriteHistoryOptions","empty","RewriteHistoryOptions","constructor",
"IndexEntry","unclassified","Equals","predicate non-void-command collaborator",
"IndexEntry","unclassified","Equals","predicate non-void-command",
"IndexEntry","unclassified","GetHashCode","property non-void-command",
"IndexEntry","unclassified","get","property non-void-command",
"Index","boundary","Index","constructor",
"Index","boundary","Index","copy-constructor",
"Index","boundary","Index","constructor",
"Index","boundary","Index","constructor",
"Index","boundary","AllIndexEntries","factory controller stateless",
"Index","boundary","GetEnumerator","property non-void-command collaborator",
"Index","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Index","boundary","Replace","wrapper",
"Index","boundary","Clear","wrapper stateless",
"Index","boundary","RemoveFromIndex","wrapper",
"Index","boundary","Remove","command",
"Index","boundary","Add","wrapper",
"Index","boundary","Add","command collaborator",
"Index","boundary","Replace","command collaborator",
"Index","boundary","AddEntryToTheIndex","wrapper",
"Index","boundary","Replace","command collaborator",
"Index","boundary","Replace","command collaborator",
"Index","boundary","Replace","command collaborator",
"Index","boundary","Write","wrapper",
"Index","boundary","WriteToTree","property non-void-command collaborator",
"Index","boundary","get","get collaborator",
"Index","boundary","get","property wrapper",
"Index","boundary","get","predicate wrapper",
"Index","boundary","get","property wrapper",
"Index","boundary","get","property wrapper",
"Index","boundary","get","get collaborator",
"Index","boundary","get","wrapper stateless",
"Ignore","unclassified","Ignore","constructor",
"Ignore","unclassified","Ignore","constructor",
"Ignore","unclassified","AddTemporaryRules","controller",
"Ignore","unclassified","ResetAllTemporaryRules","wrapper",
"Ignore","unclassified","IsPathIgnored","predicate wrapper",
"Identity","data-provider lazy-class","Identity","constructor",
"Identity","data-provider lazy-class","BuildNowSignatureHandle","wrapper stateless",
"Identity","data-provider lazy-class","get","get",
"Identity","data-provider lazy-class","get","get",
"TransientIndex","commander small-class","TransientIndex","constructor",
"TransientIndex","commander small-class","TransientIndex","constructor",
"TransientIndex","commander small-class","Dispose","command",
"NullHistoryDivergence","boundary degenerate small-class","get","collaborator incidental",
"GlobalSettings","boundary","GlobalSettings","constructor",
"GlobalSettings","boundary","set","set collaborator",
"GlobalSettings","boundary","get","get collaborator",
"GlobalSettings","boundary","get","property wrapper",
"GlobalSettings","boundary","set","set",
"GitObjectMetadata","entity boundary small-class","GitObjectMetadata","constructor",
"GitObjectMetadata","entity boundary small-class","get","property non-void-command collaborator",
"GitObject","unclassified","GitObject","constructor",
"GitObject","unclassified","GitObject","constructor",
"GitObject","unclassified","Peel<T>","property non-void-command collaborator",
"GitObject","unclassified","Peel<T>","property non-void-command collaborator",
"GitObject","unclassified","Equals","predicate non-void-command collaborator",
"GitObject","unclassified","Equals","predicate non-void-command",
"GitObject","unclassified","GetHashCode","property non-void-command",
"GitObject","unclassified","ToString","property non-void-command",
"GitObject","unclassified","get","property non-void-command",
"GitObject","unclassified","get","get collaborator",
"GitLink","small-class","GitLink","constructor",
"GitLink","small-class","GitLink","constructor",
"GitLink","small-class","get","property non-void-command",
"RepositoryStatus","entity data-provider boundary","RepositoryStatus","constructor",
"RepositoryStatus","entity data-provider boundary","RepositoryStatus","constructor",
"RepositoryStatus","entity data-provider boundary","AddStatusEntryForDelta","command collaborator",
"RepositoryStatus","entity data-provider boundary","GetEnumerator","property non-void-command collaborator",
"RepositoryStatus","entity data-provider boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"RepositoryStatus","entity data-provider boundary","get","property non-void-command factory collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get collaborator",
"RepositoryStatus","entity data-provider boundary","get","get",
"RepositoryStatus","entity data-provider boundary","get","wrapper stateless",
"FilteringOptions","empty","FilteringOptions","constructor",
"FilterRegistration","unclassified","FilterRegistration","constructor",
"FilterRegistration","unclassified","~FilterRegistration","destructor",
"FilterRegistration","unclassified","Free","set",
"FilterRegistration","unclassified","get","predicate",
"FilterRegistration","unclassified","get","get",
"FetchOptionsBase","empty","FetchOptionsBase","constructor",
"FetchHead","boundary degenerate small-class","FetchHead","constructor",
"FetchHead","boundary degenerate small-class","FetchHead","constructor",
"FetchHead","boundary degenerate small-class","get","collaborator incidental",
"ExplicitPathsOptions","empty","ExplicitPathsOptions","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EntryExistsException","empty","EntryExistsException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"EmptyCommitException","empty","EmptyCommitException","constructor",
"DirectReference","data-provider lazy-class small-class","DirectReference","constructor",
"DirectReference","data-provider lazy-class small-class","DirectReference","constructor",
"DirectReference","data-provider lazy-class small-class","ResolveToDirectReference","incidental",
"DirectReference","data-provider lazy-class small-class","get","get collaborator",
"DetachedHead","degenerate small-class","DetachedHead","constructor",
"DetachedHead","degenerate small-class","Shorten","incidental",
"DetachedHead","degenerate small-class","get","collaborator incidental",
"DefaultCredentials","boundary degenerate small-class","GitCredentialHandler","wrapper stateless",
"TreeEntryChanges","data-provider boundary small-class","TreeEntryChanges","constructor",
"TreeEntryChanges","data-provider boundary small-class","TreeEntryChanges","constructor",
"TreeEntryChanges","data-provider boundary small-class","get","property wrapper",
"WriteStream","commander boundary degenerate","WriteStream","copy-constructor",
"WriteStream","commander boundary degenerate","Flush","empty",
"WriteStream","commander boundary degenerate","SetLength","wrapper stateless",
"WriteStream","commander boundary degenerate","Read","wrapper stateless",
"WriteStream","commander boundary degenerate","Seek","wrapper stateless",
"WriteStream","commander boundary degenerate","Write","command",
"WriteStream","commander boundary degenerate","get","incidental",
"WriteStream","commander boundary degenerate","get","incidental",
"WriteStream","commander boundary degenerate","get","incidental",
"WriteStream","commander boundary degenerate","get","wrapper stateless",
"WriteStream","commander boundary degenerate","set","wrapper stateless",
"WriteStream","commander boundary degenerate","get","wrapper stateless",
"StrictUtf8Marshaler","boundary degenerate small-class","StrictUtf8Marshaler","constructor",
"StrictUtf8Marshaler","boundary degenerate small-class","StrictUtf8Marshaler","constructor",
"StrictUtf8Marshaler","boundary degenerate small-class","MarshalNativeToManaged","wrapper stateless",
"LaxUtf8NoCleanupMarshaler","degenerate small-class","CleanUpNativeData","empty",
"RawContentStream","commander small-class","RawContentStream","constructor",
"RawContentStream","commander small-class","Dispose","command",
"PushTransferCallbacks","small-class","PushTransferCallbacks","constructor",
"PushTransferCallbacks","small-class","GenerateCallback","property factory wrapper",
"PushTransferCallbacks","small-class","OnGitTransferProgress","wrapper stateless",
"PathCase","small-class","PathCase","constructor",
"PathCase","small-class","StartsWith","predicate controller",
"PathCase","small-class","get","get collaborator",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"UnbornBranchException","empty","UnbornBranchException","constructor",
"PackBuilder","entity boundary","PackBuilder","constructor",
"PackBuilder","entity boundary","Add<T>","command collaborator",
"PackBuilder","entity boundary","AddRecursively<T>","command collaborator",
"PackBuilder","entity boundary","Add","wrapper",
"PackBuilder","entity boundary","AddRecursively","wrapper",
"PackBuilder","entity boundary","IDisposable.Dispose","command",
"PackBuilder","entity boundary","Write","wrapper",
"PackBuilder","entity boundary","SetMaximumNumberOfThreads","property wrapper",
"PackBuilder","entity boundary","get","property wrapper",
"PackBuilder","entity boundary","get","property wrapper",
"PackBuilder","entity boundary","get","get collaborator",
"PackbuilderCallbacks","small-class","PackbuilderCallbacks","constructor",
"PackbuilderCallbacks","small-class","GenerateCallback","property factory wrapper",
"PackbuilderCallbacks","small-class","OnGitPackBuilderProgress","wrapper stateless",
"RemoteHandle","boundary small-class","RemoteHandle","constructor",
"RemoteHandle","boundary small-class","RemoteHandle","constructor",
"RemoteHandle","boundary small-class","Free","wrapper",
"FilePath","data-provider","FilePath","constructor",
"FilePath","data-provider","ToString","incidental",
"FilePath","data-provider","Equals","predicate wrapper",
"FilePath","data-provider","Equals","predicate non-void-command collaborator",
"FilePath","data-provider","GetHashCode","property non-void-command",
"FilePath","data-provider","get","get",
"FilePath","data-provider","get","get",
"EncodingMarshaler","data-provider boundary degenerate","EncodingMarshaler","constructor",
"EncodingMarshaler","data-provider boundary degenerate","CleanUpManagedData","empty",
"EncodingMarshaler","data-provider boundary degenerate","CleanUpNativeData","wrapper stateless",
"EncodingMarshaler","data-provider boundary degenerate","GetNativeDataSize","incidental",
"EncodingMarshaler","data-provider boundary degenerate","MarshalManagedToNative","property wrapper",
"EncodingMarshaler","data-provider boundary degenerate","MarshalNativeToManaged","property wrapper",
"ArrayMarshaler<T>","data-provider","ArrayMarshaler","constructor",
"ArrayMarshaler<T>","data-provider","ToArray","get",
"ArrayMarshaler<T>","data-provider","Dispose","wrapper",
"ArrayMarshaler<T>","data-provider","get","get",
"StashFixture","boundary degenerate","CannotAddStashAgainstBareRepository","wrapper stateless",
"StashFixture","boundary degenerate","CanAddAndRemoveStash","wrapper stateless",
"StashFixture","boundary degenerate","AddingAStashWithNoMessageGeneratesADefaultOne","wrapper stateless",
"StashFixture","boundary degenerate","AddStashWithBadParamsShouldThrows","wrapper stateless",
"StashFixture","boundary degenerate","StashingAgainstCleanWorkDirShouldReturnANullStash","wrapper stateless",
"StashFixture","boundary degenerate","CanStashWithoutOptions","wrapper stateless",
"StashFixture","boundary degenerate","CanStashAndKeepIndex","wrapper stateless",
"StashFixture","boundary degenerate","CanStashIgnoredFiles","wrapper stateless",
"StashFixture","boundary degenerate","CanStashAndApplyWithOptions","wrapper stateless",
"StashFixture","boundary degenerate","CanStashAndPop","wrapper stateless",
"StashFixture","boundary degenerate","StashFailsWithUncommittedChangesIntheIndex","wrapper stateless",
"StashFixture","boundary degenerate","StashCallsTheCallback","wrapper stateless",
"StashFixture","boundary degenerate","StashApplyReportsNotFound","wrapper stateless",
"StashFixture","boundary degenerate","RemovingStashWithBadParamShouldThrow","wrapper stateless",
"StashFixture","boundary degenerate","CanGetStashByIndexer","wrapper stateless",
"StashFixture","boundary degenerate","GettingStashWithBadIndexThrows","wrapper stateless",
"StashFixture","boundary degenerate","GettingAStashThatDoesNotExistReturnsNull","wrapper stateless",
"PatchEntryChangesFixture","boundary degenerate small-class","PatchEntryBasics","wrapper stateless",
"Configuration","entity boundary","Configuration","constructor",
"Configuration","entity boundary","Configuration","copy-constructor",
"Configuration","entity boundary","Init","set collaborator",
"Configuration","entity boundary","NormalizeConfigPath","wrapper stateless",
"Configuration","entity boundary","HasConfig","predicate non-void-command collaborator",
"Configuration","entity boundary","Dispose","command",
"Configuration","entity boundary","Unset","predicate non-void-command",
"Configuration","entity boundary","Unset","predicate non-void-command collaborator",
"Configuration","entity boundary","UnsetAll","predicate non-void-command",
"Configuration","entity boundary","UnsetAll","predicate non-void-command collaborator",
"Configuration","entity boundary","Dispose","command",
"Configuration","entity boundary","Get<T>","property non-void-command collaborator",
"Configuration","entity boundary","Get<T>","property non-void-command collaborator",
"Configuration","entity boundary","Get<T>","property non-void-command collaborator",
"Configuration","entity boundary","Get<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","GetValueOrDefault<T>","property non-void-command collaborator",
"Configuration","entity boundary","Set<T>","wrapper stateless",
"Configuration","entity boundary","Set<T>","command collaborator",
"Configuration","entity boundary","Add","command",
"Configuration","entity boundary","Add","command collaborator",
"Configuration","entity boundary","Find","property non-void-command collaborator",
"Configuration","entity boundary","Find","property non-void-command collaborator",
"Configuration","entity boundary","RetrieveConfigurationHandle","wrapper stateless",
"Configuration","entity boundary","GetEnumerator","property non-void-command collaborator",
"Configuration","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Configuration","entity boundary","BuildConfigEntries","property wrapper",
"Configuration","entity boundary","BuildSignature","property non-void-command factory collaborator",
"Configuration","entity boundary","BuildSignatureOrThrow","property non-void-command collaborator",
"Configuration","entity boundary","Snapshot","property wrapper",
"Configuration","entity boundary","WithinTransaction","wrapper",
"FileHistory","entity boundary small-class","FileHistory","constructor",
"FileHistory","entity boundary small-class","FileHistory","constructor",
"FileHistory","entity boundary small-class","GetEnumerator","property non-void-command collaborator",
"FileHistory","entity boundary small-class","IEnumerable.GetEnumerator","property non-void-command collaborator",
"TreeEntryDefinition","unclassified","TreeEntryDefinition","constructor",
"TreeEntryDefinition","unclassified","Equals","predicate non-void-command collaborator",
"TreeEntryDefinition","unclassified","Equals","predicate non-void-command",
"TreeEntryDefinition","unclassified","GetHashCode","property non-void-command",
"TreeEntryDefinition","unclassified","get","get collaborator",
"CommitFilter","data-provider boundary small-class","CommitFilter","constructor",
"CommitFilter","data-provider boundary small-class","get","property wrapper",
"CommitFilter","data-provider boundary small-class","get","property wrapper",
"Filter","boundary","Filter","copy-constructor",
"Filter","boundary","~Filter","destructor",
"Filter","boundary","Complete","empty",
"Filter","boundary","Initialize","empty",
"Filter","boundary","Create","empty",
"Filter","boundary","Clean","controller stateless",
"Filter","boundary","Smudge","controller stateless",
"Filter","boundary","Equals","predicate non-void-command collaborator",
"Filter","boundary","Equals","predicate non-void-command",
"Filter","boundary","GetHashCode","property non-void-command",
"Filter","boundary","InitializeCallback","property non-void-command",
"Filter","boundary","StreamCreateCallback","property non-void-command collaborator",
"Filter","boundary","StreamCloseCallback","property non-void-command collaborator",
"Filter","boundary","StreamFreeCallback","command collaborator",
"Filter","boundary","StreamWriteCallback","property non-void-command collaborator",
"Filter","boundary","get","get",
"Filter","boundary","get","get collaborator",
"Filter","boundary","get","get collaborator",
"TarWriter","boundary","TarWriter","constructor",
"TarWriter","boundary","Dispose","command",
"TarWriter","boundary","Write","command collaborator",
"TarWriter","boundary","AlignTo512","wrapper stateless",
"TarWriter","boundary","WriteHeader","controller stateless",
"TarWriter","boundary","WriteExtendedHeader","wrapper stateless",
"TarWriter","boundary","get","get collaborator",
"CherryPickResult","empty","CherryPickResult","constructor",
"CherryPickResult","empty","CherryPickResult","constructor",
"Blob","entity boundary","Blob","constructor",
"Blob","entity boundary","Blob","constructor",
"Blob","entity boundary","GetContentStream","property wrapper",
"Blob","entity boundary","GetContentStream","property wrapper",
"Blob","entity boundary","GetContentText","property non-void-command",
"Blob","entity boundary","GetContentText","property non-void-command collaborator",
"Blob","entity boundary","GetContentText","property non-void-command collaborator",
"Blob","entity boundary","GetContentText","property non-void-command collaborator",
"CheckoutOptions","entity boundary small-class","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"CheckoutOptions","entity boundary small-class","get","property non-void-command collaborator",
"CheckoutCallbacks","data-provider boundary","CheckoutCallbacks","constructor",
"CheckoutCallbacks","data-provider boundary","OnGitCheckoutProgress","wrapper",
"CheckoutCallbacks","data-provider boundary","OnGitCheckoutNotify","property wrapper",
"CheckoutCallbacks","data-provider boundary","get","property collaborator",
"CheckoutCallbacks","data-provider boundary","get","property collaborator",
"PackBuilderOptions","data-class","PackBuilderOptions","constructor",
"PackBuilderOptions","data-class","set","set",
"PackBuilderOptions","data-class","get","get",
"PackBuilderOptions","data-class","set","set",
"PackBuilderOptions","data-class","get","get",
"StrictFilePathMarshaler","entity boundary small-class","MarshalManagedToNative","property non-void-command collaborator",
"BlameHunkCollection","entity boundary","BlameHunkCollection","constructor",
"BlameHunkCollection","entity boundary","BlameHunkCollection","constructor",
"BlameHunkCollection","entity boundary","HunkForLine","property non-void-command collaborator",
"BlameHunkCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"BlameHunkCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"BlameHunkCollection","entity boundary","get","get collaborator",
"ContentChangeStats","empty","ContentChangeStats","constructor",
"ContentChangeStats","empty","ContentChangeStats","constructor",
"SymbolicReference","data-provider boundary lazy-class degenerate","SymbolicReference","constructor",
"SymbolicReference","data-provider boundary lazy-class degenerate","SymbolicReference","constructor",
"SymbolicReference","data-provider boundary lazy-class degenerate","ResolveToDirectReference","wrapper stateless",
"SymbolicReference","data-provider boundary lazy-class degenerate","get","get collaborator",
"SymbolicReference","data-provider boundary lazy-class degenerate","get","wrapper stateless",
"SubmoduleUpdateOptions","data-provider boundary","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"SubmoduleUpdateOptions","data-provider boundary","get","get collaborator",
"SubmoduleUpdateOptions","data-provider boundary","get","get collaborator",
"MergeHead","empty","MergeHead","constructor",
"MergeHead","empty","MergeHead","constructor",
"TreeEntryHandle","boundary small-class","TreeEntryHandle","constructor",
"TreeEntryHandle","boundary small-class","TreeEntryHandle","constructor",
"TreeEntryHandle","boundary small-class","Free","wrapper",
"BeforeRebaseStepInfo","empty","BeforeRebaseStepInfo","constructor",
"BeforeRebaseStepInfo","empty","BeforeRebaseStepInfo","constructor",
"BranchUpdater","commander","BranchUpdater","constructor",
"BranchUpdater","commander","BranchUpdater","constructor",
"BranchUpdater","commander","UnsetUpstream","command",
"BranchUpdater","commander","SetUpstream","command",
"BranchUpdater","commander","SetUpstreamBranch","command",
"BranchUpdater","commander","SetUpstreamRemote","command",
"BranchUpdater","commander","GetUpstreamInformation","void-accessor command",
"BranchUpdater","commander","set","non-void-command",
"BranchUpdater","commander","set","non-void-command",
"BranchUpdater","commander","set","non-void-command",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","BareRepositoryException","constructor",
"BareRepositoryException","boundary degenerate small-class","get","collaborator incidental",
"TreeFixture","boundary","CanCompareTwoTreeEntries","wrapper",
"TreeFixture","boundary","CanConvertEntryToBlob","wrapper",
"TreeFixture","boundary","CanConvertEntryToTree","wrapper",
"TreeFixture","boundary","CanEnumerateBlobs","controller",
"TreeFixture","boundary","CanEnumerateSubTrees","controller",
"TreeFixture","boundary","CanEnumerateTreeEntries","controller",
"TreeFixture","boundary","CanGetEntryByName","wrapper",
"TreeFixture","boundary","GettingAnUknownTreeEntryReturnsNull","wrapper",
"TreeFixture","boundary","CanGetEntryCountFromTree","wrapper",
"TreeFixture","boundary","CanReadEntryAttributes","wrapper",
"TreeFixture","boundary","CanReadTheTreeData","wrapper",
"TreeFixture","boundary","TreeDataIsPresent","wrapper",
"TreeFixture","boundary","TreeUsesPosixStylePaths","wrapper",
"TreeFixture","boundary","CanRetrieveTreeEntryPath","controller stateless",
"TreeFixture","boundary","CanParseSymlinkTreeEntries","wrapper stateless",
"TreeFixture","boundary","CanTellIfATreeIsMissing","controller stateless",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","AmbiguousSpecificationException","constructor",
"AmbiguousSpecificationException","boundary degenerate small-class","get","collaborator incidental",
"TagCollection","entity boundary","TagCollection","constructor",
"TagCollection","entity boundary","TagCollection","constructor",
"TagCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"TagCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property wrapper",
"TagCollection","entity boundary","Add","property non-void-command collaborator",
"TagCollection","entity boundary","Add","property wrapper",
"TagCollection","entity boundary","Remove","wrapper",
"TagCollection","entity boundary","Remove","command collaborator",
"TagCollection","entity boundary","get","property non-void-command collaborator",
"TagCollection","entity boundary","get","property non-void-command",
"RebaseStepInfo","empty","RebaseStepInfo","constructor",
"RebaseStepInfo","empty","RebaseStepInfo","constructor",
"GitOdbBackendStream","empty","GitOdbBackendStream","constructor",
"CompareOptions","empty","CompareOptions","constructor",
"SmartSubtransportFixture","degenerate","CustomSmartSubtransportTest","controller",
"SmartSubtransportFixture","degenerate","CannotReregisterScheme","wrapper stateless",
"SmartSubtransportFixture","degenerate","CannotUnregisterTwice","wrapper stateless",
"RemoveFixture","boundary degenerate","CanRemoveAnUnalteredFileFromTheIndexWithoutRemovingItFromTheWorkingDirectory","wrapper stateless",
"RemoveFixture","boundary degenerate","RemovingAModifiedFileWhoseChangesHaveBeenPromotedToTheIndexAndWithAdditionalModificationsMadeToItThrows","wrapper stateless",
"RemoveFixture","boundary degenerate","CanRemoveAFolderThroughUsageOfPathspecsForNewlyAddedFiles","wrapper stateless",
"RemoveFixture","boundary degenerate","CanRemoveAFolderThroughUsageOfPathspecsForFilesAlreadyInTheIndexAndInTheHEAD","wrapper stateless",
"RemoveFixture","boundary degenerate","RemovingAnUnknownFileWithLaxExplicitPathsValidationDoesntThrow","wrapper stateless",
"RemoveFixture","boundary degenerate","RemovingAnUnknownFileThrowsIfExplicitPath","wrapper stateless",
"RemoveFixture","boundary degenerate","RemovingFileWithBadParamsThrows","wrapper stateless",
"ExpectedFetchState","entity commander boundary","ExpectedFetchState","constructor",
"ExpectedFetchState","entity commander boundary","AddExpectedBranch","command collaborator",
"ExpectedFetchState","entity commander boundary","AddExpectedTag","command collaborator",
"ExpectedFetchState","entity commander boundary","RemoteUpdateTipsHandler","predicate non-void-command collaborator",
"ExpectedFetchState","entity commander boundary","CheckUpdatedReferences","command collaborator",
"Platform","boundary degenerate small-class","get","wrapper stateless",
"ContentChanges","unclassified","ContentChanges","constructor",
"ContentChanges","unclassified","ContentChanges","constructor",
"ContentChanges","unclassified","ContentChanges","constructor",
"ContentChanges","unclassified","AppendToPatch","command",
"ContentChanges","unclassified","FileCallback","property set",
"ContentChanges","unclassified","HunkCallback","property non-void-command",
"ContentChanges","unclassified","LineCallback","property non-void-command",
"ContentChanges","unclassified","get","property non-void-command",
"ContentChanges","unclassified","get","property wrapper",
"ReferenceFixture","boundary degenerate","CanAddADirectReference","controller stateless",
"ReferenceFixture","boundary degenerate","CanAddADirectReferenceFromRevParseSpec","controller stateless",
"ReferenceFixture","boundary degenerate","CreatingADirectReferenceWithARevparseSpecPointingAtAnUnknownObjectFails","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanAddASymbolicReferenceFromTheTargetName","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanAddASymbolicReferenceFromTheTargetReference","wrapper stateless",
"ReferenceFixture","boundary degenerate","BlindlyCreatingADirectReferenceOverAnExistingOneThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","BlindlyCreatingASymbolicReferenceOverAnExistingOneThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanAddAndOverwriteADirectReference","controller stateless",
"ReferenceFixture","boundary degenerate","CanAddAndOverwriteASymbolicReference","controller stateless",
"ReferenceFixture","boundary degenerate","AddWithEmptyStringForTargetThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","AddWithEmptyStringThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","AddWithNullForTargetThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","AddWithNullStringThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanRemoveAReference","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanRemoveANonExistingReference","wrapper stateless",
"ReferenceFixture","boundary degenerate","ARemovedReferenceCannotBeLookedUp","wrapper stateless",
"ReferenceFixture","boundary degenerate","RemovingAReferenceDecreasesTheRefsCount","wrapper stateless",
"ReferenceFixture","boundary degenerate","RemoveWithEmptyNameThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","RemoveWithNullNameThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanListAllReferencesEvenCorruptedOnes","wrapper",
"ReferenceFixture","boundary degenerate","CanResolveHeadByName","controller stateless",
"ReferenceFixture","boundary degenerate","CanResolveReferenceToALightweightTag","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanResolveReferenceToAnAnnotatedTag","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanResolveRefsByName","wrapper stateless",
"ReferenceFixture","boundary degenerate","ResolvingWithEmptyStringThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","ResolvingWithNullThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanUpdateTargetOfADirectReference","controller stateless",
"ReferenceFixture","boundary degenerate","CanUpdateTargetOfADirectReferenceWithAnAbbreviatedSha","controller stateless",
"ReferenceFixture","boundary degenerate","CanUpdateTargetOfASymbolicReference","controller stateless",
"ReferenceFixture","boundary degenerate","CanUpdateHeadWithARevparseSpec","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanUpdateHeadWithEitherAnObjectIdOrAReference","controller stateless",
"ReferenceFixture","boundary degenerate","CanUpdateTargetOfADirectReferenceWithARevparseSpec","wrapper stateless",
"ReferenceFixture","boundary degenerate","UpdatingADirectRefWithSymbolFails","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanUpdateTargetOfADirectReferenceWithAShortReferenceNameAsARevparseSpec","wrapper stateless",
"ReferenceFixture","boundary degenerate","UpdatingAReferenceTargetWithBadParametersFails","wrapper stateless",
"ReferenceFixture","boundary degenerate","UpdatingADirectReferenceTargetWithARevparsePointingAtAnUnknownObjectFails","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanRenameAReferenceToADeeperReferenceHierarchy","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanRenameAReferenceToAUpperReferenceHierarchy","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanRenameAReferenceToADifferentReferenceHierarchy","controller stateless",
"ReferenceFixture","boundary degenerate","RenamingANonExistingReferenceThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanRenameAndOverWriteAExistingReference","wrapper stateless",
"ReferenceFixture","boundary degenerate","BlindlyOverwritingAExistingReferenceThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","RenamingAReferenceDoesNotDecreaseTheRefsCount","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanLookupARenamedReference","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanFilterReferencesWithAGlob","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanTellIfAReferenceIsValid","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanUpdateTheTargetOfASymbolicReferenceWithAnotherSymbolicReference","wrapper stateless",
"ReferenceFixture","boundary degenerate","LookingForLowerCaseHeadThrows","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanIdentifyReferenceKind","wrapper stateless",
"ReferenceFixture","boundary degenerate","CanQueryReachability","controller stateless",
"ReferenceFixture","boundary degenerate","CanQueryReachabilityAmongASubsetOfreferences","controller stateless",
"ReferenceFixture","boundary degenerate","CanHandleInvalidArguments","wrapper stateless",
"BranchCollection","entity boundary","BranchCollection","constructor",
"BranchCollection","entity boundary","BranchCollection","constructor",
"BranchCollection","entity boundary","BuildFromReferenceName","property non-void-command collaborator",
"BranchCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"BranchCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"BranchCollection","entity boundary","Add","property non-void-command collaborator",
"BranchCollection","entity boundary","Add","property non-void-command collaborator",
"BranchCollection","entity boundary","Add","property non-void-command collaborator",
"BranchCollection","entity boundary","Add","property wrapper",
"BranchCollection","entity boundary","Remove","command",
"BranchCollection","entity boundary","Remove","command collaborator",
"BranchCollection","entity boundary","Remove","command collaborator",
"BranchCollection","entity boundary","Rename","property non-void-command collaborator",
"BranchCollection","entity boundary","Rename","property non-void-command collaborator",
"BranchCollection","entity boundary","Rename","property non-void-command collaborator",
"BranchCollection","entity boundary","Rename","property non-void-command factory collaborator",
"BranchCollection","entity boundary","Update","property wrapper",
"BranchCollection","entity boundary","get","property non-void-command collaborator",
"BranchCollection","entity boundary","get","property non-void-command",
"TagFixture","boundary degenerate","CanAddALightWeightTagFromSha","wrapper",
"TagFixture","boundary degenerate","CanAddALightWeightTagFromAGitObject","wrapper",
"TagFixture","boundary degenerate","CanAddALightWeightTagFromAbbreviatedSha","wrapper stateless",
"TagFixture","boundary degenerate","CanAddALightweightTagFromABranchName","wrapper stateless",
"TagFixture","boundary degenerate","CanAddALightweightTagFromARevparseSpec","wrapper stateless",
"TagFixture","boundary degenerate","CanAddAndOverwriteALightweightTag","wrapper",
"TagFixture","boundary degenerate","CanAddATagWithNameContainingASlash","wrapper",
"TagFixture","boundary degenerate","CreatingATagWithNameMatchingAnAlreadyExistingReferenceHierarchyThrows","wrapper stateless",
"TagFixture","boundary degenerate","CanAddAnAnnotatedTagFromABranchName","wrapper",
"TagFixture","boundary degenerate","CanAddAnAnnotatedTagFromSha","wrapper",
"TagFixture","boundary degenerate","CanAddAnAnnotatedTagFromObject","wrapper",
"TagFixture","boundary degenerate","CanAddAnAnnotatedTagFromARevparseSpec","wrapper",
"TagFixture","boundary degenerate","CanAddAnAnnotatedTagWithAnEmptyMessage","wrapper",
"TagFixture","boundary degenerate","CanAddAndOverwriteAnAnnotatedTag","wrapper",
"TagFixture","boundary degenerate","CreatingAnAnnotatedTagIsDeterministic","wrapper",
"TagFixture","boundary degenerate","CreatingATagInAEmptyRepositoryThrows","wrapper stateless",
"TagFixture","boundary degenerate","CreatingATagForHeadInAEmptyRepositoryThrows","wrapper stateless",
"TagFixture","boundary degenerate","CreatingATagForAnUnknowReferenceThrows","wrapper stateless",
"TagFixture","boundary degenerate","CreatingATagForAnUnknowObjectIdThrows","wrapper stateless",
"TagFixture","boundary degenerate","CanAddATagForImplicitHead","wrapper stateless",
"TagFixture","boundary degenerate","CanAddATagForImplicitHeadInDetachedState","wrapper stateless",
"TagFixture","boundary degenerate","CreatingADuplicateTagThrows","wrapper stateless",
"TagFixture","boundary degenerate","CreatingATagWithANonValidNameShouldFail","wrapper stateless",
"TagFixture","boundary degenerate","CanAddATagUsingHead","wrapper stateless",
"TagFixture","boundary degenerate","CanAddATagPointingToATree","wrapper stateless",
"TagFixture","boundary degenerate","CanReadTagWithoutTagger","wrapper stateless",
"TagFixture","boundary degenerate","CanAddATagPointingToABlob","wrapper stateless",
"TagFixture","boundary degenerate","CreatingALightweightTagPointingToATagAnnotationGeneratesAnAnnotatedTagReusingThePointedAtTagAnnotation","wrapper stateless",
"TagFixture","boundary degenerate","CanAddAnAnnotatedTagPointingToATagAnnotation","wrapper",
"TagFixture","boundary degenerate","BlindlyCreatingALightweightTagOverAnExistingOneThrows","wrapper stateless",
"TagFixture","boundary degenerate","BlindlyCreatingAnAnnotatedTagOverAnExistingOneThrows","wrapper",
"TagFixture","boundary degenerate","AddTagWithADuplicateNameThrows","wrapper",
"TagFixture","boundary degenerate","AddTagWithEmptyNameThrows","wrapper",
"TagFixture","boundary degenerate","AddTagWithEmptyTargetThrows","wrapper",
"TagFixture","boundary degenerate","AddTagWithNotExistingTargetThrows","wrapper",
"TagFixture","boundary degenerate","AddTagWithNullMessageThrows","wrapper",
"TagFixture","boundary degenerate","AddTagWithNullNameThrows","wrapper",
"TagFixture","boundary degenerate","AddTagWithNullSignatureThrows","wrapper stateless",
"TagFixture","boundary degenerate","AddTagWithNullTargetThrows","wrapper",
"TagFixture","boundary degenerate","CanRemoveATagThroughItsName","wrapper stateless",
"TagFixture","boundary degenerate","CanRemoveATagThroughItsCanonicalName","wrapper stateless",
"TagFixture","boundary degenerate","CanRemoveATag","wrapper stateless",
"TagFixture","boundary degenerate","ARemovedTagCannotBeLookedUp","wrapper stateless",
"TagFixture","boundary degenerate","RemovingATagDecreasesTheTagsCount","wrapper stateless",
"TagFixture","boundary degenerate","RemovingAnUnknownTagShouldFail","wrapper stateless",
"TagFixture","boundary degenerate","GetTagByNameWithBadParamsThrows","wrapper stateless",
"TagFixture","boundary degenerate","CanListTags","wrapper",
"TagFixture","boundary degenerate","CanListAllTagsInAEmptyRepository","wrapper stateless",
"TagFixture","boundary degenerate","CanLookupALightweightTag","wrapper",
"TagFixture","boundary degenerate","CanLookupATagByItsCanonicalName","wrapper stateless",
"TagFixture","boundary degenerate","CanLookupAnAnnotatedTag","wrapper",
"TagFixture","boundary degenerate","LookupEmptyTagNameThrows","wrapper stateless",
"TagFixture","boundary degenerate","LookupNullTagNameThrows","wrapper stateless",
"TagFixture","boundary degenerate","CanRetrieveThePeeledTargetOfATagPointingToATag","wrapper stateless",
"TagFixture","boundary degenerate","PeeledTargetAndTargetAreEqualWhenTagIsNotChained","wrapper stateless",
"CloneOptions","data-provider boundary","CloneOptions","constructor",
"CloneOptions","data-provider boundary","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"CloneOptions","data-provider boundary","get","property collaborator",
"CloneOptions","data-provider boundary","get","get collaborator",
"TransientBlobTreeEntryDefinition","boundary degenerate small-class","get","collaborator incidental",
"Conflict","entity boundary","Conflict","constructor",
"Conflict","entity boundary","Conflict","constructor",
"Conflict","entity boundary","Equals","predicate non-void-command collaborator",
"Conflict","entity boundary","Equals","predicate non-void-command",
"Conflict","entity boundary","GetHashCode","property non-void-command",
"Conflict","entity boundary","get","get collaborator",
"Conflict","entity boundary","get","get collaborator",
"Conflict","entity boundary","get","get collaborator",
"TestRemoteInfo","empty","TestRemoteInfo","constructor",
"SubmoduleFixture","degenerate","RetrievingSubmoduleForNormalDirectoryReturnsNull","wrapper stateless",
"SubmoduleFixture","degenerate","RetrievingSubmoduleInBranchShouldWork","controller stateless",
"SubmoduleFixture","degenerate","CanRetrieveTheStatusOfASubmodule","controller stateless",
"SubmoduleFixture","degenerate","CanRetrieveTheCommitIdsOfASubmodule","wrapper stateless",
"SubmoduleFixture","degenerate","CanEnumerateRepositorySubmodules","controller stateless",
"SubmoduleFixture","degenerate","CanStageChangeInSubmoduleViaIndexStage","controller stateless",
"SubmoduleFixture","degenerate","CanStageChangeInSubmoduleViaIndexStageWithOtherPaths","controller stateless",
"SubmoduleFixture","degenerate","CanInitSubmodule","controller stateless",
"SubmoduleFixture","degenerate","UpdatingUninitializedSubmoduleThrows","controller stateless",
"SubmoduleFixture","degenerate","CanUpdateSubmodule","controller stateless",
"SubmoduleFixture","degenerate","CanInitializeAndUpdateSubmodule","controller stateless",
"SubmoduleFixture","degenerate","CanUpdateSubmoduleAfterCheckout","controller stateless",
"SubmoduleFixture","degenerate","CanReadSubmoduleProperties","wrapper stateless",
"HistoryDivergence","data-provider boundary data-class small-class","HistoryDivergence","constructor",
"HistoryDivergence","data-provider boundary data-class small-class","HistoryDivergence","constructor",
"HistoryDivergence","data-provider boundary data-class small-class","get","get collaborator",
"ReferenceHandle","boundary small-class","ReferenceHandle","constructor",
"ReferenceHandle","boundary small-class","ReferenceHandle","constructor",
"ReferenceHandle","boundary small-class","Free","wrapper",
"StatusFixture","degenerate","CanRetrieveTheStatusOfAFile","wrapper stateless",
"StatusFixture","degenerate","CanLimitStatusToWorkDirOnly","wrapper stateless",
"StatusFixture","degenerate","CanLimitStatusToIndexOnly","wrapper stateless",
"StatusFixture","degenerate","CanRetrieveTheStatusOfAnUntrackedFile","wrapper stateless",
"StatusFixture","degenerate","RetrievingTheStatusOfADirectoryThrows","wrapper stateless",
"StatusFixture","degenerate","CanRetrieveTheStatusOfTheWholeWorkingDirectory","controller stateless",
"StatusFixture","degenerate","CanRetrieveTheStatusOfRenamedFilesInWorkDir","wrapper stateless",
"StatusFixture","degenerate","CanRetrieveTheStatusOfRenamedFilesInIndex","wrapper stateless",
"StatusFixture","degenerate","CanDetectedVariousKindsOfRenaming","controller stateless",
"StatusFixture","degenerate","CanRetrieveTheStatusOfANewRepository","wrapper stateless",
"StatusFixture","degenerate","RetrievingTheStatusOfARepositoryReturnsGitPaths","controller stateless",
"StatusFixture","degenerate","RetrievingTheStatusOfAnEmptyRepositoryHonorsTheGitIgnoreDirectives","controller stateless",
"StatusFixture","degenerate","RetrievingTheStatusWithoutIncludeIgnoredIgnoresButDoesntInclude","controller stateless",
"StatusFixture","degenerate","RetrievingTheStatusOfTheRepositoryHonorsTheGitIgnoreDirectives","controller stateless",
"StatusFixture","degenerate","RetrievingTheStatusOfAFilePathHonorsTheIgnoreCaseConfigurationSetting","controller stateless",
"StatusFixture","degenerate","RetrievingTheStatusOfTheRepositoryHonorsTheGitIgnoreDirectivesThroughoutDirectories","controller stateless",
"StatusFixture","degenerate","CanRetrieveStatusOfFilesInSubmodule","controller stateless",
"StatusFixture","degenerate","CanExcludeStatusOfFilesInSubmodule","controller stateless",
"StatusFixture","degenerate","CanRetrieveTheStatusOfARelativeWorkingDirectory","controller stateless",
"StatusFixture","degenerate","CanRetrieveTheStatusOfMultiplePathSpec","controller stateless",
"StatusFixture","degenerate","CanRetrieveTheStatusOfAGlobSpec","controller stateless",
"StatusFixture","degenerate","RetrievingTheStatusHonorsAssumedUnchangedMarkedIndexEntries","controller stateless",
"StatusFixture","degenerate","CanIncludeStatusOfUnalteredFiles","controller stateless",
"StatusFixture","degenerate","UnalteredFilesDontMarkIndexAsDirty","controller stateless",
"SetErrorFixture","commander","FormatSimpleException","command",
"SetErrorFixture","commander","FormatExceptionWithInnerException","command",
"SetErrorFixture","commander","FormatAggregateException","command",
"SetErrorFixture","commander","AssertExpectedExceptionMessage","wrapper stateless",
"SetErrorFixture","commander","AppendIndentedText","command",
"SetErrorFixture","commander","AppendIndentedLine","command",
"SetErrorFixture","commander","IndentString","wrapper stateless",
"RefSpec","data-provider boundary","RefSpec","constructor",
"RefSpec","data-provider boundary","RefSpec","constructor",
"RefSpec","data-provider boundary","SourceMatches","predicate wrapper",
"RefSpec","data-provider boundary","DestinationMatches","predicate wrapper",
"RefSpec","data-provider boundary","Transform","property wrapper",
"RefSpec","data-provider boundary","ReverseTransform","property wrapper",
"RefSpec","data-provider boundary","get","property wrapper",
"RefSpec","data-provider boundary","get","property wrapper",
"RefSpec","data-provider boundary","get","property wrapper",
"RefSpec","data-provider boundary","get","property wrapper",
"RefSpec","data-provider boundary","get","predicate wrapper",
"RefSpec","data-provider boundary","get","wrapper stateless",
"IndexFixture","boundary degenerate","CanCountEntriesInIndex","command collaborator",
"IndexFixture","boundary degenerate","CanEnumerateIndex","wrapper",
"IndexFixture","boundary degenerate","CanFetchAnIndexEntryByItsName","wrapper",
"IndexFixture","boundary degenerate","FetchingAnUnknownIndexEntryReturnsNull","wrapper stateless",
"IndexFixture","boundary degenerate","ReadIndexWithBadParamsFails","wrapper stateless",
"IndexFixture","boundary degenerate","CanRenameAFile","controller stateless",
"IndexFixture","boundary degenerate","CanMoveAnExistingFileOverANonExistingFile","wrapper stateless",
"IndexFixture","boundary degenerate","MovingOverAnExistingFileThrows","command collaborator",
"IndexFixture","boundary degenerate","MovingAFileWichIsNotUnderSourceControlThrows","command collaborator",
"IndexFixture","boundary degenerate","MovingAFileNotInTheWorkingDirectoryThrows","command collaborator",
"IndexFixture","boundary degenerate","InvalidMoveUseCases","wrapper stateless",
"IndexFixture","boundary degenerate","PathsOfIndexEntriesAreExpressedInNativeFormat","wrapper stateless",
"IndexFixture","boundary degenerate","CanReadIndexEntryAttributes","wrapper stateless",
"IndexFixture","boundary degenerate","StagingAFileWhenTheIndexIsLockedThrowsALockedFileException","wrapper stateless",
"IndexFixture","boundary degenerate","CanCopeWithExternalChangesToTheIndex","wrapper stateless",
"IndexFixture","boundary degenerate","CanResetFullyMergedIndexFromTree","controller stateless",
"IndexFixture","boundary degenerate","CanResetIndexWithUnmergedEntriesFromTree","controller stateless",
"IndexFixture","boundary degenerate","CanClearTheIndex","controller stateless",
"IndexFixture","boundary degenerate","CanRemoveAnEntryFromTheIndex","wrapper stateless",
"IndexFixture","boundary degenerate","CanAddAnEntryToTheIndexFromAFileInTheWorkdir","wrapper stateless",
"IndexFixture","boundary degenerate","CanAddAnEntryToTheIndexFromABlob","wrapper stateless",
"IndexFixture","boundary degenerate","AddingAnEntryToTheIndexFromAUnknwonFileInTheWorkdirThrows","wrapper stateless",
"IndexFixture","boundary degenerate","CanMimicGitAddAll","wrapper stateless",
"IndexFixture","boundary degenerate","RetrievingAssumedUnchangedMarkedIndexEntries","wrapper stateless",
"Branch","empty","Branch","constructor",
"Branch","empty","Branch","constructor",
"LambdaEqualityHelper<T>","entity boundary small-class","LambdaEqualityHelper","constructor",
"LambdaEqualityHelper<T>","entity boundary small-class","Equals","predicate non-void-command collaborator",
"LambdaEqualityHelper<T>","entity boundary small-class","GetHashCode","property non-void-command collaborator",
"FileExportFilter","commander boundary","FileExportFilter","constructor",
"FileExportFilter","commander boundary","Create","wrapper stateless",
"FileExportFilter","commander boundary","Clean","command collaborator",
"FileExportFilter","commander boundary","Complete","set collaborator",
"FileExportFilter","commander boundary","Smudge","command collaborator",
"GlobalSettingsFixture","boundary degenerate","CanGetMinimumCompiledInFeatures","controller stateless",
"GlobalSettingsFixture","boundary degenerate","CanRetrieveValidVersionString","wrapper stateless",
"GlobalSettingsFixture","boundary degenerate","TryingToResetNativeLibraryPathAfterLoadedThrows","wrapper stateless",
"GlobalSettingsFixture","boundary degenerate","LoadFromSpecifiedPath","wrapper stateless",
"GlobalSettingsFixture","boundary degenerate","SetExtensions","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanUnsetAnEntryFromTheLocalConfiguration","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanUnsetAnEntryFromTheGlobalConfiguration","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanAddAndReadMultivarFromTheLocalConfiguration","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanAddAndReadMultivarFromTheGlobalConfiguration","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanUnsetAllFromTheGlobalConfiguration","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanUnsetAllFromTheLocalConfiguration","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanReadBooleanValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanReadIntValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanReadLongValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanReadStringValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanEnumerateGlobalConfig","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanEnumerateLocalConfig","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanEnumerateLocalConfigContainingAKeyWithNoValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanFindInLocalConfig","controller stateless",
"ConfigurationFixture","boundary degenerate","CanFindInGlobalConfig","controller stateless",
"ConfigurationFixture","boundary degenerate","CanSetBooleanValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","SettingLocalConfigurationOutsideAReposThrows","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanSetIntValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanSetLongValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanSetStringValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanSetAndReadUnicodeStringValue","wrapper stateless",
"ConfigurationFixture","boundary degenerate","ReadingUnsupportedTypeThrows","wrapper stateless",
"ConfigurationFixture","boundary degenerate","ReadingValueThatDoesntExistReturnsNull","wrapper stateless",
"ConfigurationFixture","boundary degenerate","SettingUnsupportedTypeThrows","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanGetAnEntryFromASpecificStore","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanTellIfASpecificStoreContainsAKey","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanAccessConfigurationWithoutARepository","wrapper stateless",
"ConfigurationFixture","boundary degenerate","PassingANonExistingLocalConfigurationFileToBuildFromthrowss","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CannotBuildAProperSignatureFromConfigWhenFullIdentityCannotBeFoundInTheConfig","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanSetAndGetSearchPath","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanSetAndGetMultipleSearchPaths","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanResetSearchPaths","wrapper stateless",
"ConfigurationFixture","boundary degenerate","CanAppendToSearchPaths","controller stateless",
"ConfigurationFixture","boundary degenerate","CanRedirectConfigAccess","wrapper stateless",
"ConfigurationFixture","boundary degenerate","get","factory wrapper stateless",
"FileHistoryFixture","entity minimal-entity boundary","CanFollowBranches","command collaborator",
"FileHistoryFixture","entity minimal-entity boundary","CanTellComplexCommitHistory","command collaborator",
"FileHistoryFixture","entity minimal-entity boundary","CanTellSimpleCommitHistory","command collaborator",
"FileHistoryFixture","entity minimal-entity boundary","CanTellSingleCommitHistory","command collaborator",
"FileHistoryFixture","entity minimal-entity boundary","EmptyRepositoryHasNoHistory","command collaborator",
"FileHistoryFixture","entity minimal-entity boundary","UnsupportedSortStrategyThrows","command",
"FileHistoryFixture","entity minimal-entity boundary","GetNextSignature","get set collaborator",
"FileHistoryFixture","entity minimal-entity boundary","CreateEmptyRepository","property wrapper",
"FileHistoryFixture","entity minimal-entity boundary","AddCommitToOdb","property non-void-command collaborator",
"FileHistoryFixture","entity minimal-entity boundary","AddCommitToOdb","property non-void-command collaborator",
"FileHistoryFixture","entity minimal-entity boundary","MakeAndCommitChange","property non-void-command collaborator",
"TransientTreeEntryDefinition","boundary degenerate small-class","get","collaborator incidental",
"TransientTreeEntryDefinition","boundary degenerate small-class","get","collaborator incidental",
"GitProxyOptionsWrapper","commander small-class","GitProxyOptionsWrapper","constructor",
"GitProxyOptionsWrapper","commander small-class","GitProxyOptionsWrapper","constructor",
"GitProxyOptionsWrapper","commander small-class","Dispose","set",
"GitProxyOptionsWrapper","commander small-class","Dispose","command",
"DiffWorkdirToIndexFixture","boundary degenerate","CanCompareTheWorkDirAgainstTheIndex","wrapper stateless",
"DiffWorkdirToIndexFixture","boundary degenerate","CanCompareTheWorkDirAgainstTheIndexWithLaxUnmatchedExplicitPathsValidation","wrapper stateless",
"DiffWorkdirToIndexFixture","boundary degenerate","ComparingTheWorkDirAgainstTheIndexWithStrictUnmatchedExplicitPathsValidationAndANonExistentPathspecThrows","wrapper stateless",
"DiffWorkdirToIndexFixture","boundary degenerate","CallbackForUnmatchedExplicitPathsIsCalledWhenSet","wrapper stateless",
"DiffWorkdirToIndexFixture","boundary degenerate","ComparingReliesOnProvidedConfigEntriesIfAny","command collaborator",
"DiffWorkdirToIndexFixture","boundary degenerate","SetFilemode","controller stateless",
"DiffWorkdirToIndexFixture","boundary degenerate","CanCompareTheWorkDirAgainstTheIndexWithUntrackedFiles","wrapper stateless",
"StashCollection","boundary","StashCollection","constructor",
"StashCollection","boundary","StashCollection","constructor",
"StashCollection","boundary","GetEnumerator","property non-void-command collaborator",
"StashCollection","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"StashCollection","boundary","Add","property non-void-command collaborator",
"StashCollection","boundary","Add","property non-void-command collaborator",
"StashCollection","boundary","Add","property non-void-command collaborator",
"StashCollection","boundary","Add","property factory wrapper",
"StashCollection","boundary","Apply","property controller",
"StashCollection","boundary","Apply","property non-void-command collaborator",
"StashCollection","boundary","Pop","property controller",
"StashCollection","boundary","Pop","property non-void-command collaborator",
"StashCollection","boundary","Remove","wrapper",
"StashCollection","boundary","get","property non-void-command collaborator",
"StashCollection","boundary","get","property non-void-command",
"WorktreeHandle","boundary small-class","WorktreeHandle","constructor",
"WorktreeHandle","boundary small-class","WorktreeHandle","constructor",
"WorktreeHandle","boundary small-class","Free","wrapper",
"LaxFilePathNoCleanupMarshaler","degenerate small-class","CleanUpNativeData","empty",
"ArchiveTarFixture","pure-controller small-class","CanArchiveACommitWithDirectoryAsTar","controller",
"DiffBlobToBlobFixture","degenerate","ComparingABlobAgainstItselfReturnsNoDifference","wrapper stateless",
"DiffBlobToBlobFixture","degenerate","CanCompareTwoVersionsOfABlobWithADiffOfTwoHunks","controller stateless",
"DiffBlobToBlobFixture","degenerate","CreateBinaryBlob","controller stateless",
"DiffBlobToBlobFixture","degenerate","CanCompareATextualBlobAgainstABinaryBlob","command collaborator",
"DiffBlobToBlobFixture","degenerate","CanCompareABlobAgainstANullBlob","wrapper stateless",
"DiffBlobToBlobFixture","degenerate","ComparingTwoNullBlobsReturnsAnEmptyContentChanges","wrapper stateless",
"DiffBlobToBlobFixture","degenerate","ComparingBlobsWithNoSpacesAndIndentHeuristicOptionMakesADifference","wrapper stateless",
"DiffBlobToBlobFixture","degenerate","ComparingBlobsWithNoSpacesIndentHeuristicOptionMakesNoDifference","wrapper stateless",
"DiffBlobToBlobFixture","degenerate","DiffSetsTheAddedAndDeletedLinesCorrectly","controller stateless",
"DiffTreeToTreeFixture","boundary degenerate","ComparingATreeAgainstItselfReturnsNoDifference","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","RetrievingANonExistentFileChangeReturnsNull","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanCompareACommitTreeAgainstItsParent","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanDetectABinaryChange","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanDetectABinaryDeletion","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanCompareASubsetofTheTreeAgainstOneOfItsAncestor","wrapper",
"DiffTreeToTreeFixture","boundary degenerate","CanCompareACommitTreeAgainstATreeWithNoCommonAncestor","wrapper",
"DiffTreeToTreeFixture","boundary degenerate","CanCompareATreeAgainstAnotherTreeWithLaxExplicitPathsValidationAndNonExistentPath","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","ComparingATreeAgainstAnotherTreeWithStrictExplicitPathsValidationThrows","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","DetectsTheRenamingOfAModifiedFileByDefault","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","DetectsTheExactRenamingOfFilesByDefault","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","RenameDetectionObeysConfigurationSetting","empty",
"DiffTreeToTreeFixture","boundary degenerate","RenameThresholdsAreObeyed","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","ExactModeDetectsExactRenames","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","ExactModeDetectsExactCopies","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","ExactModeDoesntDetectRenamesWithEdits","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanIncludeUnmodifiedEntriesWhenDetectingTheExactRenamingOfFilesWhenEnabled","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanNotDetectTheExactRenamingFilesWhenNotEnabled","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanDetectTheExactCopyingOfNonModifiedFilesWhenEnabled","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanNotDetectTheExactCopyingOfNonModifiedFilesWhenNotEnabled","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanDetectTheExactCopyingOfModifiedFilesWhenEnabled","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanNotDetectTheExactCopyingOfModifiedFilesWhenNotEnabled","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanIncludeUnmodifiedEntriesWhenEnabled","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanDetectTheExactRenamingExactCopyingOfNonModifiedAndModifiedFilesWhenEnabled","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanCompareTwoVersionsOfAFileWithATrailingNewlineDeletion","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanCompareTwoVersionsOfAFileWithADiffOfTwoHunks","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanHandleTwoTreeEntryChangesWithTheSamePath","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanHandleTwoTreeEntryChangesWithTheSamePathUsingSimilarityNone","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanHandleTwoTreeEntryChangesWithTheSamePathUsingSimilarityDefault","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","CanCompareATreeAgainstANullTree","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","ComparingTwoNullTreesReturnsAnEmptyTreeChanges","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","ComparingReliesOnProvidedConfigEntriesIfAny","command collaborator",
"DiffTreeToTreeFixture","boundary degenerate","SetFilemode","controller stateless",
"DiffTreeToTreeFixture","boundary degenerate","RetrievingDiffChangesMustAlwaysBeCaseSensitive","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","RetrievingDiffContainsRightAmountOfAddedAndDeletedLines","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","UsingPatienceAlgorithmCompareOptionProducesPatienceDiff","wrapper stateless",
"DiffTreeToTreeFixture","boundary degenerate","DiffThrowsANotFoundExceptionIfATreeIsMissing","wrapper stateless",
"DescribeFixture","boundary degenerate small-class","CanDescribeACommit","wrapper stateless",
"DescribeFixture","boundary degenerate small-class","CanFollowFirstParent","wrapper stateless",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"NativeException","empty","NativeException","constructor",
"LogFixture","boundary degenerate small-class","CanEnableAndDisableLogging","wrapper stateless",
"ConflictIteratorHandle","boundary small-class","ConflictIteratorHandle","constructor",
"ConflictIteratorHandle","boundary small-class","ConflictIteratorHandle","constructor",
"ConflictIteratorHandle","boundary small-class","Free","wrapper",
"CurrentOperationFixture","boundary degenerate","CurrentOperationIsNoneForNewRepo","wrapper stateless",
"CurrentOperationFixture","boundary degenerate","CurrentOperationInNoneForABareRepo","wrapper stateless",
"CurrentOperationFixture","boundary degenerate","CurrentOperationHasExpectedPendingOperationValues","wrapper stateless",
"CheckoutFixture","commander boundary","CanCheckoutAnExistingBranch","command collaborator",
"CheckoutFixture","commander boundary","CanCheckoutAnExistingBranchByName","command collaborator",
"CheckoutFixture","commander boundary","CanCheckoutAnArbitraryCommit","command collaborator",
"CheckoutFixture","commander boundary","CheckoutAddsMissingFilesInWorkingDirectory","command collaborator",
"CheckoutFixture","commander boundary","CheckoutRemovesExtraFilesInWorkingDirectory","command collaborator",
"CheckoutFixture","commander boundary","CheckoutUpdatesModifiedFilesInWorkingDirectory","command collaborator",
"CheckoutFixture","commander boundary","CanForcefullyCheckoutWithConflictingStagedChanges","command collaborator",
"CheckoutFixture","commander boundary","CheckingOutWithMergeConflictsThrows","wrapper",
"CheckoutFixture","commander boundary","CanCancelCheckoutThroughNotifyCallback","wrapper stateless",
"CheckoutFixture","commander boundary","CheckingOutInABareRepoThrows","wrapper stateless",
"CheckoutFixture","commander boundary","CheckingOutAgainstAnUnbornBranchThrows","wrapper stateless",
"CheckoutFixture","commander boundary","CheckingOutANonExistingBranchThrows","wrapper stateless",
"CheckoutFixture","commander boundary","CheckingOutABranchWithBadParamsThrows","wrapper stateless",
"CheckoutFixture","commander boundary","CheckingOutThroughBranchCallsCheckoutProgress","command collaborator",
"CheckoutFixture","commander boundary","CheckingOutThroughRepositoryCallsCheckoutProgress","command",
"CheckoutFixture","commander boundary","CheckingOutCallsCheckoutNotify","command collaborator",
"CheckoutFixture","commander boundary","CheckoutRetainsUntrackedChanges","command",
"CheckoutFixture","commander boundary","ForceCheckoutRetainsUntrackedChanges","command",
"CheckoutFixture","commander boundary","CheckoutRetainsUnstagedChanges","command",
"CheckoutFixture","commander boundary","CheckoutRetainsStagedChanges","command",
"CheckoutFixture","commander boundary","CheckoutRetainsIgnoredChanges","command",
"CheckoutFixture","commander boundary","ForceCheckoutRetainsIgnoredChanges","command",
"CheckoutFixture","commander boundary","CheckoutBranchSnapshot","command",
"CheckoutFixture","commander boundary","CheckingOutRemoteBranchResultsInDetachedHead","command collaborator",
"CheckoutFixture","commander boundary","CheckingOutABranchDoesNotAlterBinaryFiles","wrapper stateless",
"CheckoutFixture","commander boundary","CheckoutFromDetachedHead","command collaborator",
"CheckoutFixture","commander boundary","CheckoutBranchFromDetachedHead","command collaborator",
"CheckoutFixture","commander boundary","CheckoutBranchByShortNameAttachesTheHead","command collaborator",
"CheckoutFixture","commander boundary","CheckoutPreviousCheckedOutBranch","command collaborator",
"CheckoutFixture","commander boundary","CheckoutCurrentReference","command collaborator",
"CheckoutFixture","commander boundary","CheckoutLowerCasedHeadThrows","wrapper stateless",
"CheckoutFixture","commander boundary","CanCheckoutAttachedHead","wrapper stateless",
"CheckoutFixture","commander boundary","CanCheckoutDetachedHead","wrapper stateless",
"CheckoutFixture","commander boundary","CanCheckoutPath","command collaborator",
"CheckoutFixture","commander boundary","CanCheckoutPaths","command",
"CheckoutFixture","commander boundary","CannotCheckoutPathsWithEmptyOrNullPathArgument","command",
"CheckoutFixture","commander boundary","CanCheckoutPathFromCurrentBranch","command collaborator",
"CheckoutFixture","commander boundary","CheckoutBranchTriesRemoteTrackingBranchAsFallbackAndSucceedsIfOnlyOne","command collaborator",
"CheckoutFixture","commander boundary","CheckoutBranchTriesRemoteTrackingBranchAsFallbackAndThrowsIfMoreThanOne","command collaborator",
"CheckoutFixture","commander boundary","PopulateBasicRepository","controller",
"CheckoutFixture","commander boundary","ResetAndCleanWorkingDirectory","controller stateless",
"RefSpecFixture","degenerate","CanCountRefSpecs","wrapper stateless",
"RefSpecFixture","degenerate","CanIterateOverRefSpecs","wrapper stateless",
"RefSpecFixture","degenerate","FetchAndPushRefSpecsComposeRefSpecs","controller stateless",
"RefSpecFixture","degenerate","CanReadRefSpecDetails","controller stateless",
"RefSpecFixture","degenerate","RemoteUpdaterSavesRefSpecsPermanently","wrapper stateless",
"RefSpecFixture","degenerate","CanAddAndRemoveRefSpecs","wrapper stateless",
"RefSpecFixture","degenerate","CanClearRefSpecs","wrapper stateless",
"RefSpecFixture","degenerate","SettingInvalidRefSpecsThrows","controller stateless",
"RefSpecFixture","degenerate","CanCheckForMatches","controller stateless",
"RefSpecFixture","degenerate","CanTransformRefspecs","controller stateless",
"BlameFixture","boundary degenerate","CanBlameSimply","wrapper stateless",
"BlameFixture","boundary degenerate","CanBlameFromADifferentCommit","wrapper stateless",
"BlameFixture","boundary degenerate","ValidatesLimits","controller stateless",
"BlameFixture","boundary degenerate","CanBlameFromVariousTypes","wrapper stateless",
"BlameFixture","boundary degenerate","CanStopBlame","wrapper stateless",
"Constants","degenerate small-class","get","incidental",
"GitOdbBackend","empty","GitOdbBackend","constructor",
"MergeResult","empty","MergeResult","constructor",
"MergeResult","empty","MergeResult","constructor",
"PushResult","data-provider small-class","PushResult","constructor",
"PushResult","data-provider small-class","PushResult","constructor",
"PushResult","data-provider small-class","get","get collaborator",
"PushResult","data-provider small-class","get","predicate",
"ObjectIdFixture","unclassified","PreventsFromBuildingWithAnInvalidSha","wrapper",
"ObjectIdFixture","unclassified","CanConvertOidToSha","controller",
"ObjectIdFixture","unclassified","CanConvertShaToOid","wrapper",
"ObjectIdFixture","unclassified","CanCastShaToObjectId","wrapper",
"ObjectIdFixture","unclassified","CanCastNullToObjectId","wrapper stateless",
"ObjectIdFixture","unclassified","CreatingObjectIdWithWrongNumberOfBytesThrows","wrapper stateless",
"ObjectIdFixture","unclassified","DifferentObjectIdsAreEqual","controller",
"ObjectIdFixture","unclassified","DifferentObjectIdsDoesNotHaveSameHashCode","controller",
"ObjectIdFixture","unclassified","SimilarObjectIdsAreEqual","controller",
"ObjectIdFixture","unclassified","SimilarObjectIdsHaveSameHashCode","controller",
"ObjectIdFixture","unclassified","TryParse","controller",
"ObjectIdFixture","unclassified","StartsWith","controller stateless",
"TagAnnotation","data-provider data-class","TagAnnotation","constructor",
"TagAnnotation","data-provider data-class","TagAnnotation","constructor",
"TagAnnotation","data-provider data-class","get","get",
"TagAnnotation","data-provider data-class","get","get",
"TagAnnotation","data-provider data-class","get","get collaborator",
"TagAnnotation","data-provider data-class","get","get collaborator",
"RepositoryHandle","boundary small-class","RepositoryHandle","constructor",
"RepositoryHandle","boundary small-class","RepositoryHandle","constructor",
"RepositoryHandle","boundary small-class","Free","wrapper",
"SecureUsernamePasswordCredentials","data-provider boundary small-class","GitCredentialHandler","property wrapper",
"CleanFixture","boundary degenerate small-class","CanCleanWorkingDirectory","wrapper stateless",
"CleanFixture","boundary degenerate small-class","CannotCleanABareRepository","wrapper stateless",
"SignatureHandle","boundary small-class","SignatureHandle","constructor",
"SignatureHandle","boundary small-class","SignatureHandle","constructor",
"SignatureHandle","boundary small-class","Free","wrapper",
"ArchiveFixture","boundary degenerate","CanArchiveATree","wrapper stateless",
"ArchiveFixture","boundary degenerate","CanArchiveACommit","wrapper stateless",
"ArchiveFixture","boundary degenerate","ArchivingANullTreeOrCommitThrows","wrapper stateless",
"Network","boundary","Network","constructor",
"Network","boundary","Network","constructor",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferences","property non-void-command collaborator",
"Network","boundary","ListReferencesInternal","property controller",
"Network","boundary","Fetch","command collaborator",
"Network","boundary","Fetch","command collaborator",
"Network","boundary","Fetch","command",
"Network","boundary","Fetch","wrapper",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","wrapper stateless",
"Network","boundary","Push","wrapper stateless",
"Network","boundary","Push","command",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","command collaborator",
"Network","boundary","Push","controller",
"Network","boundary","get","get collaborator",
"Network","boundary","get","property wrapper",
"FilterSource","empty","FilterSource","constructor",
"FilterSource","empty","FilterSource","constructor",
"FilterBranchFixture","entity commander boundary","FilterBranchFixture","constructor",
"FilterBranchFixture","entity commander boundary","Dispose","command",
"FilterBranchFixture","entity commander boundary","CanRewriteHistoryWithoutChangingCommitMetadata","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteHistoryWithoutChangingTrees","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRollbackRewriteByThrowingInOnCompleting","command collaborator",
"FilterBranchFixture","entity commander boundary","ErrorThrownInOnErrorTakesPrecedenceOverErrorDuringCommitHeaderRewriter","command collaborator",
"FilterBranchFixture","entity commander boundary","ErrorThrownInOnErrorTakesPrecedenceOverErrorDuringCommitTreeRewriter","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteAuthorOfCommits","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteAuthorOfCommitsOnlyBeingPointedAtByTags","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteTrees","command",
"FilterBranchFixture","entity commander boundary","CanRewriteTreesByInjectingTreeEntry","command collaborator",
"FilterBranchFixture","entity commander boundary","OnlyRewriteSelectedCommits","command collaborator",
"FilterBranchFixture","entity commander boundary","CanCustomizeTheNamespaceOfBackedUpRefs","command",
"FilterBranchFixture","entity commander boundary","RefRewritingRollsBackOnFailure","command collaborator",
"FilterBranchFixture","entity commander boundary","DoesNotRewriteRefsThatDontChange","command collaborator",
"FilterBranchFixture","entity commander boundary","CanNotOverWriteBackedUpReferences","command collaborator",
"FilterBranchFixture","entity commander boundary","CanNotOverWriteAnExistingReference","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteParents","command",
"FilterBranchFixture","entity commander boundary","CanRewriteParentWithRewrittenCommit","command collaborator",
"FilterBranchFixture","entity commander boundary","WritesCorrectReflogMessagesForSimpleRewrites","command",
"FilterBranchFixture","entity commander boundary","CanProvideNewNamesForTags","command collaborator",
"FilterBranchFixture","entity commander boundary","CanRewriteSymbolicRefsPointingToTags","command",
"FilterBranchFixture","entity commander boundary","HandlesNameRewritingOfChainedTags","command collaborator",
"FilterBranchFixture","entity commander boundary","RewritingNotesHasNoEffect","command collaborator",
"FilterBranchFixture","entity commander boundary","AssertSucceedingButNotError","wrapper",
"FilterBranchFixture","entity commander boundary","AssertSucceedingNotFired","wrapper",
"FilterBranchFixture","entity commander boundary","AssertErrorFired","wrapper",
"FilterBranchFixture","entity commander boundary","get","property set collaborator",
"FilterBranchFixture","entity commander boundary","get","property set collaborator",
"FetchFixture","boundary","CanFetchIntoAnEmptyRepository","controller",
"FetchFixture","boundary","CanFetchIntoAnEmptyRepositoryWithCredentials","wrapper",
"FetchFixture","boundary","CanFetchAllTagsIntoAnEmptyRepository","controller",
"FetchFixture","boundary","CanFetchCustomRefSpecsIntoAnEmptyRepository","controller",
"FetchFixture","boundary","FetchRespectsConfiguredAutoTagSetting","wrapper",
"FetchFixture","boundary","CanFetchAllTagsAfterAnInitialClone","wrapper stateless",
"FetchFixture","boundary","FetchHonorsTheFetchPruneConfigurationEntry","wrapper stateless",
"FetchFixture","boundary","CannotFetchWithForbiddenCustomHeaders","wrapper stateless",
"FetchFixture","boundary","CanFetchWithCustomHeaders","wrapper stateless",
"FetchFixture","boundary","CannotFetchWithMalformedCustomHeaders","wrapper stateless",
"RemoteCollection","entity boundary","RemoteCollection","constructor",
"RemoteCollection","entity boundary","RemoteCollection","constructor",
"RemoteCollection","entity boundary","RemoteForName","property wrapper",
"RemoteCollection","entity boundary","Update","command collaborator",
"RemoteCollection","entity boundary","GetEnumerator","property non-void-command collaborator",
"RemoteCollection","entity boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"RemoteCollection","entity boundary","Add","get factory wrapper",
"RemoteCollection","entity boundary","Add","get factory wrapper",
"RemoteCollection","entity boundary","Remove","wrapper",
"RemoteCollection","entity boundary","Rename","property non-void-command collaborator",
"RemoteCollection","entity boundary","Rename","property wrapper",
"RemoteCollection","entity boundary","get","property non-void-command collaborator",
"RemoteCollection","entity boundary","get","property non-void-command",
"ObjectDatabase","boundary","ObjectDatabase","constructor",
"ObjectDatabase","boundary","ObjectDatabase","constructor",
"ObjectDatabase","boundary","GetEnumerator","property non-void-command collaborator",
"ObjectDatabase","boundary","IEnumerable.GetEnumerator","property non-void-command collaborator",
"ObjectDatabase","boundary","Contains","predicate wrapper",
"ObjectDatabase","boundary","RetrieveObjectMetadata","property wrapper",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","AddBackend","wrapper",
"ObjectDatabase","boundary","Write<T>","property wrapper",
"ObjectDatabase","boundary","Write<T>","property controller",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateBlob","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateTree","property controller",
"ObjectDatabase","boundary","CreateTree","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateCommit","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateCommit","property non-void-command collaborator",
"ObjectDatabase","boundary","CreateCommitWithSignature","property wrapper",
"ObjectDatabase","boundary","CreateCommitWithSignature","property wrapper",
"ObjectDatabase","boundary","CreateTagAnnotation","property non-void-command collaborator",
"ObjectDatabase","boundary","Archive","command",
"ObjectDatabase","boundary","Archive","command",
"ObjectDatabase","boundary","Archive","controller stateless",
"ObjectDatabase","boundary","Archive","controller stateless",
"ObjectDatabase","boundary","CalculateHistoryDivergence","property factory wrapper",
"ObjectDatabase","boundary","CherryPickCommit","property non-void-command factory collaborator",
"ObjectDatabase","boundary","ShortenObjectId","property wrapper",
"ObjectDatabase","boundary","ShortenObjectId","property controller",
"ObjectDatabase","boundary","CanMergeWithoutConflict","predicate non-void-command collaborator",
"ObjectDatabase","boundary","FindMergeBase","wrapper stateless",
"ObjectDatabase","boundary","FindMergeBase","property non-void-command collaborator",
"ObjectDatabase","boundary","MergeCommits","property non-void-command factory collaborator",
"ObjectDatabase","boundary","Pack","property non-void-command collaborator",
"ObjectDatabase","boundary","Pack","property non-void-command collaborator",
"ObjectDatabase","boundary","MergeCommitsIntoIndex","property non-void-command factory collaborator",
"ObjectDatabase","boundary","CherryPickCommitIntoIndex","property non-void-command factory collaborator",
"ObjectDatabase","boundary","MergeCommits","property wrapper",
"ObjectDatabase","boundary","CherryPickCommit","property wrapper",
"ObjectDatabase","boundary","InternalPack","property factory wrapper",
"ObjectDatabase","boundary","RevertCommit","property non-void-command factory collaborator",
"NoteFixture","boundary degenerate","RetrievingNotesFromANonExistingGitObjectYieldsNoResult","wrapper stateless",
"NoteFixture","boundary degenerate","RetrievingNotesFromAGitObjectWhichHasNoNoteYieldsNoResult","wrapper stateless",
"NoteFixture","boundary degenerate","CanRetrieveNotesFromAGitObject","wrapper stateless",
"NoteFixture","boundary degenerate","CanRetrieveASpecificNoteFromAKnownNamespace","wrapper stateless",
"NoteFixture","boundary degenerate","CanGetListOfNotesNamespaces","wrapper stateless",
"NoteFixture","boundary degenerate","CanAccessNotesFromACommit","wrapper",
"NoteFixture","boundary degenerate","CanAddANoteOnAGitObject","controller",
"NoteFixture","boundary degenerate","CreatingANoteWhichAlreadyExistsOverwritesThePreviousNote","controller",
"NoteFixture","boundary degenerate","CanAddANoteWithSignatureFromConfig","controller stateless",
"NoteFixture","boundary degenerate","CanCompareTwoUniqueNotes","wrapper",
"NoteFixture","boundary degenerate","CanRemoveANoteFromAGitObject","wrapper",
"NoteFixture","boundary degenerate","RemovingANonExistingNoteDoesntThrow","wrapper",
"NoteFixture","boundary degenerate","CanRemoveANoteWithSignatureFromConfig","wrapper stateless",
"NoteFixture","boundary degenerate","CanRetrieveTheListOfNotesForAGivenNamespace","wrapper stateless",
"NoteFixture","boundary degenerate","CanRetrieveNotesWhenThereAreNotAny","wrapper stateless",
"DescribeOptions","empty","DescribeOptions","constructor",
"NetworkFixture","degenerate","CanListRemoteReferences","controller stateless",
"NetworkFixture","degenerate","CanListRemoteReferencesFromUrl","controller stateless",
"NetworkFixture","degenerate","CanListRemoteReferenceObjects","controller stateless",
"NetworkFixture","degenerate","CanListRemoteReferencesWithCredentials","wrapper stateless",
"NetworkFixture","degenerate","CanPull","wrapper stateless",
"NetworkFixture","degenerate","CanPullIntoEmptyRepo","wrapper stateless",
"NetworkFixture","degenerate","PullWithoutMergeBranchThrows","controller",
"NetworkFixture","degenerate","CanMergeFetchedRefs","wrapper stateless",
"NetworkFixture","degenerate","CanPruneRefs","wrapper stateless",
"AttributesFixture","boundary degenerate small-class","StagingHonorsTheAttributesFiles","wrapper stateless",
"GitStrArrayManaged","commander small-class","Dispose","command",
"CherryPickFixture","boundary degenerate","CanCherryPick","wrapper",
"CherryPickFixture","boundary degenerate","CherryPickWithConflictDoesNotCommit","command collaborator",
"CherryPickFixture","boundary degenerate","CanSpecifyConflictFileStrategy","controller stateless",
"CherryPickFixture","boundary degenerate","CanCherryPickCommit","wrapper stateless",
"CherryPickFixture","boundary degenerate","CherryPickWithConflictsReturnsConflicts","wrapper stateless",
"CherryPickFixture","boundary degenerate","CanCherryPickCommitIntoIndex","wrapper stateless",
"CherryPickFixture","boundary degenerate","CanCherryPickIntoIndexWithConflicts","wrapper stateless",
"CherryPickFixture","boundary degenerate","AddFileCommitToRepo","controller stateless",
"TreeBuilderHandle","boundary small-class","TreeBuilderHandle","constructor",
"TreeBuilderHandle","boundary small-class","TreeBuilderHandle","constructor",
"TreeBuilderHandle","boundary small-class","Free","wrapper",
"UnstageFixture","boundary degenerate","StagingANewVersionOfAFileThenUnstagingItRevertsTheBlobToTheVersionOfHead","wrapper stateless",
"UnstageFixture","boundary degenerate","CanStageAndUnstageAnIgnoredFile","wrapper stateless",
"UnstageFixture","boundary degenerate","CanUnstage","wrapper stateless",
"UnstageFixture","boundary degenerate","UnstagingWritesIndex","wrapper stateless",
"UnstageFixture","boundary degenerate","UnstagingUnknownPathsWithStrictUnmatchedExplicitPathsValidationThrows","wrapper stateless",
"UnstageFixture","boundary degenerate","CanUnstageUnknownPathsWithLaxUnmatchedExplicitPathsValidation","wrapper stateless",
"UnstageFixture","boundary degenerate","CanUnstageTheRemovalOfAFile","wrapper stateless",
"UnstageFixture","boundary degenerate","CanUnstageUntrackedFileAgainstAnOrphanedHead","wrapper stateless",
"UnstageFixture","boundary degenerate","UnstagingUnknownPathsAgainstAnOrphanedHeadWithStrictUnmatchedExplicitPathsValidationThrows","wrapper stateless",
"UnstageFixture","boundary degenerate","CanUnstageUnknownPathsAgainstAnOrphanedHeadWithLaxUnmatchedExplicitPathsValidation","wrapper stateless",
"UnstageFixture","boundary degenerate","UnstagingANewFileWithAFullPathWhichEscapesOutOfTheWorkingDirThrows","wrapper stateless",
"UnstageFixture","boundary degenerate","UnstagingANewFileWithAFullPathWhichEscapesOutOfTheWorkingDirAgainstAnOrphanedHeadThrows","wrapper stateless",
"UnstageFixture","boundary degenerate","UnstagingFileWithBadParamsThrows","wrapper stateless",
"UnstageFixture","boundary degenerate","CanUnstageSourceOfARename","wrapper stateless",
"UnstageFixture","boundary degenerate","CanUnstageTargetOfARename","wrapper stateless",
"UnstageFixture","boundary degenerate","CanUnstageBothSidesOfARename","wrapper stateless",
"BaseFixture","boundary","BaseFixture","constructor",
"BaseFixture","boundary","BaseFixture","constructor",
"BaseFixture","boundary","CreateCorruptedDeadBeefHead","wrapper stateless",
"BaseFixture","boundary","BuildSelfCleaningDirectory","factory wrapper stateless",
"BaseFixture","boundary","BuildSelfCleaningDirectory","factory wrapper stateless",
"BaseFixture","boundary","SandboxBareTestRepo","property wrapper",
"BaseFixture","boundary","SandboxStandardTestRepo","property wrapper",
"BaseFixture","boundary","SandboxMergedTestRepo","property wrapper",
"BaseFixture","boundary","SandboxStandardTestRepoGitDir","property wrapper",
"BaseFixture","boundary","SandboxMergeTestRepo","property wrapper",
"BaseFixture","boundary","SandboxRevertTestRepo","property wrapper",
"BaseFixture","boundary","SandboxSubmoduleTestRepo","property non-void-command",
"BaseFixture","boundary","SandboxAssumeUnchangedTestRepo","property wrapper",
"BaseFixture","boundary","SandboxSubmoduleSmallTestRepo","property non-void-command collaborator",
"BaseFixture","boundary","SandboxWorktreeTestRepo","property non-void-command",
"BaseFixture","boundary","SandboxPackBuilderTestRepo","property wrapper",
"BaseFixture","boundary","Sandbox","property non-void-command collaborator",
"BaseFixture","boundary","InitNewRepository","property non-void-command collaborator",
"BaseFixture","boundary","Register","command",
"BaseFixture","boundary","Dispose","wrapper",
"BaseFixture","boundary","RequiresDotNetOrMonoGreaterThanOrEqualTo","controller stateless",
"BaseFixture","boundary","CreateConfigurationWithDummyUser","command collaborator",
"BaseFixture","boundary","CreateConfigurationWithDummyUser","controller stateless",
"BaseFixture","boundary","AssertCommitIdentitiesAre","wrapper stateless",
"BaseFixture","boundary","Expected","property wrapper",
"BaseFixture","boundary","Expected","wrapper stateless",
"BaseFixture","boundary","AssertBelongsToARepository<T>","wrapper stateless",
"BaseFixture","boundary","CreateAttributesFile","wrapper stateless",
"TransientTreeTreeEntryDefinition","data-provider boundary lazy-class small-class","get","get collaborator",
"TransientTreeTreeEntryDefinition","data-provider boundary lazy-class small-class","get","collaborator incidental",
"CloneFixture","boundary degenerate","CanClone","wrapper stateless",
"CloneFixture","boundary degenerate","CanCloneWithCheckoutBranchName","wrapper stateless",
"CloneFixture","boundary degenerate","AssertLocalClone","wrapper stateless",
"CloneFixture","boundary degenerate","CanCloneALocalRepositoryFromALocalUri","wrapper",
"CloneFixture","boundary degenerate","CanCloneALocalRepositoryFromAStandardPath","wrapper",
"CloneFixture","boundary degenerate","CanCloneALocalRepositoryFromANewlyCreatedTemporaryPath","wrapper stateless",
"CloneFixture","boundary degenerate","CanCloneBarely","wrapper stateless",
"CloneFixture","boundary degenerate","WontCheckoutIfAskedNotTo","wrapper stateless",
"CloneFixture","boundary degenerate","CallsProgressCallbacks","wrapper stateless",
"CloneFixture","boundary degenerate","CanCloneWithCredentials","wrapper stateless",
"CloneFixture","boundary degenerate","CanInspectCertificateOnClone","wrapper stateless",
"Commit","data-provider boundary","Commit","constructor",
"Commit","data-provider boundary","Commit","constructor",
"Commit","data-provider boundary","RetrieveNotesOfCommit","get collaborator",
"Commit","data-provider boundary","get","collaborator incidental",
"Commit","data-provider boundary","get","get",
"Commit","data-provider boundary","get","get",
"Commit","data-provider boundary","get","get",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","get collaborator",
"Commit","data-provider boundary","get","property non-void-command",
"FilterFixture","entity commander boundary","CanRegisterFilterWithSingleAttribute","wrapper",
"FilterFixture","entity commander boundary","CanRegisterAndUnregisterTheSameFilter","wrapper",
"FilterFixture","entity commander boundary","CanRegisterAndDeregisterAfterGarbageCollection","wrapper",
"FilterFixture","entity commander boundary","SameFilterIsEqual","wrapper",
"FilterFixture","entity commander boundary","InitCallbackNotMadeWhenFilterNeverUsed","wrapper",
"FilterFixture","entity commander boundary","InitCallbackMadeWhenUsingTheFilter","command",
"FilterFixture","entity commander boundary","WhenStagingFileApplyIsCalledWithCleanForCorrectPath","command collaborator",
"FilterFixture","entity commander boundary","CleanFilterWritesOutputToObjectTree","command collaborator",
"FilterFixture","entity commander boundary","CanHandleMultipleSmudgesConcurrently","property non-void-command collaborator",
"FilterFixture","entity commander boundary","WhenCheckingOutAFileFileSmudgeWritesCorrectFileToWorkingDirectory","command",
"FilterFixture","entity commander boundary","CanFilterLargeFiles","command",
"FilterFixture","entity commander boundary","DoubleRegistrationFailsButDoubleDeregistrationDoesNot","wrapper",
"FilterFixture","entity commander boundary","CharArrayAreEqual","wrapper stateless",
"FilterFixture","entity commander boundary","CheckoutFileForSmudge","property non-void-command collaborator",
"FilterFixture","entity commander boundary","CreateTestRepository","factory wrapper stateless",
"ArchiverBase","commander degenerate","BeforeArchiving","empty",
"ArchiverBase","commander degenerate","AfterArchiving","empty",
"ArchiverBase","commander degenerate","OrchestrateArchiving","command collaborator",
"ArchiverBase","commander degenerate","ArchiveTree","wrapper stateless",
"RevertFixture","boundary degenerate","CanRevert","controller stateless",
"RevertFixture","boundary degenerate","CanRevertAndNotCommit","controller stateless",
"RevertFixture","boundary degenerate","RevertWithConflictDoesNotCommit","wrapper stateless",
"RevertFixture","boundary degenerate","RevertWithFileConflictStrategyOption","controller stateless",
"RevertFixture","boundary degenerate","RevertReportsCheckoutProgress","wrapper stateless",
"RevertFixture","boundary degenerate","RevertReportsCheckoutNotification","wrapper stateless",
"RevertFixture","boundary degenerate","RevertFindsRenames","controller stateless",
"RevertFixture","boundary degenerate","CanRevertMergeCommit","wrapper stateless",
"RevertFixture","boundary degenerate","CanNotRevertAMergeCommitWithoutSpecifyingTheMainlineBranch","wrapper stateless",
"RevertFixture","boundary degenerate","RevertWithNothingToRevert","wrapper stateless",
"RevertFixture","boundary degenerate","RevertOrphanedBranchThrows","wrapper stateless",
"RevertFixture","boundary degenerate","RevertWithNothingToRevertInObjectDatabaseSucceeds","wrapper stateless",
"RevertFixture","boundary degenerate","RevertWithConflictReportsConflict","wrapper stateless",
"RevertFixture","boundary degenerate","CanRevertInObjectDatabase","wrapper stateless",
"MetaFixture","controller degenerate","LibGit2SharpPublicInterfacesCoverAllPublicMembers","command collaborator",
"MetaFixture","controller degenerate","LibGit2SharpExplicitOnlyInterfacesAreIndeedExplicitOnly","command collaborator",
"MetaFixture","controller degenerate","PublicTestMethodsAreFactsOrTheories","controller stateless",
"MetaFixture","controller degenerate","TypesInLibGit2DecoratedWithDebuggerDisplayMustFollowTheStandardImplPattern","command collaborator",
"MetaFixture","controller degenerate","TypesInLibGit2SharpMustBeExtensibleInATestingContext","controller stateless",
"MetaFixture","controller degenerate","EnumsWithFlagsHaveMutuallyExclusiveValues","controller stateless",
"MetaFixture","controller degenerate","BuildMissingDebuggerDisplayPropertyMessage","controller stateless",
"MetaFixture","controller degenerate","GetEnumeratorMethodsInLibGit2SharpMustBeVirtualForTestability","controller stateless",
"MetaFixture","controller degenerate","NoPublicTypesUnderLibGit2SharpCoreNamespace","controller stateless",
"MetaFixture","controller degenerate","NoOptionalParametersinMethods","controller stateless",
"MetaFixture","controller degenerate","NoOptionalParametersinConstructors","controller stateless",
"MetaFixture","controller degenerate","PublicExtensionMethodsShouldonlyTargetInterfacesOrEnums","controller stateless",
"MetaFixture","controller degenerate","AllIDiffResultsAreInChangesBuilder","controller stateless",
"PatchEntryChanges","data-provider boundary data-class","PatchEntryChanges","constructor",
"PatchEntryChanges","data-provider boundary data-class","PatchEntryChanges","constructor",
"PatchEntryChanges","data-provider boundary data-class","get","get",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"PatchEntryChanges","data-provider boundary data-class","get","get",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"PatchEntryChanges","data-provider boundary data-class","get","get collaborator",
"MergeOptionsBase","empty","MergeOptionsBase","constructor",
"LazyGroup<T>","entity small-class","LazyGroup","constructor",
"LazyGroup<T>","entity small-class","AddLazy<TResult>","property non-void-command factory collaborator",
"LazyGroup<T>","entity small-class","Evaluate","set collaborator",
"LazyGroup<T>","entity small-class","LazyWrapper","constructor",
"CertificateX509","entity boundary small-class","CertificateX509","constructor",
"CertificateX509","entity boundary small-class","CertificateX509","constructor",
"CertificateX509","entity boundary small-class","CertificateX509","constructor",
"CertificateX509","entity boundary small-class","ToPointers","property non-void-command collaborator",
"TarArchiver","commander boundary","TarArchiver","constructor",
"TarArchiver","commander boundary","BeforeArchiving","wrapper stateless",
"TarArchiver","commander boundary","AddTreeEntry","command collaborator",
"TarArchiver","commander boundary","WriteStream","wrapper stateless",
"TarArchiver","commander boundary","Dispose","command",
"BlameHunk","data-provider boundary","BlameHunk","constructor",
"BlameHunk","data-provider boundary","BlameHunk","constructor",
"BlameHunk","data-provider boundary","ContainsLine","predicate",
"BlameHunk","data-provider boundary","Equals","predicate non-void-command",
"BlameHunk","data-provider boundary","Equals","predicate non-void-command collaborator",
"BlameHunk","data-provider boundary","GetHashCode","property non-void-command",
"BlameHunk","data-provider boundary","get","get collaborator",
"BlameHunk","data-provider boundary","get","get collaborator",
"BlameHunk","data-provider boundary","get","property wrapper",
"DiffTreeToTargetFixture","degenerate","CanCompareASimpleTreeAgainstTheWorkDir","controller stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareAMoreComplexTreeAgainstTheWorkdir","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareASimpleTreeAgainstTheWorkDirAndTheIndex","controller stateless",
"DiffTreeToTargetFixture","degenerate","ShowcaseTheDifferenceBetweenTheTwoKindOfComparison","controller stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareASimpleTreeAgainstTheIndex","controller stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareAMoreComplexTreeAgainstTheIndex","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareASubsetofTheTreeAgainstTheIndex","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareASubsetofTheTreeAgainstTheIndexWithLaxExplicitPathsValidationAndANonExistentPath","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","ComparingASubsetofTheTreeAgainstTheIndexWithStrictExplicitPathsValidationAndANonExistentPathThrows","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","CanCopeWithEndOfFileNewlineChanges","controller stateless",
"DiffTreeToTargetFixture","degenerate","ComparingATreeInABareRepositoryAgainstTheWorkDirOrTheIndexThrows","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareANullTreeAgainstTheIndex","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareANullTreeAgainstTheWorkdir","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","CanCompareANullTreeAgainstTheWorkdirAndTheIndex","wrapper stateless",
"DiffTreeToTargetFixture","degenerate","CompareSetsCorrectAddedAndDeletedLines","controller stateless",
"HistoryRewriter","entity boundary","HistoryRewriter","constructor",
"HistoryRewriter","entity boundary","Execute","command collaborator",
"HistoryRewriter","entity boundary","RewriteReference","get property non-void-command collaborator",
"HistoryRewriter","entity boundary","RewriteReference<TRef,TTarget>","get property collaborator",
"HistoryRewriter","entity boundary","RewriteCommit","command collaborator",
"HistoryRewriter","entity boundary","TryPruneEmptyCommit","predicate set collaborator",
"HistoryRewriter","entity boundary","RewriteTarget","get property non-void-command factory collaborator",
"HistoryRewriter","entity boundary","ReferenceDepth","property non-void-command collaborator",
"ProxyOptions","degenerate","CreateGitProxyOptions","property factory wrapper",
"ProxyOptions","degenerate","GitCredentialHandler","controller stateless",
"ProxyOptions","degenerate","GitCertificateCheck","wrapper stateless",
"EqualityFixture","pure-controller degenerate small-class","EqualityHelperCanTestNullInEquals","controller stateless",
"EqualityFixture","pure-controller degenerate small-class","EqualityHelperCanTestNullInHashCode","controller stateless",
"RepositoryOperationContext","empty","RepositoryOperationContext","constructor",
"RepositoryOperationContext","empty","RepositoryOperationContext","constructor",
"RepositoryOperationContext","empty","RepositoryOperationContext","constructor",
"PushFixture","commander boundary","OnPushStatusError","wrapper stateless",
"PushFixture","commander boundary","AssertPush","wrapper stateless",
"PushFixture","commander boundary","CanPushABranchTrackingAnUpstreamBranch","command collaborator",
"PushFixture","commander boundary","CanInvokePrePushCallbackAndSucceed","command collaborator",
"PushFixture","commander boundary","CanInvokePrePushCallbackAndFail","command collaborator",
"PushFixture","commander boundary","PushingABranchThatDoesNotTrackAnUpstreamBranchThrows","wrapper stateless",
"CommitFixture","boundary degenerate","CanCountCommits","wrapper stateless",
"CommitFixture","boundary degenerate","CanCorrectlyCountCommitsWhenSwitchingToAnotherBranch","wrapper stateless",
"CommitFixture","boundary degenerate","CanEnumerateCommits","wrapper stateless",
"CommitFixture","boundary degenerate","CanEnumerateCommitsInDetachedHeadState","wrapper stateless",
"CommitFixture","boundary degenerate","DefaultOrderingWhenEnumeratingCommitsIsTimeBased","wrapper stateless",
"CommitFixture","boundary degenerate","CanEnumerateCommitsFromSha","wrapper stateless",
"CommitFixture","boundary degenerate","QueryingTheCommitHistoryWithUnknownShaOrInvalidEntryPointThrows","wrapper stateless",
"CommitFixture","boundary degenerate","QueryingTheCommitHistoryFromACorruptedReferenceThrows","wrapper stateless",
"CommitFixture","boundary degenerate","QueryingTheCommitHistoryWithBadParamsThrows","wrapper stateless",
"CommitFixture","boundary degenerate","CanEnumerateCommitsWithReverseTimeSorting","controller",
"CommitFixture","boundary degenerate","CanEnumerateCommitsWithReverseTopoSorting","controller stateless",
"CommitFixture","boundary degenerate","CanSimplifyByFirstParent","incidental",
"CommitFixture","boundary degenerate","CanGetParentsCount","wrapper stateless",
"CommitFixture","boundary degenerate","CanEnumerateCommitsWithTimeSorting","wrapper",
"CommitFixture","boundary degenerate","CanEnumerateCommitsWithTopoSorting","controller stateless",
"CommitFixture","boundary degenerate","CanEnumerateFromHead","incidental",
"CommitFixture","boundary degenerate","CanEnumerateFromDetachedHead","wrapper stateless",
"CommitFixture","boundary degenerate","CanEnumerateUsingTwoHeadsAsBoundaries","incidental",
"CommitFixture","boundary degenerate","CanEnumerateUsingImplicitHeadAsSinceBoundary","incidental",
"CommitFixture","boundary degenerate","CanEnumerateUsingTwoAbbreviatedShasAsBoundaries","incidental",
"CommitFixture","boundary degenerate","CanEnumerateCommitsFromTwoHeads","incidental",
"CommitFixture","boundary degenerate","CanEnumerateCommitsFromMixedStartingPoints","incidental",
"CommitFixture","boundary degenerate","CanEnumerateCommitsUsingGlob","incidental",
"CommitFixture","boundary degenerate","CanHideCommitsUsingGlob","incidental",
"CommitFixture","boundary degenerate","CanEnumerateCommitsFromAnAnnotatedTag","command",
"CommitFixture","boundary degenerate","CanEnumerateCommitsFromATagAnnotation","command",
"CommitFixture","boundary degenerate","CanEnumerateCommitsFromATag","collaborator incidental",
"CommitFixture","boundary degenerate","CanEnumerateAllCommits","incidental",
"CommitFixture","boundary degenerate","CanEnumerateCommitsFromATagWhichPointsToABlob","incidental",
"CommitFixture","boundary degenerate","CanEnumerateCommitsFromATagWhichPointsToATree","wrapper stateless",
"CommitFixture","boundary degenerate","AssertEnumerationOfCommits","wrapper stateless",
"CommitFixture","boundary degenerate","CanLookupCommitGeneric","wrapper",
"CommitFixture","boundary degenerate","CanReadCommitData","controller",
"CommitFixture","boundary degenerate","CanReadCommitWithMultipleParents","controller stateless",
"CommitFixture","boundary degenerate","CanDirectlyAccessABlobOfTheCommit","controller stateless",
"CommitFixture","boundary degenerate","CanDirectlyAccessATreeOfTheCommit","wrapper stateless",
"CommitFixture","boundary degenerate","DirectlyAccessingAnUnknownTreeEntryOfTheCommitReturnsNull","wrapper stateless",
"CommitFixture","boundary degenerate","CanCommitWithSignatureFromConfig","wrapper stateless",
"CommitFixture","boundary degenerate","CommitParentsAreMergeHeads","controller stateless",
"CommitFixture","boundary degenerate","CommitCleansUpMergeMetadata","wrapper stateless",
"CommitFixture","boundary degenerate","CanCommitALittleBit","controller stateless",
"CommitFixture","boundary degenerate","CanGeneratePredictableObjectShas","controller stateless",
"CommitFixture","boundary degenerate","CanAmendARootCommit","wrapper stateless",
"CommitFixture","boundary degenerate","CanAmendACommitWithMoreThanOneParent","controller stateless",
"CommitFixture","boundary degenerate","CanNotAmendAnEmptyRepository","wrapper stateless",
"CommitFixture","boundary degenerate","CanRetrieveChildrenOfASpecificCommit","controller stateless",
"CommitFixture","boundary degenerate","CanCorrectlyDistinguishAuthorFromCommitter","wrapper stateless",
"CommitFixture","boundary degenerate","CanCommitOnOrphanedBranch","wrapper stateless",
"CommitFixture","boundary degenerate","CanNotCommitAnEmptyCommit","wrapper stateless",
"CommitFixture","boundary degenerate","CanCommitAnEmptyCommitWhenForced","wrapper stateless",
"CommitFixture","boundary degenerate","CanNotAmendAnEmptyCommit","wrapper stateless",
"CommitFixture","boundary degenerate","CanAmendAnEmptyCommitWhenForced","wrapper stateless",
"CommitFixture","boundary degenerate","CanCommitAnEmptyCommitWhenMerging","controller stateless",
"CommitFixture","boundary degenerate","CanAmendAnEmptyMergeCommit","wrapper stateless",
"CommitFixture","boundary degenerate","CanNotAmendACommitInAWayThatWouldLeadTheNewCommitToBecomeEmpty","wrapper stateless",
"CommitFixture","boundary degenerate","CanPrettifyAMessage","controller stateless",
"CommitFixture","boundary degenerate","CanExtractSignatureFromCommit","wrapper",
"CommitFixture","boundary degenerate","CanCreateACommitString","wrapper stateless",
"CommitFixture","boundary degenerate","CanCreateASignedCommit","controller",
"SubstitutionCipherFilter","commander boundary data-class small-class","SubstitutionCipherFilter","constructor",
"SubstitutionCipherFilter","commander boundary data-class small-class","Clean","set collaborator",
"SubstitutionCipherFilter","commander boundary data-class small-class","Smudge","set collaborator",
"BranchTrackingDetails","data-provider data-class","BranchTrackingDetails","constructor",
"BranchTrackingDetails","data-provider data-class","BranchTrackingDetails","constructor",
"BranchTrackingDetails","data-provider data-class","get","get",
"BranchTrackingDetails","data-provider data-class","get","get",
"BranchTrackingDetails","data-provider data-class","get","get collaborator",
"StatusListHandle","boundary small-class","StatusListHandle","constructor",
"StatusListHandle","boundary small-class","StatusListHandle","constructor",
"StatusListHandle","boundary small-class","Free","wrapper",
"MergeFixture","boundary degenerate","ANewRepoIsFullyMerged","wrapper stateless",
"MergeFixture","boundary degenerate","AFullyMergedRepoOnlyContainsStagedIndexEntries","wrapper stateless",
"MergeFixture","boundary degenerate","SoftResetARepoWithUnmergedEntriesThrows","controller stateless",
"MergeFixture","boundary degenerate","CommitAgainARepoWithUnmergedEntriesThrows","wrapper stateless",
"MergeFixture","boundary degenerate","CanRetrieveTheBranchBeingMerged","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeRepoNonFastForward","controller stateless",
"MergeFixture","boundary degenerate","IsUpToDateMerge","wrapper stateless",
"MergeFixture","boundary degenerate","CanFastForwardRepos","wrapper stateless",
"MergeFixture","boundary degenerate","ConflictingMergeRepos","command collaborator",
"MergeFixture","boundary degenerate","ConflictingMergeReposBinary","command collaborator",
"MergeFixture","boundary degenerate","CanFailOnFirstMergeConflict","wrapper stateless",
"MergeFixture","boundary degenerate","CanFastForwardCommit","wrapper",
"MergeFixture","boundary degenerate","CanNonFastForwardMergeCommit","wrapper stateless",
"MergeFixture","boundary degenerate","MergeReportsCheckoutProgress","wrapper stateless",
"MergeFixture","boundary degenerate","MergeReportsCheckoutNotifications","wrapper stateless",
"MergeFixture","boundary degenerate","FastForwardMergeReportsCheckoutProgress","wrapper stateless",
"MergeFixture","boundary degenerate","FastForwardMergeReportsCheckoutNotifications","wrapper stateless",
"MergeFixture","boundary degenerate","MergeCanDetectRenames","wrapper stateless",
"MergeFixture","boundary degenerate","FastForwardNonFastForwardableMergeThrows","wrapper stateless",
"MergeFixture","boundary degenerate","CanForceFastForwardMergeThroughConfig","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeAndNotCommit","wrapper stateless",
"MergeFixture","boundary degenerate","CanForceNonFastForwardMerge","wrapper stateless",
"MergeFixture","boundary degenerate","CanForceNonFastForwardMergeThroughConfig","wrapper stateless",
"MergeFixture","boundary degenerate","VerifyUpToDateMerge","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeCommittish","wrapper stateless",
"MergeFixture","boundary degenerate","MergeWithWorkDirConflictsThrows","wrapper stateless",
"MergeFixture","boundary degenerate","CanSpecifyConflictFileStrategy","controller stateless",
"MergeFixture","boundary degenerate","MergeCanSpecifyMergeFileFavorOption","controller stateless",
"MergeFixture","boundary degenerate","CanMergeBranch","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeIntoOrphanedBranch","wrapper",
"MergeFixture","boundary degenerate","CanMergeTreeIntoSameTree","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeTreeIntoTreeFromUnbornBranch","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeCommitsAndDetectConflicts","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeFastForwardTreeWithoutConflicts","wrapper stateless",
"MergeFixture","boundary degenerate","CanIdentifyConflictsInMergeCommits","controller stateless",
"MergeFixture","boundary degenerate","CanConflictOnWhitespaceChangeMergeConflict","wrapper stateless",
"MergeFixture","boundary degenerate","CanIgnoreWhitespaceChangeMergeConflict","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeIntoIndex","wrapper stateless",
"MergeFixture","boundary degenerate","CanMergeIntoIndexWithConflicts","wrapper stateless",
"MergeFixture","boundary degenerate","AddFileCommitToRepo","controller stateless",
"ConflictFixture","boundary degenerate","CanResolveConflictsByRemovingFromTheIndex","wrapper stateless",
"ConflictFixture","boundary degenerate","CanGetOriginalNamesOfRenameConflicts","controller",
"ConflictFixture","boundary degenerate","CanRetrieveSingleConflictByPath","wrapper stateless",
"ConflictFixture","boundary degenerate","GetPath","collaborator incidental",
"ConflictFixture","boundary degenerate","GetId","controller stateless",
"ConflictFixture","boundary degenerate","CanRetrieveAllConflicts","command collaborator",
"ConflictFixture","boundary degenerate","get","factory collaborator incidental",
"ConflictFixture","boundary degenerate","get","factory collaborator incidental",
"ReflogFixture","degenerate","CanReadReflog","controller stateless",
"ReflogFixture","degenerate","ReflogOfUnbornReferenceIsEmpty","wrapper stateless",
"ReflogFixture","degenerate","ReadingReflogOfInvalidReferenceNameThrows","wrapper stateless",
"ReflogFixture","degenerate","CommitShouldCreateReflogEntryOnHeadAndOnTargetedDirectReference","wrapper stateless",
"ReflogFixture","degenerate","CommitOnUnbornReferenceShouldCreateReflogEntryWithInitialTag","wrapper stateless",
"ReflogFixture","degenerate","CommitOnDetachedHeadShouldInsertReflogEntry","wrapper stateless",
"ReflogFixture","degenerate","AppendingToReflogDependsOnCoreLogAllRefUpdatesSetting","controller stateless",
"ReflogFixture","degenerate","UnsignedMethodsWriteCorrectlyToTheReflog","controller stateless",
"ObjectHandle","boundary small-class","ObjectHandle","constructor",
"ObjectHandle","boundary small-class","ObjectHandle","constructor",
"ObjectHandle","boundary small-class","Free","wrapper",
"LeaksContainer","entity boundary small-class","get","property non-void-command collaborator",
"PatchStatsFixture","boundary degenerate small-class","CanExtractStatisticsFromDiff","wrapper stateless",
"CommitLog","controller","CommitLog","constructor",
"CommitLog","controller","CommitLog","constructor",
"CommitLog","controller","GetEnumerator","property factory wrapper",
"CommitLog","controller","IEnumerable.GetEnumerator","property non-void-command collaborator",
"CommitLog","controller","QueryBy","property factory controller",
"CommitLog","controller","QueryBy","property factory wrapper",
"CommitLog","controller","QueryBy","property factory wrapper",
"CommitLog","controller","get","get collaborator",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","NonFastForwardException","constructor",
"NonFastForwardException","boundary degenerate small-class","get","collaborator incidental",
"MockingFixture","degenerate","CanCountCommitsWithConcreteRepository","wrapper stateless",
"MockingFixture","degenerate","CanCountCommitsWithMockedRepository","wrapper stateless",
"MockingFixture","degenerate","CanFakeConfigurationBuildSignature","controller stateless",
"MockingFixture","degenerate","CanFakeEnumerationOfConfiguration","controller stateless",
"SignatureFixture","boundary degenerate","CreatingASignatureWithANameContainingZerosThrows","wrapper stateless",
"SignatureFixture","boundary degenerate","CreatingASignatureWithAnEmailContainingZerosThrows","wrapper stateless",
"SignatureFixture","boundary degenerate","CreatingASignatureWithBadParamsThrows","wrapper stateless",
"FilterAttributeEntry","data-provider data-class small-class","FilterAttributeEntry","constructor",
"FilterAttributeEntry","data-provider data-class small-class","FilterAttributeEntry","constructor",
"FilterAttributeEntry","data-provider data-class small-class","get","get",
"OdbBackendFixture","boundary degenerate","CanGeneratePredictableObjectShasWithTheDefaultBackend","wrapper stateless",
"OdbBackendFixture","boundary degenerate","CanGeneratePredictableObjectShasWithAProvidedBackend","wrapper",
"OdbBackendFixture","boundary degenerate","CanRetrieveObjectsThroughOddSizedShortShas","wrapper stateless",
"OdbBackendFixture","boundary degenerate","CanEnumerateTheContentOfTheObjectDatabase","controller stateless",
"OdbBackendFixture","boundary degenerate","CanPushWithACustomBackend","wrapper stateless",
"OdbBackendFixture","boundary degenerate","CanShortenObjectIdentifier","wrapper stateless",
"OdbBackendFixture","boundary degenerate","ADisposableOdbBackendGetsDisposedUponRepositoryDisposal","wrapper stateless",
"BlobFixture","degenerate","CanGetBlobAsText","controller stateless",
"BlobFixture","degenerate","CanGetBlobAsFilteredText","controller stateless",
"BlobFixture","degenerate","CanGetBlobAsTextWithVariousEncodings","controller stateless",
"BlobFixture","degenerate","CanGetBlobSize","wrapper stateless",
"BlobFixture","degenerate","CanLookUpBlob","wrapper stateless",
"BlobFixture","degenerate","CanReadBlobStream","controller stateless",
"BlobFixture","degenerate","CanReadBlobFilteredStream","controller stateless",
"BlobFixture","degenerate","CanReadBlobFilteredStreamOfUnmodifiedBinary","controller stateless",
"BlobFixture","degenerate","CanStageAFileGeneratedFromABlobContentStream","controller stateless",
"BlobFixture","degenerate","CanTellIfTheBlobContentLooksLikeBinary","wrapper stateless",
"BlobFixture","degenerate","CanTellIfABlobIsMissing","controller stateless",
"GitPushOptionsWrapper","commander small-class","GitPushOptionsWrapper","constructor",
"GitPushOptionsWrapper","commander small-class","GitPushOptionsWrapper","constructor",
"GitPushOptionsWrapper","commander small-class","Dispose","set",
"GitPushOptionsWrapper","commander small-class","Dispose","command",
"ResetIndexFixture","degenerate","ResetANewlyInitializedBareRepositoryThrows","wrapper stateless",
"ResetIndexFixture","degenerate","ResettingInABareRepositoryThrows","wrapper stateless",
"ResetIndexFixture","degenerate","ResetTheIndexWithTheHeadUnstagesEverything","controller stateless",
"ResetIndexFixture","degenerate","CanResetTheIndexToTheContentOfACommitWithCommitAsArgument","controller stateless",
"ResetIndexFixture","degenerate","CanResetTheIndexToASubsetOfTheContentOfACommitWithCommitAsArgumentAndLaxUnmatchedExplicitPathsValidation","wrapper stateless",
"ResetIndexFixture","degenerate","ResettingTheIndexToASubsetOfTheContentOfACommitWithCommitAsArgumentAndStrictUnmatchedPathspecsValidationThrows","wrapper stateless",
"ResetIndexFixture","degenerate","CanResetTheIndexWhenARenameExists","controller stateless",
"ResetIndexFixture","degenerate","CanResetSourceOfARenameInIndex","wrapper stateless",
"ResetIndexFixture","degenerate","CanResetTargetOfARenameInIndex","wrapper stateless",
"NoteHandle","boundary small-class","NoteHandle","constructor",
"NoteHandle","boundary small-class","NoteHandle","constructor",
"NoteHandle","boundary small-class","Free","wrapper",
"TransferProgress","data-provider","TransferProgress","constructor",
"TransferProgress","data-provider","TransferProgress","copy-constructor",
"TransferProgress","data-provider","get","property",
"TransferProgress","data-provider","get","property",
"TransferProgress","data-provider","get","property",
"TransferProgress","data-provider","get","property",
"TransferProgress","data-provider","get","wrapper stateless",
"RevertResult","empty","RevertResult","constructor",
"RevertResult","empty","RevertResult","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","LockedFileException","constructor",
"LockedFileException","boundary degenerate small-class","get","collaborator incidental",
"AnnotatedCommitHandle","boundary small-class","AnnotatedCommitHandle","constructor",
"AnnotatedCommitHandle","boundary small-class","AnnotatedCommitHandle","constructor",
"AnnotatedCommitHandle","boundary small-class","Free","wrapper",
"FilterSubstitutionCipherFixture","degenerate","SmugdeIsNotCalledForFileWhichDoesNotMatchAnAttributeEntry","controller stateless",
"FilterSubstitutionCipherFixture","degenerate","CorrectlyEncodesAndDecodesInput","controller stateless",
"FilterSubstitutionCipherFixture","degenerate","WhenStagedFileDoesNotMatchPathSpecFileIsNotFiltered","wrapper stateless",
"FilterSubstitutionCipherFixture","degenerate","CleanIsCalledIfAttributeEntryMatches","wrapper stateless",
"FilterSubstitutionCipherFixture","degenerate","SmudgeIsCalledIfAttributeEntryMatches","wrapper stateless",
"RepositoryOptionsFixture","entity boundary","RepositoryOptionsFixture","constructor",
"RepositoryOptionsFixture","entity boundary","CanOpenABareRepoAsIfItWasAStandardOne","wrapper",
"RepositoryOptionsFixture","entity boundary","CanOpenABareRepoAsIfItWasAStandardOneWithANonExisitingIndexFile","wrapper",
"RepositoryOptionsFixture","entity boundary","CanOpenABareRepoWithOptions","wrapper stateless",
"RepositoryOptionsFixture","entity boundary","CanProvideADifferentWorkDirToAStandardRepo","wrapper",
"RepositoryOptionsFixture","entity boundary","CanProvideADifferentIndexToAStandardRepo","wrapper",
"RepositoryOptionsFixture","entity boundary","OpeningABareRepoWithoutProvidingBothWorkDirAndIndexThrows","wrapper stateless",
"RepositoryOptionsFixture","entity boundary","CanSneakAdditionalCommitsIntoAStandardRepoWithoutAlteringTheWorkdirOrTheIndex","command collaborator",
"RepositoryOptionsFixture","entity boundary","MeanwhileInAnotherDimensionAnEvilMastermindIsAtWork","property wrapper",
"RepositoryOptionsFixture","entity boundary","CanCommitOnBareRepository","wrapper stateless",
"StageFixture","boundary degenerate","CanStage","wrapper stateless",
"StageFixture","boundary degenerate","StagingWritesIndex","wrapper stateless",
"StageFixture","boundary degenerate","CanStageTheUpdationOfAStagedFile","wrapper stateless",
"StageFixture","boundary degenerate","StagingAnUnknownFileThrowsIfExplicitPath","wrapper stateless",
"StageFixture","boundary degenerate","CanStageAnUnknownFileWithLaxUnmatchedExplicitPathsValidation","wrapper stateless",
"StageFixture","boundary degenerate","StagingAnUnknownFileWithLaxExplicitPathsValidationDoesntThrow","wrapper stateless",
"StageFixture","boundary degenerate","CanStageTheRemovalOfAStagedFile","wrapper stateless",
"StageFixture","boundary degenerate","CanStageANewFileInAPersistentManner","wrapper stateless",
"StageFixture","boundary degenerate","CanStageANewFileWithAFullPath","controller stateless",
"StageFixture","boundary degenerate","CanStageANewFileWithARelativePathContainingNativeDirectorySeparatorCharacters","wrapper stateless",
"StageFixture","boundary degenerate","StagingANewFileWithAFullPathWhichEscapesOutOfTheWorkingDirThrows","wrapper stateless",
"StageFixture","boundary degenerate","StagingFileWithBadParamsThrows","wrapper stateless",
"StageFixture","boundary degenerate","CanStageWithPathspec","wrapper stateless",
"StageFixture","boundary degenerate","CanStageWithMultiplePathspecs","wrapper stateless",
"StageFixture","boundary degenerate","CanIgnoreIgnoredPaths","wrapper stateless",
"StageFixture","boundary degenerate","CanStageIgnoredPaths","wrapper stateless",
"StageFixture","boundary degenerate","IgnoredFilesAreOnlyStagedIfTheyreInTheRepo","wrapper stateless",
"StageFixture","boundary degenerate","CanStageConflictedIgnoredFiles","wrapper stateless",
"StageFixture","boundary degenerate","CanSuccessfullyStageTheContentOfAModifiedFileOfTheSameSizeWithinTheSameSecond","wrapper stateless",
"LaxFilePathMarshaler","boundary degenerate small-class","MarshalNativeToManaged","wrapper stateless",
"PackBuilderFixture","boundary degenerate","TestDefaultPackDelegate","command",
"PackBuilderFixture","boundary degenerate","TestCommitsPerBranchPackDelegate","command",
"PackBuilderFixture","boundary degenerate","TestCommitsPerBranchIdsPackDelegate","command",
"PackBuilderFixture","boundary degenerate","TestIfSameRepoAfterPacking","wrapper stateless",
"PackBuilderFixture","boundary degenerate","AddingObjectIdsTestDelegate","controller stateless",
"PackBuilderFixture","boundary degenerate","AddingObjectsTestDelegate","controller stateless",
"PackBuilderFixture","boundary degenerate","ExceptionIfPathDoesNotExist","wrapper stateless",
"PackBuilderFixture","boundary degenerate","ExceptionIfPathEqualsNull","wrapper stateless",
"PackBuilderFixture","boundary degenerate","ExceptionIfOptionsEqualsNull","wrapper stateless",
"PackBuilderFixture","boundary degenerate","ExceptionIfBuildDelegateEqualsNull","wrapper stateless",
"PackBuilderFixture","boundary degenerate","ExceptionIfNegativeNumberOfThreads","wrapper stateless",
"PackBuilderFixture","boundary degenerate","ExceptionIfAddNullObjectID","wrapper stateless",
"PackBuilderFixture","boundary degenerate","ExceptionIfAddRecursivelyNullObjectID","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanTellIfObjectsExists","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateABlobFromAFileInTheWorkingDirectory","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","RetrieveObjectMetadataReturnsCorrectSizeAndTypeForBlob","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateABlobIntoTheDatabaseOfABareRepository","controller stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateABlobFromAStream","controller stateless",
"ObjectDatabaseFixture","boundary degenerate","CanWriteABlobFromAByteArray","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanWriteABlobFromAStream","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","PrepareMemoryStream","factory controller stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateABlobFromAStreamWithANumberOfBytesToConsume","command collaborator",
"ObjectDatabaseFixture","boundary degenerate","CreatingABlobFromTooShortAStreamThrows","command",
"ObjectDatabaseFixture","boundary degenerate","CreatingABlobFromANonReadableStreamThrows","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateATreeByAlteringAnExistingOne","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateATreeByRemovingEntriesFromExistingOne","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","RemovingANonExistingEntryFromATreeDefinitionHasNoSideEffect","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateAnEmptyTree","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanReplaceAnExistingTreeWithAnotherPersitedTree","controller stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateATreeContainingABlobFromAFileInTheWorkingDirectory","controller stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateATreeContainingAGitLinkFromAnUntrackedSubmoduleInTheWorkingDirectory","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CannotCreateATreeContainingABlobFromARelativePathAgainstABareRepository","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CreatingATreeFromIndexWithUnmergedEntriesThrows","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateATreeFromIndex","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateACommit","controller stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateABinaryBlobFromAStream","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateATagAnnotationPointingToAGitObject","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanEnumerateTheGitObjectsFromBareRepository","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CreatingACommitWithMessageContainingZeroByteThrows","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CreatingATagAnnotationWithNameOrMessageContainingZeroByteThrows","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CreatingATagAnnotationWithBadParametersThrows","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCreateATagAnnotationWithAnEmptyMessage","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCalculateHistoryDivergence","controller stateless",
"ObjectDatabaseFixture","boundary degenerate","CanCalculateHistoryDivergenceWhenNoAncestorIsShared","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CalculatingHistoryDivergenceWithBadParamsThrows","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","CanShortenObjectIdentifier","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","TestMergeIntoSelfHasNoConflicts","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","TestMergeIntoOtherUnbornBranchHasNoConflicts","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","TestMergeIntoOtherUnbornBranchHasConflicts","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","TestMergeIntoOtherBranchHasNoConflicts","wrapper stateless",
"ObjectDatabaseFixture","boundary degenerate","TestMergeIntoWrongBranchHasConflicts","wrapper stateless",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"RemoveFromIndexException","empty","RemoveFromIndexException","constructor",
"ObjectId","unclassified","ObjectId","constructor",
"ObjectId","unclassified","ObjectId","constructor",
"ObjectId","unclassified","ObjectId","constructor",
"ObjectId","unclassified","ObjectId","constructor",
"ObjectId","unclassified","Equals","predicate non-void-command collaborator",
"ObjectId","unclassified","Equals","predicate non-void-command",
"ObjectId","unclassified","GetHashCode","property non-void-command",
"ObjectId","unclassified","ToString","incidental",
"ObjectId","unclassified","ToString","wrapper stateless",
"ObjectId","unclassified","StartsWith","wrapper stateless",
"ObjectId","unclassified","get","get collaborator",
"ObjectId","unclassified","get","get",
"ObjectId","unclassified","get","get",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","CheckoutConflictException","constructor",
"CheckoutConflictException","boundary degenerate small-class","get","collaborator incidental",
"RebaseFixture","small-class","CanRebase","controller",
"RebaseFixture","small-class","CanRebaseBranchOntoItself","wrapper",
"GitRepositoryInitOptions","commander data-class small-class","Dispose","set",
"Remote","entity boundary","Remote","constructor",
"Remote","entity boundary","Remote","copy-constructor",
"Remote","entity boundary","~Remote","destructor",
"Remote","entity boundary","Dispose","command",
"Remote","entity boundary","Dispose","set",
"Remote","entity boundary","FetchSpecTransformToSource","property wrapper",
"Remote","entity boundary","get","property wrapper",
"Remote","entity boundary","get","property wrapper",
"Remote","entity boundary","get","property wrapper",
"Remote","entity boundary","get","property wrapper",
"Remote","entity boundary","get","get collaborator",
"Remote","entity boundary","get","property non-void-command collaborator",
"Remote","entity boundary","get","property non-void-command collaborator",
"Remote","entity boundary","get","predicate non-void-command collaborator",
"Remote","entity boundary","get","wrapper stateless",
"Remote","entity boundary","get","get collaborator",
"RemoteFixture","boundary degenerate","CanGetRemoteOrigin","wrapper stateless",
"RemoteFixture","boundary degenerate","GettingRemoteThatDoesntExistReturnsNull","wrapper stateless",
"RemoteFixture","boundary degenerate","CanEnumerateTheRemotes","wrapper stateless",
"RemoteFixture","boundary degenerate","CanSetTagFetchMode","wrapper stateless",
"RemoteFixture","boundary degenerate","CanSetRemoteUrl","wrapper stateless",
"RemoteFixture","boundary degenerate","CanSetRemotePushUrl","wrapper stateless",
"RemoteFixture","boundary degenerate","CreatingANewRemoteAddsADefaultRefSpec","wrapper stateless",
"RemoteFixture","boundary degenerate","CanAddANewRemoteWithAFetchRefSpec","wrapper stateless",
"RemoteFixture","boundary degenerate","AddingARemoteWithAnInvalidNameThrows","wrapper stateless",
"RemoteFixture","boundary degenerate","CanTellIfARemoteNameIsValid","wrapper stateless",
"RemoteFixture","boundary degenerate","DoesNotThrowWhenARemoteHasNoUrlSet","controller stateless",
"RemoteFixture","boundary degenerate","CreatingARemoteAddsADefaultFetchRefSpec","controller stateless",
"RemoteFixture","boundary degenerate","CanCreateARemoteWithASpecifiedFetchRefSpec","controller stateless",
"RemoteFixture","boundary degenerate","CanDeleteExistingRemote","wrapper stateless",
"RemoteFixture","boundary degenerate","CanDeleteNonExistingRemote","wrapper stateless",
"RemoteFixture","boundary degenerate","CanRenameExistingRemote","wrapper stateless",
"RemoteFixture","boundary degenerate","RenamingNonExistingRemoteThrows","wrapper stateless",
"RemoteFixture","boundary degenerate","ReportsRemotesWithNonDefaultRefSpecs","wrapper stateless",
"RemoteFixture","boundary degenerate","DoesNotReportRemotesWithAlreadyExistingRefSpec","wrapper stateless",
"RemoteFixture","boundary degenerate","CanNotRenameWhenRemoteWithSameNameExists","wrapper stateless",
"RemoteFixture","boundary degenerate","ShoudlPruneOnFetchReflectsTheConfiguredSetting","command collaborator",
"RemoteFixture","boundary degenerate","SetIfNotNull","controller stateless",
"IgnoreFixture","boundary degenerate","TemporaryRulesShouldApplyUntilCleared","wrapper stateless",
"IgnoreFixture","boundary degenerate","IsPathIgnoredShouldVerifyWhetherPathIsIgnored","wrapper stateless",
"IgnoreFixture","boundary degenerate","CallingIsPathIgnoredWithBadParamsThrows","wrapper stateless",
"IgnoreFixture","boundary degenerate","AddingATemporaryRuleWithBadParamsThrows","wrapper stateless",
"IgnoreFixture","boundary degenerate","CanCheckIfAPathIsIgnoredUsingThePreferedPlatformDirectorySeparatorChar","wrapper stateless",
"IgnoreFixture","boundary degenerate","HonorDeeplyNestedGitIgnoreFile","wrapper stateless",
"WorktreeFixture","boundary degenerate","RetrievingWorktreeForRandomNameReturnsNull","wrapper stateless",
"WorktreeFixture","boundary degenerate","RetrievingWorktreeForWorktreeNameReturnsWorktree","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanEnumerateRepositoryWorktrees","controller stateless",
"WorktreeFixture","boundary degenerate","CanViewLockStatusForWorktrees","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanUnlockWorktree","controller stateless",
"WorktreeFixture","boundary degenerate","CanLockWorktree","controller stateless",
"WorktreeFixture","boundary degenerate","CanGetRepositoryForWorktree","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanPruneUnlockedWorktree","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanPruneDeletedWorktree","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanNotPruneLockedWorktree","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanUnlockThenPruneLockedWorktree","controller stateless",
"WorktreeFixture","boundary degenerate","CanForcePruneLockedWorktree","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanAddWorktree","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanAddLockedWorktree","wrapper stateless",
"WorktreeFixture","boundary degenerate","CanAddWorktreeForCommittish","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanCreateBareRepo","wrapper stateless",
"RepositoryFixture","boundary degenerate","AccessingTheIndexInABareRepoThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanCheckIfADirectoryLeadsToAValidRepository","wrapper stateless",
"RepositoryFixture","boundary degenerate","IsValidWithNullPathThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","IsNotValidWithEmptyPath","wrapper stateless",
"RepositoryFixture","boundary degenerate","IsValidWithValidPath","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanCreateStandardRepo","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanCreateStandardRepoAndSpecifyAFolderWhichWillContainTheNewlyCreatedGitDirectory","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanCreateStandardRepoAndDirectlySpecifyAGitDirectory","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanFetchFromRemoteByName","controller stateless",
"RepositoryFixture","boundary degenerate","CanReinitARepository","wrapper stateless",
"RepositoryFixture","boundary degenerate","CreatingRepoWithBadParamsThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanOpenBareRepositoryThroughAFullPathToTheGitDir","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanOpenStandardRepositoryThroughAWorkingDirPath","wrapper stateless",
"RepositoryFixture","boundary degenerate","OpeningStandardRepositoryThroughTheGitDirGuessesTheWorkingDirPath","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanOpenRepository","wrapper stateless",
"RepositoryFixture","boundary degenerate","OpeningNonExistentRepoThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","OpeningRepositoryWithBadParamsThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanLookupACommitByTheNameOfABranch","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanLookupACommitByTheNameOfALightweightTag","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanLookupATagAnnotationByTheNameOfAnAnnotatedTag","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanLookupObjects","wrapper",
"RepositoryFixture","boundary degenerate","CanLookupSameObjectTwiceAndTheyAreEqual","controller",
"RepositoryFixture","boundary degenerate","LookupObjectByWrongShaReturnsNull","wrapper stateless",
"RepositoryFixture","boundary degenerate","LookupObjectByWrongTypeReturnsNull","wrapper",
"RepositoryFixture","boundary degenerate","LookupObjectByUnknownReferenceNameReturnsNull","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanLookupWhithShortIdentifers","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanLookupUsingRevparseSyntax","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanResolveAmbiguousRevparseSpecs","wrapper stateless",
"RepositoryFixture","boundary degenerate","LookingUpWithBadParamsThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","LookingUpWithATooShortShaThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","LookingUpByAWrongRevParseExpressionThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","LookingUpAGitLinkThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanDiscoverABareRepoGivenTheRepoPath","wrapper",
"RepositoryFixture","boundary degenerate","CanDiscoverABareRepoGivenASubDirectoryOfTheRepoPath","wrapper",
"RepositoryFixture","boundary degenerate","CanDiscoverAStandardRepoGivenTheRepoPath","wrapper",
"RepositoryFixture","boundary degenerate","CanDiscoverAStandardRepoGivenASubDirectoryOfTheRepoPath","wrapper",
"RepositoryFixture","boundary degenerate","CanDiscoverAStandardRepoGivenTheWorkingDirPath","wrapper",
"RepositoryFixture","boundary degenerate","DiscoverReturnsNullWhenNoRepoCanBeFound","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanDetectIfTheHeadIsOrphaned","wrapper stateless",
"RepositoryFixture","boundary degenerate","QueryingTheRemoteForADetachedHeadBranchReturnsNull","wrapper stateless",
"RepositoryFixture","boundary degenerate","ReadingEmptyRepositoryMessageReturnsNull","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanReadRepositoryMessage","wrapper stateless",
"RepositoryFixture","boundary degenerate","AccessingADeletedHeadThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanDetectShallowness","wrapper",
"RepositoryFixture","boundary degenerate","CanCreateInMemoryRepository","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanListRemoteReferencesWithCredentials","wrapper stateless",
"RepositoryFixture","boundary degenerate","CanListRemoteReferences","controller stateless",
"RepositoryFixture","boundary degenerate","CanListRemoteReferencesWithDetachedRemoteHead","controller stateless",
"RepositoryFixture","boundary degenerate","ReadingReferenceRepositoryThroughListRemoteReferencesThrows","wrapper stateless",
"RepositoryFixture","boundary degenerate","ReadingReferenceTargetFromListRemoteReferencesThrows","controller stateless",
"ResetHeadFixture","boundary degenerate","ResetANewlyInitializedRepositoryThrows","wrapper stateless",
"ResetHeadFixture","boundary degenerate","SoftResetToTheHeadOfARepositoryDoesNotChangeTheTargetOfTheHead","wrapper stateless",
"ResetHeadFixture","boundary degenerate","SoftResetToAParentCommitChangesTheTargetOfTheHead","controller stateless",
"ResetHeadFixture","boundary degenerate","SoftResetSetsTheHeadToTheDereferencedCommitOfAChainedTag","wrapper stateless",
"ResetHeadFixture","boundary degenerate","ResettingWithBadParamsThrows","wrapper stateless",
"ResetHeadFixture","boundary degenerate","SoftResetSetsTheHeadToTheSpecifiedCommit","command",
"ResetHeadFixture","boundary degenerate","SoftResetSetsTheDetachedHeadToTheSpecifiedCommit","command",
"ResetHeadFixture","boundary degenerate","AssertSoftReset","wrapper stateless",
"ResetHeadFixture","boundary degenerate","MixedResetRefreshesTheIndex","wrapper stateless",
"ResetHeadFixture","boundary degenerate","MixedResetInABareRepositoryThrows","wrapper stateless",
"ResetHeadFixture","boundary degenerate","HardResetInABareRepositoryThrows","wrapper stateless",
"ResetHeadFixture","boundary degenerate","HardResetUpdatesTheContentOfTheWorkingDirectory","controller stateless",
"GitBuf","boundary degenerate small-class","Dispose","wrapper stateless",
"GitObjectLazyGroup","boundary small-class","GitObjectLazyGroup","constructor",
"GitObjectLazyGroup","boundary small-class","EvaluateInternal","wrapper",
"RenameDetails","unclassified","RenameDetails","constructor",
"RenameDetails","unclassified","RenameDetails","constructor",
"RenameDetails","unclassified","Equals","predicate non-void-command collaborator",
"RenameDetails","unclassified","Equals","predicate non-void-command",
"RenameDetails","unclassified","GetHashCode","property non-void-command",
"RenameDetails","unclassified","get","get",
"RenameDetails","unclassified","get","get",
"RenameDetails","unclassified","get","get",
"RenameDetails","unclassified","get","wrapper stateless",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"LibGit2SharpException","empty","LibGit2SharpException","constructor",
"FastForwardCheckoutOptionsAdapter","entity data-provider boundary","FastForwardCheckoutOptionsAdapter","constructor",
"FastForwardCheckoutOptionsAdapter","entity data-provider boundary","GenerateCallbacks","property non-void-command collaborator",
"FastForwardCheckoutOptionsAdapter","entity data-provider boundary","get","get collaborator",
"FastForwardCheckoutOptionsAdapter","entity data-provider boundary","get","get collaborator",
"GitCheckoutOptsWrapper","commander small-class","GitCheckoutOptsWrapper","constructor",
"GitCheckoutOptsWrapper","commander small-class","Dispose","command",
"CommitAncestorFixture","boundary degenerate small-class","FindCommonAncestorForTwoCommits","wrapper stateless",
"CommitAncestorFixture","boundary degenerate small-class","FindCommonAncestorForTwoCommitsThrows","wrapper stateless",
"MergeTreeResult","empty","MergeTreeResult","constructor",
"MergeTreeResult","empty","MergeTreeResult","constructor",
"MergeTreeResult","empty","MergeTreeResult","constructor",
"Diff","entity boundary","Diff","constructor",
"Diff","entity boundary","Diff","constructor",
"Diff","entity boundary","Compare","property non-void-command collaborator",
"Diff","entity boundary","Compare","property factory wrapper",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","Compare<T>","property non-void-command collaborator",
"Diff","entity boundary","BuildDiffList","property non-void-command collaborator",
"PackBuilderHandle","boundary small-class","PackBuilderHandle","constructor",
"PackBuilderHandle","boundary small-class","PackBuilderHandle","constructor",
"PackBuilderHandle","boundary small-class","Free","wrapper",
"GitDiffOptions","commander small-class","Dispose","command",
"ConfigurationEntry<T>","data-provider boundary small-class","ConfigurationEntry","constructor",
"ConfigurationEntry<T>","data-provider boundary small-class","ConfigurationEntry","constructor",
"ConfigurationEntry<T>","data-provider boundary small-class","get","property wrapper",
"GitFetchOptionsWrapper","commander small-class","GitFetchOptionsWrapper","constructor",
"GitFetchOptionsWrapper","commander small-class","GitFetchOptionsWrapper","constructor",
"GitFetchOptionsWrapper","commander small-class","Dispose","set",
"GitFetchOptionsWrapper","commander small-class","Dispose","command",
"BranchFixture","boundary degenerate","CanCreateBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanHeadBeDetached","wrapper stateless",
"BranchFixture","boundary degenerate","CanCreateAnUnbornBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanCreateBranchUsingAbbreviatedSha","wrapper stateless",
"BranchFixture","boundary degenerate","CanCreateBranchFromImplicitHead","wrapper stateless",
"BranchFixture","boundary degenerate","CanCreateBranchFromExplicitHead","wrapper stateless",
"BranchFixture","boundary degenerate","CanCreateBranchFromCommit","wrapper stateless",
"BranchFixture","boundary degenerate","CanCreateBranchFromRevparseSpec","wrapper stateless",
"BranchFixture","boundary degenerate","CreatingABranchFromATagPeelsToTheCommit","wrapper stateless",
"BranchFixture","boundary degenerate","CreatingABranchTriggersTheCreationOfADirectReference","wrapper stateless",
"BranchFixture","boundary degenerate","CreatingABranchFromANonCommitObjectThrows","wrapper stateless",
"BranchFixture","boundary degenerate","CreatingBranchWithUnknownNamedTargetThrows","wrapper stateless",
"BranchFixture","boundary degenerate","CreatingBranchWithUnknownShaTargetThrows","wrapper stateless",
"BranchFixture","boundary degenerate","CreatingBranchWithBadParamsThrows","wrapper stateless",
"BranchFixture","boundary degenerate","CanListAllBranches","wrapper",
"BranchFixture","boundary degenerate","CanListBranchesWithRemoteAndLocalBranchWithSameShortName","wrapper stateless",
"BranchFixture","boundary degenerate","CanListAllBranchesWhenGivenWorkingDir","wrapper stateless",
"BranchFixture","boundary degenerate","CanListAllBranchesIncludingRemoteRefs","wrapper stateless",
"BranchFixture","boundary degenerate","CanResolveRemote","wrapper stateless",
"BranchFixture","boundary degenerate","RemoteAndUpstreamBranchCanonicalNameForNonTrackingBranchIsNull","wrapper stateless",
"BranchFixture","boundary degenerate","QueryRemoteForLocalTrackingBranch","wrapper stateless",
"BranchFixture","boundary degenerate","QueryUpstreamBranchCanonicalNameForLocalTrackingBranch","wrapper stateless",
"BranchFixture","boundary degenerate","QueryRemoteForRemoteBranch","wrapper stateless",
"BranchFixture","boundary degenerate","QueryUnresolvableRemoteForRemoteBranch","wrapper stateless",
"BranchFixture","boundary degenerate","QueryAmbigousRemoteForRemoteBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanLookupABranchByItsCanonicalName","wrapper stateless",
"BranchFixture","boundary degenerate","CanLookupLocalBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanLookupABranchWhichNameIsMadeOfNon7BitsAsciiCharacters","wrapper stateless",
"BranchFixture","boundary degenerate","LookingOutABranchByNameWithBadParamsThrows","wrapper stateless",
"BranchFixture","boundary degenerate","CanGetInformationFromUnbornBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanGetTrackingInformationFromBranchSharingNoHistoryWithItsTrackedBranch","wrapper stateless",
"BranchFixture","boundary degenerate","TrackingInformationIsEmptyForBranchTrackingPrunedRemoteBranch","wrapper stateless",
"BranchFixture","boundary degenerate","TrackingInformationIsEmptyForNonTrackingBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanGetTrackingInformationForTrackingBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanGetTrackingInformationForLocalTrackingBranch","wrapper stateless",
"BranchFixture","boundary degenerate","RenamingARemoteTrackingBranchThrows","wrapper stateless",
"BranchFixture","boundary degenerate","CanWalkCommitsFromAnotherBranch","controller stateless",
"BranchFixture","boundary degenerate","CanSetTrackedBranch","wrapper stateless",
"BranchFixture","boundary degenerate","SetTrackedBranchForUnreasolvableRemoteThrows","wrapper stateless",
"BranchFixture","boundary degenerate","CanSetUpstreamBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanSetLocalTrackedBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanUnsetTrackedBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanWalkCommitsFromBranch","controller stateless",
"BranchFixture","boundary degenerate","AssertRemoval","wrapper stateless",
"BranchFixture","boundary degenerate","CanRemoveAnExistingNamedBranch","command",
"BranchFixture","boundary degenerate","CanRemoveAnExistingBranch","wrapper stateless",
"BranchFixture","boundary degenerate","CanCreateBranchInDeletedNestedBranchNamespace","wrapper stateless",
"BranchFixture","boundary degenerate","CanRemoveANonExistingBranch","command",
"BranchFixture","boundary degenerate","RemovingABranchWhichIsTheCurrentHeadThrows","wrapper stateless",
"BranchFixture","boundary degenerate","RemovingABranchWithBadParamsThrows","wrapper stateless",
"BranchFixture","boundary degenerate","OnlyOneBranchIsTheHead","wrapper stateless",
"BranchFixture","boundary degenerate","TwoBranchesPointingAtTheSameCommitAreNotBothCurrent","wrapper stateless",
"BranchFixture","boundary degenerate","CanRenameABranch","wrapper stateless",
"BranchFixture","boundary degenerate","BlindlyRenamingABranchOverAnExistingOneThrows","wrapper stateless",
"BranchFixture","boundary degenerate","CanRenameABranchWhileOverwritingAnExistingOne","wrapper stateless",
"BranchFixture","boundary degenerate","DetachedHeadIsNotATrackingBranch","wrapper stateless",
"BranchFixture","boundary degenerate","TrackedBranchExistsFromDefaultConfigInEmptyClone","wrapper stateless",
"BranchFixture","boundary degenerate","RemoteBranchesDoNotTrackAnything","wrapper stateless",
"BranchFixture","boundary degenerate","CreatingABranchIncludesTheCorrectReflogEntries","wrapper stateless",
"BranchFixture","boundary degenerate","RenamingABranchIncludesTheCorrectReflogEntries","wrapper stateless",
"AfterRebaseStepInfo","empty","AfterRebaseStepInfo","constructor",
"AfterRebaseStepInfo","empty","AfterRebaseStepInfo","constructor",
"AfterRebaseStepInfo","empty","AfterRebaseStepInfo","constructor",
"SelfCleaningDirectory","empty","SelfCleaningDirectory","constructor",
"SelfCleaningDirectory","empty","SelfCleaningDirectory","constructor",
"SmartSubtransportStream","boundary","SmartSubtransportStream","constructor",
"SmartSubtransportStream","boundary","SmartSubtransportStream","constructor",
"SmartSubtransportStream","boundary","Free","set",
"SmartSubtransportStream","boundary","SetError","set collaborator",
"SmartSubtransportStream","boundary","get","get collaborator",
"SmartSubtransportStream","boundary","get","get set collaborator",
"GitSmartSubtransport","empty","GitSmartSubtransport","constructor",
"GitSmartSubtransportStream","empty","GitSmartSubtransportStream","constructor",
"CherryPickOptions","empty","CherryPickOptions","constructor",
"Tag","empty","Tag","constructor",
"Tag","empty","Tag","constructor",
"TreeDefinitionFixture","degenerate","CanBuildATreeDefinitionFromATree","wrapper stateless",
"TreeDefinitionFixture","degenerate","BuildingATreeDefinitionWithBadParamsThrows","wrapper stateless",
"TreeDefinitionFixture","degenerate","RequestingANonExistingEntryReturnsNull","wrapper stateless",
"TreeDefinitionFixture","degenerate","RequestingAnEntryWithBadParamsThrows","wrapper stateless",
"TreeDefinitionFixture","degenerate","CanRetrieveEntries","wrapper stateless",
"TreeDefinitionFixture","degenerate","CanAddAnExistingTreeEntryDefinition","controller stateless",
"TreeDefinitionFixture","degenerate","CanAddAnExistingGitLinkTreeEntryDefinition","controller stateless",
"TreeDefinitionFixture","degenerate","CanAddAndRemoveAnExistingTreeEntry","controller",
"TreeDefinitionFixture","degenerate","TreeNamesCanContainCharsForbiddenOnSomeOS","controller",
"TreeDefinitionFixture","degenerate","CanAddAnExistingGitLinkTreeEntry","controller stateless",
"TreeDefinitionFixture","degenerate","CanAddAnExistingBlob","controller stateless",
"TreeDefinitionFixture","degenerate","CanAddBlobById","controller stateless",
"TreeDefinitionFixture","degenerate","CannotAddTreeById","controller stateless",
"TreeDefinitionFixture","degenerate","CanAddAnExistingSubmodule","controller stateless",
"TreeDefinitionFixture","degenerate","CanAddAnExistingTree","controller stateless",
"TreeDefinitionFixture","degenerate","CanReplaceAnExistingTreeWithABlob","controller stateless",
"TreeDefinitionFixture","degenerate","CanReplaceAnExistingBlobWithATree","controller stateless",
"TreeDefinitionFixture","degenerate","CanReplaceAnExistingTreeWithAGitLink","controller stateless",
"TreeDefinitionFixture","degenerate","CanReplaceAnExistingGitLinkWithATree","controller stateless",
"TreeDefinitionFixture","degenerate","CanReplaceAnExistingBlobWithAGitLink","controller stateless",
"TreeDefinitionFixture","degenerate","CanReplaceAnExistingGitLinkWithABlob","controller stateless",
"TreeDefinitionFixture","degenerate","CanNotReplaceAnExistingTreeWithATreeBeingAssembled","controller stateless",
"TreeDefinitionFixture","degenerate","ModifyingTheContentOfATreeSetsItsOidToNull","controller stateless",
"TreeDefinitionFixture","degenerate","CanAddAnExistingBlobEntryWithAnExistingTree","controller stateless",
"ConflictCollection","unclassified","ConflictCollection","constructor",
"ConflictCollection","unclassified","ConflictCollection","constructor",
"ConflictCollection","unclassified","AllConflicts","property factory controller",
"ConflictCollection","unclassified","GetEnumerator","property non-void-command collaborator",
"ConflictCollection","unclassified","IEnumerable.GetEnumerator","property non-void-command collaborator",
"ConflictCollection","unclassified","get","property wrapper",
"ConflictCollection","unclassified","get","property factory wrapper",
"ConflictCollection","unclassified","get","property factory wrapper",
"GitStatusOptions","commander small-class","Dispose","command",
"GitStrArray","commander small-class","Reset","command",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","UserCancelledException","constructor",
"UserCancelledException","boundary degenerate small-class","get","collaborator incidental",
"GitStrArrayNative","small-class","ReadStrings","property non-void-command",
"GitStrArrayNative","small-class","Dispose","command",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"UnmatchedPathException","empty","UnmatchedPathException","constructor",
"CertificateSsh","data-provider boundary small-class","CertificateSsh","constructor",
"CertificateSsh","data-provider boundary small-class","CertificateSsh","constructor",
"CertificateSsh","data-provider boundary small-class","ToPointer","property wrapper",
"Libgit2Object","unclassified","Libgit2Object","constructor",
"Libgit2Object","unclassified","Libgit2Object","constructor",
"Libgit2Object","unclassified","~Libgit2Object","destructor",
"Libgit2Object","unclassified","AsIntPtr","property wrapper",
"Libgit2Object","unclassified","Dispose","command",
"Libgit2Object","unclassified","Dispose","command",
"Libgit2Object","unclassified","get","get collaborator",
"Libgit2Object","unclassified","get","predicate",
"BlameHandle","boundary small-class","BlameHandle","constructor",
"BlameHandle","boundary small-class","BlameHandle","constructor",
"BlameHandle","boundary small-class","Free","wrapper",
"CommitOptions","empty","CommitOptions","constructor",
"LogConfiguration","boundary degenerate small-class","LogConfiguration","constructor",
"LogConfiguration","boundary degenerate small-class","LogConfiguration","constructor",
"LogConfiguration","boundary degenerate small-class","GitTraceHandler","wrapper stateless",
"DiffHandle","boundary small-class","DiffHandle","constructor",
"DiffHandle","boundary small-class","DiffHandle","constructor",
"DiffHandle","boundary small-class","Free","wrapper",
"PatchHandle","boundary small-class","PatchHandle","constructor",
"PatchHandle","boundary small-class","PatchHandle","constructor",
"PatchHandle","boundary small-class","Free","wrapper",
"ConfigurationHandle","boundary small-class","ConfigurationHandle","constructor",
"ConfigurationHandle","boundary small-class","ConfigurationHandle","constructor",
"ConfigurationHandle","boundary small-class","Free","wrapper",
"IndexHandle","boundary small-class","IndexHandle","constructor",
"IndexHandle","boundary small-class","IndexHandle","constructor",
"IndexHandle","boundary small-class","Free","wrapper",
"ReflogHandle","boundary small-class","ReflogHandle","constructor",
"ReflogHandle","boundary small-class","ReflogHandle","constructor",
"ReflogHandle","boundary small-class","Free","wrapper",
"Patch","unclassified","Patch","constructor",
"Patch","unclassified","Patch","constructor",
"Patch","unclassified","AddFileChange","command collaborator",
"Patch","unclassified","PrintCallBack","property non-void-command",
"Patch","unclassified","GetEnumerator","property non-void-command collaborator",
"Patch","unclassified","IEnumerable.GetEnumerator","property non-void-command collaborator",
"Patch","unclassified","Dispose","command",
"Patch","unclassified","Dispose","empty",
"Patch","unclassified","get","collaborator incidental",
"Patch","unclassified","get","property non-void-command collaborator",
"Patch","unclassified","get","get",
"Patch","unclassified","get","get",
"Patch","unclassified","get","property non-void-command",
"Patch","unclassified","get","property wrapper",
"DescribeResultHandle","boundary small-class","DescribeResultHandle","constructor",
"DescribeResultHandle","boundary small-class","DescribeResultHandle","constructor",
"DescribeResultHandle","boundary small-class","Free","wrapper",
"SubmoduleHandle","boundary small-class","SubmoduleHandle","constructor",
"SubmoduleHandle","boundary small-class","SubmoduleHandle","constructor",
"SubmoduleHandle","boundary small-class","Free","wrapper",
"ObjectDatabaseHandle","boundary small-class","ObjectDatabaseHandle","constructor",
"ObjectDatabaseHandle","boundary small-class","ObjectDatabaseHandle","constructor",
"ObjectDatabaseHandle","boundary small-class","Free","wrapper",
"SubmoduleLazyGroup","commander boundary small-class","SubmoduleLazyGroup","constructor",
"SubmoduleLazyGroup","commander boundary small-class","EvaluateInternal","command collaborator",
"RevWalkerHandle","boundary small-class","RevWalkerHandle","constructor",
"RevWalkerHandle","boundary small-class","RevWalkerHandle","constructor",
"RevWalkerHandle","boundary small-class","Free","wrapper",
"NativeMethods","empty","NativeMethods","constructor",
"Signature","data-provider","Signature","constructor",
"Signature","data-provider","Signature","constructor",
"Signature","data-provider","Signature","constructor",
"Signature","data-provider","BuildHandle","property wrapper",
"Signature","data-provider","Equals","predicate non-void-command collaborator",
"Signature","data-provider","Equals","predicate non-void-command",
"Signature","data-provider","GetHashCode","property non-void-command",
"Signature","data-provider","ToString","wrapper stateless",
"Signature","data-provider","get","get",
"Signature","data-provider","get","get",
"Signature","data-provider","get","get collaborator",
"LaxUtf8Marshaler","boundary degenerate small-class","LaxUtf8Marshaler","constructor",
"LaxUtf8Marshaler","boundary degenerate small-class","MarshalManagedToNative","wrapper stateless",
"RebaseHandle","boundary small-class","RebaseHandle","constructor",
"RebaseHandle","boundary small-class","RebaseHandle","constructor",
"RebaseHandle","boundary small-class","Free","wrapper",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"MergeFetchHeadNotFoundException","empty","MergeFetchHeadNotFoundException","constructor",
"OdbStreamHandle","boundary small-class","OdbStreamHandle","constructor",
"OdbStreamHandle","boundary small-class","OdbStreamHandle","constructor",
"OdbStreamHandle","boundary small-class","Free","wrapper",
"RebaseOptions","data-provider boundary small-class","IConvertableToGitCheckoutOpts.GenerateCallbacks","property wrapper",
"RebaseOptions","data-provider boundary small-class","get","property wrapper",
"ObjectSafeWrapper","commander small-class","ObjectSafeWrapper","constructor",
"ObjectSafeWrapper","commander small-class","Dispose","command",
"ObjectSafeWrapper","commander small-class","Dispose","command",
"ShadowCopyFixture","pure-controller degenerate small-class","CanProbeForNativeBinariesFromAShadowCopiedAssembly","controller stateless",
