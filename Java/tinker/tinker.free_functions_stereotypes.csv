Free Function Name,Free Function Stereotype
"checkBounds","unclassified"
"magicToApi","property wrapper"
"apiToMagic","property"
"writeSignedIntegralValue","wrapper"
"writeUnsignedIntegralValue","wrapper"
"writeRightZeroExtendedValue","wrapper"
"readSignedInt","property wrapper"
"readUnsignedInt","property wrapper"
"readSignedLong","property wrapper"
"readUnsignedLong","property wrapper"
"unsignedLeb128Size","property"
"unsignedLeb128p1Size","literal wrapper"
"signedLeb128Size","property"
"readSignedLeb128","property wrapper"
"readUnsignedLeb128","property wrapper"
"readUnsignedLeb128p1","literal wrapper"
"writeUnsignedLeb128","property wrapper"
"writeUnsignedLeb128p1","literal wrapper"
"writeSignedLeb128","property wrapper"
"decode","property command"
"countBytes","property wrapper"
"encode","command"
"encode","literal wrapper"
"roundToTimesOfFour","property"
"uCompare","property"
"uCompare","property"
"uCompare","property"
"uArrCompare","property wrapper"
"uArrCompare","property wrapper"
"uArrCompare","property wrapper"
"sCompare","property"
"sCompare","property"
"sCompare","property"
"sCompare","property"
"sArrCompare","property wrapper"
"sArrCompare","property wrapper"
"sArrCompare","property wrapper"
"sArrCompare","property wrapper"
"aArrCompare","property wrapper"
"aArrCompare","property wrapper"
"readFile","literal wrapper"
"readFile","property wrapper"
"readStream","literal wrapper"
"readStream","property wrapper"
"hasArchiveSuffix","predicate wrapper"
"hash","property wrapper"
"codeUnit","property"
"codeUnit","property"
"makeByte","property"
"asUnsignedUnit","property"
"unit0","property"
"unit1","property"
"unit0","property"
"unit1","property"
"unit2","property"
"unit3","property"
"byte0","property"
"byte1","property"
"nibble0","property"
"nibble1","property"
"nibble2","property"
"nibble3","property"
"getTargetByte","literal wrapper"
"getTargetUnit","literal wrapper"
"getTarget","property"
"getLiteralByte","property wrapper"
"getLiteralUnit","property wrapper"
"getLiteralInt","property wrapper"
"getLiteralNibble","property wrapper"
"getAUnit","property wrapper"
"getBUnit","property wrapper"
"getInstructionIndexType","property"
"getInstructionFormat","property"
"extractOpcodeFromUnit","property"
"u8","property wrapper"
"u4","property wrapper"
"u3","property wrapper"
"u2","property wrapper"
"u2or4","property wrapper"
"u1","property wrapper"
"uNibble","literal wrapper"
"s8","property wrapper"
"s4","property wrapper"
"s2","property wrapper"
"s1","property wrapper"
"dump","property wrapper"
"toHexString","property wrapper"
"growSize","property"
"growSize","property"
"split","global-command"
"qsufsort","command"
"search","property command"
"matchlen","property wrapper"
"memcmp","property"
"bsdiff","wrapper"
"bsdiff","property wrapper"
"bsdiff","property wrapper"
"main","main"
"patchLessMemory","property wrapper"
"patchLessMemory","property wrapper"
"patchFast","property wrapper"
"patchFast","property wrapper"
"patchFast","property wrapper"
"patchFast","property wrapper"
"patchFast","property wrapper"
"readFromStream","predicate wrapper"
"inputStreamToByte","property wrapper"
"checkOffsetAndCount","unclassified"
"iterator","literal"
"peekInt","unclassified"
"peekLong","property"
"peekShort","property"
"pokeInt","command"
"pokeLong","command"
"pokeShort","command"
"readSingleByte","property wrapper"
"writeSingleByte","wrapper"
"readFully","literal wrapper"
"readFully","wrapper"
"readFully","property wrapper"
"readFullyNoClose","property wrapper"
"readFully","property wrapper"
"skipAll","wrapper"
"skipByReading","property wrapper"
"copy","property wrapper"
"readAsciiLine","property wrapper"
"containsNulByte","predicate"
"validateStringLength","wrapper"
"isEmpty","predicate wrapper"
"equals","predicate wrapper"
"parseEocdRecord","property wrapper"
"throwZipException","literal wrapper"
"writeLongAsUint32","wrapper"
"writeLongAsUint64","wrapper"
"writeIntAsUint16","wrapper"
"extractTinkerEntry","wrapper"
"extractLargeModifyFile","wrapper"
"validateZipEntryName","predicate wrapper"
"loadArmLibrary","wrapper"
"loadArmLibraryWithoutTinkerInstalled","wrapper"
"loadArmV7Library","wrapper"
"loadArmV7LibraryWithoutTinkerInstalled","wrapper"
"loadLibraryFromTinker","literal"
"installNavitveLibraryABI","literal"
"installNativeLibraryABIWithoutTinkerInstalled","literal"
"runResultService","literal wrapper"
"with","global-command literal wrapper"
"create","global-command"
"isTinkerInstalled","literal"
"isTinkerEnableAll","literal"
"isTinkerEnableForDex","literal"
"isTinkerEnableForNativeLib","literal"
"isTinkerEnableForResource","literal"
"getTinkerPatchDirectory","literal"
"isTinkerLoadSuccess","literal"
"getLoadDexesAndMd5","literal"
"getLoadLibraryAndMd5","literal"
"getPackageConfigs","literal"
"getCurrentVersion","literal"
"cleanPatch","literal wrapper"
"loadArmV7aLibrary","literal wrapper"
"loadArmLibrary","wrapper"
"loadLibraryFromTinker","literal"
"install","property wrapper"
"install","property wrapper"
"cleanPatch","literal wrapper"
"onReceiveUpgradePatch","literal wrapper"
"setLogIml","literal wrapper"
"setTinkerLogImp","literal wrapper"
"getImpl","literal wrapper"
"v","literal wrapper"
"e","literal wrapper"
"w","literal wrapper"
"i","literal wrapper"
"d","literal wrapper"
"printErrStackTrace","literal wrapper"
"printPendingLogs","literal wrapper"
"killTinkerPatchServiceProcess","literal wrapper"
"isTinkerPatchServiceRunning","literal"
"getTinkerPatchServiceName","literal"
"isInTinkerPatchServiceProcess","literal"
"getInstance","global-command literal"
"dummyThrowExceptionMethod","literal wrapper"
"getFilePatcher","property wrapper"
"loadArmLibrary","wrapper"
"loadArmLibraryWithoutTinkerInstalled","wrapper"
"loadArmV7Library","wrapper"
"loadArmV7LibraryWithoutTinkerInstalled","wrapper"
"loadLibraryFromTinker","predicate wrapper"
"installNavitveLibraryABI","predicate wrapper"
"installNativeLibraryABIWithoutTinkerInstalled","predicate wrapper"
"installNativeLibraryPath","wrapper"
"install","wrapper"
"install","wrapper"
"install","wrapper"
"install","wrapper"
"tryRecoverArkHotLibrary","predicate wrapper"
"extractArkHotLibrary","literal wrapper"
"patchArkHotLibraryExtract","predicate wrapper"
"extract","predicate wrapper"
"getMetaCorruptedCode","property"
"tryRecoverDexFiles","predicate command"
"waitAndCheckDexOptFile","predicate wrapper"
"patchDexExtractViaDexDiff","predicate wrapper"
"checkClassNDexFiles","literal wrapper"
"makeStoredZipEntry","property wrapper"
"mergeClassNDexFiles","literal wrapper"
"dexOptimizeDexFiles","predicate command"
"checkAllDexOptFile","predicate wrapper"
"extractDexDiffInternals","predicate wrapper"
"extractDexToJar","predicate wrapper"
"extractDexFile","predicate wrapper"
"patchDexFile","wrapper"
"tryRecoverResourceFiles","predicate command"
"patchResourceExtractViaResourceDiff","predicate wrapper"
"extractResourceDiffInternals","predicate wrapper"
"checkAndExtractResourceLargeFile","predicate wrapper"
"tryRecoverLibraryFiles","predicate command"
"patchLibraryExtractViaBsDiff","predicate wrapper"
"extractBsDiffInternals","predicate wrapper"
"runResultService","wrapper"
"runPatchService","literal wrapper"
"runPatchService","wrapper"
"setPatchProcessor","global-command wrapper"
"getPatchPathExtra","property wrapper"
"getPatchUseEmergencyMode","predicate wrapper"
"getPatchResultExtra","property wrapper"
"setTinkerNotificationId","global-command"
"isRunning","predicate wrapper"
"markRunning","literal wrapper"
"unmarkRunning","literal wrapper"
"doApplyPatch","wrapper"
"with","global-command literal wrapper"
"create","global-command"
"isTinkerInstalled","literal"
"isTinkerEnableAll","predicate wrapper"
"isTinkerEnableForDex","predicate wrapper"
"isTinkerEnableForNativeLib","predicate wrapper"
"isTinkerEnableForResource","predicate wrapper"
"getTinkerPatchDirectory","property wrapper"
"isTinkerLoadSuccess","predicate wrapper"
"getLoadDexesAndMd5","property wrapper"
"getLoadLibraryAndMd5","property wrapper"
"getPackageConfigs","property wrapper"
"getCurrentVersion","property wrapper"
"cleanPatch","wrapper"
"loadArmV7aLibrary","wrapper"
"loadArmLibrary","wrapper"
"loadLibraryFromTinker","predicate wrapper"
"install","property wrapper"
"install","property wrapper"
"install","property wrapper"
"cleanPatch","literal wrapper"
"onReceiveUpgradePatch","literal wrapper"
"setLogIml","literal wrapper"
"setTinkerLogImp","literal wrapper"
"getImpl","literal wrapper"
"v","literal wrapper"
"e","literal wrapper"
"w","literal wrapper"
"i","literal wrapper"
"d","literal wrapper"
"printErrStackTrace","literal wrapper"
"printPendingLogs","literal wrapper"
"killTinkerPatchServiceProcess","wrapper"
"isTinkerPatchServiceRunning","literal wrapper"
"getTinkerPatchServiceName","global-command literal wrapper"
"isInTinkerPatchServiceProcess","literal wrapper"
"getServiceProcessName","property wrapper"
"getInstance","global-command literal"
"readRetryProperty","literal wrapper"
"writeRetryProperty","wrapper"
"getInstance","literal"
"parseDiffPatchInfo","wrapper"
"checkDiffPatchInfo","predicate wrapper"
"parseDiffPatchInfo","wrapper"
"checkDiffPatchInfo","predicate wrapper"
"parseDexDiffPatchInfo","wrapper"
"checkDexDiffPatchInfo","predicate wrapper"
"assertInRange","unclassified"
"getFileTypeByMagic","literal wrapper"
"readUntilLimit","wrapper"
"readCString","property wrapper"
"getFileLock","literal"
"setIntentReturnCode","wrapper"
"getIntentReturnCode","literal wrapper"
"setIntentPatchCostTime","wrapper"
"getIntentPatchCostTime","property wrapper"
"getIntentPatchException","literal wrapper"
"getIntentInterpretException","literal wrapper"
"getIntentPatchDexPaths","literal wrapper"
"getIntentPatchLibsPaths","literal wrapper"
"getIntentPackageConfig","literal wrapper"
"getStringArrayListExtra","property wrapper"
"getStringExtra","property wrapper"
"getSerializableExtra","property wrapper"
"getIntExtra","property wrapper"
"getBooleanExtra","predicate wrapper"
"getLongExtra","property wrapper"
"fixIntentClassLoader","wrapper"
"getOatFileInstructionSet","literal wrapper"
"getPatchDirectory","property wrapper"
"getPatchTempDirectory","property wrapper"
"getPatchLastCrashFile","literal wrapper"
"getPatchInfoFile","literal"
"getPatchInfoLockFile","literal"
"getPatchVersionDirectory","property wrapper"
"getPatchVersionFile","property wrapper"
"checkIfMd5Valid","predicate wrapper"
"checkTinkerLastUncaughtCrash","literal wrapper"
"closeQuietly","wrapper"
"isLegalFile","predicate wrapper"
"shouldAcceptEvenIfIllegal","predicate wrapper"
"getFileOrDirectorySize","property wrapper"
"safeDeleteFile","predicate wrapper"
"deleteDir","predicate wrapper"
"deleteDir","predicate wrapper"
"verifyFileMd5","predicate wrapper"
"isRawDexFile","predicate wrapper"
"verifyDexFileMd5","literal wrapper"
"verifyDexFileMd5","predicate wrapper"
"copyFileUsingStream","wrapper"
"loadDigestes","property wrapper"
"getMD5","property wrapper"
"getMD5","literal wrapper"
"getMD5","property wrapper"
"optimizedPathFor","property wrapper"
"closeZip","wrapper"
"checkResourceArscMd5","literal wrapper"
"ensureFileDirectory","wrapper"
"readAndCheckPropertyWithLock","property wrapper"
"rewritePatchInfoFileWithLock","predicate wrapper"
"readAndCheckProperty","property wrapper"
"rewritePatchInfoFile","predicate command"
"findField","property wrapper"
"findField","property wrapper"
"findMethod","property wrapper"
"findMethod","property wrapper"
"findConstructor","property wrapper"
"expandFieldArray","literal wrapper"
"reduceFieldArray","wrapper"
"getActivityThread","property wrapper"
"getValueOfStaticIntField","property wrapper"
"parseAllResPatchInfo","command"
"checkFileInPattern","predicate wrapper"
"checkResPatchInfo","predicate wrapper"
"convertToPatternString","property wrapper"
"parseResPatchInfoFirstLine","command"
"isVmArt","literal"
"isVmJit","literal"
"isArkHotRuning","global-command literal wrapper"
"isAfterAndroidO","literal"
"getCurrentInstructionSet","global-command literal wrapper"
"isSystemOTA","predicate wrapper"
"changeTestDexToClassN","property wrapper"
"isNullOrNil","predicate wrapper"
"checkTinkerPackage","literal wrapper"
"checkSignatureAndTinkerID","property wrapper"
"checkPackageAndTinkerFlag","property wrapper"
"fastGetPatchPackageMeta","property wrapper"
"getManifestTinkerID","property global-command wrapper"
"isTinkerEnabledForDex","predicate"
"isTinkerEnabledForNativeLib","predicate"
"isTinkerEnabledForResource","predicate"
"isTinkerEnabledForArkHot","predicate"
"getTypeString","property"
"setTinkerDisableWithSharedPreferences","wrapper"
"isTinkerEnableWithSharedPreferences","predicate wrapper"
"getTinkerSwitchSPKey","literal wrapper"
"getSafeModeCount","property wrapper"
"setSafeModeCount","wrapper"
"isTinkerEnabled","predicate"
"isTinkerEnabledAll","predicate"
"isInMainProcess","predicate wrapper"
"isInPatchProcess","global-command literal wrapper"
"getCurrentOatMode","wrapper"
"killAllOtherProcess","wrapper"
"killProcessExceptMain","wrapper"
"getProcessName","global-command literal wrapper"
"getProcessNameInternal","property wrapper"
"isNewerOrEqualThanVersion","predicate"
"isVmArt","predicate wrapper"
"isVmJitInternal","literal wrapper"
"getExceptionCauseString","property wrapper"
"toVisualString","property wrapper"
"getInlineFence","literal"
"getDefaultImpl","literal"
"setTinkerLogImp","global-command wrapper"
"getImpl","literal"
"v","literal wrapper"
"d","literal wrapper"
"i","literal wrapper"
"w","literal wrapper"
"e","literal wrapper"
"printErrStackTrace","literal wrapper"
"printPendingLogs","literal wrapper"
"printLog","wrapper"
"printLog","wrapper"
"printPendingLogs","wrapper"
"dummyThrowExceptionMethod","literal wrapper"
"tryStart","literal wrapper"
"fetchMHObject","literal wrapper"
"interceptHandler","wrapper"
"inject","property wrapper"
"triggerDex2Oat","property wrapper"
"createNewClassLoader","property wrapper"
"doInject","wrapper"
"findField","property wrapper"
"installDexes","global-command wrapper"
"injectDexesInternal","literal wrapper"
"installApk","global-command wrapper"
"uninstallPatchDex","literal wrapper"
"checkDexInstall","literal wrapper"
"createSortedAdditionalPathEntries","literal wrapper"
"install","wrapper"
"install","literal wrapper"
"makePathElements","literal wrapper"
"install","literal wrapper"
"makeDexElements","literal wrapper"
"install","literal wrapper"
"makeDexElements","literal wrapper"
"install","wrapper"
"loadTinkerArkHot","predicate wrapper"
"checkComplete","predicate wrapper"
"injectDexPath","wrapper"
"loadTinkerJars","predicate wrapper"
"checkComplete","predicate wrapper"
"getInfoMd5","property"
"deleteOutOfDateOATFile","wrapper"
"isJustArtSupportDex","predicate wrapper"
"optimizeAll","literal wrapper"
"optimizeAll","literal wrapper"
"createFakeODexPathStructureOnDemand","literal wrapper"
"triggerPMDexOptOnDemand","literal wrapper"
"triggerSecondaryDexOpt","predicate wrapper"
"performDexOptSecondary","wrapper"
"performBgDexOptJob","wrapper"
"performDexOptSecondaryByTransactionCode","global-command wrapper"
"getPMSBinderProxy","global-command literal wrapper"
"executePMSShellCommand","literal wrapper"
"registerDexModule","literal wrapper"
"getSynchronizedPackageManager","property global-command wrapper"
"waitUntilFileGeneratedOrTimeout","predicate wrapper"
"interpretDex2Oat","literal wrapper"
"consumeInputStream","wrapper"
"loadTinkerResources","predicate wrapper"
"checkComplete","predicate wrapper"
"isResourceCanPatch","global-command wrapper"
"monkeyPatchExistingResources","global-command wrapper"
"installResourceInsuranceHacks","literal wrapper"
"isPatchedResModifiedAfterLastLoad","literal wrapper"
"recordCurrentPatchedResModifiedTime","global-command literal wrapper"
"clearPreloadTypedArrayIssue","literal wrapper"
"checkResUpdate","predicate wrapper"
"shouldAddSharedLibraryAssets","predicate"
"checkComplete","predicate wrapper"
"getInstance","literal"
"callOnBaseContextAttached","wrapper"
"callOnCreate","wrapper"
"callOnConfigurationChanged","wrapper"
"callOnTrimMemory","wrapper"
"callOnLowMemory","wrapper"
"callOnTerminate","wrapper"
"callGetClassLoader","property wrapper"
"callGetBaseContext","property wrapper"
"callGetAssets","property wrapper"
"callGetResources","property wrapper"
"callGetSystemService","property wrapper"
"callMZNightModeUseOf","property wrapper"
"assignStub","property wrapper"
"install","global-command literal wrapper"
"ensureComponentHotplugInstalled","literal wrapper"
"fetchMHInstance","literal wrapper"
"uninstall","global-command literal wrapper"
"init","predicate global-command wrapper"
"parseActivity","property wrapper"
"parseIntentFilter","wrapper"
"parseMetaData","command"
"skipCurrentTag","wrapper"
"ensureInitialized","literal"
"isIncrementActivity","predicate wrapper"
"queryActivityInfo","property wrapper"
"resolveIntent","property wrapper"
"fixAMSBinderCache","wrapper"
"fixPMSBinderCache","wrapper"
"createProxy","property wrapper"
"getAllInterfacesThroughDeriveChain","property wrapper"
"create","literal wrapper"
"parseDiffPatchInfo","wrapper"
"checkDiffPatchInfo","predicate wrapper"
"parseDiffPatchInfo","wrapper"
"checkDiffPatchInfo","predicate wrapper"
"parseDexDiffPatchInfo","wrapper"
"checkDexDiffPatchInfo","predicate wrapper"
"assertInRange","unclassified"
"getFileTypeByMagic","literal wrapper"
"readUntilLimit","wrapper"
"readCString","property wrapper"
"getFileLock","literal"
"setIntentReturnCode","wrapper"
"getIntentReturnCode","literal wrapper"
"setIntentPatchCostTime","wrapper"
"getIntentPatchCostTime","property wrapper"
"getIntentPatchException","literal wrapper"
"getIntentInterpretException","literal wrapper"
"getIntentPatchDexPaths","literal wrapper"
"getIntentPatchLibsPaths","literal wrapper"
"getIntentPackageConfig","literal wrapper"
"getStringArrayListExtra","property wrapper"
"getStringExtra","property wrapper"
"getSerializableExtra","property wrapper"
"getIntExtra","property wrapper"
"getBooleanExtra","predicate wrapper"
"getLongExtra","property wrapper"
"fixIntentClassLoader","wrapper"
"getOatFileInstructionSet","literal wrapper"
"getPatchDirectory","property wrapper"
"getPatchTempDirectory","property wrapper"
"getPatchLastCrashFile","literal wrapper"
"getPatchInfoFile","literal"
"getPatchInfoLockFile","literal"
"getPatchVersionDirectory","property wrapper"
"getPatchVersionFile","property wrapper"
"checkIfMd5Valid","predicate wrapper"
"checkTinkerLastUncaughtCrash","literal wrapper"
"closeQuietly","wrapper"
"isLegalFile","predicate wrapper"
"shouldAcceptEvenIfIllegal","predicate wrapper"
"getFileOrDirectorySize","property wrapper"
"safeDeleteFile","predicate wrapper"
"deleteDir","predicate wrapper"
"deleteDir","predicate wrapper"
"deleteDirAsync","literal wrapper"
"deleteDirAsync","literal wrapper"
"verifyFileMd5","predicate wrapper"
"isRawDexFile","predicate wrapper"
"verifyDexFileMd5","literal wrapper"
"verifyDexFileMd5","predicate wrapper"
"copyFileUsingStream","wrapper"
"loadDigestes","property wrapper"
"getMD5","property wrapper"
"getMD5","literal wrapper"
"getMD5","property wrapper"
"optimizedPathFor","property wrapper"
"closeZip","wrapper"
"checkResourceArscMd5","literal wrapper"
"ensureFileDirectory","wrapper"
"readAndCheckPropertyWithLock","property wrapper"
"rewritePatchInfoFileWithLock","predicate wrapper"
"readAndCheckProperty","property wrapper"
"rewritePatchInfoFile","predicate command"
"findField","property wrapper"
"findField","property wrapper"
"findMethod","property wrapper"
"findMethod","property wrapper"
"findConstructor","property wrapper"
"findConstructor","property wrapper"
"expandFieldArray","literal wrapper"
"reduceFieldArray","wrapper"
"getActivityThread","property wrapper"
"getValueOfStaticIntField","property wrapper"
"parseAllResPatchInfo","command"
"checkFileInPattern","predicate wrapper"
"checkResPatchInfo","predicate wrapper"
"convertToPatternString","property wrapper"
"parseResPatchInfoFirstLine","command"
"isVmArt","literal"
"isVmJit","literal"
"isArkHotRuning","global-command literal wrapper"
"isAfterAndroidO","literal"
"getCurrentInstructionSet","global-command literal wrapper"
"is32BitEnv","literal wrapper"
"isSystemOTA","predicate wrapper"
"changeTestDexToClassN","property wrapper"
"isNullOrNil","predicate wrapper"
"checkTinkerPackage","literal wrapper"
"checkSignatureAndTinkerID","property wrapper"
"checkPackageAndTinkerFlag","property wrapper"
"fastGetPatchPackageMeta","property wrapper"
"getManifestTinkerID","property global-command wrapper"
"isTinkerEnabledForDex","predicate"
"isTinkerEnabledForNativeLib","predicate"
"isTinkerEnabledForResource","predicate"
"isTinkerEnabledForArkHot","predicate"
"getTypeString","property"
"setTinkerDisableWithSharedPreferences","wrapper"
"isTinkerEnableWithSharedPreferences","predicate wrapper"
"getTinkerSwitchSPKey","literal wrapper"
"getSafeModeCount","literal wrapper"
"setSafeModeCount","literal wrapper"
"isTinkerEnabled","predicate"
"isTinkerEnabledAll","predicate"
"isInMainProcess","predicate wrapper"
"isInPatchProcess","global-command literal wrapper"
"getCurrentOatMode","wrapper"
"killAllOtherProcess","wrapper"
"killProcessExceptMain","wrapper"
"getProcessName","global-command literal wrapper"
"getProcessNameInternal","property wrapper"
"isVmArt","predicate wrapper"
"isVmJitInternal","literal wrapper"
"isNewerOrEqualThanVersion","predicate"
"isOlderOrEqualThanVersion","predicate"
"isVersionInRange","literal wrapper"
"getExceptionCauseString","property wrapper"
"toVisualString","property wrapper"
"cleanPatch","wrapper"
"getInlineFence","literal"
"getDefaultImpl","literal"
"setTinkerLogImp","global-command wrapper"
"getImpl","literal"
"v","literal wrapper"
"d","literal wrapper"
"i","literal wrapper"
"w","literal wrapper"
"e","literal wrapper"
"printErrStackTrace","literal wrapper"
"printPendingLogs","literal wrapper"
"printLog","wrapper"
"printLog","wrapper"
"printPendingLogs","wrapper"
"dummyThrowExceptionMethod","literal wrapper"
"main","main"
"setRunningLocation","global-command wrapper"
"printUsage","literal"
"createExpression","literal wrapper"
"getResourceTypes","literal wrapper"
"collectResource","literal wrapper"
"collectResource","property wrapper"
"processXmlFilesForIds","literal wrapper"
"collectResources","literal wrapper"
"isAValuesDirectory","predicate wrapper"
"processFileNamesInDirectory","wrapper"
"processValues","literal wrapper"
"processValuesFile","wrapper"
"processXmlFile","wrapper"
"addToResourceCollector","wrapper"
"sanitizeName","property wrapper"
"extractNameAttribute","property wrapper"
"mergePackageRTypeResourceMap","property wrapper"
"writeRJava","wrapper"
"writeRJava","wrapper"
"subNodeToString","property wrapper"
"nodeToString","property wrapper"
"isExist","literal wrapper"
"createDirectory","literal wrapper"
"createFile","literal wrapper"
"findMatchFile","literal wrapper"
"findMatchFileOrMatchFileDirectory","property wrapper"
"md5File","property wrapper"
"md5File","property wrapper"
"getDocumentBuilder","literal wrapper"
"getEmptyDocument","literal wrapper"
"parse","literal wrapper"
"parse","literal wrapper"
"saveDocument","literal wrapper"
"nullToBlank","property"
"equal","predicate wrapper"
"fieldNameToMethodName","literal wrapper"
"fieldNameToMethodName","property wrapper"
"methodNameToFieldName","literal wrapper"
"methodNameToFieldName","property wrapper"
"readRTxt","literal wrapper"
"generatePublicResourceXml","wrapper"
"parse","literal wrapper"
"from","property wrapper"
"trim","property wrapper"
"nullToBlank","property"
"nullToBlank","property"
"isBlank","predicate wrapper"
"isNotBlank","literal wrapper"
"compareString","property wrapper"
"isMatchPattern","predicate wrapper"
"isMatchRegex","predicate wrapper"
"parseRegexGroup","property wrapper"
"parseStringGroup","property wrapper"
"byteToHexString","property wrapper"
"hexStringToByte","property wrapper"
"fillZero","property wrapper"
"stringMod","property wrapper"
"resourceTableLogicalChange","literal wrapper"
"editResourceTableString","wrapper"
"getAndroidManifest","literal wrapper"
"getZipEntryData","property wrapper"
"getAttribute","property wrapper"
"nullSafeEquals","predicate wrapper"
"nullSafeEqualsIgnoreOrder","predicate wrapper"
"describeChanges","literal wrapper"
"describeChanges","property wrapper"
"dotClassNamePatternToDescriptorRegEx","property wrapper"
"gradleRun","global-command literal wrapper"
"checkHasCustomDiff","predicate wrapper"
"diffFile","wrapper"
"wrap","literal"
"wrap","literal"
"wrap","literal"
"diffFile","global-command wrapper"
"makeSurePermission","wrapper"
"deleteFile","predicate wrapper"
"deleteFile","predicate wrapper"
"isLegalFile","predicate wrapper"
"isLegalFileOrDirectory","predicate wrapper"
"getFileSizes","property wrapper"
"deleteDir","predicate wrapper"
"cleanDir","wrapper"
"copyResourceUsingStream","wrapper"
"copyFileUsingStream","wrapper"
"checkDirectory","literal wrapper"
"unZipAPk","literal wrapper"
"zipFiles","wrapper"
"zipFile","wrapper"
"readContents","literal wrapper"
"getFileCrc32","literal wrapper"
"getZipEntryCrc","literal wrapper"
"getZipEntryMd5","literal wrapper"
"zipInputDir","wrapper"
"sevenZipInputDir","predicate wrapper"
"validateZipEntryName","predicate wrapper"
"initLogger","global-command"
"closeLogger","literal wrapper"
"d","literal wrapper"
"d","wrapper"
"e","literal wrapper"
"e","wrapper"
"getMessageDigest","literal wrapper"
"getRawDigest","literal wrapper"
"getMD5","literal wrapper"
"getMD5ExtendBytes","property wrapper"
"getMD5","property wrapper"
"getMD5","property wrapper"
"getMD5","literal wrapper"
"getMD5","property wrapper"
"getMD5","property wrapper"
"getMD5","property wrapper"
"getMD5ExtendBytes","property wrapper"
"isPresent","predicate wrapper"
"isBlank","literal wrapper"
"isPresent","predicate wrapper"
"isBlank","literal wrapper"
"convertToPatternString","wrapper"
"isNullOrNil","predicate wrapper"
"isNullOrNil","predicate wrapper"
"isStringMatchesPatterns","predicate wrapper"
"collectionToString","property wrapper"
"checkFileInPattern","predicate wrapper"
"genResOutputFile","property wrapper"
"getResourceMeta","property"
"checkBsDiffFileSize","predicate wrapper"
"closeQuietly","wrapper"
"translateOpToString","property"
"getCRC32","literal wrapper"
"getCRC32","literal wrapper"
"getCRC32","property wrapper"
"copyStream","wrapper"
"closeQuietly","wrapper"
"getLogLevel","literal"
"setLevel","command"
"onTryApply","wrapper"
"onTryApplyFail","wrapper"
"onLoadPackageCheckFail","wrapper"
"onLoaded","wrapper"
"onLoadInfoCorrupted","literal wrapper"
"onLoadFileNotFound","wrapper"
"onLoadInterpretReport","wrapper"
"onLoadFileMisMatch","wrapper"
"onLoadException","wrapper"
"onApplyPatchServiceStart","literal wrapper"
"onApplyDexOptFail","wrapper"
"onApplyInfoCorrupted","literal wrapper"
"onApplyVersionCheckFail","literal wrapper"
"onApplyExtractFail","wrapper"
"onApplied","wrapper"
"onApplyPackageCheckFail","wrapper"
"onApplyCrash","literal wrapper"
"onFastCrashProtect","literal wrapper"
"onXposedCrash","literal wrapper"
"onReportRetryPatch","literal wrapper"
"setTinkerApplicationLike","global-command"
"getTinkerApplicationLike","literal"
"initFastCrashProtect","global-command literal wrapper"
"setUpgradeRetryEnable","literal wrapper"
"sampleInstallTinker","global-command literal wrapper"
"installTinker","global-command wrapper"
"isGooglePlay","literal"
"isBackground","literal"
"setBackground","global-command"
"checkForPatchRecover","property wrapper"
"isXposedExists","predicate wrapper"
"checkRomSpaceEnough","predicate wrapper"
"getExceptionCauseString","property wrapper"
"toVisualString","property wrapper"
