Free Function Name,Free Function Stereotype
"props","literal wrapper"
"props","literal wrapper"
"props","literal wrapper"
"setup","global-command literal wrapper"
"teardown","global-command literal wrapper"
"props","literal wrapper"
"main","main"
"main","main"
"simulateAnnealing","property wrapper"
"getFitness","property wrapper"
"main","main"
"random","literal wrapper"
"toSum","global-command literal wrapper"
"eval","property wrapper"
"main","main"
"main","main"
"of","property wrapper"
"main","main"
"matrix","property wrapper"
"chord","property wrapper"
"dist","literal wrapper"
"main","main"
"main","main"
"printEachStep","wrapper"
"getPossibleStates","literal wrapper"
"main","main"
"costOfSubstitution","property"
"min","literal wrapper"
"calculate","property wrapper"
"calculate","property wrapper"
"calculateShortestPathFromSource","wrapper"
"CalculateMinimumDistance","wrapper"
"getLowestDistanceNode","property wrapper"
"detectCycle","property"
"detectCycle","property"
"detectCycle","property wrapper"
"detectAndRemoveCycle","literal wrapper"
"removeCycle","wrapper"
"isNodeReachableFromLoopNode","predicate"
"findEndNodeAndBreakCycle","unclassified"
"detectAndRemoveCycle","literal wrapper"
"removeCycle","wrapper"
"calculateCycleLength","property"
"detectAndRemoveCycle","literal wrapper"
"removeCycle","unclassified"
"createNewNode","property"
"traverseList","unclassified"
"getTail","property"
"main","main"
"execute","literal wrapper"
"bfs","wrapper"
"dfs","wrapper"
"getMoneyIntoWords","literal wrapper"
"getMoneyIntoWords","property wrapper"
"convert","property wrapper"
"initializeData","property wrapper"
"slopeOne","global-command literal wrapper"
"buildDifferencesMatrix","wrapper"
"predict","wrapper"
"printData","wrapper"
"print","wrapper"
"main","main"
"printSolution","wrapper"
"main","main"
"provideArguments","literal wrapper"
"getLists","literal wrapper"
"createList","literal wrapper"
"createListWithLoop","literal wrapper"
"createListWithFullCycle","literal wrapper"
"createListWithSingleNodeInCycle","literal wrapper"
"createLoop","wrapper"
"checkIfSortedUsingIterativeApproach","predicate wrapper"
"checkIfSortedUsingIterativeApproach","predicate wrapper"
"checkIfSortedUsingRecursion","predicate wrapper"
"isSortedRecursive","predicate wrapper"
"checkIfSortedUsingOrderingClass","literal wrapper"
"checkIfSortedUsingOrderingClass","literal wrapper"
"checkIfSortedUsingOrderingClassHandlingNull","literal wrapper"
"checkIfSortedUsingComparators","literal wrapper"
"sse","property wrapper"
"fit","property wrapper"
"relocateCentroids","property wrapper"
"average","property wrapper"
"assignToCluster","global-command wrapper"
"nearestCentroid","property wrapper"
"randomCentroids","property wrapper"
"applyPreconditions","wrapper"
"main","main"
"convertToD3CompatibleMap","property wrapper"
"dominantGenre","property wrapper"
"sortedCentroid","property wrapper"
"datasetWithTaggedArtists","property wrapper"
"getTop100Tags","literal wrapper"
"getTop100Artists","literal wrapper"
"printARightTriangle","property wrapper"
"printAnIsoscelesTriangle","property wrapper"
"printAnIsoscelesTriangleUsingStringUtils","property wrapper"
"printAnIsoscelesTriangleUsingSubstring","property wrapper"
"main","main"
"romanToArabic","property wrapper"
"arabicToRoman","property wrapper"
"getReverseSortedValues","literal wrapper"
"main","main"
"factorial","property wrapper"
"rightTriangles","literal wrapper"
"isoscelesTriangles","literal wrapper"
"createNodesList","property wrapper"
"main","main"
"counterWithWrapperObject","wrapper"
"counterWithLambdaAndWrapper","literal wrapper"
"counterWithParallelStreamAndWrapper","literal wrapper"
"counterWithMutableInteger","wrapper"
"counterWithPrimitiveArray","wrapper"
"findMiddleElementLinkedList","property wrapper"
"findMiddleElementFromHead","property wrapper"
"findMiddleElementFromHead1PassRecursively","property wrapper"
"findMiddleRecursively","command"
"findMiddleElementFromHead1PassIteratively","property wrapper"
"printAllRecursive","literal wrapper"
"printAllRecursive","wrapper"
"printAllIterative","wrapper"
"printAllOrdered","wrapper"
"printRandom","literal wrapper"
"swap","command"
"printArray","unclassified"
"main","main"
"searchInSortedArray","property"
"searchInUnsortedArraySortingFirst","literal wrapper"
"searchInUnsortedArrayBooleanArray","property"
"checkStringForAllTheLetters","predicate wrapper"
"checkStringForAllLetterUsingStream","predicate wrapper"
"main","main"
"getUniqueCharacterSubstringBruteForce","property wrapper"
"getUniqueCharacterSubstring","property wrapper"
"main","main"
"toCharacterList","property wrapper"
"toString","property wrapper"
"createLinkedList","property wrapper"
"createNodesList","property wrapper"
"stringProvider","literal wrapper"
"isBalanced","literal wrapper"
"isBalancedRecursive","property wrapper"
"calculateBinaryGap","literal wrapper"
"calculateBinaryGap","property wrapper"
"permutations","literal wrapper"
"permutationsInternal","wrapper"
"combinations","literal wrapper"
"combinationsInternal","wrapper"
"powerSet","literal wrapper"
"powerSetInternal","wrapper"
"merge","property"
"iterativeRelativelyPrime","literal wrapper"
"recursiveRelativelyPrime","literal wrapper"
"bigIntegerRelativelyPrime","literal wrapper"
"iterativeGCD","unclassified"
"recursiveGCD","property wrapper"
"balancedTrees","literal wrapper"
"unbalancedTrees","literal wrapper"
"leaf","literal"
"tree","literal"
"createGraph","literal wrapper"
"merge","property wrapper"
"transpose","property"
"reverse","property"
"main","main"
"printBoard","wrapper"
"findByHashMapAndPriorityQueue","property wrapper"
"findByStream","literal wrapper"
"findByTreeMap","property wrapper"
"findByBucketSort","property wrapper"
"calculateDistance","literal wrapper"
"calculateDistance","property wrapper"
"haversine","literal wrapper"
"calculateDistance","literal wrapper"
"checkLuhn","predicate wrapper"
"doubleAndSumDigits","property"
"isPerfectBruteForce","predicate"
"isPerfectStream","predicate wrapper"
"isPerfectEuclidEuler","predicate wrapper"
"isPerfectEuclidEulerUsingShift","predicate"
"main","main"
"get2DPixelArraySlow","property wrapper"
"get2DPixelArrayFast","property wrapper"
"findByBruteForce","property wrapper"
"isPrime","predicate wrapper"
"findBySieveOfEratosthenes","property wrapper"
"bruteForce","command"
"withExtraArray","wrapper"
"cyclicReplacement","command"
"reverse","wrapper"
"reverse","command"
"checkInvalidInput","unclassified"
"doubledOriginContainsRotation","predicate wrapper"
"isRotationUsingCommonStartWithOrigin","predicate wrapper"
"isRotation","predicate wrapper"
"isRotationUsingQueue","predicate wrapper"
"checkWithQueue","predicate wrapper"
"getCharactersQueue","property wrapper"
"isRotationUsingSuffixAndPrefix","predicate wrapper"
"checkPrefixAndSuffix","predicate wrapper"
"checkRotationPrefixWithOriginSuffix","predicate wrapper"
"checkOriginPrefixWithRotationSuffix","predicate wrapper"
"countWithSet","property wrapper"
"countWithBitManipulation","property wrapper"
"countWithStreamApi","literal wrapper"
"findLargestNumberUsingArithmetic","wrapper"
"findLargestNumberUsingStack","property wrapper"
"isHappyNumber","predicate wrapper"
"isHappyNumberFloyd","predicate wrapper"
"sumDigitsSquare","property"
"byLoop","property wrapper"
"byRecursion","property wrapper"
"fillSeqRecursively","wrapper"
"isPermutationWithSorting","predicate wrapper"
"isPermutationWithOneCounter","predicate wrapper"
"isPermutationWithTwoCounters","predicate wrapper"
"isPermutationWithMap","predicate wrapper"
"isPermutationInclusion","predicate wrapper"
"search","literal wrapper"
"search","literal wrapper"
"of","literal"
"findFirstNonRepeatingUsingForLoop","property wrapper"
"findFirstNonRepeatedElementUsingIndex","property wrapper"
"findFirstNonRepeatingUsingHashMap","property wrapper"
"findFirstNonRepeatingUsingArray","property wrapper"
"interpolationSearch","property"
"findKthSmallestElement","property command"
"kthSmallesElementFound","predicate"
"checkInput","unclassified"
"getKthElementSorted","property wrapper"
"getKthElementMerge","property wrapper"
"uctValue","property wrapper"
"findBestNodeWithUCT","property wrapper"
"getBiggerPrime","literal wrapper"
"getLowerPrime","literal wrapper"
"getNumberOfBits","literal wrapper"
"getNumberOfBits","literal wrapper"
"simpleTextSearch","property"
"RabinKarpMethod","property wrapper"
"KnuthMorrisPrattSearch","property wrapper"
"KnuthMorrisPrattShift","property wrapper"
"BoyerMooreHorspoolSimpleSearch","property"
"BoyerMooreHorspoolSearch","property global-command"
"setUp","global-command literal wrapper"
"setUp","global-command literal wrapper"
"printTree","literal wrapper"
"createNaturalOrderRegexComparator","literal wrapper"
"parseStringToNumber","property wrapper"
"findMax","property"
"setupAbacus","predicate"
"dropBeads","command"
"transformToList","command"
"sort","literal wrapper"
"reverseInPlace","global-command literal"
"reverseOutOfPlace","literal"
"partition","property wrapper"
"quicksort","wrapper"
"partition","property wrapper"
"quicksort","wrapper"
"swap","command"
"compare","property"
"printArray","unclassified"
"isValid","predicate wrapper"
"sort","literal wrapper"
"prepare","property wrapper"
"hash","property"
"sort","property wrapper"
"countElements","property wrapper"
"verifyPreconditions","wrapper"
"sort","literal wrapper"
"of","literal wrapper"
"of","property wrapper"
"insertionSortImperative","command"
"insertionSortRecursive","literal wrapper"
"insertionSortRecursive","command"
"main","main"
"mergeSort","wrapper"
"merge","command"
"quickSort","wrapper"
"partition","property global-command"
"threeWayQuickSort","command"
"sort","literal wrapper"
"applyCountingSortOn","wrapper"
"calculateNumberOfDigitsIn","literal wrapper"
"findMaximumNumberIn","literal wrapper"
"sortAscending","command"
"sortDescending","command"
"sort","global-command literal"
"main","main"
"main","main"
"createClient","global-command literal wrapper"
"closeClient","literal wrapper"
"main","main"
"main","main"
"setViaSocketFactory","literal wrapper"
"setTlsVersionPerConnection","literal wrapper"
"setViaSystemProperties","literal wrapper"
"main","main"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"closeClient","wrapper"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"mockGetRequest","literal wrapper"
"getFreePort","literal wrapper"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"mockGetRequest","literal wrapper"
"getFreePort","literal wrapper"
"closeResponse","wrapper"
"setViaSocketFactory","literal wrapper"
"setTlsVersionPerConnection","literal wrapper"
"setViaSystemProperties","literal wrapper"
"main","main"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"mockGetRequest","literal wrapper"
"getFreePort","literal wrapper"
"closeClient","wrapper"
"closeResponse","wrapper"
"main","main"
"main","main"
"consumeFromBeginning","literal wrapper"
"publishMessages","literal wrapper"
"setup","global-command literal wrapper"
"defaultKafkaConsumer","literal wrapper"
"main","main"
"createConsumer","literal wrapper"
"main","main"
"consumeMessageWithCustomHeaders","literal wrapper"
"publishMessageWithCustomHeaders","literal wrapper"
"setup","global-command literal wrapper"
"main","main"
"consumeMessages","literal wrapper"
"publishMessagesWithKey","literal wrapper"
"publishMessagesWithoutKey","literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"publishMessages","literal wrapper"
"destroy","literal wrapper"
"testKafkaProducer","literal wrapper"
"commonConsumerProperties","literal wrapper"
"testKafkaProducer","literal wrapper"
"sleep","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"processBuffer","wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"getProducerProperties","literal wrapper"
"getConsumerProperties","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"getProperties","literal wrapper"
"getTopic","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"capitalize","literal wrapper"
"createBackup","literal wrapper"
"main","main"
"createStringConsumerForTopic","literal wrapper"
"createInputMessageConsumer","literal wrapper"
"createStringProducer","literal"
"createBackupProducer","literal"
"main","main"
"createKafkaProducer","literal wrapper"
"main","main"
"createKafkaConsumer","literal wrapper"
"createKafkaProducer","literal wrapper"
"of","literal"
"createKafkaConsumer","literal wrapper"
"createKafkaProducer","literal wrapper"
"createKafkaProducer","literal wrapper"
"main","main"
"transformXMLUsingXSLT","literal wrapper"
"transformXMLWithParametersAndOption","wrapper"
"transformXMLUsingTemplate","literal wrapper"
"wordCount","literal wrapper"
"isStopWord","literal wrapper"
"trim","property wrapper"
"getClassSchema","literal"
"getClassSchema","literal"
"getDecoder","literal"
"createDecoder","literal"
"fromByteBuffer","literal wrapper"
"newBuilder","literal"
"newBuilder","literal"
"newBuilder","literal"
"getClassSchema","literal"
"getDecoder","literal"
"createDecoder","literal"
"fromByteBuffer","literal wrapper"
"newBuilder","literal"
"newBuilder","literal"
"newBuilder","literal"
"getClassSchema","literal"
"getClassSchema","literal"
"getDecoder","literal"
"createDecoder","literal"
"fromByteBuffer","literal wrapper"
"newBuilder","literal"
"newBuilder","literal"
"newBuilder","literal"
"getClassSchema","literal"
"getDecoder","literal"
"createDecoder","literal"
"fromByteBuffer","literal wrapper"
"newBuilder","literal"
"newBuilder","literal"
"newBuilder","literal"
"getSerialVersionUID","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"close","literal wrapper"
"setup","global-command literal"
"main","main"
"applyNumericFormat","wrapper"
"main","main"
"updateCellWithImage","wrapper"
"getLastRowFromSheet","property wrapper"
"generateMSWordFile","global-command literal wrapper"
"excelDataToListOfObjets_withFastExcel","literal wrapper"
"excelDataToListOfObjets_withJxl","literal wrapper"
"excelDataToListOfObjets_withApachePOI","literal wrapper"
"excelDataToListOfObjets_withPOIJI","literal wrapper"
"newCell","wrapper"
"newRow","property wrapper"
"boldFontStyle","property wrapper"
"write","wrapper"
"readExcel","literal wrapper"
"printCellValue","wrapper"
"setup","global-command literal wrapper"
"createRowsAndCells","wrapper"
"close","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"ingestCustomerDataFromAmazon","literal wrapper"
"ingestCustomerDataFromEbay","literal wrapper"
"combineDataframes","property wrapper"
"normalizeCustomerDataFromEbay","property wrapper"
"normalizeCustomerDataFromAmazon","property wrapper"
"aggregateYearlySalesByGender","property wrapper"
"print","wrapper"
"main","main"
"convertToDataFrameWithNoChange","literal wrapper"
"convertAfterMappingRows","property wrapper"
"aCustomerWith","literal"
"print","wrapper"
"main","main"
"main","main"
"convertToDataSetFromStrings","literal wrapper"
"convertToDataSetFromPOJO","literal wrapper"
"getNames","literal wrapper"
"print","wrapper"
"aCustomerWith","literal"
"customerSchema","literal wrapper"
"minimumCustomerDataSchema","literal wrapper"
"getSparkSession","literal wrapper"
"main","main"
"main","main"
"beforeAll","global-command literal wrapper"
"init","global-command literal wrapper"
"cleanup","literal wrapper"
"init","global-command literal wrapper"
"cleanup","literal wrapper"
"init","global-command literal wrapper"
"cleanup","literal wrapper"
"init","global-command literal wrapper"
"cleanup","literal wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"getProcessMap","wrapper"
"getProcessMap","wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"findByThriftId","property"
"findByThriftIdOrThrow","literal wrapper"
"findByName","literal wrapper"
"scheme","property wrapper"
"main","main"
"main","main"
"main","main"
"getResponseBodySpec","literal wrapper"
"main","main"
"setupClass","global-command literal wrapper"
"isEmpty","predicate wrapper"
"loadFromFileInClasspath","literal wrapper"
"main","main"
"toJson","literal wrapper"
"fromJson","literal wrapper"
"createSessionFactory","literal wrapper"
"main","main"
"main","main"
"main","main"
"checkResult","wrapper"
"main","main"
"concatBuffers","property wrapper"
"checkResult","wrapper"
"generateFiles","property wrapper"
"generateRandomBytes","property wrapper"
"main","main"
"main","main"
"connectS3","global-command literal"
"main","main"
"userNamed","literal wrapper"
"main","main"
"main","main"
"main","main"
"countArgs","property"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"copyBySetCopyOf","literal wrapper"
"suite","literal"
"mainPrivateMethod","literal"
"main","main"
"useClientWithAuthenticator","literal wrapper"
"useClientWithHeaders","literal wrapper"
"getBasicAuthenticationHeader","property wrapper"
"startClient","literal wrapper"
"main","main"
"startServer","literal wrapper"
"main","main"
"search","property wrapper"
"search","property wrapper"
"search","literal wrapper"
"search","literal wrapper"
"doSearch","property wrapper"
"main","main"
"alterAnnotationValueJDK8","literal wrapper"
"alterAnnotationValueJDK7","literal wrapper"
"publicStaticMultiply","property"
"__getWsdlLocation","literal"
"fromValue","literal wrapper"
"initData","literal wrapper"
"main","main"
"fromValue","literal wrapper"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"getFieldNames","property wrapper"
"getMethodNames","property wrapper"
"generateFileFromStringList","property wrapper"
"generateFileFromStringList","property wrapper"
"generateFileFromStringList","property wrapper"
"setUp","global-command literal wrapper"
"main","main"
"main","main"
"main","main"
"httpGetRequest","literal wrapper"
"httpPostRequest","literal wrapper"
"asynchronousGetRequest","literal wrapper"
"asynchronousMultipleRequests","literal wrapper"
"pushRequest","literal wrapper"
"pushPromiseHandler","literal wrapper"
"main","main"
"suite","literal"
"filesCompareByByte","property wrapper"
"filesCompareByLine","property wrapper"
"compareByMemoryMappedFiles","predicate wrapper"
"setup","global-command literal wrapper"
"shutDown","literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"shutDown","literal wrapper"
"setup","global-command literal wrapper"
"shutDown","literal wrapper"
"main","main"
"calculateGrade","property"
"getCountryCode","literal"
"main","main"
"valueOfPoint","literal wrapper"
"isOrigin","predicate"
"moveDinosaurUsingEnum","property wrapper"
"moveDinosaurUsingInstanceof","property wrapper"
"moveDinosaurUsingGetClass","property wrapper"
"moveDinosaurUsingPolymorphism","property wrapper"
"moveDinosaurUsingVisitorPattern","property wrapper"
"findInStack","property wrapper"
"maliciousCode","literal"
"deserialize","literal wrapper"
"deserialize","property wrapper"
"deserializeIntoSet","literal wrapper"
"deserializeIntoSet","property wrapper"
"baseFilter","literal wrapper"
"fallbackFilter","literal wrapper"
"safeSizeFilter","literal wrapper"
"safeArrayFilter","literal wrapper"
"safeDepthFilter","literal wrapper"
"serialize","literal wrapper"
"Human","empty"
"of","literal"
"of","literal"
"of","literal"
"main","main"
"testL128X1024MixRandom","literal wrapper"
"testL128X128MixRandom","literal wrapper"
"testL128X256MixRandom","literal wrapper"
"testL32X64MixRandom","literal wrapper"
"testL64X1024MixRandom","literal wrapper"
"testL64X128MixRandom","literal wrapper"
"testL64X128StarStarRandom","literal wrapper"
"testL64X256MixRandom","literal wrapper"
"testRandom","literal wrapper"
"testSecureRandom","literal wrapper"
"testSplittableRandom","literal wrapper"
"testXoroshiro128PlusPlus","literal wrapper"
"testXoshiro256PlusPlus","literal wrapper"
"generateRandomNumbers","wrapper"
"main","main"
"getRandomInt","property wrapper"
"getDefaultGenerator","literal wrapper"
"getJumpableGenerator","literal wrapper"
"getRandomInt","literal wrapper"
"generateNumbersInMultipleThreads","literal wrapper"
"getDoubleValueUsingIf","wrapper"
"getDoubleValueUsingGuardedPatterns","wrapper"
"getDoubleUsingSwitchNullCase","wrapper"
"getDoubleUsingSwitchTotalType","wrapper"
"getDoubleValueUsingIf","wrapper"
"getDoubleValueUsingParenthesizedPatterns","wrapper"
"main","main"
"main","main"
"getDoubleUsingIf","property wrapper"
"getDoubleUsingSwitch","wrapper"
"bytes","property wrapper"
"setup","literal wrapper"
"createInstances","global-command literal"
"createInstances","global-command literal"
"constructInetAddress","literal wrapper"
"main","main"
"generateList","literal wrapper"
"main","main"
"readZipEntries","literal wrapper"
"processInputOld","property wrapper"
"processInputNew","property wrapper"
"beforeRecordPattern","property wrapper"
"afterRecordPattern","property wrapper"
"getRamdomPointColor","property wrapper"
"getBalanceWithOutSwitchPattern","property wrapper"
"getBalanceWithSwitchPattern","property wrapper"
"main","main"
"getObjectsColorWithNamedPattern","property wrapper"
"getObjectsColorWithUnnamedPattern","property wrapper"
"getObjectsColorWithSwitchAndNamedPattern","wrapper"
"getObjectsColorWithSwitchAndUnnamedPattern","wrapper"
"getEngineTypeWithNamedPattern","wrapper"
"getEngineTypeWithUnnamedPattern","wrapper"
"countCarsOverLimitWithNamedVariable","property"
"countCarsOverLimitWithUnnamedVariable","property"
"sendNotificationToCarsWithNamedVariable","wrapper"
"sendNotificationToCarsWithUnnamedVariable","wrapper"
"sendOneTimeNotification","literal"
"removeThreeCarsAndReturnFirstRemovedWithNamedVariables","property wrapper"
"removeThreeCarsAndReturnFirstRemovedWithUnnamedVariables","property wrapper"
"handleCarExceptionWithNamedVariables","wrapper"
"handleCarExceptionWithUnnamedVariables","wrapper"
"obtainTransactionAndUpdateCarWithNamedVariables","literal wrapper"
"obtainTransactionAndUpdateCarWithUnnamedVariables","literal wrapper"
"updateCar","literal"
"getCarsByFirstLetterWithNamedVariables","property wrapper"
"getCarsByFirstLetterWithUnnamedVariables","property wrapper"
"someOperationThatFails","wrapper"
"main","main"
"main","main"
"main","main"
"capitalizeNames","command"
"firstLetterOfWords","property wrapper"
"main","main"
"isPlayerWin","predicate wrapper"
"getComputerMove","literal wrapper"
"getMaxNumber","property"
"getMinNumber","property"
"returnUpperCase","property wrapper"
"returnLowerCase","property wrapper"
"splitStringInput","property wrapper"
"main","main"
"main","main"
"main","main"
"getLabel","literal wrapper"
"run","wrapper"
"getLabel","literal wrapper"
"run","wrapper"
"getLabel","literal wrapper"
"run","wrapper"
"main","main"
"skipExample","literal wrapper"
"limitExample","literal wrapper"
"limitInfiniteStreamExample","literal wrapper"
"getEvenNumbers","literal wrapper"
"convertUUIDToBytes","property wrapper"
"convertBytesToUUID","literal wrapper"
"main","main"
"listCombiner","property wrapper"
"asBiFunction","unclassified"
"main","main"
"main","main"
"parseDate","literal wrapper"
"parseDate","literal wrapper"
"parseDate","literal wrapper"
"parseDate","property wrapper"
"between","property wrapper"
"timestamp","literal wrapper"
"timestamp","literal wrapper"
"between","property wrapper"
"after","literal wrapper"
"before","literal wrapper"
"between","property wrapper"
"date","literal wrapper"
"between","property wrapper"
"time","literal wrapper"
"getDate","literal wrapper"
"roundToDay","literal wrapper"
"roundToNearestUnit","property wrapper"
"roundToStartOfMonthUsingLocalDateTime","property wrapper"
"roundToEndOfWeekUsingLocalDateTime","property wrapper"
"roundToStartOfMonthUsingZonedDateTime","property wrapper"
"roundToEndOfWeekUsingZonedDateTime","property wrapper"
"isOverlapUsingCalendarAndDuration","predicate wrapper"
"isOverlapUsingLocalDateAndDuration","predicate wrapper"
"isOverlapUsingJodaTime","literal wrapper"
"isOverlapUsingCalendarAndCondition","predicate wrapper"
"isOverlapUsingLocalDateAndCondition","predicate wrapper"
"isOverlapUsingCalendarAndFindMin","predicate wrapper"
"isOverlapUsingLocalDateAndFindMin","predicate wrapper"
"isSameDay","predicate wrapper"
"isSameDay","predicate wrapper"
"isSameHour","predicate wrapper"
"isSameMinute","predicate wrapper"
"isSameHour","predicate wrapper"
"isSameHour","predicate wrapper"
"isSameDay","literal wrapper"
"isSameHour","literal wrapper"
"main","main"
"isRealUser","literal"
"producer","literal"
"christmas","literal wrapper"
"newYear","literal wrapper"
"easter","literal wrapper"
"assertStreamEquals","wrapper"
"assertStreamEquals","wrapper"
"assertStreamEquals","wrapper"
"add","wrapper"
"main","main"
"premain","wrapper"
"addExportsAndOpensByClassName","wrapper"
"addExportsAndOpensToUnnamedModule","literal wrapper"
"redefineModule","wrapper"
"addOpens","wrapper"
"testPublicStaticMethod","literal"
"testPrivateStaticMethod","literal"
"testPublicStaticMethod","literal"
"testPrivateStaticMethod","literal"
"testPublicStaticMethod","literal"
"testPrivateStaticMethod","literal"
"testPublicStaticMethod","literal"
"testPrivateStaticMethod","literal"
"testPublicStaticMethod","literal"
"testPrivateStaticMethod","literal"
"testPublicStaticMethod","literal"
"testPrivateStaticMethod","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"doSomething","literal"
"main","main"
"main","main"
"message","literal"
"staticPrivate","literal"
"main","main"
"checkIfLeapYear","literal wrapper"
"main","main"
"checkIfLeapYear","literal wrapper"
"main","main"
"getSize","property"
"createImage","literal wrapper"
"streamLiveVideo","literal wrapper"
"streamLiveVideo","property wrapper"
"sleep","literal wrapper"
"forEach","wrapper"
"takeWhile","property wrapper"
"takeWhileJava9","literal wrapper"
"plainForLoopWithBreak","literal wrapper"
"getStream","literal wrapper"
"scannerWithDelimiter","literal wrapper"
"scannerWithDelimiterUsingPattern","literal wrapper"
"baseScanner","literal wrapper"
"main","main"
"main","main"
"buzz","literal wrapper"
"staticBaz","literal"
"findEvenNumbersAfterGroupingByQuantityOfDigits","property wrapper"
"findEvenNumbersBeforeGroupingByQuantityOfDigits","property wrapper"
"main","main"
"getCrytpographyProviderName","literal wrapper"
"getCallStackClassNames","literal wrapper"
"getXmlFromObject","literal wrapper"
"getBase64EncodedString","wrapper"
"createExpectedFilterAfterGroupingMap","literal wrapper"
"createExpectedFilterBeforeGroupingMap","literal wrapper"
"deprecatedMethod","empty"
"suppressBoxingWarning","literal wrapper"
"toEnum","literal wrapper"
"main","main"
"convertByteArrayToIntUsingShiftOperator","property"
"convertIntToByteArrayUsingShiftOperator","property"
"convertByteArrayToLongUsingShiftOperator","property"
"convertLongToByteArrayUsingShiftOperator","property"
"convertByteArrayToFloatUsingShiftOperator","property wrapper"
"convertFloatToByteArrayUsingShiftOperator","literal wrapper"
"convertingByteArrayToDoubleUsingShiftOperator","property wrapper"
"convertDoubleToByteArrayUsingShiftOperator","literal wrapper"
"convertByteArrayToIntUsingByteBuffer","literal wrapper"
"convertIntToByteArrayUsingByteBuffer","literal wrapper"
"convertByteArrayToLongUsingByteBuffer","literal wrapper"
"convertLongToByteArrayUsingByteBuffer","literal wrapper"
"convertByteArrayToFloatUsingByteBuffer","literal wrapper"
"convertFloatToByteArrayUsingByteBuffer","literal wrapper"
"convertByteArrayToDoubleUsingByteBuffer","literal wrapper"
"convertDoubleToByteArrayUsingByteBuffer","literal wrapper"
"convertByteArrayToIntUsingBigInteger","literal wrapper"
"convertIntToByteArrayUsingBigInteger","literal wrapper"
"convertByteArrayToLongUsingBigInteger","literal wrapper"
"convertLongToByteArrayUsingBigInteger","literal wrapper"
"convertByteArrayToFloatUsingBigInteger","literal wrapper"
"convertFloatToByteArrayUsingBigInteger","literal wrapper"
"convertByteArrayToDoubleUsingBigInteger","literal wrapper"
"convertDoubleToByteArrayUsingBigInteger","literal wrapper"
"convertingByteArrayToIntUsingGuava","literal wrapper"
"convertIntToByteArrayUsingGuava","literal wrapper"
"convertByteArrayToLongUsingGuava","literal wrapper"
"convertLongToByteArrayUsingGuava","literal wrapper"
"convertByteArrayToFloatUsingGuava","literal wrapper"
"convertFloatToByteArrayUsingGuava","literal wrapper"
"convertByteArrayToDoubleUsingGuava","literal wrapper"
"convertDoubleToByteArrayUsingGuava","literal wrapper"
"convertByteArrayToIntUsingCommonsLang","literal wrapper"
"convertIntToByteArrayUsingCommonsLang","literal wrapper"
"convertByteArrayToLongUsingCommonsLang","literal wrapper"
"convertLongToByteArrayUsingCommonsLang","literal wrapper"
"convertByteArrayToFloatUsingCommonsLang","literal wrapper"
"convertFloatToByteArrayUsingCommonsLang","literal wrapper"
"convertByteArrayToDoubleUsingCommonsLang","literal wrapper"
"convertDoubleToByteArrayUsingCommonsLang","literal wrapper"
"usingGetNumericValueMethod","property wrapper"
"usingDigitMethod","property wrapper"
"usingStreamApiMethod","property wrapper"
"usingParseIntMethod","property wrapper"
"usingArraysSetAllMethod","property wrapper"
"floatToByteArray","literal wrapper"
"byteArrayToFloat","property wrapper"
"floatToByteArrayWithByteBuffer","literal wrapper"
"byteArrayToFloatWithByteBuffer","literal wrapper"
"convertWithStreamToList","literal wrapper"
"convertWithStreamIterator","literal wrapper"
"convertWithApacheCommonsAndJavaAsList","literal wrapper"
"convertWithGuava","literal wrapper"
"stringStreamToStringArrayUsingFunctionalInterface","property wrapper"
"stringStreamToStringArrayUsingMethodReference","property wrapper"
"stringStreamToStringArrayUsingLambda","property wrapper"
"integerStreamToIntegerArray","property wrapper"
"intStreamToPrimitiveIntArray","property wrapper"
"stringArrayToStreamUsingArraysStream","literal wrapper"
"stringArrayToStreamUsingStreamOf","literal wrapper"
"primitiveIntArrayToStreamUsingArraysStream","literal wrapper"
"primitiveIntArrayToStreamUsingStreamOf","literal wrapper"
"main","main"
"declaration","literal"
"initialization","literal"
"access","literal"
"iterating","literal"
"varargs","literal wrapper"
"varargMethod","unclassified"
"transformIntoList","literal wrapper"
"transformIntoStream","literal wrapper"
"sort","literal wrapper"
"search","literal wrapper"
"merge","literal wrapper"
"main","main"
"main","main"
"main","main"
"removeDuplicateOnSortedArray","property wrapper"
"mergeAndRemoveDuplicatesUsingStream","literal wrapper"
"mergeAndRemoveDuplicatesUsingSet","literal wrapper"
"getArrayFromSet","property wrapper"
"mergeAndRemoveDuplicates","literal wrapper"
"mergeAndRemoveDuplicatesOnSortedArray","literal wrapper"
"mergeArrays","property wrapper"
"removeDuplicate","property wrapper"
"isElementPresent","predicate"
"genericArray","property wrapper"
"getCommaDelimited","literal wrapper"
"findClosestToZero","property wrapper"
"findClosestToZeroWithPriorityQueue","property wrapper"
"findClosestToZero","property wrapper"
"findMajorityElementUsingForLoop","property"
"findMajorityElementUsingSorting","property wrapper"
"findMajorityElementUsingHashMap","property wrapper"
"findMajorityElementUsingMooreVoting","property"
"main","main"
"setZeroesByNaiveApproach","command"
"setZeroesByTimeOptimizedApproach","command"
"hasZeroInFirstRow","predicate"
"hasZeroInFirstCol","predicate"
"markZeroesInMatrix","command"
"setZeroesInRows","command"
"setZeroesInCols","command"
"setZeroesInFirstRow","command"
"setZeroesInFirstCol","command"
"setZeroesByOptimalApproach","wrapper"
"usingArraySort","property wrapper"
"usingSinglePassThrough","property"
"usingMinHeap","property wrapper"
"findSumWithoutUsingStream","property"
"findSumUsingStream","literal wrapper"
"findSumUsingStream","literal wrapper"
"findAverageWithoutUsingStream","property wrapper"
"findAverageUsingStream","literal wrapper"
"intersectionSimple","literal wrapper"
"intersectionSet","literal wrapper"
"intersectionMultiSet","literal wrapper"
"concatWithCollection","property wrapper"
"concatWithArrayCopy","literal wrapper"
"concatWithCopy2","property wrapper"
"concatWithStream","property wrapper"
"concatIntArraysWithIntStream","literal wrapper"
"sumOfTwoArrays","property"
"sumOfTwoArrays","property"
"sumOfTwoArrays","literal wrapper"
"main","main"
"setup","literal wrapper"
"createEmployeesArray","global-command literal wrapper"
"arrayProvider","literal wrapper"
"primitiveProvider","literal wrapper"
"referenceTypesProvider","literal wrapper"
"main","main"
"initializeArrayInLoop","global-command literal"
"initializeMultiDimensionalArrayInLoop","global-command literal"
"initializeArrayAtTimeOfDeclarationMethod1","literal"
"initializeArrayAtTimeOfDeclarationMethod2","literal"
"initializeArrayAtTimeOfDeclarationMethod3","literal"
"initializeArrayUsingArraysFill","literal wrapper"
"initializeArrayRangeUsingArraysFill","literal wrapper"
"initializeArrayUsingArraysCopy","literal wrapper"
"initializeLargerArrayUsingArraysCopy","literal wrapper"
"initializeArrayUsingArraysSetAll","literal wrapper"
"initializeArrayUsingArraysUtilClone","literal wrapper"
"seedArray","property wrapper"
"getFirstObject","unclassified"
"getFirstInt","unclassified"
"getLastObject","unclassified"
"getLastInt","unclassified"
"appendObject","literal wrapper"
"appendInt","property wrapper"
"appendIntWithUtils","literal wrapper"
"compareObjectArrays","literal wrapper"
"compareIntArrays","literal wrapper"
"deepCompareObjectArrayUsingArrays","literal wrapper"
"deepCompareIntArrayUsingArrays","literal wrapper"
"isEmptyObjectArrayUsingUtils","literal wrapper"
"isEmptyIntArrayUsingUtils","literal wrapper"
"removeDuplicateObjects","literal wrapper"
"removeDuplicateInts","literal wrapper"
"removeDuplicateWithOrderObjectArray","literal wrapper"
"removeDuplicateWithOrderIntArray","literal wrapper"
"printObjectArray","literal wrapper"
"printObjectArray","literal wrapper"
"printIntArray","literal wrapper"
"printIntArray","literal wrapper"
"unboxIntegerArray","literal wrapper"
"boxIntArray","literal wrapper"
"mapObjectArray","property wrapper"
"mapIntArrayToString","literal wrapper"
"filterObjectArray","literal wrapper"
"filterIntArray","literal wrapper"
"insertBetweenIntArray","literal wrapper"
"insertBetweenObjectArray","literal wrapper"
"shuffleIntArray","literal wrapper"
"shuffleObjectArray","literal wrapper"
"getRandomFromIntArray","wrapper"
"getRandomFromObjectArray","wrapper"
"intersectionSimple","literal wrapper"
"intersectionSet","literal wrapper"
"intersectionMultiSet","literal wrapper"
"addElementUsingPureJava","property"
"insertAnElementAtAGivenIndex","property"
"prependAnElementToArray","property wrapper"
"forLoop","property"
"listIndexOf","literal wrapper"
"intStream","literal wrapper"
"getAnIntegerElement","property wrapper"
"modifyAnIntegerElement","wrapper"
"appendAnIntegerElement","wrapper"
"insertAnIntegerElementAtIndex","wrapper"
"usingNativeJava","property wrapper"
"usingJava8ObjectStream","literal wrapper"
"usingJava8FlatMaps","literal wrapper"
"usingApacheCommons","literal wrapper"
"usingGuava","literal wrapper"
"usingNativeJava","literal wrapper"
"usingJava8ObjectStream","property wrapper"
"usingJava8FlatMaps","literal wrapper"
"usingApacheCommons","literal wrapper"
"usingGuava","literal wrapper"
"usingPlainJava","literal wrapper"
"usingJava8ForEach","wrapper"
"usingJava8FlatMaps","literal wrapper"
"usingApacheCommons","literal wrapper"
"usingGuava","property"
"usingNativeJava","literal wrapper"
"usingJava8ObjectStream","property wrapper"
"usingJava8FlatMaps","literal wrapper"
"usingApacheCommons","literal wrapper"
"usingGuava","literal wrapper"
"findEvenNumbers","wrapper"
"findEvenNumbers","literal wrapper"
"findEvenNumbersUsingIterate","literal wrapper"
"findEvenNumbers","literal wrapper"
"filterCollectionHelperMethod","property wrapper"
"findEvenNumbersUsingHelperMethod","literal wrapper"
"findEvenNumbers","property wrapper"
"main","main"
"sizeUsingJava7","property wrapper"
"sizeUsingJava8","property wrapper"
"sizeUsingApacheCollections","literal wrapper"
"sizeUsingGoogleGuava","literal wrapper"
"main","main"
"iterator","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"getNumbers","literal wrapper"
"concat","property wrapper"
"makeListFromIterable","property wrapper"
"assertStreamEquals","wrapper"
"assertStreamEquals","wrapper"
"assertStreamEquals","wrapper"
"main","main"
"main","main"
"main","main"
"failFast1","literal wrapper"
"failFast2","literal wrapper"
"failSafe1","literal wrapper"
"main","main"
"main","main"
"main","main"
"sortReferenceType","literal wrapper"
"sortCollection","literal wrapper"
"sortPrimitives","literal wrapper"
"createEmployeeComparator","literal wrapper"
"main","main"
"getPersons","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"worstAndAverageCasesTimeComplexity","literal wrapper"
"bestCaseTimeComplexity","literal wrapper"
"main","main"
"main","main"
"main","main"
"sort","literal wrapper"
"sort","wrapper"
"merge","command"
"sort","literal wrapper"
"sort","wrapper"
"partition","property global-command"
"sort","wrapper"
"sort","wrapper"
"partition","property wrapper"
"main","main"
"showPriorityQueueWithIterator","literal wrapper"
"showFailFastIteratorBehavior","literal wrapper"
"showCustomOrderingWithIterator","literal wrapper"
"showCustomOrderingWithPoll","literal wrapper"
"useIteratorToCapitalizeNames","literal wrapper"
"main","main"
"listProvider","literal wrapper"
"mapProvider","literal wrapper"
"getVector","literal wrapper"
"listProvider","literal wrapper"
"pairProvider","literal wrapper"
"mapEntryProvider","literal wrapper"
"bookProvider","literal wrapper"
"main","main"
"main","main"
"findPeaks","property wrapper"
"findPeakElements","wrapper"
"findSinglePeak","property wrapper"
"addIfNonNull","wrapper"
"listProvider","literal wrapper"
"main","main"
"getDefaultCapacity","property wrapper"
"main","main"
"main","main"
"ignoreCaseContains","predicate wrapper"
"main","main"
"main","main"
"mapList","property wrapper"
"compareListWithArray","predicate wrapper"
"convertUsingConstructor","property wrapper"
"convertUsingAddAllMethod","property wrapper"
"convertUsingStreamApi","property wrapper"
"convertUsingForLoop","property wrapper"
"convertUsingGuava","property wrapper"
"usingIfPresent","property wrapper"
"usingOrElse","property wrapper"
"usingOrElseGet","property wrapper"
"usingStream","property wrapper"
"usingStreamFilter","property wrapper"
"usingStreamFlatMap","property wrapper"
"assertSequences","wrapper"
"assertSequences","wrapper"
"assertSequences","wrapper"
"floatListProvider","literal wrapper"
"setUpClass","literal wrapper"
"isSorted","predicate wrapper"
"countByClassicalLoop","property wrapper"
"countByForEachLoopWithGetOrDefault","property wrapper"
"countByForEachLoopWithMapCompute","property wrapper"
"countByForEachLoopWithMapMerge","property wrapper"
"countByStreamToMap","property wrapper"
"countByStreamGroupBy","property wrapper"
"main","main"
"intStream","literal wrapper"
"guavaPrimitives","literal wrapper"
"main","main"
"main","main"
"main","main"
"reverseWithRecursion","wrapper"
"reverseWithLoop","wrapper"
"main","main"
"findDuplicateInArrayWithForLoop","property wrapper"
"findDuplicateInArrayWithStream","literal wrapper"
"newListWithDefault","property wrapper"
"newListWithDefault2","property wrapper"
"setup","global-command literal"
"sortUsingForLoop","property wrapper"
"sortUsingComparator","wrapper"
"sortUsingStreamAPI","wrapper"
"sortUsingMap","wrapper"
"sortUsingGuava","literal wrapper"
"sortUsingVavr","literal wrapper"
"safeSubList","property wrapper"
"appendAnElement","literal wrapper"
"appendElements","literal wrapper"
"removeWithWhileLoopPrimitiveElement","wrapper"
"removeWithWhileLoopNonPrimitiveElement","wrapper"
"removeWithWhileLoopStoringFirstOccurrenceIndex","wrapper"
"removeWithCallingRemoveUntilModifies","wrapper"
"removeWithStandardForLoopUsingIndex","wrapper"
"removeWithForLoopDecrementOnRemove","wrapper"
"removeWithForLoopIncrementIfRemains","wrapper"
"removeWithForEachLoop","wrapper"
"removeWithIterator","wrapper"
"removeWithCollectingAndReturningRemainingElements","property wrapper"
"removeWithCollectingRemainingElementsAndAddingToOriginalList","wrapper"
"removeWithStreamFilter","property wrapper"
"removeWithRemoveIf","wrapper"
"forEach","literal wrapper"
"getOrDefault","literal wrapper"
"putIfAbsent","literal wrapper"
"merge","literal wrapper"
"compute","literal wrapper"
"convertWithIteration","property wrapper"
"convertWithStream","property wrapper"
"convertWithGuava","literal wrapper"
"convertWithApache","literal wrapper"
"convertWithStream","property wrapper"
"convertWithGuava","literal wrapper"
"copyUsingConstructor","literal"
"copyUsingClone","property wrapper"
"copyUsingPut","property wrapper"
"copyUsingPutAll","literal wrapper"
"copyUsingJava8Stream","property wrapper"
"shallowCopy","property wrapper"
"deepCopy","literal wrapper"
"createSingletonMap","literal wrapper"
"main","main"
"main","main"
"main","main"
"streamMerge","literal wrapper"
"streamEx","literal wrapper"
"streamOf","literal wrapper"
"streamConcat","literal wrapper"
"mergeFunction","literal wrapper"
"initialize","literal wrapper"
"main","main"
"hppcMap","literal wrapper"
"fastutilMap","literal wrapper"
"eclipseCollectionsMap","literal wrapper"
"main","main"
"sortGuava","literal wrapper"
"sortStream","literal wrapper"
"treeSetByValue","literal wrapper"
"treeSetByKey","literal wrapper"
"treeMapSortByKey","literal wrapper"
"arrayListSortByValue","literal wrapper"
"arrayListSortByKey","literal wrapper"
"initialize","literal wrapper"
"addDuplicates","literal wrapper"
"main","main"
"main","main"
"typeCastConvert","property"
"loopConvert","property wrapper"
"streamConvert","property wrapper"
"guavaConvert","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"addNullKeyValue","literal wrapper"
"iterateIdentityHashMap","wrapper"
"demoMutableKeys","literal wrapper"
"demoHashMapVsIdentityMap","literal wrapper"
"getSynchronizedMap","literal wrapper"
"createFromAnotherMap","literal"
"updateWithNewValue","wrapper"
"addValue","wrapper"
"addAllValues","wrapper"
"createWithSimpleData","literal wrapper"
"main","main"
"invertMapUsingForLoop","property wrapper"
"invertMapUsingStreams","property wrapper"
"invertMapUsingMapper","property wrapper"
"invertMapUsingGroupingBy","property wrapper"
"sortMapByValueDescending","property wrapper"
"deserializeCustomObject","property wrapper"
"main","main"
"main","main"
"main","main"
"printMap","property wrapper"
"cleanUp","literal wrapper"
"assertEqualsMapAndUser","wrapper"
"transformMap","property wrapper"
"createEmptyMap","literal wrapper"
"createMapUsingGuava","literal wrapper"
"createImmutableMapUsingGuava","literal wrapper"
"returnCopyAndClearMap","literal wrapper"
"returnCopyAndRewriteMap","literal wrapper"
"keys","property wrapper"
"getKeys","property wrapper"
"getKey","property wrapper"
"setup","literal wrapper"
"main","main"
"copyByConstructor","literal"
"copyBySetAddAll","literal wrapper"
"copyBySetClone","property wrapper"
"copyByJson","literal wrapper"
"copyByApacheCommonsLang","property wrapper"
"copyByCollectorsToSet","property wrapper"
"findSymmetricDiff","property wrapper"
"putKey","wrapper"
"main","main"
"java9Of","literal wrapper"
"guavaOf","literal wrapper"
"copyOf","wrapper"
"coreJDK","wrapper"
"newHashSet","literal wrapper"
"measureExecution","property wrapper"
"setOf","literal wrapper"
"failConvert","literal"
"iterateConvert","property wrapper"
"streamConvert","literal wrapper"
"streamConvertIntStream","literal wrapper"
"guavaConvert","literal wrapper"
"apacheCommonConvert","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"runAsynchronousTasks","property wrapper"
"isEveryCompletableFutureDone","literal wrapper"
"main","main"
"createThreadPoolExecutor","property wrapper"
"isEveryRunnableDone","predicate wrapper"
"main","main"
"inputAndReturnCompare","literal wrapper"
"exceptionHandlingCompare","literal wrapper"
"chainingOperationCompare","literal wrapper"
"annotatedTestRunsMultipleTimes","literal wrapper"
"clientData","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"parameterisedThreadAnonymousClass","literal wrapper"
"sumCalculator","property wrapper"
"averageCalculator","property wrapper"
"main","main"
"main","main"
"main","main"
"usingCompletableFuture","literal wrapper"
"hello","literal wrapper"
"mergeWorld","literal wrapper"
"print","literal wrapper"
"usingAsyncAwait","literal wrapper"
"main","main"
"factorial","property"
"factorialUsingThread","literal wrapper"
"factorialUsingFutureTask","literal wrapper"
"factorialUsingCompletableFuture","literal wrapper"
"factorialUsingEAAsync","literal wrapper"
"factorialUsingCactoos","literal wrapper"
"factorialUsingGuavaServiceSubmit","literal wrapper"
"factorialUsingGuavaFutures","literal wrapper"
"factorialUsingJcabiAspect","literal wrapper"
"sleep","literal wrapper"
"main","main"
"sleep","literal wrapper"
"main","main"
"parseDate","literal wrapper"
"main","main"
"main","main"
"main","main"
"getSingleThreadExecutorService","literal wrapper"
"createThread","property wrapper"
"main","main"
"demoSingleProducerAndSingleConsumer","literal wrapper"
"demoMultipleProducersAndMultipleConsumers","literal wrapper"
"main","main"
"main","main"
"waitForAllThreadsToComplete","wrapper"
"sleep","literal wrapper"
"main","main"
"main","main"
"main","main"
"usingCountDownLatch","literal wrapper"
"usingCyclicBarrier","literal wrapper"
"usingPhaser","literal wrapper"
"increment","global-command literal"
"getCount","literal"
"main","main"
"main","main"
"downloadFile","property wrapper"
"main","main"
"downloadFile","literal wrapper"
"main","main"
"main","main"
"completableFutureMethod","literal wrapper"
"chainingTaskExample","literal wrapper"
"exceptionHandlingExample","literal wrapper"
"timeoutExample","literal wrapper"
"main","main"
"executorServiceMethod","literal wrapper"
"chainingTaskExample","literal wrapper"
"exceptionHandlingExample","literal wrapper"
"timeoutExample","literal wrapper"
"main","main"
"parametersSource_handle","literal wrapper"
"parametersSource_exceptionally","literal wrapper"
"parametersSource_whenComplete","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"threadSleep","wrapper"
"timeunitSleep","wrapper"
"delayedServiceTask","literal wrapper"
"fixedRateServiceTask","literal wrapper"
"someTask1","literal"
"someTask2","literal"
"executePromiseTask","literal wrapper"
"executeFutureTask","literal wrapper"
"handleFutureControlFlow","literal wrapper"
"handlePromiseControlFlow","literal wrapper"
"handlePromiseError","literal wrapper"
"handleFutureError","literal wrapper"
"handlePromiseWritable","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"sleepWaitInSynchronizedBlocks","literal wrapper"
"main","main"
"testThreads","literal wrapper"
"testExecutor","literal wrapper"
"main","main"
"testUsingLoop","literal wrapper"
"testUsingTimer","literal wrapper"
"testUsingFuture","literal wrapper"
"testScheduledExecutor","literal wrapper"
"testSteppedProcess","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"retryTask","literal wrapper"
"retryFunction","property wrapper"
"retryUnsafe","property wrapper"
"retryNesting","property wrapper"
"retryExceptionallyAsync","property wrapper"
"sleep","literal wrapper"
"supplyAsync","property wrapper"
"main","main"
"main","main"
"main","main"
"propagateException","literal wrapper"
"restoreTheState","literal wrapper"
"throwCustomException","literal wrapper"
"handleWithCustomException","literal wrapper"
"incrementCount","literal wrapper"
"getCount","literal wrapper"
"incrementCount","global-command literal"
"getCount","literal"
"incrementCount","global-command literal wrapper"
"getCount","literal wrapper"
"incrementCount","global-command literal"
"getCount","literal"
"incrementCount","global-command literal"
"getCount","literal"
"incrementCount","global-command literal"
"getCount","literal"
"factorial","property wrapper"
"factorial","property wrapper"
"printCurrentThread","literal wrapper"
"main","main"
"executeTask","global-command literal wrapper"
"main","main"
"factorial","property wrapper"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"sleep","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"performStaticSyncTask","literal wrapper"
"getStaticCount","literal"
"setStaticCount","unclassified"
"syncStaticCalculate","global-command literal"
"main","main"
"commonResource","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setupClass","literal wrapper"
"cleanupClass","literal wrapper"
"main","main"
"logColorUsingANSICodes","literal"
"logColorUsingLogger","literal wrapper"
"logColorUsingJANSI","literal wrapper"
"main","main"
"main","main"
"main","main"
"printConsoleObject","literal wrapper"
"readPasswordFromConsole","literal wrapper"
"printSysOut","literal"
"main","main"
"stringFormat","literal wrapper"
"asciiTable","literal wrapper"
"main","main"
"printfNewLine","literal"
"printfString","literal"
"printfChar","literal"
"printfNumber","literal"
"printfBoolean","literal"
"printfDateTime","literal"
"getStatus","literal"
"main","main"
"printMessage","literal"
"readSingleCharacter","literal wrapper"
"readMultipleCharacters","literal wrapper"
"readWithParameters","literal wrapper"
"getDateWithoutTimeUsingCalendar","literal wrapper"
"getDateWithoutTimeUsingFormat","literal wrapper"
"getLocalDate","literal wrapper"
"addOneDay","literal wrapper"
"addOneDayJodaTime","literal wrapper"
"addOneDayCalendar","literal wrapper"
"addOneDayApacheCommons","literal wrapper"
"main","main"
"getDatesBetweenUsingJava7","literal wrapper"
"getDatesBetweenUsingJava8","property wrapper"
"getDatesBetweenUsingJava9","property wrapper"
"getCalendarWithoutTime","literal wrapper"
"assertThatTimeFieldsAreZero","literal wrapper"
"isSameDayUsingLocalDate","predicate wrapper"
"isSameDayUsingInstant","predicate wrapper"
"isSameDayUsingSimpleDateFormat","literal wrapper"
"isSameDayUsingCalendar","literal wrapper"
"isSameDayUsingApacheCommons","literal wrapper"
"isSameDayUsingJoda","literal wrapper"
"isSameDayUsingDate4j","predicate wrapper"
"getPlusDays","literal wrapper"
"getNow","literal"
"getDate","literal"
"getDate","literal wrapper"
"getDayNumberOld","literal wrapper"
"getDayStringOld","literal wrapper"
"getDayNumberNew","property wrapper"
"getDayStringNew","property wrapper"
"getNow","literal wrapper"
"getDate","literal wrapper"
"getDate","literal wrapper"
"getNow","literal wrapper"
"getTime","literal wrapper"
"getTime","literal wrapper"
"getNow","literal wrapper"
"getTimestamp","literal wrapper"
"getTimestamp","literal wrapper"
"convert","property wrapper"
"convert","property wrapper"
"addDaysSkippingWeekends","property wrapper"
"subtractDaysSkippingWeekends","property wrapper"
"getCurrentTime","literal wrapper"
"getCurrentTimeByTimeZone","literal wrapper"
"calculateTimeAgoByTimeGranularity","property wrapper"
"calculateHumanFriendlyTimeAgo","property wrapper"
"calculateExactTimeAgoWithJodaTime","property wrapper"
"calculateHumanFriendlyTimeAgoWithJodaTime","property wrapper"
"calculateZonedTimeAgoWithJodaTime","property wrapper"
"getCurrentTimeByTimeZone","literal wrapper"
"calculateTimeAgoWithPeriodAndDuration","property wrapper"
"calculateTimeAgoWithPrettyTime","literal wrapper"
"calculateTimeAgoWithTime4J","property wrapper"
"main","main"
"main","main"
"getLastDayOfMonthUsingCalendar","literal wrapper"
"getLastDayOfMonthUsingTemporalAdjusters","property wrapper"
"getLastDayOfMonthUsingYearMonth","property wrapper"
"getLastDayOfMonthUsingJodaTime","property wrapper"
"dateFrom","literal"
"calendarFrom","literal wrapper"
"fromNanos","property wrapper"
"fromTimestamp","literal wrapper"
"format","literal wrapper"
"localTimeUtc","literal wrapper"
"millis","property"
"createAmericanDate","literal wrapper"
"switchTimezone","literal wrapper"
"getLocalDate","property wrapper"
"convertToDate","property wrapper"
"convertToZonedDateTime","property wrapper"
"usingHijrahChronology","literal wrapper"
"usingFromMethod","literal wrapper"
"usingJodaDate","property wrapper"
"usingUmmalquraCalendar","property wrapper"
"usingDatatypeFactoryForDate","literal wrapper"
"usingLocalDate","literal wrapper"
"usingSimpleDateFormat","literal wrapper"
"usingGregorianCalendar","literal wrapper"
"usingJodaTime","literal wrapper"
"timestampToCalendar","property wrapper"
"calendarToTimestamp","property wrapper"
"convertToZonedDateTimeUsingInstant","property wrapper"
"convertToZonedDateTimeUsingCalendar","property wrapper"
"convertToZonedDateTimeUsingLocalDateTime","property wrapper"
"convertToZonedDateTimeUsingJodaTime","property wrapper"
"convertToTimestampUsingJodaTime","property wrapper"
"convertToTimeStampUsingInstant","property wrapper"
"convertToTimeStampUsingLocalDateTime","property wrapper"
"convertToLocalDateViaInstant","property wrapper"
"convertToLocalDateViaSqlDate","property wrapper"
"convertToLocalDateViaMilisecond","property wrapper"
"convertToLocalDate","property wrapper"
"convertToLocalDateTimeViaInstant","property wrapper"
"convertToLocalDateTimeViaSqlTimestamp","property wrapper"
"convertToLocalDateTimeViaMilisecond","property wrapper"
"convertToLocalDateTime","property wrapper"
"convertToDateViaSqlTimestamp","literal wrapper"
"convertToDateViaInstant","property wrapper"
"convertToDateViaSqlDate","literal wrapper"
"convertToDateViaInstant","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"getResponseCode","property wrapper"
"getResponseCodeUnhandled","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"findCauseUsingPlainJava","property wrapper"
"calculateAge","property wrapper"
"parseDate","literal wrapper"
"createSSLSocketWithEnabledProtocols","wrapper"
"demoSuppressedException","literal wrapper"
"demoAddSuppressedException","literal wrapper"
"demoExceptionalResource","literal wrapper"
"main","main"
"orderOfClosingResources","literal wrapper"
"initializeState","literal"
"runServer","literal wrapper"
"copyList","literal wrapper"
"copyList","literal wrapper"
"copyList","literal"
"copyList","property wrapper"
"copyList","property wrapper"
"getMessageForLocale","literal wrapper"
"main","main"
"getDependentMessage","literal"
"fetchAndPrint","literal wrapper"
"main","main"
"getSpecials","literal wrapper"
"getDesert","literal"
"main","main"
"getGreetingMessage","literal wrapper"
"getShortenedName","property wrapper"
"convertInstanceOfObject","property"
"main","main"
"addArrayElementsUsingLoop","unclassified"
"getListElementAtIndex","literal wrapper"
"getArrayElementAtIndex","unclassified"
"convertIntegerToInt","property wrapper"
"main","main"
"methodA","literal wrapper"
"main","main"
"methodA","literal wrapper"
"methodB","literal wrapper"
"main","main"
"methodA","literal wrapper"
"methodB","literal"
"readInput","literal wrapper"
"readInput","literal wrapper"
"readInput","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"pow","property"
"checkNumber","property"
"createDictionary","literal wrapper"
"getByName","literal wrapper"
"getByUpperCaseName","property wrapper"
"main","main"
"sneakyThrow","unclassified"
"throwSneakyIOException","literal wrapper"
"throwSneakyIOExceptionUsingLombok","literal"
"setUp","global-command literal"
"main","main"
"getLeave","literal wrapper"
"howIsTeamLead","literal wrapper"
"howIsManager","literal wrapper"
"howIsGirlFriendOfManager","literal"
"main","main"
"getLeave","literal wrapper"
"howIsTeamLead","literal wrapper"
"howIsManager","literal wrapper"
"howIsGirlFriendOfManager","literal"
"getFirstLine","literal wrapper"
"containsExtension","predicate wrapper"
"isCorrectFileName","predicate wrapper"
"getPlayers","literal wrapper"
"main","main"
"main","main"
"main","main"
"checkedExceptionWithThrows","literal"
"checkedExceptionWithTryCatch","literal wrapper"
"divideByZero","literal"
"performOperation","property wrapper"
"passFunctionUsingAnnonymousClass","literal wrapper"
"passFunctionUsingLambda","literal wrapper"
"add","property"
"passFunctionUsingMethodReferrences","literal wrapper"
"executeFunction","property wrapper"
"passFunctionUsingFunction","literal wrapper"
"executeCallable","property wrapper"
"passFunctionUsingCallable","property wrapper"
"isEmpty","predicate wrapper"
"incrementCounter","global-command literal"
"getCounterValue","literal"
"weightOnEarth","literal wrapper"
"weightOnMars","literal wrapper"
"weightOnEarth","literal"
"sortWithoutLambda","property wrapper"
"sortWithLambda","wrapper"
"logThenSqrt","literal wrapper"
"sqrtThenLog","literal wrapper"
"add","property wrapper"
"sum","property wrapper"
"headRecursion","property wrapper"
"tailRecursion","property wrapper"
"findAuthorByName","literal wrapper"
"findLatestBookByAuthorId","literal wrapper"
"findById","literal wrapper"
"listOf","property wrapper"
"callWithCustomHeader","literal wrapper"
"callWithCustomHeaderV2","literal wrapper"
"callWithCustomHeaderV3","literal wrapper"
"sendSynchronousPost","literal wrapper"
"sendAsynchronousPost","literal wrapper"
"sendConcurrentPost","property wrapper"
"sendPostWithAuthHeader","literal wrapper"
"sendPostWithAuthClient","literal wrapper"
"sendPostWithJsonBody","literal wrapper"
"sendPostWithFormData","literal wrapper"
"sendPostWithFileData","literal wrapper"
"getFormDataAsString","property wrapper"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"mockBasicPostRequest","literal wrapper"
"getFreePort","literal wrapper"
"getStringFromInputStream","literal wrapper"
"clean","literal wrapper"
"getStringFromInputStream","literal wrapper"
"copyDirectory","literal wrapper"
"copyDirectoryJavaUnder7","wrapper"
"copyDirectory","wrapper"
"copyFile","literal wrapper"
"copyDirectory","wrapper"
"removeFileExtension","property wrapper"
"findUsingIOApi","literal wrapper"
"findUsingNIOApi","literal wrapper"
"findUsingCommonsIO","literal wrapper"
"isEmpty","literal wrapper"
"isEmpty2","literal wrapper"
"isEmptyInefficient","predicate wrapper"
"setUpFiles","literal wrapper"
"cleanUp","literal wrapper"
"beforeAll","literal wrapper"
"afterAll","literal wrapper"
"setup","global-command literal wrapper"
"methodThatTriggersAttack","literal wrapper"
"byBufferedReader","property wrapper"
"byStream","global-command literal wrapper"
"aggregateByKeys","global-command literal wrapper"
"textDataProcessingByteStream","literal wrapper"
"textDataProcessingCharStream","literal wrapper"
"nonTextDataProcessing","literal wrapper"
"genWithApacheCommons","literal wrapper"
"genWithGuava","literal wrapper"
"genWithMessageDigest","literal wrapper"
"main","main"
"touch","wrapper"
"touchWithApacheCommons","literal wrapper"
"main","main"
"readUserInput","literal wrapper"
"main","main"
"serialize","literal wrapper"
"main","main"
"readFile","literal wrapper"
"writeFile","literal wrapper"
"main","main"
"main","main"
"readGZipFile","literal wrapper"
"findInZipFile","literal wrapper"
"useContentsOfZipFile","wrapper"
"readAllEntriesByZipFile","wrapper"
"readAllEntriesByZipInputStream","wrapper"
"readLastEntryByZipFile","wrapper"
"readLastEntryByZipInputStream","wrapper"
"getLastEntryName","literal wrapper"
"main","main"
"createRandomStringInByte","property wrapper"
"getString","literal wrapper"
"prepareData","literal wrapper"
"prepareData","global-command literal wrapper"
"cleanup","literal wrapper"
"gzip","wrapper"
"convertToAbsoluteUsePathsClass","literal wrapper"
"convertToAbsoluteUseFileClass","literal wrapper"
"convertToAbsoluteUseFileSystemsClass","literal wrapper"
"main","main"
"readAllCharactersOneByOne","property wrapper"
"readMultipleCharacters","property wrapper"
"readFile","literal wrapper"
"readFileUsingTryWithResources","literal wrapper"
"makeDir","literal wrapper"
"removeDir","wrapper"
"deleteFile","wrapper"
"writeSampleDataToFile","literal wrapper"
"setupClass","global-command literal wrapper"
"createFilesAndFolders","global-command literal wrapper"
"deleteFilesAndFolders","literal wrapper"
"deleteRecursively","wrapper"
"isWindows","literal wrapper"
"usingByteArrayOutputStreamClass","property wrapper"
"usingApacheCommonsIO","property wrapper"
"usingCustomOutputStream","property wrapper"
"generateArrayListFromFile","literal wrapper"
"generateArrayListFromFile","literal wrapper"
"generateArrayListFromFile","literal wrapper"
"generateArrayListFromFile","literal wrapper"
"generateArrayListFromFile","literal wrapper"
"main","main"
"getFileSizeInBytes","property wrapper"
"getFileSizeInKilobytes","literal wrapper"
"getFileSizeInMegabytes","literal wrapper"
"getFileSizeInGigabytes","literal wrapper"
"main","main"
"main","main"
"newFile","property wrapper"
"main","main"
"main","main"
"zipFile","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"getClassNamesFromJarFile","literal wrapper"
"getClassesFromJarFile","literal wrapper"
"findObjectMapperClass","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"executeJarWithoutManifestAttribute","literal wrapper"
"executeJarWithManifestAttribute","literal wrapper"
"createManifestFile","literal wrapper"
"executeJar","literal wrapper"
"executeCommand","literal wrapper"
"collectOutput","property wrapper"
"runProcess","property wrapper"
"main","main"
"execute","literal wrapper"
"close","wrapper"
"showErrorMessage","wrapper"
"connectToServer","property wrapper"
"executeQuery","wrapper"
"createEnvironmentFromProperties","literal wrapper"
"setUp","global-command literal wrapper"
"tearDown","literal wrapper"
"setUp","global-command literal wrapper"
"tearDown","literal wrapper"
"authenticateUser","literal wrapper"
"main","main"
"main","main"
"getTextService","property wrapper"
"main","main"
"printClassesLoadedBy","literal wrapper"
"premain","command"
"listLoadedClasses","literal wrapper"
"getClassLoader","property wrapper"
"main","main"
"loadClass","literal wrapper"
"main","main"
"loadClass","literal wrapper"
"main","main"
"main","main"
"premain","global-command"
"sizeOf","literal wrapper"
"main","main"
"main","main"
"main","main"
"calculateSum","literal wrapper"
"premain","literal wrapper"
"agentmain","literal wrapper"
"transformClass","wrapper"
"transform","wrapper"
"run","literal wrapper"
"main","main"
"withdrawMoney","literal wrapper"
"run","literal wrapper"
"main","main"
"encode","wrapper"
"premain","global-command"
"getObjectSize","literal wrapper"
"printObjectSize","wrapper"
"main","main"
"main","main"
"filter","property wrapper"
"repair","wrapper"
"compareByNameThenAge","property wrapper"
"lambdaWrapper","property wrapper"
"consumerWrapper","property wrapper"
"throwingConsumerWrapper","property wrapper"
"handlingConsumerWrapper","property wrapper"
"getLambdaExpressionObject","literal"
"getLambdaExpressionObject","literal"
"main","main"
"doNothingAtAll","empty"
"main","main"
"main","main"
"iAmFlexible","literal wrapper"
"castIntToEnum","literal wrapper"
"getMostDistantPoint","property wrapper"
"getMinAvgMaxTriple","property wrapper"
"getCoordinatesDoubleArray","literal"
"getCoordinatesNumberArray","literal"
"getCoordinatesList","literal wrapper"
"getCoordinatesMap","literal wrapper"
"getCoordinates","literal"
"getMostDistantPoint","property wrapper"
"main","main"
"main","main"
"findCauseUsingPlainJava","property wrapper"
"calculateAge","property wrapper"
"parseDate","literal wrapper"
"getRankingsWithForLoop","property wrapper"
"getRankingsWithForEachLoop","property wrapper"
"getRankingsWithFunctionalForEachLoop","literal wrapper"
"forEachWithCounter","wrapper"
"getRankingsWithStream","property wrapper"
"withCounter","property wrapper"
"serialize","literal wrapper"
"deserialize","literal wrapper"
"cleanup","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"concatNonFinalStrings","literal"
"concatFinalStrings","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"getNumberOfSeats","literal"
"main","main"
"main","main"
"convertNumberToNewBase","literal wrapper"
"convertNumberToNewBaseCustom","literal wrapper"
"convertFromDecimalToBaseX","property wrapper"
"convertFromAnyBaseToDecimal","property wrapper"
"charToDecimal","property"
"main","main"
"order","wrapper"
"print","literal"
"swap","literal wrapper"
"swapHelper","wrapper"
"mergeTypeParameter","property wrapper"
"mergeWildcard","property wrapper"
"sum","property wrapper"
"sumTypeParameter","property wrapper"
"sumWildcard","property wrapper"
"addNumber","wrapper"
"main","main"
"toggle","property"
"recursiveStackOverflow","global-command literal wrapper"
"main","main"
"compare","property wrapper"
"compare","literal wrapper"
"toExternalUserStatus","literal wrapper"
"sumIntArray1","wrapper"
"sumIntArray2","wrapper"
"main","main"
"concatStatic","property"
"joinTwoStrings","literal wrapper"
"creatingInstanceJoinTwoStrings","literal wrapper"
"compress","literal wrapper"
"compressWithCustomLevel","literal wrapper"
"decompress","literal wrapper"
"main","main"
"getByRandomClass","property wrapper"
"getByThreadLocalRandom","property wrapper"
"main","main"
"getModifiableEnvironment","literal wrapper"
"generate","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"round","literal wrapper"
"multiplyMatrices","property wrapper"
"multiplyMatricesCell","property"
"main","main"
"parseParameters","literal wrapper"
"forks","property wrapper"
"warmupIterations","property wrapper"
"measurementIterations","property wrapper"
"parseOrDefault","property wrapper"
"main","main"
"data","global-command literal wrapper"
"clamp","wrapper"
"isValidDDFormatWithRegex","literal wrapper"
"isValidDMSFormatWithRegex","literal wrapper"
"isValidMGRSFormatWithRegex","literal wrapper"
"isValidDDFormatWithCustomValidation","predicate wrapper"
"isValidDMSFormatWithCustomValidation","predicate wrapper"
"isInvalidLatitude","predicate wrapper"
"isInvalidLongitude","predicate wrapper"
"factorial","property wrapper"
"printUseRecursion","wrapper"
"printUseBinomialExpansion","unclassified"
"main","main"
"ofReal","literal"
"getPolynomRoots","property wrapper"
"getPolynomRoots","property wrapper"
"calculateStandardDeviation","property wrapper"
"main","main"
"main","main"
"calculateBMI","property"
"findUsingDistanceFormula","literal wrapper"
"findUsingSlopeFormula","predicate"
"usingRecursion","property wrapper"
"usingMemoizedRecursion","property wrapper"
"memoizedHelper","property command"
"usingDynamicProgramming","property wrapper"
"usingUnboundedKnapsack","property wrapper"
"usingOriginAsRotationPoint","property wrapper"
"usingAffineTransform","literal wrapper"
"getPercentile","property wrapper"
"gcdByBruteForce","property"
"gcdByEuclidsAlgorithm","property wrapper"
"gcdBySteinsAlgorithm","property"
"main","main"
"toPercentageOf","property wrapper"
"percentOf","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"splitUsingFloatingTypes","unclassified"
"splitUsingString","literal wrapper"
"splitUsingBigDecimal","literal wrapper"
"showIntegerOverflow","literal"
"noOverflowWithBigInteger","literal wrapper"
"exceptionWithAddExact","literal wrapper"
"addExact","property"
"demonstrateUnderflow","literal wrapper"
"powExact","property wrapper"
"customLog","literal wrapper"
"generateRandomSet","literal wrapper"
"createRabbitUsingNewOperator","literal"
"createRabbitUsingClassForName","literal wrapper"
"createRabbitUsingClassNewInstance","literal wrapper"
"createRabbitUsingConstructorNewInstance","literal wrapper"
"createRabbitUsingClone","property wrapper"
"createRabbitUsingDeserialization","literal wrapper"
"createRabbitUsingSupplier","literal wrapper"
"createRabbitArray","literal"
"createRabbitTypeEnum","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"getInstance","global-command literal"
"toUpperCase","property wrapper"
"toLowerCase","property wrapper"
"main","main"
"withoutGenerics","literal wrapper"
"withGenerics","literal wrapper"
"main","main"
"printArray","unclassified"
"printArray","unclassified"
"containsElement","predicate wrapper"
"getRawMap","literal wrapper"
"getRawMapWithMixedTypes","literal wrapper"
"getRawList","literal wrapper"
"getRawListWithMixedTypes","literal wrapper"
"castList","property wrapper"
"castList2","property wrapper"
"main","main"
"main","main"
"msg","literal"
"msg","literal"
"isEnergyEfficient","predicate wrapper"
"main","main"
"main","main"
"createImageFile","literal wrapper"
"createTextFile","literal wrapper"
"createTextFile2","literal wrapper"
"main","main"
"main","main"
"printMessage","literal"
"printMessage","literal"
"main","main"
"main","main"
"suite","literal"
"main","main"
"getNameStatic","property"
"callToStaticMethod","literal wrapper"
"main","main"
"isEmpty","predicate wrapper"
"wrap","property wrapper"
"isEmpty","predicate wrapper"
"wrap","property wrapper"
"isEmpty","predicate wrapper"
"wrap","property wrapper"
"isEmpty","predicate wrapper"
"wrap","property wrapper"
"isEmpty","predicate wrapper"
"wrap","property wrapper"
"isEmpty","predicate wrapper"
"wrap","property wrapper"
"setUpMultiplierInstance","global-command literal"
"setUpVehicleInstance","global-command literal"
"setUpCarInstance","global-command literal"
"publicMethod","literal wrapper"
"defaultMethod","literal wrapper"
"protectedMethod","literal wrapper"
"privateMethod","literal wrapper"
"main","main"
"getHorsePower","property"
"buildManager","literal"
"main","main"
"main","main"
"getNumberOfCars","literal"
"getCarsInformation","property wrapper"
"setNumberOfCars","unclassified"
"getInstance","literal"
"getRanks","literal"
"setRanks","command"
"getInstance","literal"
"getInstance","literal"
"getInstance","literal"
"getInstance","literal"
"echoIt","unclassified"
"echoIt","literal"
"setUpCarInstance","global-command literal"
"setUpMotorbikeInstance","global-command literal"
"setUpCarInstance","literal wrapper"
"setUpCarInstance","literal wrapper"
"sleep","literal wrapper"
"sleep","literal wrapper"
"main","main"
"main","main"
"allNull","predicate wrapper"
"getFieldValue","property wrapper"
"main","main"
"modify","command"
"main","main"
"modify","unclassified"
"processClass","wrapper"
"main","main"
"printListElements","wrapper"
"main","main"
"processClass","wrapper"
"main","main"
"modify","command"
"modify","unclassified"
"createDeepCopy","literal wrapper"
"deepCopyUsingJackson","property wrapper"
"deepCopyUsingCloneable","property wrapper"
"deepCopyUsingCopyConstructor","property wrapper"
"deepCopyUsingSerialization","property wrapper"
"of","literal"
"main","main"
"setUpActressInstance","global-command literal"
"setPersonInstance","global-command literal"
"setUpWaitressInstance","global-command literal"
"findByName","literal wrapper"
"main","main"
"findByName","property wrapper"
"findByCode","literal wrapper"
"findByValue","literal wrapper"
"findByName","literal wrapper"
"findByValue","literal wrapper"
"randomDirection","literal wrapper"
"main","main"
"byFullNameIgnoreCase","literal wrapper"
"byNameIgnoreCase","literal wrapper"
"enumValuesInList","property wrapper"
"getAllUndeliveredPizzas","property wrapper"
"groupPizzaByStatus","property wrapper"
"getInstance","literal"
"valueOfLabel","literal wrapper"
"valueOfLabel","literal wrapper"
"valueOfLabel","literal wrapper"
"valueOfAtomicNumber","literal wrapper"
"valueOfAtomicWeight","literal wrapper"
"isPrimitiveType","predicate wrapper"
"stream","literal wrapper"
"main","main"
"setUpClass","empty"
"tearDownClass","empty"
"setUpClass","empty"
"tearDownClass","empty"
"setUpClass","empty"
"tearDownClass","empty"
"setUpClass","empty"
"tearDownClass","empty"
"usingOptional","property wrapper"
"usingTernaryOperator","property wrapper"
"elvis","property"
"twoOrMoreAreTrueByLoop","predicate"
"xOrMoreAreTrueByLoop","predicate"
"twoOrMoreAreTrueBySum","predicate"
"xOrMoreAreTrueBySum","predicate wrapper"
"twoorMoreAreTrueByKarnaughMap","predicate"
"twoOrMoreAreTrueByOperators","predicate"
"twoOrMoreAreTrueByXor","predicate"
"binaryToText","property wrapper"
"dieselAndManualCar","literal"
"dieselAndAutomaticCar","literal"
"oilAndManualCar","literal"
"oilAndAutomaticCar","literal"
"main","main"
"ifElseStatementsExamples","literal"
"ternaryExample","literal"
"switchExample","literal"
"methodToRepeat","literal"
"repetitionTo50Examples","literal wrapper"
"printWordByWord","wrapper"
"printTextNTimes","unclassified"
"printTextNTimesUpTo50","unclassified"
"findFirstInstanceOfName","property wrapper"
"makeListSkippingName","property wrapper"
"printEvenNumbers","unclassified"
"printEvenNumbersToAMaxOf100","unclassified"
"main","main"
"traverseMap","wrapper"
"traverseSet","unclassified"
"traverseList","unclassified"
"traverseArray","unclassified"
"main","main"
"main","main"
"main","main"
"ifElseStatementExample","literal"
"checkIsValidIsFalseWithEmptyIfBlock","literal"
"checkIsValidIsFalseWithJustTheIfBlock","literal"
"checkIsValidIsFalseWithTheNotOperator","literal"
"notOperatorWithBooleanValueAsOperand","literal"
"applyNotOperatorToAnExpression_example1","literal"
"applyNotOperatorToAnExpression_LogicalOperators","literal"
"precedence_example","literal"
"pitfalls_ComplexConditionsExample","literal"
"pitfalls_simplifyComplexConditionsByReversingLogicExample","literal"
"exitEarlyExample","literal"
"main","main"
"setUpClass","literal wrapper"
"unlabeledBreak","literal wrapper"
"unlabeledBreakNestedLoops","literal wrapper"
"labeledBreak","literal wrapper"
"unlabeledContinue","literal wrapper"
"labeledContinue","literal wrapper"
"fromArrayToList","literal wrapper"
"fromArrayToList","literal wrapper"
"fromArrayToListWithUpperBound","literal wrapper"
"paintAllBuildings","wrapper"
"createList","literal wrapper"
"setUp","literal wrapper"
"firstOfFirst","wrapper"
"toArray","unclassified"
"returnAsIs","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"initializationLogic","global-command literal"
"main","main"
"inputStreamToString","literal wrapper"
"consumeInputStream","literal wrapper"
"downloadWithJavaIO","literal wrapper"
"downloadWithJava7IO","literal wrapper"
"downloadWithJavaNIO","literal wrapper"
"downloadWithApacheCommons","literal wrapper"
"downloadWithAHC","literal wrapper"
"downloadFile","literal wrapper"
"transferDataAndGetBytesDownloaded","property wrapper"
"downloadFileWithResume","literal wrapper"
"addFileResumeFunctionality","property wrapper"
"getFullResponse","global-command wrapper"
"getParamsString","property wrapper"
"main","main"
"main","main"
"setup","literal wrapper"
"subjectFromMessage","property wrapper"
"emailTextFrom","property wrapper"
"emailStyledTextFrom","property wrapper"
"attachmentContentsFrom","property wrapper"
"subjectFrom","property wrapper"
"emailTextFrom","property wrapper"
"attachment1ContentsFrom","property wrapper"
"attachment2ContentsFrom","property wrapper"
"main","main"
"main","main"
"main","main"
"getHttpClientWithTimeout","literal wrapper"
"checkIPIsInGivenRange","literal wrapper"
"checkIPv4IsInRange","literal wrapper"
"checkIPv6IsInRange","literal wrapper"
"checkIPv4IsInRangeByConvertingToInt","literal wrapper"
"ipToLongInt","property wrapper"
"checkIPv6IsInRangeByIPv6library","literal wrapper"
"main","main"
"getLocalIpAddressUdp","literal wrapper"
"getLocalIpAddressSocket","literal wrapper"
"getPublicIpAddressAws","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"validateWithApacheCommons","literal wrapper"
"validateWithGuava","literal wrapper"
"validateWithRegex","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"contentAsString","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"givenEmplyURL_whenInitializeURL_thenSuccess","global-command literal"
"givenEmplyURL_whenInitializeURL_thenSuccess","global-command literal"
"start","global-command literal wrapper"
"start","global-command literal wrapper"
"start","global-command literal wrapper"
"runServer","literal wrapper"
"runClient","literal wrapper"
"openChannel","literal wrapper"
"bindChannel","literal wrapper"
"startClient","literal wrapper"
"sendMessage","wrapper"
"main","main"
"startServer","literal wrapper"
"receiveMessage","property wrapper"
"extractMessage","property wrapper"
"main","main"
"getExclusiveLockFromInputStream","literal wrapper"
"getExclusiveLockFromRandomAccessFile","literal wrapper"
"getExclusiveLockFromFileChannelOpen","property wrapper"
"getReadLockFromOutputStream","literal wrapper"
"getReadLockFromInputStream","literal wrapper"
"getReadLockFromRandomAccessFile","literal wrapper"
"start","global-command literal"
"stop","global-command literal wrapper"
"main","main"
"answerWithEcho","wrapper"
"register","wrapper"
"start","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"getTotalNumberOfLinesUsingBufferedReader","literal wrapper"
"getTotalNumberOfLinesUsingLineNumberReader","literal wrapper"
"getTotalNumberOfLinesUsingScanner","literal wrapper"
"getTotalNumberOfLinesUsingNIOFiles","literal wrapper"
"getTotalNumberOfLinesUsingNIOFilesReadAllLines","literal wrapper"
"getTotalNumberOfLinesUsingNIOFileChannel","literal wrapper"
"getTotalNumberOfLinesUsingApacheCommonsIO","literal wrapper"
"getTotalNumberOfLinesUsingGoogleGuava","literal wrapper"
"getInstance","global-command literal"
"main","main"
"main","main"
"start","literal wrapper"
"main","main"
"start","literal wrapper"
"setup","global-command literal wrapper"
"setup","literal wrapper"
"cleanup","literal wrapper"
"isPrime","predicate wrapper"
"isPrimeByBigInteger","literal wrapper"
"lcm","property wrapper"
"gcd","property wrapper"
"lcm","property wrapper"
"lcmForArray","property wrapper"
"lcmByLambda","literal wrapper"
"getPrimeFactors","literal wrapper"
"lcm","property wrapper"
"lcm","property wrapper"
"main","main"
"main","main"
"sieveOfEratosthenes","property global-command wrapper"
"primeNumbersBruteForce","property wrapper"
"isPrimeBruteForce","predicate"
"primeNumbersTill","literal wrapper"
"isPrime","literal wrapper"
"nthFibonacciTermRecursiveMethod","property wrapper"
"nthFibonacciTermIterativeMethod","property"
"nthFibonacciTermUsingBinetsFormula","literal wrapper"
"withBigDecimal","property wrapper"
"withMathRound","literal wrapper"
"withDecimalFormatPattern","property wrapper"
"withDecimalFormatLocal","literal wrapper"
"withStringFormat","literal wrapper"
"byPaddingZeros","literal wrapper"
"withTwoDecimalPlaces","literal wrapper"
"withLargeIntegers","literal wrapper"
"forPercentages","literal wrapper"
"currencyWithChosenLocalisation","literal wrapper"
"currencyWithDefaultLocalisation","literal wrapper"
"convertIntegerToBinary","property wrapper"
"getRandomWithExclusionUsingMathRandom","property wrapper"
"getRandomNumberWithExclusionUsingNextInt","property wrapper"
"parseStringToOptionalDouble","property wrapper"
"parseStringToDouble","property wrapper"
"parseStringToDouble","property wrapper"
"tryStringToDouble","literal wrapper"
"main","main"
"isAutomorphicUsingMath","predicate wrapper"
"isAutomorphicUsingLoop","predicate"
"booleanPrimitiveToInt","property"
"booleanPrimitiveToIntTernary","property"
"booleanObjectToInt","literal wrapper"
"booleanObjectToIntInverse","literal wrapper"
"booleanObjectMethodToInt","property wrapper"
"booleanObjectMethodToIntInverse","property wrapper"
"booleanUtilsToInt","literal wrapper"
"bitwiseBooleanToInt","literal wrapper"
"longToIntCast","property"
"longToIntJavaWithMath","literal wrapper"
"longToIntJavaWithLambda","literal wrapper"
"longToIntBoxingValues","literal wrapper"
"longToIntGuava","literal wrapper"
"longToIntGuavaSaturated","literal wrapper"
"longToIntWithBigDecimal","literal wrapper"
"toHumanReadableBinaryPrefixes","property wrapper"
"toHumanReadableSIPrefixes","property wrapper"
"formatSize","property wrapper"
"toHumanReadableBinaryPrefixesWithEnum","property wrapper"
"toHumanReadableSIPrefixesWithEnum","property wrapper"
"toHumanReadableByNumOfLeadingZeros","property wrapper"
"unitsInDescending","literal wrapper"
"unitsInDescending","literal wrapper"
"getRedColor","property"
"getGreenColor","property"
"getBlueColor","property"
"getAlfa","property"
"isPerfectSquareByUsingSqrt","predicate wrapper"
"isPerfectSquareByUsingBinarySearch","predicate wrapper"
"isPerfectSquareByUsingNewtonMethod","predicate"
"isPerfectSquareWithOptimization","predicate wrapper"
"generateNormalHeight","literal wrapper"
"probabilityOfHeightBetween","literal wrapper"
"reverseNumberWhileLoop","property wrapper"
"reverseNumberForLoop","property wrapper"
"reverseNumberRecWrapper","property wrapper"
"reverseNumberRec","property wrapper"
"largerThanLongAssertionSet","wrapper"
"usingStandardWay","predicate"
"usingTernaryOperator","predicate"
"usingOptional","literal wrapper"
"usingObjectUtils","literal wrapper"
"isArmstrong","predicate wrapper"
"digitsInList","property wrapper"
"getA005188Sequence","property wrapper"
"isEven","predicate"
"isOdd","predicate"
"isOrEven","predicate"
"isOrOdd","predicate"
"isAndEven","predicate"
"isAndOdd","predicate"
"isXorEven","predicate"
"isXorOdd","predicate"
"isLsbEven","literal wrapper"
"isLsbOdd","literal wrapper"
"getAllFactorsVer1","property wrapper"
"getAllFactorsVer2","property wrapper"
"getAllFactorsVer3","property wrapper"
"isInClosedRange","literal wrapper"
"isInOpenRange","literal wrapper"
"isInOpenClosedRange","literal wrapper"
"isInClosedOpenRange","literal wrapper"
"isInClosedRange","literal wrapper"
"isInOpenRange","literal wrapper"
"isInOpenClosedRange","literal wrapper"
"isInClosedOpenRange","literal wrapper"
"isInClosedRange","predicate"
"isInOpenRange","predicate"
"isInOpenClosedRange","predicate"
"isInClosedOpenRange","predicate"
"isInClosedRange","literal wrapper"
"isInOpenRange","literal wrapper"
"isInOpenClosedRange","literal wrapper"
"isInClosedOpenRange","literal wrapper"
"byOperator","property"
"bySignum","literal wrapper"
"bySignum","literal wrapper"
"absDiff","literal wrapper"
"absDiff2","literal wrapper"
"absDiffAsLong","literal wrapper"
"main","main"
"sqrt","property wrapper"
"sqrt","property wrapper"
"main","main"
"integerToHex","property wrapper"
"fromString","property wrapper"
"convertPhoneNumberInWordsToNumber","property wrapper"
"convertPhoneNumberInWordsToNumber","property wrapper"
"getWordAsMultiplier","property"
"getWordAsDigit","property"
"decimalToTwosComplementBinary","property wrapper"
"performTwosComplement","property wrapper"
"formatInNibbles","property wrapper"
"canRepresentInNBits","predicate wrapper"
"decimalToTwosComplementBinaryUsingShortCut","property wrapper"
"performTwosComplementUsingShortCut","property wrapper"
"decimalCompareToProvider","literal wrapper"
"decimalEqualsProvider","literal wrapper"
"decimalProvider","literal wrapper"
"numbersWithDifferentScaleProvider","literal wrapper"
"numbersWithSameScaleProvider","literal wrapper"
"main","main"
"calculateArea","unclassified"
"convertDecimalToFractionUsingMultiplyingWithPowerOf10","property wrapper"
"gcd","property wrapper"
"convertDecimalToFractionUsingGCD","property wrapper"
"convertDecimalToFractionUsingApacheCommonsMath","literal wrapper"
"extractRepeatingDecimal","property wrapper"
"convertDecimalToFractionUsingGCDRepeating","literal wrapper"
"findPermutations","wrapper"
"usingPermutation","property wrapper"
"usingSorting","literal wrapper"
"usingTwoPointer","literal wrapper"
"swap","command"
"reverse","wrapper"
"main","main"
"calculateOnesComplementUsingBitwiseNot","property"
"calculateOnesComplementUsingXOROperator","property"
"calculateOnesComplementUsingBigInteger","property wrapper"
"isPowerOfTwoUsingLogarithm","literal wrapper"
"isPowerOfTwoUsingBitwiseOperations","predicate"
"isPowerOfTwoUsingLoopDivision","predicate"
"isPowerOfTwoUsingHighestOneBit","predicate wrapper"
"usingTypeCasting","property"
"usingIntegerValueOf","literal wrapper"
"usingByteIntValue","literal wrapper"
"usingMathToIntExact","literal wrapper"
"usingByteUnsignedInt","literal wrapper"
"main","main"
"isTooSmall","literal wrapper"
"isTooBig","literal wrapper"
"numToLetterBySubstr","property wrapper"
"numToLetterByAsciiCode","property"
"calculateTotalAmount","property wrapper"
"main","main"
"main","main"
"round","property wrapper"
"roundNotPrecise","property wrapper"
"roundAvoid","literal wrapper"
"main","main"
"main","main"
"main","main"
"findPairsWithForLoop","property wrapper"
"findPairsWithStreamApi","literal wrapper"
"findPairsWithForLoop","property wrapper"
"findPairsWithStreamApi","literal wrapper"
"getExistingPairs","literal wrapper"
"getDifferentPairs","literal wrapper"
"generateSecureRandomValues","literal wrapper"
"getSecureRandomForAlgorithm","property wrapper"
"truncateByCast","literal wrapper"
"roundWithStringFormat","literal wrapper"
"truncateWithNumberFormat","literal wrapper"
"roundWithNumberFormat","literal wrapper"
"truncateWithDecimalFormat","literal wrapper"
"roundWithDecimalFormat","literal wrapper"
"lowestIntegers","literal"
"highestIntegers","literal"
"randomIntegers","literal"
"main","main"
"main","main"
"changeUserName","literal wrapper"
"findUserByName","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"serializeObject","wrapper"
"or","property wrapper"
"getCustomMessage","literal wrapper"
"getCustomMessageGuava","literal wrapper"
"main","main"
"currentDirectoryUsingSystemProperties","literal wrapper"
"currentDirectoryUsingPaths","literal wrapper"
"currentDirectoryUsingFileSystems","literal wrapper"
"currentDirectoryUsingFile","literal wrapper"
"main","main"
"buildAudioFormatInstance","literal"
"main","main"
"main","main"
"sum","property"
"main","main"
"infoOfCurrentProcess","literal wrapper"
"infoOfSpawnProcess","literal wrapper"
"infoOfLiveProcesses","literal wrapper"
"infoOfChildProcess","literal wrapper"
"infoOfExitCallback","literal wrapper"
"compileAndRunJavaProgram","literal wrapper"
"getErrorStreamExample","literal wrapper"
"creatingNewProcess","literal wrapper"
"filterProcessWithStreamsInSpecificRangeReturnCount","literal wrapper"
"destroyingProcessCreatedBySameProcess","literal wrapper"
"destroyingProcessCreatedByDifferentProcess","literal wrapper"
"waitForExample","literal wrapper"
"exitValueExample","literal wrapper"
"destroyExample","literal wrapper"
"destroyForciblyExample","literal wrapper"
"outputStreamDemo","literal wrapper"
"getClassPath","literal wrapper"
"getJavaCmd","literal wrapper"
"getMainClass","literal wrapper"
"getSystemProperties","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"longRunningTask","literal wrapper"
"generateList","literal wrapper"
"main","main"
"main","main"
"generateRandomNumber","literal wrapper"
"main","main"
"userUsingService","literal wrapper"
"generateUser","literal wrapper"
"tenMegabytes","literal"
"main","main"
"main","main"
"dumpHeap","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"parse","property wrapper"
"main","main"
"execute","property wrapper"
"getSimpleInnerClassObj","literal"
"main2","literal wrapper"
"main","main"
"read","literal wrapper"
"main","main"
"main","main"
"addRandomDataToList","literal wrapper"
"main","main"
"main","main"
"threadDump","literal wrapper"
"loadProperties","literal wrapper"
"indexOf","literal wrapper"
"indexOf","property"
"greeting","literal wrapper"
"goodBye","literal wrapper"
"getAuthorName","literal"
"getAuthorName","literal"
"getLocalDate","literal wrapper"
"getLocalTime","literal wrapper"
"validateAndDouble","property wrapper"
"doubleInteger","property"
"main","main"
"logConstructors","wrapper"
"formatConstructorSignature","property wrapper"
"getNullPropertiesList","literal wrapper"
"nulls","literal wrapper"
"defer","property wrapper"
"defer","wrapper"
"defer","property wrapper"
"defer","wrapper"
"defer","wrapper"
"defer","wrapper"
"initializeReflectionsLibrary","global-command literal"
"getAllExtendedOrImplementedInterfacesRecursively","property wrapper"
"findWordsInMixedCase","literal wrapper"
"sentenceCase","property wrapper"
"capitalizeMyTitle","property wrapper"
"capitalizeFirst","property wrapper"
"replaceTitleCaseWithLowerCase","property wrapper"
"convert","property wrapper"
"replaceTokens","property wrapper"
"main","main"
"main","main"
"runTest","global-command literal wrapper"
"runTest","global-command literal wrapper"
"countDigits","literal wrapper"
"findIntegers","literal wrapper"
"findDecimalNums","literal wrapper"
"hasNextBasic","literal wrapper"
"hasNextWithDelimiter","literal wrapper"
"hasNextWithDelimiterFixed","literal wrapper"
"addLineNumber","literal wrapper"
"printHeader","literal wrapper"
"main","main"
"setLogger","literal wrapper"
"produceSkippingNextLineMethod","literal wrapper"
"fixSkippingNextLineMethodV1","literal wrapper"
"fixSkippingNextLineMethodV2","literal wrapper"
"fixSkippingNextLineMethodV3","literal wrapper"
"main","main"
"readFileV1","literal wrapper"
"readFileV2","literal wrapper"
"readFileV3","literal wrapper"
"readFileV4","literal wrapper"
"getChecksumCRC32","literal wrapper"
"getChecksumCRC32","property wrapper"
"main","main"
"hashWithJavaMessageDigest","property wrapper"
"hashWithBouncyCastle","property wrapper"
"HashWithJavaMessageDigest","property wrapper"
"hashWithGuava","literal wrapper"
"HashWithApacheCommons","literal wrapper"
"HashWithBouncyCastle","property wrapper"
"hashWithJavaMessageDigestJDK9","property wrapper"
"hashWithJavaMessageDigest","property wrapper"
"hashWithApacheCommonsJDK9","literal wrapper"
"hashWithBouncyCastle","property wrapper"
"bytesToHex","property wrapper"
"main","main"
"main","main"
"iterations","property"
"pbkdf2","literal wrapper"
"hashSimple","property wrapper"
"readPKCS8PrivateKey","property wrapper"
"readX509PublicKey","property wrapper"
"main","main"
"getCertObject","literal wrapper"
"getThumbprint","property wrapper"
"getThumbprintWithApache","property wrapper"
"encryptAndDecryptUsingDifferentKeys","literal wrapper"
"encryptAndDecryptUsingDifferentAlgorithms","literal wrapper"
"encryptAndDecryptUsingDifferentPaddings","literal wrapper"
"encryptAndDecryptUsingSamePaddingKeyAndAlgorithm","literal wrapper"
"encryptWithoutPadding","literal wrapper"
"decryptTextThatIsNotEncrypted","literal wrapper"
"encryptUsingIv","property wrapper"
"decryptUsingCBCWithNoIV","literal wrapper"
"decryptUsingCBCWithIV","literal wrapper"
"encryptWithKeyTooShort","literal wrapper"
"encryptWithKeyTooLong","literal wrapper"
"getCipherInstanceWithBadAlgorithm","literal wrapper"
"getCipherInstanceWithBadAlgorithmMode","literal wrapper"
"getCipherInstanceWithBadPadding","literal wrapper"
"getCipherInstanceWithValidAlgorithm","literal wrapper"
"generateKey","literal wrapper"
"getKeyForText","property wrapper"
"getFixedKey","literal wrapper"
"getIV","literal wrapper"
"getIVSecureRandom","literal wrapper"
"getIVInternal","property wrapper"
"getRandomIVWithSize","property wrapper"
"encryptWithPadding","literal wrapper"
"decryptWithPadding","literal wrapper"
"hmacWithJava","property wrapper"
"hmacWithApacheCommons","literal wrapper"
"hmacWithBouncyCastle","property wrapper"
"getHashDigest","property"
"bytesToHex","property wrapper"
"main","main"
"encrypt","wrapper"
"getRandomKey","property wrapper"
"getSecureRandomKey","property wrapper"
"getKeyFromKeyGenerator","literal wrapper"
"getPasswordBasedKey","literal wrapper"
"generateKey","literal wrapper"
"getKeyFromPassword","property wrapper"
"convertSecretKeyToString","property wrapper"
"convertStringToSecretKeyto","literal wrapper"
"generateSalt16Byte","literal wrapper"
"getRootCertificate","literal wrapper"
"findIssuerCertificate","property wrapper"
"isRoot","predicate wrapper"
"enableSSLDebugUsingSystemProperties","literal wrapper"
"makeHttpsRequest","literal wrapper"
"addAdditionalTrustStore","property wrapper"
"main","main"
"initializeKeyManager","property wrapper"
"initializeKeyManager","literal wrapper"
"encrypt","property wrapper"
"decrypt","literal wrapper"
"generateKey","literal wrapper"
"getKeyFromPassword","property wrapper"
"generateIv","literal wrapper"
"encryptFile","literal wrapper"
"decryptFile","literal wrapper"
"encryptObject","literal wrapper"
"decryptObject","property wrapper"
"encryptPasswordBased","property wrapper"
"decryptPasswordBased","literal wrapper"
"generateSecureRandomValues","literal wrapper"
"getSecureRandomForAlgorithm","property wrapper"
"main","main"
"main","main"
"main","main"
"getHost","unclassified"
"getPort","literal wrapper"
"startClient","literal wrapper"
"main","main"
"startServer","literal wrapper"
"main","main"
"getSerialVersionUID","literal"
"main","main"
"main","main"
"deSerializeObjectFromString","literal wrapper"
"main","main"
"serializeObjectToString","literal wrapper"
"getInstance","literal"
"serialize","literal wrapper"
"deserialize","property wrapper"
"isSerializable","predicate wrapper"
"toImmutableList","literal wrapper"
"toImmutableList","literal wrapper"
"streamOf","property wrapper"
"insertInStream","property wrapper"
"main","main"
"convert","literal wrapper"
"main","main"
"userNames","literal wrapper"
"userNameList","literal wrapper"
"userNameSet","literal wrapper"
"userNameMap","literal wrapper"
"filterUserNames","literal wrapper"
"sortUserNames","literal wrapper"
"limitUserNames","literal wrapper"
"sortFilterLimitUserNames","literal wrapper"
"printStream","wrapper"
"modifyList","literal wrapper"
"modifyMap","literal wrapper"
"tryStreamTraversal","literal wrapper"
"main","main"
"main","main"
"findUniqueElementMatchingPredicate_WithReduction","property wrapper"
"getUniqueElementMatchingPredicate_WithReduction","property wrapper"
"findUniqueElementMatchingPredicate_WithCollectingAndThen","property wrapper"
"findUniqueElement","property wrapper"
"getUniqueElementMatchingPredicate_WithCollectingAndThen","property wrapper"
"getUniqueElement","property wrapper"
"createStreamExample","literal wrapper"
"convertToStringArray","literal wrapper"
"convertToStringArray","literal wrapper"
"convertToStringArrayWithBoxing","literal wrapper"
"convertToString","literal wrapper"
"findMaxDateOf","property wrapper"
"findMaxDateOfWithComparator","property wrapper"
"findMaxDateOfLocalEvents","property wrapper"
"findMaxDateOfLocalEventsWithComparator","property wrapper"
"batchStreamOf","property wrapper"
"stream","literal wrapper"
"of","property wrapper"
"mapper","property wrapper"
"collector","literal wrapper"
"main","main"
"createEmptyStreams","literal wrapper"
"checkForEmptyStreamUsingSupplier","literal wrapper"
"partitionList","property wrapper"
"partitionUsingGuava","literal wrapper"
"partitionStream","property wrapper"
"partitionBySize","property wrapper"
"main","main"
"processThrowsExAndNoOutput","wrapper"
"callProcessThrowsExAndNoOutput","literal wrapper"
"processReturnsExAndOutput","literal wrapper"
"processExceptions","wrapper"
"handleExceptionsAndOutputs","wrapper"
"handleExAndResults","property wrapper"
"handleErrorsAndOutputForEither","property wrapper"
"handleErrorsAndOutputForResult","property wrapper"
"testSource","literal wrapper"
"main","main"
"collectStreamOfEmptyListToAnotherList","literal wrapper"
"createStreamFromEmptyList","literal wrapper"
"printNameLengths","wrapper"
"getList","literal"
"mergeMapsUsingLoop","property wrapper"
"mergeMapsUsingStream","property wrapper"
"setup","global-command literal"
"main","main"
"differentSourceArrayListSequential","literal wrapper"
"differentSourceArrayListParallel","literal wrapper"
"differentSourceLinkedListSequential","literal wrapper"
"differentSourceLinkedListParallel","literal wrapper"
"textFileSearchSequential","literal wrapper"
"textFileSearchParallel","literal wrapper"
"localityIntArraySequential","literal wrapper"
"localityIntArrayParallel","literal wrapper"
"localityIntegerArraySequential","literal wrapper"
"localityIntegerArrayParallel","literal wrapper"
"mergingCostsSumSequential","literal wrapper"
"mergingCostsSumParallel","literal wrapper"
"mergingCostsGroupingSequential","literal wrapper"
"mergingCostsGroupingParallel","literal wrapper"
"main","main"
"main","main"
"sourceSplittingIntStreamSequential","literal wrapper"
"sourceSplittingIntStreamParallel","literal wrapper"
"main","main"
"main","main"
"average","literal wrapper"
"divideListElements","property wrapper"
"divideListElementsWithExtractedTryCatchBlock","property wrapper"
"divideListElementsWithApplyFunctionMethod","property wrapper"
"divide","property wrapper"
"applyFunction","property wrapper"
"init","global-command literal wrapper"
"toImmutableSet","literal"
"main","main"
"doWhileOldWay","literal wrapper"
"doWhileStreamWay","literal wrapper"
"getLastElementUsingReduce","property wrapper"
"getInfiniteStreamLastElementUsingReduce","literal wrapper"
"getLastElementUsingSkip","property wrapper"
"getEvenIndexedStrings","literal wrapper"
"getEvenIndexedStrings","property wrapper"
"getOddIndexedStrings","property wrapper"
"getOddIndexedStrings","literal wrapper"
"getOddIndexedStringsVersionTwo","literal wrapper"
"add","property"
"getSumUsingCustomizedAccumulator","property wrapper"
"getSumUsingJavaAccumulator","property wrapper"
"getSumUsingReduce","property wrapper"
"getSumUsingCollect","property wrapper"
"getSumUsingSum","property wrapper"
"getSumOfMapValues","property wrapper"
"getSumIntegersFromString","property wrapper"
"getSumUsingCustomizedAccumulator","property wrapper"
"getSumUsingJavaAccumulator","property wrapper"
"getSumUsingReduce","property wrapper"
"getSumUsingCollect","property wrapper"
"getSumUsingSum","property wrapper"
"padLeftSpaces","property wrapper"
"padLeft","property wrapper"
"padLeftZeros","literal wrapper"
"removeLastChar","property wrapper"
"removeLastCharRegex","property wrapper"
"removeLastCharOptional","literal wrapper"
"removeLastCharRegexOptional","literal wrapper"
"removeLeadingZeroesWithStringBuilder","literal wrapper"
"removeTrailingZeroesWithStringBuilder","literal wrapper"
"removeLeadingZeroesWithSubstring","property wrapper"
"removeTrailingZeroesWithSubstring","property wrapper"
"removeLeadingZeroesWithApacheCommonsStripStart","property wrapper"
"removeTrailingZeroesWithApacheCommonsStripEnd","property wrapper"
"removeLeadingZeroesWithGuavaTrimLeadingFrom","property wrapper"
"removeTrailingZeroesWithGuavaTrimTrailingFrom","property wrapper"
"removeLeadingZeroesWithRegex","property wrapper"
"removeTrailingZeroesWithRegex","property wrapper"
"countWordsUsingRegex","property wrapper"
"countWordsUsingTokenizer","property wrapper"
"countWordsManually","property wrapper"
"isAllowedInWord","predicate wrapper"
"isMatchingRegex","literal wrapper"
"checkString","predicate wrapper"
"leadingZeroTestProvider","literal wrapper"
"trailingZeroTestProvider","literal wrapper"
"main","main"
"byStream","property wrapper"
"byMap","property global-command wrapper"
"byBucket","property wrapper"
"patternMatches","literal wrapper"
"findFirstInteger","property wrapper"
"containsOnlySubstrings","predicate wrapper"
"containsOnlySubstringsEfficient","predicate wrapper"
"rotateString1","property wrapper"
"rotateString2","property wrapper"
"rotatedFrom","predicate wrapper"
"containsWordsIndexOf","predicate wrapper"
"containsWords","predicate wrapper"
"containsWordsAhoCorasick","predicate wrapper"
"containsWordsPatternMatch","predicate wrapper"
"containsWordsJava8","predicate wrapper"
"containsWordsArray","predicate wrapper"
"isPangram","predicate wrapper"
"isPangramWithStreams","predicate wrapper"
"isPerfectPangram","predicate wrapper"
"reverse","property wrapper"
"reverseUsingStringBuilder","property wrapper"
"reverseUsingApacheCommons","literal wrapper"
"reverseTheOrderOfWords","property wrapper"
"reverseTheOrderOfWordsUsingApacheCommons","literal wrapper"
"reverseUsingIntStreamRangeMethod","property wrapper"
"reverseUsingStreamOfMethod","property wrapper"
"reverseUsingCharsMethod","property wrapper"
"main","main"
"loadStopwords","global-command literal wrapper"
"main","main"
"getLabel","literal wrapper"
"run","wrapper"
"getLabel","literal wrapper"
"run","wrapper"
"getLabel","literal wrapper"
"run","wrapper"
"compare","predicate wrapper"
"nthIndexOf","property wrapper"
"nthIndexOf2","property wrapper"
"nthOccurrenceIndex","property wrapper"
"main","main"
"streamTokenizerWithDefaultConfiguration","literal wrapper"
"streamTokenizerWithCustomConfiguration","literal wrapper"
"createReaderFromFile","literal wrapper"
"main","main"
"main","main"
"toCamelCaseByIteration","property wrapper"
"toCamelCaseBySplitting","property wrapper"
"toCamelCaseBySplittingUsingStreams","property wrapper"
"toCamelCaseByRegex","property wrapper"
"toCamelCaseUsingICU4J","property wrapper"
"toCamelCaseUsingGuava","property wrapper"
"toCamelCaseUsingApacheCommons","property wrapper"
"convertToTitleCaseIteratingChars","property wrapper"
"convertToTitleCaseSplitting","property wrapper"
"convertToTitleCaseIcu4j","property wrapper"
"convertToTileCaseWordUtilsFull","literal wrapper"
"convertToTileCaseWordUtils","literal wrapper"
"setUp","global-command literal wrapper"
"main","main"
"readFile","literal wrapper"
"convertToBinary","property wrapper"
"decodeText","property wrapper"
"main","main"
"whileLtrim","property wrapper"
"whileRtrim","property wrapper"
"checkStrings","literal wrapper"
"patternLtrim","literal wrapper"
"patternRtrim","literal wrapper"
"asciiToHex","property wrapper"
"hexToAscii","property wrapper"
"removeAccentsWithApacheCommons","literal wrapper"
"removeAccents","literal wrapper"
"unicodeValueOfNormalizedString","literal wrapper"
"normalize","property wrapper"
"toUnicode","property wrapper"
"toUnicode","literal wrapper"
"removeWithSubString","property wrapper"
"removeWithReplaceAllSimple","property wrapper"
"removeWithReplaceAllAdvanced","property wrapper"
"removeWithGuava","property wrapper"
"main","main"
"getFirstWordUsingSubString","property wrapper"
"getFirstWordUsingSplit","property wrapper"
"validateStringFilenameUsingIO","literal wrapper"
"validateStringFilenameUsingNIO2","literal wrapper"
"validateStringFilenameUsingContains","predicate wrapper"
"validateStringFilenameUsingRegex","predicate wrapper"
"getInvalidCharsByOS","literal wrapper"
"castToString","property"
"getStringRepresentation","property wrapper"
"compareVersions","property wrapper"
"correctAlphanumericFilenamesProvider","literal wrapper"
"filenamesWithInvalidWindowsChars","literal wrapper"
"filenamesWithInvalidUnixChars","literal wrapper"
"isInVowelsString","literal wrapper"
"isInVowelsString","literal wrapper"
"isVowelBySwitch","predicate"
"isVowelByRegex","literal wrapper"
"splitWithParser","property wrapper"
"splitWithRegex","property wrapper"
"splitWithGuava","literal wrapper"
"splitMultiLineWithOpenCSV","literal wrapper"
"main","main"
"concatenateUsingStringConcat","property wrapper"
"concatenateUsingCollectorsJoining","literal wrapper"
"concatenateUsingStringJoiner","property wrapper"
"concatenateUsingJoin","literal wrapper"
"concatenateUsingStringBuilder","property wrapper"
"concatenateUsingHelperMethod","property wrapper"
"concatenateUsingPlusOperator","property"
"getNonNullString","property"
"usingStringEndsWithMethod","predicate wrapper"
"usingStringMatchesMethod","predicate wrapper"
"usingStringRegionMatchesMethod","predicate wrapper"
"usingPatternClass","predicate wrapper"
"usingApacheCommonsLang","literal wrapper"
"format","property wrapper"
"usingSplitMethod","property wrapper"
"usingSubstringMethod","property wrapper"
"usingPattern","literal wrapper"
"usingGuava","literal wrapper"
"joinStringsWithLastCharAsDelimiter","literal wrapper"
"removeLastCharWithDeleteLastChar","property wrapper"
"removeLastCharWithSetLength","wrapper"
"joinStringsWithoutLastCharAsDelimiter","literal wrapper"
"joinStringsUsingJoin","literal wrapper"
"joinUsingStringJoiner","literal wrapper"
"joinUsingStringUtils","literal wrapper"
"usingSubstringMethod","property wrapper"
"usingSplitMethod","property wrapper"
"usingPattern","property wrapper"
"usingCodePointsMethod","property wrapper"
"usingLeftMethod","literal wrapper"
"usingTruncateMethod","literal wrapper"
"usingSplitter","property wrapper"
"checkUsingCharAtMethod","predicate wrapper"
"checkUsingIsDigitMethod","predicate wrapper"
"checkUsingPatternClass","predicate wrapper"
"checkUsingMatchesMethod","predicate wrapper"
"checkUsingCharMatcherInRangeMethod","predicate wrapper"
"checkUsingCharMatcherForPredicateMethod","predicate wrapper"
"main","main"
"isNonAlphanumeric","literal wrapper"
"containsNonAlphanumeric","literal wrapper"
"containsNonAlphanumeric","predicate wrapper"
"isNonAlphanumericAnyLangScript","predicate wrapper"
"isNonAlphanumericInLangScript","predicate wrapper"
"isNonAlphanumericAnyLangScriptV2","literal wrapper"
"prepareData","property"
"getFormatStr","property wrapper"
"concatByPlusBy100","wrapper"
"concatByPlusBy1000","wrapper"
"concatByJoinBy100","literal wrapper"
"concatByJoinBy1000","literal wrapper"
"concatByJoinBy10000","literal wrapper"
"concatByJoin","wrapper"
"concatByFormatBy100","literal wrapper"
"concatByFormatBy1000","literal wrapper"
"concatByFormatBy10000","literal wrapper"
"concatByFormat","wrapper"
"concatByStreamBy100","literal wrapper"
"concatByStreamBy1000","literal wrapper"
"concatByStreamBy10000","literal wrapper"
"concatByStream","wrapper"
"main","main"
"concatByPlusBy100","literal wrapper"
"concatByPlusBy1000","literal wrapper"
"concatByPlusBy10000","literal wrapper"
"concatByPlus","wrapper"
"concatByConcatBy100","literal wrapper"
"concatByConcatBy1000","literal wrapper"
"concatByConcatBy10000","literal wrapper"
"concatByConcat","wrapper"
"concatByJoinBy100","literal wrapper"
"concatByJoinBy1000","literal wrapper"
"concatByJoinBy10000","literal wrapper"
"concatByJoin","wrapper"
"concatByFormatBy100","literal wrapper"
"concatByFormatBy1000","literal wrapper"
"concatByFormatBy10000","literal wrapper"
"concatByFormat","wrapper"
"concatByStringJoinerBy100","literal wrapper"
"concatByStringJoinerBy1000","literal wrapper"
"concatByStringJoinerBy10000","literal wrapper"
"concatByStringJoiner","wrapper"
"concatByStringBufferBy100","literal wrapper"
"concatByStringBufferBy1000","literal wrapper"
"concatByStringBufferBy10000","literal wrapper"
"concatByStringBuffer","wrapper"
"concatByStringBuilderBy100","literal wrapper"
"concatByStringBuilderBy1000","literal wrapper"
"concatByStringBuilderBy10000","literal wrapper"
"concatByStringBuilder","wrapper"
"concatByStreamBy100","literal wrapper"
"concatByStreamBy1000","literal wrapper"
"concatByStreamBy10000","literal wrapper"
"concatByStream","wrapper"
"main","main"
"bruteForceCheck","predicate wrapper"
"sortAndThenCheck","predicate wrapper"
"useSetCheck","predicate wrapper"
"useStreamCheck","predicate wrapper"
"useStringUtilscheck","predicate wrapper"
"allUpper1","predicate wrapper"
"allLower1","predicate wrapper"
"allUpper2","predicate wrapper"
"allLower2","predicate wrapper"
"allUpper3","predicate wrapper"
"allLower3","predicate wrapper"
"parseString","property wrapper"
"usingCharacterToUpperCaseMethod","property wrapper"
"usingStringToUpperCaseMethod","property wrapper"
"usingStringUtilsClass","property wrapper"
"checkUsingMatchesMethod","predicate wrapper"
"checkUsingPatternClass","predicate wrapper"
"checkUsingReplaceAllMethod","predicate wrapper"
"checkUsingIsDigitMethod","predicate wrapper"
"checkUsingStreamApi","predicate wrapper"
"checkUsingApacheCommonsLang","literal wrapper"
"checkUsingGuava","predicate wrapper"
"main","main"
"simulateStringOverflow","literal wrapper"
"displayRuntimeMaxStringLength","literal wrapper"
"displayMaxStringLength","literal"
"main","main"
"countByCharacterRange","property wrapper"
"countByCharacterIsUpperLower","property wrapper"
"countByStreamAPI","property wrapper"
"getInitialUsingLoop","property wrapper"
"getInitialUsingStringTokenizer","property wrapper"
"getInitialUsingRegex","property wrapper"
"getInitialUsingStreamsAPI","property wrapper"
"englishToMorse","property wrapper"
"morseToEnglish","property wrapper"
"findLongestSymmetricSubstringUsingSymmetricApproach","property wrapper"
"main","main"
"main","main"
"main","main"
"join","literal wrapper"
"joinWithPrefixPostFix","literal wrapper"
"split","property wrapper"
"splitToListOfChar","property wrapper"
"arrayToMap","literal wrapper"
"main","main"
"getMimeBuffer","literal wrapper"
"isNumeric","predicate wrapper"
"javaCharArray","property wrapper"
"javaforLoop","property wrapper"
"java8forEach","property wrapper"
"javaCharacterIterator","literal wrapper"
"main","main"
"getHashCodeString","property wrapper"
"getHashCodeSBuffer","property wrapper"
"main","main"
"main","main"
"main","main"
"createCheck","literal wrapper"
"createIfCondition","property wrapper"
"createIfBlock","property wrapper"
"main","main"
"main","main"
"createSharedMemory","literal wrapper"
"getBufferAddress","property wrapper"
"main","main"
"run","literal wrapper"
"createSharedMemory","literal wrapper"
"getBufferAddress","property wrapper"
"main","main"
"getBufferAddress","property wrapper"
"createSharedMemory","literal wrapper"
"main","main"
"run","literal wrapper"
"getBufferAddress","property wrapper"
"createSharedMemory","literal wrapper"
"parseFile","literal wrapper"
"main","main"
"usingCustomFonts","literal wrapper"
"simulateRunningTask","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"generateType1UUID","literal wrapper"
"get64LeastSignificantBitsForVersion1","literal wrapper"
"get64MostSignificantBitsForVersion1","literal wrapper"
"generateType3UUID","property wrapper"
"generateType4UUID","literal wrapper"
"generateType5UUID","property wrapper"
"type5UUIDFromBytes","literal wrapper"
"constructType5UUID","property"
"bytesFromUUID","property wrapper"
"hexToByte","property wrapper"
"joinBytes","property wrapper"
"generateType5UUID","property wrapper"
"getLeastAndMostSignificantBitsVersion5","property"
"fillByteArray","command"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setupProtectedMode","literal wrapper"
"setup","global-command literal wrapper"
"providers","literal wrapper"
"provider","literal wrapper"
"provider","property wrapper"
"main","main"
"parseResult","property wrapper"
"constructQuote","property wrapper"
"broadcast","literal wrapper"
"depthFirstTraversal","property wrapper"
"breadthFirstTraversal","property wrapper"
"main","main"
"main","main"
"main","main"
"fileChose","literal wrapper"
"main","main"
"downloadAndSave","literal wrapper"
"extractTarArchive","wrapper"
"extractEntry","wrapper"
"main","main"
"main","main"
"setGifFileEditorInstance","global-command literal"
"setImageProcessorInstance","global-command literal wrapper"
"setJpgFileEditorInstance","global-command literal"
"setPngFileEditorInstance","global-command literal"
"main","main"
"main","main"
"main","main"
"main","main"
"logMemory","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setUp","global-command literal wrapper"
"main","main"
"deploy","literal wrapper"
"deploy","literal wrapper"
"load","literal"
"load","literal"
"getPreviouslyDeployedAddress","literal wrapper"
"deploy","literal wrapper"
"deploy","literal wrapper"
"load","literal"
"load","literal"
"start","literal wrapper"
"stop","literal wrapper"
"toBinary","property wrapper"
"toByteCode","property"
"main","main"
"createClient","literal wrapper"
"createClient","literal wrapper"
"createClientWithInterceptor","literal wrapper"
"createClient","literal wrapper"
"main","main"
"main","main"
"main","main"
"createFeatureType","literal wrapper"
"addLocations","literal wrapper"
"toFeature","property wrapper"
"addToLocationMap","wrapper"
"getNewShapeFile","literal wrapper"
"setDataStoreParams","property wrapper"
"writeToFile","wrapper"
"main","main"
"create","literal"
"builder","literal"
"builder","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"useGuava","literal wrapper"
"useHttpCore","literal wrapper"
"useHttpClientWithReflection","literal wrapper"
"hello","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getFormattedDate","literal wrapper"
"main","main"
"main","main"
"main","main"
"callGraphQLService","literal wrapper"
"callGraphQLService","literal wrapper"
"genId","literal wrapper"
"getUsers","property wrapper"
"createUser","literal wrapper"
"updateUser","literal wrapper"
"deleteUser","literal wrapper"
"retrieveUser","literal wrapper"
"searchName","literal wrapper"
"listUsers","literal wrapper"
"main","main"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"mockAllBooksTitleAuthorRequest","literal wrapper"
"mockAllBooksTitleRequest","literal wrapper"
"getFreePort","literal wrapper"
"main","main"
"initializeData","literal wrapper"
"toJSON","literal wrapper"
"initializeData","literal wrapper"
"main","main"
"toJSON","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"fetchBestPriceBid","property wrapper"
"fetchProviderPriceBid","property wrapper"
"handleEndpointException","wrapper"
"main","main"
"getServiceConfig","literal wrapper"
"broadcastMessage","literal wrapper"
"sendNotification","property wrapper"
"generateMessageID","literal wrapper"
"main","main"
"isPrime","predicate wrapper"
"main","main"
"main","main"
"main","main"
"fetchStockPriceBid","property wrapper"
"clean","literal wrapper"
"getFolderToWriteObject","literal wrapper"
"main","main"
"main","main"
"concatStreams","literal wrapper"
"main","main"
"main","main"
"main","main"
"assertStreamEquals","predicate wrapper"
"assertStreamEquals","predicate wrapper"
"assertStreamEquals","predicate wrapper"
"assertStreamEquals","predicate wrapper"
"getOrNull","literal wrapper"
"generateBigNumber","literal wrapper"
"getFactorial","property wrapper"
"getFibonacciNumber","property wrapper"
"main","main"
"main","main"
"main","main"
"compressImage","literal wrapper"
"compressImage","literal wrapper"
"resizeImage","literal wrapper"
"main","main"
"resizeImage","property wrapper"
"main","main"
"simpleResizeImage","literal wrapper"
"resizeImage","literal wrapper"
"main","main"
"resizeImage","literal wrapper"
"main","main"
"resizeImage","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"signImageImageProcessor","literal wrapper"
"signImageGraphics","literal wrapper"
"signImageGraphicsWithIterator","literal wrapper"
"signImageCenter","literal wrapper"
"signImageBottomRight","literal wrapper"
"signImageTopLeft","literal wrapper"
"signImageAdaptBasedOnImage","literal wrapper"
"createFontToFit","property wrapper"
"main","main"
"main","main"
"drawRect","wrapper"
"main","main"
"detectFace","wrapper"
"loadImage","literal wrapper"
"saveImage","literal wrapper"
"detectFace","literal wrapper"
"main","main"
"drawRectangle","wrapper"
"main","main"
"loadImage","literal wrapper"
"drawRectangle","wrapper"
"displayImage","wrapper"
"main","main"
"loadImage","literal wrapper"
"drawRectangle","wrapper"
"displayImage","literal wrapper"
"main","main"
"main","main"
"main","main"
"formatJson","property wrapper"
"JsonToCsv","literal wrapper"
"csvToJson","literal wrapper"
"JsonToFormattedCsv","literal wrapper"
"main","main"
"stream","literal wrapper"
"get","literal wrapper"
"get","literal wrapper"
"getString","literal wrapper"
"getJson","literal wrapper"
"jsonArrayToList","literal wrapper"
"jsonArrayToList2","literal wrapper"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"mockJsonRequest","literal wrapper"
"getFreePort","literal wrapper"
"forValues","literal wrapper"
"getExampleRoot","literal wrapper"
"printJsonFromFile","literal wrapper"
"readFile","property wrapper"
"main","main"
"serializeUser","literal wrapper"
"customSerialize","literal wrapper"
"customDeserialize","literal wrapper"
"jsonObject","literal wrapper"
"jsonComposer","literal wrapper"
"objectSerialization","literal wrapper"
"objectAnnotationSerialization","literal wrapper"
"customObjectSerialization","literal wrapper"
"objectDeserialization","literal wrapper"
"customObjectDeserialization","literal wrapper"
"main","main"
"setUp","literal wrapper"
"tearDown","literal wrapper"
"main","main"
"main","main"
"listEngines","literal wrapper"
"rgbToInt","property wrapper"
"rgbToInt","property wrapper"
"intToRgb","property"
"clamp","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"readStudent","literal wrapper"
"getObjectMapperWithValidation","literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"beforeClass","global-command literal wrapper"
"main","main"
"setupLocale","global-command literal wrapper"
"resetLocale","literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"havingMessage","property wrapper"
"havingPropertyPath","property wrapper"
"setupValidatorInstance","global-command literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"setupValidatorInstance","global-command literal wrapper"
"unmarshalDates","literal wrapper"
"unmarshalDatesUsingCustomXmlAdapter","literal wrapper"
"unmarshalDatesUsingJava8","literal wrapper"
"getInputStream","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"buildStats","literal wrapper"
"countLines","property wrapper"
"generateReport","property wrapper"
"impossibleToMutateThisInStaticMethod","empty"
"main","main"
"main","main"
"createSampleGitRepo","literal wrapper"
"openJGitRepository","literal wrapper"
"createNewRepository","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"logApplicationStartup","wrapper"
"addDefaultProfile","wrapper"
"getActiveProfiles","property wrapper"
"getCurrentUserLogin","literal wrapper"
"getCurrentUserJWT","literal wrapper"
"isAuthenticated","literal wrapper"
"isCurrentUserInRole","literal wrapper"
"generatePassword","literal wrapper"
"generateActivationKey","literal wrapper"
"generateResetKey","literal wrapper"
"checkPasswordLength","predicate wrapper"
"getAlertParameters","literal wrapper"
"toParamMap","property wrapper"
"toProblemParameters","literal wrapper"
"createAlert","literal wrapper"
"createEntityCreationAlert","literal wrapper"
"createEntityUpdateAlert","literal wrapper"
"createEntityDeletionAlert","literal wrapper"
"createFailureAlert","literal wrapper"
"generatePaginationHttpHeaders","property wrapper"
"generateUri","literal wrapper"
"createEntity","literal wrapper"
"createObjectMapper","literal wrapper"
"convertObjectToJsonBytes","literal wrapper"
"createByteArray","property wrapper"
"sameInstant","literal"
"equalsVerifier","wrapper"
"createFormattingConversionService","literal wrapper"
"createEntity","literal wrapper"
"createEntity","literal wrapper"
"main","main"
"logApplicationStartup","wrapper"
"getCurrentUserLogin","literal wrapper"
"extractPrincipal","property wrapper"
"getCurrentUserJWT","literal wrapper"
"isAuthenticated","literal wrapper"
"hasCurrentUserAnyOfAuthorities","literal wrapper"
"hasCurrentUserNoneOfAuthorities","literal wrapper"
"hasCurrentUserThisAuthority","literal wrapper"
"getAuthorities","property wrapper"
"getOrder","property wrapper"
"assertCarAllPropertiesEquals","literal wrapper"
"assertCarAllUpdatablePropertiesEquals","literal wrapper"
"assertCarAutoGeneratedPropertiesEquals","wrapper"
"assertCarUpdatableFieldsEquals","wrapper"
"assertCarUpdatableRelationshipsEquals","empty"
"getCarSample1","literal wrapper"
"getCarSample2","literal wrapper"
"getCarRandomSampleGenerator","literal wrapper"
"createValidToken","literal wrapper"
"createValidTokenForUser","literal wrapper"
"createTokenWithDifferentSignature","literal wrapper"
"createExpiredToken","literal wrapper"
"createInvalidToken","literal wrapper"
"createSignedInvalidJwt","literal wrapper"
"jwtEncoder","literal wrapper"
"getSecretKey","literal wrapper"
"calculateHMAC","property wrapper"
"createEntity","literal wrapper"
"createUpdatedEntity","literal wrapper"
"createByteArray","property wrapper"
"sameInstant","literal"
"asDecimal","property wrapper"
"sameNumber","literal"
"equalsVerifier","wrapper"
"createFormattingConversionService","literal wrapper"
"findAll","property wrapper"
"createUpdateProxyForBean","property wrapper"
"main","main"
"logApplicationStartup","wrapper"
"getCurrentUserLogin","literal wrapper"
"extractPrincipal","property wrapper"
"getCurrentUserJWT","literal wrapper"
"isAuthenticated","literal wrapper"
"hasCurrentUserAnyOfAuthorities","literal wrapper"
"hasCurrentUserNoneOfAuthorities","literal wrapper"
"hasCurrentUserThisAuthority","literal wrapper"
"getAuthorities","property wrapper"
"getOrder","property wrapper"
"createValidToken","literal wrapper"
"createValidTokenForUser","literal wrapper"
"createTokenWithDifferentSignature","literal wrapper"
"createExpiredToken","literal wrapper"
"createInvalidToken","literal wrapper"
"createSignedInvalidJwt","literal wrapper"
"jwtEncoder","literal wrapper"
"getSecretKey","literal wrapper"
"calculateHMAC","property wrapper"
"createByteArray","property wrapper"
"sameInstant","literal"
"asDecimal","property wrapper"
"sameNumber","literal"
"equalsVerifier","wrapper"
"createFormattingConversionService","literal wrapper"
"findAll","property wrapper"
"createUpdateProxyForBean","property wrapper"
"main","main"
"logApplicationStartup","wrapper"
"createLiquibaseDataSource","property wrapper"
"createOrderByFields","property wrapper"
"createOrderByField","property wrapper"
"camelCaseToSnakeCase","property wrapper"
"getColumns","literal wrapper"
"getCurrentUserLogin","literal wrapper"
"extractPrincipal","property wrapper"
"getCurrentUserJWT","literal wrapper"
"isAuthenticated","literal wrapper"
"hasCurrentUserAnyOfAuthorities","literal wrapper"
"hasCurrentUserNoneOfAuthorities","literal wrapper"
"hasCurrentUserThisAuthority","literal wrapper"
"isPasswordLengthInvalid","predicate wrapper"
"getOrder","property wrapper"
"assertAuthorityAllPropertiesEquals","literal wrapper"
"assertAuthorityAllUpdatablePropertiesEquals","literal wrapper"
"assertAuthorityAutoGeneratedPropertiesEquals","empty"
"assertAuthorityUpdatableFieldsEquals","wrapper"
"assertAuthorityUpdatableRelationshipsEquals","empty"
"getAuthoritySample1","literal wrapper"
"getAuthoritySample2","literal wrapper"
"getAuthorityRandomSampleGenerator","literal wrapper"
"createValidToken","literal wrapper"
"createValidTokenForUser","literal wrapper"
"createTokenWithDifferentSignature","literal wrapper"
"createExpiredToken","literal wrapper"
"createInvalidToken","literal wrapper"
"createSignedInvalidJwt","literal wrapper"
"jwtEncoder","literal wrapper"
"getSecretKey","literal wrapper"
"calculateHMAC","property wrapper"
"invalidUsers","literal wrapper"
"createInvalidUser","literal wrapper"
"createEntity","literal wrapper"
"createUpdatedEntity","literal wrapper"
"deleteEntities","wrapper"
"createByteArray","property wrapper"
"sameInstant","literal"
"asDecimal","property wrapper"
"sameNumber","literal"
"equalsVerifier","wrapper"
"findAll","property wrapper"
"createUpdateProxyForBean","property wrapper"
"createEntity","literal wrapper"
"deleteEntities","wrapper"
"initTestUser","property wrapper"
"main","main"
"logApplicationStartup","wrapper"
"getCurrentUserLogin","literal wrapper"
"extractPrincipal","property wrapper"
"getCurrentUserJWT","literal wrapper"
"isAuthenticated","literal wrapper"
"hasCurrentUserAnyOfAuthorities","literal wrapper"
"hasCurrentUserNoneOfAuthorities","literal wrapper"
"hasCurrentUserThisAuthority","literal wrapper"
"getAuthorities","property wrapper"
"isPasswordLengthInvalid","predicate wrapper"
"getOrder","property wrapper"
"assertAuthorityAllPropertiesEquals","literal wrapper"
"assertAuthorityAllUpdatablePropertiesEquals","literal wrapper"
"assertAuthorityAutoGeneratedPropertiesEquals","empty"
"assertAuthorityUpdatableFieldsEquals","wrapper"
"assertAuthorityUpdatableRelationshipsEquals","empty"
"getAuthoritySample1","literal wrapper"
"getAuthoritySample2","literal wrapper"
"getAuthorityRandomSampleGenerator","literal wrapper"
"createValidToken","literal wrapper"
"createValidTokenForUser","literal wrapper"
"createTokenWithDifferentSignature","literal wrapper"
"createExpiredToken","literal wrapper"
"createInvalidToken","literal wrapper"
"createSignedInvalidJwt","literal wrapper"
"jwtEncoder","literal wrapper"
"getSecretKey","literal wrapper"
"calculateHMAC","property wrapper"
"invalidUsers","literal wrapper"
"createInvalidUser","literal wrapper"
"createEntity","literal wrapper"
"createUpdatedEntity","literal wrapper"
"createByteArray","property wrapper"
"sameInstant","literal"
"asDecimal","property wrapper"
"sameNumber","literal"
"equalsVerifier","wrapper"
"createFormattingConversionService","literal wrapper"
"findAll","property wrapper"
"createUpdateProxyForBean","property wrapper"
"createEntity","literal wrapper"
"initTestUser","property wrapper"
"main","main"
"logApplicationStartup","wrapper"
"addDefaultProfile","wrapper"
"getActiveProfiles","property wrapper"
"gzipData","literal wrapper"
"getCurrentUserLogin","literal wrapper"
"isAuthenticated","literal wrapper"
"isCurrentUserInRole","literal wrapper"
"getAccessTokenCookie","literal wrapper"
"getRefreshTokenCookie","literal wrapper"
"getCookie","property wrapper"
"isRememberMe","predicate wrapper"
"getRefreshTokenValue","property wrapper"
"getAlertParameters","literal wrapper"
"toParamMap","property wrapper"
"toProblemParameters","literal wrapper"
"createAlert","literal wrapper"
"createEntityCreationAlert","literal wrapper"
"createEntityUpdateAlert","literal wrapper"
"createEntityDeletionAlert","literal wrapper"
"createFailureAlert","literal wrapper"
"generatePaginationHttpHeaders","property wrapper"
"generateUri","literal wrapper"
"createAccessToken","literal wrapper"
"createMockHttpServletRequest","literal wrapper"
"convertObjectToJsonBytes","literal wrapper"
"createByteArray","property wrapper"
"sameInstant","literal"
"equalsVerifier","wrapper"
"createFormattingConversionService","literal wrapper"
"main","main"
"logApplicationStartup","wrapper"
"addDefaultProfile","wrapper"
"getActiveProfiles","property wrapper"
"getCurrentUserLogin","literal wrapper"
"isAuthenticated","literal wrapper"
"isCurrentUserInRole","literal wrapper"
"getAlertParameters","literal wrapper"
"toParamMap","property wrapper"
"toProblemParameters","literal wrapper"
"createAlert","literal wrapper"
"createEntityCreationAlert","literal wrapper"
"createEntityUpdateAlert","literal wrapper"
"createEntityDeletionAlert","literal wrapper"
"createFailureAlert","literal wrapper"
"generatePaginationHttpHeaders","property wrapper"
"generateUri","literal wrapper"
"createEntity","literal wrapper"
"convertObjectToJsonBytes","literal wrapper"
"createByteArray","property wrapper"
"sameInstant","literal"
"equalsVerifier","wrapper"
"createFormattingConversionService","literal wrapper"
"main","main"
"logApplicationStartup","wrapper"
"addDefaultProfile","wrapper"
"getActiveProfiles","property wrapper"
"getCurrentUserLogin","literal wrapper"
"isAuthenticated","literal wrapper"
"isCurrentUserInRole","literal wrapper"
"generatePassword","literal wrapper"
"generateActivationKey","literal wrapper"
"generateResetKey","literal wrapper"
"checkPasswordLength","predicate wrapper"
"getAlertParameters","literal wrapper"
"toParamMap","property wrapper"
"toProblemParameters","literal wrapper"
"createAlert","literal wrapper"
"createEntityCreationAlert","literal wrapper"
"createEntityUpdateAlert","literal wrapper"
"createEntityDeletionAlert","literal wrapper"
"createFailureAlert","literal wrapper"
"generatePaginationHttpHeaders","property wrapper"
"generateUri","literal wrapper"
"convertObjectToJsonBytes","literal wrapper"
"createByteArray","property wrapper"
"sameInstant","literal"
"equalsVerifier","wrapper"
"createFormattingConversionService","literal wrapper"
"createEntity","literal wrapper"
"main","main"
"main","main"
"main","main"
"getProbe","literal wrapper"
"advanceProbe","wrapper"
"getUnsafe","literal wrapper"
"main","main"
"main","main"
"load","literal wrapper"
"serializeWithConfiguredGson","literal wrapper"
"serializeWithDefaultGson","literal wrapper"
"toJsonString","literal wrapper"
"fromJsonString","literal wrapper"
"make","literal"
"of","literal"
"of","literal"
"of","literal"
"data","literal"
"fromMockFile","literal wrapper"
"fromCustomers","property wrapper"
"fromCustomers","property wrapper"
"fromCustomers","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getJacksonHydraSerializerModule","literal wrapper"
"setUpOnce","global-command literal wrapper"
"loadJsonContent","global-command literal wrapper"
"manualJsonNodeToList","property wrapper"
"manualJsonNodeToMap","property wrapper"
"readValueJsonNodeToList","property wrapper"
"readValueJsonNodeToMap","property wrapper"
"convertValueJsonNodeToList","literal wrapper"
"convertValueJsonNodeToMap","literal wrapper"
"flatten","literal wrapper"
"flatten","property wrapper"
"jsonFileToMap","literal wrapper"
"jsonFileToMapGson","literal wrapper"
"setup","global-command literal wrapper"
"readFile","property wrapper"
"init","global-command literal wrapper"
"main","main"
"jsonArrayFromCDT","literal wrapper"
"cDTfromJSONArray","literal wrapper"
"jaOfJOFromCDT","literal wrapper"
"jaOfJOFromCDT2","literal wrapper"
"main","main"
"cookieStringToJSONObject","literal wrapper"
"jSONObjectToCookieString","literal wrapper"
"main","main"
"jSONObjectToHTTPHeader","literal wrapper"
"hTTPHeaderToJSONObject","literal wrapper"
"main","main"
"creatingJSONArray","literal wrapper"
"jsonArrayFromJSONString","literal"
"jsonArrayFromCollectionObj","literal wrapper"
"main","main"
"jsonFromJSONObject","literal wrapper"
"jsonFromMap","literal wrapper"
"jsonFromJSONString","literal wrapper"
"main","main"
"main","main"
"jsonFromDemoBean","literal wrapper"
"main","main"
"main","main"
"doAsync","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"createSelector","property wrapper"
"main","main"
"createSelector","property wrapper"
"main","main"
"main","main"
"jobCompleted","predicate wrapper"
"main","main"
"main","main"
"main","main"
"extractResourceVersionFromException","property wrapper"
"main","main"
"isPrime","literal wrapper"
"main","main"
"fromPrimary","property wrapper"
"loadTemplate","literal wrapper"
"loadTemplate","literal wrapper"
"main","main"
"listEngines","literal wrapper"
"main","main"
"main","main"
"main","main"
"find","property wrapper"
"find","property wrapper"
"find","literal wrapper"
"find","literal wrapper"
"main","main"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"cleanUp","literal wrapper"
"main","main"
"fibonacci","property wrapper"
"main","main"
"displayFactorial","literal wrapper"
"getFactorial","literal wrapper"
"factorial","property"
"cacheExchangeRates","global-command literal wrapper"
"divideByZero","literal"
"divideByZeroQuietly","global-command literal"
"processFile","literal wrapper"
"getAge","property wrapper"
"main","main"
"findViewWithKey","property wrapper"
"addSpringComponents","wrapper"
"findComponents","literal wrapper"
"addComponents","wrapper"
"addContainers","wrapper"
"exportToPlantUml","literal wrapper"
"getSoftwareSystem","literal wrapper"
"addStyles","wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"decodeSQLErrorCode","literal"
"createConnection","literal wrapper"
"createConnection","literal wrapper"
"createConnectionWithReportNoResponders","literal wrapper"
"createConnectionWithReportNoResponders","literal wrapper"
"convertMessageDataBytesToString","property wrapper"
"convertStringToBytes","property wrapper"
"filter","global-command literal wrapper"
"validate","global-command literal wrapper"
"startJob","literal wrapper"
"task","literal wrapper"
"initiate","literal wrapper"
"initiate","literal wrapper"
"initiate","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"throwError","literal"
"throwException","literal wrapper"
"main","main"
"assembleNeuralNetwork","literal wrapper"
"trainNeuralNetwork","wrapper"
"archive","literal wrapper"
"archiveAndCompress","literal wrapper"
"archiveAndCompress","wrapper"
"decompress","literal wrapper"
"decompress","wrapper"
"extract","literal wrapper"
"compressFile","literal wrapper"
"zip","wrapper"
"extractOne","wrapper"
"decodeWithApacheCommons","literal wrapper"
"decodeWithPlainJava","literal wrapper"
"tarFile","literal wrapper"
"tarGzFile","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"compressedArchive","literal wrapper"
"testFile","literal wrapper"
"main","main"
"startFileMonitor","literal wrapper"
"setValues","literal wrapper"
"setIndexedValue","literal wrapper"
"setMappedValue","literal wrapper"
"getNestedValue","literal wrapper"
"copyProperties","literal wrapper"
"getColumnsToFieldsMap","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"setUpUserInstance","global-command literal"
"setUpImmutablePairInstance","global-command literal"
"setUpImmutableTripleInstance","global-command literal"
"setUpMutableObject","global-command literal"
"setUpMutablePairInstance","global-command literal"
"setUpTripleInstance","global-command literal wrapper"
"main","main"
"premain","wrapper"
"sayHelloBar","literal"
"sayBar","literal"
"main","main"
"main","main"
"main","main"
"getDefault","literal"
"getDefault","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"from","property wrapper"
"main","main"
"main","main"
"startWordCount","property wrapper"
"main","main"
"main","main"
"parseString","literal wrapper"
"parseJSONFile","literal wrapper"
"parseYAMLFile","literal wrapper"
"printData","wrapper"
"setUp","global-command literal"
"get","global-command literal wrapper"
"convertToList","literal wrapper"
"init","global-command literal wrapper"
"finish","literal wrapper"
"main","main"
"main","main"
"insertAndDeleteInsideTransaction","literal wrapper"
"crudOperations","literal wrapper"
"queryCustomers","literal wrapper"
"getCustomer","literal"
"main","main"
"getEmployees","literal wrapper"
"main","main"
"main","main"
"initDatabaseUsingPlainJDBCWithURL","literal wrapper"
"initDatabaseUsingPlainJDBCWithFile","literal wrapper"
"initDatabaseUsingSpring","wrapper"
"getConnection","literal wrapper"
"fetchData","literal wrapper"
"main","main"
"main","main"
"main","main"
"createTestData","literal wrapper"
"defineDynamicPersistentUnit","global-command literal wrapper"
"queryUsingJDOQL","literal wrapper"
"queryUsingTypedJDOQL","literal wrapper"
"queryUsingSQL","literal wrapper"
"queryUsingJPQL","literal wrapper"
"namedQuery","literal wrapper"
"main","main"
"defineDynamicPersistentUnit","global-command literal wrapper"
"defineNamedPersistenceManagerFactory","global-command literal wrapper"
"definePersistenceManagerFactoryUsingPropertiesFile","global-command literal wrapper"
"closePersistenceManager","literal wrapper"
"persistObject","literal wrapper"
"queryPersonsInXML","literal wrapper"
"queryAnnotatedPersonsInXML","literal wrapper"
"main","main"
"getInstance","global-command literal"
"registerProperties","wrapper"
"getPort","literal wrapper"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"name","property"
"ValidateVersion","literal wrapper"
"getRootAsEffect","literal wrapper"
"getRootAsEffect","property wrapper"
"createEffect","property wrapper"
"startEffect","wrapper"
"addName","wrapper"
"addDamage","wrapper"
"endEffect","property wrapper"
"ValidateVersion","literal wrapper"
"getRootAsTerrain","literal wrapper"
"getRootAsTerrain","property wrapper"
"startTerrain","wrapper"
"addPos","wrapper"
"addName","wrapper"
"addColor","wrapper"
"addNavigation","wrapper"
"addEffects","wrapper"
"createEffectsVector","property wrapper"
"startEffectsVector","wrapper"
"endTerrain","property wrapper"
"finishTerrainBuffer","wrapper"
"finishSizePrefixedTerrainBuffer","wrapper"
"createVec3","property wrapper"
"main","main"
"addImageToParagraph","literal wrapper"
"readLineByLineExample","literal wrapper"
"readAllLinesExample","literal wrapper"
"writeLineByLineExample","literal wrapper"
"writeAllLinesExample","literal wrapper"
"simplePositionBeanExample","literal wrapper"
"namedColumnBeanExample","literal wrapper"
"writeCsvFromBeanExample","literal wrapper"
"main","main"
"beanBuilderExample","literal wrapper"
"writeCsvFromBean","property wrapper"
"readAllLines","literal wrapper"
"readLineByLine","literal wrapper"
"writeLineByLine","property wrapper"
"writeAllLines","property wrapper"
"fileOutAllPath","literal wrapper"
"fileOutBeanPath","literal wrapper"
"fileOutOnePath","literal wrapper"
"twoColumnCsvPath","literal wrapper"
"fourColumnCsvPath","literal wrapper"
"namedColumnCsvPath","literal wrapper"
"readFile","property wrapper"
"twoColumnCsvString","literal wrapper"
"fourColumnCsvString","literal wrapper"
"authorize","literal wrapper"
"getSheetsService","literal wrapper"
"registerAllExtensions","empty"
"registerAllExtensions","literal wrapper"
"getDescriptor","literal"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"newBuilder","literal wrapper"
"newBuilder","literal wrapper"
"getDescriptor","literal"
"getDefaultInstance","literal"
"parser","literal"
"getDescriptor","literal"
"setup","global-command literal wrapper"
"populateListOfUsers","literal wrapper"
"main","main"
"main","main"
"getObjectFromCache","wrapper"
"getFromCacheWithSQl","wrapper"
"customInitialization","literal wrapper"
"main","main"
"createDatabaseTables","wrapper"
"insertData","wrapper"
"getData","wrapper"
"main","main"
"employeeCache","literal wrapper"
"main","main"
"main","main"
"runTopology","literal wrapper"
"main","main"
"parseIniFile","literal wrapper"
"readIniFileValue","literal wrapper"
"parseIniFile","literal wrapper"
"readIniFileValue","literal wrapper"
"getTrustAllCertsClient","literal wrapper"
"main","main"
"main","main"
"startClient","global-command literal wrapper"
"startServer","global-command literal wrapper"
"init","literal wrapper"
"dispose","literal wrapper"
"init","literal wrapper"
"dispose","literal wrapper"
"init","literal wrapper"
"dispose","literal wrapper"
"init","literal wrapper"
"dispose","literal wrapper"
"setUp","global-command literal wrapper"
"run","literal wrapper"
"main","main"
"main","main"
"instance","global-command literal"
"main","main"
"main","main"
"createService","global-command literal wrapper"
"createService","property global-command wrapper"
"main","main"
"setup","literal wrapper"
"tearDown","literal wrapper"
"sendPlainTextEmail","literal wrapper"
"sendPlainTextEmailToMultipleRecipient","literal wrapper"
"sendEmailWithAttachment","literal wrapper"
"sendEmailWithMultipleAttachment","literal wrapper"
"sendHTMLTextWithEmbeddedImageEmail","literal wrapper"
"replyingToEmail","literal wrapper"
"forwardingEmail","literal wrapper"
"handleExceptionWhenSendingEmail","literal wrapper"
"setCustomHeaderWhenSendingEmail","literal wrapper"
"sendEmailWithDeliveryReadRecipient","literal wrapper"
"sendEmail","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"initializeTempDirectory","global-command literal wrapper"
"cleanTempDirectory","literal wrapper"
"writeToQueue","wrapper"
"main","main"
"main","main"
"signData","literal wrapper"
"verifSignData","literal wrapper"
"encryptData","property wrapper"
"decryptData","property wrapper"
"getPrivateKey","literal wrapper"
"getPublicKey","literal wrapper"
"sign","literal wrapper"
"verify","literal wrapper"
"signWithMessageDigestAndCipher","literal wrapper"
"verifyWithMessageDigestAndCipher","literal wrapper"
"readX509PublicKey","literal wrapper"
"readX509PublicKeySecondApproach","literal wrapper"
"readPKCS8PrivateKey","literal wrapper"
"readPKCS8PrivateKeySecondApproach","literal wrapper"
"main","main"
"instance","literal"
"main","main"
"listFolderStructure","property wrapper"
"main","main"
"listFolderStructure","literal wrapper"
"loginSftp","literal wrapper"
"loginPubKey","literal wrapper"
"executeCommand","property wrapper"
"scpUpload","wrapper"
"scpDownLoad","wrapper"
"SFTPUpload","wrapper"
"SFTPDownLoad","wrapper"
"localPortForwarding","property wrapper"
"remotePortForwarding","property wrapper"
"KeepAlive","literal wrapper"
"setUp","global-command literal wrapper"
"shutdownServer","literal wrapper"
"setupServer","literal wrapper"
"addAuthorizedKey","literal wrapper"
"main","main"
"messageLoop","global-command wrapper"
"main","main"
"id","property wrapper"
"parse","property wrapper"
"createBaseServer","literal wrapper"
"createWebAppServer","literal wrapper"
"createMultiHandlerServer","literal wrapper"
"sendHttpResponse","wrapper"
"main","main"
"main","main"
"main","main"
"isFree","literal wrapper"
"setup","global-command literal wrapper"
"cleanup","literal wrapper"
"setUp","literal"
"setUp","literal"
"setup","global-command literal wrapper"
"distinctByKey","property wrapper"
"main","main"
"transformMap","literal wrapper"
"getPersonListWithFakeValues","literal wrapper"
"fetchById","property wrapper"
"fetchByIdWithRandomDelay","property wrapper"
"fetchById","property wrapper"
"timed","property wrapper"
"main","main"
"start","global-command literal wrapper"
"toDTO","property wrapper"
"withInitialPoints","literal"
"formatDifference","property wrapper"
"setUp","global-command literal wrapper"
"initDatabaseTester","literal wrapper"
"initDataSet","literal wrapper"
"isAPositiveInteger","literal"
"idsAreGuids","property wrapper"
"retrieveResourceFromResponse","property wrapper"
"getGithubUserProfile","literal wrapper"
"displayed","literal"
"of","literal wrapper"
"googleSearchPage","literal wrapper"
"initClass","literal wrapper"
"destroyClass","literal wrapper"
"randomInt","literal wrapper"
"printLetters","property wrapper"
"main","main"
"main","main"
"getPersonPackageName","literal"
"main","main"
"getMeanScriptContent","literal wrapper"
"builder","literal"
"main","main"
"encodeAndWrite","property wrapper"
"readAndDecode","property wrapper"
"getStringFromInputStream","literal wrapper"
"timesTwoRegular","property"
"sortByLength","literal wrapper"
"connectS3","global-command literal"
"provideBasicData","literal"
"provideEdgeCaseData","literal"
"main","main"
"getRequestId","literal wrapper"
"main","main"
"main","main"
"main","main"
"collectSummaries","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"createAppender","literal"
"main","main"
"newInstance","literal"
"newBuilder","literal"
"createAppender","literal"
"main","main"
"tearDown","literal wrapper"
"setUp","literal wrapper"
"createConfiguration","property wrapper"
"setUp","literal wrapper"
"setup","literal wrapper"
"isValidJSON","literal wrapper"
"getConnection","literal wrapper"
"setUp","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"isValidJSON","literal wrapper"
"main","main"
"compute","literal"
"newClient","global-command literal"
"builder","literal wrapper"
"newClient","global-command literal"
"inchToCentimeter","property"
"poundToKilogram","property"
"getCarInstance","literal wrapper"
"getBusInstance","literal wrapper"
"main","main"
"suite","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"temp","literal"
"manufacture","literal wrapper"
"configureModel","wrapper"
"generateMainClass","property"
"generateFolders","property wrapper"
"main","main"
"removeDirectoryRecursively","literal wrapper"
"givenMavenInterface_whenCompileMavenProject_thenCreateTargetDirectory","literal wrapper"
"main","main"
"foo","literal"
"callFoo","literal wrapper"
"main","main"
"main","main"
"getNonAsciiString","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setup","literal wrapper"
"cleanup","literal wrapper"
"publishMessages","literal wrapper"
"installRedpanda","global-command literal wrapper"
"createAdminClient","literal wrapper"
"createTopic","literal wrapper"
"createProducer","literal wrapper"
"createConsumer","literal wrapper"
"publishMessage","wrapper"
"getBrokerUrl","literal wrapper"
"main","main"
"main","main"
"main","main"
"throughput","property"
"main","main"
"throughput","property"
"safeGet","property wrapper"
"main","main"
"safeGet","property wrapper"
"throughput","property"
"main","main"
"safeGet","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setUpConnection","global-command literal wrapper"
"destroyConnection","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"example","wrapper"
"main","main"
"main","main"
"isApple","predicate wrapper"
"main","main"
"main","main"
"setUp","global-command literal wrapper"
"main","main"
"startReport","literal wrapper"
"main","main"
"getMonitorTagValue","property wrapper"
"main","main"
"main","main"
"map","property wrapper"
"addValue","wrapper"
"map","property wrapper"
"map","literal wrapper"
"getStringFromJson","property wrapper"
"getIntFromJson","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"forToday","literal wrapper"
"main","main"
"main","main"
"main","main"
"map","property wrapper"
"addValue","wrapper"
"map","property wrapper"
"map","literal wrapper"
"getStringFromJson","property wrapper"
"getIntFromJson","property wrapper"
"main","main"
"main","main"
"main","main"
"consumeWithJsonb","literal wrapper"
"oneTimeSetup","global-command literal"
"main","main"
"define","global-command wrapper"
"href","literal wrapper"
"define","wrapper"
"json","literal"
"xml","literal"
"main","main"
"initDB","literal wrapper"
"checkAvailability","literal wrapper"
"createOrder","property wrapper"
"getOrder","literal wrapper"
"cancelOrder","wrapper"
"createPayment","property wrapper"
"cancelPayment","literal wrapper"
"makePayment","predicate wrapper"
"createShipment","property wrapper"
"cancelDelivery","literal wrapper"
"findDriver","literal wrapper"
"getMustacheFactory","literal"
"main","main"
"main","main"
"buildqlSessionFactory","literal wrapper"
"getSqlSessionFactory","literal"
"main","main"
"main","main"
"config","literal wrapper"
"getParameters","literal wrapper"
"config","literal wrapper"
"stageConfig","literal wrapper"
"beforeAll","literal wrapper"
"beforeAll","literal wrapper"
"afterAll","literal wrapper"
"start","global-command wrapper"
"stopJob","literal wrapper"
"setUp","global-command literal wrapper"
"main","main"
"main","main"
"toResponse","property wrapper"
"httpConnector","literal wrapper"
"createOrders","global-command literal wrapper"
"mongoDbProperties","wrapper"
"main","main"
"removeModelAndEntitiesFilter","literal wrapper"
"from","literal wrapper"
"recreateUserState","property wrapper"
"provider","literal"
"main","main"
"createContainer","literal wrapper"
"main","main"
"checkNotNull","unclassified"
"checkNotNull","unclassified"
"main","main"
"anyOrderLines","literal wrapper"
"orderLineItemsWorthNDollars","literal wrapper"
"getCreatedOrder","literal wrapper"
"getCompletedOrder","literal wrapper"
"main","main"
"getJpaUserDao","literal"
"getUser","literal wrapper"
"getAllUsers","literal wrapper"
"updateUser","literal wrapper"
"saveUser","literal wrapper"
"deleteUser","literal wrapper"
"main","main"
"initKey","literal wrapper"
"main","main"
"retrieveProductFromDatabase","literal wrapper"
"main","main"
"retrieveProductFromDatabase","literal wrapper"
"main","main"
"getService","literal wrapper"
"setUpUserDaoInstance","global-command literal"
"builder","literal"
"freeDelivery","literal"
"defaultDelivery","literal"
"simpleProcessing","literal wrapper"
"batchedProcessing","literal wrapper"
"main","main"
"assertDefaultConversion","wrapper"
"cloneAndMutate","property wrapper"
"cloneAndMutate","property wrapper"
"main","main"
"main","main"
"getRouterForMessage","property wrapper"
"main","main"
"primitiveSum","property"
"wrapperSum","property"
"goodSum","property"
"main","main"
"main","main"
"main","main"
"generateUuid","literal wrapper"
"getChainOfAuthProcessor","literal"
"setUpTextFileOperationExecutor","global-command literal"
"setUpTextFileInstance","global-command literal"
"setUpStandardComputerBuilderInstance","global-command literal"
"setUpHighEndComputerBuilderInstance","global-command literal"
"of","literal"
"getInstance","global-command literal"
"main","main"
"createWithDefaultCountry","literal"
"createWithLoggedInstantiationTime","literal wrapper"
"getSingletonInstance","global-command literal"
"main","main"
"getFactory","literal wrapper"
"main","main"
"main","main"
"main","main"
"getInstance","literal"
"main","main"
"main","main"
"createVehicle","literal wrapper"
"getOperation","literal wrapper"
"getInstance","global-command literal"
"main","main"
"getInstance","global-command literal"
"getInstance","global-command literal"
"getInstance","literal"
"getInstance","literal"
"createLetter","literal"
"builder","literal"
"getInstance","literal"
"getInstance","global-command literal"
"getInstance","literal"
"getInstance","literal"
"getInstance","global-command literal"
"getInstance","global-command literal"
"cleanUp","literal wrapper"
"cleanUp","literal wrapper"
"main","main"
"main","main"
"main","main"
"of","literal"
"main","main"
"configuration","literal wrapper"
"main","main"
"main","main"
"main","main"
"addRoute","wrapper"
"traditionalWireTapRoute","literal wrapper"
"newExchangeRoute","literal wrapper"
"process","literal wrapper"
"main","main"
"main","main"
"main","main"
"fibonacci","property wrapper"
"main","main"
"createBkClient","literal"
"createLedger","property wrapper"
"findLedgerByName","wrapper"
"collectLedgers","wrapper"
"listAllLedgers","property wrapper"
"initBkClient","global-command literal wrapper"
"setupTheCayenneContext","global-command literal wrapper"
"setupTheCayenneContext","global-command literal wrapper"
"main","main"
"runner","literal wrapper"
"isTableExists","predicate wrapper"
"setUp","global-command literal wrapper"
"getDataSource","literal wrapper"
"getBalance","property wrapper"
"getBalance","property wrapper"
"getBalance","property wrapper"
"main","main"
"getConnection","literal wrapper"
"runIfOpened","wrapper"
"runIfValid","wrapper"
"runIfConnectionValid","literal wrapper"
"isConnectionValid","predicate wrapper"
"getConnection","literal wrapper"
"getConnection","global-command literal wrapper"
"createPersonTable","literal wrapper"
"initializeStorageWithStringAsRoot","literal wrapper"
"initializeStorageWithCustomTypeAsRoot","literal wrapper"
"initializeStorageWithCustomTypeAsRoot","literal wrapper"
"loadOrCreateStorageWithCustomTypeAsRoot","literal wrapper"
"lazyLoadOrCreateStorageWithCustomTypeAsRoot","literal wrapper"
"main","main"
"resultSet2JdbcWithoutJOOQ","property wrapper"
"resultSet2JdbcUsingJOOQDefaultApproach","literal wrapper"
"resultSet2JdbcUsingCustomisedJOOQ","property wrapper"
"main","main"
"createDummyDB","literal wrapper"
"runScript","literal wrapper"
"runScript","literal wrapper"
"executeBatchedSQL","literal wrapper"
"parseSQLScript","literal wrapper"
"executeSQLBatches","wrapper"
"connect","literal wrapper"
"createTables","wrapper"
"dropTables","wrapper"
"printAllTables","wrapper"
"tableExists","predicate wrapper"
"tableExistsSQL","predicate wrapper"
"setup","global-command literal wrapper"
"closeConnections","literal wrapper"
"createPersonTable","wrapper"
"insertPerson","property wrapper"
"deleteAllPeople","wrapper"
"selectAllPeople","property wrapper"
"updatePersonAgeById","wrapper"
"updatePersonAgeByName","wrapper"
"closeConnection","literal wrapper"
"closeConnection","literal wrapper"
"closeConnection","literal wrapper"
"readPageWithLimitAndOffset","property wrapper"
"readPageWithSortedKeys","property wrapper"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"destroyDB","literal wrapper"
"populateDB","literal wrapper"
"connect","literal wrapper"
"create","literal wrapper"
"createConnection","literal wrapper"
"getConnection","literal wrapper"
"getConnection","literal wrapper"
"getConnection","literal wrapper"
"main","main"
"geth2Connection","literal wrapper"
"initDatabase","wrapper"
"main","main"
"main","main"
"setUpBasicConnectionPoolInstance","global-command literal wrapper"
"setUp","global-command literal wrapper"
"tearDown","literal wrapper"
"setup","global-command literal wrapper"
"closeConnection","literal wrapper"
"newInstance","literal"
"loadClusterWithDefaultEnvironment","literal wrapper"
"loadClusterWithCustomEnvironment","literal wrapper"
"loadDefaultBucketWithBlankPassword","property wrapper"
"loadBaeldungBucket","property wrapper"
"insertExample","property wrapper"
"retrieveAndUpsertExample","property wrapper"
"replaceExample","property wrapper"
"removeExample","property wrapper"
"getFirstFromReplicaExample","property wrapper"
"getLatestReplicaVersion","property wrapper"
"extractJsonResult","property wrapper"
"newInstance","literal"
"setUpBeforeClass","global-command literal wrapper"
"insertStudentGrade","literal wrapper"
"createTestArchive","literal wrapper"
"setupOnce","literal wrapper"
"main","main"
"jestClient","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getSessionFactory","literal"
"buildSessionFactory","literal wrapper"
"dbSettings","literal wrapper"
"setUp","literal wrapper"
"getSessionFactory","literal wrapper"
"makeSessionFactory","property wrapper"
"configureServiceRegistry","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getResourceURL","literal wrapper"
"convert","property wrapper"
"convertTo","literal"
"buildSessionFactory","literal wrapper"
"getSessionFactory","literal"
"getSessionFactory","literal"
"buildSessionFactory","literal wrapper"
"dbSettings","literal wrapper"
"main","main"
"main","main"
"main","main"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"getProperties","literal wrapper"
"setup","global-command literal wrapper"
"teardown","literal wrapper"
"createEvent","literal wrapper"
"createEventGenerated","literal wrapper"
"openNewSession","global-command literal wrapper"
"getProperties","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"setup","global-command literal wrapper"
"teardown","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"getSessionFactoryByProperties","literal wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"createCircle","literal wrapper"
"getProperties","literal wrapper"
"setup","global-command literal wrapper"
"teardown","literal wrapper"
"buildSessionFactory","literal wrapper"
"createSessionFactoryAndInitializeDBs","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"getSessionFactory","global-command literal wrapper"
"getSessionFactory","global-command literal wrapper"
"getSessionFactory","global-command literal wrapper"
"getSessionFactory","global-command literal wrapper"
"init","global-command literal wrapper"
"cleanUp","literal wrapper"
"init","global-command literal wrapper"
"cleanUp","literal wrapper"
"init","global-command literal wrapper"
"clear","literal wrapper"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"getSessionFactoryByProperties","literal wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getSessionFactory","property global-command wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"getSessionFactoryByProperties","literal wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"main","main"
"getJpaEntityManager","literal"
"getSessionFactory","literal wrapper"
"buildSessionFactory","property wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"getEntityManagerWithOpenTransaction","global-command literal wrapper"
"afterTests","literal wrapper"
"setUp","literal wrapper"
"getEntityManagerWithOpenTransaction","global-command literal wrapper"
"afterTests","literal wrapper"
"afterTests","literal wrapper"
"init","global-command literal wrapper"
"main","main"
"buildSessionFactory","literal wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","literal wrapper"
"createSessionFactory","global-command literal wrapper"
"closeSessionFactory","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"getSessionFactory","literal wrapper"
"buildSessionFactory","property wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"beforeTests","global-command literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"before","global-command literal wrapper"
"before","global-command literal wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"getSessionFactoryByProperties","literal wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getHibernateSession","literal wrapper"
"getHibernateSessionFactory","literal wrapper"
"getSessionFactory","global-command literal wrapper"
"buildSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"joinFetch","literal wrapper"
"persistData","wrapper"
"getHibernateSessionFactory","literal wrapper"
"setUpClass","global-command literal wrapper"
"main","main"
"beforeTests","global-command literal wrapper"
"afterTests","literal wrapper"
"createSession","global-command literal wrapper"
"main","main"
"setUp","global-command literal wrapper"
"tearDown","literal wrapper"
"generateRandomAge","property wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"getSessionFactoryByProperties","literal wrapper"
"makeSessionFactory","literal wrapper"
"configureServiceRegistry","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getSessionFactory","literal wrapper"
"getSessionFactory","property global-command wrapper"
"getSessionFactoryWithInterceptor","property global-command wrapper"
"getSessionWithInterceptor","literal wrapper"
"getSessionFactoryBuilder","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getDirtyEntities","literal"
"clearDirtyEntitites","literal wrapper"
"init","global-command literal wrapper"
"tearDown","literal wrapper"
"getSessionFactory","literal"
"getSessionFactoryBuilder","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getHibernateProperties","literal wrapper"
"getManagedEntities","property wrapper"
"startTransaction","property wrapper"
"queryCount","literal wrapper"
"getEntityManager","literal wrapper"
"getSessionFactory","property global-command wrapper"
"getSessionFactoryBuilder","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getSessionFactoryBuilder","literal wrapper"
"configureServiceRegistry","literal wrapper"
"getProperties","literal wrapper"
"getPropertiesURL","literal wrapper"
"finish","literal wrapper"
"setup","literal wrapper"
"tearDown","literal wrapper"
"main","main"
"setup","global-command literal"
"main","main"
"main","main"
"main","main"
"setupHarperDB","literal wrapper"
"installHarperDB","global-command literal wrapper"
"initHarperDBApiService","global-command literal"
"setupDB","literal wrapper"
"insertSubjectRecords","literal wrapper"
"insertTeacherRecords","literal wrapper"
"insertTeacherDetailsRecords","literal wrapper"
"stopHarperDB","literal wrapper"
"getConnection","literal wrapper"
"getConnection","property wrapper"
"getSerialversionuid","literal"
"once","global-command literal"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"teardown","literal wrapper"
"init","global-command literal wrapper"
"getConfiguration","literal wrapper"
"once","global-command literal"
"setup","global-command literal wrapper"
"once","global-command literal"
"setup","global-command literal wrapper"
"closeSession","literal wrapper"
"getSessionFactory","global-command literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"populateH2DB","literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"populateH2DB","literal wrapper"
"setup","literal wrapper"
"getInstance","global-command literal"
"setup","global-command literal wrapper"
"populateH2DB","literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"main","main"
"main","main"
"of","literal wrapper"
"with","literal"
"executeNativeQueryNoCastCheck","property wrapper"
"executeNativeQueryWithCastCheck","property wrapper"
"executeNativeQueryGeneric","property wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"once","global-command literal"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"init","global-command literal wrapper"
"destroy","literal wrapper"
"setup","global-command literal wrapper"
"checkingConnection","literal wrapper"
"main","main"
"setUp","global-command literal"
"pushOperationUsingDBObject","literal wrapper"
"pushOperationUsingDocument","literal wrapper"
"addToSetOperation","literal wrapper"
"main","main"
"setUp","global-command literal"
"retrieveValueUsingFind","literal wrapper"
"retrieveValueUsingAggregation","global-command literal wrapper"
"retrieveValueAggregationUsingDocument","global-command literal wrapper"
"main","main"
"setUp","global-command literal wrapper"
"bulkOperations","literal wrapper"
"main","main"
"setUp","global-command literal"
"pushSetSolution","literal wrapper"
"main","main"
"setUp","global-command literal wrapper"
"updateOperations","literal wrapper"
"updateSetOnInsertOperations","literal wrapper"
"findOneAndUpdateOperations","literal wrapper"
"replaceOneOperations","literal wrapper"
"main","main"
"setup","global-command literal wrapper"
"cleanUp","literal wrapper"
"setup","global-command literal wrapper"
"cleanUp","literal wrapper"
"setup","global-command literal wrapper"
"cleanUp","literal wrapper"
"setUpDB","global-command literal wrapper"
"cleanUp","literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"cleanUp","literal wrapper"
"setUp","global-command literal wrapper"
"equalsOperator","literal wrapper"
"notEqualOperator","literal wrapper"
"greaterThanOperator","literal wrapper"
"lessThanOperator","literal wrapper"
"inOperator","literal wrapper"
"notInOperator","literal wrapper"
"andOperator","literal wrapper"
"orOperator","literal wrapper"
"existsOperator","literal wrapper"
"regexOperator","literal wrapper"
"printResult","wrapper"
"main","main"
"setUp","global-command literal wrapper"
"retrieveAllDocumentsUsingFind","literal wrapper"
"retrieveAllDocumentsUsingFindWithQueryFilter","literal wrapper"
"retrieveAllDocumentsUsingFindWithQueryFilterAndProjection","literal wrapper"
"retrieveFirstDocument","literal wrapper"
"main","main"
"setUp","global-command literal wrapper"
"retrieveAllDocumentsUsingFindWithObjectId","literal wrapper"
"retrieveFirstDocumentWithObjectId","literal wrapper"
"retrieveDocumentWithRandomObjectId","literal wrapper"
"main","main"
"setUp","global-command literal wrapper"
"insertSingleBsonDocumentWithStringArray","literal wrapper"
"insertSingleDocumentWithStringArray","literal wrapper"
"insertMultipleDocumentsWithStringArray","literal wrapper"
"insertSingleDocumentWithObjectArray","literal wrapper"
"main","main"
"setUp","global-command literal wrapper"
"addFieldToExistingBsonFilter","literal wrapper"
"addFieldToExistingBsonFilterUsingBsonDocument","literal wrapper"
"main","main"
"setUp","global-command literal wrapper"
"cleanUp","literal wrapper"
"setUp","global-command literal wrapper"
"cleanUp","literal wrapper"
"setUp","global-command literal wrapper"
"cleanUp","literal wrapper"
"setUp","global-command literal wrapper"
"setUp","global-command literal wrapper"
"setup","global-command literal wrapper"
"close","literal wrapper"
"insertEventsWithDate","literal wrapper"
"readEventsByDate","literal wrapper"
"readEventsByDateRange","literal wrapper"
"readEventsByDateWithTZ","literal wrapper"
"updateDateField","literal wrapper"
"updateManyEventsWithDateCriteria","literal wrapper"
"deleteEventsByDate","literal wrapper"
"dropDb","literal wrapper"
"main","main"
"setup","literal wrapper"
"close","literal wrapper"
"main","main"
"main","main"
"setUp","global-command literal wrapper"
"collectionExistsSolution","literal wrapper"
"createCollectionSolution","literal wrapper"
"listCollectionNamesSolution","literal wrapper"
"countSolution","literal wrapper"
"main","main"
"main","main"
"main","main"
"updateOne","literal wrapper"
"updateMany","literal wrapper"
"replaceOne","literal wrapper"
"findOneAndReplace","literal wrapper"
"findOneAndUpdate","literal wrapper"
"setup","global-command literal wrapper"
"main","main"
"main","main"
"documentToPost","property wrapper"
"setUp","global-command literal wrapper"
"tearDown","literal wrapper"
"setUp","global-command literal wrapper"
"setup","global-command literal wrapper"
"main","main"
"main","main"
"startMongoDb","global-command literal wrapper"
"stopMongoDb","literal wrapper"
"main","main"
"save","wrapper"
"getAll","property wrapper"
"getFields","property wrapper"
"getOne","property wrapper"
"update","wrapper"
"update","wrapper"
"delete","wrapper"
"delete","wrapper"
"usingJoinMethod","property wrapper"
"usingMultipleJoinMethod","property wrapper"
"usingLeftOuterJoinMethod","property wrapper"
"usingRightOuterJoinMethod","property wrapper"
"usingFullOuterJoinMethod","property wrapper"
"usingNaturalJoinMethod","property wrapper"
"usingCrossJoinMethod","property wrapper"
"printResult","unclassified"
"setup","global-command literal wrapper"
"cleanup","literal wrapper"
"setup","global-command literal wrapper"
"setUp","global-command literal wrapper"
"cleanup","literal wrapper"
"getSessionFactory","global-command literal wrapper"
"getProperties","literal wrapper"
"beforeTests","global-command literal wrapper"
"main","main"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"oneTimeSetUp","global-command literal wrapper"
"getNewBoltConnection","literal wrapper"
"hasAcceptedAndWantsToUseCommercialEdition","literal wrapper"
"getDriver","literal"
"extractVersionFromDockerImage","property wrapper"
"extractVersionFromBolt","literal wrapper"
"setup","global-command literal wrapper"
"closeDB","literal wrapper"
"setup","global-command literal wrapper"
"init","literal wrapper"
"closeDB","literal wrapper"
"setup","global-command literal wrapper"
"closeDB","literal wrapper"
"populateDatabase","global-command literal wrapper"
"afterClass","literal wrapper"
"populateDatabase","global-command literal wrapper"
"afterClass","literal wrapper"
"main","main"
"main","main"
"main","main"
"isReadOnly","literal wrapper"
"enter","literal wrapper"
"exit","literal wrapper"
"createExecutor","literal"
"getInstance","global-command literal"
"main","main"
"setUp","global-command literal wrapper"
"destroy","literal wrapper"
"setUp","global-command literal wrapper"
"destroy","literal wrapper"
"setUp","global-command literal wrapper"
"destroy","literal wrapper"
"setUp","global-command literal wrapper"
"destroy","literal wrapper"
"setUp","global-command literal wrapper"
"destroy","literal wrapper"
"setUp","global-command literal wrapper"
"destroy","literal wrapper"
"create","wrapper"
"createVersioned","wrapper"
"create","wrapper"
"create","wrapper"
"createCommentPI","wrapper"
"create","wrapper"
"createVersioned","wrapper"
"createVersionedWithUpdatesAndDeletes","wrapper"
"createWithoutAttributes","wrapper"
"createWithoutNamespace","wrapper"
"createRevisioned","wrapper"
"serializeRevisionOneAndTwo","literal wrapper"
"serializeMostRecentRevision","literal wrapper"
"serializeAllRevisions","literal wrapper"
"serializeRevisionOneAndTwo","literal wrapper"
"serializeMostRecentRevision","literal wrapper"
"serializeAllRevisions","literal wrapper"
"initBeans","global-command literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"set","literal wrapper"
"getClientDatabase","literal wrapper"
"clear","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getBookReview","literal wrapper"
"getSha256Hex","property wrapper"
"givenEagerListBasedUser_WhenFetchingAllUsers_ThenIssueNPlusOneRequests","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"buildCountry","literal wrapper"
"beforeClass","empty"
"cleanUp","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"debug","wrapper"
"main","main"
"createMasterKey","literal wrapper"
"readMasterKey","literal wrapper"
"providersMap","property wrapper"
"main","main"
"init","literal wrapper"
"main","main"
"main","main"
"containersProperties","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"lines","property wrapper"
"lines","property wrapper"
"lines","property wrapper"
"linesFromResource","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setUpUserControllerInstance","global-command literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"setupCassandraConnectionProperties","literal wrapper"
"createKeyspace","wrapper"
"setupCassandraConnectionProperties","literal wrapper"
"setupCassandra","global-command literal wrapper"
"setupCassandraConnectionProperties","literal wrapper"
"createKeyspace","wrapper"
"setupCassandraConnectionProperties","literal wrapper"
"createKeyspace","wrapper"
"main","main"
"main","main"
"startCassandraEmbedded","literal wrapper"
"stopCassandraEmbedded","literal wrapper"
"startCassandraEmbedded","literal wrapper"
"stopCassandraEmbedded","literal wrapper"
"startCassandraEmbedded","literal wrapper"
"stopCassandraEmbedded","literal wrapper"
"startCassandraEmbedded","literal wrapper"
"stopCassandraEmbedded","literal wrapper"
"main","main"
"newInstance","literal"
"setupBeforeClass","literal wrapper"
"setupBeforeClass","literal wrapper"
"setupBeforeClass","literal wrapper"
"setupBeforeClass","literal wrapper"
"main","main"
"setupClass","global-command literal wrapper"
"isEmpty","predicate wrapper"
"loadFromFileInClasspath","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"createSchool","literal wrapper"
"createStudent","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"parse","literal wrapper"
"main","main"
"from","literal"
"main","main"
"fromEntity","property wrapper"
"main","main"
"registerPgProperties","wrapper"
"setUpBeforeClass","literal wrapper"
"tearDownAfterClass","literal wrapper"
"getInstance","global-command literal"
"randomPositiveLongAsString","literal wrapper"
"randomNegativeLongAsString","literal wrapper"
"randomPositiveLong","literal wrapper"
"randomNegativeLong","literal wrapper"
"main","main"
"main","main"
"main","main"
"getHibernateSession","literal wrapper"
"getHibernateSession","literal wrapper"
"parse","literal wrapper"
"setUpBeforeClass","literal wrapper"
"tearDownAfterClass","literal wrapper"
"setUpBeforeClass","literal wrapper"
"tearDownAfterClass","literal wrapper"
"main","main"
"main","main"
"hasFirstNameLike","literal wrapper"
"hasLastName","literal wrapper"
"hasBookWithTitle","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getAllCustomers","literal wrapper"
"testIO","literal wrapper"
"validateUserIdToUserMap","wrapper"
"main","main"
"from","literal"
"hasAuthor","literal wrapper"
"titleContains","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"employee","literal wrapper"
"main","main"
"main","main"
"assertDataInPersitentContext","wrapper"
"aCustomer","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"userSource","literal wrapper"
"main","main"
"main","main"
"from","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"from","literal"
"main","main"
"main","main"
"main","main"
"generateSchema","literal wrapper"
"main","main"
"main","main"
"setUp","global-command literal"
"setUp","global-command literal"
"main","main"
"main","main"
"setupTests","global-command literal wrapper"
"tearDown","global-command literal wrapper"
"mongoClient","literal wrapper"
"main","main"
"initializeNeo4j","global-command literal wrapper"
"stopNeo4j","literal wrapper"
"neo4jProperties","wrapper"
"main","main"
"main","main"
"startRedisServer","global-command literal wrapper"
"stopRedisServer","literal wrapper"
"startRedisServer","global-command literal wrapper"
"stopRedisServer","literal wrapper"
"startRedisServer","global-command literal wrapper"
"stopRedisServer","literal wrapper"
"startRedisServer","global-command literal wrapper"
"stopRedisServer","literal wrapper"
"startRedisServer","global-command literal wrapper"
"stopRedisServer","literal wrapper"
"startRedisServer","global-command literal wrapper"
"stopRedisServer","literal wrapper"
"main","main"
"main","main"
"listImplementation","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setProperties","wrapper"
"setProperties","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getCurrentTenant","literal wrapper"
"setCurrentTenant","literal wrapper"
"addToken","wrapper"
"getAuthentication","property wrapper"
"getTenant","property wrapper"
"main","main"
"registerAllExtensions","empty"
"registerAllExtensions","literal wrapper"
"getDescriptor","literal"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"newBuilder","literal wrapper"
"newBuilder","literal wrapper"
"getDescriptor","literal"
"getDefaultInstance","literal"
"parser","literal"
"getDescriptor","literal"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"newBuilder","literal wrapper"
"newBuilder","literal wrapper"
"getDescriptor","literal"
"getDefaultInstance","literal"
"parser","literal"
"getDescriptor","literal"
"main","main"
"convertToLocalDate","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setUpClass","global-command literal"
"tearDownClass","literal wrapper"
"main","main"
"main","main"
"main","main"
"setUpClass","global-command literal"
"shutDownClass","literal wrapper"
"setUpClass","global-command literal"
"shutDownClass","literal wrapper"
"main","main"
"main","main"
"checkResults","wrapper"
"prepareData","wrapper"
"main","main"
"instantiateJessInstance","literal wrapper"
"runRules","wrapper"
"calculateResults","wrapper"
"prepareData","literal wrapper"
"checkResults","wrapper"
"registerRules","wrapper"
"main","main"
"main","main"
"compute","literal wrapper"
"compute","literal wrapper"
"compute","wrapper"
"compute","literal wrapper"
"main","main"
"getTitle","literal wrapper"
"main","main"
"main","main"
"main","main"
"subjectMethod","literal wrapper"
"getFirstObserver","global-command literal"
"getSecondObserver","global-command literal"
"main","main"
"getStringFromInputStream","literal wrapper"
"main","main"
"defaultBehaviour","literal wrapper"
"subscribeBeforeConnect","literal wrapper"
"getObservable","literal wrapper"
"gettingValue","wrapper"
"main","main"
"createAndShowGUI","global-command literal wrapper"
"defaultBehaviour","literal wrapper"
"subscribeBeforeConnect","literal wrapper"
"connectBeforeSubscribe","literal wrapper"
"autoConnectAndSubscribe","literal wrapper"
"refCountAndSubscribe","literal wrapper"
"getObservable","literal wrapper"
"toCleanString","literal"
"toLength","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getTwitterinstance","literal wrapper"
"createTweet","literal wrapper"
"getTimeLine","literal wrapper"
"sendDirectMessage","literal wrapper"
"searchtweets","literal wrapper"
"streamFeed","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"decodeJWTToken","property wrapper"
"isTokenValid","predicate wrapper"
"initialize","global-command literal wrapper"
"createJWT","literal wrapper"
"verifyJWT","literal wrapper"
"isJWTExpired","predicate wrapper"
"getClaim","property wrapper"
"main","main"
"initialize","global-command literal wrapper"
"createJWT","literal wrapper"
"verifyJWT","literal wrapper"
"decodedJWT","literal wrapper"
"isJWTExpired","predicate wrapper"
"main","main"
"setUp","global-command literal wrapper"
"isJWTExpired","predicate wrapper"
"verifyJWT","literal wrapper"
"setUp","global-command literal wrapper"
"isJWTExpired","predicate wrapper"
"decodedJWT","literal wrapper"
"readKeyAsString","literal wrapper"
"main","main"
"main","main"
"formatParams","property wrapper"
"formatBody","property wrapper"
"evaluateDecoderResult","property wrapper"
"prepareLastResponse","property wrapper"
"createSSLContext","property wrapper"
"getServerAPNHandler","literal wrapper"
"getClientAPNHandler","literal wrapper"
"createGetRequest","literal wrapper"
"main","main"
"createRequest","property wrapper"
"prepareResponse","wrapper"
"main","main"
"main","main"
"main","main"
"setExchange","wrapper"
"addSecurity","property wrapper"
"main","main"
"getListener","literal wrapper"
"main","main"
"main","main"
"isPrimeNumber","predicate global-command"
"initialize","literal wrapper"
"main","main"
"isPrimeNumber","predicate"
"initialize","literal wrapper"
"getMeasurementRecorder","literal wrapper"
"main","main"
"main","main"
"main","main"
"getInstanceCount","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"mongoDbProperties","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"fromException","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"createMethodParameter","property wrapper"
"createSynthesizingMethodParameter","property wrapper"
"getIndex","property wrapper"
"isAutowirable","predicate wrapper"
"resolveDependency","property wrapper"
"findMergedAnnotation","literal wrapper"
"placeholderConfigurer","literal"
"main","main"
"main","main"
"isAuthorization","predicate wrapper"
"isAuthRoute","predicate wrapper"
"main","main"
"main","main"
"main","main"
"getPortFromArgs","property wrapper"
"getServletContextHandler","literal wrapper"
"getContext","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getMedicine","property wrapper"
"main","main"
"main","main"
"runJob","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"from","literal"
"setup","global-command literal wrapper"
"main","main"
"getSecret","property wrapper"
"main","main"
"getInstance","global-command literal"
"main","main"
"main","main"
"proxyStream","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"doSomeAction","literal wrapper"
"toString","property wrapper"
"toString","property wrapper"
"toString","property wrapper"
"main","main"
"main","main"
"beforeAll","literal wrapper"
"setProperties","wrapper"
"setProperties","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"shouldFilterSteps","literal wrapper"
"verify200RequestsFrom","wrapper"
"verify404RequestFrom","literal wrapper"
"getRequestCounts","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"isWindows","literal"
"isJava17","literal wrapper"
"isJava21","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"placeholderConfigurer","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getEvents","literal"
"clearEventList","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"toDto","property wrapper"
"toEntity","property wrapper"
"toDto","property wrapper"
"toEntity","property wrapper"
"main","main"
"setUpUserControllerInstance","global-command literal wrapper"
"main","main"
"initalizeGreetingConfig","global-command literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"nonNullFieldsShouldNonBeMissing","wrapper"
"nullFieldsShouldBeMissing","wrapper"
"filterFieldsAndGetNames","property wrapper"
"isFieldNull","predicate wrapper"
"isFieldAbsent","predicate wrapper"
"isFieldEmpty","predicate wrapper"
"giveEndpointWhenSendEmployeeThanReceiveThatUserBackIgnoringAbsentValues","literal wrapper"
"giveEndpointWhenSendEmployeeThanReceiveThatUserBackIgnoringEmptyValues","literal wrapper"
"giveEndpointWhenSendEmployeeThanReceiveThatUserBackIgnoringNullValues","literal wrapper"
"main","main"
"main","main"
"getColorAsWebColor","property wrapper"
"getColorAsWebColor","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"checkBeansPresence","wrapper"
"main","main"
"displayAllBeans","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"mapBookToProto","property wrapper"
"mapProtoToBook","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"fileToRequest","literal wrapper"
"fileToResponse","literal wrapper"
"expected","literal wrapper"
"main","main"
"suite","literal"
"main","main"
"main","main"
"initialBookData","literal wrapper"
"convertBookData","property wrapper"
"convertBook","property wrapper"
"existingBooks","literal wrapper"
"initialBookData","literal wrapper"
"initialBookData","literal wrapper"
"existingBooks","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getGetProductDetailsRequest","literal"
"getDeleteProductsRequest","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"dynamicProperties","wrapper"
"main","main"
"generateUPCABarcodeImage","literal wrapper"
"generateEAN13BarcodeImage","literal wrapper"
"generateCode128BarcodeImage","literal wrapper"
"generatePDF417BarcodeImage","literal wrapper"
"generateUPCABarcodeImage","literal wrapper"
"generateEAN13BarcodeImage","literal wrapper"
"generateCode128BarcodeImage","literal wrapper"
"generatePDF417BarcodeImage","literal wrapper"
"generateOkapiBarcode","literal wrapper"
"generateQrcode","literal wrapper"
"toImage","literal wrapper"
"toImage","property wrapper"
"generateQRCodeImage","literal wrapper"
"generateUPCABarcodeImage","literal wrapper"
"generateEAN13BarcodeImage","literal wrapper"
"generateCode128BarcodeImage","literal wrapper"
"generatePDF417BarcodeImage","literal wrapper"
"generateQRCodeImage","literal wrapper"
"createQRwithText","literal wrapper"
"modifiedQRCode","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"resolvePlanFromApiKey","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"from","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"runUsingSpringApplicationBuilder","literal wrapper"
"runUsingSpringApplication","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"convertEntrySet","property wrapper"
"convertToPropertySourceList","property wrapper"
"covertToPropertySourceList","property wrapper"
"main","main"
"main","main"
"beanFactoryPostProcessor","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"properties","literal wrapper"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"beforeAll","global-command literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"restart","global-command literal wrapper"
"readRandomStringFromFile","literal wrapper"
"main","main"
"getById","literal"
"main","main"
"closeApplication","literal wrapper"
"exitApplication","literal wrapper"
"writePID","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getPizzaToppingsKeyboard","literal wrapper"
"getPizzaOrDrinkKeyboard","literal wrapper"
"getYesOrNo","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"registerResourceServerIssuerProperty","wrapper"
"registerRedisProperties","wrapper"
"createMapping","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"toJson","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"createLinkHeader","property"
"checkFound","unclassified"
"checkFound","unclassified"
"retrieveResourceFromResponse","property wrapper"
"serializeFoo","literal wrapper"
"createFooJson","literal wrapper"
"deserializeFoo","literal wrapper"
"extractURIByRel","property wrapper"
"extractTypeOfRelation","property wrapper"
"main","main"
"createExpectedArchaiusProperties","literal wrapper"
"main","main"
"createExpectedArchaiusProperties","literal wrapper"
"createExpectedValueProperties","literal wrapper"
"main","main"
"createExpectedArchaiusProperties","literal wrapper"
"main","main"
"createExpectedArchaiusProperties","literal wrapper"
"main","main"
"createExpectedArchaiusProperties","literal wrapper"
"main","main"
"createExpectedArchaiusProperties","literal wrapper"
"main","main"
"main","main"
"overrideProperties","wrapper"
"setupResources","global-command literal wrapper"
"main","main"
"main","main"
"awsCredentials","literal"
"awsCredentialsProvider","literal wrapper"
"amazonS3","literal wrapper"
"amazonSNS","literal wrapper"
"amazonSQS","literal wrapper"
"setupResources","global-command literal wrapper"
"cleanUpResources","literal wrapper"
"setupAwsResources","global-command literal wrapper"
"cleanupAwsResources","literal wrapper"
"setupAwsResources","global-command literal wrapper"
"cleanupAwsResources","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getEvents","literal"
"clearEventList","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setupMockBooksResponse","wrapper"
"instance","literal"
"instance","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getEvents","literal"
"clearEventList","literal wrapper"
"startTestServer","global-command literal wrapper"
"registerBackendServer","wrapper"
"stopMockBackend","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"okJson","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"getProduct","literal wrapper"
"createProduct","literal wrapper"
"createPrice","literal wrapper"
"main","main"
"getPrice","literal wrapper"
"main","main"
"main","main"
"startWireMockServer","global-command literal wrapper"
"stopWireMockServer","literal wrapper"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"cleanup","literal wrapper"
"startApp","literal wrapper"
"setup","global-command literal wrapper"
"startApp","literal wrapper"
"cleanup","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getClassSchema","literal"
"getDecoder","literal"
"createDecoder","literal"
"fromByteBuffer","literal wrapper"
"newBuilder","literal"
"newBuilder","literal"
"newBuilder","literal"
"getClassSchema","literal"
"getDecoder","literal"
"createDecoder","literal"
"fromByteBuffer","literal wrapper"
"newBuilder","literal"
"newBuilder","literal"
"newBuilder","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"message","literal wrapper"
"main","main"
"message","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"getApplicationContext","literal"
"main","main"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"beanFactoryPostProcessor","literal"
"isBeanFactoryPostProcessorRegistered","literal"
"setBeanFactoryPostProcessorRegistered","unclassified"
"isBeanPostProcessorRegistered","literal"
"setBeanPostProcessorRegistered","unclassified"
"isBeanInstantiated","literal"
"setBeanInstantiated","unclassified"
"main","main"
"main","main"
"main","main"
"getInstance","literal"
"getEventBus","literal"
"subscribe","literal wrapper"
"unsubscribe","literal wrapper"
"post","literal wrapper"
"escapeWithApacheCommons","literal wrapper"
"escapeWithGuava","literal wrapper"
"escapeWithSpring","literal wrapper"
"createInstance","literal wrapper"
"createInstance","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"getCarFromJavaConfig","literal wrapper"
"getCarFromXml","literal wrapper"
"getStringFromInputStream","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getCarFromJavaConfig","literal wrapper"
"getCarFromXml","literal wrapper"
"getStaticName","literal"
"getStaticNameInjectedOnField","literal"
"main","main"
"main","main"
"getBeansWithAnnotation","property wrapper"
"getBeansWithAnnotation_StreamVersion","property wrapper"
"isAnnotated","predicate wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getService","property"
"main","main"
"main","main"
"createDeployment","literal wrapper"
"createDeployment","literal wrapper"
"start","global-command literal wrapper"
"closeContext","literal wrapper"
"init","global-command literal"
"closeContext","literal wrapper"
"main","main"
"createTextProcessorBeanFromJNDI","literal wrapper"
"lookupTextProcessorBean","literal wrapper"
"createInitialContext","literal wrapper"
"main","main"
"setUpPrintStreamInstance","global-command literal wrapper"
"tearDownByteArrayOutputStream","global-command literal"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"main","main"
"orders","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"createPayment","literal wrapper"
"generateSampleMessage","literal wrapper"
"main","main"
"main","main"
"main","main"
"generateUniqueClientIDUsingUUIDRandom","literal wrapper"
"closeProducerProperlyBeforeReinstantiate","literal wrapper"
"useUniqueObjectName","literal wrapper"
"main","main"
"jmxRegistrationConflicts","literal wrapper"
"duplicateConsumerClientID","literal wrapper"
"unclosedProducerAndReinitialize","literal wrapper"
"main","main"
"main","main"
"setProps","wrapper"
"beforeAll","global-command literal wrapper"
"setProps","wrapper"
"beforeAll","global-command literal wrapper"
"publishArticle","literal wrapper"
"setProps","wrapper"
"beforeAll","global-command literal wrapper"
"destroy","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"time","literal wrapper"
"main","main"
"main","main"
"readLongMessage","literal wrapper"
"main","main"
"registerKafkaProperties","wrapper"
"consume","literal wrapper"
"produce","literal wrapper"
"initConsumer","global-command literal wrapper"
"initProducer","global-command literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"registerAllExtensions","empty"
"getDescriptor","literal"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"newBuilder","literal wrapper"
"newBuilder","literal wrapper"
"getDescriptor","literal"
"getDefaultInstance","literal"
"parser","literal"
"getDescriptor","literal"
"valueOf","literal wrapper"
"forNumber","property"
"internalGetValueMap","literal"
"getDescriptor","literal wrapper"
"valueOf","property wrapper"
"getDescriptor","literal"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"newBuilder","literal wrapper"
"newBuilder","literal wrapper"
"getDescriptor","literal"
"getDefaultInstance","literal"
"parser","literal"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"newBuilder","literal wrapper"
"newBuilder","literal wrapper"
"getDescriptor","literal"
"getDefaultInstance","literal"
"parser","literal"
"getDescriptor","literal"
"toJson","literal wrapper"
"fromJson","literal wrapper"
"toJson","literal wrapper"
"fromJson","property wrapper"
"fromJson","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getUsage","literal wrapper"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"setUp","global-command literal wrapper"
"setup","global-command literal wrapper"
"main","main"
"getWebClient","literal wrapper"
"getResponseAsInputStream","property wrapper"
"readContentFromPipedInputStream","property wrapper"
"readContent","property wrapper"
"main","main"
"main","main"
"main","main"
"routingFunction","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"tearDown","literal wrapper"
"setup","global-command literal wrapper"
"destroy","literal wrapper"
"main","main"
"modifyRequestHeaders","property wrapper"
"main","main"
"fetch","literal wrapper"
"main","main"
"fetch","literal wrapper"
"main","main"
"fetch","literal wrapper"
"main","main"
"fetch","literal wrapper"
"main","main"
"fetch","literal wrapper"
"main","main"
"id","property wrapper"
"get","property wrapper"
"protect","property wrapper"
"fibonacci","property wrapper"
"main","main"
"fetch","property wrapper"
"main","main"
"fetch","property wrapper"
"main","main"
"useMaxMemory","literal wrapper"
"main","main"
"init","literal wrapper"
"main","main"
"getResponseBodyUsingExchangeFilterFunction","literal wrapper"
"getResponseBodyUsingOnStatus","literal wrapper"
"exchangeFilterResponseProcessor","property wrapper"
"defaultWebClient","literal wrapper"
"main","main"
"prepareFilters","literal wrapper"
"logRequest","literal wrapper"
"logResponse","literal wrapper"
"enhance","wrapper"
"toString","property wrapper"
"getCharset","property wrapper"
"setUp","global-command literal wrapper"
"tearDown","literal wrapper"
"stubPostResponse","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"demoFilter","literal wrapper"
"countingFilter","property wrapper"
"urlModifyingFilter","literal wrapper"
"loggingFilter","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getEvents","literal"
"clearEventList","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"setup","global-command literal wrapper"
"main","main"
"main","main"
"randomId","literal wrapper"
"randomQuantity","literal wrapper"
"concatAndSubstringFooName","literal wrapper"
"concatFooName","wrapper"
"substringFooName","wrapper"
"processFooReducingQuantity","property wrapper"
"divideFooQuantity","wrapper"
"reportResult","wrapper"
"reportResult","literal wrapper"
"main","main"
"getFlux","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"getEvents","literal"
"clearEventList","literal wrapper"
"httpConnector","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"serverThread","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"build","property wrapper"
"getSerialversionuid","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getGrantedAuthorities","property wrapper"
"main","main"
"main","main"
"main","main"
"LoginOptionDto","empty"
"UserInfoDto","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"securityConfig","literal"
"main","main"
"main","main"
"prepareWorkDir","literal wrapper"
"builder","literal"
"main","main"
"securityConfig","literal"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"of","literal wrapper"
"main","main"
"main","main"
"generateRsaKey","literal wrapper"
"main","main"
"main","main"
"samlBootstrap","literal"
"main","main"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"generateDummyUsers","literal wrapper"
"generateDummyTweets","property wrapper"
"getAuthorities","literal wrapper"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"getRoleWithDefaultPrefix","property wrapper"
"main","main"
"main","main"
"propertySourcesPlaceholderConfigurer","literal"
"main","main"
"asJsonString","literal wrapper"
"main","main"
"getAuthenticatedUserName","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"encoder","literal"
"main","main"
"main","main"
"main","main"
"encoder","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"createUser","literal wrapper"
"createUserWithoutId","literal"
"createUserWithId","literal wrapper"
"createUsers","literal wrapper"
"main","main"
"getAuthentication","property wrapper"
"main","main"
"builder","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"securityConfig","literal"
"main","main"
"securityConfig","literal"
"isRedirectView","predicate wrapper"
"isUserLogged","literal wrapper"
"main","main"
"simpleSvcRequestLoggingIn","literal wrapper"
"simpleSvcRequestLoggingIn","literal wrapper"
"simpleResponseSvcRequestLoggingIn","property wrapper"
"simpleResponseRequestUsingSessionNotFollowingRedirects","literal wrapper"
"main","main"
"main","main"
"main","main"
"propertySourcesPlaceholderConfigurer","literal wrapper"
"propertySourcesPlaceholderConfigurer","literal wrapper"
"authenticateAgainstThirdPartyAndGetAuthentication","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"startUp","global-command literal wrapper"
"shutdown","literal wrapper"
"getShell","literal"
"main","main"
"main","main"
"main","main"
"readFileToString","literal wrapper"
"asString","property wrapper"
"propertyPlaceHolderConfigurer","literal"
"main","main"
"main","main"
"upperCaseBearer","property wrapper"
"fromValue","literal wrapper"
"fromValue","literal wrapper"
"fromValue","literal wrapper"
"fromValue","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"initializeVault","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"isValidPoem","predicate wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"getConnection","literal wrapper"
"main","main"
"main","main"
"saveToFilesystem","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"format","property wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"enableTimeout","wrapper"
"main","main"
"main","main"
"main","main"
"fromCustomer","property wrapper"
"main","main"
"isNumeric","literal wrapper"
"getSimpleOperator","literal wrapper"
"main","main"
"isHigerPrecedenceOperator","literal wrapper"
"getSimpleOperation","property"
"main","main"
"main","main"
"registerAllExtensions","empty"
"getDefaultInstance","literal"
"getDescriptor","literal"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseDelimitedFrom","literal wrapper"
"parseFrom","literal wrapper"
"parseFrom","literal wrapper"
"newBuilder","literal wrapper"
"newBuilder","literal wrapper"
"getDescriptor","literal"
"create","literal"
"getDescriptor","literal"
"createLinkHeader","property"
"bookWithId","literal wrapper"
"book","literal wrapper"
"extractAllURIs","property wrapper"
"extractURIByRel","property wrapper"
"extractTypeOfRelation","property wrapper"
"extractSingleURI","property wrapper"
"main","main"
"main","main"
"checkFound","unclassified"
"checkFound","unclassified"
"randomPositiveLongAsString","literal wrapper"
"randomNegativeLongAsString","literal wrapper"
"randomPositiveLong","literal wrapper"
"randomNegativeLong","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"runBeforeAllTestMethods","global-command literal wrapper"
"runBeforeAllTestMethods","global-command literal"
"compress","property wrapper"
"compress","literal wrapper"
"decompress","literal wrapper"
"main","main"
"main","main"
"main","main"
"handleGracefully","literal"
"main","main"
"main","main"
"postForEntity","literal wrapper"
"exchange","literal wrapper"
"execute","literal wrapper"
"main","main"
"main","main"
"main","main"
"uploadSingleFile","literal wrapper"
"uploadMultipleFile","literal wrapper"
"getTestFile","literal wrapper"
"main","main"
"main","main"
"getById","literal"
"main","main"
"main","main"
"main","main"
"startRedisServer","global-command literal wrapper"
"stopRedisServer","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"array","unclassified"
"buildBooks","literal wrapper"
"buildStudents","literal wrapper"
"buildTeachers","literal wrapper"
"main","main"
"array","unclassified"
"buildStudents","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"divideByZero","literal"
"main","main"
"nullPointerDereference","literal wrapper"
"main","main"
"resourceLeak","literal wrapper"
"createGraph","literal wrapper"
"runGraph","literal wrapper"
"main","main"
"main","main"
"search","literal wrapper"
"assertThat","literal wrapper"
"assertThat","literal"
"assertThat","literal"
"main","main"
"getServiceHost","literal wrapper"
"getSeleniumGridUrl","literal wrapper"
"parseSeleniumGridUrl","literal"
"getRemoteWebDriver","literal"
"getLocalChromeDriver","literal wrapper"
"getPage","property wrapper"
"main","main"
"setupProtocolForSimulation","literal wrapper"
"setupTestFeedData","literal wrapper"
"buildPostScenario","literal wrapper"
"getMessage","literal"
"divisibleBy","literal"
"onlyDigits","literal"
"uppercase","literal"
"toPrettyString","literal wrapper"
"studentModel","literal wrapper"
"assertModelProperties","wrapper"
"main","main"
"main","main"
"getTestPlan","literal wrapper"
"getThreadGroup","literal wrapper"
"getLoopController","literal wrapper"
"getHttpSamplerProxy","literal wrapper"
"setup","global-command literal"
"setup","global-command literal"
"data","literal wrapper"
"provideBasicData","literal"
"provideEdgeCaseData","literal"
"runOne","literal wrapper"
"runAllClasses","literal wrapper"
"runSuiteOfClasses","literal wrapper"
"runRepeated","literal wrapper"
"runRepeatedSuite","literal wrapper"
"resultReport","wrapper"
"main","main"
"divideNumbers","property"
"argumentsProvider","literal wrapper"
"namedArguments","literal wrapper"
"suppliedData","global-command literal wrapper"
"sortCharacters","property wrapper"
"sortCharacters","property wrapper"
"data","literal wrapper"
"setUpFixture","global-command literal wrapper"
"getOptions","literal wrapper"
"main","main"
"main","main"
"processRequest","literal wrapper"
"getOptions","literal wrapper"
"calculateSum","property wrapper"
"readFromConsole","literal wrapper"
"readFromFile","literal wrapper"
"read","property wrapper"
"divideNumbers","property"
"sayHello","literal"
"setup","literal wrapper"
"done","literal wrapper"
"setup","literal wrapper"
"tearDown","literal wrapper"
"setup","literal wrapper"
"tearDown","literal wrapper"
"convertToDouble","property wrapper"
"main","main"
"getConnection","global-command literal wrapper"
"getConnection","global-command literal wrapper"
"isClosed","predicate wrapper"
"assertOutput","literal wrapper"
"assertOutput","literal wrapper"
"assertOutput","literal wrapper"
"assertOutput","literal wrapper"
"assertOutput","literal wrapper"
"assertOutput","literal wrapper"
"assertOutput","literal wrapper"
"validateFirstName","predicate wrapper"
"validateLastName","predicate wrapper"
"isStringValid","predicate wrapper"
"main","main"
"isOdd","predicate"
"blankStrings","literal wrapper"
"isBlank","predicate wrapper"
"isBlank_ShouldReturnTrueForNullOrBlankStringsOneArgument","literal wrapper"
"provideStringsForIsBlank","literal wrapper"
"provideStringsForIsBlankList","literal wrapper"
"setup","literal wrapper"
"done","literal wrapper"
"initialize","global-command literal"
"tearDown","global-command literal"
"setup","literal wrapper"
"done","literal wrapper"
"convertToInt","property wrapper"
"wordDataProvider","literal wrapper"
"initialize","global-command literal"
"tearDown","global-command literal"
"main","main"
"getInstance","global-command literal"
"range","literal wrapper"
"name","literal"
"buildBook","literal"
"printBookId","literal"
"main","main"
"getFictionalCharacters","literal wrapper"
"main","main"
"getSecondExpression","literal wrapper"
"getFirstExpression","literal wrapper"
"main","main"
"getNumberExpression","literal wrapper"
"getExpression","literal wrapper"
"main","main"
"getExpression","literal wrapper"
"main","main"
"getNameFromExpression","literal wrapper"
"getNameFromMethod","literal wrapper"
"main","main"
"getDurationFromExpression","literal wrapper"
"getDurationFromMethod","literal wrapper"
"main","main"
"getMixedCollection","literal wrapper"
"main","main"
"getThirdExpression","literal wrapper"
"getSecondExpression","literal wrapper"
"getFirstExpression","literal wrapper"
"main","main"
"getMethodExpression","literal wrapper"
"getExpression","literal wrapper"
"main","main"
"getExpressionWithPlaceholder","literal wrapper"
"getExpression","literal wrapper"
"simpleArticle","literal"
"isResponsePositive","predicate wrapper"
"randomNumber","literal wrapper"
"minCharCount","literal wrapper"
"specificArgumentMatching","literal wrapper"
"provideFileSystem","literal wrapper"
"startServer","global-command literal wrapper"
"stopServer","literal wrapper"
"staticMethod","literal"
"firstMethod","property"
"secondMethod","literal"
"thirdMethod","literal"
"main","main"
"before","global-command literal wrapper"
"getJson","literal wrapper"
"after","literal wrapper"
"before","global-command literal wrapper"
"after","literal wrapper"
"getEventJson","literal wrapper"
"before","global-command literal wrapper"
"getXml","literal wrapper"
"after","literal wrapper"
"before","global-command literal wrapper"
"getXml","literal wrapper"
"after","literal wrapper"
"inputStreamToString","literal wrapper"
"getAvailablePort","literal wrapper"
"isFree","literal wrapper"
"getGithubUserProfile","literal wrapper"
"retrieveResourceFromResponse","property wrapper"
"setUp","literal wrapper"
"tearDown","literal wrapper"
"convertHttpResponseToString","property wrapper"
"convertInputStreamToString","literal wrapper"
"convertResponseToString","property wrapper"
"firstLineOfResponse","property wrapper"
"getLambdaTestOptions","literal wrapper"
"setup","literal wrapper"
"setupChromeDriver","global-command literal wrapper"
"options","literal wrapper"
"setupChromeDriver","global-command literal wrapper"
"options","literal wrapper"
"setupChromeDriver","global-command literal wrapper"
"options","literal wrapper"
"findFile","property wrapper"
"callMethod","wrapper"
"callMethod","wrapper"
"callMethodWithReturn","property wrapper"
"callMethodWithReturn","property wrapper"
"getLambdaTestOptions","literal wrapper"
"findFile","property wrapper"
"setUp","global-command literal"
"tearDown","literal wrapper"
"setUp","global-command literal wrapper"
"tearDown","literal wrapper"
"resolveResourcePath","literal wrapper"
"resolveTestResourcePath","literal wrapper"
"setupChromeDriver","global-command literal wrapper"
"options","literal wrapper"
"setupChromeDriver","global-command literal wrapper"
"options","literal wrapper"
"setupChromeDriver","global-command literal wrapper"
"options","literal wrapper"
"init","literal wrapper"
"cleanup","literal wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"registerPgProperties","wrapper"
"main","main"
"main","main"
"data","literal wrapper"
"data","literal wrapper"
"hasNestedMapEntry","literal"
"readName","literal wrapper"
"beforeAll","literal wrapper"
"beforeAll","literal wrapper"
"afterAll","literal wrapper"
"setUpBeforeClass","literal wrapper"
"setUpBeforeClass","literal wrapper"
"tearDownAfterClass","literal wrapper"
"setLogs","literal wrapper"
"provideReferenceTestScenarioTable","literal wrapper"
"evenNumbers","global-command literal"
"main","main"
"detectDocTypeUsingDetector","literal wrapper"
"detectDocTypeUsingFacade","literal wrapper"
"extractContentUsingParser","literal wrapper"
"extractContentUsingFacade","literal wrapper"
"extractMetadatatUsingParser","literal wrapper"
"extractMetadatatUsingFacade","literal wrapper"
"readExcelFile","literal wrapper"
"createPDFDocument","literal wrapper"
"convertExcelToPDF","literal wrapper"
"createAndAddTable","wrapper"
"addTableHeader","wrapper"
"getCellText","property wrapper"
"addTableData","wrapper"
"setBackgroundColor","wrapper"
"setCellAlignment","wrapper"
"getCellStyle","property wrapper"
"main","main"
"main","main"
"removeContentFromDocument","literal wrapper"
"main","main"
"addContentToDocument","wrapper"
"main","main"
"replaceTextContentFromDocument","wrapper"
"getNumberOfPages","literal wrapper"
"isPasswordRequired","literal wrapper"
"getInfo","literal wrapper"
"getNumberOfPages","literal wrapper"
"isPasswordRequired","literal wrapper"
"getInfo","literal wrapper"
"main","main"
"main","main"
"generateHTMLFromPDF","literal wrapper"
"generatePDFFromHTML","literal wrapper"
"main","main"
"generateImageFromPDF","literal wrapper"
"generatePDFFromImage","wrapper"
"main","main"
"generateTxtFromPDF","literal wrapper"
"generatePDFFromTxt","literal wrapper"
"main","main"
"generateDocFromPDF","wrapper"
"main","main"
"addTableHeader","wrapper"
"addRows","wrapper"
"addCustomRows","wrapper"
"main","main"
"main","main"
"main","main"
"fileToByteArray","global-command literal wrapper"
"createPDFDoc","literal wrapper"
"main","main"
"main","main"
"vavrStreamElementAccess","literal wrapper"
"vavrParallelStreamAccess","global-command literal wrapper"
"jdkFlatMapping","literal wrapper"
"vavrStreamManipulation","literal wrapper"
"vavrStreamDistinct","literal wrapper"
"computeWithoutEitherUsingArray","property"
"computeWithoutEitherUsingMap","property wrapper"
"computeWithEither","property wrapper"
"main","main"
"main","main"
"vavrStreamElementAccess","literal wrapper"
"vavrParallelStreamAccess","literal wrapper"
"jdkFlatMapping","literal wrapper"
"vavrFlatMapping","literal wrapper"
"vavrStreamManipulation","literal wrapper"
"vavrStreamDistinct","literal wrapper"
"main","main"
"readFromFile","property"
"setUpUserValidatorInstance","global-command literal"
"teardownUserValidatorInstance","global-command literal"
"main","main"
"autoPerformingReq","property wrapper"
"searchByCityName","property wrapper"
"getDataByPlaceId","literal wrapper"
"toBufferFlowable","literal wrapper"
"extractingWoeid","literal wrapper"
"toCityAndDayLength","literal wrapper"
"main","main"
"beforeClass","empty"
"bind","empty"
"contributeFactoryDefaults","wrapper"
"contributeApplicationDefaults","wrapper"
"setupEnvironment","wrapper"
"contributeApplicationDefaults","wrapper"
"bind","empty"
"contributeApplicationDefaults","wrapper"
"main","main"
"main","main"
"main","main"
"main","main"
"forward","wrapper"
"getRequest","property wrapper"
"getResponse","literal wrapper"
"init","global-command literal wrapper"
"init","global-command literal wrapper"
"setUpHttpServletRequestMockInstance","global-command literal wrapper"
"setUpHttpServletResponsetMockInstance","global-command literal wrapper"
"main","main"
"__getWsdlLocation","literal"
"main","main"
"__getWsdlLocation","literal"
"__getWsdlLocation","literal"
"fromValue","literal wrapper"
"initData","literal wrapper"
"main","main"
"fromValue","literal wrapper"
"createDeployment","literal wrapper"
"keepTestAlive","wrapper"
"keepTestFailed","wrapper"
"keepTestStopped","wrapper"
"getCommitCount","property wrapper"
"getProcessSkipCount","property wrapper"
"getMetricsMap","property wrapper"
"createDeployment","global-command literal wrapper"
"createDeployment","global-command literal wrapper"
"createDeployment","literal wrapper"
"setup","global-command literal wrapper"
"deploy","literal wrapper"
"deploy","literal wrapper"
"deploy","literal wrapper"
"deploy","literal wrapper"
"deploy","literal wrapper"
"withinWindow","literal"
"getHelloGreeting","literal wrapper"
"getHiGreeting","literal wrapper"
"getCustomGreeting","literal wrapper"
"createClient","literal wrapper"
"simpleHeader","literal wrapper"
"simpleHeaderFluently","literal wrapper"
"basicAuthenticationAtClientLevel","literal wrapper"
"basicAuthenticationAtRequestLevel","literal wrapper"
"digestAuthenticationAtClientLevel","literal wrapper"
"digestAuthenticationAtRequestLevel","literal wrapper"
"bearerAuthenticationWithOAuth1AtClientLevel","literal wrapper"
"bearerAuthenticationWithOAuth1AtRequestLevel","literal wrapper"
"bearerAuthenticationWithOAuth2AtClientLevel","literal wrapper"
"bearerAuthenticationWithOAuth2AtRequestLevel","literal wrapper"
"filter","literal wrapper"
"sendRestrictedHeaderThroughDefaultTransportConnector","literal wrapper"
"simpleSSEHeader","literal wrapper"
"receiveEvent","global-command wrapper"
"assertValid","wrapper"
"main","main"
"startServer","property wrapper"
"storeFruit","wrapper"
"findByName","property wrapper"
"beforeAllTests","global-command literal wrapper"
"afterAllTests","literal wrapper"
"main","main"
"constantField","literal"
"createResponse","property wrapper"
"props","literal wrapper"
"jsonNodeToMessage","literal wrapper"
"messageToJsonNode","literal wrapper"
"jsonNodeToRequest","literal wrapper"
"requestToJsonNode","literal wrapper"
"main","main"
"createEmpList","literal wrapper"
"main","main"
"setInstance","global-command"
"getInstance","literal"
"main","main"
"main","main"
"main","main"
"main","main"
"main","main"
"randomQuote","literal wrapper"
"main","main"
"main","main"
"main","main"
"setup","global-command literal wrapper"
"clean","literal wrapper"
"setup","global-command literal wrapper"
"clean","literal wrapper"
"main","main"
"main","main"
"createFeed","literal wrapper"
"addEntryToFeed","wrapper"
"addDescriptionToEntry","wrapper"
"addCategoryToEntry","wrapper"
"publishFeed","literal wrapper"
"readFeed","literal wrapper"
"main","main"
"main","main"
"main","main"
"prettyPrintByTransformer","literal wrapper"
"prettyPrintByDom4j","literal wrapper"
"main","main"
"readPrettyPrintXslt","literal wrapper"
"readFromInputStream","literal wrapper"
"parseXmlToMap","wrapper"
"main","main"
"convertXml2CsvXslt","literal wrapper"
"convertXml2CsvStax","literal wrapper"
"convertXMLtoPDFUsingFop","literal wrapper"
"convertXMLtoPDFUsingIText","literal wrapper"
"getDocument","literal wrapper"
"toString","literal wrapper"
"toStringWithOptions","literal wrapper"
"getTransformer","literal wrapper"
"main","main"
"main","main"
"parse","literal wrapper"
"main","main"
"doWork","literal wrapper"
"print","literal"
"getContextUnmarshaller","literal wrapper"
"getContextMarshaller","literal wrapper"
"example","literal wrapper"
"createHardened","literal wrapper"
"createVulnerable","literal"
"generateData","literal wrapper"
