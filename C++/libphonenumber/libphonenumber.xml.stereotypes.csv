Class Name,Class Stereotype,Method Name,Method Stereotype
"ClassWriter","commander boundary","ClassWriter","constructor",
"ClassWriter","commander boundary","addToImports","command collaborator",
"ClassWriter","commander boundary","addToBody","command collaborator",
"ClassWriter","commander boundary","formatToBody","command collaborator",
"ClassWriter","commander boundary","writeToFile","command collaborator",
"CombineGeoDataTest","pure-controller degenerate","createSortedPrefixArray","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","findRangeEndFromStart","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","findRangeEndFromMiddle","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","findRangeEndWithSameLocationButDifferentPrefix","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","createRanges","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","findConflict","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","conflictBefore","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","conflictAfter","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","noConflict","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","combineRemovesLastDigit","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","combineMergesSamePrefixAndLocation","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","combineWithNoPossibleCombination","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","combineMultipleTimes","controller stateless",
"CombineGeoDataTest","pure-controller degenerate","combineMultipleTimesWithPrefixesWithDifferentLengths","controller stateless",
"CombineGeoData","empty","CombineGeoData","constructor",
"CombineGeoData","empty","CombineGeoData","constructor",
"CppMetadataGeneratorTest","pure-controller degenerate","emitStaticArrayData","controller stateless",
"CppMetadataGeneratorTest","pure-controller degenerate","outputHeaderFile","controller stateless",
"CppMetadataGeneratorTest","pure-controller degenerate","outputSourceFile","controller stateless",
"CppMetadataGenerator","unclassified","toString","get collaborator",
"CppMetadataGenerator","unclassified","CppMetadataGenerator","constructor",
"CppMetadataGenerator","unclassified","outputHeaderFile","controller",
"CppMetadataGenerator","unclassified","outputSourceFile","controller",
"AutoCloser","data-class small-class","AutoCloser","constructor",
"AutoCloser","data-class small-class","~AutoCloser","destructor",
"AutoCloser","data-class small-class","get_resource","get collaborator",
"AutoCloser","data-class small-class","Close","set",
"BuildMetadataCppFromXmlTest","unclassified","parseVariant","controller stateless",
"BuildMetadataCppFromXmlTest","unclassified","parseBadOptions","non-void-command collaborator",
"BuildMetadataCppFromXmlTest","unclassified","parseGoodOptions","non-void-command collaborator",
"BuildMetadataCppFromXmlTest","unclassified","generateMetadata","controller",
"BuildMetadataCppFromXmlTest","unclassified","generateLiteMetadata","controller",
"BuildMetadataCppFromXmlTest","unclassified","generateAlternateFormat","controller",
"MigrationFactoryTest","pure-controller degenerate","createFromFilePath_invalidPathLocation_expectException","controller stateless",
"MigrationFactoryTest","pure-controller degenerate","createFromFilePath_validPathLocation_expectValidFields","controller",
"MigrationFactoryTest","pure-controller degenerate","createFromNumberString_invalidNumberFormat_expectException","controller stateless",
"MigrationFactoryTest","pure-controller degenerate","createFromNumberString_validNumberFormat_expectValidFields","controller",
"MigrationFactoryTest","pure-controller degenerate","createWithCustomRecipes_invalidPathLocation_expectException","controller stateless",
"MetadataZipFileReaderTest","pure-controller","createInstance_invalidFileLocation_expectException","controller stateless",
"MetadataZipFileReaderTest","pure-controller","importTable_countryCodeInZip_expectCsvTable","controller",
"MetadataZipFileReaderTest","pure-controller","importTable_countryCodeNotInZip_expectEmptyCsvTable","controller",
"SchemaTest","commander boundary","testColumnOrdering","non-void-command collaborator",
"SchemaTest","commander boundary","test","non-void-command collaborator",
"SchemaTest","commander boundary","testCheckColumn","non-void-command collaborator",
"RangeTableTest","commander boundary","testEmptyMap","controller",
"RangeTableTest","commander boundary","testBasicAssign","controller",
"RangeTableTest","commander boundary","testApplyChanges","non-void-command collaborator",
"RangeTableTest","commander boundary","testBareRangeAddition","non-void-command collaborator",
"RangeTableTest","commander boundary","testAssignAndUnassign","non-void-command collaborator",
"RangeTableTest","commander boundary","testAssignAndRemove","non-void-command collaborator",
"RangeTableTest","commander boundary","testTableImportExport","non-void-command collaborator",
"RangeTableTest","commander boundary","testColumnGroupMapping","non-void-command collaborator",
"RangeTableTest","commander boundary","testSubTable","non-void-command collaborator",
"RangeTableTest","commander boundary","testGetPrefixMap","non-void-command collaborator",
"RangeTableTest","commander boundary","testGetPrefixMap_minLength","non-void-command collaborator",
"RangeTableTest","commander boundary","testSimplify_multipleColumns","non-void-command collaborator",
"RangeTableTest","commander boundary","testSimplify_chineseRanges","non-void-command collaborator",
"RangeTableTest","commander boundary","testSimplify_overlappingCheck","non-void-command collaborator",
"RangeTableTest","commander boundary","assign","controller stateless",
"RangeKeyTest","degenerate","testEmpty","controller stateless",
"RangeKeyTest","degenerate","testZeroLengthMatch","controller stateless",
"RangeKeyTest","degenerate","testOnlyAnyPath","controller stateless",
"RangeKeyTest","degenerate","testSimple","controller stateless",
"RangeKeyTest","degenerate","testEmbeddedRanges","controller stateless",
"RangeKeyTest","degenerate","testSplitFactors","controller stateless",
"RangeKeyTest","degenerate","testMergeStrategy","controller stateless",
"RangeKeyTest","degenerate","testAsRangeSpecifications","wrapper stateless",
"RangeKeyTest","degenerate","testSimpleRealWorldData","controller stateless",
"RangeKeyTest","degenerate","testContains","controller stateless",
"ColumnGroupTest","pure-controller degenerate small-class","testGroupColumns","controller stateless",
"ColumnGroupTest","pure-controller degenerate small-class","testExtractGroupColumns","controller stateless",
"RegexFormatterTest","pure-controller degenerate","testSimple","controller stateless",
"RegexFormatterTest","pure-controller degenerate","testNested","controller stateless",
"RegexFormatterTest","pure-controller degenerate","testDoubleNested","controller stateless",
"RegexFormatterTest","pure-controller degenerate","testForceNonCapturingGroups","controller stateless",
"RegexFormatterTest","pure-controller degenerate","testForceCapturingGroups","controller stateless",
"RangeTreeConverterTest","unclassified","testSimple","non-void-command collaborator",
"RangeTreeConverterTest","unclassified","testWithOptionalEdge","non-void-command collaborator",
"RangeTreeConverterTest","unclassified","testWithEpsilon","non-void-command collaborator",
"RangeTreeConverterTest","unclassified","testMultiplePathsWithCommonTail","non-void-command collaborator",
"RangeTreeConverterTest","unclassified","testOptionalTopLevelGroup_bug_69101586","non-void-command collaborator",
"RangeTreeConverterTest","unclassified","edge","controller stateless",
"RangeTreeConverterTest","unclassified","specs","controller stateless",
"RangeTreeConverterTest","unclassified","assertOutEdge","controller stateless",
"RangeTreeConverterTest","unclassified","assertOutEdges","controller stateless",
"RangeTreeConverterTest","unclassified","follow","controller stateless",
"NodeTest","pure-controller degenerate","testConstants","controller stateless",
"NodeTest","pure-controller degenerate","testNext","controller stateless",
"NodeTest","pure-controller degenerate","testToString","controller stateless",
"NodeTest","pure-controller degenerate","testOrdering","controller stateless",
"FormatSpecTest","degenerate","testCreate_national","wrapper stateless",
"FormatSpecTest","degenerate","testCreate_international","wrapper stateless",
"FormatSpecTest","degenerate","testCreate_carrier","wrapper stateless",
"FormatSpecTest","degenerate","testCreate_national_bad","wrapper stateless",
"FormatSpecTest","degenerate","testCreate_international_bad","wrapper stateless",
"FormatSpecTest","degenerate","testCreate_carrier_bad","wrapper stateless",
"FormatSpecTest","degenerate","testTemplate_splitPrefix","controller stateless",
"FormatSpecTest","degenerate","testTemplate_noPrefix","controller stateless",
"FormatSpecTest","degenerate","testTemplate_replacementNoNationalPrefix","controller stateless",
"FormatSpecTest","degenerate","testTemplate_replacementWithNationalPrefix","controller stateless",
"FormatSpecTest","degenerate","testTemplate_replacementNotFirstGroup","controller stateless",
"FormatSpecTest","degenerate","testTemplate_removeFirstGroupViaReplacement","controller stateless",
"AltFormatSpecTest","degenerate","testSimple","controller stateless",
"AltFormatSpecTest","degenerate","testGoodTemplateAndPrefix","wrapper stateless",
"AltFormatSpecTest","degenerate","testBadTemplateOrPrefix","wrapper stateless",
"SimpleLanguageTagTest","pure-controller degenerate small-class","testSimple","controller stateless",
"SimpleLanguageTagTest","pure-controller degenerate small-class","testBadArgs","controller stateless",
"PhoneRegionTest","pure-controller degenerate","testOrdering","controller stateless",
"PhoneRegionTest","pure-controller degenerate","testWorld","controller stateless",
"PhoneRegionTest","pure-controller degenerate","testBadArgs","controller stateless",
"DigitSequenceMatcherTest","boundary degenerate","testStringDigits","controller stateless",
"DigitSequenceMatcherTest","boundary degenerate","testSingleDigitMatching","wrapper stateless",
"DigitSequenceMatcherTest","boundary degenerate","testOptional","wrapper stateless",
"DigitSequenceMatcherTest","boundary degenerate","testRepetition","wrapper stateless",
"DigitSequenceMatcherTest","boundary degenerate","testOr","wrapper stateless",
"DigitSequenceMatcherTest","boundary degenerate","testRealRegexShort","wrapper stateless",
"DigitSequenceMatcherTest","boundary degenerate","testRealRegexLong","wrapper stateless",
"RangeTreeTest","pure-controller degenerate","testEmptyTree","controller stateless",
"RangeTreeTest","pure-controller degenerate","testEmptySequenceTree","controller stateless",
"RangeTreeTest","pure-controller degenerate","testFromRangeSetSimple","controller stateless",
"RangeTreeTest","pure-controller degenerate","testFromRangeSetMinMax","controller stateless",
"RangeTreeTest","pure-controller degenerate","testFromRangeSetAllValues","controller stateless",
"RangeTreeTest","pure-controller degenerate","testContains","controller stateless",
"RangeTreeTest","pure-controller degenerate","testMatchCount","controller stateless",
"RangeTreeTest","pure-controller degenerate","testUnion","controller stateless",
"RangeTreeTest","pure-controller degenerate","testIntersection","controller stateless",
"RangeTreeTest","pure-controller degenerate","testSubtraction","controller stateless",
"RangeTreeTest","pure-controller degenerate","testContainsAll","controller stateless",
"RangeTreeTest","pure-controller degenerate","testVennDiagram","controller stateless",
"RangeTreeTest","pure-controller degenerate","testFromRaggedRange","controller stateless",
"RangeTreeTest","pure-controller degenerate","testComplexSpecsToSimpleRange","controller stateless",
"RangeTreeTest","pure-controller degenerate","testAsRangeSetMultipleGroups","controller stateless",
"RangeTreeTest","pure-controller degenerate","testAsRangeSetMerging","controller stateless",
"RangeTreeTest","pure-controller degenerate","testVisitor","controller stateless",
"RangeTreeTest","pure-controller degenerate","testMin","controller stateless",
"RangeTreeTest","pure-controller degenerate","testSample","controller stateless",
"RangeTreeTest","pure-controller degenerate","testSignificantDigits","controller stateless",
"RangeTreeTest","pure-controller degenerate","testPrefixWith","controller stateless",
"RangeTreeTest","pure-controller degenerate","testSlicing","controller stateless",
"RangeTreeTest","pure-controller degenerate","testSerializingRealWorldExample","controller stateless",
"PrefixTreeTest","degenerate","testNewInstancesNormalized","wrapper stateless",
"PrefixTreeTest","degenerate","testRetainFrom","controller stateless",
"PrefixTreeTest","degenerate","testPrefixes","controller stateless",
"PrefixTreeTest","degenerate","testEmptyVsZeroLength","controller stateless",
"PrefixTreeTest","degenerate","testNoTrailingAnyPath","wrapper stateless",
"PrefixTreeTest","degenerate","testRangeAndPrefixSameLength","controller stateless",
"PrefixTreeTest","degenerate","testRangeShorterThanPrefix","controller stateless",
"PrefixTreeTest","degenerate","testComplex","controller stateless",
"PrefixTreeTest","degenerate","testEmptyPrefixTree","controller stateless",
"PrefixTreeTest","degenerate","testZeroLengthPrefix","controller stateless",
"PrefixTreeTest","degenerate","testUnion","wrapper stateless",
"PrefixTreeTest","degenerate","testIntersection","wrapper stateless",
"PrefixTreeTest","degenerate","testTrim","controller stateless",
"PrefixTreeTest","degenerate","testMinimal","controller stateless",
"PrefixTreeTest","degenerate","testMinimal_regression","controller stateless",
"LengthsParserTest","pure-controller degenerate","shouldThrowIfStringContainsForbiddenCharacters","controller stateless",
"LengthsParserTest","pure-controller degenerate","shouldThrowIfNumbersAreOutOfOrder","controller stateless",
"LengthsParserTest","pure-controller degenerate","shouldThrowIfFormatIsWrong","controller stateless",
"LengthsParserTest","pure-controller degenerate","testParseSingletons","controller stateless",
"LengthsParserTest","pure-controller degenerate","testParseCommaSeparatedNumbers","controller stateless",
"LengthsParserTest","pure-controller degenerate","testParseRanges","controller stateless",
"LengthsParserTest","pure-controller degenerate","testParseComplex","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testEmpty","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testCreate","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testGetDigit","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testBadArguments","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testMin","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testMax","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testDistance","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testLexicographicalOrdering","controller stateless",
"DigitSequenceTest","pure-controller degenerate","testExtend","controller stateless",
"CsvKeyMarshaller<K>","entity boundary","CsvKeyMarshaller","constructor",
"CsvKeyMarshaller<K>","entity boundary","CsvKeyMarshaller","constructor",
"CsvKeyMarshaller<K>","entity boundary","getColumns","get collaborator",
"CsvKeyMarshaller<K>","entity boundary","serialize","property non-void-command collaborator",
"CsvKeyMarshaller<K>","entity boundary","deserialize","property non-void-command collaborator",
"CsvKeyMarshaller<K>","entity boundary","ordering","get collaborator",
"TrailingPathOptimizer","empty","TrailingPathOptimizer","constructor",
"XmlRangesSchema","empty","XmlRangesSchema","constructor",
"AbstractRegExpFactory","empty","~AbstractRegExpFactory","destructor",
"RegExpInput","empty","~RegExpInput","destructor",
"AlternateFormats","data-provider boundary small-class","AlternateFormats","constructor",
"AlternateFormats","data-provider boundary small-class","GetAlternateFormatsForCountry","property collaborator",
"MigrationJobTest","controller","customRecipesMigration_expectMigrations","controller",
"MigrationJobTest","controller","customRecipesMigration_noRecipesFromCountry_expectNoMigrations","controller",
"MigrationJobTest","controller","customRecipes_singleMigration_unsupportedRecipeKey_expectException","controller",
"MigrationJobTest","controller","customRecipes_singleMigration_validKey_expectMigration","controller",
"MigrationJobTest","controller","customRecipes_invalidOldFormatValue_expectException","controller",
"MigrationJobTest","controller","customRecipe_multipleMigration_nextRecipeNotFound_expectException","controller",
"MigrationJobTest","controller","customRecipe_multipleMigration_expectMigration","controller",
"MigrationJobTest","controller","standardMigration_invalidNumberNoRecipe_expectNoMigration","controller",
"MigrationJobTest","controller","standardMigration_numberAlreadyValid_expectNoMigration","controller stateless",
"MigrationJobTest","controller","standardMigration_migratableNumber_expectMigration","controller stateless",
"MigrationJobTest","controller","standardMigration_invalidMigration_expectInvalidMigration","non-void-command collaborator",
"MigrationJobTest","controller","invalidMigration_strictExport_expectFileWithOriginalNumber","non-void-command collaborator",
"MigrationJobTest","controller","invalidMigration_exportInvalidMigrations_expectFileWithMigratedNumber","non-void-command collaborator",
"MigrationJobTest","controller","standardMigrations_testingEveryInternalRecipe_expectValidMigrations","non-void-command collaborator",
"MigrationJobTest","controller","createMockJobFromTestRecipes","property factory controller",
"MigrationJobTest","controller","getSampleNumberListsForAllMigratableCountries","property controller",
"OperatorsTableSchema","empty","OperatorsTableSchema","constructor",
"NfaBuilder","commander boundary","NfaBuilder","constructor",
"NfaBuilder","commander boundary","graph","get collaborator",
"NfaBuilder","commander boundary","addPath","get non-void-command collaborator",
"NfaBuilder","commander boundary","addPath","command collaborator",
"NfaBuilder","commander boundary","addOptionalPath","command collaborator",
"NfaBuilder","commander boundary","addEpsilon","command collaborator",
"NfaBuilder","commander boundary","addEdge","command collaborator",
"PhoneNumberMatch","unclassified","~PhoneNumberMatch","destructor",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::PhoneNumberMatch","constructor",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::PhoneNumberMatch","constructor",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::number","get collaborator",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::start","get",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::end","property",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::length","property",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::raw_string","get",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::set_start","set",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::set_raw_string","set",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::set_number","command collaborator",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::ToString","property",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::Equals","predicate controller",
"PhoneNumberMatch","unclassified","PhoneNumberMatch::CopyFrom","command",
"MatcherApi","empty","~MatcherApi","destructor",
"ChangeTest","pure-controller","testEmpty","controller",
"ChangeTest","pure-controller","testBuilder","controller",
"ChangeTest","pure-controller","testBuilderUnassignment","controller",
"FunctionCallback4","boundary degenerate small-class","FunctionCallback4","constructor",
"FunctionCallback4","boundary degenerate small-class","~FunctionCallback4","destructor",
"FunctionCallback4","boundary degenerate small-class","Run","wrapper stateless",
"CsvTableTest","degenerate","testRangeTableExport","controller",
"CsvTableTest","degenerate","testExampleNumberExport","controller stateless",
"CsvTableTest","degenerate","testDiff","controller stateless",
"CsvTableTest","degenerate","testEscaping","controller stateless",
"CsvTableTest","degenerate","testOrdering","controller",
"CsvTableTest","degenerate","testOptionalRowOrdering","controller stateless",
"CsvTableTest","degenerate","testUnsafeString","controller",
"CsvTableTest","degenerate","toString","collaborator incidental",
"StringLogger","data-class small-class","~StringLogger","destructor",
"StringLogger","data-class small-class","message","get",
"StringLogger","data-class small-class","WriteMessage","set",
"Singleton","empty","Singleton","constructor",
"Singleton","empty","~Singleton","destructor",
"MetadataZipFileReader","entity boundary small-class","MetadataZipFileReader","constructor",
"MetadataZipFileReader","entity boundary small-class","importCsvTable","property non-void-command collaborator",
"DefaultMapStorage","data-provider","DefaultMapStorage::DefaultMapStorage","constructor",
"DefaultMapStorage","data-provider","DefaultMapStorage::~DefaultMapStorage","destructor",
"DefaultMapStorage","data-provider","DefaultMapStorage::GetPrefix","get wrapper",
"DefaultMapStorage","data-provider","DefaultMapStorage::GetDescription","get wrapper",
"DefaultMapStorage","data-provider","DefaultMapStorage::ReadFromMap","command collaborator",
"DefaultMapStorage","data-provider","DefaultMapStorage::GetNumOfEntries","get",
"DefaultMapStorage","data-provider","DefaultMapStorage::GetPossibleLengths","get",
"DefaultMapStorage","data-provider","DefaultMapStorage::GetPossibleLengthsSize","get",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::PhoneNumberMatcher","copy-constructor",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::PhoneNumberMatcher","constructor",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::~PhoneNumberMatcher","destructor",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::IsInputUtf8","predicate non-void-command collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::IsLatinLetter","wrapper stateless",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::ParseAndVerify","predicate non-void-command collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::VerifyAccordingToLeniency","predicate",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::ExtractInnerMatch","predicate non-void-command collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::ExtractMatch","predicate non-void-command collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::HasNext","predicate non-void-command collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::Next","predicate non-void-command collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::Find","predicate non-void-command collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::CheckNumberGroupingIsValid","predicate collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::GetNationalNumberGroups","unclassified",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::GetNationalNumberGroupsForPattern","unclassified",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::IsNationalPrefixPresentIfRequired","predicate collaborator",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::AllNumberGroupsAreExactlyPresent","predicate",
"PhoneNumberMatcher","boundary","PhoneNumberMatcher::ContainsMoreThanOneSlashInNationalNumber","controller stateless",
"PhoneNumberRegExpsAndMappings","commander small-class","InitializeMapsAndSets","command",
"PhoneNumberRegExpsAndMappings","commander small-class","PhoneNumberRegExpsAndMappings","constructor",
"AutoLock","empty","AutoLock","constructor",
"AutoLock","empty","~AutoLock","destructor",
"OrderByFirst","boundary degenerate small-class","operator()","collaborator incidental",
"StdoutLogger","degenerate small-class","~StdoutLogger","destructor",
"StdoutLogger","degenerate small-class","StdoutLogger::WriteMessage","incidental",
"StdoutLogger","degenerate small-class","StdoutLogger::WriteLevel","wrapper stateless",
"ResultCallback4","empty","~ResultCallback4","destructor",
"CommandDispatcher","small-class","CommandDispatcher","constructor",
"CommandDispatcher","small-class","start","property non-void-command collaborator",
"CommandDispatcher","small-class","displayUsage","controller",
"ConstMethodCallback4","data-provider boundary small-class","ConstMethodCallback4","constructor",
"ConstMethodCallback4","data-provider boundary small-class","~ConstMethodCallback4","destructor",
"ConstMethodCallback4","data-provider boundary small-class","Run","property collaborator",
"RegexGenerator","controller","withDotMatch","property factory controller",
"RegexGenerator","controller","withDfaFactorization","property factory controller",
"RegexGenerator","controller","withSubgroupOptimization","property factory controller",
"RegexGenerator","controller","withTailOptimization","property factory controller",
"RegexGenerator","controller","RegexGenerator","constructor",
"RegexGenerator","controller","toRegex","property non-void-command collaborator",
"RegexGenerator","controller","recursivelyOptimizeSubgroups","property non-void-command collaborator",
"RegexGenerator","controller","generateFactorizedRegex","property non-void-command collaborator",
"RegexGenerator","controller","generateFactorizedRegex","controller stateless",
"RegexGenerator","controller","regexOf","property controller",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::PhoneNumberOfflineGeocoder","constructor",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::PhoneNumberOfflineGeocoder","constructor",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::Init","command collaborator",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::~PhoneNumberOfflineGeocoder","destructor",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::GetPhonePrefixDescriptions","property collaborator",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::LoadAreaCodeMapFromFile","property controller",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::GetCountryNameForNumber","property collaborator",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::GetRegionDisplayName","controller stateless",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::GetDescriptionForValidNumber","property collaborator",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::GetDescriptionForValidNumber","property",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::GetDescriptionForNumber","property collaborator",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::GetDescriptionForNumber","property collaborator",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::GetAreaDescription","property collaborator",
"PhoneNumberOfflineGeocoder","data-provider boundary","PhoneNumberOfflineGeocoder::MayFallBackToEnglish","controller stateless",
"RegexBasedMatcher","data-provider small-class","RegexBasedMatcher::RegexBasedMatcher","constructor",
"RegexBasedMatcher","data-provider small-class","RegexBasedMatcher::~RegexBasedMatcher","destructor",
"RegexBasedMatcher","data-provider small-class","RegexBasedMatcher::MatchNationalNumber","predicate",
"RegexBasedMatcher","data-provider small-class","RegexBasedMatcher::Match","predicate collaborator",
"MappingFileProvider","small-class","MappingFileProvider::MappingFileProvider","constructor",
"MappingFileProvider","small-class","MappingFileProvider::GetFileName","property collaborator",
"MappingFileProvider","small-class","MappingFileProvider::FindBestMatchingLanguageCode","controller stateless",
"LoggerHandler","entity boundary small-class","LoggerHandler","constructor",
"LoggerHandler","entity boundary small-class","~LoggerHandler","destructor",
"LoggerHandler","entity boundary small-class","operator<<","property non-void-command collaborator",
"AreaCodeMap","entity boundary","AreaCodeMap::AreaCodeMap","constructor",
"AreaCodeMap","entity boundary","AreaCodeMap::~AreaCodeMap","destructor",
"AreaCodeMap","entity boundary","AreaCodeMap::ReadAreaCodeMap","command collaborator",
"AreaCodeMap","entity boundary","AreaCodeMap::Lookup","property collaborator",
"AreaCodeMap","entity boundary","AreaCodeMap::BinarySearch","property collaborator",
"RangeTreeFactorizerTest","boundary degenerate","testEmpty","wrapper stateless",
"RangeTreeFactorizerTest","boundary degenerate","testSimplePrefix","wrapper stateless",
"RangeTreeFactorizerTest","boundary degenerate","testDisjointBranchesNotFactored","wrapper stateless",
"RangeTreeFactorizerTest","boundary degenerate","testOverlappingBranchesAreFactored","wrapper stateless",
"RangeTreeFactorizerTest","boundary degenerate","testStrategyDifference","non-void-command collaborator",
"RangeTreeFactorizerTest","boundary degenerate","ranges","property non-void-command collaborator",
"RangeTreeFactorizerTest","boundary degenerate","specs","controller stateless",
"PhoneNumberToCarrierMapper","entity boundary","PhoneNumberToCarrierMapper","constructor",
"PhoneNumberToCarrierMapper","entity boundary","getNameForValidNumber","property non-void-command collaborator",
"PhoneNumberToCarrierMapper","entity boundary","getNameForNumber","property non-void-command collaborator",
"PhoneNumberToCarrierMapper","entity boundary","getSafeDisplayName","property non-void-command collaborator",
"PhoneNumberToCarrierMapper","entity boundary","isMobile","collaborator incidental",
"MetadataParser","unclassified","MetadataParser","constructor",
"MetadataParser","unclassified","parse","property non-void-command collaborator",
"MetadataParser","unclassified","handleNullSource","property controller",
"MetadataParser","unclassified","close","command collaborator",
"SubgraphOptimizerTest","small-class","testSubgraphWeightAndInOrder","non-void-command collaborator",
"SubgraphOptimizerTest","small-class","testSubgraphExtraction","controller",
"OperationTest","pure-controller degenerate small-class","testWriteJumpTableNoExtraBranches","controller stateless",
"OperationTest","pure-controller degenerate small-class","testWriteJumpTableExtraBranches","controller stateless",
"GeneratePhonePrefixData","empty","GeneratePhonePrefixData","constructor",
"SequenceBytes","entity data-provider boundary","SequenceBytes","constructor",
"SequenceBytes","entity data-provider boundary","getSequence","get collaborator",
"SequenceBytes","entity data-provider boundary","isTerminator","property non-void-command collaborator",
"SequenceBytes","entity data-provider boundary","size","get",
"SequenceBytes","entity data-provider boundary","getBytes","get collaborator",
"Logger","unclassified","Logger","constructor",
"Logger","unclassified","~Logger","destructor",
"Logger","unclassified","WriteLevel","empty",
"Logger","unclassified","level","get",
"Logger","unclassified","set_level","set",
"Logger","unclassified","set_verbosity_level","command",
"GeoEntityUtility","empty","GeoEntityUtility","constructor",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::SetLogger","command collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::PhoneNumberUtil","constructor",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::~PhoneNumberUtil","destructor",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetSupportedRegions","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetSupportedGlobalNetworkCallingCodes","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetSupportedCallingCodes","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetSupportedTypesForRegion","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetSupportedTypesForNonGeoEntity","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetInstance","wrapper stateless",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetExtnPatternsForMatching","get",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::StartsWithPlusCharsPattern","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ContainsOnlyValidDigits","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::TrimUnwantedEndChars","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsFormatEligibleForAsYouTypeFormatter","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormattingRuleHasFirstGroupOnly","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetNddPrefixForRegion","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsValidRegionCode","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::HasValidCountryCallingCode","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetMetadataForRegion","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetMetadataForNonGeographicalRegion","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::Format","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatByPattern","unclassified",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatNationalNumberWithCarrierCode","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetMetadataForRegionOrCallingCode","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatNationalNumberWithPreferredCarrierCode","controller stateless",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatNumberForMobileDialing","unclassified",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatOutOfCountryCallingNumber","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatInOriginalFormat","unclassified",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::RawInputContainsNationalPrefix","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::HasFormattingPatternForNumber","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatOutOfCountryKeepingAlphaChars","unclassified",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ChooseFormattingPatternForNumber","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatNsnUsingPatternWithCarrier","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatNsnUsingPattern","unclassified",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatNsn","unclassified",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::FormatNsnWithCarrier","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::MaybeAppendFormattedExtension","controller stateless",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsNANPACountry","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetRegionCodesForCountryCallingCode","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetRegionCodeForCountryCode","void-accessor",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetRegionCodeForNumber","void-accessor",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetRegionCodeForNumberFromRegionList","void-accessor collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetCountryCodeForRegion","property",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetCountryCodeForValidRegion","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetExampleNumber","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetInvalidExampleNumber","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetExampleNumberForType","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetExampleNumberForType","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetExampleNumberForNonGeoEntity","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::Parse","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ParseAndKeepRawInput","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::CheckRegionForParsing","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ExtractPhoneContext","controller stateless",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsPhoneContextValid","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::BuildNationalNumberForParsing","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ParseHelper","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ExtractPossibleNumber","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsPossibleNumber","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsPossibleNumberForType","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsPossibleNumberForString","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsPossibleNumberWithReason","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsPossibleNumberForTypeWithReason","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::TruncateTooLongNumber","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetNumberType","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsValidNumber","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsValidNumberForRegion","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsNumberGeographical","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsNumberGeographical","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::SetItalianLeadingZerosForPhoneNumber","controller stateless",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsNumberMatchingDesc","predicate controller",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetNumberTypeHelper","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetNationalSignificantNumber","controller stateless",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetLengthOfGeographicalAreaCode","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetLengthOfNationalDestinationCode","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetCountryMobileToken","void-accessor",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::NormalizeDigitsOnly","collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::NormalizeDiallableCharsOnly","wrapper",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsAlphaNumber","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ConvertAlphaCharactersInNumber","wrapper",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::Normalize","unclassified",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsViablePhoneNumber","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ParsePrefixAsIdd","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::MaybeStripInternationalPrefixAndNormalize","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::MaybeStripNationalPrefixAndCarrierCode","predicate",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::MaybeStripExtension","predicate collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::ExtractCountryCode","property",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::MaybeExtractCountryCode","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsNumberMatch","controller stateless",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsNumberMatchWithTwoStrings","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::IsNumberMatchWithOneString","property collaborator",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::GetAsYouTypeFormatter","factory wrapper stateless",
"PhoneNumberUtil","data-provider boundary","PhoneNumberUtil::CanBeInternationallyDialled","predicate collaborator",
"DefaultDeleter<T[]>","boundary degenerate small-class","operator()","collaborator incidental",
"CommandLineMainTest","pure-controller","createMigrationJob_noNumberInputSpecified_expectException","controller",
"CommandLineMainTest","pure-controller","createMigrationJob_numberAndFile_expectException","controller",
"CommandLineMainTest","pure-controller","createFromNumberString_expectSufficientArguments","controller",
"CommandLineMainTest","pure-controller","createFromPath_expectSufficientArguments","controller",
"CommandLineMainTest","pure-controller","createMigrationJob_exportInvalidMigrationsAndCustomRecipe_expectException","controller",
"scoped_ptr","entity boundary","scoped_ptr","constructor",
"scoped_ptr","entity boundary","scoped_ptr","constructor",
"scoped_ptr","entity boundary","scoped_ptr","constructor",
"scoped_ptr","entity boundary","scoped_ptr","copy-constructor",
"scoped_ptr","entity boundary","operator=","property non-void-command collaborator",
"scoped_ptr","entity boundary","reset","command collaborator",
"scoped_ptr","entity boundary","operator*","property collaborator",
"scoped_ptr","entity boundary","operator->","property collaborator",
"scoped_ptr","entity boundary","get","property collaborator",
"scoped_ptr","entity boundary","get_deleter","property non-void-command collaborator",
"scoped_ptr","entity boundary","get_deleter","property collaborator",
"scoped_ptr","entity boundary","operatorTestable","unclassified",
"scoped_ptr","entity boundary","operator==","predicate collaborator",
"scoped_ptr","entity boundary","operator!=","predicate collaborator",
"scoped_ptr","entity boundary","swap","command",
"scoped_ptr","entity boundary","release","property non-void-command collaborator",
"ThreadChecker","data-provider boundary small-class","ThreadChecker","constructor",
"ThreadChecker","data-provider boundary small-class","CalledOnValidThread","predicate wrapper",
"ColumnTest","pure-controller degenerate","testBooleanColumn","controller stateless",
"ColumnTest","pure-controller degenerate","testStringColumn","controller stateless",
"ColumnTest","pure-controller degenerate","testEnumColumn","controller stateless",
"RegexGeneratorTest","boundary degenerate","testSimple","wrapper stateless",
"RegexGeneratorTest","boundary degenerate","testVariableLength","wrapper stateless",
"RegexGeneratorTest","boundary degenerate","testTailOptimization","wrapper stateless",
"RegexGeneratorTest","boundary degenerate","testDfaFactorization","wrapper stateless",
"RegexGeneratorTest","boundary degenerate","testSubgroupOptimization","controller stateless",
"RegexGeneratorTest","boundary degenerate","testRegression_bug_65250963","wrapper stateless",
"RegexGeneratorTest","boundary degenerate","testRegression_bug_68929642","controller stateless",
"AsYouTypeFormatter","unclassified","~AsYouTypeFormatter","destructor",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::AsYouTypeFormatter","constructor",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::GetMetadataForRegion","property collaborator",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::MaybeCreateNewTemplate","predicate non-void-command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::GetAvailableFormats","command collaborator",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::NarrowDownPossibleFormats","command collaborator",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::SetShouldAddSpaceAfterNationalPrefix","set collaborator",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::CreateFormattingTemplate","predicate non-void-command collaborator",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::GetFormattingTemplate","command collaborator",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::Clear","command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::InputDigit","property non-void-command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::InputDigitAndRememberPosition","property non-void-command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::InputDigitWithOptionToRememberPosition","command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::AttemptToChoosePatternWithPrefixExtracted","command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::GetExtractedNationalPrefix","get",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::AbleToExtractLongerNdd","predicate non-void-command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::AttemptToFormatAccruedDigits","command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::GetRememberedPosition","property",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::AppendNationalNumber","unclassified",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::AttemptToChooseFormattingPattern","command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::InputAccruedNationalNumber","command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::IsNanpaNumberWithNationalPrefix","predicate",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::RemoveNationalPrefixFromNationalNumber","command collaborator",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::AttemptToExtractIdd","predicate",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::AttemptToExtractCountryCode","predicate non-void-command",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::NormalizeAndAccrueDigitsAndPlusSign","property",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::InputDigitHelper","command collaborator",
"AsYouTypeFormatter","unclassified","AsYouTypeFormatter::ConvertUnicodeStringPosition","controller stateless",
"IcuRegExpInput","data-provider","IcuRegExpInput","constructor",
"IcuRegExpInput","data-provider","~IcuRegExpInput","destructor",
"IcuRegExpInput","data-provider","ToString","property controller",
"IcuRegExpInput","data-provider","Data","property collaborator",
"IcuRegExpInput","data-provider","position","get",
"IcuRegExpInput","data-provider","set_position","set",
"RE2RegExpInput","small-class","RE2RegExpInput","constructor",
"RE2RegExpInput","small-class","ToString","controller stateless",
"RE2RegExpInput","small-class","Data","property collaborator",
"RegExp","boundary degenerate","~RegExp","destructor",
"RegExp","boundary degenerate","Consume","wrapper stateless",
"RegExp","boundary degenerate","Consume","wrapper stateless",
"RegExp","boundary degenerate","Consume","wrapper stateless",
"RegExp","boundary degenerate","Consume","wrapper stateless",
"RegExp","boundary degenerate","Consume","wrapper stateless",
"RegExp","boundary degenerate","Consume","wrapper stateless",
"RegExp","boundary degenerate","Consume","wrapper stateless",
"RegExp","boundary degenerate","FindAndConsume","wrapper stateless",
"RegExp","boundary degenerate","PartialMatch","wrapper stateless",
"RegExp","boundary degenerate","PartialMatch","wrapper stateless",
"RegExp","boundary degenerate","FullMatch","wrapper stateless",
"RegExp","boundary degenerate","FullMatch","wrapper stateless",
"RegExp","boundary degenerate","Replace","wrapper stateless",
"RegExp","boundary degenerate","GlobalReplace","wrapper stateless",
"AnyPathTest","degenerate","testConstants","wrapper stateless",
"AnyPathTest","degenerate","testExtend","controller stateless",
"AnyPathTest","degenerate","testJoin","controller stateless",
"AnyPathTest","degenerate","testMakeOptional","controller stateless",
"AnyPathTest","degenerate","testToString","controller stateless",
"AnyPathTest","degenerate","testOrdering","controller stateless",
"PhoneNumberToTimeZonesMapper","empty","PhoneNumberToTimeZonesMapper","constructor",
"PhoneNumberToTimeZonesMapper","empty","PhoneNumberToTimeZonesMapper","constructor",
"scoped_ptr_impl","entity boundary","scoped_ptr_impl","constructor",
"scoped_ptr_impl","entity boundary","scoped_ptr_impl","constructor",
"scoped_ptr_impl","entity boundary","scoped_ptr_impl","copy-constructor",
"scoped_ptr_impl","entity boundary","TakeState","command collaborator",
"scoped_ptr_impl","entity boundary","~scoped_ptr_impl","destructor",
"scoped_ptr_impl","entity boundary","reset","set collaborator",
"scoped_ptr_impl","entity boundary","get","get collaborator",
"scoped_ptr_impl","entity boundary","get_deleter","get collaborator",
"scoped_ptr_impl","entity boundary","get_deleter","get collaborator",
"scoped_ptr_impl","entity boundary","swap","wrapper",
"scoped_ptr_impl","entity boundary","release","property set collaborator",
"FreeDeleter","boundary degenerate small-class","operator()","wrapper stateless",
"LengthsParser","empty","LengthsParser","constructor",
"GenerateTimeZonesMapData","empty","GenerateTimeZonesMapData","constructor",
"StringPiece","data-provider","StringPiece","constructor",
"StringPiece","data-provider","StringPiece","constructor",
"StringPiece","data-provider","StringPiece","constructor",
"StringPiece","data-provider","StringPiece","constructor",
"StringPiece","data-provider","data","get",
"StringPiece","data-provider","size","get",
"StringPiece","data-provider","length","get",
"StringPiece","data-provider","empty","predicate",
"StringPiece","data-provider","clear","command",
"StringPiece","data-provider","set","command",
"StringPiece","data-provider","set","command",
"StringPiece","data-provider","set","command",
"StringPiece","data-provider","operator[]","get",
"StringPiece","data-provider","remove_prefix","command",
"StringPiece","data-provider","remove_suffix","set",
"StringPiece","data-provider","compare","property wrapper",
"StringPiece","data-provider","as_string","property",
"StringPiece","data-provider","starts_with","predicate wrapper",
"StringPiece","data-provider","ends_with","predicate wrapper",
"StringPiece","data-provider","begin","get collaborator",
"StringPiece","data-provider","end","property collaborator",
"StringPiece","data-provider","rbegin","property wrapper",
"StringPiece","data-provider","rend","property wrapper",
"StringPiece","data-provider","max_size","get",
"StringPiece","data-provider","capacity","get",
"StringPiece","data-provider","find_first_of","property",
"StringPiece","data-provider","find_last_of","property",
"StringPiece","data-provider","StringPiece::CopyToString","unclassified",
"StringPiece","data-provider","StringPiece::AppendToString","unclassified",
"StringPiece","data-provider","StringPiece::copy","property wrapper",
"StringPiece","data-provider","StringPiece::find","get property wrapper",
"StringPiece","data-provider","StringPiece::find","get property wrapper",
"StringPiece","data-provider","StringPiece::rfind","get property controller",
"StringPiece","data-provider","StringPiece::rfind","get property wrapper",
"StringPiece","data-provider","StringPiece::find_first_of","get property",
"StringPiece","data-provider","StringPiece::find_first_not_of","get property",
"StringPiece","data-provider","StringPiece::find_first_not_of","get property",
"StringPiece","data-provider","StringPiece::find_last_of","get property",
"StringPiece","data-provider","StringPiece::find_last_not_of","get property",
"StringPiece","data-provider","StringPiece::find_last_not_of","get property wrapper",
"StringPiece","data-provider","StringPiece::substr","property wrapper",
"CompilerRegressionTest","pure-controller degenerate small-class","testCompiledBytesEqualExpectedMatcherBytes","controller stateless",
"CompilerRegressionTest","pure-controller degenerate small-class","testExpectedMatcherBytesMatchRanges","controller stateless",
"IcuRegExp","pure-controller degenerate","IcuRegExp","constructor",
"IcuRegExp","pure-controller degenerate","~IcuRegExp","destructor",
"IcuRegExp","pure-controller degenerate","Consume","controller stateless",
"IcuRegExp","pure-controller degenerate","Match","controller stateless",
"IcuRegExp","pure-controller degenerate","Replace","controller stateless",
"ICURegExpFactory","factory degenerate small-class","~ICURegExpFactory","destructor",
"ICURegExpFactory","factory degenerate small-class","ICURegExpFactory::CreateInput","factory wrapper stateless",
"ICURegExpFactory","factory degenerate small-class","ICURegExpFactory::CreateRegExp","factory wrapper stateless",
"PhoneNumberFormatting","empty","PhoneNumberFormatting","constructor",
"AsYouTypeFormatterTest","data-provider boundary","AsYouTypeFormatterTest","constructor",
"AsYouTypeFormatterTest","data-provider boundary","GetCurrentMetadata","get collaborator",
"AsYouTypeFormatterTest","data-provider boundary","GetExtractedNationalPrefix","property",
"AsYouTypeFormatterTest","data-provider boundary","ConvertUnicodeStringPosition","wrapper stateless",
"NullLogger","degenerate small-class","~NullLogger","destructor",
"NullLogger","degenerate small-class","WriteMessage","empty",
"RE2RegExpFactory","factory degenerate small-class","~RE2RegExpFactory","destructor",
"RE2RegExpFactory","factory degenerate small-class","RE2RegExpFactory::CreateInput","factory wrapper stateless",
"RE2RegExpFactory","factory degenerate small-class","RE2RegExpFactory::CreateRegExp","factory wrapper stateless",
"RegExpCache","entity boundary small-class","RegExpCache::RegExpCache","constructor",
"RegExpCache","entity boundary small-class","RegExpCache::~RegExpCache","destructor",
"RegExpCache","entity boundary small-class","RegExpCache::GetRegExp","property non-void-command collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::ShortNumberInfo","constructor",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::~ShortNumberInfo","destructor",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::GetMetadataForRegion","property collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::RegionDialingFromMatchesNumber","predicate",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::IsPossibleShortNumberForRegion","predicate collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::IsPossibleShortNumber","predicate collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::IsValidShortNumberForRegion","predicate collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::IsValidShortNumber","predicate collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::GetExpectedCostForRegion","property collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::GetExpectedCost","property collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::GetRegionCodeForShortNumberFromRegionList","collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::GetExampleShortNumber","property collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::GetExampleShortNumberForCost","property collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::ConnectsToEmergencyNumber","predicate",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::IsEmergencyNumber","predicate",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::MatchesEmergencyNumberHelper","predicate",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::IsCarrierSpecific","predicate collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::IsCarrierSpecificForRegion","predicate collaborator",
"ShortNumberInfo","data-provider boundary","ShortNumberInfo::IsSmsServiceForRegion","predicate collaborator",
"MigrationJob","boundary","MigrationJob","constructor",
"MigrationJob","boundary","getCountryCode","get collaborator",
"MigrationJob","boundary","getRecipesCsvTable","get collaborator",
"MigrationJob","boundary","getRecipesRangeTable","property controller",
"MigrationJob","boundary","getMigrationEntries","property non-void-command collaborator",
"MigrationJob","boundary","getMigrationReportForCountry","property non-void-command factory collaborator",
"MigrationJob","boundary","getMigrationReportForRecipe","property non-void-command collaborator",
"MigrationJob","boundary","migrate","property non-void-command collaborator",
"MigrationJob","boundary","getMigratedValue","controller stateless",
"MigrationJob","boundary","verifyMigratedNumbers","property non-void-command collaborator",
"StringByteSink","commander small-class","StringByteSink::StringByteSink","constructor",
"StringByteSink","commander small-class","StringByteSink::~StringByteSink","destructor",
"StringByteSink","commander small-class","StringByteSink::Append","command",
"EdgeWriterTest","boundary degenerate","testSimple","non-void-command collaborator",
"EdgeWriterTest","boundary degenerate","testSequences","wrapper stateless",
"EdgeWriterTest","boundary degenerate","testGroups","wrapper stateless",
"EdgeWriterTest","boundary degenerate","testNesting","wrapper stateless",
"EdgeWriterTest","boundary degenerate","testAnyDigitSequences","non-void-command collaborator",
"EdgeWriterTest","boundary degenerate","regex","controller stateless",
"StringHolder","boundary degenerate","GetString","wrapper stateless",
"StringHolder","boundary degenerate","GetCString","wrapper stateless",
"StringHolder","boundary degenerate","Length","wrapper stateless",
"StringHolder","boundary degenerate","StringHolder::StringHolder","constructor",
"StringHolder","boundary degenerate","StringHolder::StringHolder","constructor",
"StringHolder","boundary degenerate","StringHolder::StringHolder","constructor",
"StringHolder","boundary degenerate","StringHolder::~StringHolder","destructor",
"NfaFlattenerTest","pure-controller degenerate","testSimple","controller stateless",
"NfaFlattenerTest","pure-controller degenerate","testSubgroup","controller stateless",
"NfaFlattenerTest","pure-controller degenerate","testSubgroupWithEarlyJoining","controller stateless",
"NfaFlattenerTest","pure-controller degenerate","testPathDuplication","controller",
"NfaFlattenerTest","pure-controller degenerate","testNodeOrdering_bug_65250963","controller stateless",
"NfaFlattenerTest","pure-controller degenerate","testOptionalTopLevelGroup_bug_69101586","controller",
"scoped_ptr<T[],D>","entity boundary","scoped_ptr","constructor",
"scoped_ptr<T[],D>","entity boundary","scoped_ptr","constructor",
"scoped_ptr<T[],D>","entity boundary","reset","command collaborator",
"scoped_ptr<T[],D>","entity boundary","operator[]","property collaborator",
"scoped_ptr<T[],D>","entity boundary","get","property collaborator",
"scoped_ptr<T[],D>","entity boundary","get_deleter","property non-void-command collaborator",
"scoped_ptr<T[],D>","entity boundary","get_deleter","property collaborator",
"scoped_ptr<T[],D>","entity boundary","operatorTestable","unclassified",
"scoped_ptr<T[],D>","entity boundary","operator==","predicate collaborator",
"scoped_ptr<T[],D>","entity boundary","operator!=","predicate collaborator",
"scoped_ptr<T[],D>","entity boundary","swap","command",
"scoped_ptr<T[],D>","entity boundary","release","property non-void-command collaborator",
"MatcherTest","small-class","CheckMatcherBehavesAsExpected","collaborator",
"MatcherTest","small-class","CreateDesc","controller stateless",
"UnicodeText","unclassified","assign","property non-void-command",
"UnicodeText","unclassified","empty","predicate",
"UnicodeText","unclassified","append","property non-void-command collaborator",
"UnicodeText","unclassified","rbegin","property collaborator",
"UnicodeText","unclassified","rend","property collaborator",
"UnicodeText","unclassified","utf8_data","get",
"UnicodeText","unclassified","utf8_length","get",
"UnicodeText","unclassified","utf8_capacity","get",
"UnicodeText","unclassified","UTF8WasValid","predicate",
"UnicodeText","unclassified","UnicodeText::UnicodeText","constructor",
"UnicodeText","unclassified","UnicodeText::UnicodeText","copy-constructor",
"UnicodeText","unclassified","UnicodeText::UnicodeText","copy-constructor",
"UnicodeText","unclassified","UnicodeText::UTF8Substring","wrapper stateless",
"UnicodeText","unclassified","UnicodeText::operator=","property non-void-command",
"UnicodeText","unclassified","UnicodeText::Copy","property non-void-command",
"UnicodeText","unclassified","UnicodeText::CopyUTF8","property non-void-command",
"UnicodeText","unclassified","UnicodeText::UnsafeCopyUTF8","property non-void-command",
"UnicodeText","unclassified","UnicodeText::TakeOwnershipOfUTF8","property non-void-command",
"UnicodeText","unclassified","UnicodeText::UnsafeTakeOwnershipOfUTF8","property non-void-command",
"UnicodeText","unclassified","UnicodeText::PointToUTF8","property non-void-command",
"UnicodeText","unclassified","UnicodeText::UnsafePointToUTF8","property non-void-command",
"UnicodeText","unclassified","UnicodeText::PointTo","property non-void-command",
"UnicodeText","unclassified","UnicodeText::PointTo","property non-void-command collaborator",
"UnicodeText","unclassified","UnicodeText::append","property non-void-command",
"UnicodeText","unclassified","UnicodeText::append","property non-void-command collaborator",
"UnicodeText","unclassified","UnicodeText::UnsafeAppendUTF8","property non-void-command",
"UnicodeText","unclassified","UnicodeText::find","property collaborator",
"UnicodeText","unclassified","UnicodeText::find","property",
"UnicodeText","unclassified","UnicodeText::UnsafeFind","property collaborator",
"UnicodeText","unclassified","UnicodeText::HasReplacementChar","predicate collaborator",
"UnicodeText","unclassified","UnicodeText::clear","command",
"UnicodeText","unclassified","UnicodeText::~UnicodeText","destructor",
"UnicodeText","unclassified","UnicodeText::push_back","command collaborator",
"UnicodeText","unclassified","UnicodeText::size","property wrapper",
"UnicodeText","unclassified","operator==","predicate wrapper",
"UnicodeText","unclassified","UnicodeText::DebugString","property",
"UnicodeText","unclassified","UnicodeText::begin","property wrapper",
"UnicodeText","unclassified","UnicodeText::end","property wrapper",
"UnicodeText","unclassified","UnicodeText::MakeIterator","property",
"PhoneNumberUtilTest","data-provider","PhoneNumberUtilTest","constructor",
"PhoneNumberUtilTest","data-provider","GetPhoneMetadata","property collaborator",
"PhoneNumberUtilTest","data-provider","GetMetadataForNonGeographicalRegion","property collaborator",
"PhoneNumberUtilTest","data-provider","ExtractPossibleNumber","unclassified",
"PhoneNumberUtilTest","data-provider","IsViablePhoneNumber","predicate",
"PhoneNumberUtilTest","data-provider","Normalize","unclassified",
"PhoneNumberUtilTest","data-provider","MaybeStripInternationalPrefixAndNormalize","property collaborator",
"PhoneNumberUtilTest","data-provider","MaybeStripNationalPrefixAndCarrierCode","unclassified",
"PhoneNumberUtilTest","data-provider","MaybeStripExtension","predicate",
"PhoneNumberUtilTest","data-provider","MaybeExtractCountryCode","property collaborator",
"PhoneNumberUtilTest","data-provider","ContainsOnlyValidDigits","predicate",
"PhoneNumberUtilTest","data-provider","AssertThrowsForInvalidPhoneContext","command collaborator",
"AreaCodeMapTest","boundary small-class","SetUp","wrapper",
"PhoneNumberOfflineGeocoderTest","commander small-class","PhoneNumberOfflineGeocoderTest","constructor",
"PhoneNumberOfflineGeocoderTest","commander small-class","SetUp","command",
"DirEntry","data-provider data-class small-class","DirEntry","copy-constructor",
"DirEntry","data-provider data-class small-class","name","get",
"DirEntry","data-provider data-class small-class","kind","get collaborator",
"CsvParserTest","controller degenerate","testSimple","non-void-command collaborator",
"CsvParserTest","controller degenerate","testOtherDelimiters","controller stateless",
"CsvParserTest","controller degenerate","testWhitespaceTrimming","controller stateless",
"CsvParserTest","controller degenerate","testQuoting","controller stateless",
"CsvParserTest","controller degenerate","testQuoting_illegal","controller stateless",
"CsvParserTest","controller degenerate","testDelimiter","controller stateless",
"CsvParserTest","controller degenerate","testUnicode","controller stateless",
"CsvParserTest","controller degenerate","testMultiline","controller stateless",
"CsvParserTest","controller degenerate","testMultilineWithTrimming","controller stateless",
"CsvParserTest","controller degenerate","testMultiline_illegal","controller stateless",
"CsvParserTest","controller degenerate","testRowMapping","controller stateless",
"CsvParserTest","controller degenerate","testRowMapping_withHeader","controller stateless",
"CsvParserTest","controller degenerate","assertSingleRow","controller stateless",
"RangeSpecificationTest","controller degenerate","testParse","controller stateless",
"RangeSpecificationTest","controller degenerate","testParseBad","wrapper stateless",
"RangeSpecificationTest","controller degenerate","testSingleton","controller stateless",
"RangeSpecificationTest","controller degenerate","testMatches","controller stateless",
"RangeSpecificationTest","controller degenerate","testMinMax","controller stateless",
"RangeSpecificationTest","controller degenerate","testSequenceCount","controller stateless",
"RangeSpecificationTest","controller degenerate","testFrom","controller stateless",
"RangeSpecificationTest","controller degenerate","testAny","controller stateless",
"RangeSpecificationTest","controller degenerate","testFirst","controller stateless",
"RangeSpecificationTest","controller degenerate","testLast","controller stateless",
"RangeSpecificationTest","controller degenerate","testGetPrefix","controller stateless",
"RangeSpecificationTest","controller degenerate","testOrdering_simple","controller stateless",
"RangeSpecificationTest","controller degenerate","testOrdering_disjoint","wrapper stateless",
"RangeSpecificationTest","controller degenerate","testOrdering_overlapping","wrapper stateless",
"RangeSpecificationTest","controller degenerate","testToString","wrapper stateless",
"RangeSpecificationTest","controller degenerate","testBitmaskToString","controller stateless",
"RangeSpecificationTest","controller degenerate","testRangeProcessing_singleBlock","non-void-command collaborator",
"RangeSpecificationTest","controller degenerate","testRangeProcessing_fullRange","non-void-command collaborator",
"RangeSpecificationTest","controller degenerate","testRangeProcessing_edgeCases","controller stateless",
"RangeSpecificationTest","controller degenerate","testRangeProcessing_complex","controller stateless",
"RangeSpecificationTest","controller degenerate","testAsRanges_edgeCase","controller stateless",
"RangeSpecificationTest","controller degenerate","specs","controller stateless",
"DefaultDeleter","boundary degenerate small-class","DefaultDeleter","constructor",
"DefaultDeleter","boundary degenerate small-class","DefaultDeleter","copy-constructor",
"DefaultDeleter","boundary degenerate small-class","operator()","collaborator incidental",
"ContactsPermissionManagement","empty","ContactsPermissionManagement","constructor",
"PhonePrefixMapStorageStrategy","lazy-class small-class","getPossibleLengths","get collaborator",
"PhonePrefixMapStorageStrategy","lazy-class small-class","toString","controller stateless",
"LoggerTest","small-class","SetUp","unclassified",
"LoggerTest","small-class","TearDown","wrapper",
"Types","empty","Types","constructor",
"CommentsSchemaTest","commander boundary","testSimple_export","non-void-command collaborator",
"CommentsSchemaTest","commander boundary","testSimple_import","non-void-command collaborator",
"CommentsSchemaTest","commander boundary","testEscapedText_export","wrapper",
"CommentsSchemaTest","commander boundary","testEscapedText_import","wrapper",
"CommentsSchemaTest","commander boundary","testOrdering_export","non-void-command collaborator",
"CommentsSchemaTest","commander boundary","testOrdering_import","non-void-command collaborator",
"CommentsSchemaTest","commander boundary","comment","controller stateless",
"NumberContext","empty","NumberContext","constructor",
"NumberTest","data-provider boundary small-class","ToString","property wrapper",
"NumberTest","data-provider boundary small-class","NumberTest","constructor",
"PhoneNumberMatcherTest","commander boundary","PhoneNumberMatcherTest","constructor",
"PhoneNumberMatcherTest","commander boundary","IsLatinLetter","wrapper stateless",
"PhoneNumberMatcherTest","commander boundary","ContainsMoreThanOneSlashInNationalNumber","predicate wrapper",
"PhoneNumberMatcherTest","commander boundary","ExtractMatch","predicate non-void-command collaborator",
"PhoneNumberMatcherTest","commander boundary","GetMatcherWithLeniency","property factory wrapper",
"PhoneNumberMatcherTest","commander boundary","DoTestNumberMatchesForLeniency","collaborator",
"PhoneNumberMatcherTest","commander boundary","DoTestNumberNonMatchesForLeniency","collaborator",
"PhoneNumberMatcherTest","commander boundary","AssertMatchProperties","command collaborator",
"PhoneNumberMatcherTest","commander boundary","AssertEqualRange","controller",
"PhoneNumberMatcherTest","commander boundary","DoTestFindInContext","command collaborator",
"PhoneNumberMatcherTest","commander boundary","FindMatchesInContexts","command collaborator",
"PhoneNumberMatcherTest","commander boundary","FindMatchesInContexts","command",
"PhoneNumberMatcherTest","commander boundary","FindPossibleInContext","command collaborator",
"PhoneNumberMatcherTest","commander boundary","FindValidInContext","command collaborator",
"PhoneNumberMatcherTest","commander boundary","DoTestInContext","command collaborator",
"PhoneNumberMatcherTest","commander boundary","EnsureTermination","controller",
"MigrationUtilsTest","pure-controller","getCountryMigratableNumbers_expectNoMatches","controller",
"MigrationUtilsTest","pure-controller","getCountryMigratableNumbers_expectMatches","controller",
"MigrationUtilsTest","pure-controller","getMigratableNumbers_invalidKey_expectException","controller",
"MigrationUtilsTest","pure-controller","getMigratableNumbers_validKey_expectNoExceptionAndNoMatches","controller",
"MigrationUtilsTest","pure-controller","findMatchingRecipe_expectNoMatchingRecipe","controller",
"MigrationUtilsTest","pure-controller","findMatchingRecipe_expectMatchingRecipe","controller",
"Operation","boundary lazy-class","value","wrapper stateless",
"Operation","boundary lazy-class","Operation","constructor",
"Operation","boundary lazy-class","isTerminating","get collaborator",
"Operation","boundary lazy-class","isBranching","get collaborator",
"Operation","boundary lazy-class","writeTo","command collaborator",
"Operation","boundary lazy-class","mergeWith","incidental",
"TrailingPathOptimizerTest","pure-controller degenerate","testSimple","controller stateless",
"TrailingPathOptimizerTest","pure-controller degenerate","testTrailingOptionalGroup","controller stateless",
"TrailingPathOptimizerTest","pure-controller degenerate","testDoubleRecursion","controller stateless",
"TrailingPathOptimizerTest","pure-controller degenerate","testNoChangeIfNoCommonFactor","controller stateless",
"RegExpAdapterTest","empty","RegExpAdapterTest","constructor",
"RegExpAdapterTest","empty","~RegExpAdapterTest","destructor",
"RegExpCacheTest","empty","RegExpCacheTest","constructor",
"RegExpCacheTest","empty","~RegExpCacheTest","destructor",
"ShortNumberInfoTest","entity boundary small-class","ParseNumberForTesting","property non-void-command collaborator",
"ShortNumberInfoTest","entity boundary small-class","ShortNumberInfoTest","constructor",
"Lock","boundary small-class","Lock","constructor",
"Lock","boundary small-class","~Lock","destructor",
"Lock","boundary small-class","Acquire","wrapper",
"Lock","boundary small-class","Release","wrapper",
"ContactsRead","empty","ContactsRead","constructor",
"ContactsWrite","empty","ContactsWrite","constructor",
"PhoneNumberFormattingTest","pure-controller degenerate","formatPhoneNumberInApp_parsingError","controller stateless",
"PhoneNumberFormattingTest","pure-controller degenerate","formatPhoneNumberInApp_numberIsShortNumber","controller stateless",
"PhoneNumberFormattingTest","pure-controller degenerate","formatPhoneNumberInApp_invalidNumber","controller stateless",
"PhoneNumberFormattingTest","pure-controller degenerate","formatPhoneNumberInApp_numberIsAlreadyInE164","controller stateless",
"PhoneNumberFormattingTest","pure-controller degenerate","formatPhoneNumberInApp_originalWithWhitespace_ignoreWhitespaceTrue_numberIsAlreadyInE164","controller stateless",
"PhoneNumberFormattingTest","pure-controller degenerate","formatPhoneNumberInApp_originalWithWhitespace_ignoreWhitespaceFalse_completed","controller stateless",
"PhoneNumberFormattingTest","pure-controller degenerate","formatPhoneNumberInApp_completed","controller stateless",
"AssignmentTest","unclassified","testParsing","controller",
"AssignmentTest","unclassified","testOf","non-void-command collaborator",
"AssignmentTest","unclassified","testUnassign","controller",
"MatcherCompiler","entity boundary","sortedOutputs","property non-void-command collaborator",
"MatcherCompiler","entity boundary","singleOutput","property non-void-command collaborator",
"MatcherCompiler","entity boundary","getOutMap","property non-void-command collaborator",
"MatcherCompiler","entity boundary","buildSequencesFrom","command collaborator",
"MatcherCompiler","entity boundary","compile","property non-void-command collaborator",
"MatcherCompiler","entity boundary","createMatcherBytes","property non-void-command factory collaborator",
"RegexFormatter","unclassified","RegexFormatter","constructor",
"RegexFormatter","unclassified","format","property non-void-command collaborator",
"RegexFormatter","unclassified","recurse","property non-void-command",
"RegexFormatter","unclassified","indent","command",
"PrefixFileReader","boundary","PrefixFileReader","constructor",
"PrefixFileReader","boundary","loadMappingFileProvider","command collaborator",
"PrefixFileReader","boundary","getPhonePrefixDescriptions","property non-void-command collaborator",
"PrefixFileReader","boundary","loadPhonePrefixMapFromFile","command collaborator",
"PrefixFileReader","boundary","getDescriptionForNumber","property non-void-command collaborator",
"PrefixFileReader","boundary","mayFallBackToEnglish","controller stateless",
"PhoneNumberInAppTest","pure-controller degenerate","constructor","controller stateless",
"PhoneNumberInAppTest","pure-controller degenerate","setFormattedPhoneNumber","controller stateless",
"PhoneNumberInAppTest","pure-controller degenerate","setFormattingState","controller stateless",
"PhoneNumberInAppTest","pure-controller degenerate","setShouldContactBeUpdated","controller stateless",
"PhoneNumberInAppTest","pure-controller degenerate","compareTo","controller stateless",
"RegExpTestContext","empty","RegExpTestContext","constructor",
"Phonemetadata","empty","Phonemetadata","constructor",
"PhonePrefixLanguagePair","empty","PhonePrefixLanguagePair","constructor",
"UnicodeString","unclassified","UnicodeString","constructor",
"UnicodeString","unclassified","UnicodeString","constructor",
"UnicodeString","unclassified","UnicodeString","constructor",
"UnicodeString","unclassified","UnicodeString","copy-constructor",
"UnicodeString","unclassified","append","command collaborator",
"UnicodeString","unclassified","begin","property collaborator",
"UnicodeString","unclassified","end","property collaborator",
"UnicodeString","unclassified","length","property",
"UnicodeString","unclassified","remove","command",
"UnicodeString","unclassified","setTo","command",
"UnicodeString","unclassified","UTF8WasValid","predicate",
"UnicodeString","unclassified","toUTF8String","void-accessor wrapper",
"UnicodeString","unclassified","invalidateCachedIndex","set",
"UnicodeString","unclassified","UnicodeString::operator=","property set",
"UnicodeString","unclassified","UnicodeString::operator==","predicate",
"UnicodeString","unclassified","UnicodeString::append","command",
"UnicodeString","unclassified","UnicodeString::indexOf","property collaborator",
"UnicodeString","unclassified","UnicodeString::replace","command collaborator",
"UnicodeString","unclassified","UnicodeString::setCharAt","command collaborator",
"UnicodeString","unclassified","UnicodeString::tempSubString","property",
"UnicodeString","unclassified","UnicodeString::operator[]","get non-void-command collaborator",
"Phonenumber","entity boundary","Phonenumber","constructor",
"Phonenumber","entity boundary","hasItalianLeadingZero","collaborator incidental",
"Phonenumber","entity boundary","isItalianLeadingZero","get collaborator",
"Phonenumber","entity boundary","setItalianLeadingZero","property set collaborator",
"Phonenumber","entity boundary","clearItalianLeadingZero","property set collaborator",
"Phonenumber","entity boundary","hasNumberOfLeadingZeros","get collaborator",
"Phonenumber","entity boundary","getNumberOfLeadingZeros","get",
"Phonenumber","entity boundary","setNumberOfLeadingZeros","property non-void-command collaborator",
"Phonenumber","entity boundary","clearNumberOfLeadingZeros","property non-void-command collaborator",
"Phonenumber","entity boundary","hasRawInput","get collaborator",
"Phonenumber","entity boundary","getRawInput","get collaborator",
"Phonenumber","entity boundary","setRawInput","property non-void-command collaborator",
"Phonenumber","entity boundary","clearRawInput","property non-void-command collaborator",
"Phonenumber","entity boundary","hasCountryCodeSource","get collaborator",
"Phonenumber","entity boundary","getCountryCodeSource","get collaborator",
"Phonenumber","entity boundary","setCountryCodeSource","property non-void-command collaborator",
"Phonenumber","entity boundary","clearCountryCodeSource","property non-void-command collaborator",
"Phonenumber","entity boundary","hasPreferredDomesticCarrierCode","get collaborator",
"Phonenumber","entity boundary","getPreferredDomesticCarrierCode","get collaborator",
"Phonenumber","entity boundary","setPreferredDomesticCarrierCode","property non-void-command collaborator",
"Phonenumber","entity boundary","clearPreferredDomesticCarrierCode","property non-void-command collaborator",
"Phonenumber","entity boundary","clear","property non-void-command collaborator",
"Phonenumber","entity boundary","mergeFrom","property non-void-command collaborator",
"Phonenumber","entity boundary","exactlySameAs","property non-void-command collaborator",
"Phonenumber","entity boundary","equals","property non-void-command collaborator",
"Phonenumber","entity boundary","hashCode","property non-void-command collaborator",
"Phonenumber","entity boundary","toString","property non-void-command collaborator",
"RegexCache","entity boundary small-class","RegexCache","constructor",
"RegexCache","entity boundary small-class","getPatternForRegex","property non-void-command collaborator",
"RegexCache","entity boundary small-class","containsRegex","property non-void-command collaborator",
"RE2RegExp","data-provider boundary","RE2RegExp","constructor",
"RE2RegExp","data-provider boundary","Consume","predicate wrapper",
"RE2RegExp","data-provider boundary","Match","predicate wrapper",
"RE2RegExp","data-provider boundary","Replace","predicate wrapper",
"PrefixTree","boundary","PrefixTree","constructor",
"PrefixTree","boundary","asRangeTree","get collaborator",
"PrefixTree","boundary","isEmpty","property non-void-command collaborator",
"PrefixTree","boundary","isIdentity","property non-void-command collaborator",
"PrefixTree","boundary","prefixes","property non-void-command collaborator",
"PrefixTree","boundary","retainFrom","controller stateless",
"PrefixTree","boundary","intersect","controller stateless",
"PrefixTree","boundary","trim","property non-void-command",
"PrefixTree","boundary","hashCode","property non-void-command collaborator",
"PrefixTree","boundary","equals","property non-void-command collaborator",
"PrefixTree","boundary","toString","property non-void-command collaborator",
"PrefixTree","boundary","visit","set collaborator",
"MetadataFilter","entity boundary","MetadataFilter","constructor",
"MetadataFilter","entity boundary","equals","property non-void-command collaborator",
"MetadataFilter","entity boundary","hashCode","property non-void-command collaborator",
"MetadataFilter","entity boundary","filterMetadata","command collaborator",
"MetadataFilter","entity boundary","shouldDrop","property non-void-command collaborator",
"MetadataFilter","entity boundary","shouldDrop","property non-void-command collaborator",
"MetadataFilter","entity boundary","getFiltered","property non-void-command collaborator",
"RangesTableSchema","entity boundary small-class","toValidNumberType","property non-void-command collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","DefaultMetadataDependenciesProvider","constructor",
"DefaultMetadataDependenciesProvider","data-provider boundary","getMetadataParser","get collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","getMetadataLoader","get collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","getPhoneNumberMetadataFileNameProvider","get collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","getPhoneNumberMetadataSource","get collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","getShortNumberMetadataFileNameProvider","get collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","getShortNumberMetadataSource","get collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","getAlternateFormatsMetadataFileNameProvider","get collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","getAlternateFormatsMetadataSource","get collaborator",
"DefaultMetadataDependenciesProvider","data-provider boundary","getCarrierDataDirectory","collaborator incidental",
"DefaultMetadataDependenciesProvider","data-provider boundary","getGeocodingDataDirectory","collaborator incidental",
"MatcherCompilerTest","unclassified","testSingleOperation","wrapper",
"MatcherCompilerTest","unclassified","testAnyOperation","wrapper",
"MatcherCompilerTest","unclassified","testRangeOperation","wrapper",
"MatcherCompilerTest","unclassified","testMapOperation","controller",
"MatcherCompilerTest","unclassified","testConsistentSorting","wrapper stateless",
"MatcherCompilerTest","unclassified","assertCompile","controller stateless",
"EdgeTest","degenerate","testSimple","controller stateless",
"EdgeTest","degenerate","testAny","controller stateless",
"EdgeTest","degenerate","testEpsilon","controller stateless",
"EdgeTest","degenerate","testConcatenation","controller stateless",
"EdgeTest","degenerate","testGroup","controller stateless",
"EdgeTest","degenerate","testOptionalGroup","controller stateless",
"EdgeTest","degenerate","testOrdering","wrapper stateless",
"AltFormatsSchemaTest","commander boundary","testSimple_export","non-void-command collaborator",
"AltFormatsSchemaTest","commander boundary","testSimple_import","non-void-command collaborator",
"AltFormatsSchemaTest","commander boundary","testEscapedText_export","non-void-command collaborator",
"AltFormatsSchemaTest","commander boundary","testEscapedText_import","non-void-command collaborator",
"AltFormatsSchemaTest","commander boundary","testRetainsExplicitOrdering","non-void-command collaborator",
"AltFormatsSchemaTest","commander boundary","altFormat","controller stateless",
"FormatsTableSchema","empty","FormatsTableSchema","constructor",
