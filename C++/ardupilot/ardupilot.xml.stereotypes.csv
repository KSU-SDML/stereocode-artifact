Class Name,Class Stereotype,Method Name,Method Stereotype
"StorageAccess","data-provider","size","get",
"StorageAccess","data-provider","read_uint8","property",
"StorageAccess","data-provider","write_uint8","unclassified",
"StorageAccess","data-provider","StorageAccess::StorageAccess","constructor",
"StorageAccess","data-provider","StorageAccess::read_block","predicate controller",
"StorageAccess","data-provider","StorageAccess::write_block","predicate controller",
"StorageAccess","data-provider","StorageAccess::read_byte","property",
"StorageAccess","data-provider","StorageAccess::read_uint16","property",
"StorageAccess","data-provider","StorageAccess::read_uint32","property",
"StorageAccess","data-provider","StorageAccess::read_float","property",
"StorageAccess","data-provider","StorageAccess::write_byte","unclassified",
"StorageAccess","data-provider","StorageAccess::write_uint16","unclassified",
"StorageAccess","data-provider","StorageAccess::write_uint32","unclassified",
"StorageAccess","data-provider","StorageAccess::write_float","unclassified",
"StorageAccess","data-provider","StorageAccess::copy_area","predicate",
"StorageAccess","data-provider","StorageAccess::attach_file","predicate set collaborator",
"StorageAccess","data-provider","StorageAccess::flush_file","wrapper stateless",
"SRV_Channel","unclassified","valid_function","predicate",
"SRV_Channel","unclassified","get_output_pwm","get",
"SRV_Channel","unclassified","get_reversed","predicate",
"SRV_Channel","unclassified","set_output_min","command",
"SRV_Channel","unclassified","set_output_max","command",
"SRV_Channel","unclassified","get_output_min","get",
"SRV_Channel","unclassified","get_output_max","get",
"SRV_Channel","unclassified","get_trim","get",
"SRV_Channel","unclassified","get_function","property collaborator",
"SRV_Channel","unclassified","function_set_and_save","command collaborator",
"SRV_Channel","unclassified","reversed_set_and_save_ifchanged","command",
"SRV_Channel","unclassified","function_configured","predicate",
"SRV_Channel","unclassified","ignore_small_rcin_changes","set",
"SRV_Channel","unclassified","set_override","set",
"SRV_Channel","unclassified","SRV_Channel::SRV_Channel","constructor",
"SRV_Channel","unclassified","SRV_Channel::pwm_from_range","get property wrapper",
"SRV_Channel","unclassified","SRV_Channel::pwm_from_angle","get property wrapper",
"SRV_Channel","unclassified","SRV_Channel::pwm_from_scaled_value","property",
"SRV_Channel","unclassified","SRV_Channel::calc_pwm","unclassified",
"SRV_Channel","unclassified","SRV_Channel::set_output_pwm","command",
"SRV_Channel","unclassified","SRV_Channel::set_output_norm","command",
"SRV_Channel","unclassified","SRV_Channel::set_angle","command",
"SRV_Channel","unclassified","SRV_Channel::set_range","command",
"SRV_Channel","unclassified","SRV_Channel::get_output_norm","property non-void-command",
"SRV_Channel","unclassified","SRV_Channel::get_limit_pwm","get property collaborator",
"SRV_Channel","unclassified","SRV_Channel::is_motor","collaborator incidental",
"SRV_Channel","unclassified","SRV_Channel::should_e_stop","collaborator incidental",
"SRV_Channel","unclassified","SRV_Channel::is_control_surface","collaborator incidental",
"SRV_Channel","unclassified","SRV_Channel::get_motor_num","property collaborator",
"SRV_Channel","unclassified","SRV_Channel::output_ch","command",
"SRV_Channel","unclassified","SRV_Channel::aux_servo_function_setup","command",
"dummy","boundary degenerate","dummy::convert_forward_pub","wrapper stateless",
"dummy","boundary degenerate","dummy::convert_pub","wrapper stateless",
"dummy","boundary degenerate","dummy::convert_forward_pub","wrapper stateless",
"dummy","boundary degenerate","dummy::convert_pub","wrapper stateless",
"simpleRover","small-class","simpleRover::update","predicate non-void-command",
"simpleRover","small-class","simpleRover::_interp1D","incidental",
"libAP_JSON","commander","libAP_JSON::InitSockets","predicate non-void-command",
"libAP_JSON","commander","libAP_JSON::ReceiveServoPacket","predicate non-void-command",
"libAP_JSON","commander","libAP_JSON::SendState","command collaborator",
"libAP_JSON","commander","libAP_JSON::setAirspeed","command",
"libAP_JSON","commander","libAP_JSON::setWindvane","command",
"libAP_JSON","commander","libAP_JSON::setRangefinder","command",
"Frame_helper","data-provider","public_load_frame_params","wrapper stateless",
"Frame_helper","data-provider","get_capacity","get",
"Frame_helper","data-provider","get_max_volt","get",
"Frame_helper","data-provider","get_resistance","get",
"ServoModel","unclassified","ServoModel::apply_simple_filter","controller stateless",
"ServoModel","unclassified","ServoModel::apply_filter","property non-void-command",
"ServoModel","unclassified","ServoModel::filter_range","property non-void-command",
"ServoModel","unclassified","ServoModel::filter_angle","property non-void-command",
"ServoModel","unclassified","ServoModel::set_pwm_range","command",
"ServoModel","unclassified","ServoModel::set_deflection","set",
"Vicon","commander boundary","should_send","controller stateless",
"Vicon","commander boundary","Vicon::Vicon","constructor",
"Vicon","commander boundary","Vicon::maybe_send_heartbeat","set collaborator",
"Vicon","commander boundary","Vicon::get_free_msg_buf_index","wrapper stateless",
"Vicon","commander boundary","Vicon::update_vicon_position_estimate","command collaborator",
"Vicon","commander boundary","Vicon::update","command collaborator",
"VectorNav","commander boundary degenerate","VectorNav::VectorNav","constructor",
"VectorNav","commander boundary degenerate","VectorNav::send_packet1","wrapper stateless",
"VectorNav","commander boundary degenerate","VectorNav::send_packet2","wrapper stateless",
"VectorNav","commander boundary degenerate","VectorNav::nmea_printf","wrapper stateless",
"VectorNav","commander boundary degenerate","VectorNav::update","command",
"ToshibaLED","commander boundary","init","command",
"ToshibaLED","commander boundary","rdwr","wrapper stateless",
"ToshibaLED","commander boundary","SITL::ToshibaLED::update","command collaborator",
"TSYS03","boundary","set_state","set collaborator",
"TSYS03","boundary","time_in_state_ms","property wrapper",
"TSYS03","boundary","SITL::TSYS03::rdwr_handle_read","property non-void-command collaborator",
"TSYS03","boundary","SITL::TSYS03::rdwr_handle_write","property non-void-command collaborator",
"TSYS03","boundary","SITL::TSYS03::rdwr","property non-void-command collaborator",
"TSYS03","boundary","SITL::TSYS03::temperature_for_adc","wrapper stateless",
"TSYS03","boundary","SITL::TSYS03::calculate_adc","property",
"TSYS03","boundary","SITL::TSYS03::update","command collaborator",
"TSYS03","boundary","SITL::TSYS03::get_sim_temperature","controller stateless",
"MCP9600","commander boundary lazy-class degenerate","MCP9600::init","wrapper stateless",
"MCP9600","commander boundary lazy-class degenerate","MCP9600::update","set collaborator",
"MCP9600","commander boundary lazy-class degenerate","MCP9600::rdwr","wrapper stateless",
"Submarine","unclassified","rangefinder_beam_width","incidental",
"Submarine","unclassified","Submarine::Submarine","constructor",
"Submarine","unclassified","Submarine::perpendicular_distance_to_rangefinder_surface","property",
"Submarine","unclassified","Submarine::calculate_forces","void-accessor command collaborator",
"Submarine","unclassified","Submarine::calculate_buoyancy_torque","void-accessor command collaborator",
"Submarine","unclassified","Submarine::calculate_sea_floor_depth","incidental",
"Submarine","unclassified","Submarine::calculate_drag_force","void-accessor wrapper",
"Submarine","unclassified","Submarine::calculate_angular_drag_torque","wrapper stateless",
"Submarine","unclassified","Submarine::calculate_buoyancy_acceleration","property",
"Submarine","unclassified","Submarine::update","command collaborator",
"Submarine","unclassified","Submarine::on_ground","incidental",
"Thruster","empty","Thruster","constructor",
"StratoBlimp","entity boundary","StratoBlimp::StratoBlimp","constructor",
"StratoBlimp","entity boundary","StratoBlimp::calculate_coefficients","collaborator",
"StratoBlimp","entity boundary","StratoBlimp::handle_motor","void-accessor wrapper",
"StratoBlimp","entity boundary","StratoBlimp::get_drag","void-accessor wrapper",
"StratoBlimp","entity boundary","StratoBlimp::get_lift","property set",
"StratoBlimp","entity boundary","StratoBlimp::calculate_forces","void-accessor command collaborator",
"StratoBlimp","entity boundary","StratoBlimp::update","command collaborator",
"Ship","commander boundary small-class","Ship::update","command collaborator",
"Scrimmage","commander boundary","Scrimmage::Scrimmage","constructor",
"Scrimmage","commander boundary","Scrimmage::set_interface_ports","command",
"Scrimmage","commander boundary","Scrimmage::send_servos","command collaborator",
"Scrimmage","commander boundary","Scrimmage::recv_fdm","command collaborator",
"Scrimmage","commander boundary","Scrimmage::update","command collaborator",
"SPI","degenerate","SPI","constructor",
"SPI","degenerate","init","empty",
"SPI","degenerate","init","wrapper stateless",
"SPI","degenerate","init","wrapper stateless",
"SPI","degenerate","SPI::init","controller stateless",
"SPI","degenerate","SPI::update","controller stateless",
"SPI","degenerate","SPI::ioctl_transaction","controller stateless",
"SPI","degenerate","SPI::ioctl","property non-void-command",
"SMBusDevice","entity boundary","SMBusDevice","constructor",
"SMBusDevice","entity boundary","set_register","wrapper stateless",
"SMBusDevice","entity boundary","set_register","wrapper stateless",
"SMBusDevice","entity boundary","get_reg_value","wrapper stateless",
"SMBusDevice","entity boundary","set_block","command",
"SMBusDevice","entity boundary","add_register","wrapper stateless",
"SMBusDevice","entity boundary","SITL::SMBusDevice::rdwr","property wrapper",
"SMBusDevice","entity boundary","SITL::SMBusDevice::add_block","collaborator",
"SMBusDevice","entity boundary","SITL::SMBusDevice::set_block","command",
"SimRover","unclassified","SimRover::SimRover","constructor",
"SimRover","unclassified","SimRover::turn_circle","property wrapper",
"SimRover","unclassified","SimRover::calc_yaw_rate","property non-void-command",
"SimRover","unclassified","SimRover::calc_lat_accel","property non-void-command",
"SimRover","unclassified","SimRover::update","command collaborator",
"RichenPower","commander boundary","RichenPower::RichenPower","constructor",
"RichenPower","commander boundary","RichenPower::set_run_state","set collaborator",
"RichenPower","commander boundary","RichenPower::update","command collaborator",
"RichenPower","commander boundary","RichenPower::update_control_pin","command collaborator",
"RichenPower","commander boundary","RichenPower::update_send","command",
"RF_Wasp","commander","reading_interval_ms","incidental",
"RF_Wasp","commander","RF_Wasp::check_configuration","set",
"RF_Wasp","commander","RF_Wasp::update","command",
"RF_Wasp","commander","RF_Wasp::packet_for_alt","wrapper stateless",
"RF_USD1_v1","degenerate small-class","RF_USD1_v1::packet_for_alt","incidental",
"RF_USD1_v0","degenerate small-class","RF_USD1_v0::packet_for_alt","incidental",
"RF_TeraRanger_Serial","boundary degenerate small-class","RF_TeraRanger_Serial::packet_for_alt","wrapper stateless",
"RF_RDS02UF","boundary degenerate small-class","RF_RDS02UF::packet_for_alt","wrapper stateless",
"RF_MAVLink","data-provider boundary small-class","RF_MAVLink::packet_for_alt","property wrapper",
"RF_LightWareSerial","minimal-entity boundary lazy-class","RF_LightWareSerial::check_synced","get set collaborator",
"RF_LightWareSerial","minimal-entity boundary lazy-class","RF_LightWareSerial::update","command",
"RF_LightWareSerial","minimal-entity boundary lazy-class","RF_LightWareSerial::packet_for_alt","wrapper stateless",
"RF_LeddarOne","boundary degenerate small-class","RF_LeddarOne::packet_for_alt","wrapper stateless",
"RF_Lanbao","boundary degenerate small-class","RF_Lanbao::packet_for_alt","wrapper stateless",
"RF_GYUS42v2","degenerate small-class","reading_interval_ms","incidental",
"RF_GYUS42v2","degenerate small-class","RF_GYUS42v2::packet_for_alt","incidental",
"RF_Benewake_TFmini","degenerate","byte4","incidental",
"RF_Benewake_TFmini","degenerate","byte5","incidental",
"RF_Benewake_TFmini","degenerate","byte6","incidental",
"RF_Benewake_TFmini","degenerate","byte7","incidental",
"RF_Benewake","boundary degenerate small-class","RF_Benewake::packet_for_alt","wrapper stateless",
"RF_Ainstein_LR_D1","degenerate small-class","reading_interval_ms","incidental",
"RF_Ainstein_LR_D1","degenerate small-class","RF_Ainstein_LR_D1::packet_for_alt","wrapper stateless",
"RAMTRON_FM25V02","data-provider","id1","property",
"RAMTRON_FM25V02","data-provider","id2","property",
"RAMTRON_FM25V02","data-provider","filename","incidental",
"RAMTRON_FM25V02","data-provider","storage_size","incidental",
"RAMTRON_FM25V02","data-provider","RAMTRON_FM25V02::fill_rdid","void-accessor command",
"RAMTRON","small-class","RAMTRON::open_storage_fd","set",
"RAMTRON","small-class","RAMTRON::rdwr","property non-void-command collaborator",
"PS_TeraRangerTower","commander boundary","PS_TeraRangerTower::packet_for_location","incidental",
"PS_TeraRangerTower","commander boundary","PS_TeraRangerTower::update_output","set collaborator",
"PS_TeraRangerTower","commander boundary","PS_TeraRangerTower::update","command collaborator",
"PS_RPLidarA2","degenerate small-class","device_info_model","incidental",
"PS_RPLidarA2","degenerate small-class","max_range","incidental",
"PS_RPLidar","commander boundary","set_state","set collaborator",
"PS_RPLidar","commander boundary","set_inputstate","set collaborator",
"PS_RPLidar","commander boundary","PS_RPLidar::packet_for_location","incidental",
"PS_RPLidar","commander boundary","PS_RPLidar::move_preamble_in_buffer","set",
"PS_RPLidar","commander boundary","PS_RPLidar::update_input","command collaborator",
"PS_RPLidar","commander boundary","PS_RPLidar::update_output_scan","command collaborator",
"PS_RPLidar","commander boundary","PS_RPLidar::update_output","command collaborator",
"PS_RPLidar","commander boundary","PS_RPLidar::update","command collaborator",
"PS_RPLidar","commander boundary","PS_RPLidar::send_response_descriptor","wrapper stateless",
"PS_LightWare_SF45B","commander boundary","u","constructor",
"PS_LightWare_SF45B","commander boundary","msg_checksum","property",
"PS_LightWare_SF45B","commander boundary","payload_length","property wrapper",
"PS_LightWare_SF45B","commander boundary","set_inputstate","set collaborator",
"PS_LightWare_SF45B","commander boundary","set_state","set collaborator",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::packet_for_location","incidental",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::move_preamble_in_buffer","set",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::send","wrapper stateless",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::handle_message","command",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::update_input","unclassified",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::update","command collaborator",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::update_output","command collaborator",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::update_output_responses","command collaborator",
"PS_LightWare_SF45B","commander boundary","PS_LightWare_SF45B::update_output_scan","command collaborator",
"NoVehicle","degenerate small-class","NoVehicle","constructor",
"NoVehicle","degenerate small-class","update","empty",
"MotorBoat","empty","MotorBoat","constructor",
"Morse","commander","Morse::Morse","constructor",
"Morse","commander","Morse::parse_sensors","predicate set",
"Morse","commander","Morse::connect_sockets","predicate non-void-command",
"Morse","commander","Morse::sensors_receive","predicate non-void-command",
"Morse","commander","Morse::output_rover_regular","command collaborator",
"Morse","commander","Morse::output_rover_skid","command collaborator",
"Morse","commander","Morse::output_quad","command collaborator",
"Morse","commander","Morse::output_pwm","command collaborator",
"Morse","commander","Morse::update","command collaborator",
"Morse","commander","Morse::report_FPS","command",
"Morse","commander","Morse::send_report","unclassified",
"MicroStrain7","boundary degenerate small-class","MicroStrain7::send_gnss_packet","wrapper stateless",
"MicroStrain7","boundary degenerate small-class","MicroStrain7::send_filter_packet","wrapper stateless",
"MicroStrain5","boundary degenerate small-class","MicroStrain5::send_gnss_packet","wrapper stateless",
"MicroStrain5","boundary degenerate small-class","MicroStrain5::send_filter_packet","wrapper stateless",
"MicroStrain","commander boundary degenerate","simulation_timeval","wrapper stateless",
"MicroStrain","commander boundary degenerate","MicroStrain::MicroStrain","constructor",
"MicroStrain","commander boundary degenerate","MicroStrain::simulation_timeval","wrapper stateless",
"MicroStrain","commander boundary degenerate","MicroStrain::generate_checksum","collaborator incidental",
"MicroStrain","commander boundary degenerate","MicroStrain::send_packet","command collaborator",
"MicroStrain","commander boundary degenerate","MicroStrain::send_imu_packet","unclassified",
"MicroStrain","commander boundary degenerate","MicroStrain::update","command",
"MicroStrain","commander boundary degenerate","MicroStrain::put_float","wrapper stateless",
"MicroStrain","commander boundary degenerate","MicroStrain::put_double","wrapper stateless",
"MicroStrain","commander boundary degenerate","MicroStrain::put_int","wrapper stateless",
"MicroStrain","commander boundary degenerate","simulation_timeval","wrapper stateless",
"MaxSonarI2CXL","unclassified","command_take_reading","incidental",
"MaxSonarI2CXL","unclassified","reading","property",
"MaxSonarI2CXL","unclassified","update","set collaborator",
"MaxSonarI2CXL","unclassified","rdwr","wrapper stateless",
"MS5611","entity boundary","load_prom","wrapper",
"MS5611","entity boundary","MS5611::convert_forward","void-accessor wrapper",
"MS5611","entity boundary","MS5611::convert","void-accessor wrapper",
"MS5611","entity boundary","MS5611::check_conversion_accuracy","command",
"MS5611","entity boundary","MS5611::get_pressure_temperature_readings","wrapper stateless",
"MS5525","entity boundary","load_prom","wrapper",
"MS5525","entity boundary","MS5525::convert_forward","void-accessor wrapper",
"MS5525","entity boundary","MS5525::convert","void-accessor wrapper",
"MS5525","entity boundary","MS5525::check_conversion_accuracy","command",
"MS5525","entity boundary","MS5525::get_pressure_temperature_readings","wrapper stateless",
"LM2755","commander boundary","rdwr","wrapper stateless",
"LM2755","commander boundary","LM2755::init","command",
"LM2755","commander boundary","LM2755::update","command collaborator",
"JSON_Master","unclassified","JSON_Master","constructor",
"JSON_Master","unclassified","JSON_Master::init","set",
"JSON_Master","unclassified","JSON_Master::receive","controller",
"JSON_Master","unclassified","JSON_Master::send","controller",
"FGNetFDM","boundary small-class","FGNetFDM::ByteSwap","wrapper",
"JSBSim","boundary","JSBSim::JSBSim","constructor",
"JSBSim","boundary","JSBSim::create_templates","predicate set",
"JSBSim","boundary","JSBSim::start_JSBSim","predicate non-void-command",
"JSBSim","boundary","JSBSim::check_stdout","wrapper",
"JSBSim","boundary","JSBSim::expect","predicate wrapper",
"JSBSim","boundary","JSBSim::open_control_socket","predicate",
"JSBSim","boundary","JSBSim::open_fdm_socket","predicate non-void-command",
"JSBSim","boundary","JSBSim::send_servos","command collaborator",
"JSBSim","boundary","JSBSim::recv_fdm","command collaborator",
"JSBSim","boundary","JSBSim::drain_control_socket","command collaborator",
"JSBSim","boundary","JSBSim::update","command collaborator",
"JEDEC_MX25L3206E","data-provider degenerate","filename","incidental",
"JEDEC_MX25L3206E","data-provider degenerate","get_num_blocks","incidental",
"JEDEC_MX25L3206E","data-provider degenerate","get_page_per_block","incidental",
"JEDEC_MX25L3206E","data-provider degenerate","get_page_per_sector","incidental",
"JEDEC_MX25L3206E","data-provider degenerate","get_page_size","incidental",
"JEDEC_MX25L3206E","data-provider degenerate","JEDEC_MX25L3206E::fill_rdid","void-accessor",
"JEDEC_MX25L3206E","data-provider degenerate","JEDEC_MX25L3206E::fill_rdsr","incidental",
"JEDEC","commander","get_storage_size","property",
"JEDEC","commander","get_num_pages","wrapper stateless",
"JEDEC","commander","JEDEC::open_storage_fd","set",
"JEDEC","commander","JEDEC::sector4k_erase","command",
"JEDEC","commander","JEDEC::block64k_erase","command",
"JEDEC","commander","JEDEC::page_erase","command",
"JEDEC","commander","JEDEC::bulk_erase","command",
"JEDEC","commander","JEDEC::parse_addr","wrapper stateless",
"JEDEC","commander","JEDEC::assert_writes_enabled","wrapper",
"JEDEC","commander","JEDEC::rdwr","property non-void-command collaborator",
"InvensenseV3","entity boundary","init","command",
"InvensenseV3","entity boundary","gyro_scale","incidental",
"InvensenseV3","entity boundary","SITL::InvensenseV3::update","command collaborator",
"InvensenseV3","entity boundary","SITL::InvensenseV3::assert_register_values","wrapper stateless",
"InvensenseV3","entity boundary","SITL::InvensenseV3::rdwr","property non-void-command collaborator",
"InvensenseV3","entity boundary","SITL::InvensenseV3::rdwr_fifo","property collaborator",
"InvensenseV3","entity boundary","SITL::InvensenseV3::add_fifo","command collaborator",
"InvensenseV3","entity boundary","SITL::InvensenseV3::update_sample_count","command",
"InvensenseV3","entity boundary","SITL::InvensenseV3::write_to_fifo","predicate set",
"InvensenseV3","entity boundary","SITL::InvensenseV3::add_block","command collaborator",
"InvensenseV3","entity boundary","SITL::InvensenseV3::set_block","wrapper",
"InvensenseV3","entity boundary","SITL::InvensenseV3::rdwr_block","property wrapper",
"IntelligentEnergy24","commander","IntelligentEnergy24::IntelligentEnergy24","constructor",
"IntelligentEnergy24","commander","IntelligentEnergy24::update","command collaborator",
"IntelligentEnergy24","commander","IntelligentEnergy24::update_send","command",
"IntelligentEnergy24","commander","IntelligentEnergy24::get_error_string","incidental",
"IntelligentEnergy","empty","IntelligentEnergy","constructor",
"ICM40609","degenerate small-class","init","wrapper stateless",
"ICM40609","degenerate small-class","accel_scale","incidental",
"ICEngine","entity boundary data-class small-class","ICEngine","constructor",
"ICEngine","entity boundary data-class small-class","ICEngine::update","get property non-void-command collaborator",
"I2CRegisters_16Bit","unclassified","get_reg_value","property wrapper",
"I2CRegisters_16Bit","unclassified","SITL::I2CRegisters_16Bit::set_register","set",
"I2CRegisters_16Bit","unclassified","SITL::I2CRegisters_16Bit::set_register","set",
"I2CRegisters_16Bit","unclassified","SITL::I2CRegisters_16Bit::rdwr","property collaborator",
"I2CRegisters","unclassified","set_debug","set",
"I2CRegisters","unclassified","get_debug","get",
"I2CRegisters","unclassified","SITL::I2CRegisters::add_register","collaborator",
"IgnoredI2CDevice","boundary degenerate small-class","rdwr","collaborator incidental",
"Helicopter","entity boundary","Helicopter::Helicopter","constructor",
"Helicopter","entity boundary","Helicopter::update","command collaborator",
"Helicopter","entity boundary","Helicopter::update_rotor_dynamics","void-accessor",
"Helicopter","entity boundary","Helicopter::update_rpm","property wrapper",
"Helicopter","entity boundary","Helicopter::push_to_buffer","command collaborator",
"Helicopter","entity boundary","Helicopter::pull_from_buffer","command collaborator",
"Glider","entity boundary","Glider::Glider","constructor",
"Glider","entity boundary","Glider::getTorque","property collaborator",
"Glider","entity boundary","Glider::getForce","property non-void-command collaborator",
"Glider","entity boundary","Glider::calculate_forces","void-accessor command collaborator",
"Glider","entity boundary","Glider::update","command collaborator",
"Glider","entity boundary","Glider::on_ground","wrapper stateless",
"Glider","entity boundary","Glider::update_balloon","predicate collaborator",
"Gimbal","commander boundary","Gimbal::Gimbal","constructor",
"Gimbal","commander boundary","Gimbal::update","command collaborator",
"Gimbal","commander boundary","Gimbal::param_find","wrapper stateless",
"Gimbal","commander boundary","Gimbal::param_send","command collaborator",
"Gimbal","commander boundary","Gimbal::send_report","command",
"SIM_GeneratorEngine","commander small-class","update","wrapper stateless",
"SIM_GeneratorEngine","commander small-class","SIM_GeneratorEngine::update","command",
"Gazebo","commander boundary","Gazebo::Gazebo","constructor",
"Gazebo","commander boundary","Gazebo::set_interface_ports","command",
"Gazebo","commander boundary","Gazebo::send_servos","command collaborator",
"Gazebo","commander boundary","Gazebo::recv_fdm","command collaborator",
"Gazebo","commander boundary","Gazebo::drain_sockets","command collaborator",
"Gazebo","commander boundary","Gazebo::update","command collaborator",
"GPS_UBlox","commander boundary small-class","GPS_UBlox::send_ubx","wrapper stateless",
"GPS_UBlox","commander boundary small-class","GPS_UBlox::publish","command collaborator",
"GPS_Trimble","commander boundary","GPS_Trimble::publish","command collaborator",
"GPS_Trimble","commander boundary","GPS_Trimble::send_gsof","wrapper",
"GPS_Trimble","commander boundary","GPS_Trimble::gsof_pack_double","wrapper stateless",
"GPS_Trimble","commander boundary","GPS_Trimble::gsof_pack_float","wrapper stateless",
"GPS_Trimble","commander boundary","GPS_Trimble::update_read","wrapper",
"DCOL_Parser","boundary","reset","controller stateless",
"DCOL_Parser","boundary","DCOL_Parser::dcol_parse","predicate non-void-command",
"DCOL_Parser","boundary","DCOL_Parser::RateToPeriodMs","collaborator incidental",
"DCOL_Parser","boundary","DCOL_Parser::valid_csum","predicate wrapper",
"DCOL_Parser","boundary","DCOL_Parser::parse_payload","predicate non-void-command",
"DCOL_Parser","boundary","DCOL_Parser::parse_cmd_appfile","predicate non-void-command collaborator",
"DCOL_Parser","boundary","DCOL_Parser::reset","command",
"GPS_SBP2","boundary degenerate small-class","GPS_SBP2::publish","wrapper stateless",
"GPS_SBP","boundary degenerate small-class","GPS_SBP::publish","wrapper stateless",
"GPS_NOVA","commander","device_baud","incidental",
"GPS_NOVA","commander","GPS_NOVA::publish","command collaborator",
"GPS_NOVA","commander","GPS_NOVA::nova_send_message","command",
"GPS_NOVA","commander","GPS_NOVA::CRC32Value","incidental",
"GPS_NOVA","commander","GPS_NOVA::CalculateBlockCRC32","property non-void-command",
"GPS_NMEA","small-class","GPS_NMEA::nmea_printf","wrapper stateless",
"GPS_NMEA","small-class","GPS_NMEA::publish","controller",
"GPS_MSP","boundary small-class","GPS_MSP::publish","wrapper",
"GPS","entity boundary","update","wrapper stateless",
"GPS","entity boundary","GPS::GPS","constructor",
"GPS","entity boundary","GPS::device_baud","property",
"GPS","entity boundary","GPS::write_to_autopilot","property wrapper",
"GPS","entity boundary","GPS::simulate_jamming","void-accessor wrapper",
"GPS","entity boundary","GPS::check_backend_allocation","command collaborator",
"GPS","entity boundary","GPS::update","command collaborator",
"GPS","entity boundary","GPS::interpolate_data","get property set collaborator",
"GPS_Data","small-class","GPS_Data::ground_track_rad","property wrapper",
"GPS_Data","small-class","GPS_Data::speed_2d","property controller",
"Frsky_D","small-class","Frsky_D::handle_data","controller",
"Frsky_D","small-class","Frsky_D::update","command",
"ModePoshold","pure-controller degenerate","requires_GPS","incidental",
"ModePoshold","pure-controller degenerate","has_manual_throttle","incidental",
"ModePoshold","pure-controller degenerate","allows_arming","incidental",
"ModePoshold","pure-controller degenerate","is_autopilot","incidental",
"ModePoshold","pure-controller degenerate","name","incidental",
"ModePoshold","pure-controller degenerate","name4","incidental",
"ModePoshold","pure-controller degenerate","ModePoshold::init","controller stateless",
"ModePoshold","pure-controller degenerate","ModePoshold::run","controller stateless",
"AP_Mount_Siyi","unclassified","has_roll_control","incidental",
"AP_Mount_Siyi","unclassified","has_pan_control","wrapper stateless",
"AP_Mount_Siyi","unclassified","get_angular_velocity","predicate collaborator",
"AP_Mount_Siyi","unclassified","request_firmware_version","command",
"AP_Mount_Siyi","unclassified","request_hardware_id","command",
"AP_Mount_Siyi","unclassified","request_configuration","command",
"AP_Mount_Siyi","unclassified","request_function_feedback_info","command",
"AP_Mount_Siyi","unclassified","request_gimbal_attitude","command",
"AP_Mount_Siyi","unclassified","request_rangefinder_distance","command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::update","command collaborator",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::healthy","predicate wrapper",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::get_attitude_quaternion","predicate controller",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::read_incoming_packets","command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::process_packet","command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_packet","predicate",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_1byte_packet","predicate non-void-command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::rotate_gimbal","command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::set_motion_mode","predicate",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_target_rates","command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_target_angles","command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::take_picture","predicate non-void-command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::record_video","predicate non-void-command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_zoom_rate","predicate non-void-command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_zoom_mult","predicate non-void-command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::get_zoom_mult_max","incidental",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::set_zoom","predicate non-void-command",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::update_zoom_control","set",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::set_focus","property non-void-command collaborator",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::set_lens","predicate non-void-command collaborator",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::set_camera_source","predicate non-void-command collaborator",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_camera_information","collaborator",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_camera_settings","collaborator",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::get_model_name","get wrapper",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::get_rangefinder_distance","predicate wrapper",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::check_firmware_version","wrapper",
"AP_Mount_Siyi","unclassified","AP_Mount_Siyi::send_attitude","command",
"LoggerMessageWriter_WriteSysInfo","commander small-class","LoggerMessageWriter_WriteSysInfo::reset","set",
"LoggerMessageWriter_WriteSysInfo","commander small-class","LoggerMessageWriter_WriteSysInfo::process","command",
"AP_EFI_DroneCAN","boundary","AP_EFI_DroneCAN::AP_EFI_DroneCAN","constructor",
"AP_EFI_DroneCAN","boundary","AP_EFI_DroneCAN::subscribe_msgs","controller stateless",
"AP_EFI_DroneCAN","boundary","AP_EFI_DroneCAN::update","empty",
"AP_EFI_DroneCAN","boundary","AP_EFI_DroneCAN::trampoline_status","command collaborator",
"AP_EFI_DroneCAN","boundary","AP_EFI_DroneCAN::handle_status","wrapper",
"ModeDock","unclassified","mode_number","collaborator incidental",
"ModeDock","unclassified","name4","incidental",
"ModeDock","unclassified","is_autopilot_mode","incidental",
"ModeDock","unclassified","get_distance_to_destination","incidental",
"ModeDock","unclassified","ModeDock::ModeDock","constructor",
"ModeDock","unclassified","ModeDock::_enter","predicate non-void-command",
"ModeDock","unclassified","ModeDock::update","command",
"ModeDock","unclassified","ModeDock::apply_slowdown","property non-void-command",
"ModeDock","unclassified","ModeDock::calc_dock_pos_rel_vehicle_NE","predicate wrapper",
"AP_Mount_Scripting","boundary","has_pan_control","wrapper stateless",
"AP_Mount_Scripting","boundary","AP_Mount_Scripting::update","command collaborator",
"AP_Mount_Scripting","boundary","AP_Mount_Scripting::healthy","predicate wrapper",
"AP_Mount_Scripting","boundary","AP_Mount_Scripting::get_location_target","predicate collaborator",
"AP_Mount_Scripting","boundary","AP_Mount_Scripting::set_attitude_euler","command",
"AP_Mount_Scripting","boundary","AP_Mount_Scripting::get_attitude_quaternion","predicate controller",
"AP_Mount_SToRM32_serial","commander boundary","has_pan_control","wrapper stateless",
"AP_Mount_SToRM32_serial","commander boundary","AP_Mount_SToRM32_serial::update","command collaborator",
"AP_Mount_SToRM32_serial","commander boundary","AP_Mount_SToRM32_serial::get_attitude_quaternion","predicate controller",
"AP_Mount_SToRM32_serial","commander boundary","AP_Mount_SToRM32_serial::can_send","predicate non-void-command",
"AP_Mount_SToRM32_serial","commander boundary","AP_Mount_SToRM32_serial::send_target_angles","collaborator",
"AP_Mount_SToRM32_serial","commander boundary","AP_Mount_SToRM32_serial::get_angles","command",
"AP_Mount_SToRM32_serial","commander boundary","AP_Mount_SToRM32_serial::get_reply_size","collaborator incidental",
"AP_Mount_SToRM32_serial","commander boundary","AP_Mount_SToRM32_serial::read_incoming","command",
"AP_Mount_SToRM32_serial","commander boundary","AP_Mount_SToRM32_serial::parse_reply","command",
"AP_Mount_Backend_Serial","commander boundary small-class","AP_Mount_Backend_Serial","constructor",
"AP_Mount_Backend_Serial","commander boundary small-class","AP_Mount_Backend_Serial::init","command collaborator",
"HAL_SITL","unclassified","set_storage_posix_enabled","set",
"HAL_SITL","unclassified","get_storage_posix_enabled","get",
"HAL_SITL","unclassified","set_storage_flash_enabled","set",
"HAL_SITL","unclassified","get_storage_flash_enabled","get",
"HAL_SITL","unclassified","set_storage_fram_enabled","set",
"HAL_SITL","unclassified","get_storage_fram_enabled","get",
"HAL_SITL","unclassified","set_wipe_storage","set",
"HAL_SITL","unclassified","get_wipe_storage","get",
"HAL_SITL","unclassified","HAL_SITL::HAL_SITL","constructor",
"HAL_SITL","unclassified","HAL_SITL::exit_signal_handler","incidental",
"HAL_SITL","unclassified","HAL_SITL::setup_signal_handlers","wrapper stateless",
"HAL_SITL","unclassified","HAL_SITL::get_instance","property",
"HAL_SITL","unclassified","HAL_SITL::run_in_maintenance_mode","predicate",
"HAL_SITL","unclassified","HAL_SITL::get_uart_output_full_queue_count","property",
"HAL_SITL","unclassified","HAL_SITL::run","collaborator",
"HAL_SITL","unclassified","HAL_SITL::actually_reboot","wrapper stateless",
"AP_Mount","boundary","get_primary_instance","get",
"AP_Mount","boundary","get_mount_type","property collaborator",
"AP_Mount","boundary","has_pan_control","predicate",
"AP_Mount","boundary","get_mode","property collaborator",
"AP_Mount","boundary","set_mode","command collaborator",
"AP_Mount","boundary","set_mode_to_default","command",
"AP_Mount","boundary","set_yaw_lock","command",
"AP_Mount","boundary","set_angle_target","command",
"AP_Mount","boundary","set_rate_target","command",
"AP_Mount","boundary","set_roi_target","command collaborator",
"AP_Mount","boundary","clear_roi_target","command",
"AP_Mount","boundary","set_target_sysid","command",
"AP_Mount","boundary","update","wrapper stateless",
"AP_Mount","boundary","init","empty",
"AP_Mount","boundary","init","wrapper stateless",
"AP_Mount","boundary","init","wrapper stateless",
"AP_Mount","boundary","AP_Mount::AP_Mount","constructor",
"AP_Mount","boundary","AP_Mount::init","command",
"AP_Mount","boundary","AP_Mount::update","command",
"AP_Mount","boundary","AP_Mount::update_fast","command",
"AP_Mount","boundary","AP_Mount::get_mount_type","property controller",
"AP_Mount","boundary","AP_Mount::has_pan_control","predicate collaborator",
"AP_Mount","boundary","AP_Mount::get_mode","property collaborator",
"AP_Mount","boundary","AP_Mount::set_mode_to_default","command",
"AP_Mount","boundary","AP_Mount::set_mode","command collaborator",
"AP_Mount","boundary","AP_Mount::set_yaw_lock","command",
"AP_Mount","boundary","AP_Mount::set_angle_target","command",
"AP_Mount","boundary","AP_Mount::set_rate_target","command",
"AP_Mount","boundary","AP_Mount::handle_command_do_mount_configure","property non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::handle_command_do_mount_control","property non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::handle_command_do_gimbal_manager_pitchyaw","property non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::handle_command_do_gimbal_manager_configure","property non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::handle_gimbal_manager_set_attitude","command collaborator",
"AP_Mount","boundary","AP_Mount::handle_gimbal_manager_set_pitchyaw","command collaborator",
"AP_Mount","boundary","AP_Mount::handle_command_do_set_roi_sysid","property non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::handle_command","property non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::handle_global_position_int","wrapper",
"AP_Mount","boundary","AP_Mount::handle_mount_configure","command collaborator",
"AP_Mount","boundary","AP_Mount::handle_mount_control","command collaborator",
"AP_Mount","boundary","AP_Mount::send_gimbal_device_attitude_status","command collaborator",
"AP_Mount","boundary","AP_Mount::send_gimbal_manager_information","command collaborator",
"AP_Mount","boundary","AP_Mount::send_gimbal_manager_status","command collaborator",
"AP_Mount","boundary","AP_Mount::get_poi","predicate collaborator",
"AP_Mount","boundary","AP_Mount::get_attitude_euler","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::pre_arm_checks","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::get_rate_target","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::get_angle_target","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::get_location_target","predicate non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::set_attitude_euler","command",
"AP_Mount","boundary","AP_Mount::write_log","command",
"AP_Mount","boundary","AP_Mount::write_log","command",
"AP_Mount","boundary","AP_Mount::set_target_sysid","command",
"AP_Mount","boundary","AP_Mount::set_roi_target","command collaborator",
"AP_Mount","boundary","AP_Mount::clear_roi_target","command",
"AP_Mount","boundary","AP_Mount::take_picture","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::record_video","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::set_zoom","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::set_focus","property non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::set_tracking","predicate non-void-command collaborator",
"AP_Mount","boundary","AP_Mount::set_lens","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::set_camera_source","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::send_camera_information","collaborator",
"AP_Mount","boundary","AP_Mount::send_camera_settings","collaborator",
"AP_Mount","boundary","AP_Mount::send_camera_capture_status","collaborator",
"AP_Mount","boundary","AP_Mount::get_rangefinder_distance","predicate",
"AP_Mount","boundary","AP_Mount::set_rangefinder_enable","predicate non-void-command",
"AP_Mount","boundary","AP_Mount::get_primary","property collaborator",
"AP_Mount","boundary","AP_Mount::get_instance","get property wrapper",
"AP_Mount","boundary","AP_Mount::handle_gimbal_report","command collaborator",
"AP_Mount","boundary","AP_Mount::handle_message","command collaborator",
"AP_Mount","boundary","AP_Mount::handle_param_value","command collaborator",
"AP_Mount","boundary","AP_Mount::handle_gimbal_device_information","command collaborator",
"AP_Mount","boundary","AP_Mount::handle_gimbal_device_attitude_status","command collaborator",
"AP_Mount","boundary","AP_Mount::convert_params","controller",
"ABinFlasher","small-class","run","predicate wrapper",
"ABinFlasher","small-class","body_callback","command",
"AP_MotorsSingle","commander boundary degenerate","AP_MotorsSingle","constructor",
"AP_MotorsSingle","commander boundary degenerate","arming_checks","wrapper stateless",
"AP_MotorsSingle","commander boundary degenerate","_get_frame_string","incidental",
"AP_MotorsSingle","commander boundary degenerate","AP_MotorsSingle::init","command collaborator",
"AP_MotorsSingle","commander boundary degenerate","AP_MotorsSingle::set_frame_class_and_type","empty",
"AP_MotorsSingle","commander boundary degenerate","AP_MotorsSingle::set_update_rate","wrapper stateless",
"AP_MotorsSingle","commander boundary degenerate","AP_MotorsSingle::output_to_motors","command",
"AP_MotorsSingle","commander boundary degenerate","AP_MotorsSingle::get_motor_mask","wrapper stateless",
"AP_MotorsSingle","commander boundary degenerate","AP_MotorsSingle::output_armed_stabilizing","command",
"AP_MotorsSingle","commander boundary degenerate","AP_MotorsSingle::_output_test_seq","wrapper stateless",
"AP_MotorsMatrix_Scripting_Dynamic","unclassified","AP_MotorsMatrix_Scripting_Dynamic","constructor",
"AP_MotorsMatrix_Scripting_Dynamic","unclassified","init","empty",
"AP_MotorsMatrix_Scripting_Dynamic","unclassified","thrust_compensation","empty",
"AP_MotorsMatrix_Scripting_Dynamic","unclassified","_get_frame_string","incidental",
"AP_MotorsMatrix_Scripting_Dynamic","unclassified","AP_MotorsMatrix_Scripting_Dynamic::add_motor","predicate set",
"AP_MotorsMatrix_Scripting_Dynamic","unclassified","AP_MotorsMatrix_Scripting_Dynamic::load_factors","set collaborator",
"AP_MotorsMatrix_Scripting_Dynamic","unclassified","AP_MotorsMatrix_Scripting_Dynamic::init","predicate wrapper",
"AP_MotorsMatrix_Scripting_Dynamic","unclassified","AP_MotorsMatrix_Scripting_Dynamic::output_to_motors","wrapper",
"DigitalSource","degenerate","DigitalSource::DigitalSource","constructor",
"DigitalSource","degenerate","DigitalSource::mode","wrapper stateless",
"DigitalSource","degenerate","DigitalSource::read","wrapper stateless",
"DigitalSource","degenerate","DigitalSource::write","wrapper stateless",
"DigitalSource","degenerate","DigitalSource::toggle","wrapper stateless",
"DigitalSource","degenerate","DigitalSource::DigitalSource","constructor",
"DigitalSource","degenerate","DigitalSource::mode","empty",
"DigitalSource","degenerate","DigitalSource::read","get",
"DigitalSource","degenerate","DigitalSource::write","set",
"DigitalSource","degenerate","DigitalSource::toggle","set",
"DigitalSource","degenerate","DigitalSource::DigitalSource","constructor",
"DigitalSource","degenerate","DigitalSource::mode","controller",
"DigitalSource","degenerate","DigitalSource::read","property controller",
"DigitalSource","degenerate","DigitalSource::write","controller",
"DigitalSource","degenerate","DigitalSource::toggle","command",
"DigitalSource","degenerate","DigitalSource::DigitalSource","constructor",
"DigitalSource","degenerate","DigitalSource::mode","empty",
"DigitalSource","degenerate","DigitalSource::read","controller stateless",
"DigitalSource","degenerate","DigitalSource::write","controller stateless",
"DigitalSource","degenerate","DigitalSource::toggle","controller stateless",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single","constructor",
"AP_MotorsHeli_Single","unclassified","ext_gyro_gain","command",
"AP_MotorsHeli_Single","unclassified","has_flybar","get",
"AP_MotorsHeli_Single","unclassified","supports_yaw_passthrough","predicate",
"AP_MotorsHeli_Single","unclassified","set_acro_tail","set",
"AP_MotorsHeli_Single","unclassified","get_tail_type","property collaborator",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::set_update_rate","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::init_outputs","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::set_desired_rotor_speed","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::calculate_armed_scalars","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::calculate_scalars","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::get_motor_mask","property non-void-command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::update_motor_control","collaborator",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::move_actuators","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::move_yaw","set",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::get_yaw_offset","property non-void-command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::output_to_motors","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::output_to_ddfp_tail","wrapper stateless",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::servo_test","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::arming_checks","predicate",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::heli_motors_param_conversions","command",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::have_DDFP_tail","predicate collaborator",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::use_tail_RSC","predicate collaborator",
"AP_MotorsHeli_Single","unclassified","AP_MotorsHeli_Single::Log_Write","command",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad","constructor",
"AP_MotorsHeli_Quad","commander","_get_frame_string","incidental",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::set_update_rate","wrapper stateless",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::init_outputs","command",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::calculate_armed_scalars","unclassified",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::calculate_scalars","command",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::calculate_roll_pitch_collective_factors","command",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::update_motor_control","collaborator",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::move_actuators","command",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::output_to_motors","command",
"AP_MotorsHeli_Quad","commander","AP_MotorsHeli_Quad::servo_test","empty",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual","constructor",
"AP_MotorsHeli_Dual","unclassified","_get_frame_string","incidental",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::set_update_rate","controller stateless",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::init_outputs","command",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::calculate_armed_scalars","unclassified",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::calculate_scalars","command",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::mix_tandem","controller",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::mix_transverse","controller",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::mix_intermeshing","controller",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::update_motor_control","collaborator",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::move_actuators","command",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::output_to_motors","command",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::servo_test","command",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::arming_checks","controller stateless",
"AP_MotorsHeli_Dual","unclassified","AP_MotorsHeli_Dual::Log_Write","command",
"HALSITL::RCOutput","data-class","force_safety_on","predicate set",
"HALSITL::RCOutput","data-class","force_safety_off","set",
"HALSITL::RCOutput","data-class","_safety_switch_state","get collaborator",
"AP_MotorsHeli","unclassified","AP_MotorsHeli","constructor",
"AP_MotorsHeli","unclassified","set_frame_class_and_type","command collaborator",
"AP_MotorsHeli","unclassified","set_turb_start","incidental",
"AP_MotorsHeli","unclassified","has_flybar","incidental",
"AP_MotorsHeli","unclassified","set_collective_for_landing","incidental",
"AP_MotorsHeli","unclassified","get_rsc_mode","property",
"AP_MotorsHeli","unclassified","get_rsc_setpoint","property",
"AP_MotorsHeli","unclassified","arot_man_enabled","predicate",
"AP_MotorsHeli","unclassified","get_desired_rotor_speed","property",
"AP_MotorsHeli","unclassified","get_main_rotor_speed","property",
"AP_MotorsHeli","unclassified","rotor_runup_complete","incidental",
"AP_MotorsHeli","unclassified","get_governor_output","property",
"AP_MotorsHeli","unclassified","get_control_output","property",
"AP_MotorsHeli","unclassified","set_acro_tail","empty",
"AP_MotorsHeli","unclassified","ext_gyro_gain","empty",
"AP_MotorsHeli","unclassified","supports_yaw_passthrough","incidental",
"AP_MotorsHeli","unclassified","get_throttle_hover","property wrapper",
"AP_MotorsHeli","unclassified","get_takeoff_collective","incidental",
"AP_MotorsHeli","unclassified","get_below_land_min_coll","incidental",
"AP_MotorsHeli","unclassified","init_targets_on_arming","incidental",
"AP_MotorsHeli","unclassified","set_in_autorotation","incidental",
"AP_MotorsHeli","unclassified","set_enable_bailout","incidental",
"AP_MotorsHeli","unclassified","set_land_complete","incidental",
"AP_MotorsHeli","unclassified","get_coll_mid","get",
"AP_MotorsHeli","unclassified","using_leaky_integrator","predicate",
"AP_MotorsHeli","unclassified","_output_test_seq","empty",
"AP_MotorsHeli","unclassified","heli_motors_param_conversions","incidental",
"AP_MotorsHeli","unclassified","_get_frame_string","incidental",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::init","command collaborator",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::output_min","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::output","unclassified",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::output_armed_stabilizing","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::output_disarmed","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::output_logic","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::update_throttle_filter","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::reset_flight_controls","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::update_throttle_hover","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::save_params_on_disarm","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::update_takeoff_collective_flag","unclassified",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::heli_option","predicate collaborator",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::update_turbine_start","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::arming_checks","predicate",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::motor_test_checks","controller stateless",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::get_motor_mask","property non-void-command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::set_desired_rotor_speed","command",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::get_rotor_control_state","property collaborator",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::set_rotor_runup_complete","wrapper stateless",
"AP_MotorsHeli","unclassified","AP_MotorsHeli::get_cyclic_angle_scaler","property",
"AP_MotorsCoax","commander boundary degenerate","AP_MotorsCoax","constructor",
"AP_MotorsCoax","commander boundary degenerate","arming_checks","wrapper stateless",
"AP_MotorsCoax","commander boundary degenerate","_get_frame_string","incidental",
"AP_MotorsCoax","commander boundary degenerate","AP_MotorsCoax::init","command collaborator",
"AP_MotorsCoax","commander boundary degenerate","AP_MotorsCoax::set_frame_class_and_type","wrapper stateless",
"AP_MotorsCoax","commander boundary degenerate","AP_MotorsCoax::set_update_rate","wrapper stateless",
"AP_MotorsCoax","commander boundary degenerate","AP_MotorsCoax::output_to_motors","command",
"AP_MotorsCoax","commander boundary degenerate","AP_MotorsCoax::get_motor_mask","wrapper stateless",
"AP_MotorsCoax","commander boundary degenerate","AP_MotorsCoax::output_armed_stabilizing","command",
"AP_MotorsCoax","commander boundary degenerate","AP_MotorsCoax::_output_test_seq","wrapper stateless",
"Vector2","boundary","Vector2<T>","constructor",
"Vector2","boundary","Vector2<T>","constructor",
"Vector2","boundary","dot","collaborator incidental",
"Vector2","boundary","is_zero","predicate",
"Vector2","boundary","operator[]","property collaborator",
"Vector2","boundary","operator[]","property collaborator",
"Vector2","boundary","zero","command",
"Vector2","boundary","tofloat","property wrapper",
"Vector2","boundary","todouble","property wrapper",
"Vector2","boundary","Vector2<T>::length_squared","property collaborator",
"Vector2","boundary","Vector2<T>::length","property wrapper",
"Vector2","boundary","Vector2<T>::limit_length","predicate non-void-command collaborator",
"Vector2","boundary","Vector2<T>::operator*","property collaborator",
"Vector2","boundary","Vector2<T>::operator%","property collaborator",
"Vector2","boundary","Vector2<T>::operator*=","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::operator/=","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::operator-=","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::is_nan","predicate wrapper",
"Vector2","boundary","Vector2<T>::is_inf","predicate wrapper",
"Vector2","boundary","Vector2<T>::operator+=","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::operator/","property wrapper",
"Vector2","boundary","Vector2<T>::operator*","property wrapper",
"Vector2","boundary","Vector2<T>::operator-","property wrapper",
"Vector2","boundary","Vector2<T>::operator+","property wrapper",
"Vector2","boundary","Vector2<T>::operator-","property wrapper",
"Vector2","boundary","Vector2<T>::operator==","predicate wrapper",
"Vector2","boundary","Vector2<T>::operator!=","predicate wrapper",
"Vector2","boundary","Vector2<T>::angle","controller stateless",
"Vector2","boundary","Vector2<T>::angle","property wrapper",
"Vector2","boundary","Vector2<T>::segment_intersection","predicate non-void-command collaborator",
"Vector2","boundary","Vector2<T>::circle_segment_intersection","predicate non-void-command collaborator",
"Vector2","boundary","Vector2<T>::normalize","command",
"Vector2","boundary","Vector2<T>::normalized","property collaborator",
"Vector2","boundary","Vector2<T>::reflect","command collaborator",
"Vector2","boundary","Vector2<T>::project","collaborator incidental",
"Vector2","boundary","Vector2<T>::projected","collaborator incidental",
"Vector2","boundary","Vector2<T>::offset_bearing","command collaborator",
"Vector2","boundary","Vector2<T>::perpendicular","wrapper stateless",
"Vector2","boundary","Vector2<T>::closest_point","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::closest_point","controller stateless",
"Vector2","boundary","Vector2<T>::closest_distance_between_line_and_point_squared","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::closest_distance_between_line_and_point","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::closest_distance_between_lines_squared","wrapper stateless",
"Vector2","boundary","Vector2<T>::closest_distance_between_radial_and_point_squared","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::closest_distance_between_radial_and_point","property non-void-command collaborator",
"Vector2","boundary","Vector2<T>::rotate","command collaborator",
"Vector2","boundary","Vector2<float>::is_zero","predicate",
"Vector2","boundary","Vector2<double>::is_zero","predicate",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::Display_SH1106_I2C","constructor",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::~Display_SH1106_I2C","destructor",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::probe","controller stateless",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::hw_init","predicate",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::hw_update","set",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::_timer","unclassified",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::set_pixel","set",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::clear_pixel","set",
"Display_SH1106_I2C","commander","Display_SH1106_I2C::clear_screen","wrapper",
"AP_EFI_Backend","unclassified","~AP_EFI_Backend","destructor",
"AP_EFI_Backend","unclassified","handle_EFI_message","empty",
"AP_EFI_Backend","unclassified","handle_scripting","collaborator incidental",
"AP_EFI_Backend","unclassified","AP_EFI_Backend::AP_EFI_Backend","constructor",
"AP_EFI_Backend","unclassified","AP_EFI_Backend::copy_to_frontend","set",
"AP_EFI_Backend","unclassified","AP_EFI_Backend::get_coef1","property",
"AP_EFI_Backend","unclassified","AP_EFI_Backend::get_coef2","property",
"AP_EFI_Backend","unclassified","AP_EFI_Backend::set_default_coef1","command",
"AP_EFI_Backend","unclassified","AP_EFI_Backend::get_sem","get collaborator",
"AP_EFI_Backend","unclassified","AP_EFI_Backend::get_ecu_fuel_density","get",
"AP_EFI_Backend","unclassified","AP_EFI_Backend::linearise_throttle","property non-void-command",
"AP_Tramp","unclassified","~AP_Tramp","destructor",
"AP_Tramp","unclassified","is_race_lock_enabled","predicate",
"AP_Tramp","unclassified","update","wrapper stateless",
"AP_Tramp","unclassified","AP_Tramp::AP_Tramp","constructor",
"AP_Tramp","unclassified","AP_Tramp::checksum","property",
"AP_Tramp","unclassified","AP_Tramp::send_command","command",
"AP_Tramp","unclassified","AP_Tramp::handle_response","property non-void-command",
"AP_Tramp","unclassified","AP_Tramp::reset_receiver","command",
"AP_Tramp","unclassified","AP_Tramp::receive_response","property non-void-command",
"AP_Tramp","unclassified","AP_Tramp::send_query","command",
"AP_Tramp","unclassified","AP_Tramp::set_status","set collaborator",
"AP_Tramp","unclassified","AP_Tramp::process_requests","command collaborator",
"AP_Tramp","unclassified","AP_Tramp::is_device_ready","predicate",
"AP_Tramp","unclassified","AP_Tramp::set_frequency","set",
"AP_Tramp","unclassified","AP_Tramp::update","collaborator",
"AP_Tramp","unclassified","AP_Tramp::update_baud_rate","command",
"AP_Tramp","unclassified","AP_Tramp::init","predicate",
"QuaternionT","boundary","QuaternionT","constructor",
"QuaternionT","boundary","QuaternionT","constructor",
"QuaternionT","boundary","QuaternionT","constructor",
"QuaternionT","boundary","operator()","command collaborator",
"QuaternionT","boundary","is_nan","predicate wrapper",
"QuaternionT","boundary","to_euler","collaborator",
"QuaternionT","boundary","to_euler","collaborator",
"QuaternionT","boundary","initialise","command",
"QuaternionT","boundary","operator[]","property collaborator",
"QuaternionT","boundary","operator[]","property collaborator",
"QuaternionT","boundary","todouble","property wrapper",
"QuaternionT","boundary","tofloat","property wrapper",
"QuaternionT","boundary","QuaternionT<T>::rotation_matrix","void-accessor collaborator",
"QuaternionT","boundary","QuaternionT<T>::rotation_matrix","void-accessor collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_rotation_matrix","wrapper",
"QuaternionT","boundary","QuaternionT<T>::from_rotation","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::rotate","controller stateless",
"QuaternionT","boundary","QuaternionT<T>::earth_to_body","void-accessor collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_euler","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_euler","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_vector312","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_axis_angle","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_axis_angle","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::rotate","controller stateless",
"QuaternionT","boundary","QuaternionT<T>::to_axis_angle","void-accessor collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_axis_angle_fast","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_axis_angle_fast","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::from_angular_velocity","command",
"QuaternionT","boundary","QuaternionT<T>::rotate_fast","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::get_euler_roll","property wrapper",
"QuaternionT","boundary","QuaternionT<T>::get_euler_pitch","property wrapper",
"QuaternionT","boundary","QuaternionT<T>::get_euler_yaw","property wrapper",
"QuaternionT","boundary","QuaternionT<T>::to_euler","void-accessor",
"QuaternionT","boundary","QuaternionT<T>::to_euler","void-accessor",
"QuaternionT","boundary","QuaternionT<T>::to_vector312","property collaborator",
"QuaternionT","boundary","QuaternionT<T>::length","property wrapper",
"QuaternionT","boundary","QuaternionT<T>::length_squared","property collaborator",
"QuaternionT","boundary","QuaternionT<T>::inverse","property wrapper",
"QuaternionT","boundary","QuaternionT<T>::invert","command",
"QuaternionT","boundary","QuaternionT<T>::normalize","command collaborator",
"QuaternionT","boundary","QuaternionT<T>::is_zero","predicate",
"QuaternionT","boundary","QuaternionT<T>::zero","command",
"QuaternionT","boundary","QuaternionT<T>::is_unit_length","predicate",
"QuaternionT","boundary","QuaternionT<T>::operator*","property collaborator",
"QuaternionT","boundary","QuaternionT<T>::operator*","property collaborator",
"QuaternionT","boundary","QuaternionT<T>::operator*=","property non-void-command collaborator",
"QuaternionT","boundary","QuaternionT<T>::operator/","property collaborator",
"QuaternionT","boundary","QuaternionT<T>::angular_difference","controller stateless",
"QuaternionT","boundary","QuaternionT<T>::roll_pitch_difference","property collaborator",
"GCS_Tracker","boundary degenerate","new_gcs_mavlink_backend","wrapper stateless",
"GCS_Tracker","boundary degenerate","GCS_Tracker::frame_type","collaborator incidental",
"GCS_Tracker","boundary degenerate","GCS_Tracker::custom_mode","controller stateless",
"GCS_Tracker","boundary degenerate","GCS_Tracker::sysid_this_mav","incidental",
"GCS_Tracker","boundary degenerate","GCS_Tracker::request_datastream_position","wrapper stateless",
"GCS_Tracker","boundary degenerate","GCS_Tracker::request_datastream_airpressure","wrapper stateless",
"GCS_Tracker","boundary degenerate","GCS_Tracker::update_vehicle_sensor_status_flags","command",
"AP_DAL","boundary","AP_DAL","constructor",
"AP_DAL","boundary","micros64","get",
"AP_DAL","boundary","micros","get",
"AP_DAL","boundary","millis","get",
"AP_DAL","boundary","get_armed","get",
"AP_DAL","boundary","available_memory","property",
"AP_DAL","boundary","available_memory","get",
"AP_DAL","boundary","get_ekf_type","get",
"AP_DAL","boundary","ins","get collaborator",
"AP_DAL","boundary","baro","get collaborator",
"AP_DAL","boundary","gps","get collaborator",
"AP_DAL","boundary","rangefinder","get collaborator",
"AP_DAL","boundary","airspeed","get collaborator",
"AP_DAL","boundary","beacon","get collaborator",
"AP_DAL","boundary","visualodom","get collaborator",
"AP_DAL","boundary","compass","get collaborator",
"AP_DAL","boundary","airspeed_sensor_enabled","get",
"AP_DAL","boundary","get_EAS2TAS","property",
"AP_DAL","boundary","get_vehicle_class","property collaborator",
"AP_DAL","boundary","get_fly_forward","get",
"AP_DAL","boundary","get_takeoff_expected","get",
"AP_DAL","boundary","get_touchdown_expected","get",
"AP_DAL","boundary","get_trim","get collaborator",
"AP_DAL","boundary","get_rotation_vehicle_body_to_autopilot_body","get collaborator",
"AP_DAL","boundary","get_home","get collaborator",
"AP_DAL","boundary","get_time_flying_ms","get",
"AP_DAL","boundary","opticalflow_enabled","get",
"AP_DAL","boundary","wheelencoder_enabled","get",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","set collaborator",
"AP_DAL","boundary","handle_message","set collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","set collaborator",
"AP_DAL","boundary","handle_message","set collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","command collaborator",
"AP_DAL","boundary","handle_message","set collaborator",
"AP_DAL","boundary","handle_message","set collaborator",
"AP_DAL","boundary","handle_message","set collaborator",
"AP_DAL","boundary","AP_DAL::start_frame","command collaborator",
"AP_DAL","boundary","AP_DAL::set_takeoff_expected","controller stateless",
"AP_DAL","boundary","AP_DAL::init_sensors","command",
"AP_DAL","boundary","AP_DAL::end_frame","set",
"AP_DAL","boundary","AP_DAL::log_event2","command collaborator",
"AP_DAL","boundary","AP_DAL::log_SetOriginLLH2","wrapper stateless",
"AP_DAL","boundary","AP_DAL::log_writeDefaultAirSpeed2","wrapper stateless",
"AP_DAL","boundary","AP_DAL::log_event3","command collaborator",
"AP_DAL","boundary","AP_DAL::log_SetOriginLLH3","wrapper stateless",
"AP_DAL","boundary","AP_DAL::log_writeDefaultAirSpeed3","wrapper stateless",
"AP_DAL","boundary","AP_DAL::log_writeEulerYawAngle","wrapper stateless",
"AP_DAL","boundary","AP_DAL::snprintf","controller stateless",
"AP_DAL","boundary","AP_DAL::malloc_type","controller stateless",
"AP_DAL","boundary","AP_DAL::logging_core","wrapper stateless",
"AP_DAL","boundary","AP_DAL::WriteLogMessage","wrapper",
"AP_DAL","boundary","AP_DAL::ekf_low_time_remaining","predicate set collaborator",
"AP_DAL","boundary","AP_DAL::writeOptFlowMeas","command collaborator",
"AP_DAL","boundary","AP_DAL::writeExtNavData","command collaborator",
"AP_DAL","boundary","AP_DAL::log_SetLatLng","command collaborator",
"AP_DAL","boundary","AP_DAL::writeExtNavVelData","command collaborator",
"AP_DAL","boundary","AP_DAL::writeWheelOdom","command collaborator",
"AP_DAL","boundary","AP_DAL::writeBodyFrameOdom","command collaborator",
"AP_DAL","boundary","AP_DAL::handle_message","command collaborator",
"AP_DAL","boundary","AP_DAL::handle_message","set collaborator",
"AP_DAL","boundary","AP_DAL::handle_message","set collaborator",
"AP_DAL","boundary","AP_DAL::handle_message","set collaborator",
"AP_DAL","boundary","AP_DAL::handle_message","set collaborator",
"AP_DAL","boundary","AP_DAL::handle_message","set collaborator",
"AP_DAL","boundary","AP_DAL::handle_message","set collaborator",
"SplineCurve","unclassified","reached_destination","get",
"SplineCurve","unclassified","get_destination_vel","get collaborator",
"SplineCurve","unclassified","get_origin_speed_max","get",
"SplineCurve","unclassified","get_destination_speed_max","get",
"SplineCurve","unclassified","set_destination_speed_max","set",
"SplineCurve","unclassified","SplineCurve::set_speed_accel","command",
"SplineCurve","unclassified","SplineCurve::set_origin_and_destination","command collaborator",
"SplineCurve","unclassified","SplineCurve::advance_target_along_track","void-accessor command collaborator",
"SplineCurve","unclassified","SplineCurve::calc_dt_speed_max","void-accessor set",
"SplineCurve","unclassified","SplineCurve::update_solution","command collaborator",
"SplineCurve","unclassified","SplineCurve::calc_target_pos_vel","void-accessor wrapper",
"AP_GeodesicGrid","unclassified","AP_GeodesicGrid::section","property non-void-command",
"AP_GeodesicGrid","unclassified","AP_GeodesicGrid::_neighbor_umbrella_component","incidental",
"AP_GeodesicGrid","unclassified","AP_GeodesicGrid::_from_neighbor_umbrella","property non-void-command",
"AP_GeodesicGrid","unclassified","AP_GeodesicGrid::_triangle_index","property non-void-command",
"AP_GeodesicGrid","unclassified","AP_GeodesicGrid::_subtriangle_index","property wrapper",
"AP_MSP_Telem_DJI","degenerate","get_serial_protocol","collaborator incidental",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::init_uart","predicate non-void-command",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::is_scheduler_enabled","controller stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::hide_osd_items","wrapper",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::get_osd_flight_mode_bitmask","wrapper stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::msp_process_out_fc_variant","wrapper stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::msp_process_out_esc_sensor_data","controller stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::update_home_pos","controller stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::update_battery_state","controller stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::update_gps_state","controller stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::update_airspeed","controller stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::update_flight_mode_str","controller stateless",
"AP_MSP_Telem_DJI","degenerate","AP_MSP_Telem_DJI::get_rssi","controller stateless",
"AP_MSP","entity boundary","init","empty",
"AP_MSP","entity boundary","init","wrapper stateless",
"AP_MSP","entity boundary","init","wrapper stateless",
"AP_MSP","entity boundary","AP_MSP::AP_MSP","constructor",
"AP_MSP","entity boundary","AP_MSP::init_backend","predicate set collaborator",
"AP_MSP","entity boundary","AP_MSP::init","command",
"AP_MSP","entity boundary","AP_MSP::update_osd_item_settings","command collaborator",
"AP_MSP","entity boundary","AP_MSP::loop","command",
"AP_MSP","entity boundary","AP_MSP::find_protocol","get property wrapper",
"AP_MSP","entity boundary","AP_MSP::is_option_enabled","predicate collaborator",
"LoggerMessageWriter_WriteEntireMission","commander small-class","LoggerMessageWriter_WriteEntireMission::process","command collaborator",
"LoggerMessageWriter_WriteEntireMission","commander small-class","LoggerMessageWriter_WriteEntireMission::reset","command",
"Blimp","commander","gcs","get collaborator",
"Blimp","commander","any_failsafe_triggered","predicate",
"Blimp","commander","get_log_bitmask","get collaborator",
"Blimp","commander","get_log_structures","get collaborator",
"Blimp","commander","get_mode","property",
"Blimp","commander","Blimp::set_auto_armed","set",
"Blimp","commander","Blimp::set_failsafe_radio","command",
"Blimp","commander","Blimp::set_failsafe_gcs","incidental",
"Blimp","commander","Blimp::get_scheduler_tasks","void-accessor wrapper",
"Blimp","commander","Blimp::rc_loop","command",
"Blimp","commander","Blimp::throttle_loop","command",
"Blimp","commander","Blimp::update_batt_compass","command",
"Blimp","commander","Blimp::full_rate_logging","command",
"Blimp","commander","Blimp::ten_hz_logging_loop","command",
"Blimp","commander","Blimp::twentyfive_hz_logging","command",
"Blimp","commander","Blimp::three_hz_loop","command",
"Blimp","commander","Blimp::one_hz_loop","command",
"Blimp","commander","Blimp::read_AHRS","command collaborator",
"Blimp","commander","Blimp::update_altitude","command",
"Blimp","commander","Blimp::rotate_BF_to_NE","void-accessor command collaborator",
"Blimp","commander","Blimp::rotate_NE_to_BF","void-accessor command collaborator",
"Blimp","commander","Blimp::Blimp","constructor",
"Blimp","commander","Blimp::Write_FINI","command",
"Blimp","commander","Blimp::Write_FINO","command",
"Blimp","commander","Blimp::Log_Write_PIDs","command",
"Blimp","commander","Blimp::Log_Write_Attitude","command",
"Blimp","commander","Blimp::Log_Write_EKF_POS","wrapper stateless",
"Blimp","commander","Blimp::Log_Write_Data","non-void-command collaborator",
"Blimp","commander","Blimp::Log_Write_Data","non-void-command collaborator",
"Blimp","commander","Blimp::Log_Write_Data","command collaborator",
"Blimp","commander","Blimp::Log_Write_Data","command collaborator",
"Blimp","commander","Blimp::Log_Write_Data","non-void-command collaborator",
"Blimp","commander","Blimp::Log_Write_Parameter_Tuning","command collaborator",
"Blimp","commander","Blimp::get_num_log_structures","property wrapper",
"Blimp","commander","Blimp::Log_Write_Vehicle_Startup_Messages","command",
"Blimp","commander","Blimp::load_parameters","wrapper",
"Blimp","commander","Blimp::save_trim","command",
"Blimp","commander","Blimp::auto_trim_cancel","set",
"Blimp","commander","Blimp::auto_trim","command",
"Blimp","commander","Blimp::update_home_from_EKF","command",
"Blimp","commander","Blimp::set_home_to_current_location_inflight","command collaborator",
"Blimp","commander","Blimp::set_home_to_current_location","predicate non-void-command collaborator",
"Blimp","commander","Blimp::set_home","predicate non-void-command collaborator",
"Blimp","commander","Blimp::ekf_check","command",
"Blimp","commander","Blimp::ekf_over_threshold","predicate non-void-command",
"Blimp","commander","Blimp::failsafe_ekf_event","command",
"Blimp","commander","Blimp::failsafe_ekf_off_event","wrapper stateless",
"Blimp","commander","Blimp::check_ekf_reset","command",
"Blimp","commander","Blimp::check_vibration","command collaborator",
"Blimp","commander","Blimp::failsafe_option","collaborator incidental",
"Blimp","commander","Blimp::failsafe_radio_on_event","command collaborator",
"Blimp","commander","Blimp::failsafe_radio_off_event","command",
"Blimp","commander","Blimp::handle_battery_failsafe","command collaborator",
"Blimp","commander","Blimp::failsafe_gcs_check","command",
"Blimp","commander","Blimp::should_disarm_on_failsafe","get predicate",
"Blimp","commander","Blimp::do_failsafe_action","command collaborator",
"Blimp","commander","Blimp::gpsglitch_check","command",
"Blimp","commander","Blimp::failsafe_enable","wrapper stateless",
"Blimp","commander","Blimp::failsafe_disable","incidental",
"Blimp","commander","Blimp::failsafe_check","command",
"Blimp","commander","Blimp::read_inertia","command",
"Blimp","commander","Blimp::mode_from_mode_num","property collaborator",
"Blimp","commander","Blimp::set_mode","predicate non-void-command collaborator",
"Blimp","commander","Blimp::set_mode","controller stateless",
"Blimp","commander","Blimp::update_flight_mode","command",
"Blimp","commander","Blimp::exit_mode","empty",
"Blimp","commander","Blimp::notify_flight_mode","command",
"Blimp","commander","Blimp::set_mode_land_failsafe","command collaborator",
"Blimp","commander","Blimp::arm_motors_check","command",
"Blimp","commander","Blimp::motors_output","command",
"Blimp","commander","Blimp::default_dead_zones","command",
"Blimp","commander","Blimp::init_rc_in","command",
"Blimp","commander","Blimp::init_rc_out","wrapper stateless",
"Blimp","commander","Blimp::enable_motor_output","command",
"Blimp","commander","Blimp::read_radio","command",
"Blimp","commander","Blimp::set_throttle_and_failsafe","command",
"Blimp","commander","Blimp::set_throttle_zero_flag","set",
"Blimp","commander","Blimp::read_barometer","unclassified",
"Blimp","commander","Blimp::init_ardupilot","command",
"Blimp","commander","Blimp::startup_INS_ground","command",
"Blimp","commander","Blimp::position_ok","predicate",
"Blimp","commander","Blimp::ekf_has_absolute_position","predicate collaborator",
"Blimp","commander","Blimp::ekf_has_relative_position","predicate collaborator",
"Blimp","commander","Blimp::ekf_alt_ok","predicate collaborator",
"Blimp","commander","Blimp::update_auto_armed","command",
"Blimp","commander","Blimp::should_log","predicate",
"Blimp","commander","Blimp::get_frame_mav_type","collaborator incidental",
"Blimp","commander","Blimp::get_frame_string","incidental",
"Blimp","commander","Blimp::allocate_motors","set",
"Blimp","commander","Blimp::Blimp","constructor",
"Blimp","commander","Blimp::calculate_forces","controller stateless",
"Blimp","commander","Blimp::update","command collaborator",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC","constructor",
"AP_Logger_Flash_JEDEC","commander","CardInserted","predicate",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::Init","command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::WaitReady","set",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::getSectorCount","predicate non-void-command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::ReadStatusReg","property non-void-command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::Busy","predicate non-void-command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::Enter4ByteAddressMode","command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::send_command_addr","command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::PageToBuffer","command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::BufferToPage","command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::SectorErase","command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::Sector4kErase","command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::StartErase","command",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::InErase","predicate set",
"AP_Logger_Flash_JEDEC","commander","AP_Logger_Flash_JEDEC::WriteEnable","command",
"ESP32::Util","boundary degenerate small-class","run_debug_shell","collaborator incidental",
"AP_BattMonitor_SMBus_Solo","commander small-class","AP_BattMonitor_SMBus_Solo::AP_BattMonitor_SMBus_Solo","constructor",
"AP_BattMonitor_SMBus_Solo","commander small-class","AP_BattMonitor_SMBus_Solo::timer","command",
"AP_RangeFinder_Lanbao","degenerate","initial_baudrate","incidental",
"AP_RangeFinder_Lanbao","degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_Lanbao","degenerate","AP_RangeFinder_Lanbao::get_reading","predicate non-void-command",
"AP_Logger","unclassified","set_num_types","set",
"AP_Logger","unclassified","log_pause","set",
"AP_Logger","unclassified","EnableWrites","set",
"AP_Logger","unclassified","WritesEnabled","get",
"AP_Logger","unclassified","set_force_log_disarmed","set",
"AP_Logger","unclassified","set_long_log_persist","set",
"AP_Logger","unclassified","log_replay","incidental",
"AP_Logger","unclassified","arming_failure","command",
"AP_Logger","unclassified","vehicle_is_armed","get",
"AP_Logger","unclassified","quiet_nanf","wrapper stateless",
"AP_Logger","unclassified","quiet_nan","wrapper stateless",
"AP_Logger","unclassified","get_log_start_count","get",
"AP_Logger","unclassified","AP_Logger::WriteBlock","empty",
"AP_Logger","unclassified","AP_Logger::AP_Logger","constructor",
"AP_Logger","unclassified","AP_Logger::init","command",
"AP_Logger","unclassified","AP_Logger::unit_name","get property",
"AP_Logger","unclassified","AP_Logger::multiplier_name","get property",
"AP_Logger","unclassified","AP_Logger::dump_structure_field","command",
"AP_Logger","unclassified","AP_Logger::dump_structures","command",
"AP_Logger","unclassified","AP_Logger::labels_string_is_good","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::validate_structure","predicate",
"AP_Logger","unclassified","AP_Logger::validate_structures","command collaborator",
"AP_Logger","unclassified","AP_Logger::structure","property collaborator",
"AP_Logger","unclassified","AP_Logger::logging_present","predicate",
"AP_Logger","unclassified","AP_Logger::logging_enabled","predicate",
"AP_Logger","unclassified","AP_Logger::logging_failed","predicate",
"AP_Logger","unclassified","AP_Logger::Write_MessageF","command collaborator",
"AP_Logger","unclassified","AP_Logger::backend_starting_new_log","set collaborator",
"AP_Logger","unclassified","AP_Logger::should_log","predicate",
"AP_Logger","unclassified","AP_Logger::in_log_download","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::unit","property collaborator",
"AP_Logger","unclassified","AP_Logger::multiplier","collaborator incidental",
"AP_Logger","unclassified","AP_Logger::PrepForArming","command",
"AP_Logger","unclassified","AP_Logger::setVehicle_Startup_Writer","set collaborator",
"AP_Logger","unclassified","AP_Logger::set_vehicle_armed","command",
"AP_Logger","unclassified","AP_Logger::save_format_Replay","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::WriteBlock","command",
"AP_Logger","unclassified","AP_Logger::WriteBlock_first_succeed","get predicate non-void-command",
"AP_Logger","unclassified","AP_Logger::WriteReplayBlock","predicate non-void-command",
"AP_Logger","unclassified","AP_Logger::WriteCriticalBlock","command",
"AP_Logger","unclassified","AP_Logger::WritePrioritisedBlock","command",
"AP_Logger","unclassified","AP_Logger::EraseAll","command",
"AP_Logger","unclassified","AP_Logger::CardInserted","predicate non-void-command",
"AP_Logger","unclassified","AP_Logger::StopLogging","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::find_last_log","get property",
"AP_Logger","unclassified","AP_Logger::get_log_boundaries","command",
"AP_Logger","unclassified","AP_Logger::get_log_info","command",
"AP_Logger","unclassified","AP_Logger::get_log_data","get property non-void-command",
"AP_Logger","unclassified","AP_Logger::get_num_logs","get property non-void-command",
"AP_Logger","unclassified","AP_Logger::get_max_num_logs","controller stateless",
"AP_Logger","unclassified","AP_Logger::logging_started","predicate non-void-command",
"AP_Logger","unclassified","AP_Logger::handle_mavlink_msg","command collaborator",
"AP_Logger","unclassified","AP_Logger::periodic_tasks","command",
"AP_Logger","unclassified","AP_Logger::flush","command",
"AP_Logger","unclassified","AP_Logger::Write_EntireMission","command",
"AP_Logger","unclassified","AP_Logger::Write_Message","command",
"AP_Logger","unclassified","AP_Logger::Write_Mode","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_Parameter","command",
"AP_Logger","unclassified","AP_Logger::Write_Mission_Cmd","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_RallyPoint","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_Rally","command",
"AP_Logger","unclassified","AP_Logger::Write_Fence","command",
"AP_Logger","unclassified","AP_Logger::Write_NamedValueFloat","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::Safe_Write_Emit_FMT","void-accessor wrapper",
"AP_Logger","unclassified","AP_Logger::num_dropped","get property",
"AP_Logger","unclassified","AP_Logger::Write","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::Write","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::WriteStreaming","command collaborator",
"AP_Logger","unclassified","AP_Logger::WriteStreaming","command collaborator",
"AP_Logger","unclassified","AP_Logger::WriteCritical","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::WriteCritical","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::WriteV","command collaborator",
"AP_Logger","unclassified","AP_Logger::allow_start_ekf","predicate",
"AP_Logger","unclassified","AP_Logger::assert_same_fmt_for_name","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::msg_fmt_for_name","property non-void-command collaborator",
"AP_Logger","unclassified","AP_Logger::structure_for_msg_type","property collaborator",
"AP_Logger","unclassified","AP_Logger::log_write_fmt_for_msg_type","collaborator incidental",
"AP_Logger","unclassified","AP_Logger::msg_type_in_use","predicate collaborator",
"AP_Logger","unclassified","AP_Logger::find_free_msg_type","property",
"AP_Logger","unclassified","AP_Logger::fill_log_write_logstructure","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::Write_calc_msg_len","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::check_crash_dump_save","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::io_thread","command",
"AP_Logger","unclassified","AP_Logger::start_io_thread","set",
"AP_Logger","unclassified","AP_Logger::Write_Event","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_Error","command collaborator",
"AP_Logger","unclassified","AP_Logger::in_log_persistance","predicate controller",
"AP_Logger","unclassified","AP_Logger::log_while_disarmed","predicate",
"AP_Logger","unclassified","AP_Logger::prepare_at_arming_sys_file_logging","command collaborator",
"AP_Logger","unclassified","AP_Logger::log_file_content","command",
"AP_Logger","unclassified","AP_Logger::log_file_content","wrapper stateless",
"AP_Logger","unclassified","AP_Logger::file_content_update","unclassified",
"AP_Logger","unclassified","AP_Logger::file_content_update","void-accessor command collaborator",
"AP_Logger","unclassified","AP_Logger::handle_log_message","command collaborator",
"AP_Logger","unclassified","AP_Logger::handle_log_request_list","command collaborator",
"AP_Logger","unclassified","AP_Logger::handle_log_request_data","command collaborator",
"AP_Logger","unclassified","AP_Logger::handle_log_request_erase","command collaborator",
"AP_Logger","unclassified","AP_Logger::handle_log_request_end","set collaborator",
"AP_Logger","unclassified","AP_Logger::handle_log_send","command",
"AP_Logger","unclassified","AP_Logger::handle_log_sending","command",
"AP_Logger","unclassified","AP_Logger::handle_log_send_listing","command",
"AP_Logger","unclassified","AP_Logger::handle_log_send_data","predicate non-void-command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_RCIN","command",
"AP_Logger","unclassified","AP_Logger::Write_RCOUT","command",
"AP_Logger","unclassified","AP_Logger::Write_RSSI","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_Command","command",
"AP_Logger","unclassified","AP_Logger::Write_Power","command",
"AP_Logger","unclassified","AP_Logger::Write_Radio","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_Compass_instance","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_Compass","command",
"AP_Logger","unclassified","AP_Logger::Write_ServoStatus","command",
"AP_Logger","unclassified","AP_Logger::Write_PID","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_SRTL","command collaborator",
"AP_Logger","unclassified","AP_Logger::Write_Winch","command",
"AP_LeakDetector_Digital","commander data-class small-class","AP_LeakDetector_Digital::AP_LeakDetector_Digital","constructor",
"AP_LeakDetector_Digital","commander data-class small-class","AP_LeakDetector_Digital::read","set",
"AP_WheelRateControl","boundary","get_rate_max_rads","property wrapper",
"AP_WheelRateControl","boundary","AP_WheelRateControl::AP_WheelRateControl","constructor",
"AP_WheelRateControl","boundary","AP_WheelRateControl::enabled","predicate non-void-command",
"AP_WheelRateControl","boundary","AP_WheelRateControl::get_rate_controlled_throttle","property non-void-command",
"AP_WheelRateControl","boundary","AP_WheelRateControl::get_pid","get collaborator",
"AP_WheelRateControl","boundary","AP_WheelRateControl::set_notch_sample_rate","controller stateless",
"AP_Landing","unclassified","get_pitch_cd","property",
"AP_Landing","unclassified","get_flare_sec","get",
"AP_Landing","unclassified","get_disarm_delay","get",
"AP_Landing","unclassified","get_then_servos_neutral","get",
"AP_Landing","unclassified","get_abort_throttle_enable","get",
"AP_Landing","unclassified","get_flap_percent","get",
"AP_Landing","unclassified","get_throttle_slewrate","get",
"AP_Landing","unclassified","is_commanded_go_around","incidental",
"AP_Landing","unclassified","set_initial_slope","set",
"AP_Landing","unclassified","AP_Landing::AP_Landing","constructor",
"AP_Landing","unclassified","AP_Landing::do_land","command",
"AP_Landing","unclassified","AP_Landing::verify_land","predicate non-void-command",
"AP_Landing","unclassified","AP_Landing::verify_abort_landing","predicate non-void-command collaborator",
"AP_Landing","unclassified","AP_Landing::adjust_landing_slope_for_rangefinder_bump","command",
"AP_Landing","unclassified","AP_Landing::send_landing_message","predicate non-void-command collaborator",
"AP_Landing","unclassified","AP_Landing::is_flaring","predicate",
"AP_Landing","unclassified","AP_Landing::is_on_approach","predicate",
"AP_Landing","unclassified","AP_Landing::is_ground_steering_allowed","predicate",
"AP_Landing","unclassified","AP_Landing::is_expecting_impact","predicate",
"AP_Landing","unclassified","AP_Landing::override_servos","predicate non-void-command",
"AP_Landing","unclassified","AP_Landing::get_pid_info","property collaborator",
"AP_Landing","unclassified","AP_Landing::setup_landing_glide_slope","command",
"AP_Landing","unclassified","AP_Landing::restart_landing_sequence","predicate non-void-command collaborator",
"AP_Landing","unclassified","AP_Landing::constrain_roll","property non-void-command",
"AP_Landing","unclassified","AP_Landing::get_target_altitude_location","predicate non-void-command collaborator",
"AP_Landing","unclassified","AP_Landing::get_target_airspeed_cm","property non-void-command",
"AP_Landing","unclassified","AP_Landing::request_go_around","predicate non-void-command",
"AP_Landing","unclassified","AP_Landing::handle_flight_stage_change","command",
"AP_Landing","unclassified","AP_Landing::is_complete","predicate",
"AP_Landing","unclassified","AP_Landing::Log","unclassified",
"AP_Landing","unclassified","AP_Landing::is_throttle_suppressed","predicate",
"AP_Landing","unclassified","AP_Landing::use_thr_min_during_flare","predicate",
"AP_Landing","unclassified","AP_Landing::allow_max_airspeed_on_land","predicate",
"AP_Landing","unclassified","AP_Landing::is_flying_forward","predicate",
"AP_Landing","unclassified","AP_Landing::terminate","predicate non-void-command",
"AP_Landing","unclassified","AP_Landing::convert_parameters","command",
"AP_Landing","unclassified","AP_Landing::type_slope_do_land","command",
"AP_Landing","unclassified","AP_Landing::type_slope_verify_abort_landing","void-accessor command",
"AP_Landing","unclassified","AP_Landing::type_slope_verify_land","predicate non-void-command",
"AP_Landing","unclassified","AP_Landing::type_slope_adjust_landing_slope_for_rangefinder_bump","void-accessor",
"AP_Landing","unclassified","AP_Landing::type_slope_request_go_around","incidental",
"AP_Landing","unclassified","AP_Landing::type_slope_setup_landing_glide_slope","void-accessor",
"AP_Landing","unclassified","AP_Landing::type_slope_get_target_airspeed_cm","property non-void-command",
"AP_Landing","unclassified","AP_Landing::type_slope_constrain_roll","wrapper stateless",
"AP_Landing","unclassified","AP_Landing::type_slope_is_flaring","incidental",
"AP_Landing","unclassified","AP_Landing::type_slope_is_on_approach","incidental",
"AP_Landing","unclassified","AP_Landing::type_slope_is_expecting_impact","incidental",
"AP_Landing","unclassified","AP_Landing::type_slope_is_complete","incidental",
"AP_Landing","unclassified","AP_Landing::type_slope_log","wrapper",
"AP_Landing","unclassified","AP_Landing::type_slope_is_throttle_suppressed","incidental",
"ModeLand","commander lazy-class degenerate","mode_number","collaborator incidental",
"ModeLand","commander lazy-class degenerate","requires_GPS","incidental",
"ModeLand","commander lazy-class degenerate","has_manual_throttle","incidental",
"ModeLand","commander lazy-class degenerate","allows_arming","collaborator incidental",
"ModeLand","commander lazy-class degenerate","is_autopilot","incidental",
"ModeLand","commander lazy-class degenerate","is_landing","incidental",
"ModeLand","commander lazy-class degenerate","controlling_position","get",
"ModeLand","commander lazy-class degenerate","set_land_pause","set",
"ModeLand","commander lazy-class degenerate","name","incidental",
"ModeLand","commander lazy-class degenerate","name4","incidental",
"ModeLand","commander lazy-class degenerate","ModeLand::init","predicate non-void-command",
"ModeLand","commander lazy-class degenerate","ModeLand::run","command",
"ModeLand","commander lazy-class degenerate","ModeLand::gps_run","set",
"ModeLand","commander lazy-class degenerate","ModeLand::nogps_run","set",
"ModeLand","commander lazy-class degenerate","ModeLand::do_not_use_GPS","set",
"ModeLand","commander lazy-class degenerate","ModeLand::run","incidental",
"AP_FlashIface_JEDEC","unclassified","get_page_size","incidental",
"AP_FlashIface_JEDEC","unclassified","get_page_count","incidental",
"AP_FlashIface_JEDEC","unclassified","get_sector_size","incidental",
"AP_FlashIface_JEDEC","unclassified","get_sector_count","incidental",
"AP_FlashIface_JEDEC","unclassified","min_erase_size","incidental",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::init","predicate non-void-command",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::reset_device","command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::detect_device","predicate",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::configure_device","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::write_enable","predicate",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::write_disable","predicate",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::modify_reg","predicate non-void-command",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::read_reg","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::write_reg","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::send_cmd","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::start_mass_erase","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::start_sector_erase","predicate non-void-command",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::start_erase_offset","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::verify_sector_erase","predicate non-void-command",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::start_program_page","predicate non-void-command",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::start_program_offset","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::read","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::is_device_busy","predicate non-void-command",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::wait_ready","command",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::start_xip_mode","predicate non-void-command collaborator",
"AP_FlashIface_JEDEC","unclassified","AP_FlashIface_JEDEC::stop_xip_mode","predicate non-void-command",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","command",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","AP_KDECAN_Driver::AP_KDECAN_Driver","constructor",
"AP_KDECAN_Driver","controller degenerate","AP_KDECAN_Driver::handle_frame","command collaborator",
"AP_KDECAN_Driver","controller degenerate","AP_KDECAN_Driver::update","controller stateless",
"AP_KDECAN_Driver","controller degenerate","AP_KDECAN_Driver::loop","command",
"AP_KDECAN_Driver","controller degenerate","AP_KDECAN_Driver::send_packet_uint16","predicate non-void-command",
"AP_KDECAN_Driver","controller degenerate","AP_KDECAN_Driver::send_packet","predicate wrapper",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","wrapper stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","empty",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_KDECAN_Driver","controller degenerate","loop","incidental",
"AP_KDECAN_Driver","controller degenerate","loop","incidental",
"AP_KDECAN_Driver","controller degenerate","loop","controller stateless",
"AP_BoardLED2","unclassified","AP_BoardLED2::init","predicate non-void-command",
"AP_BoardLED2","unclassified","AP_BoardLED2::update","command",
"AP_BoardLED2","unclassified","AP_BoardLED2::init","incidental",
"AP_BoardLED2","unclassified","AP_BoardLED2::update","incidental",
"AP_TemperatureSensor","data-provider degenerate","num_instances","get",
"AP_TemperatureSensor","data-provider degenerate","update","wrapper stateless",
"AP_TemperatureSensor","data-provider degenerate","init","empty",
"AP_TemperatureSensor","data-provider degenerate","init","wrapper stateless",
"AP_TemperatureSensor","data-provider degenerate","init","wrapper stateless",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::AP_TemperatureSensor","constructor",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::init","command",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::update","command collaborator",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::get_type","property controller",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::get_temperature","predicate",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::healthy","predicate",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::get_source","property collaborator",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::get_source_id","property",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::init","empty",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::update","empty",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::get_temperature","incidental",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::healthy","incidental",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::get_type","collaborator incidental",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::get_source","collaborator incidental",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::get_source_id","incidental",
"AP_TemperatureSensor","data-provider degenerate","AP_TemperatureSensor::AP_TemperatureSensor","constructor",
"AP_JSON","pure-controller degenerate small-class","AP_JSON::load_json","controller stateless",
"AP_JSON","pure-controller degenerate small-class","AP_JSON::parse","controller stateless",
"RCInput_UDP","commander small-class","RCInput_UDP::RCInput_UDP","constructor",
"RCInput_UDP","commander small-class","RCInput_UDP::init","unclassified",
"RCInput_UDP","commander small-class","RCInput_UDP::_timer_tick","command",
"SilentWings","commander","SilentWings::SilentWings","constructor",
"SilentWings","commander","SilentWings::set_interface_ports","unclassified",
"SilentWings","commander","SilentWings::send_servos","command collaborator",
"SilentWings","commander","SilentWings::recv_fdm","predicate non-void-command collaborator",
"SilentWings","commander","SilentWings::process_packet","command",
"SilentWings","commander","SilentWings::interim_update","predicate set",
"SilentWings","commander","SilentWings::update","command collaborator",
"SoloGimbal","boundary","SoloGimbal","constructor",
"SoloGimbal","boundary","set_lockedToBody","set",
"SoloGimbal","boundary","get_log_dt","get",
"SoloGimbal","boundary","disable_torque_report","command",
"SoloGimbal","boundary","fetch_params","command",
"SoloGimbal","boundary","handle_param_value","command collaborator",
"SoloGimbal","boundary","SoloGimbal::present","predicate set",
"SoloGimbal","boundary","SoloGimbal::aligned","predicate non-void-command",
"SoloGimbal","boundary","SoloGimbal::get_mode","property non-void-command collaborator",
"SoloGimbal","boundary","SoloGimbal::receive_feedback","command collaborator",
"SoloGimbal","boundary","SoloGimbal::send_controls","command collaborator",
"SoloGimbal","boundary","SoloGimbal::extract_feedback","command collaborator",
"SoloGimbal","boundary","SoloGimbal::update_estimators","command",
"SoloGimbal","boundary","SoloGimbal::readVehicleDeltaAngle","controller stateless",
"SoloGimbal","boundary","SoloGimbal::update_fast","collaborator",
"SoloGimbal","boundary","SoloGimbal::update_joint_angle_est","command collaborator",
"SoloGimbal","boundary","SoloGimbal::get_ang_vel_dem_yaw","property collaborator",
"SoloGimbal","boundary","SoloGimbal::get_ang_vel_dem_roll_tilt","property non-void-command collaborator",
"SoloGimbal","boundary","SoloGimbal::get_ang_vel_dem_feedforward","property collaborator",
"SoloGimbal","boundary","SoloGimbal::get_ang_vel_dem_gyro_bias","property non-void-command collaborator",
"SoloGimbal","boundary","SoloGimbal::get_ang_vel_dem_body_lock","property non-void-command collaborator",
"SoloGimbal","boundary","SoloGimbal::update_target","command collaborator",
"SoloGimbal","boundary","SoloGimbal::write_logs","collaborator",
"SoloGimbal","boundary","SoloGimbal::joints_near_limits","wrapper stateless",
"SoloGimbal","boundary","SoloGimbal::_acal_get_calibrator","property non-void-command collaborator",
"SoloGimbal","boundary","SoloGimbal::_acal_get_ready_to_sample","predicate wrapper",
"SoloGimbal","boundary","SoloGimbal::_acal_get_saving","predicate non-void-command",
"SoloGimbal","boundary","SoloGimbal::_acal_save_calibrations","command collaborator",
"SoloGimbal","boundary","SoloGimbal::gimbal_ang_vel_to_joint_rates","wrapper stateless",
"SoloGimbal","boundary","SoloGimbal::joint_rates_to_gimbal_ang_vel","wrapper stateless",
"AuxiliaryBus","unclassified","get_backend","get collaborator",
"AuxiliaryBus","unclassified","set_device_type","set",
"AuxiliaryBus","unclassified","get_bus_id","get",
"AuxiliaryBus","unclassified","AuxiliaryBus::AuxiliaryBus","constructor",
"AuxiliaryBus","unclassified","AuxiliaryBus::~AuxiliaryBus","destructor",
"AuxiliaryBus","unclassified","AuxiliaryBus::request_next_slave","property wrapper",
"AuxiliaryBus","unclassified","AuxiliaryBus::register_periodic_read","property non-void-command",
"NavEKF3_core","boundary","getIMUIndex","get",
"NavEKF3_core","boundary","have_aligned_tilt","get",
"NavEKF3_core","boundary","have_aligned_yaw","get",
"NavEKF3_core","boundary","isVibrationAffected","get",
"NavEKF3_core","boundary","get_yawEstimator","get collaborator",
"NavEKF3_core","boundary","NavEKF3_core::FuseAirspeed","command",
"NavEKF3_core","boundary","NavEKF3_core::SelectTasFusion","command",
"NavEKF3_core","boundary","NavEKF3_core::SelectBetaDragFusion","command",
"NavEKF3_core","boundary","NavEKF3_core::FuseSideslip","command",
"NavEKF3_core","boundary","NavEKF3_core::FuseDragForces","command",
"NavEKF3_core","boundary","NavEKF3_core::controlFilterModes","command",
"NavEKF3_core","boundary","NavEKF3_core::effective_magCal","property collaborator",
"NavEKF3_core","boundary","NavEKF3_core::setWindMagStateLearningMode","command",
"NavEKF3_core","boundary","NavEKF3_core::updateStateIndexLim","set",
"NavEKF3_core","boundary","NavEKF3_core::setYawSource","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::setAidingMode","command",
"NavEKF3_core","boundary","NavEKF3_core::checkAttitudeAlignmentStatus","command",
"NavEKF3_core","boundary","NavEKF3_core::useAirspeed","predicate",
"NavEKF3_core","boundary","NavEKF3_core::useRngFinder","incidental",
"NavEKF3_core","boundary","NavEKF3_core::readyToUseOptFlow","predicate",
"NavEKF3_core","boundary","NavEKF3_core::readyToUseBodyOdm","predicate",
"NavEKF3_core","boundary","NavEKF3_core::readyToUseGPS","predicate",
"NavEKF3_core","boundary","NavEKF3_core::readyToUseRangeBeacon","predicate",
"NavEKF3_core","boundary","NavEKF3_core::readyToUseExtNav","predicate",
"NavEKF3_core","boundary","NavEKF3_core::use_compass","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::using_noncompass_for_yaw","predicate",
"NavEKF3_core","boundary","NavEKF3_core::using_extnav_for_yaw","predicate",
"NavEKF3_core","boundary","NavEKF3_core::assume_zero_sideslip","predicate",
"NavEKF3_core","boundary","NavEKF3_core::setOriginLLH","predicate non-void-command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::setOrigin","predicate non-void-command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::recordYawResetsCompleted","command",
"NavEKF3_core","boundary","NavEKF3_core::checkGyroCalStatus","set collaborator",
"NavEKF3_core","boundary","NavEKF3_core::updateFilterStatus","command",
"NavEKF3_core","boundary","NavEKF3_core::runYawEstimatorPrediction","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::runYawEstimatorCorrection","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::EKFGSF_requestYawReset","set",
"NavEKF3_core","boundary","NavEKF3_core::resetGyroBias","command",
"NavEKF3_core","boundary","NavEKF3_core::InitialGyroBiasUncertainty","collaborator incidental",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_XKF1","collaborator",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_XKF2","unclassified",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_XKFS","controller",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_XKF3","unclassified",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_XKF4","unclassified",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_XKF5","unclassified",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_Quaternion","collaborator",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_Beacon","wrapper",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_BodyOdom","set",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_State_Variances","set",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_Timing","set",
"NavEKF3_core","boundary","NavEKF3_core::Log_Write_GSF","command",
"NavEKF3_core","boundary","NavEKF3_core::controlMagYawReset","command",
"NavEKF3_core","boundary","NavEKF3_core::realignYawGPS","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::alignYawAngle","wrapper",
"NavEKF3_core","boundary","NavEKF3_core::SelectMagFusion","command",
"NavEKF3_core","boundary","NavEKF3_core::FuseMagnetometer","command",
"NavEKF3_core","boundary","NavEKF3_core::fuseEulerYaw","predicate non-void-command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::FuseDeclination","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::alignMagStateDeclination","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::recordMagReset","command",
"NavEKF3_core","boundary","NavEKF3_core::learnMagBiasFromGPS","predicate non-void-command",
"NavEKF3_core","boundary","NavEKF3_core::EKFGSF_resetMainFilterYaw","predicate non-void-command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::EKFGSF_getYaw","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::resetQuatStateYawOnly","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readRangeFinder","command",
"NavEKF3_core","boundary","NavEKF3_core::writeBodyFrameOdom","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::writeWheelOdom","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::writeOptFlowMeas","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::tryChangeCompass","command",
"NavEKF3_core","boundary","NavEKF3_core::readMagData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readIMUData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readDeltaVelocity","predicate non-void-command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readGpsData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readGpsYawData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readDeltaAngle","predicate non-void-command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readBaroData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::calcFiltBaroOffset","set",
"NavEKF3_core","boundary","NavEKF3_core::correctEkfOriginHeight","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readAirSpdData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::readRngBcnData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::writeEulerYawAngle","command",
"NavEKF3_core","boundary","NavEKF3_core::writeDefaultAirSpeed","command",
"NavEKF3_core","boundary","NavEKF3_core::writeExtNavData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::writeExtNavVelData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::update_gps_selection","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::update_mag_selection","set collaborator",
"NavEKF3_core","boundary","NavEKF3_core::update_baro_selection","set",
"NavEKF3_core","boundary","NavEKF3_core::update_airspeed_selection","set collaborator",
"NavEKF3_core","boundary","NavEKF3_core::update_sensor_selection","command",
"NavEKF3_core","boundary","NavEKF3_core::updateTimingStatistics","command",
"NavEKF3_core","boundary","NavEKF3_core::learnInactiveBiases","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::MagDeclination","get property collaborator",
"NavEKF3_core","boundary","NavEKF3_core::updateMovementCheck","command",
"NavEKF3_core","boundary","NavEKF3_core::SampleDragData","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getEarthFieldTable","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::checkUpdateEarthField","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::SelectFlowFusion","command",
"NavEKF3_core","boundary","NavEKF3_core::EstimateTerrainOffset","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::FuseOptFlow","command",
"NavEKF3_core","boundary","NavEKF3_core::getOptFlowSample","collaborator incidental",
"NavEKF3_core","boundary","NavEKF3_core::healthy","predicate",
"NavEKF3_core","boundary","NavEKF3_core::errorScore","property collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getHeightControlLimit","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getEulerAngles","void-accessor collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getGyroBias","void-accessor controller",
"NavEKF3_core","boundary","NavEKF3_core::getAccelBias","void-accessor controller",
"NavEKF3_core","boundary","NavEKF3_core::getRotationBodyToNED","void-accessor collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getQuaternion","void-accessor collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getLastYawResetAngle","get",
"NavEKF3_core","boundary","NavEKF3_core::getLastPosNorthEastReset","get collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getLastPosDownReset","get",
"NavEKF3_core","boundary","NavEKF3_core::getLastVelNorthEastReset","get collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getWind","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getVelNED","void-accessor wrapper",
"NavEKF3_core","boundary","NavEKF3_core::getAirSpdVec","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getAirSpdHealthData","predicate",
"NavEKF3_core","boundary","NavEKF3_core::getPosDownDerivative","property",
"NavEKF3_core","boundary","NavEKF3_core::getPosNE","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getPosD_local","predicate",
"NavEKF3_core","boundary","NavEKF3_core::getPosD","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getHAGL","predicate",
"NavEKF3_core","boundary","NavEKF3_core::getLLH","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getGPSLLH","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getEkfControlLimits","void-accessor wrapper",
"NavEKF3_core","boundary","NavEKF3_core::getOriginLLH","get collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getMagNED","void-accessor wrapper",
"NavEKF3_core","boundary","NavEKF3_core::getMagXYZ","void-accessor wrapper",
"NavEKF3_core","boundary","NavEKF3_core::getMagOffsets","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getActiveAirspeed","property",
"NavEKF3_core","boundary","NavEKF3_core::getInnovations","predicate",
"NavEKF3_core","boundary","NavEKF3_core::getSynthAirDataInnovations","void-accessor",
"NavEKF3_core","boundary","NavEKF3_core::getVariances","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getVelInnovationsAndVariancesForSource","predicate collaborator",
"NavEKF3_core","boundary","NavEKF3_core::getFilterFaults","void-accessor",
"NavEKF3_core","boundary","NavEKF3_core::getFilterStatus","void-accessor collaborator",
"NavEKF3_core","boundary","NavEKF3_core::send_status_report","collaborator",
"NavEKF3_core","boundary","NavEKF3_core::prearm_failure_reason","get property",
"NavEKF3_core","boundary","NavEKF3_core::getFramesSincePredict","get",
"NavEKF3_core","boundary","NavEKF3_core::ResetVelocity","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::ResetPosition","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::setLatLng","predicate non-void-command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::ResetPositionNE","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::ResetPositionD","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::ResetHeight","command",
"NavEKF3_core","boundary","NavEKF3_core::resetHeightDatum","predicate non-void-command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::CorrectGPSForAntennaOffset","void-accessor collaborator",
"NavEKF3_core","boundary","NavEKF3_core::CorrectExtNavForSensorOffset","void-accessor command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::CorrectExtNavVelForSensorOffset","void-accessor collaborator",
"NavEKF3_core","boundary","NavEKF3_core::CalculateVelInnovationsAndVariances","void-accessor wrapper",
"NavEKF3_core","boundary","NavEKF3_core::SelectVelPosFusion","command",
"NavEKF3_core","boundary","NavEKF3_core::FuseVelPosNED","command",
"NavEKF3_core","boundary","NavEKF3_core::selectHeightForFusion","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::FuseBodyVel","command",
"NavEKF3_core","boundary","NavEKF3_core::SelectBodyOdomFusion","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::SelectRngBcnFusion","command",
"NavEKF3_core","boundary","NavEKF3_core::FuseRngBcn","command",
"NavEKF3_core","boundary","NavEKF3_core::FuseRngBcnStatic","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::CalcRangeBeaconPosDownOffset","set collaborator",
"NavEKF3_core","boundary","NavEKF3_core::calcGpsGoodToAlign","command",
"NavEKF3_core","boundary","NavEKF3_core::calcGpsGoodForFlight","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::detectFlight","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::setTerrainHgtStable","set",
"NavEKF3_core","boundary","NavEKF3_core::detectOptFlowTakeoff","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::NavEKF3_core","constructor",
"NavEKF3_core","boundary","NavEKF3_core::setup_core","predicate non-void-command",
"NavEKF3_core","boundary","NavEKF3_core::InitialiseVariables","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::InitialiseVariablesMag","command",
"NavEKF3_core","boundary","NavEKF3_core::InitialiseFilterBootstrap","predicate non-void-command",
"NavEKF3_core","boundary","NavEKF3_core::CovarianceInit","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::UpdateFilter","command",
"NavEKF3_core","boundary","NavEKF3_core::correctDeltaAngle","void-accessor",
"NavEKF3_core","boundary","NavEKF3_core::correctDeltaVelocity","void-accessor",
"NavEKF3_core","boundary","NavEKF3_core::UpdateStrapdownEquationsNED","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::calcOutputStates","command",
"NavEKF3_core","boundary","NavEKF3_core::CovariancePrediction","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::zeroRows","wrapper stateless",
"NavEKF3_core","boundary","NavEKF3_core::zeroCols","wrapper stateless",
"NavEKF3_core","boundary","NavEKF3_core::StoreOutputReset","command",
"NavEKF3_core","boundary","NavEKF3_core::StoreQuatReset","command",
"NavEKF3_core","boundary","NavEKF3_core::StoreQuatRotate","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::ForceSymmetry","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::ConstrainVariances","command",
"NavEKF3_core","boundary","NavEKF3_core::MagTableConstrain","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::ConstrainStates","command",
"NavEKF3_core","boundary","NavEKF3_core::calcEarthRateNED","wrapper stateless",
"NavEKF3_core","boundary","NavEKF3_core::setYawFromMag","command collaborator",
"NavEKF3_core","boundary","NavEKF3_core::resetMagFieldStates","command",
"NavEKF3_core","boundary","NavEKF3_core::zeroAttCovOnly","unclassified",
"NavEKF3_core","boundary","NavEKF3_core::calcTiltErrorVariance","set collaborator",
"NavEKF3_core","boundary","NavEKF3_core::bestRotationOrder","void-accessor wrapper",
"NavEKF3_core","boundary","NavEKF3_core::verifyTiltErrorVariance","set",
"NavEKF3_core","boundary","NavEKF3_core::moveEKFOrigin","unclassified",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::AP_InertialSensor_RST","constructor",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::~AP_InertialSensor_RST","destructor",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::probe","controller stateless",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::_init_gyro","predicate",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::_init_accel","predicate",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::_init_sensor","predicate non-void-command",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::start","command",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::update","predicate wrapper",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::gyro_measure","command",
"AP_InertialSensor_RST","unclassified","AP_InertialSensor_RST::accel_measure","command",
"AP_InertialSensor_LSM9DS0","commander","~AP_InertialSensor_LSM9DS0","destructor",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::AP_InertialSensor_LSM9DS0","constructor",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::probe","controller stateless",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_init_sensor","predicate non-void-command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_hardware_init","predicate non-void-command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::start","command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_register_read_xm","property non-void-command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_register_read_g","property non-void-command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_register_write_xm","command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_register_write_g","command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_gyro_disable_i2c","command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_accel_disable_i2c","command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_gyro_init","command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_accel_init","command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_set_gyro_scale","set collaborator",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_set_accel_scale","set collaborator",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_poll_data","command collaborator",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_accel_data_ready","predicate non-void-command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_gyro_data_ready","predicate non-void-command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_read_data_transaction_a","command",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_read_data_transaction_g","command collaborator",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::update","predicate wrapper",
"AP_InertialSensor_LSM9DS0","commander","AP_InertialSensor_LSM9DS0::_dump_registers","command",
"AP_DAL_Beacon","data-provider","count","get",
"AP_DAL_Beacon","data-provider","get_origin","get controller",
"AP_DAL_Beacon","data-provider","enabled","get",
"AP_DAL_Beacon","data-provider","beacon_healthy","get",
"AP_DAL_Beacon","data-provider","beacon_last_update_ms","get",
"AP_DAL_Beacon","data-provider","beacon_distance","get",
"AP_DAL_Beacon","data-provider","beacon_position","get collaborator",
"AP_DAL_Beacon","data-provider","get_vehicle_position_ned","get",
"AP_DAL_Beacon","data-provider","beacon","incidental",
"AP_DAL_Beacon","data-provider","handle_message","set collaborator",
"AP_DAL_Beacon","data-provider","handle_message","set collaborator",
"AP_DAL_Beacon","data-provider","AP_DAL_Beacon::AP_DAL_Beacon","constructor",
"AP_DAL_Beacon","data-provider","AP_DAL_Beacon::start_frame","command collaborator",
"AP_InertialSensor_ExternalAHRS","boundary","AP_InertialSensor_ExternalAHRS::AP_InertialSensor_ExternalAHRS","constructor",
"AP_InertialSensor_ExternalAHRS","boundary","AP_InertialSensor_ExternalAHRS::handle_external","wrapper",
"AP_InertialSensor_ExternalAHRS","boundary","AP_InertialSensor_ExternalAHRS::update","get wrapper",
"AP_InertialSensor_ExternalAHRS","boundary","AP_InertialSensor_ExternalAHRS::start","unclassified",
"AP_InertialSensor_ExternalAHRS","boundary","AP_InertialSensor_ExternalAHRS::accumulate","command",
"AP_InertialSensor_ExternalAHRS","boundary","AP_InertialSensor_ExternalAHRS::get_output_banner","predicate wrapper",
"Fins","commander","initialised_ok","incidental",
"Fins","commander","armed","set",
"Fins","commander","armed","get",
"Fins","commander","get_throttle","property wrapper",
"Fins","commander","Fins::Fins","constructor",
"Fins","commander","Fins::setup_fins","command",
"Fins","commander","Fins::add_fin","command",
"Fins","commander","Fins::output","command",
"Fins","commander","Fins::output_min","command",
"AP_IRLock_SITL_Gazebo","small-class","AP_IRLock_SITL_Gazebo::AP_IRLock_SITL_Gazebo","constructor",
"AP_IRLock_SITL_Gazebo","small-class","AP_IRLock_SITL_Gazebo::init","collaborator",
"AP_IRLock_SITL_Gazebo","small-class","AP_IRLock_SITL_Gazebo::update","predicate non-void-command",
"AP_AHRS","data-provider boundary","get_semaphore","get collaborator",
"AP_AHRS","data-provider boundary","get_gyro","collaborator incidental",
"AP_AHRS","data-provider boundary","get_gyro_drift","collaborator incidental",
"AP_AHRS","data-provider boundary","set_wind_estimation_enabled","set",
"AP_AHRS","data-provider boundary","get_wind_estimation_enabled","get",
"AP_AHRS","data-provider boundary","wind_estimate","collaborator incidental",
"AP_AHRS","data-provider boundary","estimate_wind","command",
"AP_AHRS","data-provider boundary","get_max_wind","get",
"AP_AHRS","data-provider boundary","airspeed_sensor_enabled","wrapper stateless",
"AP_AHRS","data-provider boundary","airspeed_sensor_enabled","wrapper stateless",
"AP_AHRS","data-provider boundary","get_secondary_attitude","collaborator incidental",
"AP_AHRS","data-provider boundary","get_secondary_quaternion","collaborator incidental",
"AP_AHRS","data-provider boundary","get_secondary_position","collaborator incidental",
"AP_AHRS","data-provider boundary","groundspeed_vector","collaborator incidental",
"AP_AHRS","data-provider boundary","groundspeed","incidental",
"AP_AHRS","data-provider boundary","get_accel_ef","collaborator incidental",
"AP_AHRS","data-provider boundary","getCorrectedDeltaVelocityNED","incidental",
"AP_AHRS","data-provider boundary","dcm_yaw_initialised","predicate",
"AP_AHRS","data-provider boundary","get_primary_core_index","incidental",
"AP_AHRS","data-provider boundary","get_primary_accel_index","incidental",
"AP_AHRS","data-provider boundary","get_primary_gyro_index","incidental",
"AP_AHRS","data-provider boundary","get_ekf_type","get",
"AP_AHRS","data-provider boundary","set_ekf_type","command collaborator",
"AP_AHRS","data-provider boundary","getAOA","get",
"AP_AHRS","data-provider boundary","getSSA","get",
"AP_AHRS","data-provider boundary","get_trim","property collaborator",
"AP_AHRS","data-provider boundary","get_rotation_autopilot_body_to_vehicle_body","get collaborator",
"AP_AHRS","data-provider boundary","get_rotation_vehicle_body_to_autopilot_body","get collaborator",
"AP_AHRS","data-provider boundary","get_yaw_rate_earth","property",
"AP_AHRS","data-provider boundary","get_home","get collaborator",
"AP_AHRS","data-provider boundary","lock_home","set",
"AP_AHRS","data-provider boundary","home_is_locked","get",
"AP_AHRS","data-provider boundary","home_is_set","get",
"AP_AHRS","data-provider boundary","get_roll","get",
"AP_AHRS","data-provider boundary","get_pitch","get",
"AP_AHRS","data-provider boundary","get_yaw","get",
"AP_AHRS","data-provider boundary","cos_roll","get",
"AP_AHRS","data-provider boundary","cos_pitch","get",
"AP_AHRS","data-provider boundary","cos_yaw","get",
"AP_AHRS","data-provider boundary","sin_roll","get",
"AP_AHRS","data-provider boundary","sin_pitch","get",
"AP_AHRS","data-provider boundary","sin_yaw","get",
"AP_AHRS","data-provider boundary","get_rotation_body_to_ned","collaborator incidental",
"AP_AHRS","data-provider boundary","get_DCM_rotation_body_to_ned","get collaborator",
"AP_AHRS","data-provider boundary","get_accel","property collaborator",
"AP_AHRS","data-provider boundary","get_accel_bias","collaborator incidental",
"AP_AHRS","data-provider boundary","get_takeoff_expected","get",
"AP_AHRS","data-provider boundary","get_touchdown_expected","get",
"AP_AHRS","data-provider boundary","set_fly_forward","set",
"AP_AHRS","data-provider boundary","get_fly_forward","get",
"AP_AHRS","data-provider boundary","get_vehicle_class","get collaborator",
"AP_AHRS","data-provider boundary","set_vehicle_class","set collaborator",
"AP_AHRS","data-provider boundary","get_view","get collaborator",
"AP_AHRS","data-provider boundary","active_EKF_type","collaborator incidental",
"AP_AHRS","data-provider boundary","always_use_EKF","predicate",
"AP_AHRS","data-provider boundary","option_set","predicate wrapper",
"AP_AHRS","data-provider boundary","AP_AHRS::AP_AHRS","constructor",
"AP_AHRS","data-provider boundary","AP_AHRS::init","collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::update_trim_rotation_matrices","command",
"AP_AHRS","data-provider boundary","AP_AHRS::get_quat_body_to_ned","collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::body_to_earth","property collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::earth_to_body","property collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::reset_gyro_drift","command",
"AP_AHRS","data-provider boundary","AP_AHRS::update_state","command",
"AP_AHRS","data-provider boundary","AP_AHRS::update","command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::copy_estimates_from_backend_estimates","command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::update_DCM","command",
"AP_AHRS","data-provider boundary","AP_AHRS::update_SITL","command",
"AP_AHRS","data-provider boundary","AP_AHRS::update_notify_from_filter_status","collaborator incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::update_EKF2","command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::update_EKF3","command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::update_external","command",
"AP_AHRS","data-provider boundary","AP_AHRS::reset","command",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_location","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_error_rp","property",
"AP_AHRS","data-provider boundary","AP_AHRS::get_error_yaw","property",
"AP_AHRS","data-provider boundary","AP_AHRS::_wind_estimate","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::wind_alignment","property",
"AP_AHRS","data-provider boundary","AP_AHRS::head_wind","property",
"AP_AHRS","data-provider boundary","AP_AHRS::using_airspeed_sensor","incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::_should_use_airspeed_sensor","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_airspeed_estimate","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_airspeed_estimate_true","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::_airspeed_vector_true","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::airspeed_health_data","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::synthetic_airspeed","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::use_compass","predicate non-void-command",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_quaternion","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_secondary_attitude","get predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_secondary_quaternion","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_secondary_position","get predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_groundspeed_vector","property non-void-command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_groundspeed","property non-void-command",
"AP_AHRS","data-provider boundary","AP_AHRS::set_origin","predicate non-void-command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::handle_external_position_estimate","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::have_inertial_nav","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_velocity_NED","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_mag_field_NED","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_mag_field_correction","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_vert_pos_rate_D","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::get_hagl","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::get_relative_position_NED_origin","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_relative_position_NED_home","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_relative_position_NE_origin","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_relative_position_NE_home","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_relative_position_D_origin","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::get_relative_position_D_home","void-accessor collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::ekf_type","property collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_active_EKF_type","property collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::fallback_active_EKF_type","property collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_secondary_EKF_type","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::healthy","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::pre_arm_check","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::initialised","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::get_filter_status","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::writeOptFlowMeas","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::getOptFlowSample","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::writeBodyFrameOdom","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::writeExtNavData","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::writeDefaultAirSpeed","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::writeExtNavVelData","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::getControlLimits","void-accessor",
"AP_AHRS","data-provider boundary","AP_AHRS::getControlScaleZ","property",
"AP_AHRS","data-provider boundary","AP_AHRS::getMagOffsets","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_getCorrectedDeltaVelocityNED","void-accessor collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::set_failure_inconsistent_message","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::attitudes_consistent","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::getLastYawResetAngle","property non-void-command",
"AP_AHRS","data-provider boundary","AP_AHRS::getLastPosNorthEastReset","property non-void-command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::getLastVelNorthEastReset","property collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::getLastPosDownReset","property non-void-command",
"AP_AHRS","data-provider boundary","AP_AHRS::resetHeightDatum","predicate non-void-command",
"AP_AHRS","data-provider boundary","AP_AHRS::send_ekf_status_report","collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_origin","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_origin","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::set_home","predicate non-void-command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::load_watchdog_home","command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_hgt_ctrl_limit","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::set_terrain_hgt_stable","set",
"AP_AHRS","data-provider boundary","AP_AHRS::get_innovations","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::is_vibration_affected","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::get_variances","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_vel_innovations_and_variances_for_source","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_active_airspeed_index","property",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_primary_IMU_index","property",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_primary_core_index","property",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_primary_accel_index","property",
"AP_AHRS","data-provider boundary","AP_AHRS::_get_primary_gyro_index","property",
"AP_AHRS","data-provider boundary","AP_AHRS::check_lane_switch","command",
"AP_AHRS","data-provider boundary","AP_AHRS::request_yaw_reset","command",
"AP_AHRS","data-provider boundary","AP_AHRS::set_posvelyaw_source_set","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::get_posvelyaw_source_set","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::Log_Write","command",
"AP_AHRS","data-provider boundary","AP_AHRS::using_noncompass_for_yaw","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::using_extnav_for_yaw","predicate",
"AP_AHRS","data-provider boundary","AP_AHRS::set_alt_measurement_noise","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::get_yaw_estimator","property collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_location","collaborator incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::wind_estimate","collaborator incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::airspeed_estimate","incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::airspeed_estimate","collaborator incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::airspeed_estimate_true","incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::airspeed_vector_true","collaborator incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::get_quaternion","collaborator incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::get_origin","collaborator incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::get_velocity_NED","collaborator incidental",
"AP_AHRS","data-provider boundary","AP_AHRS::get_location_from_origin_offset_NED","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_location_from_home_offset_NED","predicate collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_EAS2TAS","wrapper stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::get_air_density_ratio","property",
"AP_AHRS","data-provider boundary","AP_AHRS::get_gyro_latest","property collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::set_trim","command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::add_trim","command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::update_orientation","set collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::calc_trig","controller stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::update_trig","command",
"AP_AHRS","data-provider boundary","AP_AHRS::update_cd_values","command",
"AP_AHRS","data-provider boundary","AP_AHRS::create_view","get property set collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::update_AOA_SSA","command",
"AP_AHRS","data-provider boundary","AP_AHRS::earth_to_body2D","property wrapper",
"AP_AHRS","data-provider boundary","AP_AHRS::body_to_earth2D","property wrapper",
"AP_AHRS","data-provider boundary","AP_AHRS::Log_Write_Home_And_Origin","command collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::get_vibration","wrapper stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::set_takeoff_expected","command",
"AP_AHRS","data-provider boundary","AP_AHRS::set_touchdown_expected","command",
"AP_AHRS","data-provider boundary","AP_AHRS::update_flags","command",
"AP_AHRS","data-provider boundary","AP_AHRS::Write_AHRS2","collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::Write_AOA_SSA","unclassified",
"AP_AHRS","data-provider boundary","AP_AHRS::Write_Attitude","collaborator",
"AP_AHRS","data-provider boundary","AP_AHRS::Write_Origin","wrapper stateless",
"AP_AHRS","data-provider boundary","AP_AHRS::Write_POS","unclassified",
"AP_AHRS","data-provider boundary","AP_AHRS::write_video_stabilisation","collaborator",
"AP_AHRS","data-provider boundary","reset","controller stateless",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::AP_InertialSensor_Invensensev3","constructor",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::~AP_InertialSensor_Invensensev3","destructor",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::probe","controller stateless",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::fifo_reset","command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::start","command collaborator",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::get_output_banner","predicate wrapper",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::update","predicate wrapper",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::accumulate","empty",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::accumulate_samples","predicate set",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::accumulate_highres_samples","predicate set",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::read_fifo","command collaborator",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::block_read","predicate non-void-command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::register_read","property non-void-command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::register_write","command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::register_read_bank","property non-void-command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::register_write_bank","controller",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::calculate_fast_sampling_backend_rate","wrapper stateless",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::set_filter_and_scaling","command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::set_filter_and_scaling_icm42670","set",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::set_filter_and_scaling_icm456xy","command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::check_whoami","predicate",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::register_read_bank_icm456xy","property non-void-command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::register_write_bank_icm456xy","command",
"AP_InertialSensor_Invensensev3","unclassified","AP_InertialSensor_Invensensev3::hardware_init","predicate non-void-command",
"AP_IOMCU","unclassified","get_RSSI","get",
"AP_IOMCU","unclassified","get_vservo_adc_count","get",
"AP_IOMCU","unclassified","get_vrssi_adc_count","get",
"AP_IOMCU","unclassified","get_mcu_id","get",
"AP_IOMCU","unclassified","get_cpu_id","get",
"AP_IOMCU","unclassified","write_register","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::AP_IOMCU","constructor",
"AP_IOMCU","unclassified","AP_IOMCU::init","command collaborator",
"AP_IOMCU","unclassified","AP_IOMCU::event_failed","controller",
"AP_IOMCU","unclassified","AP_IOMCU::thread_main","command",
"AP_IOMCU","unclassified","AP_IOMCU::send_servo_out","set",
"AP_IOMCU","unclassified","AP_IOMCU::read_rc_input","command",
"AP_IOMCU","unclassified","AP_IOMCU::read_erpm","command",
"AP_IOMCU","unclassified","AP_IOMCU::read_telem","command collaborator",
"AP_IOMCU","unclassified","AP_IOMCU::read_status","command",
"AP_IOMCU","unclassified","AP_IOMCU::write_log","set",
"AP_IOMCU","unclassified","AP_IOMCU::read_servo","command",
"AP_IOMCU","unclassified","AP_IOMCU::discard_input","command",
"AP_IOMCU","unclassified","AP_IOMCU::write_wait","property set",
"AP_IOMCU","unclassified","AP_IOMCU::read_registers","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::write_registers","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::modify_register","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::write_channel","command",
"AP_IOMCU","unclassified","AP_IOMCU::trigger_event","set",
"AP_IOMCU","unclassified","AP_IOMCU::get_safety_switch_state","property collaborator",
"AP_IOMCU","unclassified","AP_IOMCU::force_safety_on","predicate set",
"AP_IOMCU","unclassified","AP_IOMCU::force_safety_off","set",
"AP_IOMCU","unclassified","AP_IOMCU::read_channel","incidental",
"AP_IOMCU","unclassified","AP_IOMCU::cork","set",
"AP_IOMCU","unclassified","AP_IOMCU::push","set",
"AP_IOMCU","unclassified","AP_IOMCU::set_freq","command",
"AP_IOMCU","unclassified","AP_IOMCU::get_freq","incidental",
"AP_IOMCU","unclassified","AP_IOMCU::enable_sbus_out","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::check_rcinput","predicate wrapper",
"AP_IOMCU","unclassified","AP_IOMCU::set_heater_duty_cycle","set",
"AP_IOMCU","unclassified","AP_IOMCU::set_default_rate","command",
"AP_IOMCU","unclassified","AP_IOMCU::set_oneshot_mode","command",
"AP_IOMCU","unclassified","AP_IOMCU::set_brushed_mode","command",
"AP_IOMCU","unclassified","AP_IOMCU::set_dshot_period","command",
"AP_IOMCU","unclassified","AP_IOMCU::set_dshot_esc_type","set collaborator",
"AP_IOMCU","unclassified","AP_IOMCU::set_telem_request_mask","command collaborator",
"AP_IOMCU","unclassified","AP_IOMCU::send_dshot_command","command collaborator",
"AP_IOMCU","unclassified","AP_IOMCU::set_output_mode","command",
"AP_IOMCU","unclassified","AP_IOMCU::set_bidir_dshot_mask","set",
"AP_IOMCU","unclassified","AP_IOMCU::get_output_mode","property wrapper",
"AP_IOMCU","unclassified","AP_IOMCU::enable_ch","command",
"AP_IOMCU","unclassified","AP_IOMCU::disable_ch","command",
"AP_IOMCU","unclassified","AP_IOMCU::update_safety_options","set",
"AP_IOMCU","unclassified","AP_IOMCU::send_rc_protocols","set",
"AP_IOMCU","unclassified","AP_IOMCU::check_crc","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::set_failsafe_pwm","incidental",
"AP_IOMCU","unclassified","AP_IOMCU::set_safety_mask","command",
"AP_IOMCU","unclassified","AP_IOMCU::healthy","predicate",
"AP_IOMCU","unclassified","AP_IOMCU::shutdown","set",
"AP_IOMCU","unclassified","AP_IOMCU::soft_reboot","command",
"AP_IOMCU","unclassified","AP_IOMCU::bind_dsm","command",
"AP_IOMCU","unclassified","AP_IOMCU::setup_mixing","predicate non-void-command collaborator",
"AP_IOMCU","unclassified","AP_IOMCU::get_rc_protocol","property wrapper",
"AP_IOMCU","unclassified","AP_IOMCU::handle_repeated_failures","wrapper",
"AP_IOMCU","unclassified","AP_IOMCU::check_iomcu_reset","command",
"AP_IOMCU","unclassified","AP_IOMCU::valid_GPIO_pin","predicate",
"AP_IOMCU","unclassified","AP_IOMCU::convert_pin_number","incidental",
"AP_IOMCU","unclassified","AP_IOMCU::set_GPIO_mask","set",
"AP_IOMCU","unclassified","AP_IOMCU::write_GPIO","unclassified",
"AP_IOMCU","unclassified","AP_IOMCU::toggle_GPIO","unclassified",
"AP_IOMCU","unclassified","AP_IOMCU::upload_fw","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::recv_byte_with_timeout","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::recv_bytes","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::drain","command",
"AP_IOMCU","unclassified","AP_IOMCU::send","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::send","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::get_sync","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::sync","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::get_info","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::erase","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::program","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::verify_rev2","predicate non-void-command",
"AP_IOMCU","unclassified","AP_IOMCU::verify_rev3","predicate",
"AP_IOMCU","unclassified","AP_IOMCU::reboot","predicate non-void-command",
"AP_ICEngine_TCA9554","unclassified","AP_ICEngine_TCA9554::TCA9554_init","predicate set",
"AP_ICEngine_TCA9554","unclassified","AP_ICEngine_TCA9554::TCA9554_set","command collaborator",
"AP_ICEngine_TCA9554","unclassified","AP_ICEngine_TCA9554::set_starter","unclassified",
"HALSITL::UARTDriver","data-provider lazy-class","is_initialized","incidental",
"HALSITL::UARTDriver","data-provider lazy-class","tx_pending","incidental",
"HALSITL::UARTDriver","data-provider lazy-class","get_flow_control","collaborator incidental",
"HALSITL::UARTDriver","data-provider lazy-class","get_baud_rate","get",
"HALSITL::UARTDriver","data-provider lazy-class","get_total_tx_bytes","get",
"HALSITL::UARTDriver","data-provider lazy-class","get_total_rx_bytes","get",
"AP_CustomRotation","commander degenerate","AP_CustomRotation::AP_CustomRotation","copy-constructor",
"AP_CustomRotation","commander degenerate","AP_CustomRotation::init","command",
"AP_CustomRotation","commander degenerate","init","empty",
"AP_CustomRotation","commander degenerate","init","wrapper stateless",
"AP_CustomRotation","commander degenerate","init","wrapper stateless",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::init","command collaborator",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::update","command collaborator",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::has_pan_control","predicate wrapper",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::get_attitude_quaternion","predicate non-void-command collaborator",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::get_angles","command",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::set_motor","command",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::get_boardinfo","command",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::control_axis","command collaborator",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::read_params","command",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::write_params","command",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::send_command","command",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::parse_body","command",
"AP_Mount_Alexmos","commander","AP_Mount_Alexmos::read_incoming","command",
"HALSITL::Storage","degenerate small-class","init","empty",
"HALSITL::Scheduler","unclassified","is_system_initialized","get",
"HALSITL::Scheduler","unclassified","interrupts_are_blocked","predicate",
"HALSITL::Scheduler","unclassified","sitl_begin_atomic","set",
"HALSITL::Scheduler","unclassified","stopped_clock_usec","get",
"HALSITL::Scheduler","unclassified","set_in_semaphore_take_wait","set",
"ExpandingString","unclassified","get_string","get",
"ExpandingString","unclassified","get_length","get",
"ExpandingString","unclassified","get_writeable_string","get",
"ExpandingString","unclassified","reset","set",
"ExpandingString","unclassified","has_failed_allocation","get",
"ExpandingString","unclassified","ExpandingString::expand","predicate non-void-command",
"ExpandingString","unclassified","ExpandingString::printf","collaborator",
"ExpandingString","unclassified","ExpandingString::append","predicate set",
"ExpandingString","unclassified","ExpandingString::~ExpandingString","destructor",
"ExpandingString","unclassified","ExpandingString::set_buffer","command",
"AP_Mount_Viewpro","boundary","has_roll_control","incidental",
"AP_Mount_Viewpro","boundary","has_pan_control","wrapper stateless",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::update","collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::healthy","predicate wrapper",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::get_attitude_quaternion","predicate controller",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::read_incoming_packets","command",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::process_packet","command",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::calc_crc","incidental",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::get_length_and_frame_count_byte","property set",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_packet","predicate non-void-command",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_handshake","command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::set_lock","predicate set collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_comm_config_cmd","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_target_rates","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_target_angles","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_camera_command","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_camera_command2","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_tracking_command","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_tracking_command2","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_m_ahrs","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::take_picture","predicate wrapper",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::record_video","predicate wrapper",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::set_zoom","predicate wrapper",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::set_focus","property wrapper",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::set_tracking","predicate non-void-command collaborator",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::set_lens","predicate wrapper",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::set_camera_source","wrapper stateless",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_camera_information","wrapper",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::send_camera_settings","wrapper",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::get_rangefinder_distance","predicate",
"AP_Mount_Viewpro","boundary","AP_Mount_Viewpro::set_rangefinder_enable","predicate non-void-command",
"AP_GPS_MAV","unclassified","name","incidental",
"AP_GPS_MAV","unclassified","AP_GPS_MAV::read","predicate set",
"AP_GPS_MAV","unclassified","AP_GPS_MAV::handle_msg","command collaborator",
"AR_PivotTurn","unclassified","deactivate","set",
"AR_PivotTurn","unclassified","get_rate_max","get",
"AR_PivotTurn","unclassified","AR_PivotTurn::AR_PivotTurn","constructor",
"AR_PivotTurn","unclassified","AR_PivotTurn::enable","command",
"AR_PivotTurn","unclassified","AR_PivotTurn::active","predicate",
"AR_PivotTurn","unclassified","AR_PivotTurn::check_activation","command",
"AR_PivotTurn","unclassified","AR_PivotTurn::would_activate","predicate wrapper",
"AR_PivotTurn","unclassified","AR_PivotTurn::get_turn_rate_rads","property non-void-command",
"AR_PivotTurn","unclassified","AR_PivotTurn::get_delay_duration_ms","property",
"CAN_Transport","commander boundary data-class small-class","~CAN_Transport","destructor",
"CAN_Transport","commander boundary data-class small-class","set_event_handle","set collaborator",
"Rover","commander","gcs","get collaborator",
"Rover","commander","rc","collaborator incidental",
"Rover","commander","get_log_bitmask","get collaborator",
"Rover","commander","get_log_structures","get collaborator",
"Rover","commander","get_mode","property",
"Rover","commander","current_mode_requires_mission","predicate",
"Rover","commander","get_frame_type","controller stateless",
"Rover","commander","get_wheel_rate_control","collaborator incidental",
"Rover","commander","Rover::send_wheel_encoder_distance","controller",
"Rover","commander","Rover::Log_Write_Attitude","command collaborator",
"Rover","commander","Rover::Log_Write_Depth","command",
"Rover","commander","Rover::Log_Write_GuidedTarget","command collaborator",
"Rover","commander","Rover::Log_Write_Nav_Tuning","command collaborator",
"Rover","commander","Rover::Log_Write_Sail","command",
"Rover","commander","Rover::Log_Write_Steering","command collaborator",
"Rover","commander","Rover::Log_Write_Throttle","command collaborator",
"Rover","commander","Rover::Log_Write_RC","command",
"Rover","commander","Rover::Log_Write_Vehicle_Startup_Messages","command",
"Rover","commander","Rover::get_num_log_structures","property wrapper",
"Rover","commander","Rover::load_parameters","command collaborator",
"Rover","commander","Rover::get_scheduler_tasks","void-accessor wrapper",
"Rover","commander","Rover::Rover","constructor",
"Rover","commander","Rover::set_target_location","predicate non-void-command collaborator",
"Rover","commander","Rover::set_target_velocity_NED","predicate non-void-command collaborator",
"Rover","commander","Rover::set_steering_and_throttle","predicate non-void-command",
"Rover","commander","Rover::get_steering_and_throttle","controller stateless",
"Rover","commander","Rover::set_desired_turn_rate_and_speed","predicate non-void-command",
"Rover","commander","Rover::set_desired_speed","predicate non-void-command",
"Rover","commander","Rover::get_control_output","controller stateless",
"Rover","commander","Rover::nav_scripting_enable","predicate non-void-command",
"Rover","commander","Rover::nav_script_time","predicate non-void-command",
"Rover","commander","Rover::nav_script_time_done","command",
"Rover","commander","Rover::stats_update","controller stateless",
"Rover","commander","Rover::ahrs_update","command collaborator",
"Rover","commander","Rover::gcs_failsafe_check","command",
"Rover","commander","Rover::update_logging1","command",
"Rover","commander","Rover::update_logging2","command",
"Rover","commander","Rover::one_second_loop","command",
"Rover","commander","Rover::update_current_mode","command",
"Rover","commander","Rover::get_wp_distance_m","predicate",
"Rover","commander","Rover::get_wp_bearing_deg","predicate",
"Rover","commander","Rover::get_wp_crosstrack_error_m","predicate",
"Rover","commander","Rover::set_servos","command",
"Rover","commander","Rover::balancebot_pitch_control","void-accessor controller",
"Rover","commander","Rover::is_balancebot","controller stateless",
"Rover","commander","Rover::set_home_to_current_location","predicate non-void-command collaborator",
"Rover","commander","Rover::set_home","predicate non-void-command",
"Rover","commander","Rover::update_home","command collaborator",
"Rover","commander","Rover::crash_check","command",
"Rover","commander","Rover::cruise_learn_start","command",
"Rover","commander","Rover::cruise_learn_update","command",
"Rover","commander","Rover::cruise_learn_complete","command",
"Rover","commander","Rover::log_write_cruise_learn","unclassified",
"Rover","commander","Rover::ekf_check","command collaborator",
"Rover","commander","Rover::ekf_over_threshold","predicate non-void-command",
"Rover","commander","Rover::ekf_position_ok","predicate non-void-command collaborator",
"Rover","commander","Rover::failsafe_ekf_event","command",
"Rover","commander","Rover::failsafe_ekf_off_event","command",
"Rover","commander","Rover::failsafe_check","command",
"Rover","commander","Rover::failsafe_trigger","command",
"Rover","commander","Rover::handle_battery_failsafe","command",
"Rover","commander","Rover::afs_fs_check","controller stateless",
"Rover","commander","Rover::fence_check","command",
"Rover","commander","Rover::mode_from_mode_num","property collaborator",
"Rover","commander","Rover::motor_test_output","command",
"Rover","commander","Rover::mavlink_motor_test_check","predicate non-void-command",
"Rover","commander","Rover::mavlink_motor_test_start","property non-void-command collaborator",
"Rover","commander","Rover::motor_test_stop","unclassified",
"Rover","commander","Rover::init_precland","command",
"Rover","commander","Rover::update_precland","command",
"Rover","commander","Rover::set_control_channels","command",
"Rover","commander","Rover::init_rc_in","command",
"Rover","commander","Rover::rudder_arm_disarm_check","unclassified",
"Rover","commander","Rover::read_radio","command",
"Rover","commander","Rover::radio_failsafe_check","command",
"Rover","commander","Rover::update_compass","command",
"Rover","commander","Rover::compass_save","command",
"Rover","commander","Rover::update_wheel_encoder","command",
"Rover","commander","Rover::read_rangefinders","command",
"Rover","commander","Rover::init_ardupilot","command collaborator",
"Rover","commander","Rover::update_ahrs_flyforward","command",
"Rover","commander","Rover::gcs_mode_enabled","wrapper stateless",
"Rover","commander","Rover::set_mode","predicate non-void-command collaborator",
"Rover","commander","Rover::set_mode","controller stateless",
"Rover","commander","Rover::set_mode","controller stateless",
"Rover","commander","Rover::startup_INS","command",
"Rover","commander","Rover::notify_mode","set collaborator",
"Rover","commander","Rover::check_digital_pin","controller stateless",
"Rover","commander","Rover::should_log","predicate non-void-command",
"Rover","commander","Rover::is_boat","controller stateless",
"CAN_Multicast","unclassified","get_read_fd","property",
"CAN_Multicast","unclassified","CAN_Multicast::init","predicate non-void-command",
"CAN_Multicast","unclassified","CAN_Multicast::send","predicate non-void-command collaborator",
"CAN_Multicast","unclassified","CAN_Multicast::receive","predicate non-void-command collaborator",
"HALSITL::ADCSource","boundary degenerate small-class","voltage_average_ratiometric","wrapper stateless",
"TestThread1","data-class small-class","TestThread1","constructor",
"TestThread1","data-class small-class","_run","predicate set",
"MenuCommands","degenerate","gpio_input","wrapper stateless",
"MenuCommands","degenerate","gpio_output","wrapper stateless",
"MenuCommands","degenerate","gpio_input_channel","controller stateless",
"MenuCommands","degenerate","gpio_output_channel","controller stateless",
"AP_L1_Control","data-provider","AP_L1_Control","constructor",
"AP_L1_Control","data-provider","crosstrack_error","get",
"AP_L1_Control","data-provider","crosstrack_error_integrator","get",
"AP_L1_Control","data-provider","set_default_period","controller stateless",
"AP_L1_Control","data-provider","set_data_is_stale","set",
"AP_L1_Control","data-provider","data_is_stale","get",
"AP_L1_Control","data-provider","set_reverse","set",
"AP_L1_Control","data-provider","AP_L1_Control::get_yaw","property",
"AP_L1_Control","data-provider","AP_L1_Control::get_yaw_sensor","get property wrapper",
"AP_L1_Control","data-provider","AP_L1_Control::nav_roll_cd","property",
"AP_L1_Control","data-provider","AP_L1_Control::lateral_acceleration","get",
"AP_L1_Control","data-provider","AP_L1_Control::nav_bearing_cd","property wrapper",
"AP_L1_Control","data-provider","AP_L1_Control::bearing_error_cd","property wrapper",
"AP_L1_Control","data-provider","AP_L1_Control::target_bearing_cd","property wrapper",
"AP_L1_Control","data-provider","AP_L1_Control::turn_distance","property",
"AP_L1_Control","data-provider","AP_L1_Control::turn_distance","property",
"AP_L1_Control","data-provider","AP_L1_Control::loiter_radius","property",
"AP_L1_Control","data-provider","AP_L1_Control::reached_loiter_target","get",
"AP_L1_Control","data-provider","AP_L1_Control::_prevent_indecision","void-accessor command",
"AP_L1_Control","data-provider","AP_L1_Control::update_waypoint","command",
"AP_L1_Control","data-provider","AP_L1_Control::update_loiter","command",
"AP_L1_Control","data-provider","AP_L1_Control::update_heading_hold","command",
"AP_L1_Control","data-provider","AP_L1_Control::update_level_flight","command",
"RC_Channel_Blimp","degenerate","RC_Channel_Blimp::mode_switch_changed","controller stateless",
"RC_Channel_Blimp","degenerate","RC_Channel_Blimp::init_aux_function","wrapper stateless",
"RC_Channel_Blimp","degenerate","RC_Channel_Blimp::do_aux_function_change_mode","controller stateless",
"RC_Channel_Blimp","degenerate","RC_Channel_Blimp::do_aux_function","predicate non-void-command collaborator",
"AP_RangeFinder_TOFSenseF_I2C","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_TOFSenseF_I2C","unclassified","AP_RangeFinder_TOFSenseF_I2C::AP_RangeFinder_TOFSenseF_I2C","constructor",
"AP_RangeFinder_TOFSenseF_I2C","unclassified","AP_RangeFinder_TOFSenseF_I2C::detect","controller stateless",
"AP_RangeFinder_TOFSenseF_I2C","unclassified","AP_RangeFinder_TOFSenseF_I2C::init","predicate non-void-command",
"AP_RangeFinder_TOFSenseF_I2C","unclassified","AP_RangeFinder_TOFSenseF_I2C::start_reading","predicate non-void-command",
"AP_RangeFinder_TOFSenseF_I2C","unclassified","AP_RangeFinder_TOFSenseF_I2C::get_reading","predicate non-void-command",
"AP_RangeFinder_TOFSenseF_I2C","unclassified","AP_RangeFinder_TOFSenseF_I2C::timer","command",
"AP_RangeFinder_TOFSenseF_I2C","unclassified","AP_RangeFinder_TOFSenseF_I2C::update","command",
"UtilRPI","data-class small-class","UtilRPI::UtilRPI","constructor",
"UtilRPI","data-class small-class","UtilRPI::_get_board_type_using_peripheral_base","set",
"UtilRPI","data-class small-class","UtilRPI::detect_linux_board_type","get collaborator",
"UARTDevice","boundary","get_flow_control","get collaborator",
"UARTDevice","boundary","UARTDevice::UARTDevice","constructor",
"UARTDevice","boundary","UARTDevice::~UARTDevice","destructor",
"UARTDevice","boundary","UARTDevice::close","predicate set",
"UARTDevice","boundary","UARTDevice::open","predicate set",
"UARTDevice","boundary","UARTDevice::read","property wrapper",
"UARTDevice","boundary","UARTDevice::write","property wrapper",
"UARTDevice","boundary","UARTDevice::set_blocking","wrapper",
"UARTDevice","boundary","UARTDevice::_disable_crlf","wrapper",
"UARTDevice","boundary","UARTDevice::set_speed","wrapper",
"UARTDevice","boundary","UARTDevice::set_flow_control","set collaborator",
"UARTDevice","boundary","UARTDevice::set_parity","wrapper",
"RF_Benewake_TF03","degenerate","byte4","incidental",
"RF_Benewake_TF03","degenerate","byte5","incidental",
"RF_Benewake_TF03","degenerate","byte6","incidental",
"RF_Benewake_TF03","degenerate","byte7","incidental",
"PeriodicThread","unclassified","PeriodicThread","constructor",
"PeriodicThread","unclassified","PeriodicThread::set_rate","predicate set",
"PeriodicThread","unclassified","PeriodicThread::_run","predicate non-void-command",
"PeriodicThread","unclassified","PeriodicThread::stop","predicate set",
"AP_GPS_ERB","degenerate","highest_supported_status","collaborator incidental",
"AP_GPS_ERB","degenerate","supports_mavlink_gps_rtk_message","incidental",
"AP_GPS_ERB","degenerate","name","incidental",
"AP_GPS_ERB","degenerate","AP_GPS_ERB::read","predicate non-void-command",
"AP_GPS_ERB","degenerate","AP_GPS_ERB::_parse_gps","predicate non-void-command",
"AP_GPS_ERB","degenerate","AP_GPS_ERB::_detect","incidental",
"ModeManual","degenerate","number","collaborator incidental",
"ModeManual","degenerate","requires_armed_servos","incidental",
"ModeManual","degenerate","ModeManual::update","wrapper stateless",
"ModeManual","degenerate","ModeManual::update","controller stateless",
"ModeManual","degenerate","ModeManual::run","wrapper stateless",
"ModeManual","degenerate","ModeManual::use_throttle_limits","controller stateless",
"ModeManual","degenerate","ModeManual::init","controller stateless",
"ModeManual","degenerate","ModeManual::run","controller stateless",
"ModeManual","degenerate","ModeManual::run","wrapper stateless",
"ModeManual","degenerate","ModeManual::_exit","controller stateless",
"ModeManual","degenerate","ModeManual::update","controller stateless",
"SyncAdaptive","commander","SyncAdaptive","constructor",
"SyncAdaptive","commander","Invalidate","set",
"SyncAdaptive","commander","SyncAdaptive::Get","set",
"SyncAdaptive","commander","SyncAdaptive::Miss","command",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::init","set",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::set_freq","unclassified",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::get_freq","property",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::enable_ch","empty",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::disable_ch","empty",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::write","command",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::read","get property",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::read","void-accessor",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::cork","set",
"RCOutput_ZYNQ","unclassified","RCOutput_ZYNQ::push","command",
"AP_OpticalFlow","unclassified","enabled","predicate",
"AP_OpticalFlow","unclassified","healthy","predicate",
"AP_OpticalFlow","unclassified","quality","get",
"AP_OpticalFlow","unclassified","flowRate","get collaborator",
"AP_OpticalFlow","unclassified","bodyRate","get collaborator",
"AP_OpticalFlow","unclassified","last_update","get",
"AP_OpticalFlow","unclassified","get_height_override","get",
"AP_OpticalFlow","unclassified","get_pos_offset","get collaborator",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::AP_OpticalFlow","constructor",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::init","command",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::update","command",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::handle_msg","command collaborator",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::handle_msp","command collaborator",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::start_calibration","set",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::stop_calibration","command",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::update_state","command collaborator",
"AP_OpticalFlow","unclassified","AP_OpticalFlow::Log_Write_Optflow","controller",
"AP_BattMonitor_Generator_FuelLevel","unclassified","AP_BattMonitor_Generator_FuelLevel::has_current","predicate",
"AP_BattMonitor_Generator_FuelLevel","unclassified","AP_BattMonitor_Generator_FuelLevel::has_consumed_energy","controller stateless",
"AP_BattMonitor_Generator_FuelLevel","unclassified","AP_BattMonitor_Generator_FuelLevel::init","command",
"AP_BattMonitor_Generator_FuelLevel","unclassified","AP_BattMonitor_Generator_FuelLevel::read","command collaborator",
"RCInput_UART","commander small-class","RCInput_UART::RCInput_UART","constructor",
"RCInput_UART","commander small-class","RCInput_UART::~RCInput_UART","destructor",
"RCInput_UART","commander small-class","RCInput_UART::init","command collaborator",
"RCInput_UART","commander small-class","RCInput_UART::_timer_tick","command",
"RCInput_RPI","commander","RCInput_RPI::set_physical_addresses","command",
"RCInput_RPI","commander","RCInput_RPI::map_peripheral","wrapper stateless",
"RCInput_RPI","commander","RCInput_RPI::init_dma_cb","incidental",
"RCInput_RPI","commander","RCInput_RPI::stop_dma","set",
"RCInput_RPI","commander","RCInput_RPI::termination_handler","command",
"RCInput_RPI","commander","RCInput_RPI::init_ctrl_data","command",
"RCInput_RPI","commander","RCInput_RPI::init_PCM","command",
"RCInput_RPI","commander","RCInput_RPI::init_DMA","command",
"RCInput_RPI","commander","RCInput_RPI::set_sigaction","wrapper stateless",
"RCInput_RPI","commander","RCInput_RPI::RCInput_RPI","constructor",
"RCInput_RPI","commander","RCInput_RPI::~RCInput_RPI","destructor",
"RCInput_RPI","commander","RCInput_RPI::teardown","command",
"RCInput_RPI","commander","RCInput_RPI::init_registers","command",
"RCInput_RPI","commander","RCInput_RPI::init","command",
"RCInput_RPI","commander","RCInput_RPI::_timer_tick","command",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence","constructor",
"MissionItemProtocol_Fence","boundary","mission_type","collaborator incidental",
"MissionItemProtocol_Fence","boundary","next_item_ap_message_id","collaborator incidental",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::get_item_as_mission_item","controller stateless",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::get_item","property non-void-command collaborator",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::item_count","get property",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::convert_MISSION_ITEM_INT_to_AC_PolyFenceItem","collaborator incidental",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::replace_item","property set collaborator",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::append_item","property non-void-command collaborator",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::free_upload_resources","command",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::complete","property non-void-command collaborator",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::timeout","command",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::max_items","property",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::truncate","empty",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::clear_all_items","predicate non-void-command",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::allocate_receive_resources","property non-void-command collaborator",
"MissionItemProtocol_Fence","boundary","MissionItemProtocol_Fence::allocate_update_resources","property non-void-command collaborator",
"Memory_table","data-provider","Memory_table::Memory_table","constructor",
"Memory_table","data-provider","Memory_table::Memory_table","constructor",
"Memory_table","data-provider","Memory_table::~Memory_table","destructor",
"Memory_table","data-provider","Memory_table::get_page","property collaborator",
"Memory_table","data-provider","Memory_table::get_virt_addr","property collaborator",
"Memory_table","data-provider","Memory_table::get_offset","property",
"Memory_table","data-provider","Memory_table::bytes_available","property",
"Memory_table","data-provider","Memory_table::get_page_count","get",
"GPIO_RPI","commander","GPIO_RPI::GPIO_RPI","constructor",
"GPIO_RPI","commander","GPIO_RPI::init","collaborator",
"GPIO_RPI","commander","GPIO_RPI::pinMode","command",
"GPIO_RPI","commander","GPIO_RPI::pinMode","command",
"GPIO_RPI","commander","GPIO_RPI::read","property non-void-command",
"GPIO_RPI","commander","GPIO_RPI::write","command",
"GPIO_RPI","commander","GPIO_RPI::toggle","command",
"GPIO_RPI","commander","GPIO_RPI::channel","wrapper stateless",
"GPIO_RPI","commander","GPIO_RPI::usb_connected","incidental",
"RCInput_PRU","commander small-class","RCInput_PRU::init","command",
"RCInput_PRU","commander small-class","RCInput_PRU::_timer_tick","command",
"AP_ICEngine","unclassified","get_state","property collaborator",
"AP_ICEngine","unclassified","option_set","predicate wrapper",
"AP_ICEngine","unclassified","AP_ICEngine::AP_ICEngine","constructor",
"AP_ICEngine","unclassified","AP_ICEngine::update","command",
"AP_ICEngine","unclassified","AP_ICEngine::throttle_override","predicate non-void-command",
"AP_ICEngine","unclassified","AP_ICEngine::engine_control","predicate non-void-command",
"AP_ICEngine","unclassified","AP_ICEngine::update_idle_governor","void-accessor set",
"AP_ICEngine","unclassified","AP_ICEngine::set_ignition","controller",
"AP_ICEngine","unclassified","AP_ICEngine::set_starter","controller",
"AP_ICEngine","unclassified","AP_ICEngine::allow_throttle_while_disarmed","predicate",
"AP_ICEngine","unclassified","AP_ICEngine::get_legacy_ignition_relay_index","predicate wrapper",
"RCInput","unclassified","get_rssi","get",
"RCInput","unclassified","protocol","incidental",
"RCInput","unclassified","_timer_tick","empty",
"RCInput","unclassified","RCInput::init","command",
"RCInput","unclassified","RCInput::pulse_input_enable","controller stateless",
"RCInput","unclassified","RCInput::new_input","wrapper stateless",
"RCInput","unclassified","RCInput::num_channels","get property",
"RCInput","unclassified","RCInput::read","property wrapper",
"RCInput","unclassified","RCInput::read","wrapper stateless",
"RCInput","unclassified","RCInput::_timer_tick","command",
"RCInput","unclassified","RCInput::rc_bind","controller stateless",
"RCInput","unclassified","RCInput::init","command",
"RCInput","unclassified","RCInput::new_input","wrapper stateless",
"RCInput","unclassified","RCInput::num_channels","get property",
"RCInput","unclassified","RCInput::read","property wrapper",
"RCInput","unclassified","RCInput::read","wrapper stateless",
"RCInput","unclassified","RCInput::_timer_tick","command",
"RCInput","unclassified","RCInput::RCInput","constructor",
"RCInput","unclassified","RCInput::init","empty",
"RCInput","unclassified","RCInput::new_input","incidental",
"RCInput","unclassified","RCInput::num_channels","incidental",
"RCInput","unclassified","RCInput::read","incidental",
"RCInput","unclassified","RCInput::read","incidental",
"RCInput","unclassified","RCInput::RCInput","constructor",
"RCInput","unclassified","RCInput::init","empty",
"RCInput","unclassified","RCInput::new_input","predicate non-void-command",
"RCInput","unclassified","RCInput::num_channels","get",
"RCInput","unclassified","RCInput::set_num_channels","set",
"RCInput","unclassified","RCInput::read","get property",
"RCInput","unclassified","RCInput::read","property non-void-command",
"RCInput","unclassified","RCInput::_process_ppmsum_pulse","command",
"RCInput","unclassified","RCInput::_process_sbus_pulse","command",
"RCInput","unclassified","RCInput::_process_dsm_pulse","command",
"RCInput","unclassified","RCInput::_process_pwm_pulse","command",
"RCInput","unclassified","RCInput::_process_rc_pulse","command",
"RCInput","unclassified","RCInput::_update_periods","command",
"RCInput","unclassified","RCInput::init","command",
"RCInput","unclassified","RCInput::new_input","predicate non-void-command",
"RCInput","unclassified","RCInput::read","property non-void-command",
"RCInput","unclassified","RCInput::read","property non-void-command",
"RCInput","unclassified","RCInput::num_channels","property non-void-command",
"TimerPollable","unclassified","~TimerPollable","destructor",
"TimerPollable","unclassified","TimerPollable::on_can_read","command",
"TimerPollable","unclassified","TimerPollable::setup_timer","predicate set",
"TimerPollable","unclassified","TimerPollable::adjust_timer","predicate wrapper",
"PWM_Sysfs","boundary degenerate","PWM_Sysfs::_generate_export_path","wrapper stateless",
"PWM_Sysfs","boundary degenerate","PWM_Sysfs::_generate_polarity_path","wrapper stateless",
"PWM_Sysfs","boundary degenerate","PWM_Sysfs::_generate_enable_path","wrapper stateless",
"PWM_Sysfs","boundary degenerate","PWM_Sysfs::_generate_duty_path","wrapper stateless",
"PWM_Sysfs","boundary degenerate","PWM_Sysfs::_generate_period_path","wrapper stateless",
"PWM_Sysfs","boundary degenerate","PWM_Sysfs::PWM_Sysfs","constructor",
"Led_Sysfs","unclassified","Led_Sysfs::Led_Sysfs","constructor",
"Led_Sysfs","unclassified","Led_Sysfs::~Led_Sysfs","destructor",
"Led_Sysfs","unclassified","Led_Sysfs::init","predicate set",
"Led_Sysfs","unclassified","Led_Sysfs::set_brightness","predicate wrapper",
"Led_Sysfs","unclassified","Led_Sysfs::Led_Sysfs","constructor",
"Led_Sysfs","unclassified","Led_Sysfs::init","controller stateless",
"Led_Sysfs","unclassified","Led_Sysfs::hw_set_rgb","controller stateless",
"RCInput_SoloLink","commander","RCInput_SoloLink::RCInput_SoloLink","constructor",
"RCInput_SoloLink","commander","RCInput_SoloLink::init","command",
"RCInput_SoloLink","commander","RCInput_SoloLink::_check_hdr","predicate non-void-command collaborator",
"RCInput_SoloLink","commander","RCInput_SoloLink::_timer_tick","command",
"HeatPwm","commander small-class","HeatPwm::HeatPwm","constructor",
"HeatPwm","commander small-class","HeatPwm::set_imu_temp","command",
"HeatPwm","commander small-class","HeatPwm::set_imu_target_temp","set",
"Heat","degenerate small-class","set_imu_temp","empty",
"Heat","degenerate small-class","set_imu_target_temp","empty",
"AP_AHRS_External","boundary degenerate","reset_gyro_drift","empty",
"AP_AHRS_External","boundary degenerate","reset","empty",
"AP_AHRS_External","boundary degenerate","wind_estimate","collaborator incidental",
"AP_AHRS_External","boundary degenerate","use_compass","incidental",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::initialised","predicate",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::update","command",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::healthy","predicate",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_results","controller stateless",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_quaternion","predicate collaborator",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::groundspeed_vector","wrapper stateless",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_relative_position_NED_origin","controller stateless",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_relative_position_NE_origin","controller stateless",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_relative_position_D_origin","controller stateless",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_velocity_NED","predicate collaborator",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_vert_pos_rate_D","wrapper stateless",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::pre_arm_check","wrapper stateless",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_filter_status","predicate collaborator",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::send_ekf_status_report","wrapper stateless",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_origin","predicate collaborator",
"AP_AHRS_External","boundary degenerate","AP_AHRS_External::get_control_limits","incidental",
"HAL_Linux","commander boundary","HAL_Linux::HAL_Linux","constructor",
"HAL_Linux","commander boundary","HAL_Linux::run","collaborator",
"HAL_Linux","commander boundary","HAL_Linux::setup_signal_handlers","wrapper stateless",
"HAL_Linux","commander boundary","HAL_Linux::exit_signal_handler","set",
"UDPDevice","unclassified","UDPDevice::UDPDevice","constructor",
"UDPDevice","unclassified","UDPDevice::~UDPDevice","destructor",
"UDPDevice","unclassified","UDPDevice::write","property non-void-command collaborator",
"UDPDevice","unclassified","UDPDevice::read","property collaborator",
"UDPDevice","unclassified","UDPDevice::open","get predicate",
"UDPDevice","unclassified","UDPDevice::close","incidental",
"UDPDevice","unclassified","UDPDevice::set_blocking","command",
"UDPDevice","unclassified","UDPDevice::set_speed","empty",
"I2CRegisters_8Bit","unclassified","get_register","get",
"I2CRegisters_8Bit","unclassified","rdwr_store_register_value","set",
"I2CRegisters_8Bit","unclassified","SITL::I2CRegisters_8Bit::set_register","set",
"I2CRegisters_8Bit","unclassified","SITL::I2CRegisters_8Bit::set_register","set",
"I2CRegisters_8Bit","unclassified","SITL::I2CRegisters_8Bit::rdwr","property non-void-command collaborator",
"I2CRegisters_8Bit","unclassified","SITL::I2CRegisters_8Bit::assert_register_value","wrapper",
"AP_ExternalAHRS_backend","data-provider","get_port","incidental",
"AP_ExternalAHRS_backend","data-provider","get_filter_status","empty",
"AP_ExternalAHRS_backend","data-provider","send_status_report","empty",
"AP_ExternalAHRS_backend","data-provider","set_default_sensors","command",
"AP_ExternalAHRS_backend","data-provider","gnss_is_disabled","get",
"AP_ExternalAHRS_backend","data-provider","AP_ExternalAHRS_backend::AP_ExternalAHRS_backend","constructor",
"AP_ExternalAHRS_backend","data-provider","AP_ExternalAHRS_backend::get_rate","property",
"AP_ExternalAHRS_backend","data-provider","AP_ExternalAHRS_backend::option_is_set","predicate collaborator",
"AP_ExternalAHRS_backend","data-provider","AP_ExternalAHRS_backend::in_fly_forward","wrapper stateless",
"GPIO_Navigator","unclassified","GPIO_Navigator::read","property non-void-command",
"GPIO_Navigator","unclassified","GPIO_Navigator::write","command",
"GPIO_Navigator","unclassified","GPIO_Navigator::pinMode","command",
"GPIO_Navigator","unclassified","GPIO_Navigator::pinMode","command",
"GPIO_Navigator","unclassified","GPIO_Navigator::pinAllowed","predicate collaborator",
"GPIO_BBB","commander degenerate","GPIO_BBB::GPIO_BBB","constructor",
"GPIO_BBB","commander degenerate","GPIO_BBB::init","wrapper stateless",
"GPIO_BBB","commander degenerate","GPIO_BBB::pinMode","incidental",
"GPIO_BBB","commander degenerate","GPIO_BBB::read","incidental",
"GPIO_BBB","commander degenerate","GPIO_BBB::write","incidental",
"GPIO_BBB","commander degenerate","GPIO_BBB::toggle","command",
"GPIO_BBB","commander degenerate","GPIO_BBB::channel","wrapper stateless",
"GPIO_BBB","commander degenerate","GPIO_BBB::usb_connected","incidental",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::CameraSensor_Mt9v117","constructor",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_read_reg8","property non-void-command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_write_reg8","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_read_reg16","property non-void-command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_write_reg16","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_write_reg32","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_var2reg","incidental",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_read_var16","property non-void-command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_write_var16","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_read_var8","property non-void-command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_write_var8","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_write_var32","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_config_change","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_itu656_enable","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_soft_reset","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_apply_patch","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_set_basic_settings","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_configure_sensor_qvga","command",
"CameraSensor_Mt9v117","commander","CameraSensor_Mt9v117::_init_sensor","command",
"CameraSensor","data-provider boundary small-class","CameraSensor","constructor",
"CameraSensor","data-provider boundary small-class","CameraSensor::set_format","predicate wrapper",
"AnalogIn_Navio2","unclassified","AnalogIn_Navio2::AnalogIn_Navio2","constructor",
"AnalogIn_Navio2","unclassified","AnalogIn_Navio2::board_voltage","property non-void-command",
"AnalogIn_Navio2","unclassified","AnalogIn_Navio2::servorail_voltage","property non-void-command",
"AnalogIn_Navio2","unclassified","AnalogIn_Navio2::channel","get property set collaborator",
"AnalogIn_Navio2","unclassified","AnalogIn_Navio2::init","command",
"AnalogSource_Navio2","unclassified","AnalogSource_Navio2::set_channel","set",
"AnalogSource_Navio2","unclassified","AnalogSource_Navio2::AnalogSource_Navio2","constructor",
"AnalogSource_Navio2","unclassified","AnalogSource_Navio2::set_pin","predicate set",
"AnalogSource_Navio2","unclassified","AnalogSource_Navio2::read_average","property non-void-command",
"AnalogSource_Navio2","unclassified","AnalogSource_Navio2::read_latest","property non-void-command",
"AnalogSource_Navio2","unclassified","AnalogSource_Navio2::voltage_average","get property set",
"AnalogSource_Navio2","unclassified","AnalogSource_Navio2::voltage_latest","get non-void-command",
"AnalogSource_Navio2","unclassified","AnalogSource_Navio2::voltage_average_ratiometric","property non-void-command",
"WSPIBus","empty","WSPIBus","constructor",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::AP_InertialSensor_BMI160","constructor",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::probe","controller stateless",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::probe","controller stateless",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::start","command",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::update","predicate wrapper",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_check_err_reg","command",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_configure_accel","predicate non-void-command",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_configure_gyro","predicate non-void-command",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_configure_int1_pin","predicate",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_configure_fifo","predicate non-void-command",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_read_fifo","command collaborator",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_poll_data","command",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_hardware_init","predicate non-void-command",
"AP_InertialSensor_BMI160","unclassified","AP_InertialSensor_BMI160::_init","predicate non-void-command",
"AP_MotorsHeli_RSC","unclassified","set_control_mode","set collaborator",
"AP_MotorsHeli_RSC","unclassified","reset_rsc_mode_param","command",
"AP_MotorsHeli_RSC","unclassified","get_control_mode","get",
"AP_MotorsHeli_RSC","unclassified","set_critical_speed","command",
"AP_MotorsHeli_RSC","unclassified","get_desired_speed","get",
"AP_MotorsHeli_RSC","unclassified","set_desired_speed","set",
"AP_MotorsHeli_RSC","unclassified","set_governor_output","set",
"AP_MotorsHeli_RSC","unclassified","get_governor_output","get",
"AP_MotorsHeli_RSC","unclassified","get_control_output","get",
"AP_MotorsHeli_RSC","unclassified","set_idle_output","command",
"AP_MotorsHeli_RSC","unclassified","set_ramp_time","command",
"AP_MotorsHeli_RSC","unclassified","set_runup_time","command",
"AP_MotorsHeli_RSC","unclassified","is_runup_complete","get",
"AP_MotorsHeli_RSC","unclassified","is_spooldown_complete","get",
"AP_MotorsHeli_RSC","unclassified","set_collective","set",
"AP_MotorsHeli_RSC","unclassified","use_bailout_ramp_time","set",
"AP_MotorsHeli_RSC","unclassified","set_autorotation_flag","set",
"AP_MotorsHeli_RSC","unclassified","set_arot_idle_output","command",
"AP_MotorsHeli_RSC","unclassified","set_rsc_arot_man_enable","command",
"AP_MotorsHeli_RSC","unclassified","set_rsc_arot_engage_time","command",
"AP_MotorsHeli_RSC","unclassified","set_turbine_start","set",
"AP_MotorsHeli_RSC","unclassified","rotor_speed_above_critical","predicate",
"AP_MotorsHeli_RSC","unclassified","get_critical_speed","property",
"AP_MotorsHeli_RSC","unclassified","get_idle_output","property",
"AP_MotorsHeli_RSC","unclassified","get_governor_torque","property",
"AP_MotorsHeli_RSC","unclassified","get_governor_compensator","property",
"AP_MotorsHeli_RSC","unclassified","get_arot_idle_output","property",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::init_servo","wrapper",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::set_throttle_curve","wrapper",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::output","command collaborator",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::update_rotor_ramp","command",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::update_rotor_runup","command",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::get_rotor_speed","get",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::write_rsc","wrapper",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::get_output_mask","property wrapper",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::calculate_throttlecurve","property wrapper",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::autothrottle_run","command",
"AP_MotorsHeli_RSC","unclassified","AP_MotorsHeli_RSC::governor_reset","command",
"Empty::Util","boundary degenerate small-class","run_debug_shell","collaborator incidental",
"Empty::RCOutput","degenerate small-class","cork","empty",
"Empty::RCOutput","degenerate small-class","push","empty",
"Empty::RCInput","degenerate small-class","protocol","incidental",
"AP_Param","boundary","convert_parameter_width","predicate non-void-command",
"AP_Param","boundary","convert_centi_parameter","predicate non-void-command collaborator",
"AP_Param","boundary","convert_bitmask_parameter_width","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::setup_object_defaults","empty",
"AP_Param","boundary","AP_Param::eeprom_write_check","command",
"AP_Param","boundary","AP_Param::write_sentinal","collaborator",
"AP_Param","boundary","AP_Param::erase_all","command collaborator",
"AP_Param","boundary","AP_Param::group_id","incidental",
"AP_Param","boundary","AP_Param::check_frame_type","predicate",
"AP_Param","boundary","AP_Param::check_group_info","command",
"AP_Param","boundary","AP_Param::duplicate_key","predicate wrapper",
"AP_Param","boundary","AP_Param::get_group_info","collaborator incidental",
"AP_Param","boundary","AP_Param::get_group_info","collaborator incidental",
"AP_Param","boundary","AP_Param::check_var_info","command",
"AP_Param","boundary","AP_Param::setup","predicate non-void-command",
"AP_Param","boundary","AP_Param::initialised","predicate",
"AP_Param","boundary","AP_Param::adjust_group_offset","predicate non-void-command",
"AP_Param","boundary","AP_Param::get_base","incidental",
"AP_Param","boundary","AP_Param::find_by_header_group","property non-void-command collaborator",
"AP_Param","boundary","AP_Param::find_by_header","property non-void-command collaborator",
"AP_Param","boundary","AP_Param::find_var_info_group","property collaborator",
"AP_Param","boundary","AP_Param::find_var_info","property collaborator",
"AP_Param","boundary","AP_Param::find_var_info_token","property collaborator",
"AP_Param","boundary","AP_Param::type_size","wrapper stateless",
"AP_Param","boundary","AP_Param::get_key","collaborator incidental",
"AP_Param","boundary","AP_Param::set_key","incidental",
"AP_Param","boundary","AP_Param::is_sentinal","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::scan","predicate non-void-command",
"AP_Param","boundary","AP_Param::add_vector3f_suffix","wrapper stateless",
"AP_Param","boundary","AP_Param::copy_name_token","void-accessor collaborator",
"AP_Param","boundary","AP_Param::copy_name_info","unclassified",
"AP_Param","boundary","AP_Param::find_group","property non-void-command collaborator",
"AP_Param","boundary","AP_Param::find","property non-void-command",
"AP_Param","boundary","AP_Param::find_by_index","wrapper stateless",
"AP_Param","boundary","AP_Param::find_by_name","controller stateless",
"AP_Param","boundary","AP_Param::find_key_by_pointer_group","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::find_key_by_pointer","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::find_top_level_key_by_pointer","predicate wrapper",
"AP_Param","boundary","AP_Param::get_param_by_index","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::find_object","property non-void-command",
"AP_Param","boundary","AP_Param::notify","unclassified",
"AP_Param","boundary","AP_Param::save_sync","command",
"AP_Param","boundary","AP_Param::save","command collaborator",
"AP_Param","boundary","AP_Param::save_io_handler","command collaborator",
"AP_Param","boundary","AP_Param::flush","command",
"AP_Param","boundary","AP_Param::load","predicate non-void-command",
"AP_Param","boundary","AP_Param::configured_in_storage","predicate",
"AP_Param","boundary","AP_Param::configured_in_defaults_file","predicate",
"AP_Param","boundary","AP_Param::configured","predicate",
"AP_Param","boundary","AP_Param::is_read_only","predicate",
"AP_Param","boundary","AP_Param::set_value","wrapper stateless",
"AP_Param","boundary","AP_Param::setup_object_defaults","command collaborator",
"AP_Param","boundary","AP_Param::set_object_value","predicate non-void-command",
"AP_Param","boundary","AP_Param::setup_sketch_defaults","command",
"AP_Param","boundary","AP_Param::load_all","predicate non-void-command",
"AP_Param","boundary","AP_Param::reload_defaults_file","command",
"AP_Param","boundary","AP_Param::load_defaults_file_from_filesystem","command",
"AP_Param","boundary","AP_Param::load_defaults_file_from_romfs","command",
"AP_Param","boundary","AP_Param::load_object_from_eeprom","command collaborator",
"AP_Param","boundary","AP_Param::first","property non-void-command",
"AP_Param","boundary","AP_Param::next_group","property non-void-command",
"AP_Param","boundary","AP_Param::next","property non-void-command",
"AP_Param","boundary","AP_Param::next_scalar","property non-void-command collaborator",
"AP_Param","boundary","AP_Param::cast_to_float","property collaborator",
"AP_Param","boundary","AP_Param::find_old_parameter","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::convert_old_parameter","command",
"AP_Param","boundary","AP_Param::convert_old_parameters","command",
"AP_Param","boundary","AP_Param::convert_old_parameters_scaled","command",
"AP_Param","boundary","AP_Param::convert_class","command",
"AP_Param","boundary","AP_Param::convert_g2_objects","command collaborator",
"AP_Param","boundary","AP_Param::convert_toplevel_objects","command collaborator",
"AP_Param","boundary","AP_Param::_convert_parameter_width","predicate non-void-command",
"AP_Param","boundary","AP_Param::set_float","wrapper stateless",
"AP_Param","boundary","AP_Param::parse_param_line","wrapper stateless",
"AP_Param","boundary","AP_Param::count_defaults_in_file","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::read_param_defaults_file","predicate non-void-command",
"AP_Param","boundary","AP_Param::load_defaults_file","predicate non-void-command",
"AP_Param","boundary","AP_Param::count_param_defaults","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::load_param_defaults","void-accessor command",
"AP_Param","boundary","AP_Param::load_embedded_param_defaults","command",
"AP_Param","boundary","AP_Param::get_default_value","get property collaborator",
"AP_Param","boundary","AP_Param::get_default_value","get property collaborator",
"AP_Param","boundary","AP_Param::send_parameter","unclassified",
"AP_Param","boundary","AP_Param::count_parameters","get non-void-command",
"AP_Param","boundary","AP_Param::invalidate_count","set",
"AP_Param","boundary","AP_Param::set_default_by_name","wrapper stateless",
"AP_Param","boundary","AP_Param::set_defaults_from_table","wrapper stateless",
"AP_Param","boundary","AP_Param::set_by_name","wrapper stateless",
"AP_Param","boundary","AP_Param::get","wrapper stateless",
"AP_Param","boundary","AP_Param::set_and_save_by_name","wrapper stateless",
"AP_Param","boundary","AP_Param::set_and_save_by_name_ifchanged","wrapper stateless",
"AP_Param","boundary","AP_Param::check_default","void-accessor collaborator",
"AP_Param","boundary","AP_Param::add_default","set collaborator",
"AP_Param","boundary","AP_Param::show","wrapper stateless",
"AP_Param","boundary","AP_Param::show","command collaborator",
"AP_Param","boundary","AP_Param::show_all","command collaborator",
"AP_Param","boundary","AP_Param::add_table","predicate non-void-command collaborator",
"AP_Param","boundary","AP_Param::load_int32","predicate non-void-command",
"AP_Param","boundary","AP_Param::add_param","predicate non-void-command collaborator",
"AP_Param","boundary","type_size","wrapper stateless",
"Empty::DSP","degenerate","fft_init","collaborator incidental",
"Empty::DSP","degenerate","fft_start","empty",
"Empty::DSP","degenerate","fft_analyse","incidental",
"Empty::DSP","degenerate","vector_max_float","empty",
"Empty::DSP","degenerate","vector_scale_float","empty",
"Empty::DSP","degenerate","vector_mean_float","incidental",
"Empty::DSP","degenerate","vector_add_float","empty",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::AP_InertialSensor_Invensensev2","constructor",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::~AP_InertialSensor_Invensensev2","destructor",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::probe","controller stateless",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::probe","controller stateless",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_init","predicate non-void-command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_fifo_reset","command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_has_auxiliary_bus","predicate non-void-command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::start","command collaborator",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::get_output_banner","predicate wrapper",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::update","predicate wrapper",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::accumulate","empty",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::get_auxiliary_bus","get non-void-command collaborator",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_data_ready","predicate non-void-command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_poll_data","command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_accumulate","predicate non-void-command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_accumulate_sensor_rate_sampling","predicate non-void-command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_read_fifo","command collaborator",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_check_raw_temp","predicate set",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_block_read","predicate non-void-command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_register_read","property non-void-command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_register_write","command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_select_bank","predicate set",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_set_filter_and_scaling","command",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_check_whoami","predicate set",
"AP_InertialSensor_Invensensev2","unclassified","AP_InertialSensor_Invensensev2::_hardware_init","predicate non-void-command",
"LR_MsgHandler","boundary degenerate small-class","process_message","wrapper stateless",
"LR_MsgHandler","boundary degenerate small-class","LR_MsgHandler::LR_MsgHandler","constructor",
"SocketExample","entity data-provider boundary","SocketExample::SocketExample","constructor",
"SocketExample","entity data-provider boundary","SocketExample::SocketExample","constructor",
"SocketExample","entity data-provider boundary","SocketExample::~SocketExample","destructor",
"SocketExample","entity data-provider boundary","SocketExample::make_sockaddr","wrapper stateless",
"SocketExample","entity data-provider boundary","SocketExample::connect","predicate non-void-command collaborator",
"SocketExample","entity data-provider boundary","SocketExample::bind","predicate non-void-command collaborator",
"SocketExample","entity data-provider boundary","SocketExample::reuseaddress","predicate wrapper",
"SocketExample","entity data-provider boundary","SocketExample::set_blocking","predicate wrapper",
"SocketExample","entity data-provider boundary","SocketExample::set_cloexec","predicate wrapper",
"SocketExample","entity data-provider boundary","SocketExample::send","property wrapper",
"SocketExample","entity data-provider boundary","SocketExample::sendto","property non-void-command collaborator",
"SocketExample","entity data-provider boundary","SocketExample::recv","property non-void-command collaborator",
"SocketExample","entity data-provider boundary","SocketExample::last_recv_address","wrapper stateless",
"SocketExample","entity data-provider boundary","SocketExample::set_broadcast","wrapper",
"SocketExample","entity data-provider boundary","SocketExample::pollin","predicate wrapper",
"SocketExample","entity data-provider boundary","SocketExample::pollout","predicate wrapper",
"SocketExample","entity data-provider boundary","SocketExample::listen","predicate wrapper",
"SocketExample","entity data-provider boundary","SocketExample::accept","property non-void-command factory",
"SoftSigReaderRMT","boundary lazy-class degenerate","init","empty",
"SoftSigReaderRMT","boundary lazy-class degenerate","SoftSigReaderRMT::init","wrapper",
"SoftSigReaderRMT","boundary lazy-class degenerate","SoftSigReaderRMT::read","predicate set",
"SoftSigReaderRMT","boundary lazy-class degenerate","init","wrapper stateless",
"SoftSigReaderRMT","boundary lazy-class degenerate","init","wrapper stateless",
"RCInput_ZYNQ","commander small-class","RCInput_ZYNQ::init","command",
"RCInput_ZYNQ","commander small-class","RCInput_ZYNQ::_timer_tick","set",
"AP_Mount_Params","empty","AP_Mount_Params::AP_Mount_Params","constructor",
"ESP32::WiFiDriver","degenerate small-class","bw_in_bytes_per_second","incidental",
"ESP32::Scheduler","commander boundary data-class small-class","set_callbacks","set collaborator",
"BufferPrinter","degenerate","BufferPrinter","constructor",
"BufferPrinter","degenerate","write","incidental",
"BufferPrinter","degenerate","write","incidental",
"BufferPrinter","degenerate","available","incidental",
"BufferPrinter","degenerate","read","incidental",
"BufferPrinter","degenerate","txspace","incidental",
"BufferPrinter","degenerate","discard_input","incidental",
"Replay","commander boundary","Replay","copy-constructor",
"Replay","commander boundary","Replay::usage","wrapper stateless",
"Replay","commander boundary","Replay::_parse_command_line","void-accessor collaborator",
"Replay","commander boundary","Replay::setup","command",
"Replay","commander boundary","Replay::loop","command",
"Replay","commander boundary","Replay::set_user_parameters","command",
"Replay","commander boundary","Replay::parse_param_line","wrapper stateless",
"Replay","commander boundary","Replay::load_param_file","command collaborator",
"AP_MotorsHeli_Swash","unclassified","get_swash_type","get collaborator",
"AP_MotorsHeli_Swash","unclassified","get_phase_angle","get",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::AP_MotorsHeli_Swash","constructor",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::configure","command",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::calculate_roll_pitch_collective_factors","command",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::add_servo_angle","command",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::add_servo_raw","command collaborator",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::calculate","command",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::get_linear_servo_output","wrapper stateless",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::output","command",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::rc_write","wrapper stateless",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::get_output_mask","property",
"AP_MotorsHeli_Swash","unclassified","AP_MotorsHeli_Swash::write_log","wrapper",
"ESP32::RCInput","data-provider data-class small-class","protocol","get",
"AnalogSource","unclassified","set_stop_pin","empty",
"AnalogSource","unclassified","set_settle_time","empty",
"AnalogSource","unclassified","AnalogSource::AnalogSource","constructor",
"AnalogSource","unclassified","AnalogSource::read_average","get non-void-command",
"AnalogSource","unclassified","AnalogSource::read_latest","get",
"AnalogSource","unclassified","AnalogSource::_pin_scaler","property",
"AnalogSource","unclassified","AnalogSource::voltage_average","property non-void-command",
"AnalogSource","unclassified","AnalogSource::voltage_average_ratiometric","property non-void-command",
"AnalogSource","unclassified","AnalogSource::voltage_latest","property non-void-command",
"AnalogSource","unclassified","AnalogSource::set_pin","predicate non-void-command",
"AnalogSource","unclassified","AnalogSource::_add_value","command",
"AnalogSource","unclassified","AnalogSource::AnalogSource","constructor",
"AnalogSource","unclassified","AnalogSource::read_average","get property non-void-command",
"AnalogSource","unclassified","AnalogSource::read_latest","get",
"AnalogSource","unclassified","AnalogSource::voltage_average","property non-void-command",
"AnalogSource","unclassified","AnalogSource::voltage_latest","property non-void-command",
"AnalogSource","unclassified","AnalogSource::voltage_average_ratiometric","property non-void-command",
"AnalogSource","unclassified","AnalogSource::set_pin","predicate non-void-command collaborator",
"AnalogSource","unclassified","AnalogSource::_add_value","command",
"AnalogSource","unclassified","AnalogSource::AnalogSource","constructor",
"AnalogSource","unclassified","AnalogSource::read_average","incidental",
"AnalogSource","unclassified","AnalogSource::voltage_average","incidental",
"AnalogSource","unclassified","AnalogSource::voltage_latest","incidental",
"AnalogSource","unclassified","AnalogSource::read_latest","incidental",
"AnalogSource","unclassified","AnalogSource::set_pin","incidental",
"RCInput_RCProtocol","commander","RCInput_RCProtocol::open_sbus","wrapper stateless",
"RCInput_RCProtocol","commander","RCInput_RCProtocol::open_115200","wrapper stateless",
"RCInput_RCProtocol","commander","RCInput_RCProtocol::RCInput_RCProtocol","constructor",
"RCInput_RCProtocol","commander","RCInput_RCProtocol::init","command",
"RCInput_RCProtocol","commander","RCInput_RCProtocol::_timer_tick","command",
"ChibiOS::Shared_DMA","data-provider data-class small-class","has_contention","get",
"ChibiOS::Shared_DMA","data-provider data-class small-class","is_locked","get",
"ModeSport","degenerate","mode_number","collaborator incidental",
"ModeSport","degenerate","requires_GPS","incidental",
"ModeSport","degenerate","has_manual_throttle","incidental",
"ModeSport","degenerate","allows_arming","collaborator incidental",
"ModeSport","degenerate","is_autopilot","incidental",
"ModeSport","degenerate","has_user_takeoff","incidental",
"ModeSport","degenerate","name","incidental",
"ModeSport","degenerate","name4","incidental",
"ModeSport","degenerate","ModeSport::init","controller stateless",
"ModeSport","degenerate","ModeSport::run","controller stateless",
"AP_TemperatureSensor_TSYS01","unclassified","update","empty",
"AP_TemperatureSensor_TSYS01","unclassified","AP_TemperatureSensor_TSYS01::init","command",
"AP_TemperatureSensor_TSYS01","unclassified","AP_TemperatureSensor_TSYS01::read_prom","predicate set",
"AP_TemperatureSensor_TSYS01","unclassified","AP_TemperatureSensor_TSYS01::read_prom_word","property",
"AP_TemperatureSensor_TSYS01","unclassified","AP_TemperatureSensor_TSYS01::read_adc","property",
"AP_TemperatureSensor_TSYS01","unclassified","AP_TemperatureSensor_TSYS01::_timer","command",
"AP_TemperatureSensor_TSYS01","unclassified","AP_TemperatureSensor_TSYS01::start_next_sample","command",
"AP_TemperatureSensor_TSYS01","unclassified","AP_TemperatureSensor_TSYS01::calculate","property wrapper",
"ChibiOS::Util","degenerate small-class","run_debug_shell","collaborator incidental",
"ChibiOS::Util","degenerate small-class","get_custom_defaults_file","incidental",
"ModeGuidedNoGPS","degenerate","mode_number","collaborator incidental",
"ModeGuidedNoGPS","degenerate","requires_GPS","incidental",
"ModeGuidedNoGPS","degenerate","has_manual_throttle","incidental",
"ModeGuidedNoGPS","degenerate","is_autopilot","incidental",
"ModeGuidedNoGPS","degenerate","name","incidental",
"ModeGuidedNoGPS","degenerate","name4","incidental",
"ModeGuidedNoGPS","degenerate","ModeGuidedNoGPS::init","wrapper stateless",
"ModeGuidedNoGPS","degenerate","ModeGuidedNoGPS::run","wrapper stateless",
"ChibiOS::UARTDriver","data-provider","get_flow_control","get collaborator",
"ChibiOS::UARTDriver","data-provider","bw_in_bytes_per_second","property",
"ChibiOS::UARTDriver","data-provider","get_baud_rate","get",
"ChibiOS::UARTDriver","data-provider","is_dma_enabled","predicate",
"ChibiOS::UARTDriver","data-provider","get_total_tx_bytes","get",
"ChibiOS::UARTDriver","data-provider","get_total_rx_bytes","get",
"ChibiOS::RCOutput","unclassified","get_erpm","incidental",
"ChibiOS::RCOutput","unclassified","get_erpm_error_rate","wrapper stateless",
"ChibiOS::RCOutput","unclassified","new_erpm","incidental",
"ChibiOS::RCOutput","unclassified","set_motor_poles","incidental",
"ChibiOS::RCOutput","unclassified","set_dshot_period","command",
"ChibiOS::RCOutput","unclassified","get_dshot_period_us","get",
"ChibiOS::RCOutput","unclassified","get_dshot_esc_type","get collaborator",
"ChibiOS::RCOutput","unclassified","set_safety_mask","set",
"ChibiOS::RCOutput","unclassified","get_reversed_mask","get",
"ChibiOS::RCOutput","unclassified","set_active_escs_mask","set",
"ChibiOS::RCOutput","unclassified","disable_channel_mask_updates","set",
"ChibiOS::RCOutput","unclassified","enable_channel_mask_updates","set",
"ChibiOS::RCOutput","unclassified","in_soft_serial","predicate",
"ChibiOS::RCOutput","unclassified","dshot_command_is_active","predicate collaborator",
"ChibiOS::RCOutput","unclassified","is_bidir_dshot_enabled","collaborator incidental",
"ChibiOS::RCOutput","unclassified","group_escs_active","predicate collaborator",
"RGBLed","unclassified","RGBLed::RGBLed","constructor",
"RGBLed","unclassified","RGBLed::_set_rgb","command",
"RGBLed","unclassified","RGBLed::rgb_source","property collaborator",
"RGBLed","unclassified","RGBLed::set_rgb","command",
"RGBLed","unclassified","RGBLed::get_brightness","property controller",
"RGBLed","unclassified","RGBLed::get_colour_sequence_obc","wrapper stateless",
"RGBLed","unclassified","RGBLed::get_colour_sequence","get",
"RGBLed","unclassified","RGBLed::get_colour_sequence_traffic_light","controller stateless",
"RGBLed","unclassified","RGBLed::update","unclassified",
"RGBLed","unclassified","RGBLed::handle_led_control","command collaborator",
"RGBLed","unclassified","RGBLed::update_override","command",
"RGBLed","unclassified","RGBLed::rgb_control","incidental",
"SCurve","unclassified","get_speed_along_track","get",
"SCurve","unclassified","get_accel_along_track","get",
"SCurve","unclassified","get_track","get collaborator",
"SCurve","unclassified","get_time_elapsed","get",
"SCurve","unclassified","init","empty",
"SCurve","unclassified","init","wrapper stateless",
"SCurve","unclassified","init","wrapper stateless",
"SCurve","unclassified","SCurve::SCurve","constructor",
"SCurve","unclassified","SCurve::init","command",
"SCurve","unclassified","SCurve::calculate_track","command",
"SCurve","unclassified","SCurve::set_speed_max","command",
"SCurve","unclassified","SCurve::set_origin_speed_max","property non-void-command",
"SCurve","unclassified","SCurve::set_destination_speed_max","command",
"SCurve","unclassified","SCurve::advance_target_along_track","predicate non-void-command collaborator",
"SCurve","unclassified","SCurve::finished","predicate",
"SCurve","unclassified","SCurve::move_from_pos_vel_accel","void-accessor collaborator",
"SCurve","unclassified","SCurve::move_to_pos_vel_accel","void-accessor collaborator",
"SCurve","unclassified","SCurve::move_from_time_pos_vel_accel","void-accessor command collaborator",
"SCurve","unclassified","SCurve::time_end","property",
"SCurve","unclassified","SCurve::get_time_remaining","property",
"SCurve","unclassified","SCurve::get_accel_finished_time","property",
"SCurve","unclassified","SCurve::braking","predicate",
"SCurve","unclassified","SCurve::time_turn_in","property",
"SCurve","unclassified","SCurve::time_turn_out","property",
"SCurve","unclassified","SCurve::advance_time","set",
"SCurve","unclassified","SCurve::get_jerk_accel_vel_pos_at_time","void-accessor",
"SCurve","unclassified","SCurve::calc_javp_for_segment_const_jerk","incidental",
"SCurve","unclassified","SCurve::calc_javp_for_segment_incr_jerk","wrapper stateless",
"SCurve","unclassified","SCurve::calc_javp_for_segment_decr_jerk","wrapper stateless",
"SCurve","unclassified","SCurve::add_segments","command",
"SCurve","unclassified","SCurve::calculate_path","wrapper stateless",
"SCurve","unclassified","SCurve::add_segments_jerk","command",
"SCurve","unclassified","SCurve::add_segment_const_jerk","command",
"SCurve","unclassified","SCurve::add_segment_incr_jerk","command",
"SCurve","unclassified","SCurve::add_segment_decr_jerk","command",
"SCurve","unclassified","SCurve::add_segment","incidental",
"SCurve","unclassified","SCurve::set_kinematic_limits","command",
"SCurve","unclassified","SCurve::valid","predicate wrapper",
"SCurve","unclassified","SCurve::debug","wrapper",
"QAutoTune","pure-controller degenerate","QAutoTune::init","controller stateless",
"QAutoTune","pure-controller degenerate","QAutoTune::get_pilot_desired_climb_rate_cms","controller stateless",
"QAutoTune","pure-controller degenerate","QAutoTune::get_pilot_desired_rp_yrate_cd","controller stateless",
"QAutoTune","pure-controller degenerate","QAutoTune::init_z_limits","controller stateless",
"QAutoTune","pure-controller degenerate","QAutoTune::log_pids","controller stateless",
"I2CBus","lazy-class degenerate","I2CBus::dma_init","set",
"I2CBus","lazy-class degenerate","I2CBus::clear_all","command",
"I2CBus","lazy-class degenerate","I2CBus::set_bus_to_floating","wrapper stateless",
"I2CBus","lazy-class degenerate","I2CBus::check_select_pins","wrapper stateless",
"I2CBus","lazy-class degenerate","I2CBus::clear_bus","controller stateless",
"I2CBus","lazy-class degenerate","I2CBus::read_sda","wrapper stateless",
"I2CBus","lazy-class degenerate","I2CBus::dma_allocate","empty",
"I2CBus","lazy-class degenerate","I2CBus::dma_deallocate","empty",
"I2CBus","lazy-class degenerate","I2CBus::~I2CBus","destructor",
"I2CBus","lazy-class degenerate","I2CBus::start_cb","controller stateless",
"I2CBus","lazy-class degenerate","I2CBus::end_cb","controller stateless",
"I2CBus","lazy-class degenerate","I2CBus::open","wrapper stateless",
"I2CBus","lazy-class degenerate","I2CBus::_ioctl","controller stateless",
"I2CBus","lazy-class degenerate","I2CBus::register_periodic_callback","wrapper stateless",
"I2CBus","lazy-class degenerate","I2CBus::_timer_tick","controller",
"AC_PID_2D","boundary","get_error","get collaborator",
"AC_PID_2D","boundary","reset_filter","set",
"AC_PID_2D","boundary","kP","get collaborator",
"AC_PID_2D","boundary","kI","get collaborator",
"AC_PID_2D","boundary","kD","get collaborator",
"AC_PID_2D","boundary","ff","get collaborator",
"AC_PID_2D","boundary","filt_E_hz","get collaborator",
"AC_PID_2D","boundary","filt_D_hz","get collaborator",
"AC_PID_2D","boundary","imax","property",
"AC_PID_2D","boundary","kP","command",
"AC_PID_2D","boundary","kI","command",
"AC_PID_2D","boundary","kD","command",
"AC_PID_2D","boundary","ff","command",
"AC_PID_2D","boundary","imax","command",
"AC_PID_2D","boundary","filt_E_hz","command",
"AC_PID_2D","boundary","filt_D_hz","command",
"AC_PID_2D","boundary","set_integrator","command collaborator",
"AC_PID_2D","boundary","get_slew_rate","property",
"AC_PID_2D","boundary","get_pid_info_x","get collaborator",
"AC_PID_2D","boundary","get_pid_info_y","get collaborator",
"AC_PID_2D","boundary","AC_PID_2D::AC_PID_2D","constructor",
"AC_PID_2D","boundary","AC_PID_2D::update_all","property non-void-command collaborator",
"AC_PID_2D","boundary","AC_PID_2D::update_all","wrapper stateless",
"AC_PID_2D","boundary","AC_PID_2D::update_i","command collaborator",
"AC_PID_2D","boundary","AC_PID_2D::get_p","property collaborator",
"AC_PID_2D","boundary","AC_PID_2D::get_i","get collaborator",
"AC_PID_2D","boundary","AC_PID_2D::get_d","property collaborator",
"AC_PID_2D","boundary","AC_PID_2D::get_ff","property non-void-command collaborator",
"AC_PID_2D","boundary","AC_PID_2D::reset_I","command",
"AC_PID_2D","boundary","AC_PID_2D::save_gains","command",
"AC_PID_2D","boundary","AC_PID_2D::get_filt_E_alpha","property wrapper",
"AC_PID_2D","boundary","AC_PID_2D::get_filt_D_alpha","property wrapper",
"AC_PID_2D","boundary","AC_PID_2D::set_integrator","command collaborator",
"AC_PID_2D","boundary","AC_PID_2D::set_integrator","command collaborator",
"AC_PID_2D","boundary","AC_PID_2D::set_integrator","set collaborator",
"ChibiOS::Flash","data-provider boundary degenerate","getpageaddr","wrapper stateless",
"ChibiOS::Flash","data-provider boundary degenerate","getpagesize","wrapper stateless",
"ChibiOS::Flash","data-provider boundary degenerate","getnumpages","wrapper stateless",
"ChibiOS::Flash","data-provider boundary degenerate","erasepage","predicate wrapper",
"ChibiOS::Flash","data-provider boundary degenerate","write","predicate wrapper",
"ChibiOS::Flash","data-provider boundary degenerate","keep_unlocked","wrapper stateless",
"ChibiOS::Flash","data-provider boundary degenerate","ispageerased","wrapper stateless",
"RestrictIDTypeArray","controller data-class small-class","operator[]","get controller",
"RestrictIDTypeArray","controller data-class small-class","operator[]","get controller",
"ChibiOS::GPIO","commander data-class small-class","set_usb_connected","set",
"Radio_CC2500","commander","lock_bus","predicate non-void-command",
"Radio_CC2500","commander","unlock_bus","command",
"Radio_CC2500","commander","Radio_CC2500::Radio_CC2500","constructor",
"Radio_CC2500","commander","Radio_CC2500::ReadFifo","command",
"Radio_CC2500","commander","Radio_CC2500::WriteFifo","command",
"Radio_CC2500","commander","Radio_CC2500::ReadRegisterMulti","command",
"Radio_CC2500","commander","Radio_CC2500::WriteRegisterMulti","command",
"Radio_CC2500","commander","Radio_CC2500::ReadReg","property non-void-command",
"Radio_CC2500","commander","Radio_CC2500::Strobe","property non-void-command",
"Radio_CC2500","commander","Radio_CC2500::WriteReg","command",
"Radio_CC2500","commander","Radio_CC2500::SetPower","set",
"Radio_CC2500","commander","Radio_CC2500::Reset","predicate non-void-command",
"Radio_CC2500","commander","Radio_CC2500::WriteRegCheck","command",
"ChibiOS::DSP","boundary degenerate","vector_max_float","wrapper stateless",
"ChibiOS::DSP","boundary degenerate","vector_scale_float","wrapper stateless",
"ChibiOS::DSP","boundary degenerate","vector_mean_float","wrapper stateless",
"ChibiOS::DSP","boundary degenerate","vector_add_float","wrapper stateless",
"TestDestructor","empty","TestDestructor","constructor",
"GetOptLong","data-class small-class","GetOptLong::GetOptLong","copy-constructor",
"GetOptLong","data-class small-class","GetOptLong::getoption","get property non-void-command",
"Functor","data-provider boundary","Functor","constructor",
"Functor","data-provider boundary","Functor","constructor",
"Functor","data-provider boundary","Functor","constructor",
"Functor","data-provider boundary","operator()","property wrapper",
"Functor","data-provider boundary","operator==","predicate collaborator",
"Functor","data-provider boundary","operator!=","predicate collaborator",
"Functor","data-provider boundary","operatorbool","incidental",
"AP_GPS","data-provider","get_semaphore","get collaborator",
"AP_GPS","data-provider","set_default_type_for_gps1","controller",
"AP_GPS","data-provider","primary_sensor","get",
"AP_GPS","data-provider","status","get property collaborator",
"AP_GPS","data-provider","status","property collaborator",
"AP_GPS","data-provider","status_onechar","property",
"AP_GPS","data-provider","location","get collaborator",
"AP_GPS","data-provider","location","property collaborator",
"AP_GPS","data-provider","get_undulation","predicate",
"AP_GPS","data-provider","speed_accuracy","predicate",
"AP_GPS","data-provider","horizontal_accuracy","predicate",
"AP_GPS","data-provider","vertical_accuracy","predicate",
"AP_GPS","data-provider","velocity","get collaborator",
"AP_GPS","data-provider","velocity","property collaborator",
"AP_GPS","data-provider","ground_speed","get",
"AP_GPS","data-provider","ground_speed","property",
"AP_GPS","data-provider","ground_speed_cm","property",
"AP_GPS","data-provider","ground_course","get",
"AP_GPS","data-provider","ground_course","property",
"AP_GPS","data-provider","ground_course_cd","property",
"AP_GPS","data-provider","ground_course_cd","property",
"AP_GPS","data-provider","gps_yaw_deg","predicate",
"AP_GPS","data-provider","num_sats","get",
"AP_GPS","data-provider","num_sats","property",
"AP_GPS","data-provider","time_week_ms","get",
"AP_GPS","data-provider","time_week_ms","property",
"AP_GPS","data-provider","time_week","get",
"AP_GPS","data-provider","time_week","property",
"AP_GPS","data-provider","get_hdop","get",
"AP_GPS","data-provider","get_hdop","property",
"AP_GPS","data-provider","get_vdop","get",
"AP_GPS","data-provider","get_vdop","property",
"AP_GPS","data-provider","last_fix_time_ms","get",
"AP_GPS","data-provider","last_fix_time_ms","property",
"AP_GPS","data-provider","last_message_time_ms","get",
"AP_GPS","data-provider","last_message_time_ms","property",
"AP_GPS","data-provider","last_message_delta_time_ms","get",
"AP_GPS","data-provider","last_message_delta_time_ms","property",
"AP_GPS","data-provider","have_vertical_velocity","get",
"AP_GPS","data-provider","have_vertical_velocity","predicate",
"AP_GPS","data-provider","have_gps_yaw","predicate",
"AP_GPS","data-provider","have_gps_yaw","predicate",
"AP_GPS","data-provider","have_gps_yaw_configured","get",
"AP_GPS","data-provider","get_lag","predicate",
"AP_GPS","data-provider","time_epoch_usec","property",
"AP_GPS","data-provider","last_message_epoch_usec","property",
"AP_GPS","data-provider","set_log_gps_bit","set",
"AP_GPS","data-provider","is_healthy","predicate",
"AP_GPS","data-provider","logging_present","predicate",
"AP_GPS","data-provider","logging_enabled","predicate",
"AP_GPS","data-provider","force_disable","set",
"AP_GPS","data-provider","set_force_disable_yaw","set",
"AP_GPS","data-provider","get_type","property wrapper",
"AP_GPS","data-provider","get_error_codes","predicate",
"AP_GPS","data-provider","get_auto_switch_type","get",
"AP_GPS","data-provider","option_set","predicate collaborator",
"AP_GPS","data-provider","AP_GPS::AP_GPS","constructor",
"AP_GPS","data-provider","AP_GPS::needs_uart","collaborator incidental",
"AP_GPS","data-provider","AP_GPS::init","command",
"AP_GPS","data-provider","AP_GPS::convert_parameters","wrapper",
"AP_GPS","data-provider","AP_GPS::num_sensors","get property",
"AP_GPS","data-provider","AP_GPS::speed_accuracy","predicate",
"AP_GPS","data-provider","AP_GPS::horizontal_accuracy","predicate",
"AP_GPS","data-provider","AP_GPS::vertical_accuracy","predicate",
"AP_GPS","data-provider","AP_GPS::position_covariance","property collaborator",
"AP_GPS","data-provider","AP_GPS::istate_time_to_epoch_ms","incidental",
"AP_GPS","data-provider","AP_GPS::time_epoch_usec","property",
"AP_GPS","data-provider","AP_GPS::last_message_epoch_usec","property collaborator",
"AP_GPS","data-provider","AP_GPS::send_blob_start","incidental",
"AP_GPS","data-provider","AP_GPS::send_blob_start","command",
"AP_GPS","data-provider","AP_GPS::send_blob_update","wrapper",
"AP_GPS","data-provider","AP_GPS::detect_instance","set collaborator",
"AP_GPS","data-provider","AP_GPS::_detect_instance","property non-void-command collaborator",
"AP_GPS","data-provider","AP_GPS::highest_supported_status","get property collaborator",
"AP_GPS","data-provider","AP_GPS::should_log","predicate controller",
"AP_GPS","data-provider","AP_GPS::update_instance","unclassified",
"AP_GPS","data-provider","AP_GPS::get_RelPosHeading","predicate wrapper",
"AP_GPS","data-provider","AP_GPS::get_RTCMV3","get predicate non-void-command",
"AP_GPS","data-provider","AP_GPS::clear_RTCMV3","command",
"AP_GPS","data-provider","AP_GPS::inject_MBL_data","command",
"AP_GPS","data-provider","AP_GPS::update","unclassified",
"AP_GPS","data-provider","AP_GPS::update_primary","command",
"AP_GPS","data-provider","AP_GPS::handle_gps_inject","command collaborator",
"AP_GPS","data-provider","AP_GPS::handle_msg","command collaborator",
"AP_GPS","data-provider","AP_GPS::handle_msp","command collaborator",
"AP_GPS","data-provider","AP_GPS::get_first_external_instance","predicate",
"AP_GPS","data-provider","AP_GPS::handle_external","command",
"AP_GPS","data-provider","AP_GPS::lock_port","set",
"AP_GPS","data-provider","AP_GPS::inject_data","command",
"AP_GPS","data-provider","AP_GPS::inject_data","command",
"AP_GPS","data-provider","AP_GPS::gps_yaw_cdeg","property",
"AP_GPS","data-provider","AP_GPS::send_mavlink_gps_raw","command collaborator",
"AP_GPS","data-provider","AP_GPS::send_mavlink_gps2_raw","command collaborator",
"AP_GPS","data-provider","AP_GPS::send_mavlink_gps_rtk","wrapper",
"AP_GPS","data-provider","AP_GPS::first_unconfigured_gps","predicate wrapper",
"AP_GPS","data-provider","AP_GPS::broadcast_first_configuration_failure_reason","unclassified",
"AP_GPS","data-provider","AP_GPS::all_consistent","predicate controller",
"AP_GPS","data-provider","AP_GPS::handle_gps_rtcm_fragment","command",
"AP_GPS","data-provider","AP_GPS::handle_gps_rtcm_data","command collaborator",
"AP_GPS","data-provider","AP_GPS::parse_rtcm_injection","predicate non-void-command collaborator",
"AP_GPS","data-provider","AP_GPS::Write_AP_Logger_Log_Startup_messages","command",
"AP_GPS","data-provider","AP_GPS::get_lag","get predicate collaborator",
"AP_GPS","data-provider","AP_GPS::get_antenna_offset","get collaborator",
"AP_GPS","data-provider","AP_GPS::get_rate_ms","property wrapper",
"AP_GPS","data-provider","AP_GPS::is_healthy","get predicate",
"AP_GPS","data-provider","AP_GPS::prepare_for_arming","predicate non-void-command",
"AP_GPS","data-provider","AP_GPS::backends_healthy","predicate non-void-command collaborator",
"AP_GPS","data-provider","AP_GPS::logging_failed","predicate",
"AP_GPS","data-provider","AP_GPS::get_itow","get property wrapper",
"AP_GPS","data-provider","AP_GPS::get_error_codes","get predicate",
"AP_GPS","data-provider","AP_GPS::get_undulation","predicate",
"AP_GPS","data-provider","AP_GPS::Write_GPS","command",
"AP_GPS","data-provider","AP_GPS::is_rtk_base","predicate",
"AP_GPS","data-provider","AP_GPS::is_rtk_rover","predicate",
"AP_GPS","data-provider","AP_GPS::gps_yaw_deg","predicate",
"AP_GPS","data-provider","AP_GPS::blend_health_check","predicate",
"AP_GPS","data-provider","AP_GPS::calc_blend_weights","predicate set",
"AP_GPS","data-provider","AP_GPS::calc_blended_state","command",
"AP_GPS","data-provider","init","empty",
"AP_GPS","data-provider","init","set",
"AP_GPS","data-provider","init","set",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::AP_Spektrum_Telem","constructor",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::~AP_Spektrum_Telem","destructor",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::init","wrapper stateless",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::setup_wfq_scheduler","wrapper stateless",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::adjust_packet_weight","set",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::is_packet_ready","incidental",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::process_packet","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::repeat_msg_chunk","predicate",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::get_next_msg_chunk","predicate set",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_qos","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_rpm","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::send_msg_chunk","command collaborator",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_batt_volts","command collaborator",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_batt_amps","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_batt_mah","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_temperature","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_altitude","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_airspeed","command collaborator",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_attandmag","command collaborator",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_gps_location","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_gps_status","command",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::calc_esc","command collaborator",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::_get_telem_data","predicate set",
"AP_Spektrum_Telem","commander","AP_Spektrum_Telem::get_telem_data","predicate non-void-command collaborator",
"ModeVelocity","pure-controller degenerate","requires_GPS","incidental",
"ModeVelocity","pure-controller degenerate","has_manual_throttle","incidental",
"ModeVelocity","pure-controller degenerate","allows_arming","incidental",
"ModeVelocity","pure-controller degenerate","is_autopilot","incidental",
"ModeVelocity","pure-controller degenerate","name","incidental",
"ModeVelocity","pure-controller degenerate","name4","incidental",
"ModeVelocity","pure-controller degenerate","ModeVelocity::run","controller stateless",
"IRLock","unclassified","healthy","incidental",
"IRLock","unclassified","last_update_ms","get",
"IRLock","unclassified","num_targets","incidental",
"IRLock","unclassified","IRLock::get_unit_vector_body","predicate controller",
"AP_RangeFinder_USD1_Serial","degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_USD1_Serial","degenerate","initial_baudrate","incidental",
"AP_RangeFinder_USD1_Serial","degenerate","rx_bufsize","incidental",
"AP_RangeFinder_USD1_Serial","degenerate","tx_bufsize","incidental",
"AP_RangeFinder_USD1_Serial","degenerate","AP_RangeFinder_USD1_Serial::detect_version","predicate non-void-command",
"AP_RangeFinder_USD1_Serial","degenerate","AP_RangeFinder_USD1_Serial::get_reading","predicate non-void-command",
"AP_HAL::BetterStream","boundary degenerate small-class","print","wrapper stateless",
"AP_HAL::BetterStream","boundary degenerate small-class","println","wrapper stateless",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix","constructor",
"AP_MotorsMatrix","unclassified","get_lost_motor","get",
"AP_MotorsMatrix","unclassified","get_roll_factor","get",
"AP_MotorsMatrix","unclassified","get_pitch_factor","get",
"AP_MotorsMatrix","unclassified","_get_frame_string","get",
"AP_MotorsMatrix","unclassified","get_type_string","get",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::init","command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::init","predicate non-void-command",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::set_throttle_factor","predicate set",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::set_update_rate","wrapper",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::set_frame_class_and_type","command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::output_to_motors","set",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::get_motor_mask","property wrapper",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::boost_ratio","incidental",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::output_armed_stabilizing","command",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::check_for_failed_motor","command",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::_output_test_seq","wrapper",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::output_test_num","predicate wrapper",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::add_motor_raw","command",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::add_motor","command",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::add_motor","wrapper stateless",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::remove_motor","command",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::add_motors","command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::add_motors_raw","wrapper stateless",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::setup_quad_matrix","predicate non-void-command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::setup_hexa_matrix","predicate non-void-command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::setup_octa_matrix","predicate non-void-command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::setup_octaquad_matrix","predicate non-void-command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::setup_dodecahexa_matrix","predicate non-void-command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::setup_y6_matrix","predicate non-void-command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::setup_deca_matrix","predicate non-void-command collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::setup_motors","collaborator",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::normalise_rpy_factors","command",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::thrust_compensation","wrapper",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::disable_yaw_torque","set",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::get_thrust_rpyt_out","get property",
"AP_MotorsMatrix","unclassified","AP_MotorsMatrix::get_factors","predicate",
"WSPIDeviceManager","degenerate","get_device","collaborator incidental",
"WSPIDeviceManager","degenerate","get_count","incidental",
"WSPIDeviceManager","degenerate","get_device_name","incidental",
"WSPIDeviceManager","degenerate","WSPIDeviceManager::get_device","wrapper stateless",
"XPlane","commander","is_xplane12","predicate",
"XPlane","commander","XPlane::XPlane","constructor",
"XPlane","commander","XPlane::add_dref","set collaborator",
"XPlane","commander","XPlane::add_joyinput","set collaborator",
"XPlane","commander","XPlane::handle_setting","set collaborator",
"XPlane","commander","XPlane::load_dref_map","predicate non-void-command",
"XPlane","commander","XPlane::check_reload_dref","command collaborator",
"XPlane","commander","XPlane::find_data_index","wrapper stateless",
"XPlane","commander","XPlane::select_data","command",
"XPlane","commander","XPlane::deselect_code","command",
"XPlane","commander","XPlane::receive_data","predicate non-void-command",
"XPlane","commander","XPlane::handle_rref","set",
"XPlane","commander","XPlane::send_drefs","command collaborator",
"XPlane","commander","XPlane::send_dref","command",
"XPlane","commander","XPlane::request_dref","command",
"XPlane","commander","XPlane::request_drefs","command",
"XPlane","commander","XPlane::update","command collaborator",
"I2CRegisters_ConfigurableLength","commander","SITL::I2CRegisters_ConfigurableLength::add_register","set collaborator",
"I2CRegisters_ConfigurableLength","commander","SITL::I2CRegisters_ConfigurableLength::set_register","set",
"I2CRegisters_ConfigurableLength","commander","SITL::I2CRegisters_ConfigurableLength::set_register","set",
"I2CRegisters_ConfigurableLength","commander","SITL::I2CRegisters_ConfigurableLength::set_register","set",
"I2CRegisters_ConfigurableLength","commander","SITL::I2CRegisters_ConfigurableLength::set_register","set",
"I2CRegisters_ConfigurableLength","commander","SITL::I2CRegisters_ConfigurableLength::rdwr","property non-void-command collaborator",
"I2CRegisters_ConfigurableLength","commander","SITL::I2CRegisters_ConfigurableLength::get_reg_value","void-accessor wrapper",
"WSPIDevice","unclassified","WSPIDevice","constructor",
"WSPIDevice","unclassified","WSPIDevice::is_busy","incidental",
"WSPIDevice","unclassified","WSPIDevice::transfer","predicate non-void-command",
"WSPIDevice","unclassified","WSPIDevice::set_cmd_header","collaborator incidental",
"WSPIDevice","unclassified","WSPIDevice::acquire_bus","controller stateless",
"WSPIDevice","unclassified","WSPIDevice::enter_xip_mode","predicate non-void-command",
"WSPIDevice","unclassified","WSPIDevice::exit_xip_mode","predicate non-void-command",
"HAL_ChibiOS","boundary degenerate small-class","HAL_ChibiOS::HAL_ChibiOS","constructor",
"HAL_ChibiOS","boundary degenerate small-class","HAL_ChibiOS::run","wrapper stateless",
"AP_HAL::Util","data-provider lazy-class degenerate","get_soft_armed","get",
"AP_HAL::Util","data-provider lazy-class degenerate","get_last_armed_change","get",
"AP_HAL::Util","data-provider lazy-class degenerate","was_watchdog_reset","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","was_watchdog_safety_off","predicate",
"AP_HAL::Util","data-provider lazy-class degenerate","was_watchdog_armed","predicate",
"AP_HAL::Util","data-provider lazy-class degenerate","get_custom_log_directory","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","get_custom_terrain_directory","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","get_custom_storage_directory","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","get_custom_defaults_file","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","set_cmdline_parameters","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","safety_switch_state","collaborator incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","flash_bootloader","collaborator incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","get_system_id","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","get_system_id_unformatted","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","commandline_arguments","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","toneAlarm_init","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","toneAlarm_set_buzzer_tone","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","get_shell_stream","collaborator incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","set_imu_temp","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","set_imu_target_temp","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","malloc_type","wrapper stateless",
"AP_HAL::Util","data-provider lazy-class degenerate","free_type","wrapper stateless",
"AP_HAL::Util","data-provider lazy-class degenerate","std_realloc","wrapper stateless",
"AP_HAL::Util","data-provider lazy-class degenerate","available_memory","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","trap","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","thread_info","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","dma_info","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","mem_info","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","load_persistent_params","collaborator incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","get_persistent_param_by_name","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","uart_info","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","uart_log","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","timer_info","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","get_random_vals","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","get_true_random_vals","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","log_stack_info","empty",
"AP_HAL::Util","data-provider lazy-class degenerate","last_crash_dump_size","incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","last_crash_dump_ptr","collaborator incidental",
"AP_HAL::Util","data-provider lazy-class degenerate","boot_to_dfu","empty",
"GCS_Plane","degenerate","new_gcs_mavlink_backend","wrapper stateless",
"GCS_Plane","degenerate","min_status_for_gps_healthy","collaborator incidental",
"GCS_Plane","degenerate","GCS_Plane::frame_type","controller stateless",
"GCS_Plane","degenerate","GCS_Plane::custom_mode","controller stateless",
"GCS_Plane","degenerate","GCS_Plane::sysid_this_mav","incidental",
"GCS_Plane","degenerate","GCS_Plane::update_vehicle_sensor_status_flags","command collaborator",
"AP_HAL::UARTDriver","lazy-class degenerate","set_options","predicate set",
"AP_HAL::UARTDriver","lazy-class degenerate","get_options","get",
"AP_HAL::UARTDriver","lazy-class degenerate","set_flow_control","empty",
"AP_HAL::UARTDriver","lazy-class degenerate","get_flow_control","collaborator incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","flow_control_enabled","predicate non-void-command",
"AP_HAL::UARTDriver","lazy-class degenerate","configure_parity","empty",
"AP_HAL::UARTDriver","lazy-class degenerate","set_stop_bits","empty",
"AP_HAL::UARTDriver","lazy-class degenerate","set_unbuffered_writes","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","wait_timeout","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","_timer_tick","empty",
"AP_HAL::UARTDriver","lazy-class degenerate","bw_in_bytes_per_second","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","get_baud_rate","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","is_dma_enabled","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","uart_info","empty",
"AP_HAL::UARTDriver","lazy-class degenerate","set_RTS_pin","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","set_CTS_pin","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","get_usb_baud","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","get_usb_parity","get",
"AP_HAL::UARTDriver","lazy-class degenerate","disable_rxtx","empty",
"AP_HAL::UARTDriver","lazy-class degenerate","set_monitor_read_buffer","predicate set collaborator",
"AP_HAL::UARTDriver","lazy-class degenerate","is_write_locked","predicate",
"AP_HAL::UARTDriver","lazy-class degenerate","get_total_tx_bytes","incidental",
"AP_HAL::UARTDriver","lazy-class degenerate","get_total_rx_bytes","incidental",
"AP_MSP_Telem_Backend","boundary degenerate","adjust_packet_weight","empty",
"AP_MSP_Telem_Backend","boundary degenerate","get_next_msg_chunk","incidental",
"AP_MSP_Telem_Backend","boundary degenerate","use_msp_thread","incidental",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::AP_MSP_Telem_Backend","constructor",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::setup_wfq_scheduler","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::init","predicate non-void-command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::init_uart","predicate non-void-command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::process_outgoing_data","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::is_packet_ready","incidental",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::process_packet","set",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::calc_cell_count","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::get_vspeed_ms","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::update_home_pos","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::update_gps_state","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::update_battery_state","void-accessor command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::update_airspeed","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::update_flight_mode_str","controller",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::enable_warnings","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::process_incoming_data","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_send_packet","wrapper",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_received_command","set collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_command","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_command","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_sensor_command","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_handle_opflow","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_handle_rangefinder","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_handle_gps","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_handle_compass","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_handle_baro","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_handle_airspeed","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::get_osd_flight_mode_bitmask","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_api_version","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_fc_version","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_fc_variant","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_raw_gps","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_comp_gps","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_name","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_status","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_osd_config","property wrapper",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_attitude","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_altitude","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_analog","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_battery_state","property non-void-command collaborator",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_esc_sensor_data","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_rtc","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_rc","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_board_info","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_build_info","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_process_out_uid","controller stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::hide_osd_items","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_displayport_heartbeat","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_displayport_grab","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_displayport_release","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_displayport_clear_screen","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_displayport_draw_screen","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_displayport_write_string","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::msp_displayport_set_options","command",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::displaying_stats_screen","wrapper stateless",
"AP_MSP_Telem_Backend","boundary degenerate","AP_MSP_Telem_Backend::get_rssi","controller stateless",
"AP_HAL::Storage","degenerate","_timer_tick","empty",
"AP_HAL::Storage","degenerate","healthy","incidental",
"AP_HAL::Storage","degenerate","get_storage_ptr","incidental",
"AP_HAL::BinarySemaphore","boundary degenerate small-class","wait_nonblocking","wrapper stateless",
"AP_HAL::BinarySemaphore","boundary degenerate small-class","signal_ISR","wrapper stateless",
"AP_HAL::BinarySemaphore","boundary degenerate small-class","~BinarySemaphore","destructor",
"WithSemaphore","empty","WithSemaphore::WithSemaphore","constructor",
"WithSemaphore","empty","WithSemaphore::WithSemaphore","constructor",
"WithSemaphore","empty","WithSemaphore::~WithSemaphore","destructor",
"AP_Mission_ChangeDetector","controller small-class","AP_Mission_ChangeDetector::check_for_mission_change","predicate controller",
"AP_Compass_MMC5XX3","boundary","AP_Compass_MMC5XX3::probe","controller stateless",
"AP_Compass_MMC5XX3","boundary","AP_Compass_MMC5XX3::AP_Compass_MMC5XX3","constructor",
"AP_Compass_MMC5XX3","boundary","AP_Compass_MMC5XX3::init","predicate non-void-command",
"AP_Compass_MMC5XX3","boundary","AP_Compass_MMC5XX3::timer","command collaborator",
"AP_Compass_MMC5XX3","boundary","AP_Compass_MMC5XX3::read","wrapper",
"AP_HAL::RCOutput","commander degenerate","set_reversible_mask","empty",
"AP_HAL::RCOutput","commander degenerate","set_reversed_mask","empty",
"AP_HAL::RCOutput","commander degenerate","get_reversed_mask","incidental",
"AP_HAL::RCOutput","commander degenerate","update_channel_masks","empty",
"AP_HAL::RCOutput","commander degenerate","disable_channel_mask_updates","empty",
"AP_HAL::RCOutput","commander degenerate","enable_channel_mask_updates","empty",
"AP_HAL::RCOutput","commander degenerate","read_last_sent","wrapper stateless",
"AP_HAL::RCOutput","commander degenerate","read_last_sent","wrapper stateless",
"AP_HAL::RCOutput","commander degenerate","set_failsafe_pwm","empty",
"AP_HAL::RCOutput","commander degenerate","force_safety_on","incidental",
"AP_HAL::RCOutput","commander degenerate","force_safety_off","empty",
"AP_HAL::RCOutput","commander degenerate","set_esc_scaling","command",
"AP_HAL::RCOutput","commander degenerate","get_erpm","incidental",
"AP_HAL::RCOutput","commander degenerate","get_erpm_error_rate","incidental",
"AP_HAL::RCOutput","commander degenerate","new_erpm","incidental",
"AP_HAL::RCOutput","commander degenerate","read_erpm","incidental",
"AP_HAL::RCOutput","commander degenerate","enable_px4io_sbus_out","incidental",
"AP_HAL::RCOutput","commander degenerate","timer_tick","empty",
"AP_HAL::RCOutput","commander degenerate","serial_setup_output","incidental",
"AP_HAL::RCOutput","commander degenerate","serial_write_bytes","incidental",
"AP_HAL::RCOutput","commander degenerate","serial_read_bytes","incidental",
"AP_HAL::RCOutput","commander degenerate","serial_end","empty",
"AP_HAL::RCOutput","commander degenerate","set_output_mode","empty",
"AP_HAL::RCOutput","commander degenerate","get_output_mode","collaborator incidental",
"AP_HAL::RCOutput","commander degenerate","get_output_mode_banner","incidental",
"AP_HAL::RCOutput","commander degenerate","get_disabled_channels","incidental",
"AP_HAL::RCOutput","commander degenerate","set_default_rate","empty",
"AP_HAL::RCOutput","commander degenerate","set_telem_request_mask","empty",
"AP_HAL::RCOutput","commander degenerate","set_bidir_dshot_mask","empty",
"AP_HAL::RCOutput","commander degenerate","set_active_escs_mask","empty",
"AP_HAL::RCOutput","commander degenerate","set_dshot_rate","empty",
"AP_HAL::RCOutput","commander degenerate","set_dshot_period","empty",
"AP_HAL::RCOutput","commander degenerate","get_dshot_period_us","incidental",
"AP_HAL::RCOutput","commander degenerate","set_dshot_esc_type","empty",
"AP_HAL::RCOutput","commander degenerate","get_dshot_esc_type","collaborator incidental",
"AP_HAL::RCOutput","commander degenerate","send_dshot_command","empty",
"AP_HAL::RCOutput","commander degenerate","set_motor_poles","empty",
"AP_HAL::RCOutput","commander degenerate","set_serial_led_num_LEDs","incidental",
"AP_HAL::RCOutput","commander degenerate","set_serial_led_rgb_data","incidental",
"AP_HAL::RCOutput","commander degenerate","serial_led_send","incidental",
"AP_HAL::RCOutput","commander degenerate","timer_info","empty",
"AP_HAL::RCOutput","commander degenerate","supports_gpio","incidental",
"AP_HAL::RCOutput","commander degenerate","write_gpio","empty",
"AP_HAL::CANIface","data-provider lazy-class degenerate","get_operating_mode","get collaborator",
"AP_HAL::CANIface","data-provider lazy-class degenerate","init","wrapper stateless",
"AP_HAL::CANIface","data-provider lazy-class degenerate","select","incidental",
"AP_HAL::CANIface","data-provider lazy-class degenerate","set_event_handle","collaborator incidental",
"AP_HAL::CANIface","data-provider lazy-class degenerate","configureFilters","incidental",
"AP_HAL::CANIface","data-provider lazy-class degenerate","getNumFilters","incidental",
"AP_HAL::CANIface","data-provider lazy-class degenerate","getErrorCount","incidental",
"AP_HAL::CANIface","data-provider lazy-class degenerate","get_stats","empty",
"AP_HAL::CANIface","data-provider lazy-class degenerate","get_statistics","collaborator incidental",
"AP_HAL::CANIface","data-provider lazy-class degenerate","is_busoff","incidental",
"AP_HAL::CANIface","data-provider lazy-class degenerate","flush_tx","empty",
"AP_HAL::CANIface","data-provider lazy-class degenerate","clear_rx","empty",
"AP_HAL::CANFrame","data-provider","operator!=","predicate",
"AP_HAL::CANFrame","data-provider","operator==","predicate wrapper",
"AP_HAL::CANFrame","data-provider","id_signed","property",
"AP_HAL::CANFrame","data-provider","isExtended","predicate",
"AP_HAL::CANFrame","data-provider","isRemoteTransmissionRequest","predicate",
"AP_HAL::CANFrame","data-provider","isErrorFrame","predicate",
"AP_HAL::CANFrame","data-provider","setCanFD","set",
"AP_HAL::CANFrame","data-provider","isCanFDFrame","get",
"AP_HAL::CANFrame","data-provider","priorityLowerThan","controller stateless",
"AP_BattMonitor_Sum","unclassified","has_consumed_energy","predicate",
"AP_BattMonitor_Sum","unclassified","has_current","get",
"AP_BattMonitor_Sum","unclassified","init","empty",
"AP_BattMonitor_Sum","unclassified","AP_BattMonitor_Sum::AP_BattMonitor_Sum","constructor",
"AP_BattMonitor_Sum","unclassified","AP_BattMonitor_Sum::read","command",
"LR_MsgHandler_REY3","pure-controller degenerate small-class","LR_MsgHandler_REY3::process_message","controller stateless",
"AP_ParamV","minimal-entity boundary","get","get collaborator",
"AP_ParamV","minimal-entity boundary","set","set collaborator",
"AP_ParamV","minimal-entity boundary","operatorconstT&","get",
"AP_ParamV","minimal-entity boundary","AP_ParamV<T,PT>::set_and_notify","command collaborator",
"AP_ParamV","minimal-entity boundary","AP_ParamV<T,PT>::set_and_save","command collaborator",
"AP_ParamV","minimal-entity boundary","AP_ParamV<T,PT>::set_and_save_ifchanged","command collaborator",
"AP_GyroFFT","boundary","update_parameters","command",
"AP_GyroFFT","boundary","enabled","get",
"AP_GyroFFT","boundary","set_analysis_enabled","set",
"AP_GyroFFT","boundary","get_noise_center_freq_hz","property collaborator",
"AP_GyroFFT","boundary","get_noise_center_freq_hz","get collaborator",
"AP_GyroFFT","boundary","get_noise_signal_to_noise_db","property collaborator",
"AP_GyroFFT","boundary","get_noise_signal_to_noise_db","get collaborator",
"AP_GyroFFT","boundary","get_raw_noise_center_freq_hz","get collaborator",
"AP_GyroFFT","boundary","get_raw_noise_harmonic_fit","get collaborator",
"AP_GyroFFT","boundary","get_center_freq_energy","property collaborator",
"AP_GyroFFT","boundary","get_center_freq_energy","get collaborator",
"AP_GyroFFT","boundary","get_center_freq_bin","get collaborator",
"AP_GyroFFT","boundary","get_noise_center_bandwidth_hz","property collaborator",
"AP_GyroFFT","boundary","get_noise_center_bandwidth_hz","get collaborator",
"AP_GyroFFT","boundary","using_post_filter_samples","predicate wrapper",
"AP_GyroFFT","boundary","check_esc_noise","predicate wrapper",
"AP_GyroFFT","boundary","get_tl_noise_center_freq_hz","get",
"AP_GyroFFT","boundary","get_tl_center_freq_energy","get",
"AP_GyroFFT","boundary","get_tl_noise_center_bandwidth_hz","get",
"AP_GyroFFT","boundary","update_tl_noise_center_freq_hz","get set",
"AP_GyroFFT","boundary","update_tl_center_freq_energy","get set",
"AP_GyroFFT","boundary","update_tl_noise_center_bandwidth_hz","get set",
"AP_GyroFFT","boundary","analysis_enabled","predicate",
"AP_GyroFFT","boundary","get_available_samples","property non-void-command",
"AP_GyroFFT","boundary","AP_GyroFFT::AP_GyroFFT","constructor",
"AP_GyroFFT","boundary","AP_GyroFFT::init","command",
"AP_GyroFFT","boundary","AP_GyroFFT::sample_gyros","command collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::update","command",
"AP_GyroFFT","boundary","AP_GyroFFT::run_cycle","property non-void-command",
"AP_GyroFFT","boundary","AP_GyroFFT::start_analysis","predicate set",
"AP_GyroFFT","boundary","AP_GyroFFT::update_parameters","command",
"AP_GyroFFT","boundary","AP_GyroFFT::update_thread","command",
"AP_GyroFFT","boundary","AP_GyroFFT::start_update_thread","predicate set",
"AP_GyroFFT","boundary","AP_GyroFFT::pre_arm_check","get predicate non-void-command",
"AP_GyroFFT","boundary","AP_GyroFFT::prepare_for_arming","predicate set",
"AP_GyroFFT","boundary","AP_GyroFFT::update_freq_hover","command",
"AP_GyroFFT","boundary","AP_GyroFFT::save_params_on_disarm","command",
"AP_GyroFFT","boundary","AP_GyroFFT::start_notch_tune","set collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::calculate_notch_frequency","wrapper stateless",
"AP_GyroFFT","boundary","AP_GyroFFT::stop_notch_tune","command",
"AP_GyroFFT","boundary","AP_GyroFFT::get_tracked_noise_peak","property wrapper",
"AP_GyroFFT","boundary","AP_GyroFFT::get_weighted_freq_hz","property collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::get_weighted_noise_center_freq_hz","get property collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::get_weighted_noise_center_frequencies_hz","property",
"AP_GyroFFT","boundary","AP_GyroFFT::has_noise_at_frequency_hz","property",
"AP_GyroFFT","boundary","AP_GyroFFT::calculate_weighted_freq_hz","controller stateless",
"AP_GyroFFT","boundary","AP_GyroFFT::write_log_messages","unclassified",
"AP_GyroFFT","boundary","AP_GyroFFT::log_noise_peak","collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::get_weighted_noise_center_bandwidth_hz","property collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::calculate_noise","command collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::calculate_tracking_peaks","property non-void-command collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::calculate_tracking_peaks","property non-void-command collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::calculate_filtered_noise","predicate non-void-command collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::update_snr_values","command collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::get_weighted_frequency","predicate collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::find_distance_matrix","void-accessor collaborator",
"AP_GyroFFT","boundary","AP_GyroFFT::find_closest_peak","wrapper stateless",
"AP_GyroFFT","boundary","AP_GyroFFT::update_ref_energy","command",
"AP_GyroFFT","boundary","AP_GyroFFT::self_test_bin_frequencies","property non-void-command",
"AP_GyroFFT","boundary","AP_GyroFFT::self_test","property set collaborator",
"AP_GyroFFT","boundary","update","wrapper stateless",
"AP_Generator_RichenPower","unclassified","set_pilot_desired_runstate","set collaborator",
"AP_Generator_RichenPower","unclassified","time_in_idle_state_ms","property wrapper",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::init","command",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::move_header_in_buffer","set",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::get_reading","predicate non-void-command",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::update_heat","command",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::generator_ok_to_run","predicate",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::heat_required_for_run","property",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::check_maintenance_required","set",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::update","command",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::update_runstate","command",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::Log_Write","set",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::pre_arm_check","predicate",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::update_frontend_readings","command",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::healthy","predicate wrapper",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::send_generator_status","controller",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::stop","predicate non-void-command",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::idle","predicate non-void-command",
"AP_Generator_RichenPower","unclassified","AP_Generator_RichenPower::run","predicate non-void-command",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::init","wrapper stateless",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::assign_measurements","command collaborator",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::decode_latest_term","command",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::decode_data_packet","command",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::decode_legacy_data","command",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::decode_v2_data","command",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::decode_info_packet","set",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::update_failsafes","property collaborator",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::is_critical_error","incidental",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::is_low_error","incidental",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::check_for_err_code","predicate",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::check_for_warning_code","predicate",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::log_write","wrapper",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::is_running","wrapper stateless",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::update_state_msg","set collaborator",
"AP_Generator_IE_2400","commander","AP_Generator_IE_2400::get_mav_severity","collaborator incidental",
"AP_Generator_Backend","commander degenerate","~AP_Generator_Backend","destructor",
"AP_Generator_Backend","commander degenerate","pre_arm_check","incidental",
"AP_Generator_Backend","commander degenerate","update_failsafes","collaborator incidental",
"AP_Generator_Backend","commander degenerate","stop","incidental",
"AP_Generator_Backend","commander degenerate","idle","incidental",
"AP_Generator_Backend","commander degenerate","run","incidental",
"AP_Generator_Backend","commander degenerate","send_generator_status","empty",
"AP_Generator_Backend","commander degenerate","AP_Generator_Backend::AP_Generator_Backend","constructor",
"AP_Generator_Backend","commander degenerate","AP_Generator_Backend::update_frontend","command",
"AP_WindVane_RPM","commander data-class small-class","AP_WindVane_RPM::update_speed","set",
"AP_Generator","data-provider","get_voltage","get",
"AP_Generator","data-provider","get_current","get",
"AP_Generator","data-provider","get_fuel_remaining","get",
"AP_Generator","data-provider","get_batt_consumed","get",
"AP_Generator","data-provider","get_rpm","get",
"AP_Generator","data-provider","has_current","get",
"AP_Generator","data-provider","has_consumed_energy","get",
"AP_Generator","data-provider","has_fuel_remaining","get",
"AP_Generator","data-provider","healthy","get",
"AP_Generator","data-provider","option_set","predicate wrapper",
"AP_Generator","data-provider","AP_Generator::AP_Generator","constructor",
"AP_Generator","data-provider","AP_Generator::init","command",
"AP_Generator","data-provider","AP_Generator::update","command",
"AP_Generator","data-provider","AP_Generator::type","property collaborator",
"AP_Generator","data-provider","AP_Generator::send_generator_status","command collaborator",
"AP_Generator","data-provider","AP_Generator::pre_arm_check","predicate",
"AP_Generator","data-provider","AP_Generator::update_failsafes","property non-void-command collaborator",
"AP_Generator","data-provider","AP_Generator::stop","predicate non-void-command",
"AP_Generator","data-provider","AP_Generator::idle","predicate non-void-command",
"AP_Generator","data-provider","AP_Generator::run","predicate non-void-command",
"AP_Generator","data-provider","AP_Generator::get_singleton","get",
"Gripper_EPM","unclassified","Gripper_EPM","constructor",
"Gripper_EPM","unclassified","payload_mass","incidental",
"Gripper_EPM","unclassified","is_enabled","predicate",
"Gripper_EPM","unclassified","Gripper_EPM::update_servobased","set",
"Gripper_EPM","unclassified","Gripper_EPM::update_from_demand","command",
"Gripper_EPM","unclassified","Gripper_EPM::update","command collaborator",
"Gripper_EPM","unclassified","Gripper_EPM::should_report","predicate wrapper",
"Gripper_EPM","unclassified","Gripper_EPM::tesla","property",
"ConsoleDevice","boundary","ConsoleDevice::ConsoleDevice","constructor",
"ConsoleDevice","boundary","ConsoleDevice::~ConsoleDevice","destructor",
"ConsoleDevice","boundary","ConsoleDevice::close","predicate set",
"ConsoleDevice","boundary","ConsoleDevice::open","predicate non-void-command",
"ConsoleDevice","boundary","ConsoleDevice::_set_signal_handlers","wrapper stateless",
"ConsoleDevice","boundary","ConsoleDevice::read","property wrapper",
"ConsoleDevice","boundary","ConsoleDevice::write","property wrapper",
"ConsoleDevice","boundary","ConsoleDevice::set_blocking","wrapper",
"ConsoleDevice","boundary","ConsoleDevice::set_speed","empty",
"Loweheiser","commander","update","wrapper stateless",
"Loweheiser","commander","Loweheiser::Loweheiser","constructor",
"Loweheiser","commander","Loweheiser::update","command",
"Loweheiser","commander","Loweheiser::maybe_send_heartbeat","set",
"Loweheiser","commander","Loweheiser::handle_message","command collaborator",
"Loweheiser","commander","Loweheiser::update_receive","command",
"Loweheiser","commander","Loweheiser::update_fuel_level","command",
"Loweheiser","commander","Loweheiser::update_send","command",
"SerialDevice","data-provider boundary degenerate","~SerialDevice","destructor",
"SerialDevice","data-provider boundary degenerate","get_flow_control","collaborator incidental",
"SerialDevice","data-provider boundary degenerate","set_flow_control","empty",
"SerialDevice","data-provider boundary degenerate","set_parity","empty",
"SerialDevice","data-provider boundary degenerate","SerialDevice::SerialDevice","constructor",
"SerialDevice","data-provider boundary degenerate","SerialDevice::init_sitl_pointer","wrapper stateless",
"SerialDevice","data-provider boundary degenerate","SerialDevice::corrupt_transfer","wrapper stateless",
"SerialDevice","data-provider boundary degenerate","SerialDevice::read_from_autopilot","property collaborator",
"SerialDevice","data-provider boundary degenerate","SerialDevice::write_to_autopilot","property collaborator",
"SerialDevice","data-provider boundary degenerate","SerialDevice::read_from_device","property collaborator",
"SerialDevice","data-provider boundary degenerate","SerialDevice::write_to_device","controller stateless",
"SerialDevice","data-provider boundary degenerate","SerialDevice::is_match_baud","wrapper stateless",
"AP_NMEA_Output","commander degenerate","AP_NMEA_Output","constructor",
"AP_NMEA_Output","commander degenerate","update","wrapper stateless",
"AP_NMEA_Output","commander degenerate","init","empty",
"AP_NMEA_Output","commander degenerate","init","wrapper stateless",
"AP_NMEA_Output","commander degenerate","init","wrapper stateless",
"AP_NMEA_Output","commander degenerate","AP_NMEA_Output::init","command",
"AP_NMEA_Output","commander degenerate","AP_NMEA_Output::update","unclassified",
"AP_RangeFinder_VL53L0X","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::AP_RangeFinder_VL53L0X","constructor",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::detect","controller stateless",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::check_id","predicate non-void-command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::get_SPAD_info","predicate non-void-command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::getSequenceStepEnables","void-accessor command collaborator",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::getVcselPulsePeriod","property non-void-command collaborator",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::timeoutMclksToMicroseconds","wrapper stateless",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::decodeTimeout","incidental",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::getSequenceStepTimeouts","void-accessor command collaborator",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::getMeasurementTimingBudget","property",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::timeoutMicrosecondsToMclks","wrapper stateless",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::encodeTimeout","incidental",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::setMeasurementTimingBudget","predicate",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::init","predicate non-void-command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::performSingleRefCalibration","predicate non-void-command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::start_continuous","unclassified",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::get_reading","predicate non-void-command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::write_register16","command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::write_register","command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::read_register","property non-void-command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::read_register16","property non-void-command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::update","command",
"AP_RangeFinder_VL53L0X","unclassified","AP_RangeFinder_VL53L0X::timer","command",
"ToneAlarm_SF","pure-controller degenerate small-class","ToneAlarm_SF::set_buzzer_tone","controller stateless",
"ToneAlarm_SF","pure-controller degenerate small-class","ToneAlarm_SF::init","incidental",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::RCOutput_AeroIO","constructor",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::~RCOutput_AeroIO","destructor",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::init","unclassified",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::set_freq","command",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::get_freq","get property",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::enable_ch","command",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::disable_ch","command",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::write","command",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::cork","set",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::push","command",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::read","get property non-void-command",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::read","void-accessor command",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::_hw_write","predicate non-void-command collaborator",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::_hw_read","property non-void-command collaborator",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::_usec_to_hw","incidental",
"RCOutput_AeroIO","unclassified","RCOutput_AeroIO::_hw_to_usec","incidental",
"AP_HAL::AnalogIn","degenerate","servorail_voltage","incidental",
"AP_HAL::AnalogIn","degenerate","power_status_flags","incidental",
"AP_HAL::AnalogIn","degenerate","accumulated_power_status_flags","incidental",
"AP_HAL::AnalogIn","degenerate","mcu_temperature","incidental",
"AP_HAL::AnalogIn","degenerate","mcu_voltage","incidental",
"AP_HAL::AnalogIn","degenerate","mcu_voltage_max","incidental",
"AP_HAL::AnalogIn","degenerate","mcu_voltage_min","incidental",
"AnalogIn_ADS1115","unclassified","board_voltage","incidental",
"AnalogIn_ADS1115","unclassified","AnalogIn_ADS1115::AnalogIn_ADS1115","constructor",
"AnalogIn_ADS1115","unclassified","AnalogIn_ADS1115::channel","get property set collaborator",
"AnalogIn_ADS1115","unclassified","AnalogIn_ADS1115::init","command",
"AnalogIn_ADS1115","unclassified","AnalogIn_ADS1115::_update","set collaborator",
"ModeFlowHold","degenerate","mode_number","collaborator incidental",
"ModeFlowHold","degenerate","requires_GPS","incidental",
"ModeFlowHold","degenerate","has_manual_throttle","incidental",
"ModeFlowHold","degenerate","allows_arming","collaborator incidental",
"ModeFlowHold","degenerate","is_autopilot","incidental",
"ModeFlowHold","degenerate","has_user_takeoff","incidental",
"ModeFlowHold","degenerate","allows_flip","incidental",
"ModeFlowHold","degenerate","name","incidental",
"ModeFlowHold","degenerate","name4","incidental",
"ModeFlowHold","degenerate","ModeFlowHold::ModeFlowHold","constructor",
"ModeFlowHold","degenerate","ModeFlowHold::init","predicate non-void-command",
"ModeFlowHold","degenerate","ModeFlowHold::flowhold_flow_to_angle","void-accessor command",
"ModeFlowHold","degenerate","ModeFlowHold::run","command collaborator",
"ModeFlowHold","degenerate","ModeFlowHold::update_height_estimate","command",
"NotchFilter","unclassified","center_freq_hz","get",
"NotchFilter","unclassified","sample_freq_hz","get",
"NotchFilter","unclassified","disable","set",
"NotchFilter","unclassified","reset","controller stateless",
"NotchFilter","unclassified","NotchFilter<T>::calculate_A_and_Q","wrapper stateless",
"NotchFilter","unclassified","NotchFilter<T>::init","unclassified",
"NotchFilter","unclassified","NotchFilter<T>::init_with_A_and_Q","command",
"NotchFilter","unclassified","NotchFilter<T>::apply","property non-void-command collaborator",
"NotchFilter","unclassified","NotchFilter<T>::reset","set",
"NotchFilter","unclassified","NotchFilter<T>::logging_frequency","property wrapper",
"AP_GPS_SIRF","unclassified","name","incidental",
"AP_GPS_SIRF","unclassified","AP_GPS_SIRF::AP_GPS_SIRF","constructor",
"AP_GPS_SIRF","unclassified","AP_GPS_SIRF::read","predicate non-void-command",
"AP_GPS_SIRF","unclassified","AP_GPS_SIRF::_parse_gps","predicate non-void-command",
"AP_GPS_SIRF","unclassified","AP_GPS_SIRF::_accumulate","set",
"AP_GPS_SIRF","unclassified","AP_GPS_SIRF::_detect","incidental",
"AP_GPS_SBF","unclassified","highest_supported_status","collaborator incidental",
"AP_GPS_SBF","unclassified","name","incidental",
"AP_GPS_SBF","unclassified","supports_mavlink_gps_rtk_message","incidental",
"AP_GPS_SBF","unclassified","get_lag","incidental",
"AP_GPS_SBF","unclassified","get_error_codes","predicate",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::AP_GPS_SBF","constructor",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::~AP_GPS_SBF","destructor",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::read","predicate non-void-command",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::logging_healthy","predicate controller",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::parse","predicate non-void-command",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::process_message","predicate non-void-command",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::broadcast_configuration_failure_reason","wrapper",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::is_configured","predicate",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::is_healthy","predicate",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::mount_disk","unclassified",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::unmount_disk","unclassified",
"AP_GPS_SBF","unclassified","AP_GPS_SBF::prepare_for_arming","predicate set",
"AP_Filter_params","empty","AP_Filter_params::AP_Filter_params","constructor",
"IOPacket","data-provider small-class","get_size","property",
"AP_GPS_NMEA","boundary","name","incidental",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::read","predicate non-void-command",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::_decode","predicate non-void-command",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::_parse_decimal_100","wrapper stateless",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::_parse_degrees","property wrapper",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::_have_new_message","predicate non-void-command",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::_term_complete","predicate non-void-command",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::parse_agrica_field","wrapper stateless",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::parse_uniheadinga_field","wrapper stateless",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::parse_versiona_field","wrapper",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::_detect","wrapper stateless",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::send_config","command",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::is_healthy","predicate wrapper",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::get_lag","wrapper stateless",
"AP_GPS_NMEA","boundary","AP_GPS_NMEA::Write_AP_Logger_Log_Startup_messages","wrapper",
"Plane","unclassified","gcs","get collaborator",
"Plane","unclassified","any_failsafe_triggered","predicate non-void-command",
"Plane","unclassified","get_speed_scaler","get",
"Plane","unclassified","get_log_bitmask","get collaborator",
"Plane","unclassified","get_log_structures","get collaborator",
"Plane","unclassified","get_mode","property",
"Plane","unclassified","current_mode_requires_mission","predicate",
"Plane","unclassified","Plane::get_scheduler_tasks","void-accessor wrapper",
"Plane","unclassified","Plane::ahrs_update","command",
"Plane","unclassified","Plane::update_speed_height","command",
"Plane","unclassified","Plane::update_compass","command",
"Plane","unclassified","Plane::update_logging10","command",
"Plane","unclassified","Plane::update_logging25","command",
"Plane","unclassified","Plane::afs_fs_check","command",
"Plane","unclassified","Plane::one_second_loop","command",
"Plane","unclassified","Plane::three_hz_loop","command",
"Plane","unclassified","Plane::compass_save","command",
"Plane","unclassified","Plane::airspeed_ratio_update","command collaborator",
"Plane","unclassified","Plane::update_GPS_50Hz","command",
"Plane","unclassified","Plane::update_GPS_10Hz","command",
"Plane","unclassified","Plane::update_control_mode","command",
"Plane","unclassified","Plane::update_fly_forward","command",
"Plane","unclassified","Plane::set_flight_stage","command collaborator",
"Plane","unclassified","Plane::update_alt","command",
"Plane","unclassified","Plane::update_flight_stage","command",
"Plane","unclassified","Plane::disarm_if_autoland_complete","command",
"Plane","unclassified","Plane::trigger_land_abort","predicate non-void-command",
"Plane","unclassified","Plane::tecs_hgt_afe","property non-void-command",
"Plane","unclassified","Plane::get_wp_distance_m","predicate",
"Plane","unclassified","Plane::get_wp_bearing_deg","predicate",
"Plane","unclassified","Plane::get_wp_crosstrack_error_m","predicate",
"Plane","unclassified","Plane::set_target_location","predicate controller",
"Plane","unclassified","Plane::get_target_location","predicate non-void-command collaborator",
"Plane","unclassified","Plane::update_target_location","predicate non-void-command collaborator",
"Plane","unclassified","Plane::set_velocity_match","predicate non-void-command collaborator",
"Plane","unclassified","Plane::set_land_descent_rate","predicate non-void-command",
"Plane","unclassified","Plane::is_landing","predicate",
"Plane","unclassified","Plane::is_taking_off","predicate",
"Plane","unclassified","Plane::get_osd_roll_pitch_rad","void-accessor",
"Plane","unclassified","Plane::update_current_loc","command",
"Plane","unclassified","Plane::flight_option_enabled","collaborator incidental",
"Plane","unclassified","Plane::precland_update","controller",
"Plane","unclassified","Plane::calc_speed_scaler","property non-void-command",
"Plane","unclassified","Plane::stick_mixing_enabled","predicate non-void-command",
"Plane","unclassified","Plane::stabilize_roll","unclassified",
"Plane","unclassified","Plane::stabilize_roll_get_roll_out","property non-void-command",
"Plane","unclassified","Plane::stabilize_pitch","command",
"Plane","unclassified","Plane::stabilize_pitch_get_pitch_out","property non-void-command",
"Plane","unclassified","Plane::stabilize_stick_mixing_fbw","command",
"Plane","unclassified","Plane::stabilize_yaw","command",
"Plane","unclassified","Plane::stabilize","command",
"Plane","unclassified","Plane::calc_throttle","command",
"Plane","unclassified","Plane::calc_nav_yaw_coordinated","property non-void-command",
"Plane","unclassified","Plane::calc_nav_yaw_course","property non-void-command",
"Plane","unclassified","Plane::calc_nav_yaw_ground","property non-void-command",
"Plane","unclassified","Plane::calc_nav_pitch","unclassified",
"Plane","unclassified","Plane::calc_nav_roll","command",
"Plane","unclassified","Plane::adjust_nav_pitch_throttle","set",
"Plane","unclassified","Plane::update_load_factor","command",
"Plane","unclassified","Plane::set_home_to_current_location","predicate non-void-command",
"Plane","unclassified","Plane::set_home","predicate non-void-command",
"Plane","unclassified","Plane::Log_Write_Attitude","command collaborator",
"Plane","unclassified","Plane::Log_Write_FullRate","command",
"Plane","unclassified","Plane::Log_Write_Control_Tuning","command collaborator",
"Plane","unclassified","Plane::Log_Write_OFG_Guided","command collaborator",
"Plane","unclassified","Plane::Log_Write_Nav_Tuning","command collaborator",
"Plane","unclassified","Plane::Log_Write_Status","command collaborator",
"Plane","unclassified","Plane::Log_Write_AETR","command collaborator",
"Plane","unclassified","Plane::Log_Write_RC","command",
"Plane","unclassified","Plane::Log_Write_Guided","command",
"Plane","unclassified","Plane::get_num_log_structures","property wrapper",
"Plane","unclassified","Plane::Log_Write_Vehicle_Startup_Messages","command",
"Plane","unclassified","Plane::load_parameters","command collaborator",
"Plane","unclassified","Plane::Plane","constructor",
"Plane","unclassified","Plane::adjust_altitude_target","command",
"Plane","unclassified","Plane::check_home_alt_change","unclassified",
"Plane","unclassified","Plane::setup_glide_slope","command",
"Plane","unclassified","Plane::get_RTL_altitude_cm","get property",
"Plane","unclassified","Plane::relative_ground_altitude","get property non-void-command",
"Plane","unclassified","Plane::relative_ground_altitude","property non-void-command",
"Plane","unclassified","Plane::set_target_altitude_current","command",
"Plane","unclassified","Plane::set_target_altitude_current_adjusted","command",
"Plane","unclassified","Plane::set_target_altitude_location","command collaborator",
"Plane","unclassified","Plane::relative_target_altitude_cm","property non-void-command",
"Plane","unclassified","Plane::change_target_altitude","command",
"Plane","unclassified","Plane::set_target_altitude_proportion","command",
"Plane","unclassified","Plane::constrain_target_altitude_location","wrapper stateless",
"Plane","unclassified","Plane::calc_altitude_error_cm","property non-void-command",
"Plane","unclassified","Plane::check_fbwb_altitude","command",
"Plane","unclassified","Plane::reset_offset_altitude","incidental",
"Plane","unclassified","Plane::set_offset_altitude_location","command collaborator",
"Plane","unclassified","Plane::above_location_current","predicate non-void-command collaborator",
"Plane","unclassified","Plane::setup_terrain_target_alt","command collaborator",
"Plane","unclassified","Plane::adjusted_altitude_cm","property non-void-command",
"Plane","unclassified","Plane::adjusted_relative_altitude_cm","property non-void-command",
"Plane","unclassified","Plane::mission_alt_offset","property",
"Plane","unclassified","Plane::height_above_target","property non-void-command",
"Plane","unclassified","Plane::lookahead_adjustment","property non-void-command",
"Plane","unclassified","Plane::rangefinder_correction","get property wrapper",
"Plane","unclassified","Plane::rangefinder_terrain_correction","void-accessor command",
"Plane","unclassified","Plane::rangefinder_height_update","command",
"Plane","unclassified","Plane::terrain_disabled","predicate non-void-command",
"Plane","unclassified","Plane::terrain_enabled_in_current_mode","predicate",
"Plane","unclassified","Plane::terrain_enabled_in_mode","predicate collaborator",
"Plane","unclassified","Plane::avoidance_adsb_update","command",
"Plane","unclassified","Plane::set_next_WP","command collaborator",
"Plane","unclassified","Plane::set_guided_WP","command collaborator",
"Plane","unclassified","Plane::update_home","predicate non-void-command collaborator",
"Plane","unclassified","Plane::set_home_persistently","predicate non-void-command collaborator",
"Plane","unclassified","Plane::start_command","predicate non-void-command collaborator",
"Plane","unclassified","Plane::verify_command","predicate non-void-command collaborator",
"Plane","unclassified","Plane::do_RTL","command",
"Plane","unclassified","Plane::calc_best_rally_or_home_location","property collaborator",
"Plane","unclassified","Plane::do_takeoff","command collaborator",
"Plane","unclassified","Plane::do_nav_wp","command collaborator",
"Plane","unclassified","Plane::do_land","command collaborator",
"Plane","unclassified","Plane::do_landing_vtol_approach","command collaborator",
"Plane","unclassified","Plane::loiter_set_direction_wp","collaborator incidental",
"Plane","unclassified","Plane::do_loiter_unlimited","command collaborator",
"Plane","unclassified","Plane::do_loiter_turns","collaborator",
"Plane","unclassified","Plane::do_loiter_time","collaborator",
"Plane","unclassified","Plane::do_continue_and_change_alt","command collaborator",
"Plane","unclassified","Plane::do_loiter_to_alt","collaborator",
"Plane","unclassified","Plane::verify_takeoff","predicate non-void-command",
"Plane","unclassified","Plane::verify_nav_wp","predicate non-void-command collaborator",
"Plane","unclassified","Plane::verify_loiter_unlim","predicate non-void-command collaborator",
"Plane","unclassified","Plane::verify_loiter_time","predicate",
"Plane","unclassified","Plane::verify_loiter_turns","predicate collaborator",
"Plane","unclassified","Plane::verify_loiter_to_alt","predicate collaborator",
"Plane","unclassified","Plane::verify_RTL","predicate non-void-command",
"Plane","unclassified","Plane::verify_continue_and_change_alt","predicate non-void-command",
"Plane","unclassified","Plane::do_wait_delay","command collaborator",
"Plane","unclassified","Plane::do_within_distance","set collaborator",
"Plane","unclassified","Plane::verify_wait_delay","predicate set",
"Plane","unclassified","Plane::verify_within_distance","predicate set",
"Plane","unclassified","Plane::do_loiter_at_location","set",
"Plane","unclassified","Plane::do_change_speed","predicate non-void-command collaborator",
"Plane","unclassified","Plane::do_change_speed","predicate non-void-command",
"Plane","unclassified","Plane::do_set_home","command collaborator",
"Plane","unclassified","Plane::start_command_callback","predicate non-void-command collaborator",
"Plane","unclassified","Plane::verify_command_callback","predicate non-void-command collaborator",
"Plane","unclassified","Plane::exit_mission_callback","command",
"Plane","unclassified","Plane::verify_landing_vtol_approach","predicate non-void-command collaborator",
"Plane","unclassified","Plane::verify_loiter_heading","predicate non-void-command collaborator",
"Plane","unclassified","Plane::get_wp_radius","get property",
"Plane","unclassified","Plane::do_nav_script_time","command collaborator",
"Plane","unclassified","Plane::verify_nav_script_time","predicate non-void-command collaborator",
"Plane","unclassified","Plane::nav_scripting_active","predicate non-void-command",
"Plane","unclassified","Plane::nav_script_time","predicate non-void-command collaborator",
"Plane","unclassified","Plane::nav_script_time_done","incidental",
"Plane","unclassified","Plane::set_target_throttle_rate_rpy","wrapper",
"Plane","unclassified","Plane::set_rudder_offset","incidental",
"Plane","unclassified","Plane::nav_scripting_enable","predicate non-void-command",
"Plane","unclassified","Plane::is_land_command","incidental",
"Plane","unclassified","Plane::in_auto_mission_id","predicate",
"Plane","unclassified","Plane::mode_from_mode_num","property collaborator",
"Plane","unclassified","Plane::autotune_start","command",
"Plane","unclassified","Plane::autotune_restore","command",
"Plane","unclassified","Plane::autotune_enable","command",
"Plane","unclassified","Plane::fly_inverted","predicate",
"Plane","unclassified","Plane::ekf_check","command",
"Plane","unclassified","Plane::ekf_over_threshold","predicate non-void-command",
"Plane","unclassified","Plane::failsafe_ekf_event","command",
"Plane","unclassified","Plane::failsafe_ekf_off_event","wrapper stateless",
"Plane","unclassified","Plane::failsafe_in_landing_sequence","predicate",
"Plane","unclassified","Plane::failsafe_short_on_event","command collaborator",
"Plane","unclassified","Plane::failsafe_long_on_event","command collaborator",
"Plane","unclassified","Plane::failsafe_short_off_event","command collaborator",
"Plane","unclassified","Plane::failsafe_long_off_event","collaborator",
"Plane","unclassified","Plane::handle_battery_failsafe","command",
"Plane","unclassified","Plane::failsafe_check","command collaborator",
"Plane","unclassified","Plane::fence_check","command collaborator",
"Plane","unclassified","Plane::fence_stickmixing","predicate",
"Plane","unclassified","Plane::in_fence_recovery","predicate",
"Plane","unclassified","Plane::update_is_flying_5Hz","command",
"Plane","unclassified","Plane::is_flying","predicate non-void-command",
"Plane","unclassified","Plane::crash_detection_update","command",
"Plane","unclassified","Plane::in_preLaunch_flight_stage","predicate non-void-command",
"Plane","unclassified","Plane::loiter_angle_reset","incidental",
"Plane","unclassified","Plane::loiter_angle_update","command",
"Plane","unclassified","Plane::navigate","command",
"Plane","unclassified","Plane::mode_auto_target_airspeed_cm","get property non-void-command",
"Plane","unclassified","Plane::calc_airspeed_errors","command",
"Plane","unclassified","Plane::calc_gndspeed_undershoot","command",
"Plane","unclassified","Plane::update_loiter_update_nav","command",
"Plane","unclassified","Plane::update_loiter","command",
"Plane","unclassified","Plane::update_fbwb_speed_height","command",
"Plane","unclassified","Plane::setup_turn_angle","command",
"Plane","unclassified","Plane::reached_loiter_target","predicate non-void-command",
"Plane","unclassified","Plane::parachute_check","command",
"Plane","unclassified","Plane::parachute_release","command",
"Plane","unclassified","Plane::parachute_manual_release","predicate non-void-command",
"Plane","unclassified","Plane::set_control_channels","command",
"Plane","unclassified","Plane::init_rc_in","command",
"Plane","unclassified","Plane::init_rc_out_main","command",
"Plane","unclassified","Plane::init_rc_out_aux","command",
"Plane","unclassified","Plane::rudder_arm_disarm_check","command",
"Plane","unclassified","Plane::read_radio","command",
"Plane","unclassified","Plane::rudder_input","property non-void-command",
"Plane","unclassified","Plane::control_failsafe","command",
"Plane","unclassified","Plane::trim_radio","command",
"Plane","unclassified","Plane::rc_throttle_value_ok","predicate",
"Plane","unclassified","Plane::rc_failsafe_active","predicate",
"Plane","unclassified","Plane::roll_in_expo","property wrapper",
"Plane","unclassified","Plane::pitch_in_expo","property wrapper",
"Plane","unclassified","Plane::rudder_in_expo","property wrapper",
"Plane","unclassified","Plane::throttle_at_zero","predicate",
"Plane","unclassified","Plane::allow_reverse_thrust","predicate",
"Plane","unclassified","Plane::have_reverse_thrust","predicate",
"Plane","unclassified","Plane::get_throttle_input","property",
"Plane","unclassified","Plane::get_adjusted_throttle_input","property",
"Plane","unclassified","Plane::read_rangefinder","command",
"Plane","unclassified","Plane::throttle_slew_limit","command collaborator",
"Plane","unclassified","Plane::suppress_throttle","predicate non-void-command",
"Plane","unclassified","Plane::channel_function_mixer","wrapper",
"Plane","unclassified","Plane::flaperon_update","wrapper stateless",
"Plane","unclassified","Plane::dspoiler_update","controller",
"Plane","unclassified","Plane::airbrake_update","command",
"Plane","unclassified","Plane::throttle_watt_limiter","void-accessor command",
"Plane","unclassified","Plane::apply_throttle_limits","property non-void-command",
"Plane","unclassified","Plane::set_throttle","command",
"Plane","unclassified","Plane::set_takeoff_expected","command",
"Plane","unclassified","Plane::set_servos_flaps","command",
"Plane","unclassified","Plane::set_landing_gear","command",
"Plane","unclassified","Plane::servos_twin_engine_mix","command",
"Plane","unclassified","Plane::force_flare","command",
"Plane","unclassified","Plane::set_servos","command",
"Plane","unclassified","Plane::landing_neutral_control_surface_servos","command collaborator",
"Plane","unclassified","Plane::indicate_waiting_for_rud_neutral_to_takeoff","command",
"Plane","unclassified","Plane::servos_output","command",
"Plane","unclassified","Plane::update_throttle_hover","command",
"Plane","unclassified","Plane::servos_auto_trim","command",
"Plane","unclassified","Plane::update_soaring","command",
"Plane","unclassified","Plane::init_ardupilot","command",
"Plane","unclassified","Plane::gcs_mode_enabled","wrapper stateless",
"Plane","unclassified","Plane::set_mode","predicate non-void-command collaborator",
"Plane","unclassified","Plane::set_mode","predicate non-void-command collaborator",
"Plane","unclassified","Plane::set_mode_by_number","predicate non-void-command collaborator",
"Plane","unclassified","Plane::check_long_failsafe","command",
"Plane","unclassified","Plane::check_short_failsafe","command",
"Plane","unclassified","Plane::startup_INS","command",
"Plane","unclassified","Plane::notify_mode","set collaborator",
"Plane","unclassified","Plane::should_log","predicate non-void-command",
"Plane","unclassified","Plane::throttle_percentage","property non-void-command",
"Plane","unclassified","Plane::auto_takeoff_check","predicate non-void-command",
"Plane","unclassified","Plane::takeoff_calc_roll","command",
"Plane","unclassified","Plane::takeoff_calc_pitch","command",
"Plane","unclassified","Plane::get_takeoff_pitch_min_cd","property non-void-command",
"Plane","unclassified","Plane::takeoff_tail_hold","get property non-void-command",
"Plane","unclassified","Plane::landing_gear_update","command",
"Plane","unclassified","Plane::check_takeoff_timeout","predicate non-void-command",
"Plane","unclassified","Plane::Plane","constructor",
"Plane","unclassified","Plane::liftCoeff","wrapper stateless",
"Plane","unclassified","Plane::dragCoeff","wrapper stateless",
"Plane","unclassified","Plane::getTorque","property wrapper",
"Plane","unclassified","Plane::getForce","property collaborator",
"Plane","unclassified","Plane::calculate_forces","void-accessor command collaborator",
"Plane","unclassified","Plane::update","command collaborator",
"AP_GPS_MSP","unclassified","name","incidental",
"AP_GPS_MSP","unclassified","AP_GPS_MSP::read","predicate set",
"AP_GPS_MSP","unclassified","AP_GPS_MSP::handle_msp","command collaborator",
"AP_GPS_MSP","unclassified","AP_GPS_MSP::get_lag","incidental",
"CRRCSim","commander boundary","CRRCSim::CRRCSim","constructor",
"CRRCSim","commander boundary","CRRCSim::send_servos_heli","command collaborator",
"CRRCSim","commander boundary","CRRCSim::send_servos_fixed_wing","command collaborator",
"CRRCSim","commander boundary","CRRCSim::send_servos","command collaborator",
"CRRCSim","commander boundary","CRRCSim::recv_fdm","command collaborator",
"CRRCSim","commander boundary","CRRCSim::update","command collaborator",
"NotifyDevice","degenerate","~NotifyDevice","destructor",
"NotifyDevice","degenerate","handle_led_control","empty",
"NotifyDevice","degenerate","play_tune","empty",
"NotifyDevice","degenerate","rgb_control","empty",
"NotifyDevice","degenerate","rgb_set_id","empty",
"NotifyDevice","degenerate","send_text_blocking","empty",
"NotifyDevice","degenerate","release_text","empty",
"FlightAxis","commander","FlightAxis::FlightAxis","constructor",
"FlightAxis","commander","FlightAxis::parse_reply","void-accessor set",
"FlightAxis","commander","FlightAxis::soap_request_start","predicate non-void-command",
"FlightAxis","commander","FlightAxis::soap_request_end","property non-void-command collaborator",
"FlightAxis","commander","FlightAxis::exchange_data","command collaborator",
"FlightAxis","commander","FlightAxis::update","command collaborator",
"FlightAxis","commander","FlightAxis::report_FPS","command",
"FlightAxis","commander","FlightAxis::socket_creator","command",
"AP_GPS_ExternalAHRS","unclassified","name","incidental",
"AP_GPS_ExternalAHRS","unclassified","AP_GPS_ExternalAHRS::read","predicate set",
"AP_GPS_ExternalAHRS","unclassified","AP_GPS_ExternalAHRS::handle_external","command collaborator",
"AP_GPS_ExternalAHRS","unclassified","AP_GPS_ExternalAHRS::get_lag","incidental",
"LR_MsgHandler_RBOH","boundary small-class","LR_MsgHandler_RBOH::process_message","wrapper",
"Util","boundary lazy-class degenerate","run_debug_shell","collaborator incidental",
"Util","boundary lazy-class degenerate","get_custom_log_directory","get",
"Util","boundary lazy-class degenerate","get_custom_terrain_directory","get",
"Util","boundary lazy-class degenerate","get_custom_storage_directory","get",
"Util","boundary lazy-class degenerate","set_custom_log_directory","set",
"Util","boundary lazy-class degenerate","set_custom_terrain_directory","set",
"Util","boundary lazy-class degenerate","set_custom_storage_directory","set",
"Util","boundary lazy-class degenerate","set_custom_defaults_path","set",
"Util","boundary lazy-class degenerate","get_custom_defaults_file","get",
"Util","boundary lazy-class degenerate","toneAlarm_init","predicate non-void-command",
"Util","boundary lazy-class degenerate","toneAlarm_set_buzzer_tone","command",
"Util","boundary lazy-class degenerate","AP_HAL::Util::vsnprintf","incidental",
"Util","boundary lazy-class degenerate","AP_HAL::Util::snprintf","property non-void-command",
"Util","boundary lazy-class degenerate","AP_HAL::Util::vsnprintf","wrapper stateless",
"Util","boundary lazy-class degenerate","AP_HAL::Util::set_soft_armed","command",
"Util","boundary lazy-class degenerate","Util::available_memory","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::malloc_type","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::free_type","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::allocate_heap_memory","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::std_realloc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::heap_realloc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::safety_switch_state","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::toneAlarm_init","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::toneAlarm_init","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::toneAlarm_set_buzzer_tone","controller stateless",
"Util","boundary lazy-class degenerate","Util::set_hw_rtc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::get_hw_rtc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::flash_bootloader","property non-void-command collaborator",
"Util","boundary lazy-class degenerate","Util::get_system_id","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::get_system_id_unformatted","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::was_watchdog_reset","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::thread_info","controller stateless",
"Util","boundary lazy-class degenerate","Util::dma_info","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::mem_info","controller stateless",
"Util","boundary lazy-class degenerate","Util::get_persistent_params","controller stateless",
"Util","boundary lazy-class degenerate","Util::load_persistent_params","controller stateless",
"Util","boundary lazy-class degenerate","Util::get_persistent_param_by_name","predicate",
"Util","boundary lazy-class degenerate","Util::apply_persistent_params","collaborator",
"Util","boundary lazy-class degenerate","Util::uart_info","controller stateless",
"Util","boundary lazy-class degenerate","Util::uart_log","controller stateless",
"Util","boundary lazy-class degenerate","Util::timer_info","controller stateless",
"Util","boundary lazy-class degenerate","Util::get_random_vals","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::get_true_random_vals","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::log_stack_info","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::last_crash_dump_size","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::last_crash_dump_ptr","property collaborator",
"Util","boundary lazy-class degenerate","Util::boot_to_dfu","controller stateless",
"Util","boundary lazy-class degenerate","Util::set_soft_armed","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::available_memory","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::malloc_type","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::free_type","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::allocate_heap_memory","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::heap_realloc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::std_realloc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::safety_switch_state","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::toneAlarm_init","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::toneAlarm_set_buzzer_tone","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::set_hw_rtc","empty",
"Util","boundary lazy-class degenerate","Util::get_hw_rtc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::flash_bootloader","collaborator incidental",
"Util","boundary lazy-class degenerate","Util::get_system_id","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::get_system_id_unformatted","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::was_watchdog_reset","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::thread_info","controller stateless",
"Util","boundary lazy-class degenerate","Util::init","command",
"Util","boundary lazy-class degenerate","Util::set_imu_temp","command",
"Util","boundary lazy-class degenerate","Util::set_imu_target_temp","command",
"Util","boundary lazy-class degenerate","Util::commandline_arguments","void-accessor",
"Util","boundary lazy-class degenerate","Util::get_hw_rtc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::set_hw_rtc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::is_chardev_node","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::available_memory","incidental",
"Util","boundary lazy-class degenerate","Util::get_system_id_unformatted","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::get_system_id","predicate non-void-command",
"Util","boundary lazy-class degenerate","Util::write_file","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::read_file","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::get_hw_arm32","property wrapper",
"Util","boundary lazy-class degenerate","Util::allocate_heap_memory","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::heap_realloc","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::get_random_vals","wrapper stateless",
"Util","boundary lazy-class degenerate","Util::parse_cpu_set","wrapper stateless",
"Util","boundary lazy-class degenerate","HALSITL::Util::get_hw_rtc","wrapper stateless",
"Util","boundary lazy-class degenerate","HALSITL::Util::get_system_id_unformatted","predicate non-void-command",
"Util","boundary lazy-class degenerate","HALSITL::Util::get_system_id","predicate non-void-command",
"Util","boundary lazy-class degenerate","HALSITL::Util::allocate_heap_memory","wrapper stateless",
"Util","boundary lazy-class degenerate","HALSITL::Util::heap_realloc","wrapper stateless",
"Util","boundary lazy-class degenerate","HALSITL::Util::safety_switch_state","wrapper stateless",
"Util","boundary lazy-class degenerate","HALSITL::Util::set_cmdline_parameters","controller stateless",
"Util","boundary lazy-class degenerate","HALSITL::Util::commandline_arguments","void-accessor",
"Util","boundary lazy-class degenerate","HALSITL::Util::get_random_vals","wrapper stateless",
"Util","boundary lazy-class degenerate","HALSITL::Util::uart_info","controller stateless",
"Util","boundary lazy-class degenerate","HALSITL::Util::uart_log","controller stateless",
"AC_HELI_PID","commander data-class small-class","AC_HELI_PID::AC_HELI_PID","constructor",
"AC_HELI_PID","commander data-class small-class","AC_HELI_PID::update_leaky_i","set",
"AP_Frsky_SPort","commander boundary degenerate","AP_Frsky_SPort","constructor",
"AP_Frsky_SPort","commander boundary degenerate","AP_Frsky_SPort::send","command",
"AP_Frsky_SPort","commander boundary degenerate","AP_Frsky_SPort::calc_gps_latlng","wrapper stateless",
"AP_Frsky_SPort","commander boundary degenerate","AP_Frsky_SPort::send_sport_frame","command",
"AP_Frsky_SPort","commander boundary degenerate","AP_Frsky_SPort::calc_sensor_id","wrapper stateless",
"AP_Frsky_SPort","commander boundary degenerate","AP_Frsky_SPort::prep_number","wrapper stateless",
"AP_Frsky_SPort","commander boundary degenerate","AP_Frsky_SPort::sport_telemetry_push","wrapper stateless",
"AP_Invensensev2_AuxiliaryBus","unclassified","AP_Invensensev2_AuxiliaryBus::AP_Invensensev2_AuxiliaryBus","constructor",
"AP_Invensensev2_AuxiliaryBus","unclassified","AP_Invensensev2_AuxiliaryBus::get_semaphore","property controller",
"AP_Invensensev2_AuxiliaryBus","unclassified","AP_Invensensev2_AuxiliaryBus::_instantiate_slave","property non-void-command collaborator",
"AP_Invensensev2_AuxiliaryBus","unclassified","AP_Invensensev2_AuxiliaryBus::_configure_slaves","controller",
"AP_Invensensev2_AuxiliaryBus","unclassified","AP_Invensensev2_AuxiliaryBus::_configure_periodic_read","property set collaborator",
"AP_Invensensev2_AuxiliaryBus","unclassified","AP_Invensensev2_AuxiliaryBus::register_periodic_callback","property controller",
"HALSITL::I2CDevice","commander","~I2CDevice","destructor",
"HALSITL::I2CDevice","commander","set_address","set",
"HALSITL::I2CDevice","commander","set_retries","set",
"HALSITL::I2CDevice","commander","set_speed","collaborator incidental",
"HALSITL::I2CDevice","commander","set_split_transfers","set",
"HALSITL::AnalogIn","degenerate small-class","board_voltage","incidental",
"AP_RCProtocol_Radio","small-class","AP_RCProtocol_Radio::update","command",
"AP_RCProtocol_Radio","small-class","AP_RCProtocol_Radio::start_bind","controller stateless",
"AC_PI_2D","unclassified","set_input","wrapper stateless",
"AC_PI_2D","unclassified","kP","get collaborator",
"AC_PI_2D","unclassified","kI","get collaborator",
"AC_PI_2D","unclassified","imax","property",
"AC_PI_2D","unclassified","filt_hz","property",
"AC_PI_2D","unclassified","get_filt_alpha","get",
"AC_PI_2D","unclassified","kP","command",
"AC_PI_2D","unclassified","kI","command",
"AC_PI_2D","unclassified","imax","command",
"AC_PI_2D","unclassified","get_integrator","get collaborator",
"AC_PI_2D","unclassified","set_integrator","set collaborator",
"AC_PI_2D","unclassified","set_integrator","command collaborator",
"AC_PI_2D","unclassified","AC_PI_2D::AC_PI_2D","constructor",
"AC_PI_2D","unclassified","AC_PI_2D::set_dt","set",
"AC_PI_2D","unclassified","AC_PI_2D::filt_hz","command",
"AC_PI_2D","unclassified","AC_PI_2D::set_input","set collaborator",
"AC_PI_2D","unclassified","AC_PI_2D::get_p","property collaborator",
"AC_PI_2D","unclassified","AC_PI_2D::get_i","get property set collaborator",
"AC_PI_2D","unclassified","AC_PI_2D::get_i_shrink","get property collaborator",
"AC_PI_2D","unclassified","AC_PI_2D::get_pi","property non-void-command collaborator",
"AC_PI_2D","unclassified","AC_PI_2D::reset_I","command",
"AC_PI_2D","unclassified","AC_PI_2D::load_gains","command",
"AC_PI_2D","unclassified","AC_PI_2D::save_gains","command",
"AC_PI_2D","unclassified","AC_PI_2D::operator()","command",
"AC_PI_2D","unclassified","AC_PI_2D::calc_filt_alpha","set",
"AC_WPNav_OA","data-provider","AC_WPNav_OA::AC_WPNav_OA","constructor",
"AC_WPNav_OA","data-provider","AC_WPNav_OA::get_oa_wp_destination","predicate wrapper",
"AC_WPNav_OA","data-provider","AC_WPNav_OA::set_wp_destination","predicate set",
"AC_WPNav_OA","data-provider","AC_WPNav_OA::get_wp_distance_to_destination","property",
"AC_WPNav_OA","data-provider","AC_WPNav_OA::get_wp_bearing_to_destination","property",
"AC_WPNav_OA","data-provider","AC_WPNav_OA::reached_wp_destination","predicate wrapper",
"AC_WPNav_OA","data-provider","AC_WPNav_OA::update_wpnav","predicate non-void-command collaborator",
"AP_IRLock_SITL","small-class","AP_IRLock_SITL::init","set",
"AP_IRLock_SITL","small-class","AP_IRLock_SITL::update","predicate non-void-command collaborator",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler","constructor",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::handle_command_long","command collaborator",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::handle_command","property non-void-command collaborator",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::handle_command_do_set_mode","wrapper stateless",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::send_command_ack","command collaborator",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::handle_command_preflight_calibration_baro","controller stateless",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::handle_command_do_fence_enable","controller stateless",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::handle_param_request_read","command collaborator",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::handle_param_set","command collaborator",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::handle_command_preflight_reboot","controller stateless",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::process_message","command collaborator",
"AP_Frsky_MAVliteMsgHandler","boundary","AP_Frsky_MAVliteMsgHandler::send_message","wrapper stateless",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints","constructor",
"MissionItemProtocol_Waypoints","boundary","mission_type","collaborator incidental",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::append_item","property non-void-command collaborator",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::clear_all_items","predicate non-void-command",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::complete","controller stateless",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::get_item","property non-void-command collaborator",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::item_count","property",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::max_items","property",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::replace_item","property non-void-command collaborator",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::timeout","command",
"MissionItemProtocol_Waypoints","boundary","MissionItemProtocol_Waypoints::truncate","command collaborator",
"VideoIn","boundary","init","empty",
"VideoIn","boundary","VideoIn::get_frame","predicate collaborator",
"VideoIn","boundary","VideoIn::put_frame","command collaborator",
"VideoIn","boundary","VideoIn::open_device","predicate non-void-command",
"VideoIn","boundary","VideoIn::allocate_buffers","predicate non-void-command",
"VideoIn","boundary","VideoIn::get_pixel_formats","controller",
"VideoIn","boundary","VideoIn::set_format","predicate controller",
"VideoIn","boundary","VideoIn::set_crop","predicate controller",
"VideoIn","boundary","VideoIn::prepare_capture","command",
"VideoIn","boundary","VideoIn::shrink_8bpp","incidental",
"VideoIn","boundary","VideoIn::crop_8bpp","incidental",
"VideoIn","boundary","VideoIn::yuyv_to_grey","incidental",
"VideoIn","boundary","VideoIn::_timeval_to_us","collaborator incidental",
"VideoIn","boundary","VideoIn::_queue_buffer","controller",
"VideoIn","boundary","VideoIn::_set_streaming","predicate wrapper",
"VideoIn","boundary","VideoIn::_dequeue_frame","predicate non-void-command collaborator",
"VideoIn","boundary","init","wrapper stateless",
"VideoIn","boundary","init","wrapper stateless",
"AC_P","unclassified","AC_P","constructor",
"AC_P","unclassified","operator()","command",
"AC_P","unclassified","kP","get collaborator",
"AC_P","unclassified","kP","get collaborator",
"AC_P","unclassified","kP","command",
"AC_P","unclassified","AC_P::get_p","property",
"AC_P","unclassified","AC_P::load_gains","command",
"AC_P","unclassified","AC_P::save_gains","command",
"ToyMode","boundary","enabled","predicate",
"ToyMode","boundary","get_throttle_mid","get",
"ToyMode","boundary","is_v2450_buttons","predicate",
"ToyMode","boundary","is_f412_buttons","predicate",
"ToyMode","boundary","ToyMode::ToyMode","constructor",
"ToyMode","boundary","ToyMode::update","command collaborator",
"ToyMode","boundary","ToyMode::set_and_remember_mode","predicate set collaborator",
"ToyMode","boundary","ToyMode::trim_update","set collaborator",
"ToyMode","boundary","ToyMode::action_arm","command",
"ToyMode","boundary","ToyMode::throttle_adjust","void-accessor controller",
"ToyMode","boundary","ToyMode::blink_update","command",
"ToyMode","boundary","ToyMode::handle_message","command collaborator",
"ToyMode","boundary","ToyMode::send_named_int","wrapper stateless",
"ToyMode","boundary","ToyMode::thrust_limiting","void-accessor set",
"ToyMode","boundary","ToyMode::load_test_run","controller",
"ToyMode","boundary","ToyMode::arm_check_compass","controller stateless",
"I2CDevice","degenerate","I2CDevice","constructor",
"I2CDevice","degenerate","~I2CDevice","destructor",
"I2CDevice","degenerate","set_split_transfers","empty",
"I2CDevice","degenerate","I2CDevice::I2CDevice","constructor",
"I2CDevice","degenerate","I2CDevice::~I2CDevice","destructor",
"I2CDevice","degenerate","I2CDevice::transfer","predicate non-void-command",
"I2CDevice","degenerate","I2CDevice::_transfer","controller stateless",
"I2CDevice","degenerate","I2CDevice::read_registers_multiple","incidental",
"I2CDevice","degenerate","I2CDevice::register_periodic_callback","controller stateless",
"I2CDevice","degenerate","I2CDevice::adjust_periodic_callback","controller stateless",
"I2CDevice","degenerate","I2CDevice::I2CDevice","constructor",
"I2CDevice","degenerate","I2CDevice::~I2CDevice","destructor",
"I2CDevice","degenerate","I2CDevice::transfer","controller stateless",
"I2CDevice","degenerate","I2CDevice::register_periodic_callback","controller stateless",
"I2CDevice","degenerate","I2CDevice::adjust_periodic_callback","controller stateless",
"I2CDevice","degenerate","I2CDevice::I2CDevice","constructor",
"I2CDevice","degenerate","I2CDevice::~I2CDevice","destructor",
"I2CDevice","degenerate","I2CDevice::transfer","predicate non-void-command",
"I2CDevice","degenerate","I2CDevice::read_registers_multiple","wrapper stateless",
"I2CDevice","degenerate","I2CDevice::get_semaphore","collaborator incidental",
"I2CDevice","degenerate","I2CDevice::register_periodic_callback","controller stateless",
"I2CDevice","degenerate","I2CDevice::adjust_periodic_callback","controller stateless",
"I2CDevice","degenerate","I2CDevice::I2CDevice","constructor",
"I2CDevice","degenerate","I2CDevice::transfer","predicate non-void-command",
"I2CDevice","degenerate","I2CDevice::_transfer","controller stateless",
"I2CDevice","degenerate","I2CDevice::read_registers_multiple","wrapper stateless",
"I2CDevice","degenerate","I2CDevice::get_semaphore","collaborator incidental",
"I2CDevice","degenerate","I2CDevice::register_periodic_callback","controller stateless",
"I2CDevice","degenerate","I2CDevice::adjust_periodic_callback","incidental",
"FunCallbacks","boundary degenerate small-class","setup","wrapper stateless",
"FunCallbacks","boundary degenerate small-class","loop","wrapper stateless",
"FunCallbacks","boundary degenerate small-class","HAL::FunCallbacks::FunCallbacks","constructor",
"WSPIDesc","empty","WSPIDesc","constructor",
"AP_Follow","boundary","enabled","get",
"AP_Follow","boundary","set_target_sysid","command",
"AP_Follow","boundary","get_target_sysid","property",
"AP_Follow","boundary","get_pos_p","get collaborator",
"AP_Follow","boundary","get_yaw_behave","property collaborator",
"AP_Follow","boundary","get_distance_to_target","get",
"AP_Follow","boundary","get_bearing_to_target","get",
"AP_Follow","boundary","get_last_update_ms","get",
"AP_Follow","boundary","option_is_enabled","predicate collaborator",
"AP_Follow","boundary","AP_Follow::AP_Follow","constructor",
"AP_Follow","boundary","AP_Follow::clear_offsets_if_required","set",
"AP_Follow","boundary","AP_Follow::get_target_location_and_velocity","predicate collaborator",
"AP_Follow","boundary","AP_Follow::get_target_dist_and_vel_ned","predicate non-void-command collaborator",
"AP_Follow","boundary","AP_Follow::get_target_heading_deg","predicate wrapper",
"AP_Follow","boundary","AP_Follow::should_handle_message","predicate collaborator",
"AP_Follow","boundary","AP_Follow::handle_msg","command collaborator",
"AP_Follow","boundary","AP_Follow::handle_global_position_int_message","predicate non-void-command collaborator",
"AP_Follow","boundary","AP_Follow::handle_follow_target_message","predicate non-void-command collaborator",
"AP_Follow","boundary","AP_Follow::Log_Write_FOLL","command collaborator",
"AP_Follow","boundary","AP_Follow::get_velocity_ned","predicate",
"AP_Follow","boundary","AP_Follow::init_offsets_if_required","command collaborator",
"AP_Follow","boundary","AP_Follow::get_offsets_ned","predicate collaborator",
"AP_Follow","boundary","AP_Follow::rotate_vector","controller stateless",
"AP_Follow","boundary","AP_Follow::clear_dist_and_bearing_to_target","command",
"AP_Follow","boundary","AP_Follow::get_target_location_and_velocity_ofs","predicate collaborator",
"AP_Follow","boundary","AP_Follow::have_target","predicate wrapper",
"FlashTest","boundary","FlashTest::flash_write","predicate wrapper",
"FlashTest","boundary","FlashTest::flash_read","predicate wrapper",
"FlashTest","boundary","FlashTest::flash_erase","predicate wrapper",
"FlashTest","boundary","FlashTest::flash_erase_ok","get",
"FlashTest","boundary","FlashTest::write","command",
"FlashTest","boundary","FlashTest::setup","controller stateless",
"FlashTest","boundary","FlashTest::loop","command",
"AP_Airspeed","unclassified","set_log_bit","set",
"AP_Airspeed","unclassified","set_calibration_enabled","set",
"AP_Airspeed","unclassified","get_airspeed","property",
"AP_Airspeed","unclassified","get_raw_airspeed","property",
"AP_Airspeed","unclassified","get_airspeed_ratio","get property",
"AP_Airspeed","unclassified","get_airspeed_ratio","property",
"AP_Airspeed","unclassified","get_temperature","predicate non-void-command",
"AP_Airspeed","unclassified","set_airspeed_ratio","controller",
"AP_Airspeed","unclassified","set_airspeed_ratio","command",
"AP_Airspeed","unclassified","use","predicate",
"AP_Airspeed","unclassified","force_disable_use","set",
"AP_Airspeed","unclassified","enabled","predicate",
"AP_Airspeed","unclassified","get_differential_pressure","property",
"AP_Airspeed","unclassified","healthy","predicate",
"AP_Airspeed","unclassified","last_update_ms","incidental",
"AP_Airspeed","unclassified","last_update_ms","property",
"AP_Airspeed","unclassified","get_primary","get",
"AP_Airspeed","unclassified","get_num_sensors","get",
"AP_Airspeed","unclassified","get_corrected_pressure","property",
"AP_Airspeed","unclassified","get_health_probability","incidental",
"AP_Airspeed","unclassified","get_health_probability","property",
"AP_Airspeed","unclassified","get_test_ratio","incidental",
"AP_Airspeed","unclassified","get_test_ratio","property",
"AP_Airspeed","unclassified","get_offset","get property",
"AP_Airspeed","unclassified","get_offset","property",
"AP_Airspeed","unclassified","AP_Airspeed::AP_Airspeed","constructor",
"AP_Airspeed","unclassified","AP_Airspeed::set_fixedwing_parameters","set collaborator",
"AP_Airspeed","unclassified","AP_Airspeed::add_backend","predicate non-void-command collaborator",
"AP_Airspeed","unclassified","AP_Airspeed::convert_per_instance","controller stateless",
"AP_Airspeed","unclassified","AP_Airspeed::init","command",
"AP_Airspeed","unclassified","AP_Airspeed::allocate","command",
"AP_Airspeed","unclassified","AP_Airspeed::get_pressure","property non-void-command",
"AP_Airspeed","unclassified","AP_Airspeed::get_temperature","get predicate non-void-command",
"AP_Airspeed","unclassified","AP_Airspeed::calibrate","unclassified",
"AP_Airspeed","unclassified","AP_Airspeed::update_calibration","command",
"AP_Airspeed","unclassified","AP_Airspeed::get_calibration_state","property collaborator",
"AP_Airspeed","unclassified","AP_Airspeed::read","command",
"AP_Airspeed","unclassified","AP_Airspeed::update","command",
"AP_Airspeed","unclassified","AP_Airspeed::handle_msp","command collaborator",
"AP_Airspeed","unclassified","AP_Airspeed::handle_external","command collaborator",
"AP_Airspeed","unclassified","AP_Airspeed::Log_Airspeed","command",
"AP_Airspeed","unclassified","AP_Airspeed::use","predicate",
"AP_Airspeed","unclassified","AP_Airspeed::all_healthy","predicate",
"AP_Airspeed","unclassified","AP_Airspeed::lib_enabled","predicate",
"AP_Airspeed","unclassified","AP_Airspeed::enabled","get predicate",
"AP_Airspeed","unclassified","AP_Airspeed::healthy","predicate",
"AP_Airspeed","unclassified","AP_Airspeed::get_airspeed","property",
"AP_Airspeed","unclassified","AP_Airspeed::get_raw_airspeed","property",
"AP_Airspeed","unclassified","AP_Airspeed::get_differential_pressure","property",
"AP_Airspeed","unclassified","AP_Airspeed::get_corrected_pressure","property",
"AP_Airspeed","unclassified","AP_Airspeed::get_hygrometer","get predicate",
"AP_Airspeed","unclassified","AP_Airspeed::update","empty",
"AP_Airspeed","unclassified","AP_Airspeed::get_temperature","incidental",
"AP_Airspeed","unclassified","AP_Airspeed::calibrate","empty",
"AP_Airspeed","unclassified","AP_Airspeed::get_calibration_state","collaborator incidental",
"AP_Airspeed","unclassified","AP_Airspeed::use","incidental",
"AP_Airspeed","unclassified","AP_Airspeed::enabled","incidental",
"AP_Airspeed","unclassified","AP_Airspeed::healthy","incidental",
"AP_Airspeed","unclassified","AP_Airspeed::get_airspeed","incidental",
"AP_Airspeed","unclassified","AP_Airspeed::get_differential_pressure","incidental",
"AP_Airspeed","unclassified","AP_Airspeed::handle_msp","empty",
"AP_Airspeed","unclassified","AP_Airspeed::all_healthy","incidental",
"AP_Airspeed","unclassified","AP_Airspeed::init","empty",
"AP_Airspeed","unclassified","AP_Airspeed::AP_Airspeed","constructor",
"AP_Airspeed","unclassified","AP_Airspeed::check_sensor_failures","command",
"AP_Airspeed","unclassified","AP_Airspeed::check_sensor_ahrs_wind_max_failures","controller",
"AP_Airspeed","unclassified","AP_Airspeed::update_calibration","command",
"AP_Airspeed","unclassified","AP_Airspeed::update_calibration","command",
"AP_Airspeed","unclassified","AP_Airspeed::send_airspeed_calibration","command collaborator",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::file_in_sysfs","wrapper stateless",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::open","property non-void-command",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::close","property collaborator",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::read","property controller",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::lseek","property controller",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::opendir","wrapper stateless",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::readdir","wrapper stateless",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::closedir","incidental",
"AP_Filesystem_Sys","data-provider boundary","AP_Filesystem_Sys::stat","property non-void-command collaborator",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::open","property non-void-command collaborator",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::close","property non-void-command",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::read","property non-void-command",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::lseek","property collaborator",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::stat","property non-void-command collaborator",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::check_file_name","wrapper stateless",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::get_item","controller stateless",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::get_num_items","controller stateless",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::write","property controller",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::all_zero","incidental",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::finish_upload","predicate non-void-command collaborator",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::finish_upload_mission","controller stateless",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::finish_upload_fence","controller stateless",
"AP_Filesystem_Mission","unclassified","AP_Filesystem_Mission::finish_upload_rally","controller stateless",
"MatrixN","entity boundary","MatrixN<T,N>::mult","set collaborator",
"MatrixN","entity boundary","MatrixN<T,N>::operator-=","property set collaborator",
"MatrixN","entity boundary","MatrixN<T,N>::operator+=","property set collaborator",
"MatrixN","entity boundary","MatrixN<T,N>::force_symmetry","command",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::open","property non-void-command",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::close","property non-void-command",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::read","property non-void-command collaborator",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::write","property non-void-command collaborator",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::fsync","property non-void-command",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::lseek","property non-void-command",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::stat","property non-void-command collaborator",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::unlink","property non-void-command",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::rename","property non-void-command",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::mkdir","wrapper stateless",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::opendir","property command collaborator",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::readdir","property non-void-command collaborator",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::closedir","property non-void-command",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::disk_free","wrapper stateless",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::disk_space","wrapper stateless",
"AP_Filesystem_ESP32","boundary","AP_Filesystem_ESP32::set_mtime","wrapper stateless",
"AC_CommandModel","data-provider","get_rate_tc","get",
"AC_CommandModel","data-provider","get_rate","get",
"AC_CommandModel","data-provider","get_expo","get",
"AC_CommandModel","data-provider","set_rate","command",
"AC_CommandModel","data-provider","AC_CommandModel::AC_CommandModel","constructor",
"AP_BattMonitor_SMBus","unclassified","~AP_BattMonitor_SMBus","destructor",
"AP_BattMonitor_SMBus","unclassified","has_cell_voltages","get",
"AP_BattMonitor_SMBus","unclassified","has_temperature","get",
"AP_BattMonitor_SMBus","unclassified","has_current","incidental",
"AP_BattMonitor_SMBus","unclassified","reset_remaining","incidental",
"AP_BattMonitor_SMBus","unclassified","get_capacity_scaler","incidental",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::AP_BattMonitor_SMBus","constructor",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::init","command",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::get_cycle_count","predicate",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::read","command",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::read_full_charge_capacity","unclassified",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::read_remaining_capacity","unclassified",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::read_temp","command",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::read_serial_number","set",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::read_cycle_count","set",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::read_word","predicate",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::read_block","property",
"AP_BattMonitor_SMBus","unclassified","AP_BattMonitor_SMBus::get_PEC","wrapper stateless",
"AP_MicroStrain","boundary","AP_MicroStrain::handle_byte","predicate non-void-command collaborator",
"AP_MicroStrain","boundary","AP_MicroStrain::valid_packet","controller stateless",
"AP_MicroStrain","boundary","AP_MicroStrain::handle_packet","property non-void-command collaborator",
"AP_MicroStrain","boundary","AP_MicroStrain::handle_imu","collaborator",
"AP_MicroStrain","boundary","AP_MicroStrain::handle_gnss","set collaborator",
"AP_MicroStrain","boundary","AP_MicroStrain::handle_filter","set collaborator",
"AP_MicroStrain","boundary","AP_MicroStrain::populate_vector3f","wrapper stateless",
"AP_MicroStrain","boundary","AP_MicroStrain::populate_quaternion","wrapper stateless",
"AP_MicroStrain","boundary","AP_MicroStrain::get_gnss_instance","incidental",
"PS_RPLidarA1","degenerate small-class","device_info_model","incidental",
"PS_RPLidarA1","degenerate small-class","max_range","incidental",
"AP_ExternalAHRS_VectorNav","unclassified","update","command",
"AP_ExternalAHRS_VectorNav","unclassified","num_gps_sensors","incidental",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::AP_ExternalAHRS_VectorNav","constructor",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::check_uart","predicate non-void-command",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::wait_register_responce","command",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::decode","predicate non-void-command",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::decode_latest_term","predicate wrapper",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::update_thread","command",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::get_name","get property",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::process_packet1","command collaborator",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::process_packet2","command",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::process_packet_VN_100","command collaborator",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::get_port","get property",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::healthy","predicate wrapper",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::initialised","predicate",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::pre_arm_check","predicate",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::get_filter_status","void-accessor collaborator",
"AP_ExternalAHRS_VectorNav","unclassified","AP_ExternalAHRS_VectorNav::send_status_report","collaborator",
"MovingBase","empty","MovingBase::MovingBase","constructor",
"AC_InputManager_Heli","unclassified","AC_InputManager_Heli","constructor",
"AC_InputManager_Heli","unclassified","set_use_stab_col","incidental",
"AC_InputManager_Heli","unclassified","set_stab_col_ramp","set",
"AC_InputManager_Heli","unclassified","AC_InputManager_Heli::get_pilot_desired_collective","property set",
"AC_InputManager_Heli","unclassified","AC_InputManager_Heli::parameter_check","predicate controller",
"AP_ADSB","boundary","set_stall_speed_cm","incidental",
"AP_ADSB","boundary","set_max_speed","incidental",
"AP_ADSB","boundary","set_is_auto_mode","incidental",
"AP_ADSB","boundary","set_is_flying","incidental",
"AP_ADSB","boundary","enabled","predicate",
"AP_ADSB","boundary","init_failed","get",
"AP_ADSB","boundary","healthy","predicate non-void-command",
"AP_ADSB","boundary","get_special_ICAO_target","property",
"AP_ADSB","boundary","set_special_ICAO_target","command",
"AP_ADSB","boundary","is_special_vehicle","predicate",
"AP_ADSB","boundary","ident_start","predicate non-void-command",
"AP_ADSB","boundary","AP_ADSB::AP_ADSB","constructor",
"AP_ADSB","boundary","AP_ADSB::init","command",
"AP_ADSB","boundary","AP_ADSB::check_startup","predicate non-void-command",
"AP_ADSB","boundary","AP_ADSB::detect_instance","set",
"AP_ADSB","boundary","AP_ADSB::get_type","property wrapper",
"AP_ADSB","boundary","AP_ADSB::is_valid_callsign","incidental",
"AP_ADSB","boundary","AP_ADSB::update","command collaborator",
"AP_ADSB","boundary","AP_ADSB::update","command collaborator",
"AP_ADSB","boundary","AP_ADSB::determine_furthest_aircraft","command",
"AP_ADSB","boundary","AP_ADSB::get_location","wrapper stateless",
"AP_ADSB","boundary","AP_ADSB::delete_vehicle","wrapper stateless",
"AP_ADSB","boundary","AP_ADSB::find_index","incidental",
"AP_ADSB","boundary","AP_ADSB::handle_adsb_vehicle","command collaborator",
"AP_ADSB","boundary","AP_ADSB::set_vehicle","command collaborator",
"AP_ADSB","boundary","AP_ADSB::send_adsb_vehicle","command collaborator",
"AP_ADSB","boundary","AP_ADSB::handle_out_cfg","controller stateless",
"AP_ADSB","boundary","AP_ADSB::handle_out_control","wrapper stateless",
"AP_ADSB","boundary","AP_ADSB::handle_transceiver_report","wrapper stateless",
"AP_ADSB","boundary","AP_ADSB::send_adsb_out_status","wrapper",
"AP_ADSB","boundary","AP_ADSB::genICAO","controller stateless",
"AP_ADSB","boundary","AP_ADSB::set_callsign","controller stateless",
"AP_ADSB","boundary","AP_ADSB::push_sample","command collaborator",
"AP_ADSB","boundary","AP_ADSB::next_sample","predicate non-void-command collaborator",
"AP_ADSB","boundary","AP_ADSB::handle_message","command collaborator",
"AP_ADSB","boundary","AP_ADSB::get_vehicle_by_ICAO","predicate collaborator",
"AP_ADSB","boundary","AP_ADSB::write_log","collaborator",
"AP_ADSB","boundary","AP_ADSB::convert_base_to_decimal","wrapper stateless",
"AP_ADSB","boundary","init","empty",
"AP_ADSB","boundary","init","wrapper stateless",
"AP_ADSB","boundary","init","wrapper stateless",
"AP_ExternalAHRS_InertialLabs","unclassified","update","command",
"AP_ExternalAHRS_InertialLabs","unclassified","get_name","incidental",
"AP_ExternalAHRS_InertialLabs","unclassified","num_gps_sensors","incidental",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::AP_ExternalAHRS_InertialLabs","constructor",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::re_sync","set",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::check_header","predicate collaborator",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::check_uart","predicate non-void-command",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::update_thread","command",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::get_port","get property",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::healthy","predicate wrapper",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::initialised","predicate",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::pre_arm_check","predicate",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::get_filter_status","void-accessor wrapper",
"AP_ExternalAHRS_InertialLabs","unclassified","AP_ExternalAHRS_InertialLabs::send_status_report","collaborator",
"AP_ESC_Telem","data-provider","get_telem_data","get collaborator",
"AP_ESC_Telem","data-provider","get_average_motor_rpm","property",
"AP_ESC_Telem","data-provider","get_average_motor_frequency_hz","property",
"AP_ESC_Telem","data-provider","get_average_motor_frequency_hz","property",
"AP_ESC_Telem","data-provider","get_last_telem_data_ms","get property",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::AP_ESC_Telem","constructor",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_average_motor_rpm","property",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_motor_frequencies_hz","property",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_active_esc_mask","property",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_num_active_escs","property",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::are_motors_running","predicate collaborator",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::is_telemetry_active","predicate",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_rpm","predicate",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_raw_rpm","predicate",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_temperature","predicate controller",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_motor_temperature","predicate controller",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_highest_motor_temperature","predicate",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_current","predicate controller",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_voltage","predicate controller",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_consumption_mah","predicate controller",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_usage_seconds","predicate controller",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::send_esc_telemetry_mavlink","collaborator",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::update_telem_data","unclassified",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::update_rpm","set collaborator",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::merge_edt2_status","wrapper stateless",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::merge_edt2_stress","wrapper stateless",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::update","command",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::rpm_data_within_timeout","incidental",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::was_rpm_data_ever_reported","collaborator incidental",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::set_rpm_scale","command",
"AP_ESC_Telem","data-provider","AP_ESC_Telem::get_singleton","get",
"AP_ESC_Telem","data-provider","update","wrapper stateless",
"AP_EFI_ThrLin","data-provider small-class","AP_EFI_ThrLin::AP_EFI_ThrLin","constructor",
"AP_EFI_ThrLin","data-provider small-class","AP_EFI_ThrLin::linearise_throttle","property",
"AP_EFI_Serial_MS","unclassified","AP_EFI_Serial_MS::AP_EFI_Serial_MS","constructor",
"AP_EFI_Serial_MS","unclassified","AP_EFI_Serial_MS::update","command",
"AP_EFI_Serial_MS","unclassified","AP_EFI_Serial_MS::read_incoming_realtime_data","predicate non-void-command",
"AP_EFI_Serial_MS","unclassified","AP_EFI_Serial_MS::send_request","command",
"AP_EFI_Serial_MS","unclassified","AP_EFI_Serial_MS::read_byte_CRC32","property non-void-command",
"AP_EFI_Serial_MS","unclassified","AP_EFI_Serial_MS::CRC32_compute_byte","wrapper stateless",
"AP_EFI_Scripting","lazy-class small-class","AP_EFI_Scripting::update","empty",
"AP_EFI_Scripting","lazy-class small-class","AP_EFI_Scripting::handle_scripting","predicate set collaborator",
"LR_MsgHandler_RWA3","pure-controller small-class","LR_MsgHandler_RWA3::process_message","controller",
"InertialLabs","commander data-class small-class","InertialLabs::InertialLabs","constructor",
"InertialLabs","commander data-class small-class","InertialLabs::send_packet","set",
"InertialLabs","commander data-class small-class","InertialLabs::update","set",
"AP_FETtecOneWire","unclassified","transmit","predicate non-void-command collaborator",
"AP_FETtecOneWire","unclassified","transmit_config_request","predicate non-void-command collaborator",
"AP_FETtecOneWire","unclassified","MessageUnion","constructor",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::AP_FETtecOneWire","constructor",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::init_uart","command",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::init","command",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::transmit","predicate non-void-command",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::transmit_config_request","predicate non-void-command",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::move_frame_source_in_receive_buffer","command",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::consume_bytes","set",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::buffer_contains_ok","predicate set",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::handle_message","void-accessor collaborator",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::handle_message_telem","void-accessor wrapper",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::read_data_from_uart","command",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::pack_fast_throttle_command","void-accessor wrapper",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::escs_set_values","command",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::pre_arm_check","predicate controller",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::configure_escs","command",
"AP_FETtecOneWire","unclassified","AP_FETtecOneWire::led_color","wrapper",
"AP_FETtecOneWire","unclassified","update","wrapper stateless",
"AP_FETtecOneWire","unclassified","init","empty",
"AP_FETtecOneWire","unclassified","init","wrapper stateless",
"AP_FETtecOneWire","unclassified","init","wrapper stateless",
"AP_EFI","unclassified","get_rpm","get",
"AP_EFI","unclassified","enabled","predicate",
"AP_EFI","unclassified","get_last_update_ms","get",
"AP_EFI","unclassified","get_backend","property collaborator",
"AP_EFI","unclassified","AP_EFI::AP_EFI","constructor",
"AP_EFI","unclassified","AP_EFI::init","set",
"AP_EFI","unclassified","AP_EFI::update","command",
"AP_EFI","unclassified","AP_EFI::is_healthy","predicate wrapper",
"AP_EFI","unclassified","AP_EFI::log_status","command",
"AP_EFI","unclassified","AP_EFI::send_mavlink_status","wrapper",
"AP_EFI","unclassified","AP_EFI::get_state","void-accessor wrapper",
"AP_EFI","unclassified","AP_EFI::handle_EFI_message","command collaborator",
"AP_EFI","unclassified","update","wrapper stateless",
"DroneCAN_sniffer","pure-controller degenerate","DroneCAN_sniffer::init","controller",
"DroneCAN_sniffer","pure-controller degenerate","DroneCAN_sniffer::loop","controller stateless",
"DroneCAN_sniffer","pure-controller degenerate","DroneCAN_sniffer::print_stats","controller stateless",
"DroneCAN_sniffer","pure-controller degenerate","DroneCAN_sniffer::DroneCAN_sniffer","constructor",
"DroneCAN_sniffer","pure-controller degenerate","DroneCAN_sniffer::~DroneCAN_sniffer","destructor",
"RC_Channels_Blimp","boundary degenerate","channel","property collaborator",
"RC_Channels_Blimp","boundary degenerate","RC_Channels_Blimp::flight_mode_channel_number","controller stateless",
"RC_Channels_Blimp","boundary degenerate","RC_Channels_Blimp::in_rc_failsafe","incidental",
"RC_Channels_Blimp","boundary degenerate","RC_Channels_Blimp::has_valid_input","incidental",
"RC_Channels_Blimp","boundary degenerate","RC_Channels_Blimp::get_arming_channel","collaborator incidental",
"AP_DEVO_Telem","commander lazy-class degenerate","AP_DEVO_Telem","constructor",
"AP_DEVO_Telem","commander lazy-class degenerate","AP_DEVO_Telem::init","empty",
"AP_DEVO_Telem","commander lazy-class degenerate","AP_DEVO_Telem::init","empty",
"AP_DEVO_Telem","commander lazy-class degenerate","AP_DEVO_Telem::init","empty",
"AP_DEVO_Telem","commander lazy-class degenerate","AP_DEVO_Telem::init","collaborator",
"AP_DEVO_Telem","commander lazy-class degenerate","AP_DEVO_Telem::gpsDdToDmsFormat","incidental",
"AP_DEVO_Telem","commander lazy-class degenerate","AP_DEVO_Telem::send_frames","command",
"AP_DEVO_Telem","commander lazy-class degenerate","AP_DEVO_Telem::tick","set",
"AP_DEVO_Telem","commander lazy-class degenerate","init","empty",
"AP_DEVO_Telem","commander lazy-class degenerate","init","wrapper stateless",
"AP_DEVO_Telem","commander lazy-class degenerate","init","wrapper stateless",
"AP_DDS_Type_Conversions","boundary degenerate small-class","AP_DDS_Type_Conversions::time_u64_micros","wrapper stateless",
"AC_CustomControl_Backend","degenerate small-class","AC_CustomControl_Backend","constructor",
"AC_CustomControl_Backend","degenerate small-class","~AC_CustomControl_Backend","destructor",
"AC_CustomControl_Backend","degenerate small-class","set_notch_sample_rate","empty",
"RF_Nooploop","degenerate small-class","RF_Nooploop::packet_for_alt","incidental",
"AC_AutoTune_Multi","unclassified","reset_vehicle_test_variables","empty",
"AC_AutoTune_Multi","unclassified","reset_update_gain_variables","empty",
"AC_AutoTune_Multi","unclassified","do_post_test_gcs_announcements","empty",
"AC_AutoTune_Multi","unclassified","updating_rate_ff_up_all","wrapper stateless",
"AC_AutoTune_Multi","unclassified","updating_max_gains_all","wrapper stateless",
"AC_AutoTune_Multi","unclassified","twitch_reverse_direction","predicate",
"AC_AutoTune_Multi","unclassified","Log_AutoTuneSweep","wrapper stateless",
"AC_AutoTune_Multi","unclassified","set_tune_sequence","command",
"AC_AutoTune_Multi","unclassified","get_axis_bitmask","get",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::AC_AutoTune_Multi","constructor",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::do_gcs_announcements","set",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::test_init","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::test_run","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::backup_gains_and_initialise","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::load_orig_gains","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::load_tuned_gains","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::load_intra_test_gains","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::load_test_gains","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::save_tuning_gains","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::report_final_gains","collaborator",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::report_axis_gains","wrapper stateless",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::twitching_test_rate","void-accessor command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::twitching_abort_rate","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::twitching_test_angle","void-accessor command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::twitching_measure_acceleration","void-accessor wrapper",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_rate_p_up_all","command collaborator",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_rate_d_up_all","command collaborator",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_rate_d_down_all","command collaborator",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_angle_p_up_all","command collaborator",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_angle_p_down_all","command collaborator",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::set_gains_post_tune","command collaborator",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_rate_d_up","void-accessor command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_rate_d_down","void-accessor command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_rate_p_up_d_down","void-accessor command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_angle_p_down","void-accessor command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::updating_angle_p_up","void-accessor command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::Log_AutoTune","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::Log_AutoTuneDetails","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::Log_Write_AutoTune","wrapper",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::Log_Write_AutoTuneDetails","wrapper stateless",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::target_angle_max_rp_cd","property",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::target_angle_max_y_cd","property",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::target_angle_min_rp_cd","property",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::target_angle_min_y_cd","property",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::angle_lim_max_rp_cd","property",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::angle_lim_neg_rpy_cd","property",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::twitch_test_init","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::twitch_test_run","command",
"AC_AutoTune_Multi","unclassified","AC_AutoTune_Multi::get_testing_step_timeout_ms","incidental",
"AP_OAVisGraph","unclassified","clear","set",
"AP_OAVisGraph","unclassified","num_items","get",
"AP_OAVisGraph","unclassified","operator[]","get collaborator",
"AP_OAVisGraph","unclassified","AP_OAVisGraph::AP_OAVisGraph","constructor",
"AP_OAVisGraph","unclassified","AP_OAVisGraph::add_item","predicate non-void-command",
"AP_ExternalAHRS_MicroStrain5","unclassified","update","command",
"AP_ExternalAHRS_MicroStrain5","unclassified","num_gps_sensors","incidental",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::AP_ExternalAHRS_MicroStrain5","constructor",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::update_thread","command",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::build_packet","command collaborator",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::post_imu","command collaborator",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::post_filter","command",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::get_port","get property",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::get_name","incidental",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::healthy","predicate wrapper",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::initialised","predicate",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::pre_arm_check","predicate",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::get_filter_status","void-accessor collaborator",
"AP_ExternalAHRS_MicroStrain5","unclassified","AP_ExternalAHRS_MicroStrain5::send_status_report","collaborator",
"AP_OAPathPlanner","boundary","get_options","get",
"AP_OAPathPlanner","boundary","AP_OAPathPlanner::AP_OAPathPlanner","constructor",
"AP_OAPathPlanner","boundary","AP_OAPathPlanner::init","command",
"AP_OAPathPlanner","boundary","AP_OAPathPlanner::pre_arm_check","predicate controller",
"AP_OAPathPlanner","boundary","AP_OAPathPlanner::start_thread","predicate set",
"AP_OAPathPlanner","boundary","AP_OAPathPlanner::map_bendytype_to_pathplannerused","collaborator incidental",
"AP_OAPathPlanner","boundary","AP_OAPathPlanner::mission_avoidance","property non-void-command collaborator",
"AP_OAPathPlanner","boundary","AP_OAPathPlanner::avoidance_thread","command collaborator",
"AP_OAPathPlanner","boundary","init","empty",
"AP_OAPathPlanner","boundary","init","wrapper stateless",
"AP_OAPathPlanner","boundary","init","wrapper stateless",
"AP_Airspeed_MS4525","unclassified","~AP_Airspeed_MS4525","destructor",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::AP_Airspeed_MS4525","constructor",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::probe","predicate non-void-command",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::init","predicate non-void-command",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::_measure","set",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::_get_pressure","wrapper stateless",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::_get_temperature","incidental",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::_collect","command",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::_voltage_correction","controller stateless",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::_timer","command",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::get_differential_pressure","predicate non-void-command",
"AP_Airspeed_MS4525","unclassified","AP_Airspeed_MS4525::get_temperature","predicate non-void-command",
"AuxiliaryBusSlave","empty","AuxiliaryBusSlave::AuxiliaryBusSlave","constructor",
"AuxiliaryBusSlave","empty","AuxiliaryBusSlave::~AuxiliaryBusSlave","destructor",
"Arming","data-class small-class","Arming","constructor",
"Arming","data-class small-class","arm","predicate set",
"AC_Avoid","unclassified","enabled","predicate",
"AC_Avoid","unclassified","adjust_velocity","command",
"AC_Avoid","unclassified","adjust_velocity_z","void-accessor command",
"AC_Avoid","unclassified","proximity_avoidance_enable","set",
"AC_Avoid","unclassified","proximity_avoidance_enabled","predicate",
"AC_Avoid","unclassified","proximity_alt_avoidance_enable","set",
"AC_Avoid","unclassified","get_margin","get",
"AC_Avoid","unclassified","get_min_alt","get",
"AC_Avoid","unclassified","limits_active","predicate wrapper",
"AC_Avoid","unclassified","AC_Avoid::AC_Avoid","constructor",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_fence","void-accessor command collaborator",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::limit_accel","void-accessor set collaborator",
"AC_Avoid","unclassified","AC_Avoid::adjust_speed","void-accessor command collaborator",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_z","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::adjust_roll_pitch","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::limit_velocity_2D","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::limit_velocity_3D","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::calc_backup_velocity_2D","command collaborator",
"AC_Avoid","unclassified","AC_Avoid::calc_backup_velocity_3D","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::find_max_quadrant_velocity","controller stateless",
"AC_Avoid","unclassified","AC_Avoid::find_max_quadrant_velocity_3D","void-accessor command collaborator",
"AC_Avoid","unclassified","AC_Avoid::get_max_speed","wrapper stateless",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_circle_fence","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_inclusion_and_exclusion_polygons","void-accessor command collaborator",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_inclusion_circles","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_exclusion_circles","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_beacon_fence","command",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_proximity","void-accessor command collaborator",
"AC_Avoid","unclassified","AC_Avoid::adjust_velocity_polygon","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::get_stopping_distance","wrapper stateless",
"AC_Avoid","unclassified","AC_Avoid::distance_to_lean_pct","property",
"AC_Avoid","unclassified","AC_Avoid::get_proximity_roll_pitch_pct","void-accessor command",
"AC_Avoid","unclassified","AC_Avoid::Write_SimpleAvoidance","wrapper stateless",
"AC_AttitudeControl_Multi","unclassified","~AC_AttitudeControl_Multi","destructor",
"AC_AttitudeControl_Multi","unclassified","get_rate_roll_pid","get collaborator",
"AC_AttitudeControl_Multi","unclassified","get_rate_pitch_pid","get collaborator",
"AC_AttitudeControl_Multi","unclassified","get_rate_yaw_pid","get collaborator",
"AC_AttitudeControl_Multi","unclassified","get_rate_roll_pid","get collaborator",
"AC_AttitudeControl_Multi","unclassified","get_rate_pitch_pid","get collaborator",
"AC_AttitudeControl_Multi","unclassified","get_rate_yaw_pid","get collaborator",
"AC_AttitudeControl_Multi","unclassified","set_throttle_mix_min","set",
"AC_AttitudeControl_Multi","unclassified","set_throttle_mix_man","set",
"AC_AttitudeControl_Multi","unclassified","set_throttle_mix_value","command",
"AC_AttitudeControl_Multi","unclassified","get_throttle_mix","get",
"AC_AttitudeControl_Multi","unclassified","is_throttle_mix_min","predicate",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::AC_AttitudeControl_Multi","constructor",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::update_althold_lean_angle_max","set",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::set_throttle_out","command",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::set_throttle_mix_max","set",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::get_throttle_boosted","property",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::get_throttle_avg_max","property non-void-command",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::update_throttle_gain_boost","command",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::update_throttle_rpy_mix","unclassified",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::rate_controller_run","command collaborator",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::parameter_sanity_check","command",
"AC_AttitudeControl_Multi","unclassified","AC_AttitudeControl_Multi::set_notch_sample_rate","command",
"Chirp","unclassified","get_frequency_rads","get",
"Chirp","unclassified","completed","get",
"Chirp","unclassified","Chirp::Chirp","constructor",
"Chirp","unclassified","Chirp::init","command",
"Chirp","unclassified","Chirp::update","get non-void-command",
"SRV_Channels","commander boundary","auto_trim_enabled","get",
"SRV_Channels","commander boundary","disable_passthrough","set",
"SRV_Channels","commander boundary","SRV_Channels::output_ch_all","command",
"SRV_Channels","commander boundary","SRV_Channels::channel_function","get property collaborator",
"SRV_Channels","commander boundary","SRV_Channels::update_aux_servo_function","command",
"SRV_Channels","commander boundary","SRV_Channels::enable_aux_servos","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_digital_outputs","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::enable_by_mask","controller stateless",
"SRV_Channels","commander boundary","SRV_Channels::set_output_pwm","command",
"SRV_Channels","commander boundary","SRV_Channels::set_output_pwm_trimmed","command",
"SRV_Channels","commander boundary","SRV_Channels::set_trim_to_servo_out_for","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::copy_radio_in_out","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::copy_radio_in_out_mask","controller",
"SRV_Channels","commander boundary","SRV_Channels::set_failsafe_pwm","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_failsafe_limit","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_output_limit","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::function_assigned","predicate non-void-command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::move_servo","command",
"SRV_Channels","commander boundary","SRV_Channels::set_aux_channel_default","predicate non-void-command",
"SRV_Channels","commander boundary","SRV_Channels::find_channel","predicate non-void-command",
"SRV_Channels","commander boundary","SRV_Channels::get_channel_for","property non-void-command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_output_scaled","wrapper stateless",
"SRV_Channels","commander boundary","SRV_Channels::get_output_scaled","wrapper stateless",
"SRV_Channels","commander boundary","SRV_Channels::get_slew_limited_output_scaled","property wrapper",
"SRV_Channels","commander boundary","SRV_Channels::get_output_channel_mask","get property non-void-command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_trim_to_pwm_for","controller",
"SRV_Channels","commander boundary","SRV_Channels::set_trim_to_min_for","controller",
"SRV_Channels","commander boundary","SRV_Channels::set_default_function","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_esc_scaling_for","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::adjust_trim","set",
"SRV_Channels","commander boundary","SRV_Channels::get_output_pwm","predicate non-void-command",
"SRV_Channels","commander boundary","SRV_Channels::set_output_to_trim","wrapper",
"SRV_Channels","commander boundary","SRV_Channels::get_output_norm","get property non-void-command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_output_norm","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_slew_rate","set collaborator",
"SRV_Channels","commander boundary","SRV_Channels::set_angle","wrapper",
"SRV_Channels","commander boundary","SRV_Channels::set_range","wrapper",
"SRV_Channels","commander boundary","SRV_Channels::set_output_min_max","wrapper",
"SRV_Channels","commander boundary","SRV_Channels::constrain_pwm","controller",
"SRV_Channels","commander boundary","SRV_Channels::upgrade_parameters","controller",
"SRV_Channels","commander boundary","SRV_Channels::set_rc_frequency","controller",
"SRV_Channels","commander boundary","SRV_Channels::SRV_Channels","constructor",
"SRV_Channels","commander boundary","SRV_Channels::init","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::save_trim","set",
"SRV_Channels","commander boundary","SRV_Channels::setup_failsafe_trim_all_non_motors","controller",
"SRV_Channels","commander boundary","SRV_Channels::calc_pwm","set",
"SRV_Channels","commander boundary","SRV_Channels::set_output_pwm_chan","wrapper",
"SRV_Channels","commander boundary","SRV_Channels::set_output_pwm_chan_timeout","set",
"SRV_Channels","commander boundary","SRV_Channels::cork","controller stateless",
"SRV_Channels","commander boundary","SRV_Channels::push","command collaborator",
"SRV_Channels","commander boundary","SRV_Channels::zero_rc_outputs","command",
"SRV_Channels","commander boundary","SRV_Channels::is_GPIO","predicate non-void-command",
"SRV_Channels","commander boundary","SRV_Channels::set_emergency_stop","set collaborator",
"LR_MsgHandler_RSO2","pure-controller small-class","LR_MsgHandler_RSO2::process_message","controller",
"ekf_ring_buffer","unclassified","ekf_ring_buffer::ekf_ring_buffer","constructor",
"ekf_ring_buffer","unclassified","ekf_ring_buffer::init","predicate non-void-command",
"ekf_ring_buffer","unclassified","ekf_ring_buffer::get_offset","property wrapper",
"ekf_ring_buffer","unclassified","ekf_ring_buffer::time_ms","property collaborator",
"ekf_ring_buffer","unclassified","ekf_ring_buffer::recall","predicate non-void-command",
"ekf_ring_buffer","unclassified","ekf_ring_buffer::push","command",
"ekf_ring_buffer","unclassified","ekf_ring_buffer::reset","command",
"ekf_ring_buffer","unclassified","reset","controller stateless",
"WebotsPython","commander boundary","WebotsPython::WebotsPython","constructor",
"WebotsPython","commander boundary","WebotsPython::set_interface_ports","command",
"WebotsPython","commander boundary","WebotsPython::send_servos","command collaborator",
"WebotsPython","commander boundary","WebotsPython::recv_fdm","command collaborator",
"WebotsPython","commander boundary","WebotsPython::drain_sockets","command collaborator",
"WebotsPython","commander boundary","WebotsPython::update","command collaborator",
"ModeQHover","degenerate","mode_number","collaborator incidental",
"ModeQHover","degenerate","name","incidental",
"ModeQHover","degenerate","name4","incidental",
"ModeQHover","degenerate","is_vtol_mode","incidental",
"ModeQHover","degenerate","is_vtol_man_mode","incidental",
"ModeQHover","degenerate","ModeQHover::_enter","controller stateless",
"ModeQHover","degenerate","ModeQHover::update","controller stateless",
"ModeQHover","degenerate","ModeQHover::run","controller stateless",
"SOCKET_CLASS_NAME","entity data-provider boundary","get_read_fd","property",
"SOCKET_CLASS_NAME","entity data-provider boundary","is_connected","get",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::SOCKET_CLASS_NAME","constructor",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::SOCKET_CLASS_NAME","constructor",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::~SOCKET_CLASS_NAME","destructor",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::make_sockaddr","void-accessor command collaborator",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::connect","predicate non-void-command collaborator",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::connect_timeout","get predicate collaborator",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::bind","predicate non-void-command collaborator",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::reuseaddress","predicate wrapper",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::set_blocking","predicate wrapper",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::set_cloexec","predicate wrapper",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::send","property wrapper",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::sendto","property non-void-command collaborator",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::recv","property collaborator",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::last_recv_address","void-accessor",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::last_recv_address","property",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::set_broadcast","wrapper",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::pollin","predicate non-void-command",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::pollout","predicate wrapper",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::listen","predicate wrapper",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::accept","property set",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::is_multicast_address","wrapper stateless",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::close","command",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::duplicate","property non-void-command",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::inet_addr_to_str","wrapper stateless",
"SOCKET_CLASS_NAME","entity data-provider boundary","SOCKET_CLASS_NAME::inet_str_to_addr","wrapper stateless",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF","constructor",
"AC_AttitudeControl_Multi_6DoF","unclassified","get_althold_lean_angle_max_cd","incidental",
"AC_AttitudeControl_Multi_6DoF","unclassified","set_offset_roll_pitch","command",
"AC_AttitudeControl_Multi_6DoF","unclassified","set_forward_enable","set",
"AC_AttitudeControl_Multi_6DoF","unclassified","set_lateral_enable","set",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::rate_controller_run","controller",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_euler_angle_roll_pitch_euler_rate_yaw","command",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_euler_angle_roll_pitch_yaw","command",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_thrust_vector_rate_heading","command collaborator",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_thrust_vector_heading","command collaborator",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::set_forward_lateral","void-accessor controller",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_euler_rate_yaw_euler_angle_pitch_bf_roll","controller stateless",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_euler_rate_roll_pitch_yaw","controller stateless",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_rate_bf_roll_pitch_yaw","controller stateless",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_rate_bf_roll_pitch_yaw_2","controller stateless",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_rate_bf_roll_pitch_yaw_3","controller stateless",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_angle_step_bf_roll_pitch_yaw","controller stateless",
"AC_AttitudeControl_Multi_6DoF","unclassified","AC_AttitudeControl_Multi_6DoF::input_quaternion","controller stateless",
"Menu","unclassified","Menu::Menu","copy-constructor",
"Menu","unclassified","Menu::_check_for_input","predicate non-void-command",
"Menu","unclassified","Menu::_display_prompt","command",
"Menu","unclassified","Menu::_run_command","predicate non-void-command",
"Menu","unclassified","Menu::run","command",
"Menu","unclassified","Menu::check_input","predicate",
"Menu","unclassified","Menu::_help","command",
"Menu","unclassified","Menu::_call","get wrapper",
"Menu","unclassified","Menu::set_limits","command",
"Menu","unclassified","Menu::_allocate_buffers","command",
"Test","small-class","Test::Test","constructor",
"Test","small-class","Test::~Test","destructor",
"Test","small-class","Test::require","set",
"Test","small-class","Test::report","controller",
"LR_MsgHandler_RBCI","boundary degenerate small-class","LR_MsgHandler_RBCI::process_message","wrapper stateless",
"AC_InputManager","commander data-class small-class","AC_InputManager","constructor",
"AC_InputManager","commander data-class small-class","set_loop_rate","set",
"AP_BattMonitor_DroneCAN","unclassified","init","empty",
"AP_BattMonitor_DroneCAN","unclassified","has_temperature","get",
"AP_BattMonitor_DroneCAN","unclassified","has_current","incidental",
"AP_BattMonitor_DroneCAN","unclassified","has_consumed_energy","incidental",
"AP_BattMonitor_DroneCAN","unclassified","has_time_remaining","get",
"AP_BattMonitor_DroneCAN","unclassified","has_cell_voltages","get",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::AP_BattMonitor_DroneCAN","constructor",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::subscribe_msgs","controller stateless",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::match_battery_id","wrapper stateless",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::get_dronecan_backend","property non-void-command",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::handle_battery_info","command collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::update_interim_state","command",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::handle_battery_info_aux","command collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::handle_mppt_stream","command collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::handle_battery_info_trampoline","command collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::handle_battery_info_aux_trampoline","command collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::handle_mppt_stream_trampoline","command collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::read","command",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::use_CAN_SoC","predicate wrapper",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::capacity_remaining_pct","predicate",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::reset_remaining","predicate non-void-command",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::get_cycle_count","predicate",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::mppt_check_powered_state","command",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::mppt_set_powered_state","collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::handle_outputEnable_response","collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::mppt_report_faults","command collaborator",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::mppt_fault_string","collaborator incidental",
"AP_BattMonitor_DroneCAN","unclassified","AP_BattMonitor_DroneCAN::get_mavlink_fault_bitmask","incidental",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::open","property wrapper",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::close","property wrapper",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::read","property wrapper",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::write","incidental",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::fsync","incidental",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::lseek","property wrapper",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::stat","wrapper stateless",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::unlink","incidental",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::mkdir","incidental",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::opendir","property wrapper",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::readdir","property wrapper",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::closedir","property wrapper",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::disk_free","incidental",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::disk_space","incidental",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::set_mtime","incidental",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::load_file","wrapper stateless",
"AP_Filesystem_ROMFS","data-provider boundary degenerate","AP_Filesystem_ROMFS::unload_file","wrapper stateless",
"AP_BattMonitor_LTC2946","commander","has_cell_voltages","incidental",
"AP_BattMonitor_LTC2946","commander","has_temperature","incidental",
"AP_BattMonitor_LTC2946","commander","has_current","incidental",
"AP_BattMonitor_LTC2946","commander","get_cycle_count","incidental",
"AP_BattMonitor_LTC2946","commander","AP_BattMonitor_LTC2946::init","command",
"AP_BattMonitor_LTC2946","commander","AP_BattMonitor_LTC2946::read","command",
"AP_BattMonitor_LTC2946","commander","AP_BattMonitor_LTC2946::read_word","predicate",
"AP_BattMonitor_LTC2946","commander","AP_BattMonitor_LTC2946::timer","command",
"B","empty","B","constructor",
"MultiCopter","commander boundary small-class","MultiCopter::MultiCopter","constructor",
"MultiCopter","commander boundary small-class","MultiCopter::calculate_forces","set collaborator",
"MultiCopter","commander boundary small-class","MultiCopter::update","command collaborator",
"ScriptingCANSensor","entity boundary","ScriptingCANSensor","constructor",
"ScriptingCANSensor","entity boundary","ScriptingCANSensor::write_frame","wrapper stateless",
"ScriptingCANSensor","entity boundary","ScriptingCANSensor::handle_frame","command collaborator",
"ScriptingCANSensor","entity boundary","ScriptingCANSensor::add_buffer","property set factory collaborator",
"UARTDriver","unclassified","UARTDriver","constructor",
"UARTDriver","unclassified","bw_in_bytes_per_second","incidental",
"UARTDriver","unclassified","get_baud_rate","get",
"UARTDriver","unclassified","AP_HAL::UARTDriver::begin","command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::begin","command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::lock_port","incidental",
"UARTDriver","unclassified","AP_HAL::UARTDriver::begin_locked","command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::write_locked","property non-void-command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::read_locked","property non-void-command collaborator",
"UARTDriver","unclassified","AP_HAL::UARTDriver::available_locked","property non-void-command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::write","property non-void-command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::write","property non-void-command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::write","property non-void-command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::read","property non-void-command collaborator",
"UARTDriver","unclassified","AP_HAL::UARTDriver::read","predicate non-void-command collaborator",
"UARTDriver","unclassified","AP_HAL::UARTDriver::read","property non-void-command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::available","property non-void-command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::end","command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::flush","command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::discard_input","predicate non-void-command",
"UARTDriver","unclassified","AP_HAL::UARTDriver::receive_time_constraint_us","wrapper stateless",
"UARTDriver","unclassified","AP_HAL::UARTDriver::flow_control_enabled","collaborator incidental",
"UARTDriver","unclassified","AP_HAL::UARTDriver::get_parity","incidental",
"UARTDriver","unclassified","AP_HAL::UARTDriver::log_stats","controller stateless",
"UARTDriver","unclassified","UARTDriver::UARTDriver","constructor",
"UARTDriver","unclassified","UARTDriver::uart_thread","command",
"UARTDriver","unclassified","UARTDriver::uart_rx_thread","command",
"UARTDriver","unclassified","UARTDriver::thread_rx_init","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::thread_init","controller stateless",
"UARTDriver","unclassified","UARTDriver::uart_thread_trampoline","controller stateless",
"UARTDriver","unclassified","UARTDriver::_begin","command",
"UARTDriver","unclassified","UARTDriver::dma_tx_allocate","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::dma_rx_enable","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::dma_tx_deallocate","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::rx_irq_cb","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::rxbuff_full_irq","controller stateless",
"UARTDriver","unclassified","UARTDriver::_end","command",
"UARTDriver","unclassified","UARTDriver::_flush","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::is_initialized","incidental",
"UARTDriver","unclassified","UARTDriver::tx_pending","predicate non-void-command",
"UARTDriver","unclassified","UARTDriver::get_usb_baud","property",
"UARTDriver","unclassified","UARTDriver::get_usb_parity","property",
"UARTDriver","unclassified","UARTDriver::_available","property non-void-command",
"UARTDriver","unclassified","UARTDriver::txspace","property non-void-command",
"UARTDriver","unclassified","UARTDriver::_discard_input","predicate non-void-command",
"UARTDriver","unclassified","UARTDriver::_read","property non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::_write","property non-void-command",
"UARTDriver","unclassified","UARTDriver::wait_timeout","predicate non-void-command",
"UARTDriver","unclassified","UARTDriver::tx_complete","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::write_pending_bytes_DMA","command",
"UARTDriver","unclassified","UARTDriver::write_pending_bytes_NODMA","command",
"UARTDriver","unclassified","UARTDriver::write_pending_bytes","command",
"UARTDriver","unclassified","UARTDriver::half_duplex_setup_tx","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::_rx_timer_tick","command",
"UARTDriver","unclassified","UARTDriver::fwd_otg2_serial","command",
"UARTDriver","unclassified","UARTDriver::read_bytes_NODMA","command",
"UARTDriver","unclassified","UARTDriver::_tx_timer_tick","command collaborator",
"UARTDriver","unclassified","UARTDriver::set_flow_control","command collaborator",
"UARTDriver","unclassified","UARTDriver::update_rts_line","non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::set_unbuffered_writes","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::configure_parity","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::set_stop_bits","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::receive_timestamp_update","non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::receive_time_constraint_us","property non-void-command",
"UARTDriver","unclassified","UARTDriver::set_pushpull","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::set_options","predicate non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::get_options","incidental",
"UARTDriver","unclassified","UARTDriver::uart_info","controller stateless",
"UARTDriver","unclassified","UARTDriver::set_CTS_pin","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::set_RTS_pin","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::disable_rxtx","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::vprintf","wrapper",
"UARTDriver","unclassified","UARTDriver::_begin","command collaborator",
"UARTDriver","unclassified","UARTDriver::_end","unclassified",
"UARTDriver","unclassified","UARTDriver::_flush","wrapper",
"UARTDriver","unclassified","UARTDriver::is_initialized","get",
"UARTDriver","unclassified","UARTDriver::tx_pending","predicate non-void-command",
"UARTDriver","unclassified","UARTDriver::_available","property non-void-command",
"UARTDriver","unclassified","UARTDriver::txspace","property non-void-command",
"UARTDriver","unclassified","UARTDriver::_read","property non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::_timer_tick","non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::read_data","non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::write_data","non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::_write","property non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::_discard_input","incidental",
"UARTDriver","unclassified","UARTDriver::_receive_timestamp_update","non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::receive_time_constraint_us","property non-void-command",
"UARTDriver","unclassified","Empty::UARTDriver::UARTDriver","constructor",
"UARTDriver","unclassified","Empty::UARTDriver::_begin","empty",
"UARTDriver","unclassified","Empty::UARTDriver::_end","empty",
"UARTDriver","unclassified","Empty::UARTDriver::_flush","empty",
"UARTDriver","unclassified","Empty::UARTDriver::is_initialized","incidental",
"UARTDriver","unclassified","Empty::UARTDriver::tx_pending","incidental",
"UARTDriver","unclassified","Empty::UARTDriver::_available","incidental",
"UARTDriver","unclassified","Empty::UARTDriver::txspace","incidental",
"UARTDriver","unclassified","Empty::UARTDriver::_discard_input","incidental",
"UARTDriver","unclassified","Empty::UARTDriver::_write","incidental",
"UARTDriver","unclassified","Empty::UARTDriver::_read","collaborator incidental",
"UARTDriver","unclassified","Empty::UARTDriver::uart_info","controller stateless",
"UARTDriver","unclassified","UARTDriver::UARTDriver","constructor",
"UARTDriver","unclassified","UARTDriver::set_device_path","incidental",
"UARTDriver","unclassified","UARTDriver::_begin","command",
"UARTDriver","unclassified","UARTDriver::_allocate_buffers","command",
"UARTDriver","unclassified","UARTDriver::_deallocate_buffers","command",
"UARTDriver","unclassified","UARTDriver::_parseDevicePath","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::_end","command",
"UARTDriver","unclassified","UARTDriver::_flush","empty",
"UARTDriver","unclassified","UARTDriver::is_initialized","incidental",
"UARTDriver","unclassified","UARTDriver::tx_pending","predicate non-void-command",
"UARTDriver","unclassified","UARTDriver::_available","property non-void-command",
"UARTDriver","unclassified","UARTDriver::txspace","property non-void-command",
"UARTDriver","unclassified","UARTDriver::_read","property non-void-command collaborator",
"UARTDriver","unclassified","UARTDriver::_discard_input","predicate non-void-command",
"UARTDriver","unclassified","UARTDriver::_write","property non-void-command",
"UARTDriver","unclassified","UARTDriver::_write_fd","controller stateless",
"UARTDriver","unclassified","UARTDriver::_read_fd","controller stateless",
"UARTDriver","unclassified","UARTDriver::_write_pending_bytes","predicate non-void-command",
"UARTDriver","unclassified","UARTDriver::_timer_tick","command",
"UARTDriver","unclassified","UARTDriver::configure_parity","controller stateless",
"UARTDriver","unclassified","UARTDriver::receive_time_constraint_us","property non-void-command",
"UARTDriver","unclassified","UARTDriver::bw_in_bytes_per_second","property",
"UARTDriver","unclassified","UARTDriver::_begin","command",
"UARTDriver","unclassified","UARTDriver::_end","empty",
"UARTDriver","unclassified","UARTDriver::_available","property non-void-command",
"UARTDriver","unclassified","UARTDriver::txspace","property non-void-command",
"UARTDriver","unclassified","UARTDriver::_read","controller stateless",
"UARTDriver","unclassified","UARTDriver::_discard_input","controller stateless",
"UARTDriver","unclassified","UARTDriver::_flush","command",
"UARTDriver","unclassified","UARTDriver::_write","property non-void-command",
"UARTDriver","unclassified","UARTDriver::_tcp_start_connection","controller stateless",
"UARTDriver","unclassified","UARTDriver::_tcp_start_client","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::_udp_start_client","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::_udp_start_multicast","command",
"UARTDriver","unclassified","UARTDriver::_uart_start_connection","command",
"UARTDriver","unclassified","UARTDriver::_check_connection","command",
"UARTDriver","unclassified","UARTDriver::_select_check","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::_set_nonblocking","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::set_unbuffered_writes","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::_check_reconnect","command",
"UARTDriver","unclassified","UARTDriver::read_from_async_csv","controller stateless",
"UARTDriver","unclassified","UARTDriver::handle_writing_from_writebuffer_to_device","command",
"UARTDriver","unclassified","UARTDriver::handle_reading_from_device_to_readbuffer","unclassified",
"UARTDriver","unclassified","UARTDriver::_timer_tick","command",
"UARTDriver","unclassified","UARTDriver::receive_time_constraint_us","property non-void-command",
"UARTDriver","unclassified","UARTDriver::get_system_outqueue_length","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::bw_in_bytes_per_second","wrapper stateless",
"UARTDriver","unclassified","UARTDriver::uart_info","controller stateless",
"UARTDriver","unclassified","HALSITL::UARTDriver::set_speed","wrapper stateless",
"UARTDriver","unclassified","HALSITL::UARTDriver::configure_parity","wrapper stateless",
"UARTDriver","unclassified","HALSITL::UARTDriver::set_stop_bits","wrapper stateless",
"AP_Baro_FBM320","unclassified","AP_Baro_FBM320::AP_Baro_FBM320","constructor",
"AP_Baro_FBM320","unclassified","AP_Baro_FBM320::probe","controller stateless",
"AP_Baro_FBM320","unclassified","AP_Baro_FBM320::read_calibration","predicate non-void-command",
"AP_Baro_FBM320","unclassified","AP_Baro_FBM320::init","predicate non-void-command",
"AP_Baro_FBM320","unclassified","AP_Baro_FBM320::calculate_PT","incidental",
"AP_Baro_FBM320","unclassified","AP_Baro_FBM320::timer","command",
"AP_Baro_FBM320","unclassified","AP_Baro_FBM320::update","command",
"LR_MsgHandler_RSO3","pure-controller small-class","LR_MsgHandler_RSO3::process_message","controller",
"ChibiOS::AnalogIn","data-provider data-class","board_voltage","get",
"ChibiOS::AnalogIn","data-provider data-class","servorail_voltage","get",
"ChibiOS::AnalogIn","data-provider data-class","power_status_flags","get",
"ChibiOS::AnalogIn","data-provider data-class","accumulated_power_status_flags","get",
"ChibiOS::AnalogIn","data-provider data-class","mcu_temperature","get",
"ChibiOS::AnalogIn","data-provider data-class","mcu_voltage","get",
"ChibiOS::AnalogIn","data-provider data-class","mcu_voltage_max","get",
"ChibiOS::AnalogIn","data-provider data-class","mcu_voltage_min","get",
"AP_Logger_File","unclassified","logging_started","predicate",
"AP_Logger_File","unclassified","AP_Logger_File::AP_Logger_File","constructor",
"AP_Logger_File","unclassified","AP_Logger_File::ensure_log_directory_exists","wrapper",
"AP_Logger_File","unclassified","AP_Logger_File::Init","command",
"AP_Logger_File","unclassified","AP_Logger_File::file_exists","wrapper stateless",
"AP_Logger_File","unclassified","AP_Logger_File::log_exists","predicate",
"AP_Logger_File","unclassified","AP_Logger_File::periodic_1Hz","command",
"AP_Logger_File","unclassified","AP_Logger_File::periodic_fullrate","wrapper stateless",
"AP_Logger_File","unclassified","AP_Logger_File::bufferspace_available","property non-void-command",
"AP_Logger_File","unclassified","AP_Logger_File::recent_open_error","predicate wrapper",
"AP_Logger_File","unclassified","AP_Logger_File::CardInserted","predicate",
"AP_Logger_File","unclassified","AP_Logger_File::disk_space_avail","property wrapper",
"AP_Logger_File","unclassified","AP_Logger_File::disk_space","property non-void-command",
"AP_Logger_File","unclassified","AP_Logger_File::dirent_to_log_num","predicate",
"AP_Logger_File","unclassified","AP_Logger_File::find_oldest_log","get property",
"AP_Logger_File","unclassified","AP_Logger_File::Prep_MinSpace","command",
"AP_Logger_File","unclassified","AP_Logger_File::_log_file_name_short","property wrapper",
"AP_Logger_File","unclassified","AP_Logger_File::_log_file_name_long","property wrapper",
"AP_Logger_File","unclassified","AP_Logger_File::_log_file_name","property",
"AP_Logger_File","unclassified","AP_Logger_File::_lastlog_file_name","property wrapper",
"AP_Logger_File","unclassified","AP_Logger_File::EraseAll","command",
"AP_Logger_File","unclassified","AP_Logger_File::WritesOK","predicate",
"AP_Logger_File","unclassified","AP_Logger_File::StartNewLogOK","predicate",
"AP_Logger_File","unclassified","AP_Logger_File::_WritePrioritisedBlock","predicate non-void-command",
"AP_Logger_File","unclassified","AP_Logger_File::find_last_log","property set",
"AP_Logger_File","unclassified","AP_Logger_File::_get_log_size","get property non-void-command collaborator",
"AP_Logger_File","unclassified","AP_Logger_File::_get_log_time","property non-void-command collaborator",
"AP_Logger_File","unclassified","AP_Logger_File::get_log_boundaries","void-accessor command",
"AP_Logger_File","unclassified","AP_Logger_File::get_log_data","property non-void-command",
"AP_Logger_File","unclassified","AP_Logger_File::get_log_info","void-accessor command",
"AP_Logger_File","unclassified","AP_Logger_File::get_num_logs","property non-void-command",
"AP_Logger_File","unclassified","AP_Logger_File::stop_logging","unclassified",
"AP_Logger_File","unclassified","AP_Logger_File::PrepForArming_start_logging","unclassified",
"AP_Logger_File","unclassified","AP_Logger_File::start_new_log","command",
"AP_Logger_File","unclassified","AP_Logger_File::write_lastlog_file","predicate non-void-command collaborator",
"AP_Logger_File","unclassified","AP_Logger_File::flush","command",
"AP_Logger_File","unclassified","AP_Logger_File::io_timer","command",
"AP_Logger_File","unclassified","AP_Logger_File::io_thread_alive","predicate controller",
"AP_Logger_File","unclassified","AP_Logger_File::logging_failed","predicate",
"AP_Logger_File","unclassified","AP_Logger_File::erase_next","command",
"GCS_MAVLINK_Plane","degenerate","log_radio_bit","incidental",
"GCS_MAVLINK_Plane","degenerate","persist_streamrates","incidental",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::base_mode","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::vehicle_system_status","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_attitude","controller",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_attitude_target","controller",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_aoa_ssa","controller",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_nav_controller_output","controller",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_position_target_global_int","controller",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::vfr_hud_airspeed","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::vfr_hud_throttle","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::vfr_hud_climbrate","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_wind","controller",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_pid_info","wrapper",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_pid_tuning","command collaborator",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::sysid_my_gcs","incidental",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::sysid_enforce","incidental",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::telem_delay","incidental",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::try_send_message","predicate non-void-command collaborator",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::send_hygrometer","set",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_guided_request","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_change_alt_request","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_landing_target","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_command_preflight_calibration","wrapper stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::packetReceived","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_command_int_do_reposition","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_command_int_guided_slew_commands","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_command_int_packet","property non-void-command collaborator",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_command_DO_CHANGE_SPEED","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::convert_MAV_CMD_NAV_TAKEOFF_to_COMMAND_INT","collaborator incidental",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::convert_COMMAND_LONG_to_COMMAND_INT","command collaborator",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_command_MAV_CMD_NAV_TAKEOFF","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_MAV_CMD_DO_AUTOTUNE_ENABLE","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_MAV_CMD_DO_PARACHUTE","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_MAV_CMD_DO_MOTOR_TEST","property controller",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_command_DO_VTOL_TRANSITION","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_manual_control_axes","wrapper stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_message","command collaborator",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_set_attitude_target","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_set_position_target_local_ned","wrapper stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_set_position_target_global_int","command collaborator",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_command_do_set_mission_current","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::handle_mission_set_current","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::capabilities","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::high_latency_target_altitude","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::high_latency_tgt_heading","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::high_latency_tgt_dist","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::high_latency_tgt_airspeed","incidental",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::high_latency_wind_speed","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::high_latency_wind_direction","wrapper stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::vtol_state","controller stateless",
"GCS_MAVLINK_Plane","degenerate","GCS_MAVLINK_Plane::landed_state","controller stateless",
"AP_EFI_Currawong_ECU","entity boundary small-class","AP_EFI_Currawong_ECU::AP_EFI_Currawong_ECU","constructor",
"AP_EFI_Currawong_ECU","entity boundary small-class","AP_EFI_Currawong_ECU::update","wrapper stateless",
"AP_EFI_Currawong_ECU","entity boundary small-class","AP_EFI_Currawong_ECU::handle_message","predicate non-void-command collaborator",
"Radio_Beken","commander","lock_bus","predicate non-void-command",
"Radio_Beken","commander","unlock_bus","command",
"Radio_Beken","commander","Radio_Beken::Radio_Beken","constructor",
"Radio_Beken","commander","Radio_Beken::ResetAddress","command",
"Radio_Beken","commander","Radio_Beken::ReadRegisterMulti","command",
"Radio_Beken","commander","Radio_Beken::WriteRegisterMulti","command",
"Radio_Beken","commander","Radio_Beken::ReadStatus","property non-void-command",
"Radio_Beken","commander","Radio_Beken::ReadReg","property non-void-command",
"Radio_Beken","commander","Radio_Beken::Strobe","property non-void-command",
"Radio_Beken","commander","Radio_Beken::SetRBank","command",
"Radio_Beken","commander","Radio_Beken::WriteReg","command",
"Radio_Beken","commander","Radio_Beken::WriteRegisterMultiBank1","command",
"Radio_Beken","commander","Radio_Beken::SetPower","command",
"Radio_Beken","commander","Radio_Beken::SetChannel","set",
"Radio_Beken","commander","Radio_Beken::SetCwMode","command",
"Radio_Beken","commander","Radio_Beken::SetCrcMode","command",
"Radio_Beken","commander","Radio_Beken::EnableCarrierDetect","command",
"Radio_Beken","commander","Radio_Beken::CarrierDetect","predicate non-void-command",
"Radio_Beken","commander","Radio_Beken::SetFactoryMode","command",
"Radio_Beken","commander","Radio_Beken::Reset","controller stateless",
"Radio_Beken","commander","Radio_Beken::DelayCE","controller stateless",
"Radio_Beken","commander","Radio_Beken::WasTxMode","predicate",
"Radio_Beken","commander","Radio_Beken::WasRxMode","predicate",
"Radio_Beken","commander","Radio_Beken::SwitchToRxMode","unclassified",
"Radio_Beken","commander","Radio_Beken::SwitchToTxMode","unclassified",
"Radio_Beken","commander","Radio_Beken::SwitchToIdleMode","unclassified",
"Radio_Beken","commander","Radio_Beken::SwitchToSleepMode","unclassified",
"Radio_Beken","commander","Radio_Beken::InitBank0Registers","command collaborator",
"Radio_Beken","commander","Radio_Beken::InitBank1Registers","command collaborator",
"Radio_Beken","commander","Radio_Beken::SetAddresses","command",
"Radio_Beken","commander","Radio_Beken::ClearAckOverflow","predicate non-void-command",
"Radio_Beken","commander","Radio_Beken::SendPacket","predicate",
"Radio_Beken","commander","Radio_Beken::DumpRegisters","command",
"LR_MsgHandler_RISI","boundary degenerate small-class","LR_MsgHandler_RISI::process_message","wrapper stateless",
"SerialProximitySensor","unclassified","SerialProximitySensor","constructor",
"SerialProximitySensor","unclassified","reading_interval_ms","incidental",
"SerialProximitySensor","unclassified","measure_distance_at_angle_bf","property",
"SerialProximitySensor","unclassified","SerialProximitySensor::update","set collaborator",
"ChibiOS::RCInput","data-provider data-class","get_rssi","get",
"ChibiOS::RCInput","data-provider data-class","get_rx_link_quality","get",
"ChibiOS::RCInput","data-provider data-class","protocol","get",
"NotchHelper","pure-controller degenerate small-class","print_transfer_function","controller stateless",
"SerialOptionsDev","empty","SerialOptionsDev::SerialOptionsDev","constructor",
"AP_YawController","unclassified","enabled","predicate",
"AP_YawController","unclassified","rate_control_enabled","predicate",
"AP_YawController","unclassified","decay_I","set",
"AP_YawController","unclassified","get_pid_info","get collaborator",
"AP_YawController","unclassified","set_notch_sample_rate","command",
"AP_YawController","unclassified","AP_YawController::AP_YawController","constructor",
"AP_YawController","unclassified","AP_YawController::get_servo_out","property non-void-command",
"AP_YawController","unclassified","AP_YawController::get_rate_out","property non-void-command",
"AP_YawController","unclassified","AP_YawController::reset_I","command",
"AP_YawController","unclassified","AP_YawController::reset_rate_PID","command",
"AP_YawController","unclassified","AP_YawController::autotune_start","command",
"AP_YawController","unclassified","AP_YawController::autotune_restore","command",
"AP_InertialSensor","data-provider","get_gyro","get collaborator",
"AP_InertialSensor","data-provider","get_gyro","property collaborator",
"AP_InertialSensor","data-provider","get_gyro_offsets","wrapper stateless",
"AP_InertialSensor","data-provider","get_gyro_offsets","property collaborator",
"AP_InertialSensor","data-provider","get_delta_angle","predicate",
"AP_InertialSensor","data-provider","get_delta_velocity","predicate",
"AP_InertialSensor","data-provider","get_accel","get collaborator",
"AP_InertialSensor","data-provider","get_accel","property collaborator",
"AP_InertialSensor","data-provider","get_gyro_health","predicate",
"AP_InertialSensor","data-provider","get_gyro_health","predicate",
"AP_InertialSensor","data-provider","get_gyro_count","property wrapper",
"AP_InertialSensor","data-provider","gyro_calibrated_ok","get",
"AP_InertialSensor","data-provider","get_accel_health","predicate",
"AP_InertialSensor","data-provider","get_accel_health","predicate",
"AP_InertialSensor","data-provider","get_accel_count","property wrapper",
"AP_InertialSensor","data-provider","get_gyro_rate_hz","property wrapper",
"AP_InertialSensor","data-provider","get_accel_rate_hz","property wrapper",
"AP_InertialSensor","data-provider","get_gyro_for_fft","get collaborator",
"AP_InertialSensor","data-provider","get_raw_gyro_window","get collaborator",
"AP_InertialSensor","data-provider","get_raw_gyro_window","property non-void-command collaborator",
"AP_InertialSensor","data-provider","get_raw_gyro_rate_hz","property",
"AP_InertialSensor","data-provider","get_raw_gyro_rate_hz","get",
"AP_InertialSensor","data-provider","get_accel_offsets","wrapper stateless",
"AP_InertialSensor","data-provider","get_accel_offsets","property collaborator",
"AP_InertialSensor","data-provider","get_accel_scale","wrapper stateless",
"AP_InertialSensor","data-provider","get_accel_scale","property collaborator",
"AP_InertialSensor","data-provider","get_imu_pos_offset","wrapper stateless",
"AP_InertialSensor","data-provider","get_imu_pos_offset","property wrapper",
"AP_InertialSensor","data-provider","get_temperature","get",
"AP_InertialSensor","data-provider","get_delta_time","property wrapper",
"AP_InertialSensor","data-provider","get_gyro_drift_rate","wrapper stateless",
"AP_InertialSensor","data-provider","set_board_orientation","set collaborator",
"AP_InertialSensor","data-provider","get_loop_rate_hz","get",
"AP_InertialSensor","data-provider","get_loop_delta_t","get",
"AP_InertialSensor","data-provider","healthy","predicate",
"AP_InertialSensor","data-provider","get_primary_accel","get",
"AP_InertialSensor","data-provider","get_primary_gyro","get",
"AP_InertialSensor","data-provider","get_gyro_filter_hz","get",
"AP_InertialSensor","data-provider","get_accel_filter_hz","get",
"AP_InertialSensor","data-provider","set_log_raw_bit","set",
"AP_InertialSensor","data-provider","get_vibration_levels","property collaborator",
"AP_InertialSensor","data-provider","get_auxiliary_bus","property non-void-command collaborator",
"AP_InertialSensor","data-provider","get_accel_peak_hold_neg_x","incidental",
"AP_InertialSensor","data-provider","get_acal","get collaborator",
"AP_InertialSensor","data-provider","accel_cal_requires_reboot","get",
"AP_InertialSensor","data-provider","get_last_update_usec","get",
"AP_InertialSensor","data-provider","_acal_get_calibrator","property non-void-command collaborator",
"AP_InertialSensor","data-provider","tcal_instance","property collaborator",
"AP_InertialSensor","data-provider","tcal_instance","wrapper stateless",
"AP_InertialSensor","data-provider","raw_logging_option_set","predicate collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::AP_InertialSensor","constructor",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_singleton","get set",
"AP_InertialSensor","data-provider","AP_InertialSensor::register_gyro","predicate non-void-command",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_accel_instance","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_gyro_instance","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::register_accel","predicate non-void-command",
"AP_InertialSensor","data-provider","AP_InertialSensor::_start_backends","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::_find_backend","get property wrapper",
"AP_InertialSensor","data-provider","AP_InertialSensor::set_gyro_window_size","predicate set",
"AP_InertialSensor","data-provider","AP_InertialSensor::has_fft_notch","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::init","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::_add_backend","predicate non-void-command collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::detect_backends","unclassified",
"AP_InertialSensor","data-provider","AP_InertialSensor::periodic","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::_calculate_trim","controller stateless",
"AP_InertialSensor","data-provider","AP_InertialSensor::init_gyro","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_output_banner","get predicate wrapper",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_accel_clip_count","get property",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_gyro_health_all","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::gyros_consistent","predicate collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::gyro_calibrated_ok_all","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::use_gyro","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_accel_health_all","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::accels_consistent","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::calibrate_trim","property non-void-command collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::accel_calibrated_ok_all","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::use_accel","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::_init_gyro","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::_save_gyro_calibration","wrapper",
"AP_InertialSensor","data-provider","AP_InertialSensor::update","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::wait_for_sample","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_delta_angle","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_delta_velocity","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_auxiliary_bus","property non-void-command collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::calc_vibration_and_clipping","set collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::set_accel_peak_hold","wrapper",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_vibration_levels","property wrapper",
"AP_InertialSensor","data-provider","AP_InertialSensor::is_still","predicate non-void-command collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::calibrating","predicate",
"AP_InertialSensor","data-provider","AP_InertialSensor::temperature_cal_running","wrapper stateless",
"AP_InertialSensor","data-provider","AP_InertialSensor::acal_init","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::acal_update","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::setup_throttle_gyro_harmonic_notch","predicate non-void-command",
"AP_InertialSensor","data-provider","AP_InertialSensor::_acal_save_calibrations","command collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::_acal_event_failure","wrapper",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_new_trim","predicate set collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_fixed_mount_accel_cal_sample","predicate controller",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_primary_accel_cal_sample_avg","predicate controller",
"AP_InertialSensor","data-provider","AP_InertialSensor::calibrate_gyros","predicate non-void-command",
"AP_InertialSensor","data-provider","AP_InertialSensor::simple_accel_cal","property non-void-command collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::gyro_calibration_timing","property non-void-command collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::kill_imu","unclassified",
"AP_InertialSensor","data-provider","AP_InertialSensor::set_imu_out_uart","collaborator incidental",
"AP_InertialSensor","data-provider","AP_InertialSensor::send_uart_data","command",
"AP_InertialSensor","data-provider","AP_InertialSensor::handle_external","command collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::force_save_calibration","set",
"AP_InertialSensor","data-provider","AP_InertialSensor::Write_IMU_instance","collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::Write_IMU","unclassified",
"AP_InertialSensor","data-provider","AP_InertialSensor::Write_Vibration","collaborator",
"AP_InertialSensor","data-provider","AP_InertialSensor::write_notch_log_messages","unclassified",
"AP_InertialSensor","data-provider","AP_InertialSensor::get_persistent_params","collaborator",
"AP_RangeFinder_Wasp","commander","initial_baudrate","incidental",
"AP_RangeFinder_Wasp","commander","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_Wasp","commander","AP_RangeFinder_Wasp::AP_RangeFinder_Wasp","constructor",
"AP_RangeFinder_Wasp","commander","AP_RangeFinder_Wasp::get_reading","predicate non-void-command",
"AP_RangeFinder_Wasp","commander","AP_RangeFinder_Wasp::update","command",
"AP_RangeFinder_Wasp","commander","AP_RangeFinder_Wasp::parse_response","set",
"AP_AHRS_View","data-provider boundary","~AP_AHRS_View","destructor",
"AP_AHRS_View","data-provider boundary","get_gyro","get collaborator",
"AP_AHRS_View","data-provider boundary","get_rotation_body_to_ned","get collaborator",
"AP_AHRS_View","data-provider boundary","get_quat_body_to_ned","controller",
"AP_AHRS_View","data-provider boundary","cos_roll","incidental",
"AP_AHRS_View","data-provider boundary","cos_pitch","incidental",
"AP_AHRS_View","data-provider boundary","cos_yaw","incidental",
"AP_AHRS_View","data-provider boundary","sin_roll","incidental",
"AP_AHRS_View","data-provider boundary","sin_pitch","incidental",
"AP_AHRS_View","data-provider boundary","sin_yaw","incidental",
"AP_AHRS_View","data-provider boundary","get_location","predicate collaborator",
"AP_AHRS_View","data-provider boundary","wind_estimate","predicate non-void-command collaborator",
"AP_AHRS_View","data-provider boundary","airspeed_estimate","predicate",
"AP_AHRS_View","data-provider boundary","airspeed_estimate_true","predicate",
"AP_AHRS_View","data-provider boundary","get_EAS2TAS","property",
"AP_AHRS_View","data-provider boundary","groundspeed_vector","property non-void-command collaborator",
"AP_AHRS_View","data-provider boundary","get_velocity_NED","predicate collaborator",
"AP_AHRS_View","data-provider boundary","get_relative_position_NED_home","predicate collaborator",
"AP_AHRS_View","data-provider boundary","get_relative_position_NED_origin","predicate collaborator",
"AP_AHRS_View","data-provider boundary","get_relative_position_NE_home","predicate collaborator",
"AP_AHRS_View","data-provider boundary","get_relative_position_NE_origin","predicate collaborator",
"AP_AHRS_View","data-provider boundary","get_relative_position_D_home","unclassified",
"AP_AHRS_View","data-provider boundary","get_relative_position_D_origin","predicate",
"AP_AHRS_View","data-provider boundary","groundspeed","property non-void-command",
"AP_AHRS_View","data-provider boundary","get_accel_ef","property collaborator",
"AP_AHRS_View","data-provider boundary","getLastPosNorthEastReset","property non-void-command collaborator",
"AP_AHRS_View","data-provider boundary","getLastPosDownReset","property non-void-command",
"AP_AHRS_View","data-provider boundary","get_error_rp","property",
"AP_AHRS_View","data-provider boundary","get_error_yaw","property",
"AP_AHRS_View","data-provider boundary","get_rotation","get collaborator",
"AP_AHRS_View","data-provider boundary","get_pitch_trim","get",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::Write_AttitudeView","collaborator",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::Write_Rate","collaborator",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::AP_AHRS_View","constructor",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::set_pitch_trim","command",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::update","command",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::get_gyro_latest","property collaborator",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::earth_to_body2D","wrapper stateless",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::body_to_earth2D","wrapper stateless",
"AP_AHRS_View","data-provider boundary","AP_AHRS_View::rotate","void-accessor collaborator",
"AP_AHRS_View","data-provider boundary","update","wrapper stateless",
"LR_MsgHandler_RBRI","boundary degenerate small-class","LR_MsgHandler_RBRI::process_message","wrapper stateless",
"AP_Baro","unclassified","healthy","predicate",
"AP_Baro","unclassified","get_primary","get",
"AP_Baro","unclassified","get_pressure","property",
"AP_Baro","unclassified","get_pressure","incidental",
"AP_Baro","unclassified","get_dynamic_pressure","collaborator incidental",
"AP_Baro","unclassified","get_temperature","property",
"AP_Baro","unclassified","get_temperature","incidental",
"AP_Baro","unclassified","get_pressure_correction","property",
"AP_Baro","unclassified","get_pressure_correction","incidental",
"AP_Baro","unclassified","get_altitude","property",
"AP_Baro","unclassified","get_altitude","incidental",
"AP_Baro","unclassified","get_altitude_AMSL","property",
"AP_Baro","unclassified","get_altitude_AMSL","property",
"AP_Baro","unclassified","external_bus","get",
"AP_Baro","unclassified","get_ground_pressure","property",
"AP_Baro","unclassified","get_ground_pressure","controller stateless",
"AP_Baro","unclassified","get_last_update","property",
"AP_Baro","unclassified","get_last_update","incidental",
"AP_Baro","unclassified","get_external_temperature","property",
"AP_Baro","unclassified","set_primary_baro","command",
"AP_Baro","unclassified","set_type","collaborator incidental",
"AP_Baro","unclassified","get_type","collaborator incidental",
"AP_Baro","unclassified","num_instances","get",
"AP_Baro","unclassified","set_baro_drift_altitude","command",
"AP_Baro","unclassified","get_baro_drift_offset","get",
"AP_Baro","unclassified","get_filter_range","get",
"AP_Baro","unclassified","set_log_baro_bit","set",
"AP_Baro","unclassified","get_semaphore","get collaborator",
"AP_Baro","unclassified","option_enabled","predicate collaborator",
"AP_Baro","unclassified","AP_Baro::AP_Baro","constructor",
"AP_Baro","unclassified","AP_Baro::calibrate","command",
"AP_Baro","unclassified","AP_Baro::update_calibration","command",
"AP_Baro","unclassified","AP_Baro::_get_air_density_ratio","property non-void-command",
"AP_Baro","unclassified","AP_Baro::get_climb_rate","property non-void-command",
"AP_Baro","unclassified","AP_Baro::get_ground_temperature","get wrapper",
"AP_Baro","unclassified","AP_Baro::set_external_temperature","command",
"AP_Baro","unclassified","AP_Baro::get_external_temperature","get property",
"AP_Baro","unclassified","AP_Baro::_add_backend","predicate non-void-command collaborator",
"AP_Baro","unclassified","AP_Baro::_have_i2c_driver","predicate controller",
"AP_Baro","unclassified","AP_Baro::init","command",
"AP_Baro","unclassified","AP_Baro::_probe_i2c_barometers","command collaborator",
"AP_Baro","unclassified","AP_Baro::should_log","predicate controller",
"AP_Baro","unclassified","AP_Baro::update","command collaborator",
"AP_Baro","unclassified","AP_Baro::healthy","incidental",
"AP_Baro","unclassified","AP_Baro::healthy","incidental",
"AP_Baro","unclassified","AP_Baro::update_field_elevation","command collaborator",
"AP_Baro","unclassified","AP_Baro::register_sensor","property set",
"AP_Baro","unclassified","AP_Baro::all_healthy","predicate",
"AP_Baro","unclassified","AP_Baro::set_pressure_correction","unclassified",
"AP_Baro","unclassified","AP_Baro::handle_msp","set collaborator",
"AP_Baro","unclassified","AP_Baro::handle_external","command collaborator",
"AP_Baro","unclassified","AP_Baro::arming_checks","predicate",
"AP_Baro","unclassified","AP_Baro::SimpleUnderWaterAtmosphere","wrapper stateless",
"AP_Baro","unclassified","AP_Baro::Write_Baro_instance","command",
"AP_Baro","unclassified","AP_Baro::Write_Baro","command",
"AP_Baro","unclassified","AP_Baro::wind_pressure_correction","controller stateless",
"AP_Baro","unclassified","AP_Baro::get_altitude_difference_simple","property",
"AP_Baro","unclassified","AP_Baro::geopotential_alt_to_geometric","incidental",
"AP_Baro","unclassified","AP_Baro::geometric_alt_to_geopotential","incidental",
"AP_Baro","unclassified","AP_Baro::get_temperature_from_altitude","property",
"AP_Baro","unclassified","AP_Baro::get_temperature_by_altitude_layer","wrapper stateless",
"AP_Baro","unclassified","AP_Baro::get_altitude_from_pressure","property",
"AP_Baro","unclassified","AP_Baro::get_pressure_temperature_for_alt_amsl","void-accessor command",
"AP_Baro","unclassified","AP_Baro::get_air_density_for_alt_amsl","property non-void-command",
"AP_Baro","unclassified","AP_Baro::get_EAS2TAS_extended","property",
"AP_Baro","unclassified","AP_Baro::get_EAS2TAS_for_alt_amsl","property non-void-command",
"AP_Baro","unclassified","AP_Baro::get_altitude_difference","property",
"AP_Baro","unclassified","AP_Baro::get_EAS2TAS_simple","property",
"AP_Baro","unclassified","AP_Baro::_get_EAS2TAS","property",
"AP_Baro","unclassified","AP_Baro::get_temperatureC_for_alt_amsl","property non-void-command",
"AP_Baro","unclassified","AP_Baro::get_pressure_for_alt_amsl","property non-void-command",
"AP_Baro","unclassified","AP_Baro::get_sealevel_pressure","property",
"AnalogIn_IIO","degenerate","board_voltage","incidental",
"AnalogIn_IIO","degenerate","AnalogIn_IIO::AnalogIn_IIO","constructor",
"AnalogIn_IIO","degenerate","AnalogIn_IIO::init","empty",
"AnalogIn_IIO","degenerate","AnalogIn_IIO::channel","wrapper stateless",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::AP_AK09916_BusDriver_Auxiliary","constructor",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::~AP_AK09916_BusDriver_Auxiliary","destructor",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::block_read","predicate non-void-command",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::register_read","predicate non-void-command",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::register_write","predicate non-void-command",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::get_semaphore","property non-void-command collaborator",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::configure","predicate",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::start_measurements","predicate set",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::register_periodic_callback","property non-void-command collaborator",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::set_device_type","command",
"AP_AK09916_BusDriver_Auxiliary","unclassified","AP_AK09916_BusDriver_Auxiliary::get_bus_id","property",
"Empty::AnalogSource","boundary degenerate small-class","voltage_average_ratiometric","wrapper stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","command collaborator",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","empty",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","command",
"MissionTest","controller degenerate","loop","command collaborator",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","command",
"MissionTest","controller degenerate","loop","command",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","command",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","MissionTest::start_cmd","predicate non-void-command collaborator",
"MissionTest","controller degenerate","MissionTest::verify_cmd","predicate non-void-command collaborator",
"MissionTest","controller degenerate","MissionTest::mission_complete","controller stateless",
"MissionTest","controller degenerate","MissionTest::run_mission_test","command",
"MissionTest","controller degenerate","MissionTest::init_mission","command collaborator",
"MissionTest","controller degenerate","MissionTest::init_mission_no_nav_commands","command collaborator",
"MissionTest","controller degenerate","MissionTest::init_mission_endless_loop","command collaborator",
"MissionTest","controller degenerate","MissionTest::init_mission_jump_to_nonnav","command collaborator",
"MissionTest","controller degenerate","MissionTest::init_mission_starts_with_do_commands","command collaborator",
"MissionTest","controller degenerate","MissionTest::init_mission_ends_with_do_commands","command collaborator",
"MissionTest","controller degenerate","MissionTest::init_mission_ends_with_jump_command","command collaborator",
"MissionTest","controller degenerate","MissionTest::print_mission","command",
"MissionTest","controller degenerate","MissionTest::run_resume_test","command",
"MissionTest","controller degenerate","MissionTest::run_set_current_cmd_test","command",
"MissionTest","controller degenerate","MissionTest::run_set_current_cmd_while_stopped_test","command",
"MissionTest","controller degenerate","MissionTest::run_replace_cmd_test","command",
"MissionTest","controller degenerate","MissionTest::run_max_cmd_test","command",
"MissionTest","controller degenerate","MissionTest::setup","command",
"MissionTest","controller degenerate","MissionTest::loop","command",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","command",
"MissionTest","controller degenerate","loop","command",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","command",
"MissionTest","controller degenerate","loop","command",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","empty",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","empty",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","wrapper stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","empty",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","loop","empty",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","incidental",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","incidental",
"MissionTest","controller degenerate","setup","controller stateless",
"MissionTest","controller degenerate","loop","controller stateless",
"ModeTraining","degenerate","mode_number","collaborator incidental",
"ModeTraining","degenerate","name","incidental",
"ModeTraining","degenerate","name4","incidental",
"ModeTraining","degenerate","ModeTraining::update","controller stateless",
"ModeTraining","degenerate","ModeTraining::run","controller stateless",
"LR_MsgHandler_RFRN","boundary degenerate small-class","LR_MsgHandler_RFRN::process_message","wrapper stateless",
"RCOutput_Bebop","commander","RCOutput_Bebop::RCOutput_Bebop","constructor",
"RCOutput_Bebop","commander","RCOutput_Bebop::_checksum","incidental",
"RCOutput_Bebop","commander","RCOutput_Bebop::_start_prop","unclassified",
"RCOutput_Bebop","commander","RCOutput_Bebop::_set_ref_speed","command",
"RCOutput_Bebop","commander","RCOutput_Bebop::_get_info","predicate non-void-command collaborator",
"RCOutput_Bebop","commander","RCOutput_Bebop::read_obs_data","property non-void-command collaborator",
"RCOutput_Bebop","commander","RCOutput_Bebop::_toggle_gpio","command",
"RCOutput_Bebop","commander","RCOutput_Bebop::_stop_prop","command",
"RCOutput_Bebop","commander","RCOutput_Bebop::_clear_error","command",
"RCOutput_Bebop","commander","RCOutput_Bebop::_play_sound","command",
"RCOutput_Bebop","commander","RCOutput_Bebop::play_note","command collaborator",
"RCOutput_Bebop","commander","RCOutput_Bebop::_period_us_to_rpm","property wrapper",
"RCOutput_Bebop","commander","RCOutput_Bebop::init","collaborator",
"RCOutput_Bebop","commander","RCOutput_Bebop::set_freq","set",
"RCOutput_Bebop","commander","RCOutput_Bebop::get_freq","get",
"RCOutput_Bebop","commander","RCOutput_Bebop::enable_ch","empty",
"RCOutput_Bebop","commander","RCOutput_Bebop::disable_ch","command",
"RCOutput_Bebop","commander","RCOutput_Bebop::write","set",
"RCOutput_Bebop","commander","RCOutput_Bebop::cork","set",
"RCOutput_Bebop","commander","RCOutput_Bebop::push","set",
"RCOutput_Bebop","commander","RCOutput_Bebop::read","get property",
"RCOutput_Bebop","commander","RCOutput_Bebop::read","void-accessor command",
"RCOutput_Bebop","commander","RCOutput_Bebop::_control_thread","controller stateless",
"RCOutput_Bebop","commander","RCOutput_Bebop::_run_rcout","command",
"AP_Baro_SITL","commander","update_healthy_flag","command",
"AP_Baro_SITL","commander","AP_Baro_SITL::AP_Baro_SITL","constructor",
"AP_Baro_SITL","commander","AP_Baro_SITL::temperature_adjustment","wrapper stateless",
"AP_Baro_SITL","commander","AP_Baro_SITL::_timer","command",
"AP_Baro_SITL","commander","AP_Baro_SITL::healthy","predicate",
"AP_Baro_SITL","commander","AP_Baro_SITL::update","set",
"AP_Baro_SITL","commander","AP_Baro_SITL::wind_pressure_correction","wrapper stateless",
"LoggerMessageWriter_Write_Polyfence","commander","LoggerMessageWriter_Write_Polyfence::process","empty",
"LoggerMessageWriter_Write_Polyfence","commander","LoggerMessageWriter_Write_Polyfence::reset","empty",
"LoggerMessageWriter_Write_Polyfence","commander","LoggerMessageWriter_Write_Polyfence::process","command collaborator",
"LoggerMessageWriter_Write_Polyfence","commander","LoggerMessageWriter_Write_Polyfence::reset","command",
"ESP32::RmtSigReader","boundary degenerate","init","empty",
"ESP32::RmtSigReader","boundary degenerate","init","wrapper stateless",
"ESP32::RmtSigReader","boundary degenerate","init","wrapper stateless",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::init","controller stateless",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::pinMode","command",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::_pinMode","controller stateless",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::_open_pin_value","controller stateless",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::read","property non-void-command",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::write","command",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::toggle","command",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::channel","property non-void-command collaborator",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::usb_connected","incidental",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::_export_pin","predicate controller",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::_gpio_script_write","controller stateless",
"GPIO_Sysfs","unclassified","GPIO_Sysfs::_gpio_script_thread","controller stateless",
"LR_MsgHandler_RFRF","boundary small-class","LR_MsgHandler_RFRF::process_message","wrapper",
"AP_RangeFinder_Benewake_CAN","entity boundary small-class","AP_RangeFinder_Benewake_CAN","constructor",
"AP_RangeFinder_Benewake_CAN","entity boundary small-class","AP_RangeFinder_Benewake_CAN::handle_frame_H30","wrapper stateless",
"AP_RangeFinder_Benewake_CAN","entity boundary small-class","AP_RangeFinder_Benewake_CAN::handle_frame","predicate non-void-command collaborator",
"AP_LoggerFileReader","boundary","AP_LoggerFileReader::AP_LoggerFileReader","constructor",
"AP_LoggerFileReader","boundary","AP_LoggerFileReader::~AP_LoggerFileReader","destructor",
"AP_LoggerFileReader","boundary","AP_LoggerFileReader::open_log","predicate set",
"AP_LoggerFileReader","boundary","AP_LoggerFileReader::read_input","property set collaborator",
"AP_LoggerFileReader","boundary","AP_LoggerFileReader::format_type","wrapper stateless",
"AP_LoggerFileReader","boundary","AP_LoggerFileReader::get_packet_counts","wrapper",
"AP_LoggerFileReader","boundary","AP_LoggerFileReader::update","predicate non-void-command",
"LR_MsgHandler_PARM","commander small-class","LR_MsgHandler_PARM","constructor",
"LR_MsgHandler_PARM","commander small-class","LR_MsgHandler_PARM::set_parameter","wrapper stateless",
"LR_MsgHandler_PARM","commander small-class","LR_MsgHandler_PARM::process_message","command",
"AP_AutoTune","commander","has_option","predicate non-void-command collaborator",
"AP_AutoTune","commander","AP_AutoTune::AP_AutoTune","constructor",
"AP_AutoTune","commander","AP_AutoTune::start","command",
"AP_AutoTune","commander","AP_AutoTune::stop","unclassified",
"AP_AutoTune","commander","AP_AutoTune::axis_string","property",
"AP_AutoTune","commander","AP_AutoTune::update","command",
"AP_AutoTune","commander","AP_AutoTune::state_change","command collaborator",
"AP_AutoTune","commander","AP_AutoTune::save_float_if_changed","controller stateless",
"AP_AutoTune","commander","AP_AutoTune::save_int16_if_changed","controller stateless",
"AP_AutoTune","commander","AP_AutoTune::save_gains","command collaborator",
"AP_AutoTune","commander","AP_AutoTune::get_gains","property non-void-command collaborator",
"AP_AutoTune","commander","AP_AutoTune::restore_gains","unclassified",
"AP_AutoTune","commander","AP_AutoTune::update_rmax","command",
"AP_Airspeed_SDP3X","unclassified","AP_Airspeed_SDP3X::_send_command","predicate non-void-command",
"AP_Airspeed_SDP3X","unclassified","AP_Airspeed_SDP3X::init","predicate non-void-command",
"AP_Airspeed_SDP3X","unclassified","AP_Airspeed_SDP3X::_timer","command",
"AP_Airspeed_SDP3X","unclassified","AP_Airspeed_SDP3X::_correct_pressure","property non-void-command",
"AP_Airspeed_SDP3X","unclassified","AP_Airspeed_SDP3X::get_differential_pressure","predicate non-void-command",
"AP_Airspeed_SDP3X","unclassified","AP_Airspeed_SDP3X::get_temperature","predicate non-void-command",
"AP_Airspeed_SDP3X","unclassified","AP_Airspeed_SDP3X::_crc","incidental",
"ScriptingLED","data-provider degenerate","init","incidental",
"ScriptingLED","data-provider degenerate","hw_set_rgb","incidental",
"ScriptingLED","data-provider degenerate","ScriptingLED::ScriptingLED","constructor",
"ScriptingLED","data-provider degenerate","ScriptingLED::get_rgb","void-accessor",
"AP_Logger_Block","unclassified","logging_started","get",
"AP_Logger_Block","unclassified","get_sector","property",
"AP_Logger_Block","unclassified","get_block","property",
"AP_Logger_Block","unclassified","AP_Logger_Block::AP_Logger_Block","constructor",
"AP_Logger_Block","unclassified","AP_Logger_Block::Init","command",
"AP_Logger_Block","unclassified","AP_Logger_Block::bufferspace_available","property",
"AP_Logger_Block","unclassified","AP_Logger_Block::StartWrite","set",
"AP_Logger_Block","unclassified","AP_Logger_Block::FinishWrite","command",
"AP_Logger_Block","unclassified","AP_Logger_Block::WritesOK","predicate wrapper",
"AP_Logger_Block","unclassified","AP_Logger_Block::_WritePrioritisedBlock","predicate non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::StartRead","property set",
"AP_Logger_Block","unclassified","AP_Logger_Block::ReadHeaders","get non-void-command collaborator",
"AP_Logger_Block","unclassified","AP_Logger_Block::ReadBlock","predicate non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::StartLogFile","command",
"AP_Logger_Block","unclassified","AP_Logger_Block::GetFileNumber","get",
"AP_Logger_Block","unclassified","AP_Logger_Block::EraseAll","command",
"AP_Logger_Block","unclassified","AP_Logger_Block::periodic_1Hz","command",
"AP_Logger_Block","unclassified","AP_Logger_Block::periodic_10Hz","command",
"AP_Logger_Block","unclassified","AP_Logger_Block::NeedErase","predicate non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::validate_log_structure","unclassified",
"AP_Logger_Block","unclassified","AP_Logger_Block::get_log_data_raw","property",
"AP_Logger_Block","unclassified","AP_Logger_Block::get_log_data","property non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::get_num_logs","property non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::stop_logging","set",
"AP_Logger_Block","unclassified","AP_Logger_Block::stop_logging_async","set",
"AP_Logger_Block","unclassified","AP_Logger_Block::start_new_log","command collaborator",
"AP_Logger_Block","unclassified","AP_Logger_Block::get_log_boundaries","void-accessor command",
"AP_Logger_Block","unclassified","AP_Logger_Block::is_wrapped","predicate non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::find_last_log","property non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::find_last_page","property non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::find_last_page_of_log","property non-void-command",
"AP_Logger_Block","unclassified","AP_Logger_Block::get_log_info","void-accessor",
"AP_Logger_Block","unclassified","AP_Logger_Block::BlockRead","predicate wrapper",
"AP_Logger_Block","unclassified","AP_Logger_Block::logging_failed","predicate",
"AP_Logger_Block","unclassified","AP_Logger_Block::io_thread_alive","predicate controller",
"AP_Logger_Block","unclassified","AP_Logger_Block::io_timer","command",
"AP_Logger_Block","unclassified","AP_Logger_Block::write_log_page","command",
"AP_Logger_Block","unclassified","AP_Logger_Block::flash_test","command",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::SoftSigReaderInt","constructor",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::get_pair_channel","collaborator incidental",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::init","set collaborator",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::disable","wrapper stateless",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::_irq_handler","void-accessor command collaborator",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::read","predicate collaborator",
"SoftSigReaderInt","entity boundary degenerate","init","empty",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::_irq_handler","non-void-command collaborator",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::SoftSigReaderInt","constructor",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::~SoftSigReaderInt","destructor",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::init","wrapper stateless",
"SoftSigReaderInt","entity boundary degenerate","SoftSigReaderInt::read","predicate collaborator",
"SoftSigReaderInt","entity boundary degenerate","init","wrapper stateless",
"SoftSigReaderInt","entity boundary degenerate","init","wrapper stateless",
"AP_HAL::SIMState","commander boundary lazy-class small-class","set_gps0","set collaborator",
"AP_HAL::SIMState","commander boundary lazy-class small-class","update","wrapper stateless",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::AP_HMC5843_BusDriver_Auxiliary","constructor",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::~AP_HMC5843_BusDriver_Auxiliary","destructor",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::block_read","predicate non-void-command",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::register_read","predicate non-void-command",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::register_write","predicate non-void-command",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::get_semaphore","property non-void-command collaborator",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::configure","predicate",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::start_measurements","predicate set",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::register_periodic_callback","property non-void-command collaborator",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::set_device_type","command",
"AP_HMC5843_BusDriver_Auxiliary","unclassified","AP_HMC5843_BusDriver_Auxiliary::get_bus_id","property",
"LR_MsgHandler_ROFH","boundary small-class","LR_MsgHandler_ROFH::process_message","wrapper",
"AP_BattMonitor_FuelLevel_PWM","commander degenerate","has_consumed_energy","incidental",
"AP_BattMonitor_FuelLevel_PWM","commander degenerate","has_current","incidental",
"AP_BattMonitor_FuelLevel_PWM","commander degenerate","init","empty",
"AP_BattMonitor_FuelLevel_PWM","commander degenerate","AP_BattMonitor_FuelLevel_PWM::AP_BattMonitor_FuelLevel_PWM","constructor",
"AP_BattMonitor_FuelLevel_PWM","commander degenerate","AP_BattMonitor_FuelLevel_PWM::read","command",
"AC_Autorotation","unclassified","get_rpm","get",
"AC_Autorotation","unclassified","set_target_head_speed","set",
"AC_Autorotation","unclassified","set_col_cutoff_freq","set",
"AC_Autorotation","unclassified","get_hs_set_point","get",
"AC_Autorotation","unclassified","get_col_entry_freq","get",
"AC_Autorotation","unclassified","get_col_glide_freq","get",
"AC_Autorotation","unclassified","get_bail_time","get",
"AC_Autorotation","unclassified","get_last_collective","get",
"AC_Autorotation","unclassified","is_enable","get",
"AC_Autorotation","unclassified","set_desired_fwd_speed","set",
"AC_Autorotation","unclassified","set_desired_fwd_speed","set",
"AC_Autorotation","unclassified","get_pitch","get",
"AC_Autorotation","unclassified","AC_Autorotation::AC_Autorotation","constructor",
"AC_Autorotation","unclassified","AC_Autorotation::init_hs_controller","command",
"AC_Autorotation","unclassified","AC_Autorotation::update_hs_glide_controller","predicate non-void-command",
"AC_Autorotation","unclassified","AC_Autorotation::set_collective","controller",
"AC_Autorotation","unclassified","AC_Autorotation::get_rpm","property non-void-command",
"AC_Autorotation","unclassified","AC_Autorotation::Log_Write_Autorotation","wrapper",
"AC_Autorotation","unclassified","AC_Autorotation::init_fwd_spd_controller","command",
"AC_Autorotation","unclassified","AC_Autorotation::set_dt","set",
"AC_Autorotation","unclassified","AC_Autorotation::update_forward_speed_controller","command",
"AC_Autorotation","unclassified","AC_Autorotation::calc_speed_forward","controller stateless",
"IS31FL3195","boundary","IS31FL3195::IS31FL3195","constructor",
"IS31FL3195","boundary","IS31FL3195::init","predicate",
"IS31FL3195","boundary","IS31FL3195::hw_set_rgb","predicate non-void-command",
"IS31FL3195","boundary","IS31FL3195::_timer","unclassified",
"IS31FL3195","boundary","IS31FL3195::init","command",
"IS31FL3195","boundary","IS31FL3195::rdwr_store_register_value","wrapper stateless",
"IS31FL3195","boundary","IS31FL3195::rdwr","wrapper stateless",
"IS31FL3195","boundary","IS31FL3195::set_product_id","wrapper stateless",
"IS31FL3195","boundary","IS31FL3195::reset_registers","wrapper stateless",
"IS31FL3195","boundary","IS31FL3195::update","command collaborator",
"Parameters_RCIN","empty","Parameters_RCIN::Parameters_RCIN","constructor",
"Networking_Periph","commander degenerate","Networking_Periph","constructor",
"Networking_Periph","commander degenerate","Networking_Periph::init","command",
"Networking_Periph","commander degenerate","Networking_Periph::update","unclassified",
"Networking_Periph","commander degenerate","update","wrapper stateless",
"Networking_Periph","commander degenerate","init","empty",
"Networking_Periph","commander degenerate","init","wrapper stateless",
"Networking_Periph","commander degenerate","init","wrapper stateless",
"AP_GPS_SBP","boundary","highest_supported_status","collaborator incidental",
"AP_GPS_SBP","boundary","supports_mavlink_gps_rtk_message","incidental",
"AP_GPS_SBP","boundary","name","incidental",
"AP_GPS_SBP","boundary","AP_GPS_SBP::AP_GPS_SBP","constructor",
"AP_GPS_SBP","boundary","AP_GPS_SBP::read","predicate non-void-command",
"AP_GPS_SBP","boundary","AP_GPS_SBP::inject_data","unclassified",
"AP_GPS_SBP","boundary","AP_GPS_SBP::_sbp_process","command",
"AP_GPS_SBP","boundary","AP_GPS_SBP::_sbp_process_message","command collaborator",
"AP_GPS_SBP","boundary","AP_GPS_SBP::_attempt_state_update","predicate non-void-command collaborator",
"AP_GPS_SBP","boundary","AP_GPS_SBP::_detect","predicate wrapper",
"AP_GPS_SBP","boundary","AP_GPS_SBP::logging_log_full_update","wrapper",
"AP_GPS_SBP","boundary","AP_GPS_SBP::logging_log_raw_sbp","wrapper",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe","constructor",
"AP_AdvancedFailsafe","unclassified","enabled","get",
"AP_AdvancedFailsafe","unclassified","terminating_vehicle_via_landing","predicate",
"AP_AdvancedFailsafe","unclassified","option_is_set","predicate collaborator",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::gcs_terminate","incidental",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::gcs_terminate","incidental",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::gcs_terminate","incidental",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::check","command collaborator",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::heartbeat","set",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::check_altlimit","predicate controller",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::should_crash_vehicle","predicate set",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::gcs_terminate","predicate non-void-command",
"AP_AdvancedFailsafe","unclassified","AP_AdvancedFailsafe::max_range_update","command",
"GCS_Periph","degenerate","new_gcs_mavlink_backend","wrapper stateless",
"GCS_Periph","degenerate","frame_type","collaborator incidental",
"GCS_Periph","degenerate","custom_mode","incidental",
"GCS_Periph","degenerate","GCS_Periph::sysid_this_mav","incidental",
"AP_GPS_SBP2","unclassified","highest_supported_status","collaborator incidental",
"AP_GPS_SBP2","unclassified","name","incidental",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::AP_GPS_SBP2","constructor",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::read","predicate non-void-command",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::inject_data","unclassified",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::_sbp_process","command",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::_sbp_process_message","unclassified",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::distMod","wrapper stateless",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::_attempt_state_update","predicate non-void-command",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::_detect","predicate wrapper",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::logging_log_full_update","wrapper",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::logging_log_raw_sbp","wrapper",
"AP_GPS_SBP2","unclassified","AP_GPS_SBP2::logging_ext_event","wrapper",
"GCS_MAVLINK_Periph","degenerate","telem_delay","incidental",
"GCS_MAVLINK_Periph","degenerate","handle_guided_request","collaborator incidental",
"GCS_MAVLINK_Periph","degenerate","base_mode","collaborator incidental",
"GCS_MAVLINK_Periph","degenerate","vehicle_system_status","collaborator incidental",
"GCS_MAVLINK_Periph","degenerate","send_nav_controller_output","empty",
"GCS_MAVLINK_Periph","degenerate","send_pid_tuning","empty",
"GCS_MAVLINK_Periph","degenerate","GCS_MAVLINK_Periph::sysid_my_gcs","incidental",
"GCS_MAVLINK_Periph","degenerate","GCS_MAVLINK_Periph::handle_preflight_reboot","controller stateless",
"AP_Frsky_Telem","unclassified","queue_message","command",
"AP_Frsky_Telem","unclassified","AP_Frsky_Telem::AP_Frsky_Telem","constructor",
"AP_Frsky_Telem","unclassified","AP_Frsky_Telem::~AP_Frsky_Telem","destructor",
"AP_Frsky_Telem","unclassified","AP_Frsky_Telem::init","predicate set collaborator",
"AP_Frsky_Telem","unclassified","AP_Frsky_Telem::_get_telem_data","predicate non-void-command",
"AP_Frsky_Telem","unclassified","AP_Frsky_Telem::_set_telem_data","predicate non-void-command",
"AP_Frsky_Telem","unclassified","AP_Frsky_Telem::try_create_singleton_for_external_data","command collaborator",
"AP_Frsky_Telem","unclassified","AP_Frsky_Telem::get_telem_data","predicate non-void-command",
"AP_Frsky_Telem","unclassified","AP_Frsky_Telem::set_telem_data","predicate non-void-command",
"ESC_APD_Telem","unclassified","get_telem","get collaborator",
"ESC_APD_Telem","unclassified","ESC_APD_Telem::ESC_APD_Telem","constructor",
"ESC_APD_Telem","unclassified","ESC_APD_Telem::update","predicate non-void-command",
"ESC_APD_Telem","unclassified","ESC_APD_Telem::shift_buffer","set",
"ESC_APD_Telem","unclassified","ESC_APD_Telem::convert_temperature","wrapper stateless",
"AP_RangeFinder_LightWareSerial","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_LightWareSerial","unclassified","get_signal_quality_pct","property",
"AP_RangeFinder_LightWareSerial","unclassified","AP_RangeFinder_LightWareSerial::get_reading","predicate non-void-command",
"AP_RangeFinder_LightWareSerial","unclassified","AP_RangeFinder_LightWareSerial::is_lost_signal_distance","collaborator incidental",
"AP_BattMonitor_Synthetic_Current","commander degenerate","has_consumed_energy","incidental",
"AP_BattMonitor_Synthetic_Current","commander degenerate","has_current","incidental",
"AP_BattMonitor_Synthetic_Current","commander degenerate","init","empty",
"AP_BattMonitor_Synthetic_Current","commander degenerate","AP_BattMonitor_Synthetic_Current::AP_BattMonitor_Synthetic_Current","constructor",
"AP_BattMonitor_Synthetic_Current","commander degenerate","AP_BattMonitor_Synthetic_Current::read","command",
"ReplayGyroFFT","commander small-class","init","command",
"ReplayGyroFFT","commander small-class","loop","unclassified",
"HALSITL::I2CDeviceManager","empty","~I2CDeviceManager","destructor",
"AP_ExternalControl_Rover","degenerate","AP_ExternalControl_Rover::set_linear_velocity_and_yaw_rate","predicate non-void-command",
"AP_ExternalControl_Rover","degenerate","AP_ExternalControl_Rover::set_global_position","controller stateless",
"AP_ExternalControl_Rover","degenerate","AP_ExternalControl_Rover::ready_for_external_control","controller stateless",
"SPIDesc","empty","SPIDesc","constructor",
"ABinParser","small-class","ABinParser","constructor",
"ABinParser","small-class","~ABinParser","destructor",
"ABinParser","small-class","name_value_callback","empty",
"ABinParser","small-class","ABinParser::parse","predicate non-void-command",
"Sailboat","unclassified","sail_enabled","predicate",
"Sailboat","unclassified","get_loiter_radius","get",
"Sailboat","unclassified","Sailboat::Sailboat","constructor",
"Sailboat","unclassified","Sailboat::tack_enabled","predicate",
"Sailboat","unclassified","Sailboat::init","command",
"Sailboat","unclassified","Sailboat::init_rc_in","collaborator",
"Sailboat","unclassified","Sailboat::set_pilot_desired_mainsail","command",
"Sailboat","unclassified","Sailboat::set_auto_mainsail","controller",
"Sailboat","unclassified","Sailboat::relax_sails","controller stateless",
"Sailboat","unclassified","Sailboat::get_throttle_and_set_mainsail","void-accessor command",
"Sailboat","unclassified","Sailboat::get_VMG","controller stateless",
"Sailboat","unclassified","Sailboat::handle_tack_request_acro","command",
"Sailboat","unclassified","Sailboat::get_tack_heading_rad","get non-void-command",
"Sailboat","unclassified","Sailboat::handle_tack_request_auto","set",
"Sailboat","unclassified","Sailboat::clear_tack","command",
"Sailboat","unclassified","Sailboat::tacking","predicate",
"Sailboat","unclassified","Sailboat::use_indirect_route","predicate",
"Sailboat","unclassified","Sailboat::calc_heading","property non-void-command",
"Sailboat","unclassified","Sailboat::set_motor_state","set",
"Sailboat","unclassified","Sailboat::motor_assist_tack","get predicate",
"Sailboat","unclassified","Sailboat::motor_assist_low_wind","predicate controller",
"Sailboat","unclassified","init","empty",
"Sailboat","unclassified","init","wrapper stateless",
"Sailboat","unclassified","init","wrapper stateless",
"Sailboat","unclassified","Sailboat::Sailboat","constructor",
"Sailboat","unclassified","Sailboat::calc_lift_and_drag","wrapper stateless",
"Sailboat","unclassified","Sailboat::get_turn_circle","wrapper stateless",
"Sailboat","unclassified","Sailboat::get_yaw_rate","property",
"Sailboat","unclassified","Sailboat::get_lat_accel","property",
"Sailboat","unclassified","Sailboat::update_wave","controller stateless",
"Sailboat","unclassified","Sailboat::update","command collaborator",
"AP_Filesystem_Backend","degenerate","open","incidental",
"AP_Filesystem_Backend","degenerate","close","incidental",
"AP_Filesystem_Backend","degenerate","read","incidental",
"AP_Filesystem_Backend","degenerate","write","incidental",
"AP_Filesystem_Backend","degenerate","fsync","incidental",
"AP_Filesystem_Backend","degenerate","lseek","incidental",
"AP_Filesystem_Backend","degenerate","stat","collaborator incidental",
"AP_Filesystem_Backend","degenerate","unlink","incidental",
"AP_Filesystem_Backend","degenerate","mkdir","incidental",
"AP_Filesystem_Backend","degenerate","opendir","collaborator incidental",
"AP_Filesystem_Backend","degenerate","readdir","collaborator incidental",
"AP_Filesystem_Backend","degenerate","closedir","incidental",
"AP_Filesystem_Backend","degenerate","rename","incidental",
"AP_Filesystem_Backend","degenerate","disk_free","incidental",
"AP_Filesystem_Backend","degenerate","disk_space","incidental",
"AP_Filesystem_Backend","degenerate","set_mtime","incidental",
"AP_Filesystem_Backend","degenerate","retry_mount","incidental",
"AP_Filesystem_Backend","degenerate","unmount","empty",
"AP_Filesystem_Backend","degenerate","format","incidental",
"AP_Filesystem_Backend","degenerate","get_format_status","collaborator incidental",
"AP_Filesystem_Backend","degenerate","AP_Filesystem_Backend::load_file","property non-void-command collaborator",
"AP_Filesystem_Backend","degenerate","AP_Filesystem_Backend::unload_file","wrapper stateless",
"AP_Filesystem_Backend","degenerate","AP_Filesystem_Backend::file_op_allowed","controller stateless",
"Parameters","empty","Parameters","constructor",
"ModeSystemId","degenerate","mode_number","collaborator incidental",
"ModeSystemId","degenerate","requires_GPS","incidental",
"ModeSystemId","degenerate","has_manual_throttle","incidental",
"ModeSystemId","degenerate","allows_arming","collaborator incidental",
"ModeSystemId","degenerate","is_autopilot","incidental",
"ModeSystemId","degenerate","logs_attitude","incidental",
"ModeSystemId","degenerate","set_magnitude","command",
"ModeSystemId","degenerate","name","incidental",
"ModeSystemId","degenerate","name4","incidental",
"ModeSystemId","degenerate","ModeSystemId::ModeSystemId","constructor",
"ModeSystemId","degenerate","ModeSystemId::init","predicate non-void-command collaborator",
"ModeSystemId","degenerate","ModeSystemId::exit","controller",
"ModeSystemId","degenerate","ModeSystemId::run","command collaborator",
"ModeSystemId","degenerate","ModeSystemId::log_data","unclassified",
"ModeSystemId","degenerate","ModeSystemId::is_poscontrol_axis_type","predicate",
"Poller","unclassified","~Poller","destructor",
"Poller","unclassified","operator!","predicate",
"Poller","unclassified","operatorbool","unclassified",
"Poller","unclassified","Poller::Poller","constructor",
"Poller","unclassified","Poller::register_pollable","predicate controller",
"Poller","unclassified","Poller::unregister_pollable","controller",
"Poller","unclassified","Poller::poll","property controller",
"Poller","unclassified","Poller::wakeup","unclassified",
"AP_Proximity_MR72_CAN","unclassified","distance_max","incidental",
"AP_Proximity_MR72_CAN","unclassified","distance_min","incidental",
"AP_Proximity_MR72_CAN","unclassified","get_radar_id","incidental",
"AP_Proximity_MR72_CAN","unclassified","AP_Proximity_MR72_CAN::AP_Proximity_MR72_CAN","constructor",
"AP_Proximity_MR72_CAN","unclassified","AP_Proximity_MR72_CAN::update","wrapper",
"AP_Proximity_MR72_CAN","unclassified","AP_Proximity_MR72_CAN::handle_frame","predicate non-void-command collaborator",
"AP_Proximity_MR72_CAN","unclassified","AP_Proximity_MR72_CAN::parse_distance_message","predicate collaborator",
"AP_WindVane_Home","commander boundary data-class small-class","AP_WindVane_Home::update_direction","set collaborator",
"AP_Logger_RateLimiter","small-class","AP_Logger_RateLimiter::AP_Logger_RateLimiter","constructor",
"AP_Logger_RateLimiter","small-class","AP_Logger_RateLimiter::should_log_streaming","predicate set",
"AP_Logger_RateLimiter","small-class","AP_Logger_RateLimiter::should_log","predicate non-void-command",
"RC_Channels_Tracker","data-provider degenerate","channel","property collaborator",
"RC_Channels_Tracker","data-provider degenerate","in_rc_failsafe","incidental",
"RC_Channels_Tracker","data-provider degenerate","RC_Channels_Tracker::flight_mode_channel_number","incidental",
"AP_Compass_MSP","boundary small-class","AP_Compass_MSP::AP_Compass_MSP","constructor",
"AP_Compass_MSP","boundary small-class","AP_Compass_MSP::handle_msp","wrapper",
"AP_Compass_MSP","boundary small-class","AP_Compass_MSP::read","wrapper",
"ModeHold","degenerate","mode_number","collaborator incidental",
"ModeHold","degenerate","name4","incidental",
"ModeHold","degenerate","attitude_stabilized","incidental",
"ModeHold","degenerate","requires_position","incidental",
"ModeHold","degenerate","requires_velocity","incidental",
"ModeHold","degenerate","ModeHold::update","controller stateless",
"ModeBrake","lazy-class degenerate","mode_number","collaborator incidental",
"ModeBrake","lazy-class degenerate","requires_GPS","incidental",
"ModeBrake","lazy-class degenerate","has_manual_throttle","incidental",
"ModeBrake","lazy-class degenerate","allows_arming","collaborator incidental",
"ModeBrake","lazy-class degenerate","is_autopilot","incidental",
"ModeBrake","lazy-class degenerate","name","incidental",
"ModeBrake","lazy-class degenerate","name4","incidental",
"ModeBrake","lazy-class degenerate","ModeBrake::init","predicate set",
"ModeBrake","lazy-class degenerate","ModeBrake::run","controller",
"ModeBrake","lazy-class degenerate","ModeBrake::timeout_to_loiter_ms","command",
"AP_AdvancedFailsafe_Rover","pure-controller degenerate","setup_IO_failsafe","empty",
"AP_AdvancedFailsafe_Rover","pure-controller degenerate","AP_AdvancedFailsafe_Rover::terminate_vehicle","controller stateless",
"AP_AdvancedFailsafe_Rover","pure-controller degenerate","AP_AdvancedFailsafe_Rover::afs_mode","controller stateless",
"AP_AdvancedFailsafe_Rover","pure-controller degenerate","AP_AdvancedFailsafe_Rover::set_mode_auto","controller stateless",
"AC_CustomControl","commander","get_type","property",
"AC_CustomControl","commander","AC_CustomControl::AC_CustomControl","constructor",
"AC_CustomControl","commander","AC_CustomControl::init","command",
"AC_CustomControl","commander","AC_CustomControl::update","command collaborator",
"AC_CustomControl","commander","AC_CustomControl::motor_set","command collaborator",
"AC_CustomControl","commander","AC_CustomControl::reset_main_att_controller","command",
"AC_CustomControl","commander","AC_CustomControl::set_custom_controller","command",
"AC_CustomControl","commander","AC_CustomControl::is_safe_to_run","predicate",
"AC_CustomControl","commander","AC_CustomControl::log_switch","wrapper",
"AC_CustomControl","commander","AC_CustomControl::set_notch_sample_rate","command",
"AP_HAL::Device","lazy-class degenerate","bus_type","property collaborator",
"AP_HAL::Device","lazy-class degenerate","bus_num","property",
"AP_HAL::Device","lazy-class degenerate","get_bus_id","get",
"AP_HAL::Device","lazy-class degenerate","get_bus_address","property",
"AP_HAL::Device","lazy-class degenerate","~Device","destructor",
"AP_HAL::Device","lazy-class degenerate","set_address","empty",
"AP_HAL::Device","lazy-class degenerate","set_cmd_header","empty",
"AP_HAL::Device","lazy-class degenerate","enter_xip_mode","incidental",
"AP_HAL::Device","lazy-class degenerate","exit_xip_mode","incidental",
"AP_HAL::Device","lazy-class degenerate","set_register_rw_callback","set collaborator",
"AP_HAL::Device","lazy-class degenerate","read","wrapper stateless",
"AP_HAL::Device","lazy-class degenerate","unregister_callback","collaborator incidental",
"AP_HAL::Device","lazy-class degenerate","setup_bankselect_callback","set collaborator",
"AP_HAL::Device","lazy-class degenerate","deregister_bankselect_callback","set",
"AP_HAL::Device","lazy-class degenerate","register_completion_callback","empty",
"AP_HAL::Device","lazy-class degenerate","register_completion_callback","empty",
"AP_HAL::Device","lazy-class degenerate","set_chip_select","incidental",
"AP_HAL::Device","lazy-class degenerate","set_retries","empty",
"AP_HAL::Device","lazy-class degenerate","set_device_address","set",
"AP_HAL::Device","lazy-class degenerate","set_device_bus","set",
"ModeStop","degenerate","number","collaborator incidental",
"ModeStop","degenerate","requires_armed_servos","incidental",
"ModeStop","degenerate","update","empty",
"AP_BattMonitor_SMBus_SUI","unclassified","AP_BattMonitor_SMBus_SUI::AP_BattMonitor_SMBus_SUI","constructor",
"AP_BattMonitor_SMBus_SUI","unclassified","AP_BattMonitor_SMBus_SUI::init","command",
"AP_BattMonitor_SMBus_SUI","unclassified","AP_BattMonitor_SMBus_SUI::timer","unclassified",
"AP_BattMonitor_SMBus_SUI","unclassified","AP_BattMonitor_SMBus_SUI::read_block_bare","predicate",
"AP_BattMonitor_SMBus_SUI","unclassified","AP_BattMonitor_SMBus_SUI::read_cell_voltages","command",
"AP_BattMonitor_SMBus_SUI","unclassified","AP_BattMonitor_SMBus_SUI::update_health","wrapper",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo","constructor",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo::init_gripper","wrapper",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo::grab","command",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo::release","command",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo::has_state_pwm","predicate wrapper",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo::released","predicate",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo::grabbed","predicate",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo::update_gripper","unclassified",
"AP_Gripper_Servo","unclassified","AP_Gripper_Servo::valid","wrapper stateless",
"ReplayVehicle","data-provider boundary","get_scheduler_tasks","incidental",
"ReplayVehicle","data-provider boundary","set_mode","collaborator incidental",
"ReplayVehicle","data-provider boundary","get_mode","incidental",
"ReplayVehicle","data-provider boundary","get_log_bitmask","get collaborator",
"ReplayVehicle","data-provider boundary","get_log_structures","get collaborator",
"ReplayVehicle","data-provider boundary","get_num_log_structures","property wrapper",
"ReplayVehicle","data-provider boundary","ReplayVehicle::load_parameters","wrapper stateless",
"ReplayVehicle","data-provider boundary","ReplayVehicle::init_ardupilot","command",
"AP_Motors6DOF","commander","AP_Motors6DOF","constructor",
"AP_Motors6DOF","commander","AP_Motors6DOF::setup_motors","collaborator",
"AP_Motors6DOF","commander","AP_Motors6DOF::add_motor_raw_6dof","command",
"AP_Motors6DOF","commander","AP_Motors6DOF::output_min","wrapper stateless",
"AP_Motors6DOF","commander","AP_Motors6DOF::calc_thrust_to_pwm","wrapper stateless",
"AP_Motors6DOF","commander","AP_Motors6DOF::output_to_motors","command",
"AP_Motors6DOF","commander","AP_Motors6DOF::get_current_limit_max_throttle","incidental",
"AP_Motors6DOF","commander","AP_Motors6DOF::output_armed_stabilizing","command",
"AP_Motors6DOF","commander","AP_Motors6DOF::output_armed_stabilizing_vectored","set",
"AP_Motors6DOF","commander","AP_Motors6DOF::output_armed_stabilizing_vectored_6dof","set",
"AP_Motors6DOF","commander","AP_Motors6DOF::get_motor_angular_factors","property wrapper",
"AP_Motors6DOF","commander","AP_Motors6DOF::motor_is_enabled","incidental",
"AP_Motors6DOF","commander","AP_Motors6DOF::set_reversed","predicate wrapper",
"ModeCruise","degenerate","mode_number","collaborator incidental",
"ModeCruise","degenerate","name","incidental",
"ModeCruise","degenerate","name4","incidental",
"ModeCruise","degenerate","allows_terrain_disable","incidental",
"ModeCruise","degenerate","does_automatic_thermal_switch","incidental",
"ModeCruise","degenerate","does_auto_throttle","incidental",
"ModeCruise","degenerate","update_target_altitude","empty",
"ModeCruise","degenerate","ModeCruise::_enter","predicate non-void-command",
"ModeCruise","degenerate","ModeCruise::update","command",
"ModeCruise","degenerate","ModeCruise::navigate","command",
"ModeCruise","degenerate","ModeCruise::get_target_heading_cd","get",
"PollerThread","boundary","PollerThread","constructor",
"PollerThread","boundary","~PollerThread","destructor",
"PollerThread","boundary","PollerThread::add_timer","property non-void-command collaborator",
"PollerThread","boundary","PollerThread::adjust_timer","predicate non-void-command collaborator",
"PollerThread","boundary","PollerThread::_cleanup_timers","command collaborator",
"PollerThread","boundary","PollerThread::mainloop","command",
"PollerThread","boundary","PollerThread::stop","predicate set",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::AP_InertialSensor_SITL","constructor",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::detect","controller stateless",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::init_sensor","predicate set",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::get_temperature","get property set",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::generate_accel","command",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::generate_gyro","command collaborator",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::timer_update","command",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::gyro_drift","property wrapper",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::update","predicate wrapper",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::start","unclassified",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::read_gyro_from_file","set collaborator",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::read_gyro","wrapper",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::write_gyro_to_file","set collaborator",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::read_accel_from_file","set collaborator",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::read_accel","command collaborator",
"AP_InertialSensor_SITL","boundary","AP_InertialSensor_SITL::write_accel_to_file","set collaborator",
"RCInput_Multi","commander small-class","RCInput_Multi::RCInput_Multi","constructor",
"RCInput_Multi","commander small-class","RCInput_Multi::init","command",
"RCInput_Multi","commander small-class","RCInput_Multi::_timer_tick","command",
"RC_Channels_Rover","data-provider degenerate","channel","property collaborator",
"RC_Channels_Rover","data-provider degenerate","RC_Channels_Rover::flight_mode_channel_number","incidental",
"RC_Channels_Rover","data-provider degenerate","RC_Channels_Rover::in_rc_failsafe","incidental",
"RC_Channels_Rover","data-provider degenerate","RC_Channels_Rover::has_valid_input","predicate",
"RC_Channels_Rover","data-provider degenerate","RC_Channels_Rover::get_arming_channel","collaborator incidental",
"SerialOptions","pure-controller small-class","SerialOptions::SerialOptions","constructor",
"SerialOptions","pure-controller small-class","SerialOptions::init","controller",
"AC_AttitudeControl","unclassified","AC_AttitudeControl","constructor",
"AC_AttitudeControl","unclassified","~AC_AttitudeControl","destructor",
"AC_AttitudeControl","unclassified","set_dt","set",
"AC_AttitudeControl","unclassified","get_dt","get",
"AC_AttitudeControl","unclassified","get_angle_roll_p","get collaborator",
"AC_AttitudeControl","unclassified","get_angle_pitch_p","get collaborator",
"AC_AttitudeControl","unclassified","get_angle_yaw_p","get collaborator",
"AC_AttitudeControl","unclassified","get_accel_roll_max_cdss","get",
"AC_AttitudeControl","unclassified","get_accel_roll_max_radss","property wrapper",
"AC_AttitudeControl","unclassified","set_accel_roll_max_cdss","command",
"AC_AttitudeControl","unclassified","save_accel_roll_max_cdss","command",
"AC_AttitudeControl","unclassified","get_accel_pitch_max_cdss","get",
"AC_AttitudeControl","unclassified","get_accel_pitch_max_radss","property wrapper",
"AC_AttitudeControl","unclassified","set_accel_pitch_max_cdss","command",
"AC_AttitudeControl","unclassified","save_accel_pitch_max_cdss","command",
"AC_AttitudeControl","unclassified","get_accel_yaw_max_cdss","get",
"AC_AttitudeControl","unclassified","get_accel_yaw_max_radss","property wrapper",
"AC_AttitudeControl","unclassified","set_accel_yaw_max_cdss","command",
"AC_AttitudeControl","unclassified","save_accel_yaw_max_cdss","command",
"AC_AttitudeControl","unclassified","get_ang_vel_roll_max_rads","property wrapper",
"AC_AttitudeControl","unclassified","get_ang_vel_pitch_max_rads","property wrapper",
"AC_AttitudeControl","unclassified","get_ang_vel_yaw_max_rads","property wrapper",
"AC_AttitudeControl","unclassified","get_input_tc","get",
"AC_AttitudeControl","unclassified","set_input_tc","command",
"AC_AttitudeControl","unclassified","relax_attitude_controllers","command",
"AC_AttitudeControl","unclassified","input_euler_rate_yaw_euler_angle_pitch_bf_roll","empty",
"AC_AttitudeControl","unclassified","input_thrust_vector_heading","command",
"AC_AttitudeControl","unclassified","use_sqrt_controller","set",
"AC_AttitudeControl","unclassified","get_att_target_euler_cd","property wrapper",
"AC_AttitudeControl","unclassified","get_att_target_euler_rad","get collaborator",
"AC_AttitudeControl","unclassified","get_attitude_target_quat","get collaborator",
"AC_AttitudeControl","unclassified","get_attitude_target_ang_vel","get collaborator",
"AC_AttitudeControl","unclassified","get_att_error_angle_deg","property wrapper",
"AC_AttitudeControl","unclassified","rate_bf_roll_target","set",
"AC_AttitudeControl","unclassified","rate_bf_pitch_target","set",
"AC_AttitudeControl","unclassified","rate_bf_yaw_target","set",
"AC_AttitudeControl","unclassified","rate_bf_roll_sysid","set",
"AC_AttitudeControl","unclassified","rate_bf_pitch_sysid","set",
"AC_AttitudeControl","unclassified","rate_bf_yaw_sysid","set",
"AC_AttitudeControl","unclassified","actuator_roll_sysid","set",
"AC_AttitudeControl","unclassified","actuator_pitch_sysid","set",
"AC_AttitudeControl","unclassified","actuator_yaw_sysid","set",
"AC_AttitudeControl","unclassified","max_angle_step_bf_roll","property non-void-command",
"AC_AttitudeControl","unclassified","max_angle_step_bf_pitch","property non-void-command",
"AC_AttitudeControl","unclassified","max_angle_step_bf_yaw","property non-void-command",
"AC_AttitudeControl","unclassified","rate_bf_targets","property collaborator",
"AC_AttitudeControl","unclassified","get_rate_ef_targets","get collaborator",
"AC_AttitudeControl","unclassified","bf_feedforward","command",
"AC_AttitudeControl","unclassified","bf_feedforward_save","command",
"AC_AttitudeControl","unclassified","get_bf_feedforward","get",
"AC_AttitudeControl","unclassified","get_throttle_in","get",
"AC_AttitudeControl","unclassified","angle_boost","get",
"AC_AttitudeControl","unclassified","lean_angle_max_cd","get",
"AC_AttitudeControl","unclassified","lean_angle_deg","property wrapper",
"AC_AttitudeControl","unclassified","parameter_sanity_check","empty",
"AC_AttitudeControl","unclassified","set_notch_sample_rate","empty",
"AC_AttitudeControl","unclassified","is_throttle_mix_min","incidental",
"AC_AttitudeControl","unclassified","set_throttle_mix_min","empty",
"AC_AttitudeControl","unclassified","set_throttle_mix_man","empty",
"AC_AttitudeControl","unclassified","set_throttle_mix_max","empty",
"AC_AttitudeControl","unclassified","set_throttle_mix_value","empty",
"AC_AttitudeControl","unclassified","get_throttle_mix","incidental",
"AC_AttitudeControl","unclassified","use_flybar_passthrough","empty",
"AC_AttitudeControl","unclassified","use_leaky_i","empty",
"AC_AttitudeControl","unclassified","set_hover_roll_trim_scalar","empty",
"AC_AttitudeControl","unclassified","get_roll_trim_cd","incidental",
"AC_AttitudeControl","unclassified","passthrough_bf_roll_pitch_rate_yaw","empty",
"AC_AttitudeControl","unclassified","set_inverted_flight","empty",
"AC_AttitudeControl","unclassified","set_roll_pitch_rate_tc","set",
"AC_AttitudeControl","unclassified","set_yaw_rate_tc","set",
"AC_AttitudeControl","unclassified","set_angle_P_scale","set collaborator",
"AC_AttitudeControl","unclassified","set_angle_P_scale_mult","set collaborator",
"AC_AttitudeControl","unclassified","get_last_angle_P_scale","get collaborator",
"AC_AttitudeControl","unclassified","set_PD_scale_mult","set collaborator",
"AC_AttitudeControl","unclassified","get_PD_scale_logging","get collaborator",
"AC_AttitudeControl","unclassified","get_roll_trim_rad","incidental",
"AC_AttitudeControl","unclassified","get_slew_yaw_max_rads","property",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::get_slew_yaw_max_degs","property wrapper",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::relax_attitude_controllers","command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::reset_rate_controller_I_terms","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::reset_rate_controller_I_terms_smoothly","wrapper",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_quaternion","void-accessor command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_euler_angle_roll_pitch_euler_rate_yaw","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_euler_angle_roll_pitch_yaw","command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_euler_rate_roll_pitch_yaw","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_rate_bf_roll_pitch_yaw","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_rate_bf_roll_pitch_yaw_2","command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_rate_bf_roll_pitch_yaw_3","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_angle_step_bf_roll_pitch_yaw","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_thrust_vector_rate_heading","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_thrust_vector_heading","command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_thrust_vector_heading","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::attitude_from_thrust_vector","controller stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::attitude_controller_run_quat","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::thrust_heading_rotation_angles","void-accessor",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::thrust_vector_rotation_angles","controller stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_shaping_angle","property non-void-command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_shaping_ang_vel","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::input_shaping_rate_predictor","void-accessor collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::ang_vel_limit","controller stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::euler_accel_limit","controller stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::reset_target_and_rate","command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::reset_yaw_target_and_rate","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::inertial_frame_reset","collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::euler_rate_to_ang_vel","controller stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::ang_vel_to_euler_rate","controller stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::update_ang_vel_target_from_att_error","property non-void-command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::accel_limiting","command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::get_althold_lean_angle_max_cd","property wrapper",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::max_rate_step_bf_roll","property non-void-command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::max_rate_step_bf_pitch","property non-void-command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::max_rate_step_bf_yaw","property non-void-command",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::pre_arm_checks","controller stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::get_rpy_srate","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_filter_pid","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_update","command collaborator",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_log","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_rms_output_roll","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_rms_output_roll_P","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_rms_output_roll_D","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_rms_output_pitch","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_rms_output_pitch_P","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_rms_output_pitch_D","wrapper stateless",
"AC_AttitudeControl","unclassified","AC_AttitudeControl::control_monitor_rms_output_yaw","wrapper stateless",
"ObjectBuffer_TS","unclassified","ObjectBuffer_TS","constructor",
"ObjectBuffer_TS","unclassified","~ObjectBuffer_TS","destructor",
"ObjectBuffer_TS","unclassified","get_size","property non-void-command",
"ObjectBuffer_TS","unclassified","set_size","predicate non-void-command",
"ObjectBuffer_TS","unclassified","peek","property non-void-command",
"ObjectBuffer_TS","unclassified","clear","command",
"ObjectBuffer_TS","unclassified","available","property non-void-command",
"ObjectBuffer_TS","unclassified","space","property non-void-command",
"ObjectBuffer_TS","unclassified","is_empty","predicate non-void-command",
"ObjectBuffer_TS","unclassified","push","predicate non-void-command collaborator",
"ObjectBuffer_TS","unclassified","push","predicate non-void-command",
"ObjectBuffer_TS","unclassified","pop","predicate non-void-command",
"ObjectBuffer_TS","unclassified","pop","predicate non-void-command collaborator",
"ObjectBuffer_TS","unclassified","push_force","predicate non-void-command collaborator",
"ObjectBuffer_TS","unclassified","push_force","predicate non-void-command",
"ObjectBuffer_TS","unclassified","peek","predicate non-void-command collaborator",
"ObjectBuffer_TS","unclassified","readptr","property non-void-command collaborator",
"ObjectBuffer_TS","unclassified","advance","predicate non-void-command",
"ObjectBuffer_TS","unclassified","update","predicate non-void-command collaborator",
"AP_RangeFinder_MSP","commander","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_MSP","commander","AP_RangeFinder_MSP::AP_RangeFinder_MSP","constructor",
"AP_RangeFinder_MSP","commander","AP_RangeFinder_MSP::detect","incidental",
"AP_RangeFinder_MSP","commander","AP_RangeFinder_MSP::handle_msp","command collaborator",
"AP_RangeFinder_MSP","commander","AP_RangeFinder_MSP::update","set",
"AP_AIS","unclassified","AP_AIS::AP_AIS","constructor",
"AP_AIS","unclassified","AP_AIS::enabled","predicate",
"AP_AIS","unclassified","AP_AIS::init","command",
"AP_AIS","unclassified","AP_AIS::update","command",
"AP_AIS","unclassified","AP_AIS::send","command collaborator",
"AP_AIS","unclassified","AP_AIS::buffer_shift","wrapper",
"AP_AIS","unclassified","AP_AIS::get_vessel_index","predicate non-void-command",
"AP_AIS","unclassified","AP_AIS::clear_list_item","command",
"AP_AIS","unclassified","AP_AIS::payload_decode","predicate non-void-command",
"AP_AIS","unclassified","AP_AIS::decode_position_report","predicate non-void-command",
"AP_AIS","unclassified","AP_AIS::decode_base_station_report","predicate non-void-command",
"AP_AIS","unclassified","AP_AIS::decode_static_and_voyage_data","predicate non-void-command",
"AP_AIS","unclassified","AP_AIS::get_char","void-accessor command",
"AP_AIS","unclassified","AP_AIS::get_bits","property non-void-command",
"AP_AIS","unclassified","AP_AIS::get_bits_signed","property non-void-command",
"AP_AIS","unclassified","AP_AIS::payload_char_decode","incidental",
"AP_AIS","unclassified","AP_AIS::log_raw","wrapper stateless",
"AP_AIS","unclassified","AP_AIS::decode","predicate non-void-command",
"AP_AIS","unclassified","AP_AIS::decode_latest_term","predicate non-void-command",
"AP_AIS","unclassified","AP_AIS::get_singleton","get",
"AP_AIS","unclassified","AP_AIS::AP_AIS","constructor",
"AP_AIS","unclassified","AP_AIS::enabled","incidental",
"AP_AIS","unclassified","AP_AIS::init","empty",
"AP_AIS","unclassified","AP_AIS::update","empty",
"AP_AIS","unclassified","AP_AIS::send","empty",
"AP_AIS","unclassified","AP_AIS::get_singleton","incidental",
"AP_AIS","unclassified","update","wrapper stateless",
"AP_AIS","unclassified","init","empty",
"AP_AIS","unclassified","init","wrapper stateless",
"AP_AIS","unclassified","init","wrapper stateless",
"Menu_Commands","boundary degenerate small-class","Menu_Commands::menu_servo","wrapper stateless",
"Menu_Commands","boundary degenerate small-class","Menu_Commands::menu_esc","wrapper stateless",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::AP_InertialSensor_Invensense","constructor",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::~AP_InertialSensor_Invensense","destructor",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::probe","controller stateless",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::probe","controller stateless",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_init","predicate non-void-command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_fifo_reset","command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_fast_fifo_reset","set",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_has_auxiliary_bus","predicate non-void-command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::start","command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::get_output_banner","predicate wrapper",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::update","predicate non-void-command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::accumulate","empty",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::get_auxiliary_bus","get non-void-command collaborator",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_data_ready","predicate non-void-command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_poll_data","command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_check_register_change","command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_accumulate","predicate non-void-command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_accumulate_sensor_rate_sampling","predicate non-void-command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_read_fifo","command collaborator",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_check_raw_temp","predicate set",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_block_read","predicate non-void-command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_register_read","property non-void-command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_register_write","command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_set_filter_register","command",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_check_whoami","predicate set",
"AP_InertialSensor_Invensense","unclassified","AP_InertialSensor_Invensense::_hardware_init","predicate non-void-command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::AP_Baro_ICM20789","constructor",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::probe","controller stateless",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::imu_spi_init","predicate non-void-command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::imu_i2c_init","predicate non-void-command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::init","predicate non-void-command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::send_cmd16","predicate non-void-command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::read_calibration_data","predicate non-void-command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::calculate_conversion_constants","incidental",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::get_pressure","property non-void-command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::convert_data","command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::timer","command",
"AP_Baro_ICM20789","unclassified","AP_Baro_ICM20789::update","wrapper",
"LowPass2pHelper","pure-controller degenerate small-class","print_transfer_function","controller stateless",
"GeodesicGridTest","boundary degenerate small-class","test_triangles_indexes","wrapper stateless",
"LR_MsgHandler_EKF","empty","LR_MsgHandler_EKF","constructor",
"AC_AttitudeControl_TS","pure-controller degenerate small-class","~AC_AttitudeControl_TS","destructor",
"AC_AttitudeControl_TS","pure-controller degenerate small-class","AC_AttitudeControl_TS::relax_attitude_controllers","controller stateless",
"AC_AttitudeControl_TS","pure-controller degenerate small-class","AC_AttitudeControl_TS::input_euler_rate_yaw_euler_angle_pitch_bf_roll","controller stateless",
"GCS_Blimp","degenerate","min_loop_time_remaining_for_message_send_us","incidental",
"GCS_Blimp","degenerate","new_gcs_mavlink_backend","wrapper stateless",
"GCS_Blimp","degenerate","GCS_Blimp::sysid_this_mav","incidental",
"GCS_Blimp","degenerate","GCS_Blimp::frame_string","controller stateless",
"GCS_Blimp","degenerate","GCS_Blimp::update_vehicle_sensor_status_flags","command",
"GCS_Blimp","degenerate","GCS_Blimp::frame_type","controller stateless",
"GCS_Blimp","degenerate","GCS_Blimp::custom_mode","incidental",
"GCS_Blimp","degenerate","GCS_Blimp::vehicle_initialised","incidental",
"EKFGSF_yaw","boundary","EKFGSF_yaw::Log_Write","wrapper",
"EKFGSF_yaw","boundary","EKFGSF_yaw::EKFGSF_yaw","constructor",
"EKFGSF_yaw","boundary","EKFGSF_yaw::update","command collaborator",
"EKFGSF_yaw","boundary","EKFGSF_yaw::fuseVelData","command collaborator",
"EKFGSF_yaw","boundary","EKFGSF_yaw::predictAHRS","command collaborator",
"EKFGSF_yaw","boundary","EKFGSF_yaw::alignTilt","controller",
"EKFGSF_yaw","boundary","EKFGSF_yaw::alignYaw","controller",
"EKFGSF_yaw","boundary","EKFGSF_yaw::predict","command collaborator",
"EKFGSF_yaw","boundary","EKFGSF_yaw::correct","predicate non-void-command collaborator",
"EKFGSF_yaw","boundary","EKFGSF_yaw::resetEKFGSF","command",
"EKFGSF_yaw","boundary","EKFGSF_yaw::gaussianDensity","property wrapper",
"EKFGSF_yaw","boundary","EKFGSF_yaw::forceSymmetry","collaborator",
"EKFGSF_yaw","boundary","EKFGSF_yaw::updateRotMat","wrapper stateless",
"EKFGSF_yaw","boundary","EKFGSF_yaw::getYawData","predicate",
"EKFGSF_yaw","boundary","EKFGSF_yaw::getVelInnovLength","predicate wrapper",
"EKFGSF_yaw","boundary","EKFGSF_yaw::setGyroBias","controller",
"RF_JRE","data-class small-class","RF_JRE::packet_for_alt","property set",
"LR_MsgHandler_RGPI","boundary degenerate small-class","LR_MsgHandler_RGPI::process_message","wrapper stateless",
"AP_RangeFinder_LeddarOne","entity boundary","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_LeddarOne","entity boundary","AP_RangeFinder_LeddarOne::get_reading","predicate non-void-command collaborator",
"AP_RangeFinder_LeddarOne","entity boundary","AP_RangeFinder_LeddarOne::CRC16","wrapper stateless",
"AP_RangeFinder_LeddarOne","entity boundary","AP_RangeFinder_LeddarOne::parse_response","property non-void-command collaborator",
"SyncChannel","commander","SyncChannel","constructor",
"SyncChannel","commander","SetChannel","set",
"SyncChannel","commander","SetCountdown","command",
"SyncChannel","commander","SetHopping","command",
"SyncChannel","commander","SyncChannel::NextChannel","command",
"SyncChannel","commander","SyncChannel::SafeTable","set",
"SyncChannel","commander","SyncChannel::SetChannelIfSafe","command",
"AP_Frsky_MAVlite_Message","data-provider","get_float","predicate",
"AP_Frsky_MAVlite_Message","data-provider","set_float","predicate non-void-command",
"AP_Frsky_MAVlite_Message","data-provider","get_uint16","predicate",
"AP_Frsky_MAVlite_Message","data-provider","set_uint16","predicate non-void-command",
"AP_Frsky_MAVlite_Message","data-provider","get_uint8","predicate",
"AP_Frsky_MAVlite_Message","data-provider","set_uint8","predicate non-void-command",
"AP_Frsky_MAVlite_Message","data-provider","AP_Frsky_MAVlite_Message::get_bytes","predicate wrapper",
"AP_Frsky_MAVlite_Message","data-provider","AP_Frsky_MAVlite_Message::set_bytes","predicate set",
"AP_Frsky_MAVlite_Message","data-provider","AP_Frsky_MAVlite_Message::get_string","predicate wrapper",
"AP_Frsky_MAVlite_Message","data-provider","AP_Frsky_MAVlite_Message::set_string","wrapper stateless",
"AP_Frsky_MAVlite_Message","data-provider","AP_Frsky_MAVlite_Message::bit8_unpack","incidental",
"AP_Frsky_MAVlite_Message","data-provider","AP_Frsky_MAVlite_Message::bit8_pack","incidental",
"ModeQLand","degenerate","mode_number","collaborator incidental",
"ModeQLand","degenerate","name","incidental",
"ModeQLand","degenerate","name4","incidental",
"ModeQLand","degenerate","is_vtol_mode","incidental",
"ModeQLand","degenerate","_pre_arm_checks","incidental",
"ModeQLand","degenerate","ModeQLand::_enter","controller stateless",
"ModeQLand","degenerate","ModeQLand::update","controller stateless",
"ModeQLand","degenerate","ModeQLand::run","controller stateless",
"ToshibaLED_I2C","unclassified","ToshibaLED_I2C::ToshibaLED_I2C","constructor",
"ToshibaLED_I2C","unclassified","ToshibaLED_I2C::init","predicate",
"ToshibaLED_I2C","unclassified","ToshibaLED_I2C::hw_set_rgb","predicate set",
"ToshibaLED_I2C","unclassified","ToshibaLED_I2C::_timer","set",
"LR_MsgHandler_REV2","pure-controller small-class","LR_MsgHandler_REV2::process_message","controller",
"HALSITL::Util","degenerate","run_debug_shell","collaborator incidental",
"HALSITL::Util","degenerate","available_memory","incidental",
"HALSITL::Util","degenerate","get_custom_defaults_file","get",
"HALSITL::Util","degenerate","set_hw_rtc","empty",
"HALSITL::Util","degenerate","toneAlarm_init","predicate non-void-command",
"HALSITL::Util","degenerate","toneAlarm_set_buzzer_tone","command",
"HALSITL::Util","degenerate","was_watchdog_reset","wrapper stateless",
"HALSITL::Util","degenerate","trap","wrapper stateless",
"HALSITL::Util","degenerate","init","command",
"HALSITL::Util","degenerate","dump_stack_trace","wrapper stateless",
"LR_MsgHandler_RRNI","boundary degenerate small-class","LR_MsgHandler_RRNI::process_message","wrapper stateless",
"AP_LandingGear","unclassified","AP_LandingGear","constructor",
"AP_LandingGear","unclassified","log_wow_state","empty",
"AP_LandingGear","unclassified","init","empty",
"AP_LandingGear","unclassified","init","wrapper stateless",
"AP_LandingGear","unclassified","init","wrapper stateless",
"AP_LandingGear","unclassified","AP_LandingGear::init","command",
"AP_LandingGear","unclassified","AP_LandingGear::set_position","command collaborator",
"AP_LandingGear","unclassified","AP_LandingGear::deploy","command",
"AP_LandingGear","unclassified","AP_LandingGear::retract","command",
"AP_LandingGear","unclassified","AP_LandingGear::deployed","get predicate controller",
"AP_LandingGear","unclassified","AP_LandingGear::get_wow_state","get collaborator",
"AP_LandingGear","unclassified","AP_LandingGear::get_state","get collaborator",
"AP_LandingGear","unclassified","AP_LandingGear::get_gear_state_duration_ms","property wrapper",
"AP_LandingGear","unclassified","AP_LandingGear::get_wow_state_duration_ms","property wrapper",
"AP_LandingGear","unclassified","AP_LandingGear::update","command",
"AP_LandingGear","unclassified","AP_LandingGear::log_wow_state","wrapper",
"AP_LandingGear","unclassified","AP_LandingGear::check_before_land","predicate non-void-command",
"AP_LandingGear","unclassified","AP_LandingGear::retract_after_takeoff","command",
"AP_LandingGear","unclassified","AP_LandingGear::deploy_for_landing","command",
"ModeFlip","lazy-class degenerate","mode_number","collaborator incidental",
"ModeFlip","lazy-class degenerate","requires_GPS","incidental",
"ModeFlip","lazy-class degenerate","has_manual_throttle","incidental",
"ModeFlip","lazy-class degenerate","allows_arming","collaborator incidental",
"ModeFlip","lazy-class degenerate","is_autopilot","incidental",
"ModeFlip","lazy-class degenerate","name","incidental",
"ModeFlip","lazy-class degenerate","name4","incidental",
"ModeFlip","lazy-class degenerate","ModeFlip::init","predicate non-void-command",
"ModeFlip","lazy-class degenerate","ModeFlip::run","set",
"AP_Parachute","unclassified","AP_Parachute","constructor",
"AP_Parachute","unclassified","enabled","get",
"AP_Parachute","unclassified","released","get",
"AP_Parachute","unclassified","release_initiated","get",
"AP_Parachute","unclassified","release_in_progress","get",
"AP_Parachute","unclassified","alt_min","get",
"AP_Parachute","unclassified","set_is_flying","set",
"AP_Parachute","unclassified","update","wrapper stateless",
"AP_Parachute","unclassified","AP_Parachute::enabled","set",
"AP_Parachute","unclassified","AP_Parachute::release","command",
"AP_Parachute","unclassified","AP_Parachute::update","command collaborator",
"AP_Parachute","unclassified","AP_Parachute::set_sink_rate","set",
"AP_Parachute","unclassified","AP_Parachute::check_sink_rate","command",
"AP_Parachute","unclassified","AP_Parachute::arming_checks","predicate controller",
"AP_Parachute","unclassified","AP_Parachute::get_legacy_relay_index","predicate",
"AP_BattMonitor_Generator_Elec","degenerate","init","empty",
"AP_BattMonitor_Generator_Elec","degenerate","AP_BattMonitor_Generator_Elec::has_current","controller stateless",
"AP_BattMonitor_Generator_Elec","degenerate","AP_BattMonitor_Generator_Elec::has_consumed_energy","controller stateless",
"AP_BattMonitor_Generator_Elec","degenerate","AP_BattMonitor_Generator_Elec::read","command collaborator",
"AP_BattMonitor_Generator_Elec","degenerate","AP_BattMonitor_Generator_Elec::update_failsafes","controller stateless",
"ABinVerifier","boundary","run","predicate wrapper",
"ABinVerifier","boundary","name_value_callback","set",
"ABinVerifier","boundary","body_callback","wrapper",
"ExtendedKalmanFilter","unclassified","ExtendedKalmanFilter","constructor",
"ExtendedKalmanFilter","unclassified","ExtendedKalmanFilter::measurementpredandjacobian","property wrapper",
"ExtendedKalmanFilter","unclassified","ExtendedKalmanFilter::reset","command",
"ExtendedKalmanFilter","unclassified","ExtendedKalmanFilter::update","command",
"Parachute","entity boundary","Parachute","constructor",
"Parachute","entity boundary","is_enabled","predicate",
"Parachute","entity boundary","Parachute::update","command collaborator",
"Parachute","entity boundary","Parachute::should_report","predicate wrapper",
"AC_AutoTune","unclassified","reset","command",
"AC_AutoTune","unclassified","AC_AutoTune::AC_AutoTune","constructor",
"AC_AutoTune","unclassified","AC_AutoTune::init_internals","predicate non-void-command collaborator",
"AC_AutoTune","unclassified","AC_AutoTune::stop","command",
"AC_AutoTune","unclassified","AC_AutoTune::init_position_controller","predicate non-void-command",
"AC_AutoTune","unclassified","AC_AutoTune::send_step_string","wrapper",
"AC_AutoTune","unclassified","AC_AutoTune::type_string","property wrapper",
"AC_AutoTune","unclassified","AC_AutoTune::axis_string","property",
"AC_AutoTune","unclassified","AC_AutoTune::run","command",
"AC_AutoTune","unclassified","AC_AutoTune::currently_level","predicate",
"AC_AutoTune","unclassified","AC_AutoTune::control_attitude","command",
"AC_AutoTune","unclassified","AC_AutoTune::backup_gains_and_initialise","command",
"AC_AutoTune","unclassified","AC_AutoTune::load_gains","wrapper stateless",
"AC_AutoTune","unclassified","AC_AutoTune::update_gcs","wrapper",
"AC_AutoTune","unclassified","AC_AutoTune::roll_enabled","wrapper stateless",
"AC_AutoTune","unclassified","AC_AutoTune::pitch_enabled","wrapper stateless",
"AC_AutoTune","unclassified","AC_AutoTune::yaw_enabled","wrapper stateless",
"AC_AutoTune","unclassified","AC_AutoTune::yaw_d_enabled","wrapper stateless",
"AC_AutoTune","unclassified","AC_AutoTune::position_ok","predicate non-void-command collaborator",
"AC_AutoTune","unclassified","AC_AutoTune::get_poshold_attitude","void-accessor command",
"AC_AutoTune","unclassified","AC_AutoTune::next_tune_type","void-accessor set",
"ChibiOS::Storage","degenerate small-class","init","empty",
"AP_DroneCAN_Serial","unclassified","AP_DroneCAN_Serial","constructor",
"AP_DroneCAN_Serial","unclassified","AP_DroneCAN_Serial::init","command collaborator",
"AP_DroneCAN_Serial","unclassified","AP_DroneCAN_Serial::update","command collaborator",
"AP_DroneCAN_Serial","unclassified","AP_DroneCAN_Serial::handle_tunnel_targetted","controller",
"AP_Camera_Params","empty","AP_Camera_Params::AP_Camera_Params","constructor",
"AP_AdvancedFailsafe_Plane","pure-controller degenerate","AP_AdvancedFailsafe_Plane::terminate_vehicle","controller",
"AP_AdvancedFailsafe_Plane","pure-controller degenerate","AP_AdvancedFailsafe_Plane::setup_IO_failsafe","controller stateless",
"AP_AdvancedFailsafe_Plane","pure-controller degenerate","AP_AdvancedFailsafe_Plane::afs_mode","controller stateless",
"AP_AdvancedFailsafe_Plane","pure-controller degenerate","AP_AdvancedFailsafe_Plane::set_mode_auto","controller stateless",
"ModeAvoidADSB","boundary degenerate","mode_number","collaborator incidental",
"ModeAvoidADSB","boundary degenerate","requires_GPS","incidental",
"ModeAvoidADSB","boundary degenerate","has_manual_throttle","incidental",
"ModeAvoidADSB","boundary degenerate","allows_arming","collaborator incidental",
"ModeAvoidADSB","boundary degenerate","is_autopilot","incidental",
"ModeAvoidADSB","boundary degenerate","name","incidental",
"ModeAvoidADSB","boundary degenerate","name4","incidental",
"ModeAvoidADSB","boundary degenerate","ModeAvoidADSB::init","wrapper stateless",
"ModeAvoidADSB","boundary degenerate","ModeAvoidADSB::set_velocity","controller stateless",
"ModeAvoidADSB","boundary degenerate","ModeAvoidADSB::run","wrapper stateless",
"ModeAvoidADSB","boundary degenerate","ModeAvoidADSB::_enter","controller stateless",
"ModeAvoidADSB","boundary degenerate","ModeAvoidADSB::update","controller stateless",
"ModeAvoidADSB","boundary degenerate","ModeAvoidADSB::navigate","controller stateless",
"ModeQAcro","degenerate","mode_number","collaborator incidental",
"ModeQAcro","degenerate","name","incidental",
"ModeQAcro","degenerate","name4","incidental",
"ModeQAcro","degenerate","is_vtol_mode","incidental",
"ModeQAcro","degenerate","is_vtol_man_throttle","incidental",
"ModeQAcro","degenerate","is_vtol_man_mode","incidental",
"ModeQAcro","degenerate","ModeQAcro::_enter","controller stateless",
"ModeQAcro","degenerate","ModeQAcro::update","controller stateless",
"ModeQAcro","degenerate","ModeQAcro::run","controller stateless",
"RCOutput_Disco","unclassified","~RCOutput_Disco","destructor",
"RCOutput_Disco","unclassified","RCOutput_Disco::RCOutput_Disco","constructor",
"RCOutput_Disco","unclassified","RCOutput_Disco::init","command",
"RCOutput_Disco","unclassified","RCOutput_Disco::set_freq","controller",
"RCOutput_Disco","unclassified","RCOutput_Disco::get_freq","get property controller",
"RCOutput_Disco","unclassified","RCOutput_Disco::enable_ch","controller",
"RCOutput_Disco","unclassified","RCOutput_Disco::disable_ch","controller",
"RCOutput_Disco","unclassified","RCOutput_Disco::write","controller",
"RCOutput_Disco","unclassified","RCOutput_Disco::read","get property controller",
"RCOutput_Disco","unclassified","RCOutput_Disco::read","void-accessor command",
"RCOutput_Disco","unclassified","RCOutput_Disco::cork","command",
"RCOutput_Disco","unclassified","RCOutput_Disco::push","command",
"AP_BattMonitor_ESC","unclassified","~AP_BattMonitor_ESC","destructor",
"AP_BattMonitor_ESC","unclassified","has_current","get",
"AP_BattMonitor_ESC","unclassified","has_temperature","get",
"AP_BattMonitor_ESC","unclassified","AP_BattMonitor_ESC::AP_BattMonitor_ESC","constructor",
"AP_BattMonitor_ESC","unclassified","AP_BattMonitor_ESC::init","empty",
"AP_BattMonitor_ESC","unclassified","AP_BattMonitor_ESC::read","command",
"AP_BattMonitor_ESC","unclassified","AP_BattMonitor_ESC::reset_remaining","predicate set",
"AP_Avoidance_Copter","boundary","AP_Avoidance_Copter::handle_avoidance","property collaborator",
"AP_Avoidance_Copter","boundary","AP_Avoidance_Copter::handle_recovery","command collaborator",
"AP_Avoidance_Copter","boundary","AP_Avoidance_Copter::set_mode_else_try_RTL_else_LAND","controller stateless",
"AP_Avoidance_Copter","boundary","AP_Avoidance_Copter::get_altitude_minimum","incidental",
"AP_Avoidance_Copter","boundary","AP_Avoidance_Copter::check_flightmode","controller stateless",
"AP_Avoidance_Copter","boundary","AP_Avoidance_Copter::handle_avoidance_vertical","predicate non-void-command collaborator",
"AP_Avoidance_Copter","boundary","AP_Avoidance_Copter::handle_avoidance_horizontal","predicate non-void-command collaborator",
"AP_Avoidance_Copter","boundary","AP_Avoidance_Copter::handle_avoidance_perpendicular","predicate non-void-command collaborator",
"GCS_MAVLINK_Blimp","degenerate","vtol_state","collaborator incidental",
"GCS_MAVLINK_Blimp","degenerate","log_radio_bit","incidental",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::base_mode","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::vehicle_system_status","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::send_position_target_global_int","controller",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::send_nav_controller_output","empty",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::vfr_hud_airspeed","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::vfr_hud_throttle","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::send_pid_tuning","controller",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::sysid_my_gcs","incidental",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::sysid_enforce","incidental",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::telem_delay","incidental",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::try_send_message","predicate non-void-command collaborator",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::packetReceived","wrapper stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::params_ready","wrapper stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::send_banner","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::_handle_command_preflight_calibration","wrapper stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::handle_command_do_set_roi","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::handle_command_int_do_reposition","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::handle_command_int_packet","property non-void-command collaborator",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::mav_frame_for_command_long","wrapper stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::handle_message","wrapper stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::handle_flight_termination","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::vfr_hud_alt","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::capabilities","wrapper stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::landed_state","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::send_wind","controller",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::high_latency_wind_speed","controller stateless",
"GCS_MAVLINK_Blimp","degenerate","GCS_MAVLINK_Blimp::high_latency_wind_direction","wrapper stateless",
"LR_MsgHandler_RBCH","boundary degenerate small-class","LR_MsgHandler_RBCH::process_message","wrapper stateless",
"ModeGuided","degenerate","number","collaborator incidental",
"ModeGuided","degenerate","requires_armed_servos","incidental",
"ModeGuided","degenerate","set_angle","command",
"ModeGuided","degenerate","ModeGuided::update","command",
"ModeGuided","degenerate","ModeGuided::init","predicate non-void-command",
"ModeGuided","degenerate","ModeGuided::run","command",
"ModeGuided","degenerate","ModeGuided::option_is_enabled","controller stateless",
"ModeGuided","degenerate","ModeGuided::allows_arming","predicate collaborator",
"ModeGuided","degenerate","ModeGuided::allows_weathervaning","predicate",
"ModeGuided","degenerate","ModeGuided::do_user_takeoff_start","controller stateless",
"ModeGuided","degenerate","ModeGuided::wp_control_start","controller stateless",
"ModeGuided","degenerate","ModeGuided::wp_control_run","controller stateless",
"ModeGuided","degenerate","ModeGuided::pva_control_start","controller stateless",
"ModeGuided","degenerate","ModeGuided::pos_control_start","command",
"ModeGuided","degenerate","ModeGuided::accel_control_start","command",
"ModeGuided","degenerate","ModeGuided::velaccel_control_start","command",
"ModeGuided","degenerate","ModeGuided::posvelaccel_control_start","command",
"ModeGuided","degenerate","ModeGuided::is_taking_off","incidental",
"ModeGuided","degenerate","ModeGuided::set_speed_xy","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_speed_up","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_speed_down","controller stateless",
"ModeGuided","degenerate","ModeGuided::angle_control_start","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_destination","predicate non-void-command",
"ModeGuided","degenerate","ModeGuided::get_wp","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_destination","predicate non-void-command",
"ModeGuided","degenerate","ModeGuided::set_accel","command",
"ModeGuided","degenerate","ModeGuided::set_velocity","command",
"ModeGuided","degenerate","ModeGuided::set_velaccel","command",
"ModeGuided","degenerate","ModeGuided::set_destination_posvel","predicate non-void-command",
"ModeGuided","degenerate","ModeGuided::set_destination_posvelaccel","predicate non-void-command collaborator",
"ModeGuided","degenerate","ModeGuided::set_attitude_target_provides_thrust","predicate",
"ModeGuided","degenerate","ModeGuided::stabilizing_pos_xy","predicate",
"ModeGuided","degenerate","ModeGuided::stabilizing_vel_xy","predicate",
"ModeGuided","degenerate","ModeGuided::use_wpnav_for_position_control","predicate",
"ModeGuided","degenerate","ModeGuided::set_angle","void-accessor command",
"ModeGuided","degenerate","ModeGuided::takeoff_run","controller stateless",
"ModeGuided","degenerate","ModeGuided::pos_control_run","command",
"ModeGuided","degenerate","ModeGuided::accel_control_run","command",
"ModeGuided","degenerate","ModeGuided::velaccel_control_run","command",
"ModeGuided","degenerate","ModeGuided::pause_control_run","controller stateless",
"ModeGuided","degenerate","ModeGuided::posvelaccel_control_run","command",
"ModeGuided","degenerate","ModeGuided::angle_control_run","command",
"ModeGuided","degenerate","ModeGuided::set_yaw_state","controller stateless",
"ModeGuided","degenerate","ModeGuided::use_pilot_yaw","predicate",
"ModeGuided","degenerate","ModeGuided::limit_clear","incidental",
"ModeGuided","degenerate","ModeGuided::limit_set","incidental",
"ModeGuided","degenerate","ModeGuided::limit_init_time_and_pos","controller stateless",
"ModeGuided","degenerate","ModeGuided::limit_check","controller stateless",
"ModeGuided","degenerate","ModeGuided::get_target_pos","collaborator incidental",
"ModeGuided","degenerate","ModeGuided::get_target_vel","collaborator incidental",
"ModeGuided","degenerate","ModeGuided::get_target_accel","collaborator incidental",
"ModeGuided","degenerate","ModeGuided::wp_distance","controller stateless",
"ModeGuided","degenerate","ModeGuided::wp_bearing","controller stateless",
"ModeGuided","degenerate","ModeGuided::crosstrack_error","controller stateless",
"ModeGuided","degenerate","ModeGuided::get_timeout_ms","wrapper stateless",
"ModeGuided","degenerate","ModeGuided::pause","incidental",
"ModeGuided","degenerate","ModeGuided::resume","incidental",
"ModeGuided","degenerate","ModeGuided::_enter","controller stateless",
"ModeGuided","degenerate","ModeGuided::update","controller stateless",
"ModeGuided","degenerate","ModeGuided::navigate","controller stateless",
"ModeGuided","degenerate","ModeGuided::handle_guided_request","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_radius_and_direction","wrapper stateless",
"ModeGuided","degenerate","ModeGuided::update_target_altitude","controller stateless",
"ModeGuided","degenerate","ModeGuided::init","predicate non-void-command",
"ModeGuided","degenerate","ModeGuided::get_default_auto_yaw_mode","collaborator incidental",
"ModeGuided","degenerate","ModeGuided::guided_pos_control_start","command collaborator",
"ModeGuided","degenerate","ModeGuided::guided_vel_control_start","command",
"ModeGuided","degenerate","ModeGuided::guided_posvel_control_start","command",
"ModeGuided","degenerate","ModeGuided::guided_angle_control_start","command",
"ModeGuided","degenerate","ModeGuided::guided_set_destination","predicate non-void-command collaborator",
"ModeGuided","degenerate","ModeGuided::guided_set_destination","predicate non-void-command collaborator",
"ModeGuided","degenerate","ModeGuided::guided_set_destination","predicate non-void-command collaborator",
"ModeGuided","degenerate","ModeGuided::guided_set_velocity","command collaborator",
"ModeGuided","degenerate","ModeGuided::guided_set_velocity","command",
"ModeGuided","degenerate","ModeGuided::guided_set_destination_posvel","predicate non-void-command collaborator",
"ModeGuided","degenerate","ModeGuided::guided_set_destination_posvel","predicate non-void-command",
"ModeGuided","degenerate","ModeGuided::guided_set_angle","command",
"ModeGuided","degenerate","ModeGuided::guided_set_yaw_state","command",
"ModeGuided","degenerate","ModeGuided::run","command",
"ModeGuided","degenerate","ModeGuided::guided_pos_control_run","command",
"ModeGuided","degenerate","ModeGuided::guided_vel_control_run","command",
"ModeGuided","degenerate","ModeGuided::guided_posvel_control_run","command",
"ModeGuided","degenerate","ModeGuided::guided_angle_control_run","controller stateless",
"ModeGuided","degenerate","ModeGuided::guided_limit_clear","incidental",
"ModeGuided","degenerate","ModeGuided::set_auto_yaw_mode","collaborator incidental",
"ModeGuided","degenerate","ModeGuided::get_auto_heading","controller stateless",
"ModeGuided","degenerate","ModeGuided::guided_limit_set","incidental",
"ModeGuided","degenerate","ModeGuided::guided_limit_init_time_and_pos","controller stateless",
"ModeGuided","degenerate","ModeGuided::guided_limit_check","controller stateless",
"ModeGuided","degenerate","ModeGuided::_enter","predicate non-void-command",
"ModeGuided","degenerate","ModeGuided::update","command",
"ModeGuided","degenerate","ModeGuided::wp_bearing","controller stateless",
"ModeGuided","degenerate","ModeGuided::nav_bearing","controller stateless",
"ModeGuided","degenerate","ModeGuided::crosstrack_error","controller stateless",
"ModeGuided","degenerate","ModeGuided::get_desired_lat_accel","controller stateless",
"ModeGuided","degenerate","ModeGuided::get_distance_to_destination","controller stateless",
"ModeGuided","degenerate","ModeGuided::reached_destination","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_desired_speed","controller stateless",
"ModeGuided","degenerate","ModeGuided::get_desired_location","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_desired_location","predicate non-void-command collaborator",
"ModeGuided","degenerate","ModeGuided::set_desired_heading_and_speed","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_desired_heading_delta_and_speed","command",
"ModeGuided","degenerate","ModeGuided::set_desired_turn_rate_and_speed","controller stateless",
"ModeGuided","degenerate","ModeGuided::set_steering_and_throttle","wrapper stateless",
"ModeGuided","degenerate","ModeGuided::start_loiter","controller stateless",
"ModeGuided","degenerate","ModeGuided::start_stop","incidental",
"ModeGuided","degenerate","ModeGuided::limit_set","incidental",
"ModeGuided","degenerate","ModeGuided::limit_clear","incidental",
"ModeGuided","degenerate","ModeGuided::limit_init_time_and_location","wrapper stateless",
"ModeGuided","degenerate","ModeGuided::limit_breached","controller stateless",
"ModeGuided","degenerate","ModeGuided::use_scurves_for_navigation","controller stateless",
"MultiCAN","commander boundary small-class","MultiCAN::MultiCAN","constructor",
"MultiCAN","commander boundary small-class","MultiCAN::handle_frame","command collaborator",
"ModeAutoTune","degenerate","mode_number","collaborator incidental",
"ModeAutoTune","degenerate","requires_GPS","incidental",
"ModeAutoTune","degenerate","has_manual_throttle","incidental",
"ModeAutoTune","degenerate","allows_arming","collaborator incidental",
"ModeAutoTune","degenerate","is_autopilot","incidental",
"ModeAutoTune","degenerate","name","incidental",
"ModeAutoTune","degenerate","name4","incidental",
"ModeAutoTune","degenerate","ModeAutoTune::init","predicate non-void-command",
"ModeAutoTune","degenerate","ModeAutoTune::run","command",
"ModeAutoTune","degenerate","ModeAutoTune::save_tuning_gains","command",
"ModeAutoTune","degenerate","ModeAutoTune::exit","command",
"ModeAutoTune","degenerate","ModeAutoTune::reset","command",
"ModeAutoTune","degenerate","ModeAutoTune::_enter","controller stateless",
"ModeAutoTune","degenerate","ModeAutoTune::update","controller stateless",
"ModeAutoTune","degenerate","ModeAutoTune::run","wrapper stateless",
"ModeAutoTune","degenerate","reset","controller stateless",
"AP_BattMonitor_EFI","commander degenerate","has_current","incidental",
"AP_BattMonitor_EFI","commander degenerate","has_consumed_energy","incidental",
"AP_BattMonitor_EFI","commander degenerate","AP_BattMonitor_EFI::read","command collaborator",
"RC_Channels_Copter","boundary degenerate","channel","property collaborator",
"RC_Channels_Copter","boundary degenerate","RC_Channels_Copter::flight_mode_channel_number","controller stateless",
"RC_Channels_Copter","boundary degenerate","RC_Channels_Copter::in_rc_failsafe","incidental",
"RC_Channels_Copter","boundary degenerate","RC_Channels_Copter::has_valid_input","predicate",
"RC_Channels_Copter","boundary degenerate","RC_Channels_Copter::arming_check_throttle","wrapper stateless",
"RC_Channels_Copter","boundary degenerate","RC_Channels_Copter::get_arming_channel","collaborator incidental",
"AP_Tuning_Plane","unclassified","AP_Tuning_Plane","constructor",
"AP_Tuning_Plane","unclassified","AP_Tuning_Plane::get_param_pointer","controller stateless",
"AP_Tuning_Plane","unclassified","AP_Tuning_Plane::save_value","command collaborator",
"AP_Tuning_Plane","unclassified","AP_Tuning_Plane::set_value","unclassified",
"AP_Tuning_Plane","unclassified","AP_Tuning_Plane::reload_value","command",
"ModeQStabilize","degenerate","mode_number","collaborator incidental",
"ModeQStabilize","degenerate","name","incidental",
"ModeQStabilize","degenerate","name4","incidental",
"ModeQStabilize","degenerate","is_vtol_mode","incidental",
"ModeQStabilize","degenerate","is_vtol_man_throttle","incidental",
"ModeQStabilize","degenerate","is_vtol_man_mode","incidental",
"ModeQStabilize","degenerate","allows_throttle_nudging","incidental",
"ModeQStabilize","degenerate","ModeQStabilize::_enter","incidental",
"ModeQStabilize","degenerate","ModeQStabilize::update","command",
"ModeQStabilize","degenerate","ModeQStabilize::run","controller stateless",
"ModeQStabilize","degenerate","ModeQStabilize::set_tailsitter_roll_pitch","controller stateless",
"ModeQStabilize","degenerate","ModeQStabilize::set_limited_roll_pitch","wrapper stateless",
"AP_RangeFinder_Benewake_TF02","degenerate small-class","model_dist_max_cm","incidental",
"AP_RangeFinder_Benewake_TF02","degenerate small-class","has_signal_byte","incidental",
"UserParameters","data-provider boundary data-class","get_int8Param","get collaborator",
"UserParameters","data-provider boundary data-class","get_int16Param","get collaborator",
"UserParameters","data-provider boundary data-class","get_floatParam","get collaborator",
"UserParameters","data-provider boundary data-class","UserParameters::UserParameters","constructor",
"AP_HMC5843_BusDriver_HALDevice","unclassified","set_device_type","command",
"AP_HMC5843_BusDriver_HALDevice","unclassified","get_bus_id","property",
"AP_HMC5843_BusDriver_HALDevice","unclassified","set_retries","command",
"AP_HMC5843_BusDriver_HALDevice","unclassified","AP_HMC5843_BusDriver_HALDevice::AP_HMC5843_BusDriver_HALDevice","constructor",
"AP_HMC5843_BusDriver_HALDevice","unclassified","AP_HMC5843_BusDriver_HALDevice::block_read","predicate non-void-command",
"AP_HMC5843_BusDriver_HALDevice","unclassified","AP_HMC5843_BusDriver_HALDevice::register_read","predicate non-void-command",
"AP_HMC5843_BusDriver_HALDevice","unclassified","AP_HMC5843_BusDriver_HALDevice::register_write","predicate non-void-command",
"AP_HMC5843_BusDriver_HALDevice","unclassified","AP_HMC5843_BusDriver_HALDevice::get_semaphore","property non-void-command collaborator",
"AP_HMC5843_BusDriver_HALDevice","unclassified","AP_HMC5843_BusDriver_HALDevice::register_periodic_callback","property non-void-command collaborator",
"AP_ExternalControl_Copter","unclassified","AP_ExternalControl_Copter::set_linear_velocity_and_yaw_rate","predicate non-void-command collaborator",
"AP_ExternalControl_Copter","unclassified","AP_ExternalControl_Copter::set_global_position","predicate non-void-command collaborator",
"AP_ExternalControl_Copter","unclassified","AP_ExternalControl_Copter::ready_for_external_control","controller stateless",
"AP_CustomRotations","entity boundary","AP_CustomRotations::AP_CustomRotations","constructor",
"AP_CustomRotations","entity boundary","AP_CustomRotations::init","command collaborator",
"AP_CustomRotations","entity boundary","AP_CustomRotations::convert","command collaborator",
"AP_CustomRotations","entity boundary","AP_CustomRotations::set","command collaborator",
"AP_CustomRotations","entity boundary","AP_CustomRotations::from_rotation","void-accessor command collaborator",
"AP_CustomRotations","entity boundary","AP_CustomRotations::from_rotation","void-accessor command collaborator",
"AP_CustomRotations","entity boundary","AP_CustomRotations::rotate","void-accessor command collaborator",
"AP_CustomRotations","entity boundary","AP_CustomRotations::rotate","void-accessor command collaborator",
"AP_CustomRotations","entity boundary","AP_CustomRotations::get_rotation","get property set collaborator",
"AP_CustomRotations","entity boundary","init","empty",
"AP_CustomRotations","entity boundary","init","wrapper stateless",
"AP_CustomRotations","entity boundary","init","wrapper stateless",
"AR_AttitudeControl","data-provider","get_turn_lat_accel_max","property wrapper",
"AR_AttitudeControl","data-provider","steering_limit_left","get",
"AR_AttitudeControl","data-provider","steering_limit_right","get",
"AR_AttitudeControl","data-provider","pitch_limited","get",
"AR_AttitudeControl","data-provider","get_steering_angle_p","get collaborator",
"AR_AttitudeControl","data-provider","get_steering_rate_pid","get collaborator",
"AR_AttitudeControl","data-provider","get_pitch_to_throttle_pid","get collaborator",
"AR_AttitudeControl","data-provider","get_sailboat_heel_pid","get collaborator",
"AR_AttitudeControl","data-provider","get_throttle_speed_pid_info","get collaborator",
"AR_AttitudeControl","data-provider","get_accel_max","property wrapper",
"AR_AttitudeControl","data-provider","get_stop_speed","property wrapper",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::AR_AttitudeControl","constructor",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_steering_out_lat_accel","property non-void-command",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_steering_out_heading","property non-void-command",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_turn_rate_from_heading","property",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_steering_out_rate","property non-void-command",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_desired_turn_rate","get property wrapper",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_desired_lat_accel","get property wrapper",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_lat_accel","predicate",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_turn_rate_from_lat_accel","wrapper stateless",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_throttle_out_speed","property non-void-command",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_throttle_out_stop","property non-void-command",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_throttle_out_from_pitch","property non-void-command",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_desired_pitch","property",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_sail_out_from_heel","property",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_srate","void-accessor command",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_forward_speed","controller stateless",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_decel_max","get wrapper",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::speed_control_active","predicate wrapper",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_desired_speed","get property",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_desired_speed_accel_limited","property",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::get_stopping_distance","property",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::relax_I","command",
"AR_AttitudeControl","data-provider","AR_AttitudeControl::set_notch_sample_rate","command",
"SIM_RGBLED","commander boundary","SIM_RGBLED","constructor",
"SIM_RGBLED","commander boundary","set_colours","command",
"SIM_RGBLED","commander boundary","init","empty",
"SIM_RGBLED","commander boundary","init","wrapper stateless",
"SIM_RGBLED","commander boundary","init","wrapper stateless",
"SIM_RGBLED","commander boundary","SIM_RGBLED::update_thread","set",
"SIM_RGBLED","commander boundary","SIM_RGBLED::update_thread_start","property command collaborator",
"SIM_RGBLED","commander boundary","SIM_RGBLED::init","wrapper",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::allocate_buffers","wrapper stateless",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::init","predicate set",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::link_up_cb","command",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::link_down_cb","command",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::low_level_output","wrapper stateless",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::low_level_input","wrapper stateless",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::ethernetif_init","collaborator incidental",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::thread","command collaborator",
"AP_Networking_ChibiOS","commander boundary","AP_Networking_ChibiOS::update","set",
"GCS_MAVLINK_Rover","degenerate","persist_streamrates","incidental",
"GCS_MAVLINK_Rover","degenerate","log_radio_bit","incidental",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::base_mode","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::vehicle_system_status","collaborator incidental",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::send_position_target_global_int","controller",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::send_nav_controller_output","controller",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::send_servo_out","controller",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::vfr_hud_throttle","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::send_rangefinder","controller",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::send_pid_tuning","controller",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::sysid_my_gcs","incidental",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::sysid_enforce","incidental",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::telem_delay","incidental",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::try_send_message","predicate non-void-command collaborator",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::packetReceived","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_guided_request","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::_handle_command_preflight_calibration","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_command_int_packet","property non-void-command collaborator",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_command_nav_set_yaw_speed","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_command_int_do_reposition","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_message","command collaborator",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_manual_control_axes","wrapper stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_set_attitude_target","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_set_position_target_local_ned","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_set_position_target_global_int","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::handle_landing_target","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::capabilities","wrapper stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::high_latency_tgt_heading","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::high_latency_tgt_dist","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::high_latency_tgt_airspeed","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::high_latency_wind_speed","controller stateless",
"GCS_MAVLINK_Rover","degenerate","GCS_MAVLINK_Rover::high_latency_wind_direction","controller stateless",
"AP_RangeFinder_LightWareI2C","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::AP_RangeFinder_LightWareI2C","constructor",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::detect","controller stateless",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::write_bytes","predicate non-void-command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::sf20_disable_address_tagging","wrapper stateless",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::sf20_send_and_expect","predicate non-void-command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::sf20_get_version","command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::init","predicate non-void-command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::legacy_init","predicate non-void-command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::sf20_init","predicate non-void-command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::legacy_get_reading","predicate non-void-command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::sf20_get_reading","predicate non-void-command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::sf20_parse_stream","wrapper stateless",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::update","empty",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::legacy_timer","command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::sf20_timer","command",
"AP_RangeFinder_LightWareI2C","unclassified","AP_RangeFinder_LightWareI2C::sf20_wait_on_reply","predicate non-void-command",
"DummyUart","lazy-class degenerate","is_initialized","incidental",
"DummyUart","lazy-class degenerate","tx_pending","incidental",
"DummyUart","lazy-class degenerate","txspace","get",
"DummyUart","lazy-class degenerate","set_txspace","set",
"DummyUart","lazy-class degenerate","_available","incidental",
"DummyUart","lazy-class degenerate","_begin","empty",
"DummyUart","lazy-class degenerate","_end","empty",
"DummyUart","lazy-class degenerate","_flush","empty",
"DummyUart","lazy-class degenerate","_write","incidental",
"DummyUart","lazy-class degenerate","_read","collaborator incidental",
"DummyUart","lazy-class degenerate","_discard_input","incidental",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::update","command",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::trigger_pic","predicate non-void-command collaborator",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::record_video","predicate non-void-command collaborator",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::set_zoom","predicate non-void-command collaborator",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::set_focus","property non-void-command collaborator",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::handle_message","set collaborator",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::send_camera_information","wrapper",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::find_camera","command",
"AP_Camera_MAVLinkCamV2","entity boundary","AP_Camera_MAVLinkCamV2::request_camera_information","collaborator",
"SPIBus","unclassified","SPIBus::SPIBus","constructor",
"SPIBus","unclassified","SPIBus::dma_allocate","empty",
"SPIBus","unclassified","SPIBus::dma_deallocate","command collaborator",
"SPIBus","unclassified","SPIBus::stop_peripheral","set collaborator",
"SPIBus","unclassified","SPIBus::start_peripheral","set",
"SPIBus","unclassified","SPIBus::SPIBus","constructor",
"SPIBus","unclassified","SPIBus::SPIBus","constructor",
"SPIBus","unclassified","SPIBus::~SPIBus","destructor",
"SPIBus","unclassified","SPIBus::start_cb","controller stateless",
"SPIBus","unclassified","SPIBus::end_cb","controller stateless",
"SPIBus","unclassified","SPIBus::open","wrapper",
"SPIBus","unclassified","SPIBus::_ioctl","property controller",
"SPIBus","unclassified","SPIBus::register_periodic_callback","wrapper stateless",
"Transition","degenerate","Transition","constructor",
"Transition","degenerate","set_FW_roll_pitch","empty",
"Transition","degenerate","set_FW_roll_limit","incidental",
"Transition","degenerate","allow_update_throttle_mix","incidental",
"Transition","degenerate","update_yaw_target","incidental",
"Transition","degenerate","set_VTOL_roll_pitch_limit","incidental",
"Transition","degenerate","allow_weathervane","incidental",
"Transition","degenerate","set_last_fw_pitch","empty",
"Transition","degenerate","allow_stick_mixing","incidental",
"RCOutput","commander boundary","RCOutput","constructor",
"RCOutput","commander boundary","~RCOutput","destructor",
"RCOutput","commander boundary","set_safety_mask","set",
"RCOutput","commander boundary","AP_HAL::RCOutput::get_output_mode_string","collaborator incidental",
"RCOutput","commander boundary","AP_HAL::RCOutput::append_to_banner","unclassified",
"RCOutput","commander boundary","AP_HAL::RCOutput::is_dshot_protocol","collaborator incidental",
"RCOutput","commander boundary","AP_HAL::RCOutput::calculate_bitrate_prescaler","wrapper stateless",
"RCOutput","commander boundary","AP_HAL::RCOutput::scale_esc_to_unity","incidental",
"RCOutput","commander boundary","RCOutput::init","set",
"RCOutput","commander boundary","RCOutput::start_led_thread","controller stateless",
"RCOutput","commander boundary","RCOutput::led_thread","command",
"RCOutput","commander boundary","RCOutput::rcout_thread","command",
"RCOutput","commander boundary","RCOutput::dshot_update_tick","wrapper stateless",
"RCOutput","commander boundary","RCOutput::calc_ticks_remaining","wrapper stateless",
"RCOutput","commander boundary","RCOutput::dshot_collect_dma_locks","command collaborator",
"RCOutput","commander boundary","RCOutput::set_freq_group","void-accessor command collaborator",
"RCOutput","commander boundary","RCOutput::set_freq","command",
"RCOutput","commander boundary","RCOutput::set_default_rate","controller",
"RCOutput","commander boundary","RCOutput::set_dshot_rate","controller",
"RCOutput","commander boundary","RCOutput::set_dshot_esc_type","controller stateless",
"RCOutput","commander boundary","RCOutput::find_chan","property collaborator",
"RCOutput","commander boundary","RCOutput::get_disabled_channels","property",
"RCOutput","commander boundary","RCOutput::get_freq","property non-void-command collaborator",
"RCOutput","commander boundary","RCOutput::enable_ch","command collaborator",
"RCOutput","commander boundary","RCOutput::disable_ch","command collaborator",
"RCOutput","commander boundary","RCOutput::write","command",
"RCOutput","commander boundary","RCOutput::push_local","command",
"RCOutput","commander boundary","RCOutput::read","controller stateless",
"RCOutput","commander boundary","RCOutput::read","controller stateless",
"RCOutput","commander boundary","RCOutput::read_last_sent","incidental",
"RCOutput","commander boundary","RCOutput::read_last_sent","void-accessor command",
"RCOutput","commander boundary","RCOutput::mode_requires_dma","predicate collaborator",
"RCOutput","commander boundary","RCOutput::print_group_setup_error","command",
"RCOutput","commander boundary","RCOutput::setup_group_DMA","predicate non-void-command",
"RCOutput","commander boundary","RCOutput::set_group_mode","void-accessor command collaborator",
"RCOutput","commander boundary","RCOutput::set_output_mode","command collaborator",
"RCOutput","commander boundary","RCOutput::get_output_mode","property collaborator",
"RCOutput","commander boundary","RCOutput::set_telem_request_mask","controller stateless",
"RCOutput","commander boundary","RCOutput::get_output_mode_banner","predicate",
"RCOutput","commander boundary","RCOutput::cork","controller stateless",
"RCOutput","commander boundary","RCOutput::push","command",
"RCOutput","commander boundary","RCOutput::enable_px4io_sbus_out","controller stateless",
"RCOutput","commander boundary","RCOutput::trigger_groups","controller",
"RCOutput","commander boundary","RCOutput::timer_tick","command collaborator",
"RCOutput","commander boundary","RCOutput::led_timer_tick","command collaborator",
"RCOutput","commander boundary","RCOutput::dshot_send_groups","command collaborator",
"RCOutput","commander boundary","RCOutput::dshot_send_next_group","wrapper stateless",
"RCOutput","commander boundary","RCOutput::dma_allocate","controller",
"RCOutput","commander boundary","RCOutput::dma_deallocate","command collaborator",
"RCOutput","commander boundary","RCOutput::create_dshot_packet","incidental",
"RCOutput","commander boundary","RCOutput::fill_DMA_buffer_dshot","incidental",
"RCOutput","commander boundary","RCOutput::dshot_send","void-accessor command collaborator",
"RCOutput","commander boundary","RCOutput::serial_led_send","predicate non-void-command collaborator",
"RCOutput","commander boundary","RCOutput::send_pulses_DMAR","wrapper stateless",
"RCOutput","commander boundary","RCOutput::dma_unlock","wrapper stateless",
"RCOutput","commander boundary","RCOutput::dma_up_irq_callback","wrapper stateless",
"RCOutput","commander boundary","RCOutput::dma_cancel","controller stateless",
"RCOutput","commander boundary","RCOutput::serial_setup_output","predicate non-void-command",
"RCOutput","commander boundary","RCOutput::fill_DMA_buffer_byte","incidental",
"RCOutput","commander boundary","RCOutput::serial_write_byte","predicate non-void-command collaborator",
"RCOutput","commander boundary","RCOutput::serial_write_bytes","predicate non-void-command",
"RCOutput","commander boundary","RCOutput::serial_bit_irq","wrapper stateless",
"RCOutput","commander boundary","RCOutput::serial_byte_timeout","wrapper stateless",
"RCOutput","commander boundary","RCOutput::serial_read_byte","wrapper stateless",
"RCOutput","commander boundary","RCOutput::serial_read_bytes","property non-void-command",
"RCOutput","commander boundary","RCOutput::serial_end","command collaborator",
"RCOutput","commander boundary","RCOutput::_safety_switch_state","get set collaborator",
"RCOutput","commander boundary","RCOutput::force_safety_on","predicate set",
"RCOutput","commander boundary","RCOutput::force_safety_off","set",
"RCOutput","commander boundary","RCOutput::safety_update","command",
"RCOutput","commander boundary","RCOutput::set_failsafe_pwm","controller stateless",
"RCOutput","commander boundary","RCOutput::protocol_bitrate","collaborator incidental",
"RCOutput","commander boundary","RCOutput::set_serial_led_num_LEDs","predicate non-void-command",
"RCOutput","commander boundary","RCOutput::fill_DMA_buffer_serial_led","command collaborator",
"RCOutput","commander boundary","RCOutput::_set_neopixel_rgb_data","incidental",
"RCOutput","commander boundary","RCOutput::_set_profiled_rgb_data","incidental",
"RCOutput","commander boundary","RCOutput::_set_profiled_blank_frame","incidental",
"RCOutput","commander boundary","RCOutput::_set_profiled_clock","incidental",
"RCOutput","commander boundary","RCOutput::set_serial_led_rgb_data","predicate non-void-command",
"RCOutput","commander boundary","RCOutput::serial_led_set_single_rgb_data","incidental",
"RCOutput","commander boundary","RCOutput::serial_led_send","predicate non-void-command collaborator",
"RCOutput","commander boundary","RCOutput::timer_info","command collaborator",
"RCOutput","commander boundary","RCOutput::set_bidir_dshot_mask","command collaborator",
"RCOutput","commander boundary","RCOutput::bdshot_setup_group_ic_DMA","controller stateless",
"RCOutput","commander boundary","RCOutput::bdshot_ic_dma_allocate","wrapper",
"RCOutput","commander boundary","RCOutput::bdshot_ic_dma_deallocate","command collaborator",
"RCOutput","commander boundary","RCOutput::bdshot_prepare_for_next_pulse","void-accessor command collaborator",
"RCOutput","commander boundary","RCOutput::bdshot_reset_pwm","command",
"RCOutput","commander boundary","RCOutput::bdshot_receive_pulses_DMAR","void-accessor command collaborator",
"RCOutput","commander boundary","RCOutput::bdshot_config_icu_dshot","wrapper stateless",
"RCOutput","commander boundary","RCOutput::bdshot_finish_dshot_gcr_transaction","non-void-command collaborator",
"RCOutput","commander boundary","RCOutput::bdshot_decode_dshot_telemetry","predicate non-void-command",
"RCOutput","commander boundary","RCOutput::bdshot_find_next_ic_channel","controller stateless",
"RCOutput","commander boundary","RCOutput::dma_up_irq_callback","non-void-command collaborator",
"RCOutput","commander boundary","RCOutput::bdshot_dma_ic_irq_callback","wrapper stateless",
"RCOutput","commander boundary","RCOutput::bdshot_get_output_rate_hz","collaborator incidental",
"RCOutput","commander boundary","RCOutput::bdshot_decode_telemetry_packet","incidental",
"RCOutput","commander boundary","RCOutput::bdshot_decode_telemetry_from_erpm","wrapper stateless",
"RCOutput","commander boundary","RCOutput::read_erpm","wrapper stateless",
"RCOutput","commander boundary","RCOutput::timer_tick","command",
"RCOutput","commander boundary","RCOutput::dshot_send_trampoline","controller stateless",
"RCOutput","commander boundary","RCOutput::rcout_thread","command collaborator",
"RCOutput","commander boundary","RCOutput::bdshot_disable_pwm_f1","collaborator incidental",
"RCOutput","commander boundary","RCOutput::bdshot_reset_pwm_f1","command",
"RCOutput","commander boundary","RCOutput::bdshot_receive_pulses_DMAR_f1","void-accessor command collaborator",
"RCOutput","commander boundary","RCOutput::bdshot_config_icu_dshot_f1","wrapper stateless",
"RCOutput","commander boundary","RCOutput::bdshot_decode_telemetry_packet_f1","property non-void-command",
"RCOutput","commander boundary","RCOutput::dshot_send_command","predicate non-void-command",
"RCOutput","commander boundary","RCOutput::send_dshot_command","controller stateless",
"RCOutput","commander boundary","RCOutput::set_reversed_mask","incidental",
"RCOutput","commander boundary","RCOutput::set_reversible_mask","incidental",
"RCOutput","commander boundary","RCOutput::update_channel_masks","command",
"RCOutput","commander boundary","RCOutput::init","command collaborator",
"RCOutput","commander boundary","RCOutput::set_freq","wrapper",
"RCOutput","commander boundary","RCOutput::set_default_rate","command",
"RCOutput","commander boundary","RCOutput::get_freq","property wrapper",
"RCOutput","commander boundary","RCOutput::enable_ch","wrapper",
"RCOutput","commander boundary","RCOutput::disable_ch","command collaborator",
"RCOutput","commander boundary","RCOutput::write","command",
"RCOutput","commander boundary","RCOutput::read","property wrapper",
"RCOutput","commander boundary","RCOutput::read","void-accessor command",
"RCOutput","commander boundary","RCOutput::cork","set",
"RCOutput","commander boundary","RCOutput::push","set",
"RCOutput","commander boundary","RCOutput::timer_tick","command",
"RCOutput","commander boundary","RCOutput::write_int","controller",
"RCOutput","commander boundary","RCOutput::_safety_switch_state","get controller",
"RCOutput","commander boundary","RCOutput::force_safety_on","predicate set",
"RCOutput","commander boundary","RCOutput::force_safety_off","set",
"RCOutput","commander boundary","RCOutput::set_safety_pwm","set",
"RCOutput","commander boundary","RCOutput::safety_update","command",
"RCOutput","commander boundary","RCOutput::set_failsafe_pwm","empty",
"RCOutput","commander boundary","RCOutput::init","empty",
"RCOutput","commander boundary","RCOutput::set_freq","empty",
"RCOutput","commander boundary","RCOutput::get_freq","incidental",
"RCOutput","commander boundary","RCOutput::enable_ch","empty",
"RCOutput","commander boundary","RCOutput::disable_ch","empty",
"RCOutput","commander boundary","RCOutput::write","wrapper stateless",
"RCOutput","commander boundary","RCOutput::read","wrapper stateless",
"RCOutput","commander boundary","RCOutput::read","wrapper stateless",
"RCOutput","commander boundary","RCOutput::init","empty",
"RCOutput","commander boundary","RCOutput::set_freq","wrapper stateless",
"RCOutput","commander boundary","RCOutput::get_freq","incidental",
"RCOutput","commander boundary","RCOutput::enable_ch","wrapper stateless",
"RCOutput","commander boundary","RCOutput::disable_ch","wrapper stateless",
"RCOutput","commander boundary","RCOutput::write","set",
"RCOutput","commander boundary","RCOutput::read","incidental",
"RCOutput","commander boundary","RCOutput::read","wrapper stateless",
"RCOutput","commander boundary","RCOutput::cork","set",
"RCOutput","commander boundary","RCOutput::push","set collaborator",
"RCOutput","commander boundary","RCOutput::set_serial_led_num_LEDs","wrapper stateless",
"RCOutput","commander boundary","RCOutput::set_serial_led_rgb_data","predicate non-void-command",
"RCOutput","commander boundary","RCOutput::serial_led_send","wrapper stateless",
"ModeSteering","lazy-class degenerate","mode_number","collaborator incidental",
"ModeSteering","lazy-class degenerate","name4","incidental",
"ModeSteering","lazy-class degenerate","has_manual_input","incidental",
"ModeSteering","lazy-class degenerate","requires_position","incidental",
"ModeSteering","lazy-class degenerate","requires_velocity","incidental",
"ModeSteering","lazy-class degenerate","get_desired_lat_accel","get",
"ModeSteering","lazy-class degenerate","ModeSteering::update","set",
"AC_AttitudeControl_Sub","unclassified","~AC_AttitudeControl_Sub","destructor",
"AC_AttitudeControl_Sub","unclassified","get_rate_roll_pid","get collaborator",
"AC_AttitudeControl_Sub","unclassified","get_rate_pitch_pid","get collaborator",
"AC_AttitudeControl_Sub","unclassified","get_rate_yaw_pid","get collaborator",
"AC_AttitudeControl_Sub","unclassified","get_rate_roll_pid","get collaborator",
"AC_AttitudeControl_Sub","unclassified","get_rate_pitch_pid","get collaborator",
"AC_AttitudeControl_Sub","unclassified","get_rate_yaw_pid","get collaborator",
"AC_AttitudeControl_Sub","unclassified","set_throttle_mix_min","set",
"AC_AttitudeControl_Sub","unclassified","set_throttle_mix_man","set",
"AC_AttitudeControl_Sub","unclassified","set_throttle_mix_max","set",
"AC_AttitudeControl_Sub","unclassified","is_throttle_mix_min","predicate",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::AC_AttitudeControl_Sub","constructor",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::update_althold_lean_angle_max","set",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::set_throttle_out","command",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::get_throttle_boosted","property",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::get_throttle_avg_max","property non-void-command",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::update_throttle_rpy_mix","set",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::rate_controller_run","command collaborator",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::parameter_sanity_check","command",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::input_euler_angle_roll_pitch_slew_yaw","wrapper stateless",
"AC_AttitudeControl_Sub","unclassified","AC_AttitudeControl_Sub::set_notch_sample_rate","command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::GPIO_RPI_RP1","constructor",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::openMemoryDevice","predicate set",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::closeMemoryDevice","set",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::get_memory_pointer","property wrapper",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::init","unclassified",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::read_register","get",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::write_register","set",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::direction","property collaborator",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::set_direction","command collaborator",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::input_enable","command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::input_disable","command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::output_enable","command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::output_disable","command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::pinMode","command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::pinMode","command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::set_mode","command collaborator",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::set_pull","command collaborator",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::read","property non-void-command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::write","command",
"GPIO_RPI_RP1","commander","GPIO_RPI_RP1::toggle","set",
"ModeTurtle","degenerate","mode_number","collaborator incidental",
"ModeTurtle","degenerate","requires_GPS","incidental",
"ModeTurtle","degenerate","has_manual_throttle","incidental",
"ModeTurtle","degenerate","is_autopilot","incidental",
"ModeTurtle","degenerate","name","incidental",
"ModeTurtle","degenerate","name4","incidental",
"ModeTurtle","degenerate","ModeTurtle::init","controller stateless",
"ModeTurtle","degenerate","ModeTurtle::arm_motors","command",
"ModeTurtle","degenerate","ModeTurtle::allows_arming","collaborator incidental",
"ModeTurtle","degenerate","ModeTurtle::exit","command",
"ModeTurtle","degenerate","ModeTurtle::disarm_motors","command",
"ModeTurtle","degenerate","ModeTurtle::change_motor_direction","controller stateless",
"ModeTurtle","degenerate","ModeTurtle::run","command collaborator",
"ModeTurtle","degenerate","ModeTurtle::output_to_motors","unclassified",
"ModeSurftrak","unclassified","get_rangefinder_target_cm","get",
"ModeSurftrak","unclassified","name","incidental",
"ModeSurftrak","unclassified","name4","incidental",
"ModeSurftrak","unclassified","ModeSurftrak::ModeSurftrak","constructor",
"ModeSurftrak","unclassified","ModeSurftrak::init","predicate non-void-command",
"ModeSurftrak","unclassified","ModeSurftrak::run","command",
"ModeSurftrak","unclassified","ModeSurftrak::set_rangefinder_target_cm","predicate set collaborator",
"ModeSurftrak","unclassified","ModeSurftrak::reset","set",
"ModeSurftrak","unclassified","ModeSurftrak::control_range","command",
"ModeSurftrak","unclassified","ModeSurftrak::update_surface_offset","command",
"ModeSurftrak","unclassified","reset","controller stateless",
"AP_Compass_IST8310","commander boundary","AP_Compass_IST8310::probe","controller stateless",
"AP_Compass_IST8310","commander boundary","AP_Compass_IST8310::AP_Compass_IST8310","constructor",
"AP_Compass_IST8310","commander boundary","AP_Compass_IST8310::init","predicate non-void-command",
"AP_Compass_IST8310","commander boundary","AP_Compass_IST8310::start_conversion","set",
"AP_Compass_IST8310","commander boundary","AP_Compass_IST8310::timer","command collaborator",
"AP_Compass_IST8310","commander boundary","AP_Compass_IST8310::read","wrapper",
"VTOL_Assist","unclassified","VTOL_Assist","constructor",
"VTOL_Assist","unclassified","set_state","set collaborator",
"VTOL_Assist","unclassified","in_force_assist","get",
"VTOL_Assist","unclassified","in_speed_assist","get",
"VTOL_Assist","unclassified","in_alt_assist","predicate",
"VTOL_Assist","unclassified","in_angle_assist","predicate",
"VTOL_Assist","unclassified","VTOL_Assist::reset","command",
"VTOL_Assist","unclassified","VTOL_Assist::should_assist","get predicate non-void-command",
"VTOL_Assist","unclassified","reset","controller stateless",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo","constructor",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo::init","command",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo::update","command",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo::has_roll_control","predicate wrapper",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo::has_pitch_control","predicate wrapper",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo::has_pan_control","predicate wrapper",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo::get_attitude_quaternion","predicate non-void-command collaborator",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo::update_angle_outputs","command collaborator",
"AP_Mount_Servo","entity boundary","AP_Mount_Servo::move_servo","wrapper stateless",
"ModePosHold","commander degenerate","mode_number","collaborator incidental",
"ModePosHold","commander degenerate","requires_GPS","incidental",
"ModePosHold","commander degenerate","has_manual_throttle","incidental",
"ModePosHold","commander degenerate","allows_arming","collaborator incidental",
"ModePosHold","commander degenerate","is_autopilot","incidental",
"ModePosHold","commander degenerate","has_user_takeoff","incidental",
"ModePosHold","commander degenerate","allows_autotune","incidental",
"ModePosHold","commander degenerate","name","incidental",
"ModePosHold","commander degenerate","name4","incidental",
"ModePosHold","commander degenerate","ModePosHold::init","predicate non-void-command",
"ModePosHold","commander degenerate","ModePosHold::run","command",
"ModePosHold","commander degenerate","ModePosHold::update_pilot_lean_angle","wrapper stateless",
"ModePosHold","commander degenerate","ModePosHold::mix_controls","wrapper stateless",
"ModePosHold","commander degenerate","ModePosHold::update_brake_angle_from_velocity","wrapper stateless",
"ModePosHold","commander degenerate","ModePosHold::init_wind_comp_estimate","command",
"ModePosHold","commander degenerate","ModePosHold::update_wind_comp_estimate","command",
"ModePosHold","commander degenerate","ModePosHold::get_wind_comp_lean_angles","void-accessor set",
"ModePosHold","commander degenerate","ModePosHold::roll_controller_to_pilot_override","command",
"ModePosHold","commander degenerate","ModePosHold::pitch_controller_to_pilot_override","command",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::update","unclassified",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::distance_max","incidental",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::distance_min","incidental",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::reset_rplidar","command",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::send_scan_mode_request","command",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::send_request_for_health","command",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::send_request_for_device_info","command",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::consume_bytes","set",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::reset","set",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::make_first_byte_in_payload","predicate set collaborator",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::get_readings","command collaborator",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::parse_response_device_info","command",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::parse_response_data","command collaborator",
"AP_Proximity_RPLidarA2","commander","AP_Proximity_RPLidarA2::parse_response_health","wrapper",
"AP_Proximity_RPLidarA2","commander","reset","controller stateless",
"LR_MsgHandler_REVH","boundary small-class","LR_MsgHandler_REVH::process_message","wrapper",
"Copter","commander","gcs","get collaborator",
"Copter","commander","any_failsafe_triggered","predicate",
"Copter","commander","run_custom_controller","command",
"Copter","commander","get_log_bitmask","get collaborator",
"Copter","commander","get_log_structures","get collaborator",
"Copter","commander","get_mode","property",
"Copter","commander","Copter::set_auto_armed","set",
"Copter","commander","Copter::set_simple_mode","command collaborator",
"Copter","commander","Copter::set_failsafe_radio","command",
"Copter","commander","Copter::set_failsafe_gcs","incidental",
"Copter","commander","Copter::update_using_interlock","set",
"Copter","commander","Copter::run_rate_controller","command",
"Copter","commander","Copter::update_throttle_hover","command",
"Copter","commander","Copter::get_pilot_desired_climb_rate","property non-void-command",
"Copter","commander","Copter::get_non_takeoff_throttle","property non-void-command",
"Copter","commander","Copter::set_accel_throttle_I_from_pilot_throttle","command",
"Copter","commander","Copter::rotate_body_frame_to_NE","void-accessor command",
"Copter","commander","Copter::get_pilot_speed_dn","property wrapper",
"Copter","commander","Copter::get_scheduler_tasks","void-accessor wrapper",
"Copter","commander","Copter::set_target_location","predicate non-void-command collaborator",
"Copter","commander","Copter::start_takeoff","predicate non-void-command",
"Copter","commander","Copter::set_target_pos_NED","predicate non-void-command collaborator",
"Copter","commander","Copter::set_target_posvel_NED","predicate non-void-command collaborator",
"Copter","commander","Copter::set_target_posvelaccel_NED","predicate non-void-command collaborator",
"Copter","commander","Copter::set_target_velocity_NED","predicate non-void-command collaborator",
"Copter","commander","Copter::set_target_velaccel_NED","predicate non-void-command collaborator",
"Copter","commander","Copter::set_target_angle_and_climbrate","predicate non-void-command collaborator",
"Copter","commander","Copter::get_circle_radius","predicate non-void-command",
"Copter","commander","Copter::set_circle_rate","predicate non-void-command",
"Copter","commander","Copter::set_desired_speed","predicate non-void-command",
"Copter","commander","Copter::nav_scripting_enable","predicate non-void-command",
"Copter","commander","Copter::nav_script_time","predicate non-void-command",
"Copter","commander","Copter::nav_script_time_done","command",
"Copter","commander","Copter::has_ekf_failsafed","incidental",
"Copter","commander","Copter::is_landing","predicate",
"Copter","commander","Copter::is_taking_off","predicate",
"Copter","commander","Copter::current_mode_requires_mission","predicate",
"Copter","commander","Copter::rc_loop","command",
"Copter","commander","Copter::throttle_loop","command",
"Copter","commander","Copter::update_batt_compass","command",
"Copter","commander","Copter::loop_rate_logging","command",
"Copter","commander","Copter::ten_hz_logging_loop","command",
"Copter","commander","Copter::twentyfive_hz_logging","command",
"Copter","commander","Copter::three_hz_loop","command",
"Copter","commander","Copter::one_hz_loop","command",
"Copter","commander","Copter::init_simple_bearing","command",
"Copter","commander","Copter::update_simple_mode","unclassified",
"Copter","commander","Copter::update_super_simple_bearing","command",
"Copter","commander","Copter::read_AHRS","command",
"Copter","commander","Copter::update_altitude","command",
"Copter","commander","Copter::get_wp_distance_m","predicate",
"Copter","commander","Copter::get_wp_bearing_deg","predicate",
"Copter","commander","Copter::get_wp_crosstrack_error_m","predicate",
"Copter","commander","Copter::get_rate_ef_targets","predicate collaborator",
"Copter","commander","Copter::Copter","constructor",
"Copter","commander","Copter::Log_Write_Control_Tuning","command collaborator",
"Copter","commander","Copter::Log_Write_Attitude","command collaborator",
"Copter","commander","Copter::Log_Write_PIDS","command",
"Copter","commander","Copter::Log_Write_EKF_POS","wrapper stateless",
"Copter","commander","Copter::Log_Write_Data","non-void-command collaborator",
"Copter","commander","Copter::Log_Write_Data","non-void-command collaborator",
"Copter","commander","Copter::Log_Write_Data","command collaborator",
"Copter","commander","Copter::Log_Write_Data","command collaborator",
"Copter","commander","Copter::Log_Write_Data","non-void-command collaborator",
"Copter","commander","Copter::Log_Write_Parameter_Tuning","command collaborator",
"Copter","commander","Copter::Log_Video_Stabilisation","command",
"Copter","commander","Copter::Log_Write_SysID_Data","command collaborator",
"Copter","commander","Copter::Log_Write_SysID_Setup","command collaborator",
"Copter","commander","Copter::Log_Write_Heli","command collaborator",
"Copter","commander","Copter::Log_Write_Guided_Position_Target","command collaborator",
"Copter","commander","Copter::Log_Write_Guided_Attitude_Target","command collaborator",
"Copter","commander","Copter::get_num_log_structures","property wrapper",
"Copter","commander","Copter::Log_Write_Vehicle_Startup_Messages","command",
"Copter","commander","Copter::load_parameters","command collaborator",
"Copter","commander","Copter::convert_pid_parameters","controller",
"Copter","commander","Copter::convert_prx_parameters","wrapper stateless",
"Copter","commander","Copter::convert_lgr_parameters","controller stateless",
"Copter","commander","Copter::convert_tradheli_parameters","controller stateless",
"Copter","commander","Copter::save_trim","command",
"Copter","commander","Copter::auto_trim_cancel","set",
"Copter","commander","Copter::auto_trim","command",
"Copter","commander","Copter::userhook_init","empty",
"Copter","commander","Copter::userhook_FastLoop","empty",
"Copter","commander","Copter::userhook_50Hz","empty",
"Copter","commander","Copter::userhook_MediumLoop","empty",
"Copter","commander","Copter::userhook_SlowLoop","empty",
"Copter","commander","Copter::userhook_SuperSlowLoop","empty",
"Copter","commander","Copter::userhook_auxSwitch1","empty",
"Copter","commander","Copter::userhook_auxSwitch2","empty",
"Copter","commander","Copter::userhook_auxSwitch3","empty",
"Copter","commander","Copter::low_alt_avoidance","command",
"Copter","commander","Copter::avoidance_adsb_update","command",
"Copter","commander","Copter::update_ground_effect_detector","command",
"Copter","commander","Copter::update_ekf_terrain_height_stable","command",
"Copter","commander","Copter::update_home_from_EKF","command",
"Copter","commander","Copter::set_home_to_current_location_inflight","command collaborator",
"Copter","commander","Copter::set_home_to_current_location","predicate non-void-command collaborator",
"Copter","commander","Copter::set_home","predicate non-void-command collaborator",
"Copter","commander","Copter::mavlink_compassmot","property non-void-command collaborator",
"Copter","commander","Copter::crash_check","command collaborator",
"Copter","commander","Copter::thrust_loss_check","command",
"Copter","commander","Copter::yaw_imbalance_check","command",
"Copter","commander","Copter::parachute_check","command",
"Copter","commander","Copter::parachute_release","command",
"Copter","commander","Copter::parachute_manual_release","command",
"Copter","commander","Copter::ekf_check","command",
"Copter","commander","Copter::ekf_over_threshold","predicate non-void-command",
"Copter","commander","Copter::failsafe_ekf_event","command",
"Copter","commander","Copter::failsafe_ekf_off_event","command",
"Copter","commander","Copter::failsafe_ekf_recheck","command",
"Copter","commander","Copter::check_ekf_reset","command",
"Copter","commander","Copter::check_vibration","command",
"Copter","commander","Copter::esc_calibration_startup_check","command",
"Copter","commander","Copter::esc_calibration_passthrough","command",
"Copter","commander","Copter::esc_calibration_auto","command",
"Copter","commander","Copter::esc_calibration_notify","set",
"Copter","commander","Copter::esc_calibration_setup","command",
"Copter","commander","Copter::failsafe_option","collaborator incidental",
"Copter","commander","Copter::failsafe_radio_on_event","command collaborator",
"Copter","commander","Copter::failsafe_radio_off_event","command",
"Copter","commander","Copter::announce_failsafe","command",
"Copter","commander","Copter::handle_battery_failsafe","command collaborator",
"Copter","commander","Copter::failsafe_gcs_check","command",
"Copter","commander","Copter::failsafe_gcs_on_event","command collaborator",
"Copter","commander","Copter::failsafe_gcs_off_event","command",
"Copter","commander","Copter::failsafe_terrain_check","command",
"Copter","commander","Copter::failsafe_terrain_set_status","wrapper stateless",
"Copter","commander","Copter::failsafe_terrain_on_event","command",
"Copter","commander","Copter::gpsglitch_check","command",
"Copter","commander","Copter::failsafe_deadreckon_check","command",
"Copter","commander","Copter::set_mode_RTL_or_land_with_pause","command collaborator",
"Copter","commander","Copter::set_mode_SmartRTL_or_land_with_pause","command collaborator",
"Copter","commander","Copter::set_mode_SmartRTL_or_RTL","command collaborator",
"Copter","commander","Copter::set_mode_auto_do_land_start_or_RTL","command collaborator",
"Copter","commander","Copter::set_mode_brake_or_land_with_pause","command collaborator",
"Copter","commander","Copter::should_disarm_on_failsafe","get predicate non-void-command",
"Copter","commander","Copter::do_failsafe_action","command collaborator",
"Copter","commander","Copter::failsafe_enable","wrapper stateless",
"Copter","commander","Copter::failsafe_disable","incidental",
"Copter","commander","Copter::failsafe_check","command",
"Copter","commander","Copter::afs_fs_check","controller",
"Copter","commander","Copter::fence_check","command",
"Copter","commander","Copter::heli_init","command",
"Copter","commander","Copter::check_dynamic_flight","command",
"Copter","commander","Copter::update_heli_control_dynamics","unclassified",
"Copter","commander","Copter::should_use_landing_swash","predicate",
"Copter","commander","Copter::heli_update_landing_swash","command",
"Copter","commander","Copter::get_pilot_desired_rotor_speed","controller stateless",
"Copter","commander","Copter::heli_update_rotor_speed_targets","command",
"Copter","commander","Copter::heli_update_autorotation","command",
"Copter","commander","Copter::update_collective_low_flag","set",
"Copter","commander","Copter::read_inertia","command",
"Copter","commander","Copter::update_land_and_crash_detectors","command collaborator",
"Copter","commander","Copter::update_land_detector","command",
"Copter","commander","Copter::set_land_complete","unclassified",
"Copter","commander","Copter::set_land_complete_maybe","set",
"Copter","commander","Copter::update_throttle_mix","command",
"Copter","commander","Copter::landinggear_update","command",
"Copter","commander","Copter::mode_from_mode_num","property collaborator",
"Copter","commander","Copter::mode_change_failed","command",
"Copter","commander","Copter::gcs_mode_enabled","predicate non-void-command collaborator",
"Copter","commander","Copter::set_mode","predicate non-void-command collaborator",
"Copter","commander","Copter::set_mode","controller stateless",
"Copter","commander","Copter::update_flight_mode","command",
"Copter","commander","Copter::exit_mode","command collaborator",
"Copter","commander","Copter::notify_flight_mode","command",
"Copter","commander","Copter::set_mode_land_with_pause","command collaborator",
"Copter","commander","Copter::landing_with_GPS","predicate non-void-command",
"Copter","commander","Copter::motor_test_output","command",
"Copter","commander","Copter::mavlink_motor_control_check","predicate non-void-command",
"Copter","commander","Copter::mavlink_motor_test_start","property non-void-command collaborator",
"Copter","commander","Copter::motor_test_stop","command",
"Copter","commander","Copter::arm_motors_check","command",
"Copter","commander","Copter::auto_disarm_check","command",
"Copter","commander","Copter::motors_output","command",
"Copter","commander","Copter::lost_vehicle_check","command",
"Copter","commander","Copter::run_nav_updates","command",
"Copter","commander","Copter::home_distance","get non-void-command",
"Copter","commander","Copter::home_bearing","get non-void-command",
"Copter","commander","Copter::init_precland","command",
"Copter","commander","Copter::update_precland","command",
"Copter","commander","Copter::default_dead_zones","command",
"Copter","commander","Copter::init_rc_in","command",
"Copter","commander","Copter::init_rc_out","command",
"Copter","commander","Copter::read_radio","command",
"Copter","commander","Copter::set_throttle_and_failsafe","command",
"Copter","commander","Copter::set_throttle_zero_flag","set",
"Copter","commander","Copter::radio_passthrough_to_motors","command",
"Copter","commander","Copter::get_throttle_mid","property non-void-command",
"Copter","commander","Copter::read_barometer","unclassified",
"Copter","commander","Copter::init_rangefinder","command",
"Copter","commander","Copter::read_rangefinder","command",
"Copter","commander","Copter::rangefinder_alt_ok","predicate",
"Copter","commander","Copter::rangefinder_up_ok","predicate",
"Copter","commander","Copter::update_rangefinder_terrain_offset","command",
"Copter","commander","Copter::get_rangefinder_height_interpolated_cm","predicate",
"Copter","commander","Copter::standby_update","command",
"Copter","commander","Copter::init_ardupilot","command",
"Copter","commander","Copter::startup_INS_ground","command",
"Copter","commander","Copter::position_ok","predicate",
"Copter","commander","Copter::ekf_has_absolute_position","predicate collaborator",
"Copter","commander","Copter::ekf_has_relative_position","predicate collaborator",
"Copter","commander","Copter::ekf_alt_ok","predicate collaborator",
"Copter","commander","Copter::update_auto_armed","command",
"Copter","commander","Copter::should_log","predicate",
"Copter","commander","Copter::allocate_motors","command",
"Copter","commander","Copter::is_tradheli","incidental",
"Copter","commander","Copter::takeoff_check","command",
"Copter","commander","Copter::terrain_update","command",
"Copter","commander","Copter::terrain_logging","command",
"Copter","commander","Copter::tuning","command",
"Frsky","boundary degenerate small-class","Frsky","constructor",
"Frsky","boundary degenerate small-class","Frsky::dataid_string","collaborator incidental",
"LR_MsgHandler_RMGI","boundary degenerate small-class","LR_MsgHandler_RMGI::process_message","wrapper stateless",
"AC_PID_Basic","unclassified","get_p","property",
"AC_PID_Basic","unclassified","get_i","get",
"AC_PID_Basic","unclassified","get_d","property",
"AC_PID_Basic","unclassified","get_ff","property",
"AC_PID_Basic","unclassified","get_error","get",
"AC_PID_Basic","unclassified","reset_filter","set",
"AC_PID_Basic","unclassified","kP","get collaborator",
"AC_PID_Basic","unclassified","kI","get collaborator",
"AC_PID_Basic","unclassified","kD","get collaborator",
"AC_PID_Basic","unclassified","ff","get collaborator",
"AC_PID_Basic","unclassified","filt_E_hz","get collaborator",
"AC_PID_Basic","unclassified","filt_D_hz","get collaborator",
"AC_PID_Basic","unclassified","imax","property",
"AC_PID_Basic","unclassified","kP","command",
"AC_PID_Basic","unclassified","kI","command",
"AC_PID_Basic","unclassified","kD","command",
"AC_PID_Basic","unclassified","ff","command",
"AC_PID_Basic","unclassified","imax","command",
"AC_PID_Basic","unclassified","filt_E_hz","command",
"AC_PID_Basic","unclassified","filt_D_hz","command",
"AC_PID_Basic","unclassified","get_pid_info","get collaborator",
"AC_PID_Basic","unclassified","AC_PID_Basic::AC_PID_Basic","constructor",
"AC_PID_Basic","unclassified","AC_PID_Basic::update_all","property non-void-command",
"AC_PID_Basic","unclassified","AC_PID_Basic::update_all","property non-void-command",
"AC_PID_Basic","unclassified","AC_PID_Basic::update_i","set",
"AC_PID_Basic","unclassified","AC_PID_Basic::reset_I","set",
"AC_PID_Basic","unclassified","AC_PID_Basic::save_gains","command",
"AC_PID_Basic","unclassified","AC_PID_Basic::get_filt_E_alpha","property wrapper",
"AC_PID_Basic","unclassified","AC_PID_Basic::get_filt_D_alpha","property wrapper",
"AC_PID_Basic","unclassified","AC_PID_Basic::set_integrator","command",
"AC_PID_Basic","unclassified","AC_PID_Basic::set_integrator","command",
"AC_PID_Basic","unclassified","AC_PID_Basic::set_integrator","set",
"AP_GPS_SITL","small-class","name","incidental",
"AP_GPS_SITL","small-class","AP_GPS_SITL::read","predicate non-void-command",
"Empty::Semaphore","degenerate small-class","check_owner","incidental",
"MultiHeap","unclassified","MultiHeap::create","predicate non-void-command",
"MultiHeap","unclassified","MultiHeap::destroy","command",
"MultiHeap","unclassified","MultiHeap::available","predicate",
"MultiHeap","unclassified","MultiHeap::allocate","property command collaborator",
"MultiHeap","unclassified","MultiHeap::deallocate","command",
"MultiHeap","unclassified","MultiHeap::change_size","property command collaborator",
"AP_NotchFilter_params","small-class","AP_NotchFilter_params::AP_NotchFilter_params","constructor",
"AP_NotchFilter_params","small-class","AP_NotchFilter_params::setup_notch_filter","predicate non-void-command",
"Vector4b","data-provider small-class","Vector4b","constructor",
"Vector4b","data-provider small-class","Vector4b","constructor",
"Vector4b","data-provider small-class","operator&&","property",
"Vector4b","data-provider small-class","operator||","property",
"RF_Benewake_TF02","degenerate","byte4","incidental",
"RF_Benewake_TF02","degenerate","byte5","incidental",
"RF_Benewake_TF02","degenerate","byte6","incidental",
"RF_Benewake_TF02","degenerate","byte7","incidental",
"AP_RCProtocol","unclassified","AP_RCProtocol","constructor",
"AP_RCProtocol","unclassified","valid_serial_prot","get",
"AP_RCProtocol","unclassified","failsafe_active","get",
"AP_RCProtocol","unclassified","set_failsafe_active","set",
"AP_RCProtocol","unclassified","disable_for_pulses","set collaborator",
"AP_RCProtocol","unclassified","requires_3_frames","collaborator incidental",
"AP_RCProtocol","unclassified","protocol_detected","get collaborator",
"AP_RCProtocol","unclassified","has_uart","incidental",
"AP_RCProtocol","unclassified","set_rc_protocols","set",
"AP_RCProtocol","unclassified","using_uart","get",
"AP_RCProtocol","unclassified","init","empty",
"AP_RCProtocol","unclassified","init","wrapper stateless",
"AP_RCProtocol","unclassified","init","wrapper stateless",
"AP_RCProtocol","unclassified","AP_RCProtocol::init","command collaborator",
"AP_RCProtocol","unclassified","AP_RCProtocol::~AP_RCProtocol","destructor",
"AP_RCProtocol","unclassified","AP_RCProtocol::should_search","predicate wrapper",
"AP_RCProtocol","unclassified","AP_RCProtocol::process_pulse","command",
"AP_RCProtocol","unclassified","AP_RCProtocol::process_pulse_list","void-accessor command",
"AP_RCProtocol","unclassified","AP_RCProtocol::process_byte","predicate non-void-command",
"AP_RCProtocol","unclassified","AP_RCProtocol::process_handshake","command",
"AP_RCProtocol","unclassified","AP_RCProtocol::check_added_uart","unclassified",
"AP_RCProtocol","unclassified","AP_RCProtocol::update","command",
"AP_RCProtocol","unclassified","AP_RCProtocol::detect_async_protocol","predicate non-void-command collaborator",
"AP_RCProtocol","unclassified","AP_RCProtocol::new_input","predicate non-void-command",
"AP_RCProtocol","unclassified","AP_RCProtocol::num_channels","get property non-void-command",
"AP_RCProtocol","unclassified","AP_RCProtocol::read","get property non-void-command",
"AP_RCProtocol","unclassified","AP_RCProtocol::read","command",
"AP_RCProtocol","unclassified","AP_RCProtocol::get_RSSI","get property",
"AP_RCProtocol","unclassified","AP_RCProtocol::get_rx_link_quality","get property",
"AP_RCProtocol","unclassified","AP_RCProtocol::start_bind","command",
"AP_RCProtocol","unclassified","AP_RCProtocol::protocol_name_from_protocol","collaborator incidental",
"AP_RCProtocol","unclassified","AP_RCProtocol::protocol_name","property",
"AP_RCProtocol","unclassified","AP_RCProtocol::add_uart","controller stateless",
"AP_RCProtocol","unclassified","AP_RCProtocol::protocol_enabled","predicate wrapper",
"AP_RCProtocol","unclassified","AP_RCProtocol::handle_radio_rc_channels","wrapper",
"RC_Channel_Plane","degenerate","RC_Channel_Plane::do_aux_function_change_mode","controller stateless",
"RC_Channel_Plane","degenerate","RC_Channel_Plane::do_aux_function_q_assist_state","controller stateless",
"RC_Channel_Plane","degenerate","RC_Channel_Plane::do_aux_function_crow_mode","wrapper stateless",
"RC_Channel_Plane","degenerate","RC_Channel_Plane::do_aux_function_soaring_3pos","controller stateless",
"RC_Channel_Plane","degenerate","RC_Channel_Plane::do_aux_function_flare","collaborator incidental",
"RC_Channel_Plane","degenerate","RC_Channel_Plane::init_aux_function","controller stateless",
"RC_Channel_Plane","degenerate","RC_Channel_Plane::do_aux_function","predicate non-void-command collaborator",
"RC_Channel_Plane","degenerate","RC_Channel_Plane::mode_switch_changed","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","telem_delay","incidental",
"GCS_MAVLINK_Tracker","degenerate","global_position_int_relative_alt","incidental",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::base_mode","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::vehicle_system_status","collaborator incidental",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::send_nav_controller_output","wrapper",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_set_attitude_target","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::send_pid_tuning","controller",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::packetReceived","command collaborator",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::mavlink_check_target","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::sysid_my_gcs","incidental",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::_handle_command_preflight_calibration_baro","wrapper stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_command_component_arm_disarm","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_command_int_packet","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_message","command collaborator",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_message_mission_write_partial_list","set collaborator",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_message_mission_item","set collaborator",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_message_manual_control","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_message_global_position_int","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::handle_message_scaled_pressure","controller stateless",
"GCS_MAVLINK_Tracker","degenerate","GCS_MAVLINK_Tracker::send_global_position_int","wrapper",
"AP_DAL_VisualOdom","boundary","healthy","get",
"AP_DAL_VisualOdom","boundary","enabled","get",
"AP_DAL_VisualOdom","boundary","get_delay_ms","get",
"AP_DAL_VisualOdom","boundary","get_pos_offset","get collaborator",
"AP_DAL_VisualOdom","boundary","handle_message","set collaborator",
"AP_DAL_VisualOdom","boundary","AP_DAL_VisualOdom::align_position_to_ahrs","controller stateless",
"AP_DAL_VisualOdom","boundary","AP_DAL_VisualOdom::start_frame","command collaborator",
"AP_WindVane_Airspeed","commander boundary data-class small-class","AP_WindVane_Airspeed::update_speed","set collaborator",
"AP_Baro_MSP","commander small-class","AP_Baro_MSP::AP_Baro_MSP","constructor",
"AP_Baro_MSP","commander small-class","AP_Baro_MSP::update","command",
"AP_Baro_MSP","commander small-class","AP_Baro_MSP::handle_msp","command collaborator",
"NavEKF_core_common","boundary small-class","NavEKF_core_common::fill_scratch_variables","wrapper",
"AP_CANDriver","degenerate small-class","add_11bit_driver","collaborator incidental",
"AP_CANDriver","degenerate small-class","write_aux_frame","incidental",
"AP_Beacon_Pozyx","entity boundary","AP_Beacon_Pozyx::healthy","predicate wrapper",
"AP_Beacon_Pozyx","entity boundary","AP_Beacon_Pozyx::update","command",
"AP_Beacon_Pozyx","entity boundary","AP_Beacon_Pozyx::parse_buffer","set collaborator",
"ModeStabilize_Heli","pure-controller degenerate","allows_inverted","incidental",
"ModeStabilize_Heli","pure-controller degenerate","ModeStabilize_Heli::init","controller stateless",
"ModeStabilize_Heli","pure-controller degenerate","ModeStabilize_Heli::run","controller stateless",
"AP_HAL::RCInput","degenerate","teardown","empty",
"AP_HAL::RCInput","degenerate","get_rssi","incidental",
"AP_HAL::RCInput","degenerate","get_rx_link_quality","incidental",
"AP_HAL::RCInput","degenerate","rc_bind","incidental",
"AP_HAL::RCInput","degenerate","pulse_input_enable","empty",
"AP_Frsky_MAVlite_SPortToMAVlite","commander","AP_Frsky_MAVlite_SPortToMAVlite::reset","command",
"AP_Frsky_MAVlite_SPortToMAVlite","commander","AP_Frsky_MAVlite_SPortToMAVlite::update_checksum","set",
"AP_Frsky_MAVlite_SPortToMAVlite","commander","AP_Frsky_MAVlite_SPortToMAVlite::process","predicate non-void-command collaborator",
"AP_Frsky_MAVlite_SPortToMAVlite","commander","AP_Frsky_MAVlite_SPortToMAVlite::parse","command",
"AP_Frsky_MAVlite_SPortToMAVlite","commander","reset","controller stateless",
"ToneAlarm","unclassified","ToneAlarm::ToneAlarm","constructor",
"ToneAlarm","unclassified","ToneAlarm::init","predicate controller",
"ToneAlarm","unclassified","ToneAlarm::set_buzzer_tone","wrapper",
"ToneAlarm","unclassified","ToneAlarm::update","empty",
"AP_Proximity_TeraRangerTower","commander","AP_Proximity_TeraRangerTower::update","command",
"AP_Proximity_TeraRangerTower","commander","AP_Proximity_TeraRangerTower::distance_max","incidental",
"AP_Proximity_TeraRangerTower","commander","AP_Proximity_TeraRangerTower::distance_min","incidental",
"AP_Proximity_TeraRangerTower","commander","AP_Proximity_TeraRangerTower::read_sensor_data","predicate non-void-command",
"AP_Proximity_TeraRangerTower","commander","AP_Proximity_TeraRangerTower::update_sector_data","set collaborator",
"AP_RangeFinder_Ainstein_LR_D1","lazy-class degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_Ainstein_LR_D1","lazy-class degenerate","initial_baudrate","incidental",
"AP_RangeFinder_Ainstein_LR_D1","lazy-class degenerate","get_signal_quality_pct","get",
"AP_RangeFinder_Ainstein_LR_D1","lazy-class degenerate","AP_RangeFinder_Ainstein_LR_D1::get_reading","predicate non-void-command",
"AP_RangeFinder_Ainstein_LR_D1","lazy-class degenerate","AP_RangeFinder_Ainstein_LR_D1::report_malfunction","wrapper stateless",
"AC_WeatherVane","commander","allow_weathervaning","set",
"AC_WeatherVane","commander","AC_WeatherVane::AC_WeatherVane","constructor",
"AC_WeatherVane","commander","AC_WeatherVane::get_yaw_out","predicate non-void-command",
"AC_WeatherVane","commander","AC_WeatherVane::reset","command",
"AP_Arming_Sub","degenerate","AP_Arming_Sub","constructor",
"AP_Arming_Sub","degenerate","AP_Arming_Sub::rc_calibration_checks","wrapper stateless",
"AP_Arming_Sub","degenerate","AP_Arming_Sub::has_disarm_function","controller stateless",
"AP_Arming_Sub","degenerate","AP_Arming_Sub::pre_arm_checks","predicate non-void-command",
"AP_Arming_Sub","degenerate","AP_Arming_Sub::ins_checks","wrapper stateless",
"AP_Arming_Sub","degenerate","AP_Arming_Sub::arm","controller stateless",
"AP_Arming_Sub","degenerate","AP_Arming_Sub::disarm","controller stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::open","controller stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::close","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::read","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::write","controller stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::fsync","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::lseek","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::stat","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::unlink","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::mkdir","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::rename","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::opendir","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::readdir","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::closedir","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::disk_free","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::disk_space","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::set_mtime","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::retry_mount","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::unmount","wrapper stateless",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::format","predicate set",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::format_handler","set collaborator",
"AP_Filesystem_FATFS","boundary lazy-class degenerate","AP_Filesystem_FATFS::get_format_status","get collaborator",
"QuadPlane","unclassified","available","get",
"QuadPlane","unclassified","in_assisted_flight","predicate",
"QuadPlane","unclassified","enabled","predicate",
"QuadPlane","unclassified","option_is_set","predicate collaborator",
"QuadPlane","unclassified","QuadPlane::motor_test_output","command",
"QuadPlane","unclassified","QuadPlane::mavlink_motor_test_start","property non-void-command collaborator",
"QuadPlane","unclassified","QuadPlane::motor_test_stop","command",
"QuadPlane","unclassified","QuadPlane::QuadPlane","constructor",
"QuadPlane","unclassified","QuadPlane::setup_default_channels","wrapper stateless",
"QuadPlane","unclassified","QuadPlane::setup","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::setup_defaults","command",
"QuadPlane","unclassified","QuadPlane::run_esc_calibration","command",
"QuadPlane","unclassified","QuadPlane::multicopter_attitude_rate_update","command collaborator",
"QuadPlane","unclassified","QuadPlane::hold_stabilize","command",
"QuadPlane","unclassified","QuadPlane::run_z_controller","command",
"QuadPlane","unclassified","QuadPlane::relax_attitude_control","command",
"QuadPlane","unclassified","QuadPlane::check_yaw_reset","unclassified",
"QuadPlane","unclassified","QuadPlane::set_climb_rate_cms","command",
"QuadPlane","unclassified","QuadPlane::hold_hover","command",
"QuadPlane","unclassified","QuadPlane::get_pilot_throttle","property non-void-command",
"QuadPlane","unclassified","QuadPlane::get_pilot_desired_lean_angles","controller stateless",
"QuadPlane","unclassified","QuadPlane::get_pilot_land_throttle","controller stateless",
"QuadPlane","unclassified","QuadPlane::is_flying","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::should_relax","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::is_flying_vtol","predicate",
"QuadPlane","unclassified","QuadPlane::landing_descent_rate_cms","property non-void-command",
"QuadPlane","unclassified","QuadPlane::get_pilot_input_yaw_rate_cds","property",
"QuadPlane","unclassified","QuadPlane::get_desired_yaw_rate_cds","property non-void-command",
"QuadPlane","unclassified","QuadPlane::get_pilot_desired_climb_rate_cms","property",
"QuadPlane","unclassified","QuadPlane::init_throttle_wait","set",
"QuadPlane","unclassified","QuadPlane::set_armed","command",
"QuadPlane","unclassified","QuadPlane::assist_climb_rate_cms","property",
"QuadPlane","unclassified","QuadPlane::desired_auto_yaw_rate_cds","property",
"QuadPlane","unclassified","QuadPlane::update","command",
"QuadPlane","unclassified","QuadPlane::update_throttle_suppression","command",
"QuadPlane","unclassified","QuadPlane::update_throttle_hover","command",
"QuadPlane","unclassified","QuadPlane::motors_output","command",
"QuadPlane","unclassified","QuadPlane::handle_do_vtol_transition","predicate collaborator",
"QuadPlane","unclassified","QuadPlane::in_vtol_auto","predicate",
"QuadPlane","unclassified","QuadPlane::in_vtol_mode","predicate",
"QuadPlane","unclassified","QuadPlane::in_vtol_posvel_mode","predicate",
"QuadPlane","unclassified","QuadPlane::update_land_positioning","command",
"QuadPlane","unclassified","QuadPlane::run_xy_controller","command",
"QuadPlane","unclassified","QuadPlane::poscontrol_init_approach","command",
"QuadPlane","unclassified","QuadPlane::log_QPOS","controller stateless",
"QuadPlane","unclassified","QuadPlane::vtol_position_controller","command",
"QuadPlane","unclassified","QuadPlane::get_vfwd_method","property collaborator",
"QuadPlane","unclassified","QuadPlane::assign_tilt_to_fwd_thr","command",
"QuadPlane","unclassified","QuadPlane::get_scaled_wp_speed","property",
"QuadPlane","unclassified","QuadPlane::setup_target_position","command collaborator",
"QuadPlane","unclassified","QuadPlane::takeoff_controller","command",
"QuadPlane","unclassified","QuadPlane::waypoint_controller","command",
"QuadPlane","unclassified","QuadPlane::control_auto","command",
"QuadPlane","unclassified","QuadPlane::do_vtol_takeoff","predicate non-void-command collaborator",
"QuadPlane","unclassified","QuadPlane::do_vtol_land","predicate non-void-command collaborator",
"QuadPlane","unclassified","QuadPlane::verify_vtol_takeoff","predicate non-void-command collaborator",
"QuadPlane","unclassified","QuadPlane::land_detector","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::check_land_complete","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::check_land_final","predicate set",
"QuadPlane","unclassified","QuadPlane::verify_vtol_land","predicate non-void-command collaborator",
"QuadPlane","unclassified","QuadPlane::Log_Write_QControl_Tuning","command collaborator",
"QuadPlane","unclassified","QuadPlane::forward_throttle_pct","property non-void-command",
"QuadPlane","unclassified","QuadPlane::get_weathervane_yaw_rate_cds","property non-void-command",
"QuadPlane","unclassified","QuadPlane::guided_start","unclassified",
"QuadPlane","unclassified","QuadPlane::guided_update","command",
"QuadPlane","unclassified","QuadPlane::afs_terminate","command",
"QuadPlane","unclassified","QuadPlane::guided_mode_enabled","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::set_alt_target_current","command",
"QuadPlane","unclassified","QuadPlane::do_user_takeoff","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::using_wp_nav","incidental",
"QuadPlane","unclassified","QuadPlane::get_mav_type","property collaborator",
"QuadPlane","unclassified","QuadPlane::is_vtol_takeoff","predicate",
"QuadPlane","unclassified","QuadPlane::is_vtol_land","predicate",
"QuadPlane","unclassified","QuadPlane::in_transition","predicate",
"QuadPlane","unclassified","QuadPlane::stopping_distance","property",
"QuadPlane","unclassified","QuadPlane::accel_needed","wrapper stateless",
"QuadPlane","unclassified","QuadPlane::stopping_distance","property non-void-command",
"QuadPlane","unclassified","QuadPlane::transition_threshold","property non-void-command",
"QuadPlane","unclassified","QuadPlane::update_throttle_mix","command",
"QuadPlane","unclassified","QuadPlane::in_vtol_land_approach","predicate",
"QuadPlane","unclassified","QuadPlane::in_vtol_land_descent","predicate collaborator",
"QuadPlane","unclassified","QuadPlane::in_vtol_land_final","predicate",
"QuadPlane","unclassified","QuadPlane::in_vtol_land_sequence","predicate",
"QuadPlane","unclassified","QuadPlane::in_vtol_land_poscontrol","predicate",
"QuadPlane","unclassified","QuadPlane::in_vtol_airbrake","predicate",
"QuadPlane","unclassified","QuadPlane::show_vtol_view","predicate",
"QuadPlane","unclassified","QuadPlane::get_pilot_velocity_z_max_dn","property wrapper",
"QuadPlane","unclassified","QuadPlane::use_fw_attitude_controllers","predicate",
"QuadPlane","unclassified","QuadPlane::landing_closing_velocity","property non-void-command collaborator",
"QuadPlane","unclassified","QuadPlane::landing_desired_closing_velocity","property non-void-command collaborator",
"QuadPlane","unclassified","QuadPlane::get_land_airspeed","property non-void-command",
"QuadPlane","unclassified","QuadPlane::set_desired_spool_state","command collaborator",
"QuadPlane","unclassified","QuadPlane::air_mode_active","predicate",
"QuadPlane","unclassified","QuadPlane::FW_vector_throttle_scaling","wrapper stateless",
"QuadPlane","unclassified","QuadPlane::in_vtol_takeoff","predicate",
"QuadPlane","unclassified","QuadPlane::mode_enter","command",
"QuadPlane","unclassified","QuadPlane::set_pilot_yaw_rate_time_constant","command",
"QuadPlane","unclassified","QuadPlane::disable_yaw_rate_time_constant","command",
"QuadPlane","unclassified","QuadPlane::allow_servo_auto_trim","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::landing_with_fixed_wing_spiral_approach","predicate collaborator",
"QuadPlane","unclassified","QuadPlane::setup_rp_fw_angle_gains","command collaborator",
"QuadPlane","unclassified","QuadPlane::abort_landing","predicate non-void-command",
"QuadPlane","unclassified","QuadPlane::allow_stick_mixing","predicate",
"QuadPlane","unclassified","QuadPlane::should_disable_TECS","predicate",
"QuadPlane","unclassified","QuadPlane::get_throttle_input","controller stateless",
"QuadPlane","unclassified","QuadPlane::allow_forward_throttle_in_vtol_mode","predicate",
"QuadPlane","unclassified","QuadPlane::QuadPlane","constructor",
"QuadPlane","unclassified","QuadPlane::update","controller stateless",
"AC_PosControl","unclassified","set_dt","set",
"AC_PosControl","unclassified","get_dt","get",
"AC_PosControl","unclassified","get_shaping_jerk_xy_cmsss","property",
"AC_PosControl","unclassified","get_max_speed_xy_cms","get",
"AC_PosControl","unclassified","get_max_accel_xy_cmss","get",
"AC_PosControl","unclassified","set_pos_error_max_xy_cm","command",
"AC_PosControl","unclassified","get_pos_error_max_xy_cm","property non-void-command",
"AC_PosControl","unclassified","get_max_accel_z_cmss","get",
"AC_PosControl","unclassified","get_pos_error_z_up_cm","property non-void-command",
"AC_PosControl","unclassified","get_pos_error_z_down_cm","property non-void-command",
"AC_PosControl","unclassified","get_max_speed_up_cms","get",
"AC_PosControl","unclassified","get_max_speed_down_cms","get",
"AC_PosControl","unclassified","set_pos_target_xy_cm","command",
"AC_PosControl","unclassified","get_pos_target_cm","get collaborator",
"AC_PosControl","unclassified","set_pos_target_z_cm","set",
"AC_PosControl","unclassified","get_pos_target_z_cm","get",
"AC_PosControl","unclassified","get_pos_error_cm","property collaborator",
"AC_PosControl","unclassified","get_pos_error_xy_cm","property",
"AC_PosControl","unclassified","get_pos_error_z_cm","property",
"AC_PosControl","unclassified","set_vel_desired_cms","set collaborator",
"AC_PosControl","unclassified","set_vel_desired_xy_cms","command collaborator",
"AC_PosControl","unclassified","get_vel_desired_cms","get collaborator",
"AC_PosControl","unclassified","get_vel_target_cms","get collaborator",
"AC_PosControl","unclassified","set_vel_desired_z_cms","set",
"AC_PosControl","unclassified","get_vel_target_z_cms","get",
"AC_PosControl","unclassified","set_accel_desired_xy_cmss","command collaborator",
"AC_PosControl","unclassified","get_accel_target_cmss","get collaborator",
"AC_PosControl","unclassified","set_pos_offset_target_z_cm","set",
"AC_PosControl","unclassified","set_pos_offset_z_cm","set",
"AC_PosControl","unclassified","get_pos_offset_z_cm","get",
"AC_PosControl","unclassified","get_vel_offset_z_cms","get",
"AC_PosControl","unclassified","get_accel_offset_z_cmss","get",
"AC_PosControl","unclassified","get_roll_cd","get",
"AC_PosControl","unclassified","get_pitch_cd","get",
"AC_PosControl","unclassified","get_yaw_cd","get",
"AC_PosControl","unclassified","get_yaw_rate_cds","get",
"AC_PosControl","unclassified","set_lean_angle_max_cd","set",
"AC_PosControl","unclassified","get_pos_xy_p","get collaborator",
"AC_PosControl","unclassified","get_pos_z_p","get collaborator",
"AC_PosControl","unclassified","get_vel_xy_pid","get collaborator",
"AC_PosControl","unclassified","get_vel_z_pid","get collaborator",
"AC_PosControl","unclassified","get_accel_z_pid","get collaborator",
"AC_PosControl","unclassified","set_externally_limited_xy","command",
"AC_PosControl","unclassified","set_vibe_comp","set",
"AC_PosControl","unclassified","get_vel_z_control_ratio","property wrapper",
"AC_PosControl","unclassified","get_z_accel_cmss","property",
"AC_PosControl","unclassified","get_fwd_pitch_is_limited","get",
"AC_PosControl","unclassified","set_disturb_pos_cm","set collaborator",
"AC_PosControl","unclassified","set_disturb_vel_cms","set collaborator",
"AC_PosControl","unclassified","AC_PosControl::AC_PosControl","constructor",
"AC_PosControl","unclassified","AC_PosControl::input_pos_xyz","command",
"AC_PosControl","unclassified","AC_PosControl::pos_offset_z_scaler","property",
"AC_PosControl","unclassified","AC_PosControl::set_max_speed_accel_xy","command",
"AC_PosControl","unclassified","AC_PosControl::set_correction_speed_accel_xy","command",
"AC_PosControl","unclassified","AC_PosControl::init_xy_controller_stopping_point","command",
"AC_PosControl","unclassified","AC_PosControl::relax_velocity_controller_xy","command",
"AC_PosControl","unclassified","AC_PosControl::soften_for_landing_xy","command",
"AC_PosControl","unclassified","AC_PosControl::init_xy_controller","command",
"AC_PosControl","unclassified","AC_PosControl::input_accel_xy","command collaborator",
"AC_PosControl","unclassified","AC_PosControl::input_vel_accel_xy","command",
"AC_PosControl","unclassified","AC_PosControl::input_pos_vel_accel_xy","command",
"AC_PosControl","unclassified","AC_PosControl::stop_pos_xy_stabilisation","command",
"AC_PosControl","unclassified","AC_PosControl::stop_vel_xy_stabilisation","command collaborator",
"AC_PosControl","unclassified","AC_PosControl::is_active_xy","predicate wrapper",
"AC_PosControl","unclassified","AC_PosControl::update_xy_controller","command",
"AC_PosControl","unclassified","AC_PosControl::set_max_speed_accel_z","command",
"AC_PosControl","unclassified","AC_PosControl::set_correction_speed_accel_z","command",
"AC_PosControl","unclassified","AC_PosControl::init_z_controller_no_descent","command",
"AC_PosControl","unclassified","AC_PosControl::init_z_controller_stopping_point","command",
"AC_PosControl","unclassified","AC_PosControl::relax_z_controller","command",
"AC_PosControl","unclassified","AC_PosControl::init_z_controller","command",
"AC_PosControl","unclassified","AC_PosControl::input_accel_z","command",
"AC_PosControl","unclassified","AC_PosControl::input_vel_accel_z","command",
"AC_PosControl","unclassified","AC_PosControl::set_pos_target_z_from_climb_rate_cm","command",
"AC_PosControl","unclassified","AC_PosControl::land_at_climb_rate_cm","set",
"AC_PosControl","unclassified","AC_PosControl::input_pos_vel_accel_z","void-accessor command collaborator",
"AC_PosControl","unclassified","AC_PosControl::set_alt_target_with_slew","wrapper stateless",
"AC_PosControl","unclassified","AC_PosControl::update_pos_offset_z","command collaborator",
"AC_PosControl","unclassified","AC_PosControl::is_active_z","predicate wrapper",
"AC_PosControl","unclassified","AC_PosControl::update_z_controller","command",
"AC_PosControl","unclassified","AC_PosControl::get_lean_angle_max_cd","get property",
"AC_PosControl","unclassified","AC_PosControl::set_pos_vel_accel","command collaborator",
"AC_PosControl","unclassified","AC_PosControl::set_pos_vel_accel_xy","command collaborator",
"AC_PosControl","unclassified","AC_PosControl::lean_angles_to_accel","wrapper stateless",
"AC_PosControl","unclassified","AC_PosControl::get_thrust_vector","property collaborator",
"AC_PosControl","unclassified","AC_PosControl::get_stopping_point_xy_cm","void-accessor collaborator",
"AC_PosControl","unclassified","AC_PosControl::get_stopping_point_z_cm","void-accessor collaborator",
"AC_PosControl","unclassified","AC_PosControl::get_bearing_to_target_cd","property",
"AC_PosControl","unclassified","AC_PosControl::get_throttle_with_vibration_override","property non-void-command",
"AC_PosControl","unclassified","AC_PosControl::standby_xyz_reset","command",
"AC_PosControl","unclassified","AC_PosControl::write_log","command",
"AC_PosControl","unclassified","AC_PosControl::crosstrack_error","property",
"AC_PosControl","unclassified","AC_PosControl::accel_to_lean_angles","void-accessor",
"AC_PosControl","unclassified","AC_PosControl::lean_angles_to_accel_xy","void-accessor collaborator",
"AC_PosControl","unclassified","AC_PosControl::calculate_yaw_and_rate_yaw","command",
"AC_PosControl","unclassified","AC_PosControl::calculate_overspeed_gain","property wrapper",
"AC_PosControl","unclassified","AC_PosControl::init_ekf_xy_reset","set collaborator",
"AC_PosControl","unclassified","AC_PosControl::handle_ekf_xy_reset","unclassified",
"AC_PosControl","unclassified","AC_PosControl::init_ekf_z_reset","set",
"AC_PosControl","unclassified","AC_PosControl::handle_ekf_z_reset","command",
"AC_PosControl","unclassified","AC_PosControl::pre_arm_checks","predicate non-void-command",
"AC_PosControl","unclassified","AC_PosControl::has_good_timing","wrapper stateless",
"AC_PosControl","unclassified","AC_PosControl::Write_PSCx","wrapper stateless",
"AC_PosControl","unclassified","AC_PosControl::Write_PSCN","command",
"AC_PosControl","unclassified","AC_PosControl::Write_PSCE","command",
"AC_PosControl","unclassified","AC_PosControl::Write_PSCD","command",
"AP_LeakDetector","data-class","get_status","get",
"AP_LeakDetector","data-class","AP_LeakDetector::AP_LeakDetector","constructor",
"AP_LeakDetector","data-class","AP_LeakDetector::init","set",
"AP_LeakDetector","data-class","AP_LeakDetector::update","get non-void-command",
"AP_LeakDetector","data-class","AP_LeakDetector::set_detect","set",
"AP_OADatabase","commander","healthy","incidental",
"AP_OADatabase","commander","get_item","collaborator incidental",
"AP_OADatabase","commander","database_count","incidental",
"AP_OADatabase","commander","AP_OADatabase::AP_OADatabase","constructor",
"AP_OADatabase","commander","AP_OADatabase::init","unclassified",
"AP_OADatabase","commander","AP_OADatabase::update","command",
"AP_OADatabase","commander","AP_OADatabase::queue_push","command collaborator",
"AP_OADatabase","commander","AP_OADatabase::init_queue","controller",
"AP_OADatabase","commander","AP_OADatabase::init_database","unclassified",
"AP_OADatabase","commander","AP_OADatabase::get_send_to_gcs_flags","property collaborator",
"AP_OADatabase","commander","AP_OADatabase::process_queue","predicate non-void-command",
"AP_OADatabase","commander","AP_OADatabase::database_item_add","command collaborator",
"AP_OADatabase","commander","AP_OADatabase::database_item_remove","command",
"AP_OADatabase","commander","AP_OADatabase::database_item_refresh","command",
"AP_OADatabase","commander","AP_OADatabase::database_items_remove_all_expired","command",
"AP_OADatabase","commander","AP_OADatabase::is_close_to_item_in_database","wrapper stateless",
"AP_OADatabase","commander","AP_OADatabase::send_adsb_vehicle","command",
"AP_OADatabase","commander","update","wrapper stateless",
"AP_OADatabase","commander","init","empty",
"AP_OADatabase","commander","init","wrapper stateless",
"AP_OADatabase","commander","init","wrapper stateless",
"AP_Generator_IE_650_800","boundary","AP_Generator_IE_650_800::init","wrapper stateless",
"AP_Generator_IE_650_800","boundary","AP_Generator_IE_650_800::assign_measurements","command",
"AP_Generator_IE_650_800","boundary","AP_Generator_IE_650_800::decode_latest_term","command",
"AP_Generator_IE_650_800","boundary","AP_Generator_IE_650_800::check_for_err_code","predicate controller",
"AP_Generator_IE_650_800","boundary","AP_Generator_IE_650_800::update_failsafes","property collaborator",
"AP_Airspeed_NMEA","unclassified","has_airspeed","incidental",
"AP_Airspeed_NMEA","unclassified","AP_Airspeed_NMEA::init","predicate set collaborator",
"AP_Airspeed_NMEA","unclassified","AP_Airspeed_NMEA::get_airspeed","predicate non-void-command",
"AP_Airspeed_NMEA","unclassified","AP_Airspeed_NMEA::get_temperature","predicate non-void-command",
"AP_Airspeed_NMEA","unclassified","AP_Airspeed_NMEA::decode","predicate non-void-command",
"AP_Airspeed_NMEA","unclassified","AP_Airspeed_NMEA::decode_latest_term","predicate non-void-command",
"SPIDeviceManager","boundary degenerate","get_device","collaborator incidental",
"SPIDeviceManager","boundary degenerate","get_count","incidental",
"SPIDeviceManager","boundary degenerate","get_device_name","incidental",
"SPIDeviceManager","boundary degenerate","set_register_rw_callback","empty",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::get_device","wrapper stateless",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::set_register_rw_callback","wrapper stateless",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::get_device","wrapper stateless",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::get_device","property non-void-command collaborator",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::get_count","incidental",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::get_device_name","incidental",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::_create_device","controller stateless",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::_unregister","controller stateless",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::teardown","controller stateless",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::SPIDeviceManager","constructor",
"SPIDeviceManager","boundary degenerate","SPIDeviceManager::get_device","wrapper stateless",
"AP_HAL::GPIO","degenerate","pinMode","empty",
"AP_HAL::GPIO","degenerate","valid_pin","incidental",
"AP_HAL::GPIO","degenerate","pin_to_servo_channel","incidental",
"AP_HAL::GPIO","degenerate","get_mode","incidental",
"AP_HAL::GPIO","degenerate","set_mode","empty",
"AP_HAL::GPIO","degenerate","attach_interrupt","collaborator incidental",
"AP_HAL::GPIO","degenerate","attach_interrupt","collaborator incidental",
"AP_HAL::GPIO","degenerate","detach_interrupt","predicate non-void-command",
"AP_HAL::GPIO","degenerate","wait_pin","incidental",
"AP_HAL::GPIO","degenerate","timer_tick","empty",
"AP_HAL::GPIO","degenerate","arming_checks","incidental",
"AP_Compass_LSM303D","unclassified","~AP_Compass_LSM303D","destructor",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::AP_Compass_LSM303D","constructor",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::probe","controller stateless",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_register_read","property non-void-command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_block_read","predicate non-void-command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_register_write","command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_register_modify","command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_data_ready","predicate non-void-command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_read_sample","predicate non-void-command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::init","predicate non-void-command collaborator",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_hardware_init","predicate non-void-command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_update","command collaborator",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::read","wrapper",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_disable_i2c","command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_mag_set_range","predicate non-void-command",
"AP_Compass_LSM303D","unclassified","AP_Compass_LSM303D::_mag_set_samplerate","predicate set",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::SoloGimbalEKF","constructor",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::reset","command",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::RunEKF","command collaborator",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::predictStates","controller",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::predictCovariance","command",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::fuseVelocity","command",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::readMagData","command collaborator",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::fuseCompass","command",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::alignHeading","command collaborator",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::calcMagHeadingInnov","property non-void-command",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::fixCovariance","command",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::getGyroBias","void-accessor controller",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::setGyroBias","collaborator",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::getQuat","collaborator incidental",
"SoloGimbalEKF","commander boundary","SoloGimbalEKF::getStatus","predicate wrapper",
"SoloGimbalEKF","commander boundary","reset","controller stateless",
"AP_BattMonitor_SMBus_NeoDesign","commander small-class","AP_BattMonitor_SMBus_NeoDesign::AP_BattMonitor_SMBus_NeoDesign","constructor",
"AP_BattMonitor_SMBus_NeoDesign","commander small-class","AP_BattMonitor_SMBus_NeoDesign::timer","command",
"AP_InertialSensor_Backend","commander","~AP_InertialSensor_Backend","destructor",
"AP_InertialSensor_Backend","commander","accumulate","empty",
"AP_InertialSensor_Backend","commander","start","empty",
"AP_InertialSensor_Backend","commander","get_auxiliary_bus","collaborator incidental",
"AP_InertialSensor_Backend","commander","get_id","get",
"AP_InertialSensor_Backend","commander","get_clip_limit","get",
"AP_InertialSensor_Backend","commander","get_output_banner","incidental",
"AP_InertialSensor_Backend","commander","handle_external","empty",
"AP_InertialSensor_Backend","commander","_set_accel_sensor_rate_sampling_enabled","set",
"AP_InertialSensor_Backend","commander","_set_gyro_sensor_rate_sampling_enabled","set",
"AP_InertialSensor_Backend","commander","_set_raw_sample_accel_multiplier","set",
"AP_InertialSensor_Backend","commander","_set_raw_sample_gyro_multiplier","set",
"AP_InertialSensor_Backend","commander","sensors_converging","wrapper stateless",
"AP_InertialSensor_Backend","commander","_accel_raw_sample_rate","get",
"AP_InertialSensor_Backend","commander","_set_accel_raw_sample_rate","set",
"AP_InertialSensor_Backend","commander","_gyro_raw_sample_rate","get",
"AP_InertialSensor_Backend","commander","_set_gyro_raw_sample_rate","set",
"AP_InertialSensor_Backend","commander","_accel_filter_cutoff","get",
"AP_InertialSensor_Backend","commander","_gyro_filter_cutoff","get",
"AP_InertialSensor_Backend","commander","get_loop_rate_hz","property",
"AP_InertialSensor_Backend","commander","set_gyro_orientation","set collaborator",
"AP_InertialSensor_Backend","commander","set_accel_orientation","set collaborator",
"AP_InertialSensor_Backend","commander","increment_clip_count","set",
"AP_InertialSensor_Backend","commander","enable_fast_sampling","predicate",
"AP_InertialSensor_Backend","commander","enable_highres_sampling","incidental",
"AP_InertialSensor_Backend","commander","get_fast_sampling_rate","property wrapper",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::AP_InertialSensor_Backend","constructor",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::notify_accel_fifo_reset","command",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::notify_gyro_fifo_reset","command",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_set_accel_oversampling","set",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_set_gyro_oversampling","set",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_update_sensor_rate","void-accessor",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_rotate_and_correct_accel","void-accessor command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_rotate_and_correct_gyro","void-accessor command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_publish_gyro","command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::save_gyro_window","set collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::apply_gyro_filters","collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_notify_new_gyro_raw_sample","command",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_notify_new_delta_angle","command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::log_gyro_raw","command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_publish_accel","command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_notify_new_accel_raw_sample","command",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_notify_new_delta_velocity","command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_notify_new_accel_sensor_rate_sample","command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_notify_new_gyro_sensor_rate_sample","command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::log_accel_raw","command collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_set_accel_max_abs_offset","set",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_inc_accel_error_count","set",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_inc_gyro_error_count","set",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::_publish_temperature","set collaborator",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::update_gyro","command",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::update_accel","command",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::should_log_imu_raw","predicate controller",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::log_register_change","wrapper stateless",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::Write_ACC","wrapper stateless",
"AP_InertialSensor_Backend","commander","AP_InertialSensor_Backend::Write_GYR","wrapper stateless",
"AP_Filesystem","boundary","AP_Filesystem::backend_by_path","get property wrapper",
"AP_Filesystem","boundary","AP_Filesystem::backend_by_fd","get property wrapper",
"AP_Filesystem","boundary","AP_Filesystem::open","property non-void-command",
"AP_Filesystem","boundary","AP_Filesystem::close","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::read","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::write","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::fsync","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::lseek","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::stat","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::unlink","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::mkdir","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::rename","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::opendir","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::readdir","property controller",
"AP_Filesystem","boundary","AP_Filesystem::closedir","property controller",
"AP_Filesystem","boundary","AP_Filesystem::disk_free","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::disk_space","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::set_mtime","predicate non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::retry_mount","controller stateless",
"AP_Filesystem","boundary","AP_Filesystem::unmount","controller stateless",
"AP_Filesystem","boundary","AP_Filesystem::load_file","property non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::fgets","predicate non-void-command",
"AP_Filesystem","boundary","AP_Filesystem::crc32","predicate non-void-command collaborator",
"AP_Filesystem","boundary","AP_Filesystem::format","controller stateless",
"AP_Filesystem","boundary","AP_Filesystem::get_format_status","controller stateless",
"AP_Filesystem","boundary","AP_Filesystem::stat","controller stateless",
"AP_Filesystem","boundary","AP_Filesystem::get_singleton","incidental",
"RCInput_AioPRU","commander small-class","RCInput_AioPRU::init","command",
"RCInput_AioPRU","commander small-class","RCInput_AioPRU::_timer_tick","set",
"ModeFBWA","degenerate","mode_number","collaborator incidental",
"ModeFBWA","degenerate","name","incidental",
"ModeFBWA","degenerate","name4","incidental",
"ModeFBWA","degenerate","mode_allows_autotuning","incidental",
"ModeFBWA","degenerate","ModeFBWA::update","controller stateless",
"ModeFBWA","degenerate","ModeFBWA::run","wrapper stateless",
"ModeAlthold","degenerate","requires_GPS","incidental",
"ModeAlthold","degenerate","has_manual_throttle","incidental",
"ModeAlthold","degenerate","allows_arming","incidental",
"ModeAlthold","degenerate","is_autopilot","incidental",
"ModeAlthold","degenerate","name","incidental",
"ModeAlthold","degenerate","name4","incidental",
"ModeAlthold","degenerate","ModeAlthold::init","controller stateless",
"ModeAlthold","degenerate","ModeAlthold::run","command",
"ModeAlthold","degenerate","ModeAlthold::run_pre","controller stateless",
"ModeAlthold","degenerate","ModeAlthold::run_post","controller stateless",
"ModeAlthold","degenerate","ModeAlthold::control_depth","controller stateless",
"AP_DAL_RangeFinder_Backend","entity data-provider boundary","orientation","property collaborator",
"AP_DAL_RangeFinder_Backend","entity data-provider boundary","status","property collaborator",
"AP_DAL_RangeFinder_Backend","entity data-provider boundary","distance_cm","get",
"AP_DAL_RangeFinder_Backend","entity data-provider boundary","get_pos_offset","get collaborator",
"AP_DAL_RangeFinder_Backend","entity data-provider boundary","AP_DAL_RangeFinder_Backend::AP_DAL_RangeFinder_Backend","constructor",
"AP_DAL_RangeFinder_Backend","entity data-provider boundary","AP_DAL_RangeFinder_Backend::start_frame","command collaborator",
"AP_Frsky_Parameters","empty","AP_Frsky_Parameters::AP_Frsky_Parameters","constructor",
"AP_Mount_Gremsy","entity boundary","has_pan_control","wrapper stateless",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::update","command collaborator",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::healthy","predicate wrapper",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::get_attitude_quaternion","predicate collaborator",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::find_gimbal","command",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::handle_gimbal_device_information","collaborator",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::handle_gimbal_device_attitude_status","set collaborator",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::request_gimbal_device_information","collaborator",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::start_sending_attitude_to_gimbal","predicate non-void-command collaborator",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::send_gimbal_device_retract","collaborator",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::send_gimbal_device_set_rate","collaborator",
"AP_Mount_Gremsy","entity boundary","AP_Mount_Gremsy::send_gimbal_device_set_attitude","collaborator",
"AP_MotorsTri","unclassified","AP_MotorsTri","constructor",
"AP_MotorsTri","unclassified","_get_frame_string","incidental",
"AP_MotorsTri","unclassified","get_type_string","property",
"AP_MotorsTri","unclassified","AP_MotorsTri::init","command collaborator",
"AP_MotorsTri","unclassified","AP_MotorsTri::set_frame_class_and_type","set collaborator",
"AP_MotorsTri","unclassified","AP_MotorsTri::set_update_rate","wrapper stateless",
"AP_MotorsTri","unclassified","AP_MotorsTri::output_to_motors","unclassified",
"AP_MotorsTri","unclassified","AP_MotorsTri::get_motor_mask","wrapper stateless",
"AP_MotorsTri","unclassified","AP_MotorsTri::output_armed_stabilizing","command",
"AP_MotorsTri","unclassified","AP_MotorsTri::_output_test_seq","wrapper",
"AP_MotorsTri","unclassified","AP_MotorsTri::thrust_compensation","command",
"AP_MotorsTri","unclassified","AP_MotorsTri::output_motor_mask","wrapper stateless",
"AP_MotorsTri","unclassified","AP_MotorsTri::get_roll_factor","incidental",
"AP_MotorsTri","unclassified","AP_MotorsTri::get_pitch_factor_json","property",
"AP_MotorsTri","unclassified","AP_MotorsTri::arming_checks","predicate controller",
"AP_MotorsTri","unclassified","AP_MotorsTri::get_motor_test_order","property",
"ScriptButton","unclassified","ScriptButton","constructor",
"ScriptButton","unclassified","ScriptButton::press","command",
"ScriptButton","unclassified","ScriptButton::release","set",
"ScriptButton","unclassified","ScriptButton::is_pressed","get",
"ScriptButton","unclassified","ScriptButton::get_count","get",
"ScriptButton","unclassified","ScriptButton::clear_count","set",
"ScriptButton","unclassified","ScriptButton::get_and_clear_count","property non-void-command collaborator",
"ModeAuto","degenerate","number","collaborator incidental",
"ModeAuto","degenerate","requires_armed_servos","incidental",
"ModeAuto","degenerate","ModeAuto::update","controller stateless",
"ModeAuto","degenerate","ModeAuto::init","controller stateless",
"ModeAuto","degenerate","ModeAuto::exit","controller stateless",
"ModeAuto","degenerate","ModeAuto::run","command",
"ModeAuto","degenerate","ModeAuto::requires_GPS","incidental",
"ModeAuto","degenerate","ModeAuto::set_submode","controller stateless",
"ModeAuto","degenerate","ModeAuto::allows_arming","collaborator incidental",
"ModeAuto","degenerate","ModeAuto::allows_weathervaning","incidental",
"ModeAuto","degenerate","ModeAuto::jump_to_landing_sequence_auto_RTL","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::return_path_start_auto_RTL","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::return_path_or_jump_to_landing_sequence_auto_RTL","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::enter_auto_rtl","controller stateless",
"ModeAuto","degenerate","ModeAuto::nav_script_time","incidental",
"ModeAuto","degenerate","ModeAuto::nav_script_time_done","incidental",
"ModeAuto","degenerate","ModeAuto::loiter_start","controller stateless",
"ModeAuto","degenerate","ModeAuto::rtl_start","command",
"ModeAuto","degenerate","ModeAuto::takeoff_start","command collaborator",
"ModeAuto","degenerate","ModeAuto::wp_start","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::land_start","command",
"ModeAuto","degenerate","ModeAuto::circle_movetoedge_start","command",
"ModeAuto","degenerate","ModeAuto::circle_start","command",
"ModeAuto","degenerate","ModeAuto::nav_guided_start","command",
"ModeAuto","degenerate","ModeAuto::is_landing","controller stateless",
"ModeAuto","degenerate","ModeAuto::is_taking_off","incidental",
"ModeAuto","degenerate","ModeAuto::use_pilot_yaw","controller stateless",
"ModeAuto","degenerate","ModeAuto::set_speed_xy","controller stateless",
"ModeAuto","degenerate","ModeAuto::set_speed_up","controller stateless",
"ModeAuto","degenerate","ModeAuto::set_speed_down","controller stateless",
"ModeAuto","degenerate","ModeAuto::start_command","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::exit_mission","command",
"ModeAuto","degenerate","ModeAuto::do_guided","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::wp_distance","controller stateless",
"ModeAuto","degenerate","ModeAuto::wp_bearing","controller stateless",
"ModeAuto","degenerate","ModeAuto::get_wp","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_command","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::takeoff_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::wp_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::land_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::rtl_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::circle_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::nav_guided_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::loiter_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::loiter_to_alt_run","command",
"ModeAuto","degenerate","ModeAuto::nav_attitude_time_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::shift_alt_to_current_alt","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_takeoff","command collaborator",
"ModeAuto","degenerate","ModeAuto::loc_from_cmd","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_nav_wp","command collaborator",
"ModeAuto","degenerate","ModeAuto::set_next_wp","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::do_land","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_loiter_unlimited","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_circle","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_loiter_time","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_loiter_to_alt","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_spline_wp","command collaborator",
"ModeAuto","degenerate","ModeAuto::get_spline_from_cmd","void-accessor command collaborator",
"ModeAuto","degenerate","ModeAuto::do_nav_guided_enable","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_guided_limits","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_nav_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::do_nav_script_time","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_nav_attitude_time","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_wait_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::do_within_distance","collaborator incidental",
"ModeAuto","degenerate","ModeAuto::do_yaw","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_change_speed","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_set_home","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_roi","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_mount_control","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_winch","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_payload_place","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_RTL","command",
"ModeAuto","degenerate","ModeAuto::verify_takeoff","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_land","predicate non-void-command",
"ModeAuto","degenerate","ModeAuto::verify_loiter_unlimited","incidental",
"ModeAuto","degenerate","ModeAuto::verify_loiter_time","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_loiter_to_alt","incidental",
"ModeAuto","degenerate","ModeAuto::verify_RTL","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_wait_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::verify_within_distance","predicate non-void-command",
"ModeAuto","degenerate","ModeAuto::verify_yaw","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_wp","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_circle","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::verify_spline_wp","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_guided_enable","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_script_time","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_attitude_time","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::pause","controller stateless",
"ModeAuto","degenerate","ModeAuto::resume","controller stateless",
"ModeAuto","degenerate","ModeAuto::paused","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_nav_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::verify_altitude_wait","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::_enter","controller stateless",
"ModeAuto","degenerate","ModeAuto::_exit","controller stateless",
"ModeAuto","degenerate","ModeAuto::update","controller stateless",
"ModeAuto","degenerate","ModeAuto::navigate","controller stateless",
"ModeAuto","degenerate","ModeAuto::does_auto_navigation","controller stateless",
"ModeAuto","degenerate","ModeAuto::does_auto_throttle","controller stateless",
"ModeAuto","degenerate","ModeAuto::_pre_arm_checks","controller stateless",
"ModeAuto","degenerate","ModeAuto::is_landing","incidental",
"ModeAuto","degenerate","ModeAuto::run","command",
"ModeAuto","degenerate","ModeAuto::wiggle_servos","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::init","controller stateless",
"ModeAuto","degenerate","ModeAuto::run","command",
"ModeAuto","degenerate","ModeAuto::auto_wp_start","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_wp_start","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_wp_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_circle_movetoedge_start","command",
"ModeAuto","degenerate","ModeAuto::auto_circle_start","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_circle_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_nav_guided_start","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_nav_guided_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_loiter_start","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_loiter_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::set_auto_yaw_look_at_heading","controller stateless",
"ModeAuto","degenerate","ModeAuto::set_yaw_rate","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::set_auto_yaw_roi","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_terrain_recover_start","controller stateless",
"ModeAuto","degenerate","ModeAuto::auto_terrain_recover_run","controller stateless",
"ModeAuto","degenerate","ModeAuto::_enter","predicate non-void-command",
"ModeAuto","degenerate","ModeAuto::_exit","controller stateless",
"ModeAuto","degenerate","ModeAuto::update","command",
"ModeAuto","degenerate","ModeAuto::calc_throttle","command",
"ModeAuto","degenerate","ModeAuto::wp_bearing","controller stateless",
"ModeAuto","degenerate","ModeAuto::nav_bearing","controller stateless",
"ModeAuto","degenerate","ModeAuto::crosstrack_error","controller stateless",
"ModeAuto","degenerate","ModeAuto::get_desired_lat_accel","controller stateless",
"ModeAuto","degenerate","ModeAuto::get_distance_to_destination","controller stateless",
"ModeAuto","degenerate","ModeAuto::get_desired_location","controller stateless",
"ModeAuto","degenerate","ModeAuto::set_desired_location","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::reached_destination","controller stateless",
"ModeAuto","degenerate","ModeAuto::set_desired_speed","controller stateless",
"ModeAuto","degenerate","ModeAuto::start_RTL","controller stateless",
"ModeAuto","degenerate","ModeAuto::nav_script_time","incidental",
"ModeAuto","degenerate","ModeAuto::nav_script_time_done","incidental",
"ModeAuto","degenerate","ModeAuto::check_trigger","controller stateless",
"ModeAuto","degenerate","ModeAuto::start_loiter","controller stateless",
"ModeAuto","degenerate","ModeAuto::start_guided","controller stateless",
"ModeAuto","degenerate","ModeAuto::start_stop","incidental",
"ModeAuto","degenerate","ModeAuto::send_guided_position_target","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::start_command","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::exit_mission","command",
"ModeAuto","degenerate","ModeAuto::verify_command_callback","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::verify_command","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::do_RTL","command",
"ModeAuto","degenerate","ModeAuto::do_nav_wp","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::do_nav_delay","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_nav_guided_enable","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_nav_set_yaw_speed","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_wp","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::verify_nav_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::verify_RTL","predicate",
"ModeAuto","degenerate","ModeAuto::verify_loiter_unlimited","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::verify_loiter_time","predicate non-void-command collaborator",
"ModeAuto","degenerate","ModeAuto::verify_nav_guided_enable","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_set_yaw_speed","incidental",
"ModeAuto","degenerate","ModeAuto::do_circle","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_circle","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_wait_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::do_within_distance","collaborator incidental",
"ModeAuto","degenerate","ModeAuto::verify_wait_delay","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::verify_within_distance","predicate non-void-command",
"ModeAuto","degenerate","ModeAuto::do_change_speed","command collaborator",
"ModeAuto","degenerate","ModeAuto::do_set_home","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_set_reverse","wrapper stateless",
"ModeAuto","degenerate","ModeAuto::do_guided_limits","controller stateless",
"ModeAuto","degenerate","ModeAuto::do_nav_script_time","controller stateless",
"ModeAuto","degenerate","ModeAuto::verify_nav_script_time","wrapper stateless",
"RC_Channels_Sub","data-provider degenerate","channel","property collaborator",
"RC_Channels_Sub","data-provider degenerate","in_rc_failsafe","incidental",
"RC_Channels_Sub","data-provider degenerate","RC_Channels_Sub::flight_mode_channel_number","incidental",
"AC_CustomControl_Empty","small-class","AC_CustomControl_Empty::AC_CustomControl_Empty","constructor",
"AC_CustomControl_Empty","small-class","AC_CustomControl_Empty::update","property non-void-command collaborator",
"AC_CustomControl_Empty","small-class","AC_CustomControl_Empty::reset","empty",
"AP_Camera","unclassified","set_is_auto_mode","set",
"AP_Camera","unclassified","get_semaphore","get collaborator",
"AP_Camera","unclassified","vehicle_mode_ok_for_trigg_dist","predicate",
"AP_Camera","unclassified","get_roll_max","get",
"AP_Camera","unclassified","get_log_camera_bit","get",
"AP_Camera","unclassified","AP_Camera::AP_Camera","constructor",
"AP_Camera","unclassified","AP_Camera::set_trigger_distance","command",
"AP_Camera","unclassified","AP_Camera::cam_mode_toggle","command",
"AP_Camera","unclassified","AP_Camera::take_picture","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::take_picture","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::take_multiple_pictures","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::take_multiple_pictures","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::stop_capture","command",
"AP_Camera","unclassified","AP_Camera::stop_capture","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::record_video","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::init","command",
"AP_Camera","unclassified","AP_Camera::handle_message","command collaborator",
"AP_Camera","unclassified","AP_Camera::handle_command","property non-void-command collaborator",
"AP_Camera","unclassified","AP_Camera::send_mavlink_message","predicate non-void-command collaborator",
"AP_Camera","unclassified","AP_Camera::set_trigger_distance","command",
"AP_Camera","unclassified","AP_Camera::cam_mode_toggle","command",
"AP_Camera","unclassified","AP_Camera::configure","command",
"AP_Camera","unclassified","AP_Camera::configure","command",
"AP_Camera","unclassified","AP_Camera::control","command",
"AP_Camera","unclassified","AP_Camera::control","command",
"AP_Camera","unclassified","AP_Camera::send_feedback","wrapper",
"AP_Camera","unclassified","AP_Camera::send_camera_information","command collaborator",
"AP_Camera","unclassified","AP_Camera::send_camera_settings","command collaborator",
"AP_Camera","unclassified","AP_Camera::send_camera_fov_status","command collaborator",
"AP_Camera","unclassified","AP_Camera::send_camera_capture_status","command collaborator",
"AP_Camera","unclassified","AP_Camera::update","command",
"AP_Camera","unclassified","AP_Camera::record_video","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::set_zoom","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::set_zoom","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::set_focus","property non-void-command collaborator",
"AP_Camera","unclassified","AP_Camera::set_focus","property non-void-command collaborator",
"AP_Camera","unclassified","AP_Camera::set_tracking","predicate non-void-command collaborator",
"AP_Camera","unclassified","AP_Camera::set_tracking","predicate non-void-command collaborator",
"AP_Camera","unclassified","AP_Camera::set_lens","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::set_lens","predicate non-void-command",
"AP_Camera","unclassified","AP_Camera::set_camera_source","predicate non-void-command collaborator",
"AP_Camera","unclassified","AP_Camera::get_state","predicate non-void-command collaborator",
"AP_Camera","unclassified","AP_Camera::get_instance","get property wrapper",
"AP_Camera","unclassified","AP_Camera::convert_params","controller",
"AP_Camera","unclassified","AP_Camera::get_legacy_relay_index","predicate controller",
"AP_Camera","unclassified","update","wrapper stateless",
"AP_Camera","unclassified","init","empty",
"AP_Camera","unclassified","init","wrapper stateless",
"AP_Camera","unclassified","init","wrapper stateless",
"AP_GPS_DroneCAN","boundary","name","get",
"AP_GPS_DroneCAN","boundary","get_error_codes","get",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::AP_GPS_DroneCAN","constructor",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::~AP_GPS_DroneCAN","destructor",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::subscribe_msgs","controller stateless",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::probe","property controller",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::backends_healthy","predicate controller",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::get_dronecan_backend","property set",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_velocity","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_fix2_msg","command",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_aux_msg","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_heading_msg","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_status_msg","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_moving_baseline_msg","controller",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_relposheading_msg","command",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::get_RTCMV3","predicate controller",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::clear_RTCMV3","controller",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_fix2_msg_trampoline","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_aux_msg_trampoline","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_heading_msg_trampoline","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_status_msg_trampoline","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_moving_baseline_msg_trampoline","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_relposheading_msg_trampoline","command collaborator",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::do_config","predicate set",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::read","predicate non-void-command",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::is_healthy","get predicate",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::logging_healthy","predicate",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::is_configured","predicate",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::send_rtcm","controller",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::inject_data","command",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_param_get_set_response_int","predicate non-void-command",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_param_get_set_response_float","wrapper stateless",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::handle_param_save_response","set",
"AP_GPS_DroneCAN","boundary","AP_GPS_DroneCAN::instance_exists","wrapper stateless",
"RCMapper","data-provider data-class","roll","get",
"RCMapper","data-provider data-class","pitch","get",
"RCMapper","data-provider data-class","throttle","get",
"RCMapper","data-provider data-class","yaw","get",
"RCMapper","data-provider data-class","forward","get",
"RCMapper","data-provider data-class","lateral","get",
"RCMapper","data-provider data-class","RCMapper::RCMapper","constructor",
"AP_Rally_Copter","pure-controller degenerate small-class","AP_Rally_Copter","constructor",
"AP_Rally_Copter","pure-controller degenerate small-class","AP_Rally_Copter::is_valid","controller stateless",
"AP_LoggerTest_AllTypes","unclassified","AP_LoggerTest_AllTypes::flush_logger","controller stateless",
"AP_LoggerTest_AllTypes","unclassified","AP_LoggerTest_AllTypes::Log_Write_TypeMessages","command collaborator",
"AP_LoggerTest_AllTypes","unclassified","AP_LoggerTest_AllTypes::Log_Write_TypeMessages_Log_Write","command",
"AP_LoggerTest_AllTypes","unclassified","AP_LoggerTest_AllTypes::setup","command",
"AP_LoggerTest_AllTypes","unclassified","AP_LoggerTest_AllTypes::loop","controller stateless",
"Tracker","commander boundary","gcs","get collaborator",
"Tracker","commander boundary","get_log_bitmask","get collaborator",
"Tracker","commander boundary","get_log_structures","get collaborator",
"Tracker","commander boundary","get_mode","property",
"Tracker","commander boundary","start_command_callback","collaborator incidental",
"Tracker","commander boundary","exit_mission_callback","incidental",
"Tracker","commander boundary","verify_command_callback","collaborator incidental",
"Tracker","commander boundary","Tracker::Log_Write_Attitude","command collaborator",
"Tracker","commander boundary","Tracker::Log_Write_Vehicle_Baro","command collaborator",
"Tracker","commander boundary","Tracker::Log_Write_Vehicle_Pos","command collaborator",
"Tracker","commander boundary","Tracker::get_num_log_structures","property wrapper",
"Tracker","commander boundary","Tracker::Log_Write_Vehicle_Startup_Messages","command",
"Tracker","commander boundary","Tracker::load_parameters","wrapper",
"Tracker","commander boundary","Tracker::get_scheduler_tasks","void-accessor wrapper",
"Tracker","commander boundary","Tracker::one_second_loop","command collaborator",
"Tracker","commander boundary","Tracker::ten_hz_logging_loop","command",
"Tracker","commander boundary","Tracker::mode_from_mode_num","property collaborator",
"Tracker","commander boundary","Tracker::stats_update","controller stateless",
"Tracker","commander boundary","Tracker::read_radio","wrapper stateless",
"Tracker","commander boundary","Tracker::update_ahrs","command",
"Tracker","commander boundary","Tracker::update_compass","command",
"Tracker","commander boundary","Tracker::compass_save","command",
"Tracker","commander boundary","Tracker::update_GPS","command",
"Tracker","commander boundary","Tracker::handle_battery_failsafe","empty",
"Tracker","commander boundary","Tracker::init_servos","command",
"Tracker","commander boundary","Tracker::update_pitch_servo","command",
"Tracker","commander boundary","Tracker::update_pitch_position_servo","unclassified",
"Tracker","commander boundary","Tracker::update_pitch_onoff_servo","wrapper",
"Tracker","commander boundary","Tracker::update_pitch_cr_servo","command",
"Tracker","commander boundary","Tracker::update_yaw_servo","command",
"Tracker","commander boundary","Tracker::update_yaw_position_servo","unclassified",
"Tracker","commander boundary","Tracker::update_yaw_onoff_servo","wrapper",
"Tracker","commander boundary","Tracker::update_yaw_cr_servo","command",
"Tracker","commander boundary","Tracker::init_ardupilot","command collaborator",
"Tracker","commander boundary","Tracker::get_home_eeprom","predicate collaborator",
"Tracker","commander boundary","Tracker::set_home_eeprom","predicate non-void-command collaborator",
"Tracker","commander boundary","Tracker::set_home_to_current_location","predicate non-void-command",
"Tracker","commander boundary","Tracker::set_home","predicate non-void-command collaborator",
"Tracker","commander boundary","Tracker::arm_servos","command",
"Tracker","commander boundary","Tracker::disarm_servos","command",
"Tracker","commander boundary","Tracker::prepare_servos","set",
"Tracker","commander boundary","Tracker::set_mode","command collaborator",
"Tracker","commander boundary","Tracker::set_mode","predicate non-void-command collaborator",
"Tracker","commander boundary","Tracker::should_log","predicate non-void-command",
"Tracker","commander boundary","Tracker::update_vehicle_pos_estimate","controller stateless",
"Tracker","commander boundary","Tracker::update_tracker_position","command collaborator",
"Tracker","commander boundary","Tracker::update_bearing_and_distance","command",
"Tracker","commander boundary","Tracker::update_tracking","command",
"Tracker","commander boundary","Tracker::tracking_update_position","command collaborator",
"Tracker","commander boundary","Tracker::tracking_update_pressure","command collaborator",
"Tracker","commander boundary","Tracker::tracking_manual_control","collaborator incidental",
"Tracker","commander boundary","Tracker::update_armed_disarmed","wrapper stateless",
"Tracker","commander boundary","Tracker::get_pan_tilt_norm","predicate wrapper",
"Tracker","commander boundary","Tracker::update_position_servos","wrapper stateless",
"Tracker","commander boundary","Tracker::update_onoff_servos","wrapper stateless",
"Tracker","commander boundary","Tracker::update","command collaborator",
"Empty::Scheduler","degenerate","init","empty",
"Empty::Scheduler","degenerate","delay","empty",
"Empty::Scheduler","degenerate","delay_microseconds","empty",
"Empty::Scheduler","degenerate","register_timer_process","empty",
"Empty::Scheduler","degenerate","register_io_process","empty",
"Empty::Scheduler","degenerate","register_timer_failsafe","empty",
"Empty::Scheduler","degenerate","set_system_initialized","empty",
"Empty::Scheduler","degenerate","is_system_initialized","incidental",
"Empty::Scheduler","degenerate","reboot","incidental",
"AnalogSource_ADS1115","data-provider","AnalogSource_ADS1115::AnalogSource_ADS1115","constructor",
"AnalogSource_ADS1115","data-provider","AnalogSource_ADS1115::set_pin","predicate set",
"AnalogSource_ADS1115","data-provider","AnalogSource_ADS1115::read_average","property non-void-command",
"AnalogSource_ADS1115","data-provider","AnalogSource_ADS1115::read_latest","get",
"AnalogSource_ADS1115","data-provider","AnalogSource_ADS1115::voltage_average","get",
"AnalogSource_ADS1115","data-provider","AnalogSource_ADS1115::voltage_latest","get",
"AnalogSource_ADS1115","data-provider","AnalogSource_ADS1115::voltage_average_ratiometric","get",
"LR_MsgHandler_RSLL","boundary small-class","LR_MsgHandler_RSLL::process_message","wrapper",
"I2C","degenerate","I2C","constructor",
"I2C","degenerate","init","empty",
"I2C","degenerate","init","wrapper stateless",
"I2C","degenerate","init","wrapper stateless",
"I2C","degenerate","I2C::init","controller stateless",
"I2C","degenerate","I2C::update","controller stateless",
"I2C","degenerate","I2C::ioctl_rdwr","controller stateless",
"I2C","degenerate","I2C::ioctl","property non-void-command",
"AP_PiccoloCAN_ESC","data-provider degenerate","is_sw_inhibited","incidental",
"AP_PiccoloCAN_ESC","data-provider degenerate","is_hw_inhibited","incidental",
"AP_PiccoloCAN_ESC","data-provider degenerate","is_enabled","predicate",
"AP_PiccoloCAN_ESC","data-provider degenerate","voltage","incidental",
"AP_PiccoloCAN_ESC","data-provider degenerate","current","incidental",
"AP_PiccoloCAN_ESC","data-provider degenerate","rpm","incidental",
"AP_PiccoloCAN_ESC","data-provider degenerate","temperature","wrapper stateless",
"AP_PiccoloCAN_ESC","data-provider degenerate","motorTemperature","incidental",
"AP_PiccoloCAN_ESC","data-provider degenerate","AP_PiccoloCAN_ESC::handle_can_frame","predicate collaborator",
"LR_MsgHandler_REV3","pure-controller small-class","LR_MsgHandler_REV3::process_message","controller",
"AP_Winch_Daiwa","commander","get_current_length","incidental",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::healthy","predicate wrapper",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::init","set collaborator",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::update","command",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::send_status","command collaborator",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::write_log","command",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::read_data_from_winch","command",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::control_winch","command",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::get_stuck_protected_rate","property non-void-command",
"AP_Winch_Daiwa","commander","AP_Winch_Daiwa::update_user","command",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::AP_Baro_DPS280","constructor",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::probe","controller stateless",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::fix_config_bits16","wrapper stateless",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::fix_config_bits32","wrapper stateless",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::read_calibration","predicate non-void-command",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::set_config_registers","command",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::init","predicate non-void-command",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::calculate_PT","wrapper stateless",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::check_health","command",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::timer","command",
"AP_Baro_DPS280","commander","AP_Baro_DPS280::update","command",
"Sub","commander","should_zero_rc_outputs_on_reboot","incidental",
"Sub","commander","gcs","get collaborator",
"Sub","commander","any_failsafe_triggered","predicate",
"Sub","commander","get_log_bitmask","get collaborator",
"Sub","commander","get_log_structures","get collaborator",
"Sub","commander","get_mode","property",
"Sub","commander","get_rangefinder_target_cm","property",
"Sub","commander","set_rangefinder_target_cm","predicate non-void-command",
"Sub","commander","Sub::get_scheduler_tasks","void-accessor wrapper",
"Sub","commander","Sub::run_rate_controller","command",
"Sub","commander","Sub::fifty_hz_loop","command",
"Sub","commander","Sub::update_batt_compass","command",
"Sub","commander","Sub::ten_hz_logging_loop","command",
"Sub","commander","Sub::twentyfive_hz_logging","command",
"Sub","commander","Sub::three_hz_loop","command",
"Sub","commander","Sub::one_hz_loop","command",
"Sub","commander","Sub::read_AHRS","command",
"Sub","commander","Sub::update_altitude","command",
"Sub","commander","Sub::control_check_barometer","predicate non-void-command",
"Sub","commander","Sub::get_wp_distance_m","predicate",
"Sub","commander","Sub::get_wp_bearing_deg","predicate",
"Sub","commander","Sub::get_wp_crosstrack_error_m","incidental",
"Sub","commander","Sub::stats_update","command",
"Sub","commander","Sub::get_alt_rel","property collaborator",
"Sub","commander","Sub::get_alt_msl","property",
"Sub","commander","Sub::get_pilot_desired_lean_angles","void-accessor command",
"Sub","commander","Sub::get_pilot_desired_yaw_rate","property",
"Sub","commander","Sub::check_ekf_yaw_reset","unclassified",
"Sub","commander","Sub::get_roi_yaw","get",
"Sub","commander","Sub::get_look_ahead_yaw","get non-void-command",
"Sub","commander","Sub::get_pilot_desired_climb_rate","property non-void-command",
"Sub","commander","Sub::rotate_body_frame_to_NE","void-accessor command",
"Sub","commander","Sub::get_pilot_speed_dn","property wrapper",
"Sub","commander","Sub::Log_Write_Control_Tuning","command collaborator",
"Sub","commander","Sub::Log_Write_Attitude","command collaborator",
"Sub","commander","Sub::Log_Write_Data","non-void-command collaborator",
"Sub","commander","Sub::Log_Write_Data","non-void-command collaborator",
"Sub","commander","Sub::Log_Write_Data","command collaborator",
"Sub","commander","Sub::Log_Write_Data","command collaborator",
"Sub","commander","Sub::Log_Write_Data","non-void-command collaborator",
"Sub","commander","Sub::Log_Write_GuidedTarget","command collaborator",
"Sub","commander","Sub::get_num_log_structures","property wrapper",
"Sub","commander","Sub::Log_Write_Vehicle_Startup_Messages","command",
"Sub","commander","Sub::load_parameters","command collaborator",
"Sub","commander","Sub::convert_old_parameters","wrapper stateless",
"Sub","commander","Sub::Sub","constructor",
"Sub","commander","Sub::userhook_init","empty",
"Sub","commander","Sub::userhook_FastLoop","empty",
"Sub","commander","Sub::userhook_50Hz","empty",
"Sub","commander","Sub::userhook_MediumLoop","empty",
"Sub","commander","Sub::userhook_SlowLoop","empty",
"Sub","commander","Sub::userhook_SuperSlowLoop","empty",
"Sub","commander","Sub::update_home_from_EKF","command",
"Sub","commander","Sub::set_home_to_current_location_inflight","command collaborator",
"Sub","commander","Sub::set_home_to_current_location","predicate non-void-command collaborator",
"Sub","commander","Sub::set_home","predicate non-void-command collaborator",
"Sub","commander","Sub::start_command","predicate non-void-command collaborator",
"Sub","commander","Sub::verify_command_callback","predicate non-void-command collaborator",
"Sub","commander","Sub::verify_command","predicate non-void-command collaborator",
"Sub","commander","Sub::exit_mission","command",
"Sub","commander","Sub::do_nav_wp","command collaborator",
"Sub","commander","Sub::do_surface","command collaborator",
"Sub","commander","Sub::do_RTL","command",
"Sub","commander","Sub::do_loiter_unlimited","command collaborator",
"Sub","commander","Sub::do_circle","command collaborator",
"Sub","commander","Sub::do_loiter_time","command collaborator",
"Sub","commander","Sub::do_nav_guided_enable","command collaborator",
"Sub","commander","Sub::do_nav_delay","command collaborator",
"Sub","commander","Sub::do_guided_limits","command collaborator",
"Sub","commander","Sub::verify_nav_wp","predicate non-void-command collaborator",
"Sub","commander","Sub::verify_surface","predicate non-void-command collaborator",
"Sub","commander","Sub::verify_RTL","predicate non-void-command",
"Sub","commander","Sub::verify_loiter_unlimited","incidental",
"Sub","commander","Sub::verify_loiter_time","predicate set",
"Sub","commander","Sub::verify_circle","predicate non-void-command collaborator",
"Sub","commander","Sub::verify_nav_guided_enable","predicate non-void-command collaborator",
"Sub","commander","Sub::verify_nav_delay","predicate set collaborator",
"Sub","commander","Sub::do_wait_delay","command collaborator",
"Sub","commander","Sub::do_within_distance","set collaborator",
"Sub","commander","Sub::do_yaw","command collaborator",
"Sub","commander","Sub::verify_wait_delay","predicate set",
"Sub","commander","Sub::verify_within_distance","predicate set",
"Sub","commander","Sub::verify_yaw","predicate non-void-command",
"Sub","commander","Sub::do_guided","predicate non-void-command collaborator",
"Sub","commander","Sub::do_change_speed","command collaborator",
"Sub","commander","Sub::do_set_home","command collaborator",
"Sub","commander","Sub::do_roi","command collaborator",
"Sub","commander","Sub::do_mount_control","command collaborator",
"Sub","commander","Sub::mainloop_failsafe_enable","wrapper stateless",
"Sub","commander","Sub::mainloop_failsafe_disable","incidental",
"Sub","commander","Sub::mainloop_failsafe_check","command",
"Sub","commander","Sub::failsafe_sensors_check","command",
"Sub","commander","Sub::failsafe_ekf_check","command",
"Sub","commander","Sub::handle_battery_failsafe","command",
"Sub","commander","Sub::failsafe_pilot_input_check","command",
"Sub","commander","Sub::failsafe_internal_pressure_check","command",
"Sub","commander","Sub::failsafe_internal_temperature_check","command",
"Sub","commander","Sub::failsafe_leak_check","command",
"Sub","commander","Sub::failsafe_gcs_check","command",
"Sub","commander","Sub::failsafe_crash_check","command",
"Sub","commander","Sub::failsafe_terrain_check","unclassified",
"Sub","commander","Sub::failsafe_terrain_set_status","wrapper stateless",
"Sub","commander","Sub::failsafe_terrain_on_event","command",
"Sub","commander","Sub::failsafe_terrain_act","command",
"Sub","commander","Sub::fence_check","command",
"Sub","commander","Sub::read_inertia","command collaborator",
"Sub","commander","Sub::init_joystick","command",
"Sub","commander","Sub::transform_manual_control_to_rc_override","command",
"Sub","commander","Sub::handle_jsbutton_press","command collaborator",
"Sub","commander","Sub::handle_jsbutton_release","command collaborator",
"Sub","commander","Sub::get_button","property collaborator",
"Sub","commander","Sub::default_js_buttons","command",
"Sub","commander","Sub::set_neutral_controls","wrapper stateless",
"Sub","commander","Sub::clear_input_hold","set",
"Sub","commander","Sub::is_button_pressed","get wrapper",
"Sub","commander","Sub::get_and_clear_button_count","get wrapper",
"Sub","commander","Sub::mode_from_mode_num","property collaborator",
"Sub","commander","Sub::set_mode","predicate non-void-command collaborator",
"Sub","commander","Sub::exit_mode","command collaborator",
"Sub","commander","Sub::set_mode","controller stateless",
"Sub","commander","Sub::update_flight_mode","command",
"Sub","commander","Sub::exit_mode","command collaborator",
"Sub","commander","Sub::notify_flight_mode","command",
"Sub","commander","Sub::enable_motor_output","command",
"Sub","commander","Sub::motors_output","command",
"Sub","commander","Sub::init_motor_test","predicate non-void-command",
"Sub","commander","Sub::verify_motor_test","predicate set",
"Sub","commander","Sub::handle_do_motor_test","predicate non-void-command collaborator",
"Sub","commander","Sub::translate_wpnav_rp","void-accessor command",
"Sub","commander","Sub::translate_circle_nav_rp","void-accessor command",
"Sub","commander","Sub::translate_pos_control_rp","void-accessor command",
"Sub","commander","Sub::init_rc_in","command",
"Sub","commander","Sub::init_rc_out","command",
"Sub","commander","Sub::read_barometer","command",
"Sub","commander","Sub::init_rangefinder","command",
"Sub","commander","Sub::read_rangefinder","command",
"Sub","commander","Sub::rangefinder_alt_ok","wrapper stateless",
"Sub","commander","Sub::update_surface_and_bottom_detector","command",
"Sub","commander","Sub::set_surfaced","wrapper stateless",
"Sub","commander","Sub::set_bottomed","wrapper stateless",
"Sub","commander","Sub::init_ardupilot","command",
"Sub","commander","Sub::startup_INS_ground","command",
"Sub","commander","Sub::position_ok","predicate non-void-command",
"Sub","commander","Sub::ekf_position_ok","predicate non-void-command collaborator",
"Sub","commander","Sub::optflow_position_ok","predicate non-void-command collaborator",
"Sub","commander","Sub::should_log","predicate non-void-command",
"Sub","commander","Sub::terrain_update","command",
"Sub","commander","Sub::terrain_logging","command",
"Sub","commander","Sub::update_turn_counter","command",
"ModeAcro","lazy-class degenerate","mode_number","collaborator incidental",
"ModeAcro","lazy-class degenerate","requires_GPS","incidental",
"ModeAcro","lazy-class degenerate","has_manual_throttle","incidental",
"ModeAcro","lazy-class degenerate","allows_arming","collaborator incidental",
"ModeAcro","lazy-class degenerate","is_autopilot","incidental",
"ModeAcro","lazy-class degenerate","allows_save_trim","incidental",
"ModeAcro","lazy-class degenerate","allows_flip","incidental",
"ModeAcro","lazy-class degenerate","name","incidental",
"ModeAcro","lazy-class degenerate","name4","incidental",
"ModeAcro","lazy-class degenerate","ModeAcro::run","command",
"ModeAcro","lazy-class degenerate","ModeAcro::init","predicate set",
"ModeAcro","lazy-class degenerate","ModeAcro::exit","set",
"ModeAcro","lazy-class degenerate","ModeAcro::air_mode_aux_changed","set",
"ModeAcro","lazy-class degenerate","ModeAcro::throttle_hover","wrapper stateless",
"ModeAcro","lazy-class degenerate","ModeAcro::get_pilot_desired_angle_rates","controller stateless",
"ModeAcro","lazy-class degenerate","ModeAcro::_enter","controller stateless",
"ModeAcro","lazy-class degenerate","ModeAcro::update","incidental",
"ModeAcro","lazy-class degenerate","ModeAcro::run","command",
"ModeAcro","lazy-class degenerate","ModeAcro::stabilize","controller stateless",
"ModeAcro","lazy-class degenerate","ModeAcro::stabilize_quaternion","controller stateless",
"ModeAcro","lazy-class degenerate","ModeAcro::init","controller stateless",
"ModeAcro","lazy-class degenerate","ModeAcro::run","command",
"ModeAcro","lazy-class degenerate","ModeAcro::update","controller stateless",
"ModeAcro","lazy-class degenerate","ModeAcro::requires_velocity","controller stateless",
"ModeAcro","lazy-class degenerate","ModeAcro::handle_tack_request","controller stateless",
"AP_Mission","boundary","state","collaborator incidental",
"AP_Mission","boundary","num_commands","get",
"AP_Mission","boundary","num_commands_max","get",
"AP_Mission","boundary","get_current_nav_cmd","get collaborator",
"AP_Mission","boundary","get_current_nav_index","property",
"AP_Mission","boundary","get_current_nav_id","get",
"AP_Mission","boundary","get_prev_nav_cmd_id","get",
"AP_Mission","boundary","get_prev_nav_cmd_index","get",
"AP_Mission","boundary","get_prev_nav_cmd_with_wp_index","get",
"AP_Mission","boundary","get_current_do_cmd","get collaborator",
"AP_Mission","boundary","get_current_do_cmd_id","get",
"AP_Mission","boundary","last_change_time_ms","get",
"AP_Mission","boundary","set_in_landing_sequence_flag","incidental",
"AP_Mission","boundary","get_in_landing_sequence_flag","incidental",
"AP_Mission","boundary","get_in_return_path_flag","incidental",
"AP_Mission","boundary","set_force_resume","set",
"AP_Mission","boundary","get_semaphore","get collaborator",
"AP_Mission","boundary","continue_after_land","predicate",
"AP_Mission","boundary","is_valid_index","predicate",
"AP_Mission","boundary","failed_sdcard_storage","get",
"AP_Mission","boundary","update","wrapper stateless",
"AP_Mission","boundary","init","empty",
"AP_Mission","boundary","init","wrapper stateless",
"AP_Mission","boundary","init","wrapper stateless",
"AP_Mission","boundary","AP_Mission::init","command collaborator",
"AP_Mission","boundary","AP_Mission::start","command",
"AP_Mission","boundary","AP_Mission::stop","incidental",
"AP_Mission","boundary","AP_Mission::resume","command collaborator",
"AP_Mission","boundary","AP_Mission::is_takeoff_next","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::starts_with_takeoff_cmd","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::continue_after_land_check_for_takeoff","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::start_or_resume","unclassified",
"AP_Mission","boundary","AP_Mission::reset","command",
"AP_Mission","boundary","AP_Mission::clear","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::truncate","set",
"AP_Mission","boundary","AP_Mission::update","unclassified",
"AP_Mission","boundary","AP_Mission::on_mission_timestamp_change","incidental",
"AP_Mission","boundary","AP_Mission::verify_command","wrapper stateless",
"AP_Mission","boundary","AP_Mission::start_command","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::add_cmd","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::replace_cmd","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::is_nav_cmd","collaborator incidental",
"AP_Mission","boundary","AP_Mission::get_next_nav_cmd","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::get_next_ground_course_cd","property non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::set_current_cmd","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::restart_current_nav_cmd","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::set_item","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::get_item","predicate collaborator",
"AP_Mission","boundary","AP_Mission::read_cmd_from_storage","predicate collaborator",
"AP_Mission","boundary","AP_Mission::stored_in_location","incidental",
"AP_Mission","boundary","AP_Mission::write_cmd_to_storage","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::write_home_to_storage","command collaborator",
"AP_Mission","boundary","AP_Mission::sanity_check_params","wrapper stateless",
"AP_Mission","boundary","AP_Mission::mavlink_int_to_mission_cmd","property non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::convert_MISSION_ITEM_to_MISSION_ITEM_INT","property non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::convert_MISSION_ITEM_INT_to_MISSION_ITEM","property non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::mission_cmd_to_mavlink_int","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::complete","wrapper stateless",
"AP_Mission","boundary","AP_Mission::advance_current_nav_cmd","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::advance_current_do_cmd","collaborator",
"AP_Mission","boundary","AP_Mission::get_next_cmd","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::get_next_do_cmd","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::jump_to_tag","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::get_index_of_jump_tag","property collaborator",
"AP_Mission","boundary","AP_Mission::get_last_jump_tag","incidental",
"AP_Mission","boundary","AP_Mission::init_jump_tracking","incidental",
"AP_Mission","boundary","AP_Mission::get_jump_times_run","property collaborator",
"AP_Mission","boundary","AP_Mission::increment_jump_times_run","wrapper stateless",
"AP_Mission","boundary","AP_Mission::check_eeprom_version","command",
"AP_Mission","boundary","AP_Mission::get_landing_sequence_start","property non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::jump_to_landing_sequence","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::jump_to_closest_mission_leg","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::jump_to_abort_landing_sequence","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::is_best_land_sequence","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::distance_to_landing","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::distance_to_mission_leg","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::is_landing_type_cmd","incidental",
"AP_Mission","boundary","AP_Mission::is_takeoff_type_cmd","incidental",
"AP_Mission","boundary","AP_Mission::get_command_id","property",
"AP_Mission","boundary","AP_Mission::contains_item","predicate collaborator",
"AP_Mission","boundary","AP_Mission::cmd_has_location","predicate non-void-command",
"AP_Mission","boundary","AP_Mission::contains_terrain_alt_items","get non-void-command",
"AP_Mission","boundary","AP_Mission::calculate_contains_terrain_alt_items","predicate collaborator",
"AP_Mission","boundary","AP_Mission::reset_wp_history","command",
"AP_Mission","boundary","AP_Mission::update_exit_position","command",
"AP_Mission","boundary","AP_Mission::calc_rewind_pos","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::format_conversion","controller stateless",
"AP_Mission","boundary","AP_Mission::jump_to_landing_sequence","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::jump_to_abort_landing_sequence","predicate non-void-command collaborator",
"AP_Mission","boundary","AP_Mission::start_command_do_aux_function","wrapper stateless",
"AP_Mission","boundary","AP_Mission::start_command_do_gripper","controller stateless",
"AP_Mission","boundary","AP_Mission::start_command_do_servorelayevents","controller stateless",
"AP_Mission","boundary","AP_Mission::start_command_camera","controller stateless",
"AP_Mission","boundary","AP_Mission::start_command_parachute","controller stateless",
"AP_Mission","boundary","AP_Mission::command_do_set_repeat_dist","predicate set collaborator",
"AP_Mission","boundary","AP_Mission::start_command_do_sprayer","controller stateless",
"AP_Mission","boundary","AP_Mission::start_command_do_scripting","controller stateless",
"AP_Mission","boundary","AP_Mission::start_command_do_gimbal_manager_pitchyaw","controller stateless",
"AP_Mission","boundary","reset","controller stateless",
"AP_ESC_Telem_Backend","commander small-class","AP_ESC_Telem_Backend::AP_ESC_Telem_Backend","constructor",
"AP_ESC_Telem_Backend","commander small-class","AP_ESC_Telem_Backend::update_rpm","command",
"AP_ESC_Telem_Backend","commander small-class","AP_ESC_Telem_Backend::update_telem_data","command",
"AP_BattMonitor_Scripting","data-provider","has_current","predicate wrapper",
"AP_BattMonitor_Scripting","data-provider","has_consumed_energy","predicate",
"AP_BattMonitor_Scripting","data-provider","has_cell_voltages","predicate",
"AP_BattMonitor_Scripting","data-provider","has_temperature","predicate wrapper",
"AP_BattMonitor_Scripting","data-provider","AP_BattMonitor_Scripting::capacity_remaining_pct","predicate wrapper",
"AP_BattMonitor_Scripting","data-provider","AP_BattMonitor_Scripting::get_cycle_count","predicate",
"AP_BattMonitor_Scripting","data-provider","AP_BattMonitor_Scripting::read","command",
"AP_BattMonitor_Scripting","data-provider","AP_BattMonitor_Scripting::handle_scripting","predicate non-void-command collaborator",
"GCS_Copter","degenerate","min_loop_time_remaining_for_message_send_us","incidental",
"GCS_Copter","degenerate","new_gcs_mavlink_backend","wrapper stateless",
"GCS_Copter","degenerate","GCS_Copter::sysid_this_mav","incidental",
"GCS_Copter","degenerate","GCS_Copter::frame_string","controller stateless",
"GCS_Copter","degenerate","GCS_Copter::simple_input_active","incidental",
"GCS_Copter","degenerate","GCS_Copter::supersimple_input_active","incidental",
"GCS_Copter","degenerate","GCS_Copter::update_vehicle_sensor_status_flags","command collaborator",
"GCS_Copter","degenerate","GCS_Copter::frame_type","controller stateless",
"GCS_Copter","degenerate","GCS_Copter::custom_mode","controller stateless",
"GCS_Copter","degenerate","GCS_Copter::vehicle_initialised","incidental",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::AP_InertialSensor_BMI088","constructor",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::probe","controller stateless",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::start","command",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::read_accel_registers","predicate non-void-command",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::write_accel_register","predicate non-void-command",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::setup_accel_config","predicate non-void-command",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::accel_init","predicate non-void-command",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::gyro_init","predicate non-void-command",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::init","predicate non-void-command",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::read_fifo_accel","command",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::read_fifo_gyro","command collaborator",
"AP_InertialSensor_BMI088","unclassified","AP_InertialSensor_BMI088::update","predicate wrapper",
"SLT_Transition","unclassified","complete","incidental",
"SLT_Transition","unclassified","restart","incidental",
"SLT_Transition","unclassified","get_log_transition_state","incidental",
"SLT_Transition","unclassified","SLT_Transition::update","command",
"SLT_Transition","unclassified","SLT_Transition::VTOL_update","command",
"SLT_Transition","unclassified","SLT_Transition::show_vtol_view","predicate",
"SLT_Transition","unclassified","SLT_Transition::set_FW_roll_limit","predicate non-void-command",
"SLT_Transition","unclassified","SLT_Transition::allow_update_throttle_mix","predicate",
"SLT_Transition","unclassified","SLT_Transition::active","predicate",
"SLT_Transition","unclassified","SLT_Transition::set_VTOL_roll_pitch_limit","predicate set",
"SLT_Transition","unclassified","SLT_Transition::set_last_fw_pitch","command",
"SLT_Transition","unclassified","SLT_Transition::force_transition_complete","command",
"SLT_Transition","unclassified","SLT_Transition::get_mav_vtol_state","property collaborator",
"SLT_Transition","unclassified","SLT_Transition::set_FW_roll_pitch","void-accessor command",
"AP_RPM_EFI","commander boundary small-class","AP_RPM_EFI::update","command collaborator",
"SIM_BattMonitor_SMBus_Generic","commander","cellcount","incidental",
"SIM_BattMonitor_SMBus_Generic","commander","connected_cells","incidental",
"SIM_BattMonitor_SMBus_Generic","commander","SITL::SIM_BattMonitor_SMBus_Generic::SIM_BattMonitor_SMBus_Generic","constructor",
"SIM_BattMonitor_SMBus_Generic","commander","SITL::SIM_BattMonitor_SMBus_Generic::init","command",
"SIM_BattMonitor_SMBus_Generic","commander","SITL::SIM_BattMonitor_SMBus_Generic::update","command collaborator",
"BL_Network","boundary","BL_Network::link_up_cb","wrapper",
"BL_Network","boundary","BL_Network::link_down_cb","wrapper",
"BL_Network","boundary","BL_Network::low_level_output","wrapper stateless",
"BL_Network","boundary","BL_Network::low_level_input","wrapper stateless",
"BL_Network","boundary","BL_Network::ethernetif_init","collaborator incidental",
"BL_Network","boundary","BL_Network::net_thread","command collaborator",
"BL_Network","boundary","BL_Network::net_thread_trampoline","controller stateless",
"BL_Network","boundary","BL_Network::web_server_trampoline","controller stateless",
"BL_Network","boundary","BL_Network::substitute_vars","wrapper stateless",
"BL_Network","boundary","BL_Network::read_headers","controller stateless",
"BL_Network","boundary","BL_Network::handle_post","unclassified",
"BL_Network","boundary","BL_Network::handle_request","collaborator",
"BL_Network","boundary","BL_Network::net_request_trampoline","set",
"BL_Network","boundary","BL_Network::web_server","command",
"BL_Network","boundary","BL_Network::init","command",
"BL_Network","boundary","BL_Network::save_comms_ip","collaborator incidental",
"BL_Network","boundary","BL_Network::status_printf","wrapper",
"GCS_MAVLINK_InProgress","entity boundary","abort","set",
"GCS_MAVLINK_InProgress","entity boundary","GCS_MAVLINK_InProgress::send_ack","predicate wrapper",
"GCS_MAVLINK_InProgress","entity boundary","GCS_MAVLINK_InProgress::send_in_progress","predicate non-void-command",
"GCS_MAVLINK_InProgress","entity boundary","GCS_MAVLINK_InProgress::conclude","predicate set collaborator",
"GCS_MAVLINK_InProgress","entity boundary","GCS_MAVLINK_InProgress::get_task","property non-void-command collaborator",
"GCS_MAVLINK_InProgress","entity boundary","GCS_MAVLINK_InProgress::check_tasks","collaborator",
"AP_HAL::Semaphore","boundary degenerate small-class","take_blocking","wrapper stateless",
"AP_HAL::Semaphore","boundary degenerate small-class","~Semaphore","destructor",
"SPIUARTDriver","unclassified","get_baud_rate","property",
"SPIUARTDriver","unclassified","SPIUARTDriver::SPIUARTDriver","constructor",
"SPIUARTDriver","unclassified","SPIUARTDriver::_begin","command",
"SPIUARTDriver","unclassified","SPIUARTDriver::_write_fd","property non-void-command",
"SPIUARTDriver","unclassified","SPIUARTDriver::_read_fd","property non-void-command",
"SPIUARTDriver","unclassified","SPIUARTDriver::_timer_tick","set",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::AP_Baro_BMP085","constructor",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::probe","controller stateless",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_init","predicate non-void-command",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_read_prom_word","property non-void-command",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_read_prom","predicate non-void-command",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_timer","unclassified",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::update","command",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_cmd_read_pressure","set",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_read_pressure","predicate non-void-command",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_cmd_read_temp","set",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_read_temp","unclassified",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_calculate","command",
"AP_Baro_BMP085","unclassified","AP_Baro_BMP085::_data_ready","predicate non-void-command",
"AP_Scheduler","lazy-class degenerate","ticks","get",
"AP_Scheduler","lazy-class degenerate","ticks32","get",
"AP_Scheduler","lazy-class degenerate","debug_flags","get",
"AP_Scheduler","lazy-class degenerate","get_loop_rate_hz","get set",
"AP_Scheduler","lazy-class degenerate","get_loop_period_us","get set",
"AP_Scheduler","lazy-class degenerate","get_loop_period_s","get set",
"AP_Scheduler","lazy-class degenerate","get_filtered_loop_time","property",
"AP_Scheduler","lazy-class degenerate","get_filtered_loop_rate_hz","property non-void-command",
"AP_Scheduler","lazy-class degenerate","get_last_loop_time_s","get",
"AP_Scheduler","lazy-class degenerate","get_extra_loop_us","get",
"AP_Scheduler","lazy-class degenerate","get_semaphore","get collaborator",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","wrapper stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::AP_Scheduler","constructor",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::get_singleton","get",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::init","command",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::tick","command",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::run","command",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::time_available_usec","property wrapper",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::load_average","property non-void-command",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::loop","command",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::update_logging","command",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::Log_Write_Performance","command collaborator",
"AP_Scheduler","lazy-class degenerate","AP_Scheduler::task_info","command collaborator",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","empty",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AP_Scheduler","lazy-class degenerate","loop","incidental",
"AP_Scheduler","lazy-class degenerate","loop","incidental",
"AP_Scheduler","lazy-class degenerate","loop","controller stateless",
"AC_PrecLand_IRLock","commander small-class","AC_PrecLand_IRLock::AC_PrecLand_IRLock","constructor",
"AC_PrecLand_IRLock","commander small-class","AC_PrecLand_IRLock::init","command",
"AC_PrecLand_IRLock","commander small-class","AC_PrecLand_IRLock::update","command",
"EKF_Maths","small-class","EKF_Maths","constructor",
"EKF_Maths","small-class","EKF_Maths::init","command",
"EKF_Maths","small-class","EKF_Maths::test","property non-void-command",
"ADSB","commander boundary","ADSB","constructor",
"ADSB","commander boundary","ADSB::update_simulated_vehicles","command collaborator",
"ADSB","commander boundary","ADSB::update","command collaborator",
"ADSB","commander boundary","ADSB::send_report","command collaborator",
"ModeThrow","degenerate","mode_number","collaborator incidental",
"ModeThrow","degenerate","requires_GPS","incidental",
"ModeThrow","degenerate","has_manual_throttle","incidental",
"ModeThrow","degenerate","allows_arming","collaborator incidental",
"ModeThrow","degenerate","is_autopilot","incidental",
"ModeThrow","degenerate","name","incidental",
"ModeThrow","degenerate","name4","incidental",
"ModeThrow","degenerate","ModeThrow::init","predicate non-void-command",
"ModeThrow","degenerate","ModeThrow::run","command",
"ModeThrow","degenerate","ModeThrow::throw_detected","predicate non-void-command",
"ModeThrow","degenerate","ModeThrow::throw_attitude_good","controller stateless",
"ModeThrow","degenerate","ModeThrow::throw_height_good","controller stateless",
"ModeThrow","degenerate","ModeThrow::throw_position_good","controller stateless",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::AP_InertialSensor_ADIS1647x","constructor",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::probe","controller stateless",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::start","command",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::check_product_id","predicate non-void-command",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::init","predicate non-void-command",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::read_reg16","property",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::write_reg16","predicate",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::read_sensor16","command collaborator",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::read_sensor32","command collaborator",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::read_sensor32_delta","command collaborator",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::loop","command",
"AP_InertialSensor_ADIS1647x","unclassified","AP_InertialSensor_ADIS1647x::update","predicate wrapper",
"AP_RangeFinder_MaxsonarI2CXL","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_MaxsonarI2CXL","unclassified","AP_RangeFinder_MaxsonarI2CXL::AP_RangeFinder_MaxsonarI2CXL","constructor",
"AP_RangeFinder_MaxsonarI2CXL","unclassified","AP_RangeFinder_MaxsonarI2CXL::detect","controller stateless",
"AP_RangeFinder_MaxsonarI2CXL","unclassified","AP_RangeFinder_MaxsonarI2CXL::_init","predicate non-void-command",
"AP_RangeFinder_MaxsonarI2CXL","unclassified","AP_RangeFinder_MaxsonarI2CXL::start_reading","predicate non-void-command",
"AP_RangeFinder_MaxsonarI2CXL","unclassified","AP_RangeFinder_MaxsonarI2CXL::get_reading","predicate non-void-command",
"AP_RangeFinder_MaxsonarI2CXL","unclassified","AP_RangeFinder_MaxsonarI2CXL::_timer","command",
"AP_RangeFinder_MaxsonarI2CXL","unclassified","AP_RangeFinder_MaxsonarI2CXL::update","command",
"AP_Baro_SPL06","commander","AP_Baro_SPL06::AP_Baro_SPL06","constructor",
"AP_Baro_SPL06","commander","AP_Baro_SPL06::probe","controller stateless",
"AP_Baro_SPL06","commander","AP_Baro_SPL06::_init","predicate non-void-command",
"AP_Baro_SPL06","commander","AP_Baro_SPL06::raw_value_scale_factor","incidental",
"AP_Baro_SPL06","commander","AP_Baro_SPL06::_timer","command",
"AP_Baro_SPL06","commander","AP_Baro_SPL06::update","command",
"AP_Baro_SPL06","commander","AP_Baro_SPL06::_update_temperature","command",
"AP_Baro_SPL06","commander","AP_Baro_SPL06::_update_pressure","command",
"AP_MSP_Telem_Generic","degenerate small-class","is_scheduler_enabled","incidental",
"AP_MSP_Telem_Generic","degenerate small-class","get_serial_protocol","collaborator incidental",
"GCS_MAVLINK","boundary","~GCS_MAVLINK","destructor",
"GCS_MAVLINK","boundary","channel_buffer","property collaborator",
"GCS_MAVLINK","boundary","channel_status","property collaborator",
"GCS_MAVLINK","boundary","txspace","property",
"GCS_MAVLINK","boundary","out_of_space_to_send","set",
"GCS_MAVLINK","boundary","send_mission_ack","wrapper",
"GCS_MAVLINK","boundary","send_message","command collaborator",
"GCS_MAVLINK","boundary","send_message","command collaborator",
"GCS_MAVLINK","boundary","get_uart","get collaborator",
"GCS_MAVLINK","boundary","sysid_enforce","incidental",
"GCS_MAVLINK","boundary","is_high_bandwidth","predicate",
"GCS_MAVLINK","boundary","is_active","predicate wrapper",
"GCS_MAVLINK","boundary","is_streaming","predicate",
"GCS_MAVLINK","boundary","get_chan","get collaborator",
"GCS_MAVLINK","boundary","get_last_heartbeat_time","get",
"GCS_MAVLINK","boundary","send_attitude_target","empty",
"GCS_MAVLINK","boundary","send_position_target_global_int","empty",
"GCS_MAVLINK","boundary","send_position_target_local_ned","empty",
"GCS_MAVLINK","boundary","send_winch_status","empty",
"GCS_MAVLINK","boundary","lock","set",
"GCS_MAVLINK","boundary","locked","get",
"GCS_MAVLINK","boundary","is_private","predicate",
"GCS_MAVLINK","boundary","get_stream_slowdown_ms","get",
"GCS_MAVLINK","boundary","vtol_state","collaborator incidental",
"GCS_MAVLINK","boundary","landed_state","collaborator incidental",
"GCS_MAVLINK","boundary","packet_overhead","property",
"GCS_MAVLINK","boundary","persist_streamrates","incidental",
"GCS_MAVLINK","boundary","params_ready","incidental",
"GCS_MAVLINK","boundary","log_radio_bit","incidental",
"GCS_MAVLINK","boundary","handle_landing_target","empty",
"GCS_MAVLINK","boundary","vfr_hud_throttle","incidental",
"GCS_MAVLINK","boundary","high_latency_target_altitude","incidental",
"GCS_MAVLINK","boundary","high_latency_tgt_heading","incidental",
"GCS_MAVLINK","boundary","high_latency_tgt_dist","incidental",
"GCS_MAVLINK","boundary","high_latency_tgt_airspeed","incidental",
"GCS_MAVLINK","boundary","high_latency_wind_speed","incidental",
"GCS_MAVLINK","boundary","high_latency_wind_direction","incidental",
"GCS_MAVLINK","boundary","handle_guided_request","collaborator incidental",
"GCS_MAVLINK","boundary","handle_change_alt_request","empty",
"GCS_MAVLINK","boundary","handle_manual_control_axes","empty",
"GCS_MAVLINK","boundary","GCS_MAVLINK::check_payload_size","predicate non-void-command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::GCS_MAVLINK","copy-constructor",
"GCS_MAVLINK","boundary","GCS_MAVLINK::init","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_meminfo","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_power_status","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_mcu_status","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::battery_remaining_pct","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_battery_status","unclassified",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_battery_status","predicate set collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_distance_sensor","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_distance_sensor","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_rangefinder","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_proximity","set",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_ahrs2","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mission_request_list","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mission_request_int","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mission_request","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::mission_state","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_mission_current","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mission_set_current","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mission_count","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mission_clear_all","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::requesting_mission_items","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mission_write_partial_list","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mount_message","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_param_value","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_text","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::telemetry_radio_rssi","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::last_txbuf_is_greater","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_radio_status","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_mission_item","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::mavlink_id_to_ap_message_id","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::set_mavlink_message_id_interval","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::should_send_message_in_delay_callback","collaborator incidental",
"GCS_MAVLINK","boundary","GCS_MAVLINK::get_reschedule_interval_ms","property collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::find_next_bucket_to_send","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::next_deferred_bucket_message_to_send","get property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::do_try_send_message","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::get_deferred_message_index","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::deferred_message_to_send_index","get property set",
"GCS_MAVLINK","boundary","GCS_MAVLINK::update_send","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::remove_message_from_bucket","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::set_ap_message_interval","predicate non-void-command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_message","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::packetReceived","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::update_receive","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::log_mavlink_stats","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_system_time","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::sending_mavlink1","predicate",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_rc_channels","unclassified",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_rc_channels_raw","unclassified",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_raw_imu","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_highres_imu","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_scaled_imu","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_scaled_pressure_instance","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_scaled_pressure","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_scaled_pressure2","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_scaled_pressure3","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_ahrs","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::service_statustext","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_battery2","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_set_mode","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::_set_mode_common","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_opticalflow","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_autopilot_version","collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_local_position","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_vibration","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_named_float","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_home_position","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_gps_global_origin","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::system_status","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_heartbeat","unclassified",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_aux_function","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_set_message_interval","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::set_message_interval","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_request_message","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::get_ap_message_interval","predicate collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_get_message_interval","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::telemetry_delayed","predicate controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_servo_output_raw","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_accelcal_vehicle_position","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::vfr_hud_airspeed","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::vfr_hud_climbrate","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::vfr_hud_alt","property",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_vfr_hud","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_preflight_reboot","property controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::deadlock_sem","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_flight_termination","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_START_RX_PAIR","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::timesync_receive_timestamp_ns","property",
"GCS_MAVLINK","boundary","GCS_MAVLINK::timesync_timestamp_ns","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_timesync","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_timesync","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_statustext","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_named_value","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_system_time_message","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_camera","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::set_ekf_origin","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_set_gps_global_origin","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_data_packet","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_vision_position_delta","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_vision_position_estimate","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_global_vision_position_estimate","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_vicon_position_estimate","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_odometry","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_common_vision_position_estimate_data","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_att_pos_mocap","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_vision_speed_estimate","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_ack","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_rc_channels_override","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_optical_flow","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_fixed_mag_cal_yaw","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_mag_cal","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_can_forward","property wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_can_frame","collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_distance_sensor","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_obstacle_distance","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_obstacle_distance_3d","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_adsb_message","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_osd_param_config","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_heartbeat","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_message","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_common_mission_message","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_send_autopilot_version","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_banner","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_simstate","collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_sim_state","collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_flash_bootloader","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::_handle_command_preflight_calibration_baro","property controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::_handle_command_preflight_calibration","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_preflight_calibration","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_run_prearm_checks","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_set_mission_current","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_jump_tag","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_battery_reset","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_request_autopilot_capabilities","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_set_mode","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_get_home_position","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_debug_trap","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_set_ekf_source_set","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_gripper","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_sprayer","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_airframe_configuration","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_accelcal_vehicle_pos","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_mount","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_component_arm_disarm","property wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::location_from_command_t","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::command_long_stores_location","collaborator incidental",
"GCS_MAVLINK","boundary","GCS_MAVLINK::mav_frame_for_command_long","collaborator incidental",
"GCS_MAVLINK","boundary","GCS_MAVLINK::try_command_long_as_command_int","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::convert_COMMAND_LONG_to_COMMAND_INT","void-accessor command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_long","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_long","wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_set_roi","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_landing_target","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::set_home_to_current_location","predicate non-void-command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::set_home","predicate non-void-command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_set_home","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_int_external_position_estimate","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_set_roi","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_storage_format","property wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_do_set_safety_switch_state","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_int_packet","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_int","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::try_send_mission_message","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_hwstatus","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_rpm","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_sys_status","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_extended_sys_state","unclassified",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_attitude","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_attitude_quaternion","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::global_position_int_alt","property",
"GCS_MAVLINK","boundary","GCS_MAVLINK::global_position_int_relative_alt","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_global_position_int","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_gimbal_device_attitude_status","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_gimbal_manager_information","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_gimbal_manager_status","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_set_position_target_global_int","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_generator_status","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_water_depth","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_uavionix_adsb_out_status","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_relay_status","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_autopilot_state_for_gimbal_device","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_received_message_deprecation_warning","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::try_send_message","predicate collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::get_interval_for_stream","property wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::initialise_message_intervals_for_stream","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::get_intervals_from_filepath","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::initialise_message_intervals_from_config_files","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::initialise_message_intervals_from_streamrates","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::get_default_interval_for_ap_message","predicate",
"GCS_MAVLINK","boundary","GCS_MAVLINK::correct_offboard_timestamp_usec_to_ms","property non-void-command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::accept_packet","predicate collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::mavlink_coordinate_frame_to_location_alt_frame","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::capabilities","property collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::manual_override","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_manual_control","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::receiver_rssi","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_high_latency2","unclassified",
"GCS_MAVLINK","boundary","GCS_MAVLINK::high_latency_air_temperature","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_control_high_latency","wrapper stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_radio_rc_channels","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_device_op_read","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_device_op_write","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::ftp_init","predicate set",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_file_transfer_protocol","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_ftp_reply","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::ftp_error","collaborator incidental",
"GCS_MAVLINK","boundary","GCS_MAVLINK::ftp_push_replies","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::ftp_worker","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::gen_dir_entry","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::ftp_list_dir","void-accessor command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_command_do_fence_enable","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_fence_message","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_fence_status","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::find_by_mavtype_and_compid","property non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::set_channel_private","set collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::mav_param_type","collaborator incidental",
"GCS_MAVLINK","boundary","GCS_MAVLINK::queued_param_send","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::have_flow_control","predicate non-void-command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_request_data_stream","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_param_request_list","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_param_request_read","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_param_set","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_parameter_value","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::param_io_timer","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::send_parameter_async_replies","property non-void-command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_common_param_message","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_rally_point","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_rally_fetch_point","controller",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_common_rally_message","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_servorelay_message","controller stateless",
"GCS_MAVLINK","boundary","GCS_MAVLINK::signing_key_save","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::signing_key_load","predicate non-void-command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_setup_signing","collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::load_signing_key","command",
"GCS_MAVLINK","boundary","GCS_MAVLINK::update_signing_timestamp","command collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::save_signing_timestamp","collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::signing_enabled","predicate wrapper",
"GCS_MAVLINK","boundary","GCS_MAVLINK::packet_overhead_chan","property set collaborator",
"GCS_MAVLINK","boundary","GCS_MAVLINK::handle_serial_control","controller",
"Tailsitter_Transition","unclassified","complete","incidental",
"Tailsitter_Transition","unclassified","get_log_transition_state","incidental",
"Tailsitter_Transition","unclassified","active","incidental",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::update","command",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::VTOL_update","command",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::show_vtol_view","predicate",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::set_FW_roll_pitch","void-accessor command",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::allow_stick_mixing","predicate",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::set_VTOL_roll_pitch_limit","predicate set",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::restart","command",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::force_transition_complete","command",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::get_mav_vtol_state","property collaborator",
"Tailsitter_Transition","unclassified","Tailsitter_Transition::allow_weathervane","predicate non-void-command",
"AP_InertialSensor_LSM9DS1","commander","~AP_InertialSensor_LSM9DS1","destructor",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::AP_InertialSensor_LSM9DS1","constructor",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::probe","controller stateless",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_init_sensor","predicate non-void-command",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_hardware_init","predicate non-void-command",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_fifo_reset","command",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::start","command",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_register_read","property non-void-command",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_register_write","command",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_gyro_init","command",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_accel_init","command",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_set_gyro_scale","set",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_set_accel_scale","set collaborator",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_poll_data","command collaborator",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_read_data_transaction_x","command collaborator",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_read_data_transaction_g","command collaborator",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::update","predicate wrapper",
"AP_InertialSensor_LSM9DS1","commander","AP_InertialSensor_LSM9DS1::_dump_registers","command",
"LoggerMessageWriter_WriteAllRallyPoints","commander small-class","LoggerMessageWriter_WriteAllRallyPoints::process","command collaborator",
"LoggerMessageWriter_WriteAllRallyPoints","commander small-class","LoggerMessageWriter_WriteAllRallyPoints::reset","command",
"AP_Baro_Backend","unclassified","~AP_Baro_Backend","destructor",
"AP_Baro_Backend","unclassified","get_error_count","get",
"AP_Baro_Backend","unclassified","handle_msp","empty",
"AP_Baro_Backend","unclassified","handle_external","empty",
"AP_Baro_Backend","unclassified","set_bus_id","controller",
"AP_Baro_Backend","unclassified","AP_Baro_Backend::AP_Baro_Backend","constructor",
"AP_Baro_Backend","unclassified","AP_Baro_Backend::update_healthy_flag","wrapper",
"AP_Baro_Backend","unclassified","AP_Baro_Backend::backend_update","command",
"AP_Baro_Backend","unclassified","AP_Baro_Backend::_copy_to_frontend","wrapper",
"AP_Baro_Backend","unclassified","AP_Baro_Backend::pressure_ok","predicate non-void-command",
"Gripper_Servo","data-provider","Gripper_Servo","constructor",
"Gripper_Servo","data-provider","set_alt","set",
"Gripper_Servo","data-provider","is_enabled","predicate",
"Gripper_Servo","data-provider","is_jaw_open","get",
"Gripper_Servo","data-provider","Gripper_Servo::update","command collaborator",
"Gripper_Servo","data-provider","Gripper_Servo::should_report","predicate wrapper",
"Gripper_Servo","data-provider","Gripper_Servo::payload_mass","get property",
"AP_Beacon_Nooploop","entity commander boundary","AP_Beacon_Nooploop::healthy","predicate wrapper",
"AP_Beacon_Nooploop","entity commander boundary","AP_Beacon_Nooploop::update","command collaborator",
"AP_Beacon_Nooploop","entity commander boundary","AP_Beacon_Nooploop::request_setting","command",
"AP_Beacon_Nooploop","entity commander boundary","AP_Beacon_Nooploop::parse_byte","property non-void-command collaborator",
"AP_Beacon_Nooploop","entity commander boundary","AP_Beacon_Nooploop::parse_node_frame2","set",
"AP_Beacon_Nooploop","entity commander boundary","AP_Beacon_Nooploop::parse_setting_frame0","set collaborator",
"AP_MotorsMatrix_6DoF_Scripting","commander","AP_MotorsMatrix_6DoF_Scripting","constructor",
"AP_MotorsMatrix_6DoF_Scripting","commander","setup_motors","empty",
"AP_MotorsMatrix_6DoF_Scripting","commander","_get_frame_string","incidental",
"AP_MotorsMatrix_6DoF_Scripting","commander","AP_MotorsMatrix_6DoF_Scripting::output_to_motors","controller",
"AP_MotorsMatrix_6DoF_Scripting","commander","AP_MotorsMatrix_6DoF_Scripting::output_armed_stabilizing","command",
"AP_MotorsMatrix_6DoF_Scripting","commander","AP_MotorsMatrix_6DoF_Scripting::set_roll_pitch","command",
"AP_MotorsMatrix_6DoF_Scripting","commander","AP_MotorsMatrix_6DoF_Scripting::add_motor","command",
"AP_MotorsMatrix_6DoF_Scripting","commander","AP_MotorsMatrix_6DoF_Scripting::init","wrapper stateless",
"AP_Proximity_SITL","unclassified","AP_Proximity_SITL::AP_Proximity_SITL","constructor",
"AP_Proximity_SITL","unclassified","AP_Proximity_SITL::update","command",
"AP_Proximity_SITL","unclassified","AP_Proximity_SITL::get_distance_to_fence","predicate controller",
"AP_Proximity_SITL","unclassified","AP_Proximity_SITL::distance_max","incidental",
"AP_Proximity_SITL","unclassified","AP_Proximity_SITL::distance_min","incidental",
"AP_Proximity_SITL","unclassified","AP_Proximity_SITL::get_upward_distance","predicate",
"LR_MsgHandler_RGPJ","boundary degenerate small-class","LR_MsgHandler_RGPJ::process_message","wrapper stateless",
"RCOutput_PRU","commander","RCOutput_PRU::init","set",
"RCOutput_PRU","commander","RCOutput_PRU::set_freq","set",
"RCOutput_PRU","commander","RCOutput_PRU::get_freq","property",
"RCOutput_PRU","commander","RCOutput_PRU::enable_ch","set",
"RCOutput_PRU","commander","RCOutput_PRU::disable_ch","set",
"RCOutput_PRU","commander","RCOutput_PRU::write","command",
"RCOutput_PRU","commander","RCOutput_PRU::read","get",
"RCOutput_PRU","commander","RCOutput_PRU::read","void-accessor",
"RCOutput_PRU","commander","RCOutput_PRU::cork","set",
"RCOutput_PRU","commander","RCOutput_PRU::push","command",
"AP_DDS_Client","boundary","AP_DDS_Client::~AP_DDS_Client","destructor",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","wrapper stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","predicate set collaborator",
"AP_DDS_Client","boundary","AP_DDS_Client::populate_static_transforms","void-accessor command collaborator",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","void-accessor command",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","void-accessor command collaborator",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","void-accessor command collaborator",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","void-accessor command collaborator",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","void-accessor command collaborator",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","command collaborator",
"AP_DDS_Client","boundary","AP_DDS_Client::update_topic","void-accessor command collaborator",
"AP_DDS_Client","boundary","AP_DDS_Client::start","predicate controller",
"AP_DDS_Client","boundary","AP_DDS_Client::on_topic_trampoline","controller stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::on_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::on_request_trampoline","controller stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::on_request","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::main_loop","unclassified",
"AP_DDS_Client","boundary","AP_DDS_Client::init_transport","predicate",
"AP_DDS_Client","boundary","AP_DDS_Client::init_session","predicate non-void-command",
"AP_DDS_Client","boundary","AP_DDS_Client::create","predicate wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_time_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_nav_sat_fix_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_static_transforms","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_battery_state_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_local_pose_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_tx_local_velocity_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_imu_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_geo_pose_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_clock_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::write_gps_global_origin_topic","wrapper",
"AP_DDS_Client","boundary","AP_DDS_Client::update","command",
"AP_DDS_Client","boundary","AP_DDS_Client::serial_transport_open","controller stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::serial_transport_close","collaborator incidental",
"AP_DDS_Client","boundary","AP_DDS_Client::serial_transport_write","controller stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::serial_transport_read","controller stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::ddsSerialInit","predicate set",
"AP_DDS_Client","boundary","AP_DDS_Client::udp_transport_open","controller stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::udp_transport_close","collaborator incidental",
"AP_DDS_Client","boundary","AP_DDS_Client::udp_transport_write","controller stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::udp_transport_read","controller stateless",
"AP_DDS_Client","boundary","AP_DDS_Client::ddsUdpInit","predicate set",
"AP_DDS_Client","boundary","update","wrapper stateless",
"AP_RPM_Pin","commander small-class","AP_RPM_Pin::irq_handler","unclassified",
"AP_RPM_Pin","commander small-class","AP_RPM_Pin::update","command",
"AP_Gripper","data-provider lazy-class degenerate","enabled","get",
"AP_Gripper","data-provider lazy-class degenerate","AP_Gripper::AP_Gripper","constructor",
"AP_Gripper","data-provider lazy-class degenerate","AP_Gripper::get_singleton","get",
"AP_Gripper","data-provider lazy-class degenerate","AP_Gripper::init","unclassified",
"AP_Gripper","data-provider lazy-class degenerate","update","wrapper stateless",
"AP_Gripper","data-provider lazy-class degenerate","init","empty",
"AP_Gripper","data-provider lazy-class degenerate","init","wrapper stateless",
"AP_Gripper","data-provider lazy-class degenerate","init","wrapper stateless",
"AP_Stats","commander","get_is_flying","predicate",
"AP_Stats","commander","update","wrapper stateless",
"AP_Stats","commander","init","empty",
"AP_Stats","commander","init","wrapper stateless",
"AP_Stats","commander","init","wrapper stateless",
"AP_Stats","commander","AP_Stats::AP_Stats","constructor",
"AP_Stats","commander","AP_Stats::copy_variables_from_parameters","command",
"AP_Stats","commander","AP_Stats::init","command",
"AP_Stats","commander","AP_Stats::flush","unclassified",
"AP_Stats","commander","AP_Stats::update_flighttime","command",
"AP_Stats","commander","AP_Stats::update_runtime","command",
"AP_Stats","commander","AP_Stats::update","command",
"AP_Stats","commander","AP_Stats::set_flying","unclassified",
"AP_Stats","commander","AP_Stats::get_flight_time_s","property non-void-command",
"Airspeed_DLVR","entity boundary small-class","SITL::Airspeed_DLVR::rdwr","property set collaborator",
"Airspeed_DLVR","entity boundary small-class","SITL::Airspeed_DLVR::update","command collaborator",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::AP_DroneCAN_DNA_Server","constructor",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::getHash","wrapper stateless",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::readNodeData","predicate set",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::writeNodeData","predicate set",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::setOccupationMask","predicate non-void-command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::freeNodeID","predicate non-void-command collaborator",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::setVerificationMask","command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::isNodeIDOccupied","predicate",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::isNodeIDVerified","predicate",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::getNodeIDForUniqueID","property non-void-command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::addNodeIDForUniqueID","predicate non-void-command collaborator",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::isValidNodeDataAvailable","predicate non-void-command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::init","predicate non-void-command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::reset","command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::findFreeNodeID","property non-void-command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::isNodeSeen","predicate non-void-command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::addToSeenNodeMask","command",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::verify_nodes","command collaborator",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::handleNodeStatus","command collaborator",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::handleNodeInfo","command collaborator",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::handleAllocation","command collaborator",
"AP_DroneCAN_DNA_Server","unclassified","AP_DroneCAN_DNA_Server::prearm_check","predicate",
"AP_DroneCAN_DNA_Server","unclassified","reset","controller stateless",
"GCS_Sub","commander degenerate","min_loop_time_remaining_for_message_send_us","incidental",
"GCS_Sub","commander degenerate","new_gcs_mavlink_backend","wrapper stateless",
"GCS_Sub","commander degenerate","GCS_Sub::frame_type","collaborator incidental",
"GCS_Sub","commander degenerate","GCS_Sub::custom_mode","incidental",
"GCS_Sub","commander degenerate","GCS_Sub::vehicle_initialised","incidental",
"GCS_Sub","commander degenerate","GCS_Sub::sysid_this_mav","incidental",
"GCS_Sub","commander degenerate","GCS_Sub::update_vehicle_sensor_status_flags","command collaborator",
"ModeFBWB","degenerate","mode_number","collaborator incidental",
"ModeFBWB","degenerate","name","incidental",
"ModeFBWB","degenerate","name4","incidental",
"ModeFBWB","degenerate","allows_terrain_disable","incidental",
"ModeFBWB","degenerate","does_automatic_thermal_switch","incidental",
"ModeFBWB","degenerate","does_auto_throttle","incidental",
"ModeFBWB","degenerate","mode_allows_autotuning","incidental",
"ModeFBWB","degenerate","update_target_altitude","empty",
"ModeFBWB","degenerate","ModeFBWB::_enter","controller stateless",
"ModeFBWB","degenerate","ModeFBWB::update","controller stateless",
"AP_Beacon_Backend","unclassified","get_beacon_origin_lat","get",
"AP_Beacon_Backend","unclassified","get_beacon_origin_lon","get",
"AP_Beacon_Backend","unclassified","get_beacon_origin_alt","get",
"AP_Beacon_Backend","unclassified","AP_Beacon_Backend::AP_Beacon_Backend","constructor",
"AP_Beacon_Backend","unclassified","AP_Beacon_Backend::set_vehicle_position","command",
"AP_Beacon_Backend","unclassified","AP_Beacon_Backend::set_beacon_distance","set",
"AP_Beacon_Backend","unclassified","AP_Beacon_Backend::set_beacon_position","set collaborator",
"AP_Beacon_Backend","unclassified","AP_Beacon_Backend::correct_for_orient_yaw","property non-void-command collaborator",
"AP_ADSB_uAvionix_MAVLink","boundary","AP_ADSB_uAvionix_MAVLink::detect","incidental",
"AP_ADSB_uAvionix_MAVLink","boundary","AP_ADSB_uAvionix_MAVLink::update","command collaborator",
"AP_ADSB_uAvionix_MAVLink","boundary","AP_ADSB_uAvionix_MAVLink::send_dynamic_out","controller",
"AP_ADSB_uAvionix_MAVLink","boundary","AP_ADSB_uAvionix_MAVLink::encode_icao","incidental",
"AP_ADSB_uAvionix_MAVLink","boundary","AP_ADSB_uAvionix_MAVLink::get_encoded_callsign_null_char","property wrapper",
"AP_ADSB_uAvionix_MAVLink","boundary","AP_ADSB_uAvionix_MAVLink::send_configure","command collaborator",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX","constructor",
"AP_Logger_W25NXX","commander","CardInserted","predicate",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::Init","command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::WaitReady","set",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::getSectorCount","predicate non-void-command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::ReadStatusRegBits","property non-void-command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::WriteStatusReg","command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::Busy","predicate non-void-command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::send_command_addr","command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::PageToBuffer","command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::BufferToPage","command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::SectorErase","command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::Sector4kErase","command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::StartErase","command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::InErase","predicate non-void-command",
"AP_Logger_W25NXX","commander","AP_Logger_W25NXX::WriteEnable","command",
"LogReader","boundary","LogReader::LogReader","constructor",
"LogReader","boundary","LogReader::in_list","wrapper stateless",
"LogReader","boundary","LogReader::handle_log_format_msg","predicate set collaborator",
"LogReader","boundary","LogReader::handle_msg","predicate controller",
"LogReader","boundary","LogReader::check_user_param","wrapper stateless",
"LogReader","boundary","LogReader::set_parameter","predicate non-void-command",
"AP_Torqeedo_Params","empty","AP_Torqeedo_Params::AP_Torqeedo_Params","constructor",
"MsgHandler","unclassified","require_field","command collaborator",
"MsgHandler","unclassified","MsgHandler::add_field_type","set",
"MsgHandler","unclassified","MsgHandler::size_for_type","property wrapper",
"MsgHandler","unclassified","MsgHandler::init_field_types","command",
"MsgHandler","unclassified","MsgHandler::find_field_info","property wrapper",
"MsgHandler","unclassified","MsgHandler::MsgHandler","constructor",
"MsgHandler","unclassified","MsgHandler::add_field","set",
"MsgHandler","unclassified","MsgHandler::parse_format_fields","command",
"MsgHandler","unclassified","MsgHandler::field_value","predicate non-void-command",
"MsgHandler","unclassified","MsgHandler::field_value","predicate non-void-command collaborator",
"MsgHandler","unclassified","MsgHandler::string_for_labels","wrapper",
"MsgHandler","unclassified","MsgHandler::location_from_msg","void-accessor command",
"MsgHandler","unclassified","MsgHandler::ground_vel_from_msg","void-accessor command",
"MsgHandler","unclassified","MsgHandler::attitude_from_msg","void-accessor command",
"MsgHandler","unclassified","MsgHandler::field_not_found","command",
"MsgHandler","unclassified","MsgHandler::require_field","command",
"MsgHandler","unclassified","MsgHandler::require_field_float","property non-void-command",
"MsgHandler","unclassified","MsgHandler::require_field_uint8_t","property non-void-command",
"MsgHandler","unclassified","MsgHandler::require_field_int32_t","property non-void-command",
"MsgHandler","unclassified","MsgHandler::require_field_uint16_t","property non-void-command",
"MsgHandler","unclassified","MsgHandler::require_field_int16_t","property non-void-command",
"MsgHandler","unclassified","MsgHandler::field_value","predicate non-void-command collaborator",
"MsgHandler","unclassified","MsgHandler::field_value_for_type_at_offset","wrapper stateless",
"LR_MsgHandler_RMGH","boundary degenerate small-class","LR_MsgHandler_RMGH::process_message","wrapper stateless",
"ModeQLoiter","lazy-class degenerate","mode_number","collaborator incidental",
"ModeQLoiter","lazy-class degenerate","name","incidental",
"ModeQLoiter","lazy-class degenerate","name4","incidental",
"ModeQLoiter","lazy-class degenerate","is_vtol_mode","incidental",
"ModeQLoiter","lazy-class degenerate","is_vtol_man_mode","incidental",
"ModeQLoiter","lazy-class degenerate","ModeQLoiter::_enter","predicate set",
"ModeQLoiter","lazy-class degenerate","ModeQLoiter::update","controller stateless",
"ModeQLoiter","lazy-class degenerate","ModeQLoiter::run","set",
"Semaphore","boundary","Semaphore::Semaphore","constructor",
"Semaphore","boundary","Semaphore::give","predicate wrapper",
"Semaphore","boundary","Semaphore::take","predicate non-void-command",
"Semaphore","boundary","Semaphore::take_nonblocking","predicate wrapper",
"Semaphore","boundary","Semaphore::check_owner","predicate wrapper",
"Semaphore","boundary","Semaphore::assert_owner","command",
"Semaphore","boundary","Semaphore::Semaphore","constructor",
"Semaphore","boundary","Semaphore::give","wrapper stateless",
"Semaphore","boundary","Semaphore::take","predicate non-void-command",
"Semaphore","boundary","Semaphore::take_blocking","wrapper stateless",
"Semaphore","boundary","Semaphore::take_nonblocking","predicate non-void-command",
"Semaphore","boundary","Semaphore::check_owner","wrapper stateless",
"Semaphore","boundary","Semaphore::give","incidental",
"Semaphore","boundary","Semaphore::take","predicate non-void-command",
"Semaphore","boundary","Semaphore::take_nonblocking","incidental",
"Semaphore","boundary","Semaphore::Semaphore","constructor",
"Semaphore","boundary","Semaphore::give","predicate wrapper",
"Semaphore","boundary","Semaphore::take","predicate non-void-command",
"Semaphore","boundary","Semaphore::take_nonblocking","predicate wrapper",
"Semaphore","boundary","Semaphore::Semaphore","constructor",
"Semaphore","boundary","Semaphore::give","predicate wrapper",
"Semaphore","boundary","Semaphore::check_owner","wrapper stateless",
"Semaphore","boundary","Semaphore::take","predicate non-void-command",
"Semaphore","boundary","Semaphore::take_nonblocking","predicate wrapper",
"Frame","boundary","Frame","constructor",
"Frame","boundary","get_mass","get",
"Frame","boundary","set_mass","set",
"Frame","boundary","Frame::get_air_density","wrapper stateless",
"Frame","boundary","Frame::load_frame_params","command collaborator",
"Frame","boundary","Frame::parse_float","controller stateless",
"Frame","boundary","Frame::parse_vector3","command collaborator",
"Frame","boundary","Frame::init","command collaborator",
"Frame","boundary","Frame::find_frame","wrapper stateless",
"Frame","boundary","Frame::calculate_forces","void-accessor command collaborator",
"Frame","boundary","Frame::current_and_voltage","void-accessor",
"AP_Baro_DPS310","boundary degenerate small-class","AP_Baro_DPS310::probe","wrapper stateless",
"ModeQAutotune","degenerate","mode_number","collaborator incidental",
"ModeQAutotune","degenerate","name","incidental",
"ModeQAutotune","degenerate","name4","incidental",
"ModeQAutotune","degenerate","is_vtol_mode","incidental",
"ModeQAutotune","degenerate","is_vtol_man_mode","incidental",
"ModeQAutotune","degenerate","ModeQAutotune::_enter","controller stateless",
"ModeQAutotune","degenerate","ModeQAutotune::update","controller stateless",
"ModeQAutotune","degenerate","ModeQAutotune::run","controller stateless",
"ModeQAutotune","degenerate","ModeQAutotune::_exit","controller stateless",
"ModeTakeoff","lazy-class degenerate","mode_number","collaborator incidental",
"ModeTakeoff","lazy-class degenerate","name","incidental",
"ModeTakeoff","lazy-class degenerate","name4","incidental",
"ModeTakeoff","lazy-class degenerate","allows_throttle_nudging","incidental",
"ModeTakeoff","lazy-class degenerate","does_auto_navigation","incidental",
"ModeTakeoff","lazy-class degenerate","does_auto_throttle","incidental",
"ModeTakeoff","lazy-class degenerate","ModeTakeoff::ModeTakeoff","constructor",
"ModeTakeoff","lazy-class degenerate","ModeTakeoff::_enter","predicate set",
"ModeTakeoff","lazy-class degenerate","ModeTakeoff::update","command",
"ModeTakeoff","lazy-class degenerate","ModeTakeoff::navigate","controller stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::BinarySemaphore","constructor",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::wait","wrapper stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::wait_blocking","wrapper stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::signal","wrapper stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::signal_ISR","wrapper stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::BinarySemaphore","constructor",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::wait","wrapper stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::wait_blocking","wrapper stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::signal","wrapper stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::signal_ISR","wrapper stateless",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::~BinarySemaphore","destructor",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::BinarySemaphore","constructor",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::wait","predicate set collaborator",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::wait_blocking","predicate set",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::signal","set",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::BinarySemaphore","constructor",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::wait","predicate set collaborator",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::wait_blocking","predicate set",
"BinarySemaphore","boundary lazy-class degenerate","BinarySemaphore::signal","set",
"OpticalFlow_Onboard","commander boundary","OpticalFlow_Onboard::init","command",
"OpticalFlow_Onboard","commander boundary","OpticalFlow_Onboard::read","predicate non-void-command collaborator",
"OpticalFlow_Onboard","commander boundary","OpticalFlow_Onboard::push_gyro","command collaborator",
"OpticalFlow_Onboard","commander boundary","OpticalFlow_Onboard::_get_integrated_gyros","void-accessor command collaborator",
"OpticalFlow_Onboard","commander boundary","OpticalFlow_Onboard::push_gyro_bias","command",
"OpticalFlow_Onboard","commander boundary","OpticalFlow_Onboard::_read_thread","controller stateless",
"OpticalFlow_Onboard","commander boundary","OpticalFlow_Onboard::_run_optflow","command",
"AP_AccelCal","unclassified","AP_AccelCal","constructor",
"AP_AccelCal","unclassified","get_status","get collaborator",
"AP_AccelCal","unclassified","AP_AccelCal::update","command",
"AP_AccelCal","unclassified","AP_AccelCal::start","command collaborator",
"AP_AccelCal","unclassified","AP_AccelCal::success","set",
"AP_AccelCal","unclassified","AP_AccelCal::cancel","set",
"AP_AccelCal","unclassified","AP_AccelCal::fail","set",
"AP_AccelCal","unclassified","AP_AccelCal::clear","command",
"AP_AccelCal","unclassified","AP_AccelCal::collect_sample","command",
"AP_AccelCal","unclassified","AP_AccelCal::register_client","command collaborator",
"AP_AccelCal","unclassified","AP_AccelCal::get_calibrator","property wrapper",
"AP_AccelCal","unclassified","AP_AccelCal::update_status","unclassified",
"AP_AccelCal","unclassified","AP_AccelCal::client_active","predicate wrapper",
"AP_AccelCal","unclassified","AP_AccelCal::handle_command_ack","set collaborator",
"AP_AccelCal","unclassified","AP_AccelCal::gcs_vehicle_position","predicate set",
"AP_AccelCal","unclassified","AP_AccelCal::running","predicate",
"AP_AccelCal","unclassified","update","wrapper stateless",
"AP_Airspeed_SITL","boundary degenerate","init","incidental",
"AP_Airspeed_SITL","boundary degenerate","AP_Airspeed_SITL::get_differential_pressure","wrapper stateless",
"AP_Airspeed_SITL","boundary degenerate","AP_Airspeed_SITL::get_temperature","wrapper stateless",
"AP_HAL::PWMSource","data-provider data-class small-class","pin","get",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::AP_Baro_ICP201XX","constructor",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::probe","controller stateless",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::init","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::dummy_reg","command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::read_reg","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::read_reg","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::write_reg","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::soft_reset","command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::mode_select","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::read_otp_data","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::get_sensor_data","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::boot_sequence","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::configure","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::wait_read","command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::flush_fifo","predicate non-void-command",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::timer","unclassified",
"AP_Baro_ICP201XX","unclassified","AP_Baro_ICP201XX::update","wrapper",
"AP_RCProtocol_DroneCAN","unclassified","AP_RCProtocol_DroneCAN","constructor",
"AP_RCProtocol_DroneCAN","unclassified","AP_RCProtocol_DroneCAN::subscribe_msgs","controller stateless",
"AP_RCProtocol_DroneCAN","unclassified","AP_RCProtocol_DroneCAN::get_dronecan_backend","property",
"AP_RCProtocol_DroneCAN","unclassified","AP_RCProtocol_DroneCAN::handle_rcinput","command collaborator",
"AP_RCProtocol_DroneCAN","unclassified","AP_RCProtocol_DroneCAN::update","set",
"AP_Baro_DroneCAN","boundary","update_healthy_flag","wrapper",
"AP_Baro_DroneCAN","boundary","AP_Baro_DroneCAN::AP_Baro_DroneCAN","constructor",
"AP_Baro_DroneCAN","boundary","AP_Baro_DroneCAN::subscribe_msgs","controller stateless",
"AP_Baro_DroneCAN","boundary","AP_Baro_DroneCAN::probe","property controller",
"AP_Baro_DroneCAN","boundary","AP_Baro_DroneCAN::get_dronecan_backend","incidental",
"AP_Baro_DroneCAN","boundary","AP_Baro_DroneCAN::_update_and_wrap_accumulator","incidental",
"AP_Baro_DroneCAN","boundary","AP_Baro_DroneCAN::handle_pressure","command collaborator",
"AP_Baro_DroneCAN","boundary","AP_Baro_DroneCAN::handle_temperature","command collaborator",
"AP_Baro_DroneCAN","boundary","AP_Baro_DroneCAN::update","command",
"TestDeleted","empty","TestDeleted","constructor",
"TestDeleted","empty","~TestDeleted","destructor",
"Location","data-provider boundary","get_bearing_to","property",
"Location","data-provider boundary","same_loc_as","predicate",
"Location","data-provider boundary","initialised","predicate",
"Location","data-provider boundary","Location::Location","constructor",
"Location","data-provider boundary","Location::is_zero","wrapper stateless",
"Location","data-provider boundary","Location::zero","wrapper stateless",
"Location","data-provider boundary","Location::Location","constructor",
"Location","data-provider boundary","Location::Location","constructor",
"Location","data-provider boundary","Location::set_alt_cm","command collaborator",
"Location","data-provider boundary","Location::change_alt_frame","predicate non-void-command collaborator",
"Location","data-provider boundary","Location::get_alt_frame","property collaborator",
"Location","data-provider boundary","Location::get_alt_cm","predicate",
"Location","data-provider boundary","Location::get_alt_m","predicate",
"Location","data-provider boundary","Location::get_vector_xy_from_origin_NE","predicate collaborator",
"Location","data-provider boundary","Location::get_vector_from_origin_NEU","predicate collaborator",
"Location","data-provider boundary","Location::get_distance","property collaborator",
"Location","data-provider boundary","Location::get_alt_distance","predicate collaborator",
"Location","data-provider boundary","Location::get_distance_NE","property collaborator",
"Location","data-provider boundary","Location::get_distance_NED","property collaborator",
"Location","data-provider boundary","Location::get_distance_NED_double","property collaborator",
"Location","data-provider boundary","Location::get_distance_NED_alt_frame","property collaborator",
"Location","data-provider boundary","Location::get_distance_NE_double","property collaborator",
"Location","data-provider boundary","Location::get_distance_NE_ftype","property collaborator",
"Location","data-provider boundary","Location::offset_latlng","void-accessor command collaborator",
"Location","data-provider boundary","Location::offset","command collaborator",
"Location","data-provider boundary","Location::offset","set collaborator",
"Location","data-provider boundary","Location::offset_bearing","command collaborator",
"Location","data-provider boundary","Location::offset_bearing_and_pitch","set collaborator",
"Location","data-provider boundary","Location::longitude_scale","wrapper stateless",
"Location","data-provider boundary","Location::sanitize","predicate non-void-command",
"Location","data-provider boundary","Location::get_bearing","property collaborator",
"Location","data-provider boundary","Location::same_latlon_as","predicate",
"Location","data-provider boundary","Location::same_alt_as","predicate controller",
"Location","data-provider boundary","Location::check_latlng","predicate wrapper",
"Location","data-provider boundary","Location::past_interval_finish_line","controller stateless",
"Location","data-provider boundary","Location::line_path_proportion","controller stateless",
"Location","data-provider boundary","Location::wrap_longitude","wrapper stateless",
"Location","data-provider boundary","Location::diff_longitude","wrapper stateless",
"Location","data-provider boundary","Location::limit_lattitude","incidental",
"Location","data-provider boundary","Location::linearly_interpolate_alt","command",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::do_land","command",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::verify_abort_landing","void-accessor command",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::verify_land","predicate non-void-command collaborator",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::override_servos","predicate non-void-command",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::request_go_around","predicate set",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::is_throttle_suppressed","predicate",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::is_flying_forward","predicate",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::is_on_approach","predicate",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::get_target_altitude_location","predicate wrapper",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::get_target_airspeed_cm","property",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::send_deepstall_message","predicate wrapper",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::get_pid_info","property collaborator",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::Log","collaborator",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::terminate","predicate non-void-command",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::build_approach_path","command",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::predict_travel_distance","get set",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::verify_breakout","predicate",
"AP_Landing_Deepstall","unclassified","AP_Landing_Deepstall::update_steering","property non-void-command",
"LR_MsgHandler_RGPH","boundary degenerate small-class","LR_MsgHandler_RGPH::process_message","wrapper stateless",
"AP_Avoidance_Plane","unclassified","AP_Avoidance_Plane::handle_avoidance","property collaborator",
"AP_Avoidance_Plane","unclassified","AP_Avoidance_Plane::handle_recovery","controller",
"AP_Avoidance_Plane","unclassified","AP_Avoidance_Plane::check_flightmode","controller stateless",
"AP_Avoidance_Plane","unclassified","AP_Avoidance_Plane::handle_avoidance_vertical","predicate non-void-command collaborator",
"AP_Avoidance_Plane","unclassified","AP_Avoidance_Plane::handle_avoidance_horizontal","predicate non-void-command collaborator",
"AP_Airspeed_Analog","unclassified","get_temperature","incidental",
"AP_Airspeed_Analog","unclassified","AP_Airspeed_Analog::AP_Airspeed_Analog","constructor",
"AP_Airspeed_Analog","unclassified","AP_Airspeed_Analog::init","predicate",
"AP_Airspeed_Analog","unclassified","AP_Airspeed_Analog::get_differential_pressure","predicate non-void-command",
"AP_BLHeli","unclassified","has_bidir_dshot","predicate",
"AP_BLHeli","unclassified","get_bidir_dshot_mask","property",
"AP_BLHeli","unclassified","get_motor_poles","property",
"AP_BLHeli","unclassified","get_telemetry_rate","property",
"AP_BLHeli","unclassified","AP_BLHeli::AP_BLHeli","constructor",
"AP_BLHeli","unclassified","AP_BLHeli::msp_process_byte","incidental",
"AP_BLHeli","unclassified","AP_BLHeli::blheli_crc_update","wrapper stateless",
"AP_BLHeli","unclassified","AP_BLHeli::blheli_4way_process_byte","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::msp_send_ack","command",
"AP_BLHeli","unclassified","AP_BLHeli::msp_send_reply","command",
"AP_BLHeli","unclassified","AP_BLHeli::putU16","incidental",
"AP_BLHeli","unclassified","AP_BLHeli::getU16","incidental",
"AP_BLHeli","unclassified","AP_BLHeli::putU32","incidental",
"AP_BLHeli","unclassified","AP_BLHeli::putU16_BE","incidental",
"AP_BLHeli","unclassified","AP_BLHeli::msp_process_command","command",
"AP_BLHeli","unclassified","AP_BLHeli::blheli_send_reply","command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_CRC","incidental",
"AP_BLHeli","unclassified","AP_BLHeli::isMcuConnected","incidental",
"AP_BLHeli","unclassified","AP_BLHeli::setDisconnected","incidental",
"AP_BLHeli","unclassified","AP_BLHeli::BL_SendBuf","predicate",
"AP_BLHeli","unclassified","AP_BLHeli::BL_ReadBuf","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_GetACK","controller stateless",
"AP_BLHeli","unclassified","AP_BLHeli::BL_SendCMDSetAddress","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_ReadA","predicate non-void-command collaborator",
"AP_BLHeli","unclassified","AP_BLHeli::BL_ConnectEx","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_SendCMDKeepAlive","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_PageErase","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_SendCMDRunRestartBootloader","command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_SendCMDSetBuffer","property non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_WriteA","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_WriteFlash","property non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::BL_VerifyFlash","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::blheli_process_command","command",
"AP_BLHeli","unclassified","AP_BLHeli::process_input","predicate non-void-command",
"AP_BLHeli","unclassified","AP_BLHeli::protocol_handler","predicate set collaborator",
"AP_BLHeli","unclassified","AP_BLHeli::run_connection_test","command collaborator",
"AP_BLHeli","unclassified","AP_BLHeli::update","command",
"AP_BLHeli","unclassified","AP_BLHeli::init","command collaborator",
"AP_BLHeli","unclassified","AP_BLHeli::read_telemetry_packet","command",
"AP_BLHeli","unclassified","AP_BLHeli::log_bidir_telemetry","command",
"AP_BLHeli","unclassified","AP_BLHeli::update_telemetry","command",
"Tiltrotor","degenerate","enabled","predicate",
"Tiltrotor","degenerate","is_motor_tilting","predicate",
"Tiltrotor","degenerate","is_vectored","predicate",
"Tiltrotor","degenerate","has_fw_motor","get",
"Tiltrotor","degenerate","has_vtol_motor","get",
"Tiltrotor","degenerate","motors_active","predicate",
"Tiltrotor","degenerate","tilt_angle_achieved","predicate",
"Tiltrotor","degenerate","Tiltrotor::Tiltrotor","constructor",
"Tiltrotor","degenerate","Tiltrotor::setup","command",
"Tiltrotor","degenerate","Tiltrotor::tilt_max_change","property",
"Tiltrotor","degenerate","Tiltrotor::slew","command",
"Tiltrotor","degenerate","Tiltrotor::get_fully_forward_tilt","property",
"Tiltrotor","degenerate","Tiltrotor::get_forward_flight_tilt","property wrapper",
"Tiltrotor","degenerate","Tiltrotor::continuous_update","command",
"Tiltrotor","degenerate","Tiltrotor::binary_slew","set",
"Tiltrotor","degenerate","Tiltrotor::binary_update","command",
"Tiltrotor","degenerate","Tiltrotor::update","command",
"Tiltrotor","degenerate","Tiltrotor::write_log","controller",
"Tiltrotor","degenerate","Tiltrotor::tilt_compensate_angle","void-accessor command",
"Tiltrotor","degenerate","Tiltrotor::tilt_compensate","command",
"Tiltrotor","degenerate","Tiltrotor::fully_fwd","predicate",
"Tiltrotor","degenerate","Tiltrotor::fully_up","predicate",
"Tiltrotor","degenerate","Tiltrotor::vectoring","command",
"Tiltrotor","degenerate","Tiltrotor::bicopter_output","command",
"Tiltrotor","degenerate","Tiltrotor::update_yaw_target","command",
"Tiltrotor","degenerate","Tiltrotor::tilt_over_max_angle","predicate",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","empty",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","update","wrapper stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","unclassified",
"Tiltrotor","degenerate","setup","command",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","empty",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","empty",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","empty",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","set",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"Tiltrotor","degenerate","setup","controller stateless",
"SingleCopter","commander boundary data-class small-class","SingleCopter::SingleCopter","constructor",
"SingleCopter","commander boundary data-class small-class","SingleCopter::update","set collaborator",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::trigger_pic","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::record_video","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::set_zoom","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::set_focus","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::set_tracking","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::set_lens","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::set_camera_source","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::send_camera_information","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::send_camera_settings","controller stateless",
"AP_Camera_Mount","pure-controller degenerate","AP_Camera_Mount::send_camera_capture_status","controller stateless",
"ModeAutorotate","degenerate","mode_number","collaborator incidental",
"ModeAutorotate","degenerate","is_autopilot","incidental",
"ModeAutorotate","degenerate","requires_GPS","incidental",
"ModeAutorotate","degenerate","has_manual_throttle","incidental",
"ModeAutorotate","degenerate","allows_arming","collaborator incidental",
"ModeAutorotate","degenerate","name","incidental",
"ModeAutorotate","degenerate","name4","incidental",
"ModeAutorotate","degenerate","ModeAutorotate::init","predicate non-void-command",
"ModeAutorotate","degenerate","ModeAutorotate::run","command",
"ModeAutorotate","degenerate","ModeAutorotate::warning_message","wrapper stateless",
"LR_MsgHandler_RWOH","boundary small-class","LR_MsgHandler_RWOH::process_message","wrapper",
"AP_DAL_InertialSensor","data-provider","get_loop_rate_hz","get",
"AP_DAL_InertialSensor","data-provider","get_imu_pos_offset","get collaborator",
"AP_DAL_InertialSensor","data-provider","get_accel_count","get",
"AP_DAL_InertialSensor","data-provider","get_primary_accel","get",
"AP_DAL_InertialSensor","data-provider","use_accel","get",
"AP_DAL_InertialSensor","data-provider","get_accel","get collaborator",
"AP_DAL_InertialSensor","data-provider","get_delta_velocity","get",
"AP_DAL_InertialSensor","data-provider","get_gyro_count","get",
"AP_DAL_InertialSensor","data-provider","get_primary_gyro","get",
"AP_DAL_InertialSensor","data-provider","use_gyro","get",
"AP_DAL_InertialSensor","data-provider","get_gyro","get collaborator",
"AP_DAL_InertialSensor","data-provider","get_gyro","property collaborator",
"AP_DAL_InertialSensor","data-provider","get_delta_angle","get",
"AP_DAL_InertialSensor","data-provider","get_loop_delta_t","get",
"AP_DAL_InertialSensor","data-provider","handle_message","set collaborator",
"AP_DAL_InertialSensor","data-provider","handle_message","command collaborator",
"AP_DAL_InertialSensor","data-provider","AP_DAL_InertialSensor::AP_DAL_InertialSensor","constructor",
"AP_DAL_InertialSensor","data-provider","AP_DAL_InertialSensor::start_frame","command collaborator",
"AP_DAL_InertialSensor","data-provider","AP_DAL_InertialSensor::update_filtered","command",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::AP_Baro_KellerLD","constructor",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::probe","controller stateless",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::transfer_with_delays","predicate non-void-command",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::read_measurement_limit","predicate non-void-command",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::read_cal","predicate non-void-command",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::read_mode_type","predicate non-void-command",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::_init","predicate non-void-command",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::_read","predicate non-void-command",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::_timer","command",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::_update_and_wrap_accumulator","incidental",
"AP_Baro_KellerLD","unclassified","AP_Baro_KellerLD::update","set",
"AP_LTM_Telem","commander","AP_LTM_Telem","constructor",
"AP_LTM_Telem","commander","AP_LTM_Telem::init","empty",
"AP_LTM_Telem","commander","AP_LTM_Telem::init","empty",
"AP_LTM_Telem","commander","AP_LTM_Telem::init","empty",
"AP_LTM_Telem","commander","init","empty",
"AP_LTM_Telem","commander","init","wrapper stateless",
"AP_LTM_Telem","commander","init","wrapper stateless",
"AP_LTM_Telem","commander","AP_LTM_Telem::init","collaborator",
"AP_LTM_Telem","commander","AP_LTM_Telem::send_LTM","command",
"AP_LTM_Telem","commander","AP_LTM_Telem::send_Gframe","set",
"AP_LTM_Telem","commander","AP_LTM_Telem::send_Sframe","set",
"AP_LTM_Telem","commander","AP_LTM_Telem::send_Aframe","set",
"AP_LTM_Telem","commander","AP_LTM_Telem::generate_LTM","unclassified",
"AP_LTM_Telem","commander","AP_LTM_Telem::tick","set",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::AP_InertialSensor_L3G4200D","constructor",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::~AP_InertialSensor_L3G4200D","destructor",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::probe","controller stateless",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::_accel_init","predicate non-void-command",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::_gyro_init","predicate non-void-command",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::_init_sensor","predicate non-void-command",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::start","command",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::_set_filter_frequency","command",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::update","predicate wrapper",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::_accumulate_gyro","command collaborator",
"AP_InertialSensor_L3G4200D","unclassified","AP_InertialSensor_L3G4200D::_accumulate_accel","command collaborator",
"Tiltrotor_Transition","small-class","Tiltrotor_Transition::update_yaw_target","predicate non-void-command",
"Tiltrotor_Transition","small-class","Tiltrotor_Transition::show_vtol_view","predicate",
"AP_Compass_RM3100","boundary","AP_Compass_RM3100::probe","controller stateless",
"AP_Compass_RM3100","boundary","AP_Compass_RM3100::AP_Compass_RM3100","constructor",
"AP_Compass_RM3100","boundary","AP_Compass_RM3100::init","predicate",
"AP_Compass_RM3100","boundary","AP_Compass_RM3100::timer","command collaborator",
"AP_Compass_RM3100","boundary","AP_Compass_RM3100::read","wrapper",
"LoggerMessageWriter","unclassified","finished","get",
"LoggerMessageWriter","unclassified","set_logger_backend","set collaborator",
"LoggerMessageWriter","unclassified","LoggerMessageWriter::reset","set",
"LoggerMessageWriter","unclassified","LoggerMessageWriter::out_of_time_for_writing_messages","wrapper stateless",
"AP_RangeFinder_VL53L1X","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::AP_RangeFinder_VL53L1X","constructor",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::detect","controller stateless",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::check_id","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::reset","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::init","predicate non-void-command collaborator",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::setDistanceMode","predicate non-void-command collaborator",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::setMeasurementTimingBudget","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::getMeasurementTimingBudget","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::startContinuous","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::decodeTimeout","incidental",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::encodeTimeout","incidental",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::timeoutMclksToMicroseconds","incidental",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::timeoutMicrosecondsToMclks","incidental",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::calcMacroPeriod","property",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::setupManualCalibration","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::dataReady","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::get_reading","get predicate",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::read_register","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::read_register16","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::write_register","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::write_register16","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::write_register32","predicate non-void-command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::timer","command",
"AP_RangeFinder_VL53L1X","unclassified","AP_RangeFinder_VL53L1X::update","command",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::init","set",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::set_freq","unclassified",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::get_freq","property",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::enable_ch","set",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::disable_ch","set",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::write","command",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::read","property",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::read","void-accessor",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::cork","set",
"RCOutput_AioPRU","unclassified","RCOutput_AioPRU::push","command",
"AP_Compass_ExternalAHRS","boundary small-class","AP_Compass_ExternalAHRS::AP_Compass_ExternalAHRS","constructor",
"AP_Compass_ExternalAHRS","boundary small-class","AP_Compass_ExternalAHRS::handle_external","wrapper",
"AP_Compass_ExternalAHRS","boundary small-class","AP_Compass_ExternalAHRS::read","wrapper",
"AP_RangeFinder_Benewake_TF03","degenerate small-class","model_dist_max_cm","incidental",
"AP_GPS_GSOF","lazy-class degenerate","highest_supported_status","collaborator incidental",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::AP_GPS_GSOF","constructor",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::read","predicate non-void-command",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::parse","predicate set",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::requestBaud","set collaborator",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::requestGSOF","set collaborator",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::SwapDouble","incidental",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::SwapFloat","incidental",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::SwapUint32","wrapper stateless",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::SwapUint16","wrapper stateless",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::process_message","predicate non-void-command",
"AP_GPS_GSOF","lazy-class degenerate","AP_GPS_GSOF::validate_com_port","incidental",
"AC_Sprayer","degenerate","running","incidental",
"AC_Sprayer","degenerate","spraying","incidental",
"AC_Sprayer","degenerate","test_pump","incidental",
"AC_Sprayer","degenerate","set_pump_rate","controller stateless",
"AC_Sprayer","degenerate","AC_Sprayer::AC_Sprayer","constructor",
"AC_Sprayer","degenerate","AC_Sprayer::get_singleton","get",
"AC_Sprayer","degenerate","AC_Sprayer::run","command",
"AC_Sprayer","degenerate","AC_Sprayer::stop_spraying","wrapper stateless",
"AC_Sprayer","degenerate","AC_Sprayer::update","command",
"AC_Sprayer","degenerate","update","wrapper stateless",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::open","property non-void-command",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::close","property non-void-command",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::pack_param","controller stateless",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::token_seek","predicate non-void-command collaborator",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::read","property non-void-command",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::lseek","property collaborator",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::stat","property non-void-command collaborator",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::check_file_name","wrapper stateless",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::write","property controller",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::param_upload_parse","predicate controller",
"AP_Filesystem_Param","boundary","AP_Filesystem_Param::finish_upload","predicate non-void-command collaborator",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::AP_InertialSensor_BMI270","constructor",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::probe","controller stateless",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::probe","controller stateless",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::start","command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::update","predicate wrapper",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::read_registers","predicate non-void-command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::write_register","predicate non-void-command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::check_err_reg","command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::configure_accel","command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::configure_gyro","command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::configure_fifo","command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::fifo_reset","command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::read_fifo","command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::parse_accel_frame","wrapper",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::parse_gyro_frame","wrapper",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::hardware_init","predicate non-void-command",
"AP_InertialSensor_BMI270","commander","AP_InertialSensor_BMI270::init","predicate non-void-command",
"AP_Arming","unclassified","get_rudder_arming_type","property collaborator",
"AP_Arming","unclassified","last_disarm_method","get collaborator",
"AP_Arming","unclassified","last_arm_method","get collaborator",
"AP_Arming","unclassified","option_enabled","predicate wrapper",
"AP_Arming","unclassified","AP_Arming::AP_Arming","constructor",
"AP_Arming","unclassified","AP_Arming::update","command",
"AP_Arming","unclassified","AP_Arming::compass_magfield_expected","incidental",
"AP_Arming","unclassified","AP_Arming::is_armed","predicate",
"AP_Arming","unclassified","AP_Arming::is_armed_and_safety_off","predicate",
"AP_Arming","unclassified","AP_Arming::get_enabled_checks","get",
"AP_Arming","unclassified","AP_Arming::check_enabled","predicate collaborator",
"AP_Arming","unclassified","AP_Arming::check_failed","collaborator",
"AP_Arming","unclassified","AP_Arming::check_failed","controller",
"AP_Arming","unclassified","AP_Arming::barometer_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::airspeed_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::logging_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::ins_accels_consistent","predicate set collaborator",
"AP_Arming","unclassified","AP_Arming::ins_gyros_consistent","predicate set collaborator",
"AP_Arming","unclassified","AP_Arming::ins_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::compass_checks","predicate non-void-command collaborator",
"AP_Arming","unclassified","AP_Arming::gps_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::battery_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::hardware_safety_check","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::rc_arm_checks","predicate non-void-command collaborator",
"AP_Arming","unclassified","AP_Arming::rc_calibration_checks","controller stateless",
"AP_Arming","unclassified","AP_Arming::rc_in_calibration_check","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::manual_transmitter_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::mission_checks","predicate non-void-command collaborator",
"AP_Arming","unclassified","AP_Arming::rangefinder_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::servo_checks","predicate",
"AP_Arming","unclassified","AP_Arming::board_voltage_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::heater_min_temperature_checks","predicate controller",
"AP_Arming","unclassified","AP_Arming::system_checks","predicate non-void-command collaborator",
"AP_Arming","unclassified","AP_Arming::terrain_database_required","controller stateless",
"AP_Arming","unclassified","AP_Arming::terrain_checks","predicate",
"AP_Arming","unclassified","AP_Arming::proximity_checks","predicate",
"AP_Arming","unclassified","AP_Arming::can_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::fence_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::camera_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::osd_checks","predicate",
"AP_Arming","unclassified","AP_Arming::mount_checks","predicate",
"AP_Arming","unclassified","AP_Arming::fettec_checks","predicate",
"AP_Arming","unclassified","AP_Arming::get_aux_auth_id","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::set_aux_auth_passed","wrapper",
"AP_Arming","unclassified","AP_Arming::set_aux_auth_failed","set",
"AP_Arming","unclassified","AP_Arming::aux_auth_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::generator_checks","predicate",
"AP_Arming","unclassified","AP_Arming::opendroneid_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::serial_protocol_checks","wrapper stateless",
"AP_Arming","unclassified","AP_Arming::estop_checks","controller stateless",
"AP_Arming","unclassified","AP_Arming::pre_arm_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::arm_checks","predicate non-void-command collaborator",
"AP_Arming","unclassified","AP_Arming::blending_auto_switch_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::crashdump_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::mandatory_checks","predicate non-void-command",
"AP_Arming","unclassified","AP_Arming::arm","get predicate non-void-command collaborator",
"AP_Arming","unclassified","AP_Arming::disarm","predicate non-void-command collaborator",
"AP_Arming","unclassified","AP_Arming::update_arm_gpio","controller",
"AP_Arming","unclassified","AP_Arming::send_arm_disarm_statustext","unclassified",
"AP_Arming","unclassified","AP_Arming::arming_required","get property wrapper",
"AP_Arming","unclassified","AP_Arming::rc_checks_copter_sub","predicate collaborator",
"AP_Arming","unclassified","AP_Arming::visodom_checks","predicate",
"AP_Arming","unclassified","AP_Arming::disarm_switch_checks","controller stateless",
"AP_Arming","unclassified","AP_Arming::Log_Write_Arm","command collaborator",
"AP_Arming","unclassified","AP_Arming::Log_Write_Disarm","command collaborator",
"AP_Arming","unclassified","AP_Arming::check_forced_logging","wrapper stateless",
"AP_Arming","unclassified","AP_Arming::get_singleton","get",
"AP_Arming","unclassified","update","wrapper stateless",
"_AutoTakeoff","entity commander boundary","_AutoTakeoff::run","command collaborator",
"_AutoTakeoff","entity commander boundary","_AutoTakeoff::start","command collaborator",
"_AutoTakeoff","entity commander boundary","_AutoTakeoff::get_position","predicate set collaborator",
"_AutoTakeoff","entity commander boundary","run","wrapper stateless",
"_AutoTakeoff","entity commander boundary","run","wrapper stateless",
"_AutoTakeoff","entity commander boundary","run","wrapper stateless",
"ParametersG2","empty","ParametersG2::ParametersG2","constructor",
"ParametersG2","empty","ParametersG2::ParametersG2","constructor",
"ParametersG2","empty","ParametersG2::ParametersG2","constructor",
"ParametersG2","empty","ParametersG2::ParametersG2","constructor",
"ParametersG2","empty","ParametersG2::ParametersG2","constructor",
"AP_Compass_SITL","commander boundary","AP_Compass_SITL::AP_Compass_SITL","constructor",
"AP_Compass_SITL","commander boundary","AP_Compass_SITL::_setup_eliptical_correcion","command collaborator",
"AP_Compass_SITL","commander boundary","AP_Compass_SITL::_timer","command collaborator",
"AP_Compass_SITL","commander boundary","AP_Compass_SITL::read","wrapper",
"AP_ExpandingArrayGeneric","unclassified","AP_ExpandingArrayGeneric","constructor",
"AP_ExpandingArrayGeneric","unclassified","max_items","property",
"AP_ExpandingArrayGeneric","unclassified","AP_ExpandingArrayGeneric::~AP_ExpandingArrayGeneric","destructor",
"AP_ExpandingArrayGeneric","unclassified","AP_ExpandingArrayGeneric::expand","predicate non-void-command",
"AP_ExpandingArrayGeneric","unclassified","AP_ExpandingArrayGeneric::expand_to_hold","predicate non-void-command",
"HALSITL::RCInput","degenerate small-class","protocol","incidental",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::pre_arm_checks","predicate non-void-command",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::run_pre_arm_checks","predicate non-void-command",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::barometer_checks","controller stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::ins_checks","predicate non-void-command",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::board_voltage_checks","controller stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::parameter_checks","controller stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::motor_checks","controller stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::rc_calibration_checks","incidental",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::gps_checks","predicate non-void-command",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::pre_arm_ekf_attitude_check","controller stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::mandatory_gps_checks","controller stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::gcs_failsafe_check","wrapper stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::alt_checks","controller stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::arm_checks","wrapper stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::mandatory_checks","predicate non-void-command",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::set_pre_arm_check","incidental",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::arm","controller stateless",
"AP_Arming_Blimp","degenerate","AP_Arming_Blimp::disarm","controller stateless",
"ModeInitialising","degenerate","number","collaborator incidental",
"ModeInitialising","degenerate","requires_armed_servos","incidental",
"ModeInitialising","degenerate","update","empty",
"AP_Logger_Backend","unclassified","WriteBlock","wrapper stateless",
"AP_Logger_Backend","unclassified","WriteCriticalBlock","wrapper stateless",
"AP_Logger_Backend","unclassified","start_new_log","empty",
"AP_Logger_Backend","unclassified","stop_logging_async","wrapper stateless",
"AP_Logger_Backend","unclassified","flush","empty",
"AP_Logger_Backend","unclassified","remote_log_block_status_msg","empty",
"AP_Logger_Backend","unclassified","num_dropped","get",
"AP_Logger_Backend","unclassified","io_timer","empty",
"AP_Logger_Backend","unclassified","PrepForArming_start_logging","command",
"AP_Logger_Backend","unclassified","critical_message_reserved_space","incidental",
"AP_Logger_Backend","unclassified","non_messagewriter_message_reserved_space","incidental",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::AP_Logger_Backend","constructor",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::num_types","get",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::structure","property collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::num_units","get",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::unit","property collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::num_multipliers","get",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::multiplier","property collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::vehicle_message_writer","get collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::periodic_10Hz","empty",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::periodic_1Hz","unclassified",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::periodic_fullrate","command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::periodic_tasks","command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::start_new_log_reset_variables","command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::allow_start_ekf","predicate",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::push_log_blocks","command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::WriteBlockCheckStartupMessages","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::WriteMoreStartupMessages","unclassified",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Emit_FMT","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::StartNewLogOK","predicate",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::validate_WritePrioritisedBlock","command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::WritePrioritisedBlock","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::ShouldLog","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::PrepForArming","set",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_MessageF","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_RallyPoint","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Rally","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_FencePoint","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Fence","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_VER","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::log_num_from_list_entry","property non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::find_oldest_log","get property set",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::vehicle_was_disarmed","set",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::logging_enabled","predicate",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_AP_Logger_Stats_File","command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::df_stats_gather","command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::df_stats_clear","set",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::df_stats_log","command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Fill_Format","wrapper stateless",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Fill_Format_Units","wrapper stateless",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Format","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Unit","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Multiplier","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Format_Units","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Parameter","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Parameter","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Mission_Cmd","predicate non-void-command collaborator",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_EntireMission","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Message","predicate non-void-command",
"AP_Logger_Backend","unclassified","AP_Logger_Backend::Write_Mode","predicate non-void-command collaborator",
"AC_Fence","data-provider","init","command",
"AC_Fence","data-provider","auto_enabled","property non-void-command collaborator",
"AC_Fence","data-provider","enabled","get",
"AC_Fence","data-provider","update","command",
"AC_Fence","data-provider","get_breaches","get",
"AC_Fence","data-provider","get_breach_time","get",
"AC_Fence","data-provider","get_breach_count","get",
"AC_Fence","data-provider","get_action","property",
"AC_Fence","data-provider","get_safe_alt_max","property",
"AC_Fence","data-provider","get_safe_alt_min","property",
"AC_Fence","data-provider","get_radius","property",
"AC_Fence","data-provider","get_margin","property",
"AC_Fence","data-provider","get_return_rally","get",
"AC_Fence","data-provider","get_return_altitude","get",
"AC_Fence","data-provider","option_enabled","predicate wrapper",
"AC_Fence","data-provider","failed_sdcard_storage","predicate",
"AC_Fence","data-provider","AC_Fence::AC_Fence","constructor",
"AC_Fence","data-provider","AC_Fence::enable","command",
"AC_Fence","data-provider","AC_Fence::enable_floor","set",
"AC_Fence","data-provider","AC_Fence::disable_floor","set",
"AC_Fence","data-provider","AC_Fence::auto_enable_fence_after_takeoff","command",
"AC_Fence","data-provider","AC_Fence::auto_disable_fence_for_landing","command",
"AC_Fence","data-provider","AC_Fence::present","predicate collaborator",
"AC_Fence","data-provider","AC_Fence::get_enabled_fences","get property",
"AC_Fence","data-provider","AC_Fence::pre_arm_check_polygon","predicate",
"AC_Fence","data-provider","AC_Fence::pre_arm_check_circle","predicate",
"AC_Fence","data-provider","AC_Fence::pre_arm_check_alt","predicate",
"AC_Fence","data-provider","AC_Fence::pre_arm_check","predicate collaborator",
"AC_Fence","data-provider","AC_Fence::check_fence_alt_max","predicate non-void-command",
"AC_Fence","data-provider","AC_Fence::check_fence_alt_min","predicate non-void-command",
"AC_Fence","data-provider","AC_Fence::check_fence_polygon","predicate non-void-command",
"AC_Fence","data-provider","AC_Fence::check_fence_circle","predicate non-void-command collaborator",
"AC_Fence","data-provider","AC_Fence::check","property",
"AC_Fence","data-provider","AC_Fence::check_destination_within_fence","predicate non-void-command collaborator",
"AC_Fence","data-provider","AC_Fence::record_breach","command",
"AC_Fence","data-provider","AC_Fence::clear_breach","set",
"AC_Fence","data-provider","AC_Fence::get_breach_distance","property wrapper",
"AC_Fence","data-provider","AC_Fence::manual_recovery_start","set",
"AC_Fence","data-provider","AC_Fence::sys_status_present","predicate",
"AC_Fence","data-provider","AC_Fence::sys_status_enabled","get predicate",
"AC_Fence","data-provider","AC_Fence::sys_status_failed","predicate",
"AC_Fence","data-provider","AC_Fence::polyfence","get collaborator",
"AC_Fence","data-provider","AC_Fence::polyfence","get collaborator",
"AC_Fence","data-provider","AC_Fence::AC_Fence","constructor",
"AC_Fence","data-provider","AC_Fence::enable","empty",
"AC_Fence","data-provider","AC_Fence::disable_floor","empty",
"AC_Fence","data-provider","AC_Fence::auto_enable_fence_after_takeoff","empty",
"AC_Fence","data-provider","AC_Fence::auto_disable_fence_for_landing","empty",
"AC_Fence","data-provider","AC_Fence::present","incidental",
"AC_Fence","data-provider","AC_Fence::get_enabled_fences","incidental",
"AC_Fence","data-provider","AC_Fence::pre_arm_check","incidental",
"AC_Fence","data-provider","AC_Fence::check","incidental",
"AC_Fence","data-provider","AC_Fence::check_destination_within_fence","collaborator incidental",
"AC_Fence","data-provider","AC_Fence::get_breach_distance","incidental",
"AC_Fence","data-provider","AC_Fence::manual_recovery_start","empty",
"AC_Fence","data-provider","AC_Fence::sys_status_present","incidental",
"AC_Fence","data-provider","AC_Fence::sys_status_enabled","incidental",
"AC_Fence","data-provider","AC_Fence::sys_status_failed","incidental",
"AC_Fence","data-provider","AC_Fence::polyfence","get collaborator",
"AC_Fence","data-provider","AC_Fence::polyfence","get collaborator",
"AnalogSource_IIO","unclassified","voltage_average_ratiometric","property non-void-command",
"AnalogSource_IIO","unclassified","AnalogSource_IIO::AnalogSource_IIO","constructor",
"AnalogSource_IIO","unclassified","AnalogSource_IIO::init_pins","set",
"AnalogSource_IIO","unclassified","AnalogSource_IIO::select_pin","set",
"AnalogSource_IIO","unclassified","AnalogSource_IIO::read_average","get non-void-command",
"AnalogSource_IIO","unclassified","AnalogSource_IIO::read_latest","get property non-void-command",
"AnalogSource_IIO","unclassified","AnalogSource_IIO::voltage_average","property non-void-command",
"AnalogSource_IIO","unclassified","AnalogSource_IIO::voltage_latest","get non-void-command",
"AnalogSource_IIO","unclassified","AnalogSource_IIO::set_pin","predicate non-void-command",
"GCS_MAVLINK_Sub","controller degenerate","telem_delay","incidental",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::base_mode","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::vehicle_system_status","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::send_banner","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::send_nav_controller_output","controller",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::vfr_hud_throttle","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::vfr_hud_alt","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::send_scaled_pressure3","controller",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::send_info","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::send_pid_tuning","controller",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::sysid_my_gcs","incidental",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::try_send_message","predicate non-void-command collaborator",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_guided_request","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::_handle_command_preflight_calibration_baro","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::_handle_command_preflight_calibration","wrapper stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_command_do_set_roi","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_command_int_packet","property non-void-command collaborator",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_MAV_CMD_NAV_LOITER_UNLIM","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_MAV_CMD_NAV_LAND","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_MAV_CMD_CONDITION_YAW","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_MAV_CMD_DO_CHANGE_SPEED","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_MAV_CMD_MISSION_START","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_MAV_CMD_DO_MOTOR_TEST","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_message","controller",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::capabilities","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::handle_flight_termination","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::global_position_int_alt","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::global_position_int_relative_alt","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::high_latency_target_altitude","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::high_latency_tgt_heading","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::high_latency_tgt_dist","controller stateless",
"GCS_MAVLINK_Sub","controller degenerate","GCS_MAVLINK_Sub::high_latency_tgt_airspeed","controller stateless",
"AP_EFI_NWPMU","commander boundary small-class","AP_EFI_NWPMU::AP_EFI_NWPMU","constructor",
"AP_EFI_NWPMU","commander boundary small-class","AP_EFI_NWPMU::handle_frame","command collaborator",
"AP_EFI_NWPMU","commander boundary small-class","AP_EFI_NWPMU::update","wrapper stateless",
"AP_RCProtocol_FPort2","boundary","AP_RCProtocol_FPort2::AP_RCProtocol_FPort2","constructor",
"AP_RCProtocol_FPort2","boundary","AP_RCProtocol_FPort2::decode_control","wrapper",
"AP_RCProtocol_FPort2","boundary","AP_RCProtocol_FPort2::decode_downlink","controller",
"AP_RCProtocol_FPort2","boundary","AP_RCProtocol_FPort2::process_pulse","command",
"AP_RCProtocol_FPort2","boundary","AP_RCProtocol_FPort2::_process_byte","collaborator",
"AP_RCProtocol_FPort2","boundary","AP_RCProtocol_FPort2::check_checksum","wrapper stateless",
"AP_RCProtocol_FPort2","boundary","AP_RCProtocol_FPort2::process_byte","command",
"ChibiOS::IOMCU_DigitalSource","degenerate small-class","mode","empty",
"ChibiOS::IOMCU_DigitalSource","degenerate small-class","read","incidental",
"LR_MsgHandler_RFRH","boundary degenerate small-class","LR_MsgHandler_RFRH::process_message","wrapper stateless",
"AC_PI","data-provider","get_P","get",
"AC_PI","data-provider","get_I","get",
"AC_PI","data-provider","AC_PI::AC_PI","constructor",
"AC_PI","data-provider","AC_PI::update","property non-void-command",
"ShipSim","unclassified","ShipSim::ShipSim","constructor",
"ShipSim","unclassified","ShipSim::get_location","predicate controller",
"ShipSim","unclassified","ShipSim::get_ground_speed_adjustment","property non-void-command collaborator",
"ShipSim","unclassified","ShipSim::update","command",
"ShipSim","unclassified","ShipSim::send_report","command",
"AP_Frsky_SPortParser","entity boundary","AP_Frsky_SPortParser::should_process_packet","wrapper stateless",
"AP_Frsky_SPortParser","entity boundary","AP_Frsky_SPortParser::process_byte","predicate non-void-command",
"AP_Frsky_SPortParser","entity boundary","AP_Frsky_SPortParser::get_packet","predicate non-void-command collaborator",
"AP_DAL_RangeFinder","data-provider boundary","AP_DAL_RangeFinder::AP_DAL_RangeFinder","constructor",
"AP_DAL_RangeFinder","data-provider boundary","AP_DAL_RangeFinder::ground_clearance_cm_orient","get property controller",
"AP_DAL_RangeFinder","data-provider boundary","AP_DAL_RangeFinder::max_distance_cm_orient","get property controller",
"AP_DAL_RangeFinder","data-provider boundary","AP_DAL_RangeFinder::start_frame","command",
"AP_DAL_RangeFinder","data-provider boundary","AP_DAL_RangeFinder::has_orientation","predicate collaborator",
"AP_DAL_RangeFinder","data-provider boundary","AP_DAL_RangeFinder::get_backend","get property wrapper",
"AP_DAL_RangeFinder","data-provider boundary","AP_DAL_RangeFinder::handle_message","command collaborator",
"AP_DAL_RangeFinder","data-provider boundary","AP_DAL_RangeFinder::handle_message","command collaborator",
"AC_PID","unclassified","reset_filter","incidental",
"AC_PID","unclassified","kP","get collaborator",
"AC_PID","unclassified","kP","get collaborator",
"AC_PID","unclassified","kI","get collaborator",
"AC_PID","unclassified","kD","get collaborator",
"AC_PID","unclassified","kIMAX","get collaborator",
"AC_PID","unclassified","kPDMAX","get collaborator",
"AC_PID","unclassified","ff","get collaborator",
"AC_PID","unclassified","filt_T_hz","get collaborator",
"AC_PID","unclassified","filt_E_hz","get collaborator",
"AC_PID","unclassified","filt_D_hz","get collaborator",
"AC_PID","unclassified","slew_limit","get collaborator",
"AC_PID","unclassified","kDff","get collaborator",
"AC_PID","unclassified","imax","property",
"AC_PID","unclassified","pdmax","property",
"AC_PID","unclassified","kP","command",
"AC_PID","unclassified","kI","command",
"AC_PID","unclassified","kD","command",
"AC_PID","unclassified","ff","command",
"AC_PID","unclassified","imax","command",
"AC_PID","unclassified","pdmax","command",
"AC_PID","unclassified","kDff","command",
"AC_PID","unclassified","set_target_rate","set",
"AC_PID","unclassified","set_actual_rate","set",
"AC_PID","unclassified","set_slew_limit_scale","set",
"AC_PID","unclassified","get_slew_rate","property",
"AC_PID","unclassified","get_pid_info","get collaborator",
"AC_PID","unclassified","AC_PID::AC_PID","constructor",
"AC_PID","unclassified","AC_PID::filt_T_hz","command",
"AC_PID","unclassified","AC_PID::filt_E_hz","command",
"AC_PID","unclassified","AC_PID::filt_D_hz","command",
"AC_PID","unclassified","AC_PID::slew_limit","command",
"AC_PID","unclassified","AC_PID::set_notch_sample_rate","command collaborator",
"AC_PID","unclassified","AC_PID::update_all","property non-void-command",
"AC_PID","unclassified","AC_PID::update_error","property non-void-command",
"AC_PID","unclassified","AC_PID::update_i","command",
"AC_PID","unclassified","AC_PID::get_p","get",
"AC_PID","unclassified","AC_PID::get_i","get",
"AC_PID","unclassified","AC_PID::get_d","get",
"AC_PID","unclassified","AC_PID::get_ff","property",
"AC_PID","unclassified","AC_PID::reset_I","set",
"AC_PID","unclassified","AC_PID::load_gains","command",
"AC_PID","unclassified","AC_PID::save_gains","command",
"AC_PID","unclassified","AC_PID::operator()","command",
"AC_PID","unclassified","AC_PID::get_filt_T_alpha","property wrapper",
"AC_PID","unclassified","AC_PID::get_filt_E_alpha","property wrapper",
"AC_PID","unclassified","AC_PID::get_filt_D_alpha","property wrapper",
"AC_PID","unclassified","AC_PID::set_integrator","set",
"AC_PID","unclassified","AC_PID::relax_integrator","set",
"AP_Frsky_MAVlite_MAVliteToSPort","commander boundary","AP_Frsky_MAVlite_MAVliteToSPort::reset","command",
"AP_Frsky_MAVlite_MAVliteToSPort","commander boundary","AP_Frsky_MAVlite_MAVliteToSPort::update_checksum","set",
"AP_Frsky_MAVlite_MAVliteToSPort","commander boundary","AP_Frsky_MAVlite_MAVliteToSPort::process","predicate non-void-command collaborator",
"AP_Frsky_MAVlite_MAVliteToSPort","commander boundary","AP_Frsky_MAVlite_MAVliteToSPort::process_byte","command collaborator",
"AP_Frsky_MAVlite_MAVliteToSPort","commander boundary","reset","controller stateless",
"AC_P_1D","unclassified","get_error_min","get",
"AC_P_1D","unclassified","get_error_max","get",
"AC_P_1D","unclassified","save_gains","command",
"AC_P_1D","unclassified","kP","get collaborator",
"AC_P_1D","unclassified","kP","get collaborator",
"AC_P_1D","unclassified","get_error","get",
"AC_P_1D","unclassified","kP","command",
"AC_P_1D","unclassified","AC_P_1D::AC_P_1D","constructor",
"AC_P_1D","unclassified","AC_P_1D::update_all","property set",
"AC_P_1D","unclassified","AC_P_1D::set_limits","command",
"AC_P_1D","unclassified","AC_P_1D::set_error_limits","command",
"AC_P_2D","unclassified","update_all","wrapper stateless",
"AC_P_2D","unclassified","get_error_max","get",
"AC_P_2D","unclassified","save_gains","command",
"AC_P_2D","unclassified","kP","get collaborator",
"AC_P_2D","unclassified","kP","get collaborator",
"AC_P_2D","unclassified","get_error","get collaborator",
"AC_P_2D","unclassified","kP","command",
"AC_P_2D","unclassified","AC_P_2D::AC_P_2D","constructor",
"AC_P_2D","unclassified","AC_P_2D::update_all","property set collaborator",
"AC_P_2D","unclassified","AC_P_2D::set_limits","command",
"AC_P_2D","unclassified","AC_P_2D::set_error_max","set",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::AP_Compass_DroneCAN","constructor",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::subscribe_msgs","controller stateless",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::probe","property controller",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::init","predicate wrapper",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::get_dronecan_backend","controller stateless",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::handle_mag_msg","wrapper",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::handle_magnetic_field","command collaborator",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::handle_magnetic_field_2","command collaborator",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::handle_magnetic_field_hires","controller stateless",
"AP_Compass_DroneCAN","unclassified","AP_Compass_DroneCAN::read","wrapper",
"RC_Channels_PIDTest","data-provider small-class","channel","property collaborator",
"RC_Channels_PIDTest","data-provider small-class","flight_mode_channel_number","incidental",
"AC_PrecLand_Backend","data-provider","AC_PrecLand_Backend","constructor",
"AC_PrecLand_Backend","data-provider","~AC_PrecLand_Backend","destructor",
"AC_PrecLand_Backend","data-provider","get_los_body","predicate non-void-command collaborator",
"AC_PrecLand_Backend","data-provider","los_meas_time_ms","get",
"AC_PrecLand_Backend","data-provider","have_los_meas","get",
"AC_PrecLand_Backend","data-provider","distance_to_target","get",
"AC_PrecLand_Backend","data-provider","handle_msg","empty",
"AC_PrecLand_Backend","data-provider","get_bus","property",
"AP_Invensensev2_AuxiliaryBusSlave","unclassified","AP_Invensensev2_AuxiliaryBusSlave::AP_Invensensev2_AuxiliaryBusSlave","constructor",
"AP_Invensensev2_AuxiliaryBusSlave","unclassified","AP_Invensensev2_AuxiliaryBusSlave::_set_passthrough","property non-void-command",
"AP_Invensensev2_AuxiliaryBusSlave","unclassified","AP_Invensensev2_AuxiliaryBusSlave::passthrough_read","property non-void-command",
"AP_Invensensev2_AuxiliaryBusSlave","unclassified","AP_Invensensev2_AuxiliaryBusSlave::passthrough_write","property non-void-command",
"AP_Invensensev2_AuxiliaryBusSlave","unclassified","AP_Invensensev2_AuxiliaryBusSlave::read","get property non-void-command",
"ModeInitializing","degenerate","mode_number","collaborator incidental",
"ModeInitializing","degenerate","name","incidental",
"ModeInitializing","degenerate","name4","incidental",
"ModeInitializing","degenerate","_enter","incidental",
"ModeInitializing","degenerate","update","empty",
"ModeInitializing","degenerate","allows_throttle_nudging","incidental",
"ModeInitializing","degenerate","does_auto_throttle","incidental",
"ModeInitializing","degenerate","_pre_arm_checks","incidental",
"AC_PrecLand_Companion","commander","AC_PrecLand_Companion::init","set",
"AC_PrecLand_Companion","commander","AC_PrecLand_Companion::update","set",
"AC_PrecLand_Companion","commander","AC_PrecLand_Companion::handle_msg","command",
"BsPair","data-provider small-class","BsPair","constructor",
"BsPair","data-provider small-class","BsPair","constructor",
"BsPair","data-provider small-class","isValid","predicate",
"AC_PrecLand_SITL_Gazebo","commander small-class","AC_PrecLand_SITL_Gazebo::AC_PrecLand_SITL_Gazebo","constructor",
"AC_PrecLand_SITL_Gazebo","commander small-class","AC_PrecLand_SITL_Gazebo::init","command",
"AC_PrecLand_SITL_Gazebo","commander small-class","AC_PrecLand_SITL_Gazebo::update","command",
"AC_PrecLand_StateMachine","entity boundary","AC_PrecLand_StateMachine","constructor",
"AC_PrecLand_StateMachine","entity boundary","AC_PrecLand_StateMachine::init","set collaborator",
"AC_PrecLand_StateMachine","entity boundary","AC_PrecLand_StateMachine::reset_failed_landing_statemachine","command",
"AC_PrecLand_StateMachine","entity boundary","AC_PrecLand_StateMachine::update","property non-void-command collaborator",
"AC_PrecLand_StateMachine","entity boundary","AC_PrecLand_StateMachine::get_target_lost_actions","property non-void-command collaborator",
"AC_PrecLand_StateMachine","entity boundary","AC_PrecLand_StateMachine::retry_landing","property non-void-command collaborator",
"AC_PrecLand_StateMachine","entity boundary","AC_PrecLand_StateMachine::get_failsafe_actions","property non-void-command collaborator",
"AC_PrecLand_StateMachine","entity boundary","init","empty",
"AC_PrecLand_StateMachine","entity boundary","init","wrapper stateless",
"AC_PrecLand_StateMachine","entity boundary","init","wrapper stateless",
"AP_Logger_MAVLink","unclassified","logging_started","get",
"AP_Logger_MAVLink","unclassified","CardInserted","incidental",
"AP_Logger_MAVLink","unclassified","EraseAll","empty",
"AP_Logger_MAVLink","unclassified","PrepForArming","empty",
"AP_Logger_MAVLink","unclassified","find_last_log","incidental",
"AP_Logger_MAVLink","unclassified","get_log_boundaries","empty",
"AP_Logger_MAVLink","unclassified","get_log_info","empty",
"AP_Logger_MAVLink","unclassified","get_log_data","incidental",
"AP_Logger_MAVLink","unclassified","get_num_logs","incidental",
"AP_Logger_MAVLink","unclassified","vehicle_was_disarmed","empty",
"AP_Logger_MAVLink","unclassified","logging_enabled","incidental",
"AP_Logger_MAVLink","unclassified","start_new_log","incidental",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::AP_Logger_MAVLink","constructor",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::Init","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::logging_failed","predicate",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::bufferspace_available","property non-void-command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::remaining_space_in_current_block","property",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::enqueue_block","collaborator incidental",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::dequeue_seqno","collaborator incidental",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::free_seqno_from_queue","predicate non-void-command collaborator",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::WritesOK","predicate",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::_WritePrioritisedBlock","predicate non-void-command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::next_block","property non-void-command collaborator",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::free_all_blocks","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::stop_logging","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::handle_ack","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::remote_log_block_status_msg","command collaborator",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::handle_retry","collaborator",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::stats_init","set",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::stats_reset","incidental",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::Write_logger_MAV","wrapper stateless",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::stats_log","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::stack_size","collaborator incidental",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::queue_size","property non-void-command collaborator",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::stats_collect","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::send_log_blocks_from_queue","predicate non-void-command collaborator",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::push_log_blocks","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::do_resends","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::periodic_10Hz","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::periodic_1Hz","command",
"AP_Logger_MAVLink","unclassified","AP_Logger_MAVLink::send_log_block","predicate non-void-command collaborator",
"PosVelEKF","data-provider","getPos","get",
"PosVelEKF","data-provider","getVel","get",
"PosVelEKF","data-provider","PosVelEKF::init","command",
"PosVelEKF","data-provider","PosVelEKF::predict","wrapper",
"PosVelEKF","data-provider","PosVelEKF::fusePos","wrapper",
"PosVelEKF","data-provider","PosVelEKF::getPosNIS","property",
"AP_HMC5843_BusDriver","degenerate","~AP_HMC5843_BusDriver","destructor",
"AP_HMC5843_BusDriver","degenerate","configure","incidental",
"AP_HMC5843_BusDriver","degenerate","start_measurements","incidental",
"AP_HMC5843_BusDriver","degenerate","set_retries","empty",
"Webots","commander boundary","Webots::Webots","constructor",
"Webots","commander boundary","Webots::parse_sensors","predicate set",
"Webots","commander boundary","Webots::connect_sockets","predicate non-void-command",
"Webots","commander boundary","Webots::sensors_receive","predicate non-void-command",
"Webots","commander boundary","Webots::output_rover","command collaborator",
"Webots","commander boundary","Webots::output_tricopter","command collaborator",
"Webots","commander boundary","Webots::output_pwm","command collaborator",
"Webots","commander boundary","Webots::output","command collaborator",
"Webots","commander boundary","Webots::update","command collaborator",
"Webots","commander boundary","Webots::report_FPS","empty",
"AP_Generator_IE_FuelCell","unclassified","healthy","get",
"AP_Generator_IE_FuelCell","unclassified","log_write","empty",
"AP_Generator_IE_FuelCell","unclassified","check_for_warning_code","incidental",
"AP_Generator_IE_FuelCell","unclassified","get_mav_severity","collaborator incidental",
"AP_Generator_IE_FuelCell","unclassified","AP_Generator_IE_FuelCell::init","command",
"AP_Generator_IE_FuelCell","unclassified","AP_Generator_IE_FuelCell::update","command",
"AP_Generator_IE_FuelCell","unclassified","AP_Generator_IE_FuelCell::decode","get predicate non-void-command",
"AP_Generator_IE_FuelCell","unclassified","AP_Generator_IE_FuelCell::pre_arm_check","predicate",
"AP_Generator_IE_FuelCell","unclassified","AP_Generator_IE_FuelCell::check_status","unclassified",
"AP_Generator_IE_FuelCell","unclassified","AP_Generator_IE_FuelCell::check_for_err_code_if_changed","command",
"AP_Generator_IE_FuelCell","unclassified","AP_Generator_IE_FuelCell::is_running","predicate",
"AP_Generator_IE_FuelCell","unclassified","AP_Generator_IE_FuelCell::update_state_msg","set collaborator",
"AC_Loiter","unclassified","get_pilot_desired_acceleration","property wrapper",
"AC_Loiter","unclassified","clear_pilot_desired_acceleration","command",
"AC_Loiter","unclassified","get_distance_to_target","property",
"AC_Loiter","unclassified","get_bearing_to_target","property",
"AC_Loiter","unclassified","get_roll","property",
"AC_Loiter","unclassified","get_pitch","property",
"AC_Loiter","unclassified","get_thrust_vector","property collaborator",
"AC_Loiter","unclassified","AC_Loiter::AC_Loiter","constructor",
"AC_Loiter","unclassified","AC_Loiter::init_target","command collaborator",
"AC_Loiter","unclassified","AC_Loiter::init_target","command",
"AC_Loiter","unclassified","AC_Loiter::soften_for_landing","command",
"AC_Loiter","unclassified","AC_Loiter::set_pilot_desired_acceleration","command collaborator",
"AC_Loiter","unclassified","AC_Loiter::get_stopping_point_xy","void-accessor collaborator",
"AC_Loiter","unclassified","AC_Loiter::get_angle_max_cd","property",
"AC_Loiter","unclassified","AC_Loiter::update","command",
"AC_Loiter","unclassified","AC_Loiter::sanity_check_params","command",
"AC_Loiter","unclassified","AC_Loiter::calc_desired_velocity","command collaborator",
"DroneCAN_RGB_LED","pure-controller degenerate small-class","DroneCAN_RGB_LED::DroneCAN_RGB_LED","constructor",
"DroneCAN_RGB_LED","pure-controller degenerate small-class","DroneCAN_RGB_LED::DroneCAN_RGB_LED","constructor",
"DroneCAN_RGB_LED","pure-controller degenerate small-class","DroneCAN_RGB_LED::init","incidental",
"DroneCAN_RGB_LED","pure-controller degenerate small-class","DroneCAN_RGB_LED::hw_set_rgb","controller stateless",
"Thread","unclassified","Thread","constructor",
"Thread","unclassified","~Thread","destructor",
"Thread","unclassified","is_started","get",
"Thread","unclassified","set_auto_free","set",
"Thread","unclassified","stop","incidental",
"Thread","unclassified","Thread::_run_trampoline","controller stateless",
"Thread","unclassified","Thread::_run","predicate wrapper",
"Thread","unclassified","Thread::_poison_stack","wrapper stateless",
"Thread","unclassified","Thread::get_stack_usage","incidental",
"Thread","unclassified","Thread::start","predicate set",
"Thread","unclassified","Thread::is_current_thread","predicate wrapper",
"Thread","unclassified","Thread::join","predicate wrapper",
"Thread","unclassified","Thread::set_stack_size","predicate set",
"Compass_PerMotor","unclassified","enabled","predicate",
"Compass_PerMotor","unclassified","set_voltage","set",
"Compass_PerMotor","unclassified","Compass_PerMotor::Compass_PerMotor","constructor",
"Compass_PerMotor","unclassified","Compass_PerMotor::scaled_output","property set",
"Compass_PerMotor","unclassified","Compass_PerMotor::calibration_start","command",
"Compass_PerMotor","unclassified","Compass_PerMotor::calibration_update","command",
"Compass_PerMotor","unclassified","Compass_PerMotor::calibration_end","set collaborator",
"Compass_PerMotor","unclassified","Compass_PerMotor::compensate","void-accessor command collaborator",
"AP_RangeFinder_LeddarVu8","degenerate","initial_baudrate","incidental",
"AP_RangeFinder_LeddarVu8","degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_LeddarVu8","degenerate","read_timeout_ms","incidental",
"AP_RangeFinder_LeddarVu8","degenerate","AP_RangeFinder_LeddarVu8::get_reading","predicate non-void-command",
"AP_RangeFinder_LeddarVu8","degenerate","AP_RangeFinder_LeddarVu8::get_sensor_address","incidental",
"AP_RangeFinder_LeddarVu8","degenerate","AP_RangeFinder_LeddarVu8::request_distances","command",
"AP_RangeFinder_LeddarVu8","degenerate","AP_RangeFinder_LeddarVu8::parse_byte","predicate non-void-command",
"AP_BattMonitor_Backend","data-provider","~AP_BattMonitor_Backend","destructor",
"AP_BattMonitor_Backend","data-provider","init","empty",
"AP_BattMonitor_Backend","data-provider","has_time_remaining","incidental",
"AP_BattMonitor_Backend","data-provider","has_consumed_energy","incidental",
"AP_BattMonitor_Backend","data-provider","has_cell_voltages","incidental",
"AP_BattMonitor_Backend","data-provider","has_temperature","incidental",
"AP_BattMonitor_Backend","data-provider","get_cycle_count","incidental",
"AP_BattMonitor_Backend","data-provider","get_mavlink_fault_bitmask","incidental",
"AP_BattMonitor_Backend","data-provider","mppt_set_powered_state","empty",
"AP_BattMonitor_Backend","data-provider","option_is_set","predicate collaborator",
"AP_BattMonitor_Backend","data-provider","handle_scripting","collaborator incidental",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::AP_BattMonitor_Backend","constructor",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::capacity_remaining_pct","predicate wrapper",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::update_resistance_estimate","command",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::get_state_of_health_pct","predicate",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::voltage_resting_estimate","property wrapper",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::update_failsafes","property non-void-command collaborator",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::arming_checks","predicate",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::check_failsafe_types","void-accessor",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::update_esc_telem_outbound","command",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::get_temperature","predicate",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::reset_remaining","predicate non-void-command",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::update_consumed","wrapper stateless",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::Log_Write_BAT","unclassified",
"AP_BattMonitor_Backend","data-provider","AP_BattMonitor_Backend::Log_Write_BCL","unclassified",
"AP_PitchController","unclassified","set_ff_scale","set",
"AP_PitchController","unclassified","decay_I","unclassified",
"AP_PitchController","unclassified","get_pid_info","get collaborator",
"AP_PitchController","unclassified","set_notch_sample_rate","command",
"AP_PitchController","unclassified","kP","property non-void-command collaborator",
"AP_PitchController","unclassified","kI","property non-void-command collaborator",
"AP_PitchController","unclassified","kD","property non-void-command collaborator",
"AP_PitchController","unclassified","kFF","property non-void-command collaborator",
"AP_PitchController","unclassified","tau","get collaborator",
"AP_PitchController","unclassified","AP_PitchController::AP_PitchController","constructor",
"AP_PitchController","unclassified","AP_PitchController::_get_rate_out","property non-void-command",
"AP_PitchController","unclassified","AP_PitchController::get_rate_out","property non-void-command",
"AP_PitchController","unclassified","AP_PitchController::_get_coordination_rate_offset","property controller",
"AP_PitchController","unclassified","AP_PitchController::get_servo_out","property non-void-command",
"AP_PitchController","unclassified","AP_PitchController::reset_I","command",
"AP_PitchController","unclassified","AP_PitchController::convert_pid","command",
"AP_PitchController","unclassified","AP_PitchController::autotune_start","command",
"AP_PitchController","unclassified","AP_PitchController::autotune_restore","command",
"AP_OADijkstra","boundary","set_fence_margin","set",
"AP_OADijkstra","boundary","recalculate_path","set",
"AP_OADijkstra","boundary","get_shortest_path_numpoints","get",
"AP_OADijkstra","boundary","Write_OADijkstra","empty",
"AP_OADijkstra","boundary","Write_Visgraph_point","empty",
"AP_OADijkstra","boundary","AP_OADijkstra::Write_OADijkstra","wrapper stateless",
"AP_OADijkstra","boundary","AP_OADijkstra::Write_Visgraph_point","wrapper stateless",
"AP_OADijkstra","boundary","AP_OADijkstra::AP_OADijkstra","constructor",
"AP_OADijkstra","boundary","AP_OADijkstra::update","property non-void-command collaborator",
"AP_OADijkstra","boundary","AP_OADijkstra::some_fences_enabled","controller stateless",
"AP_OADijkstra","boundary","AP_OADijkstra::get_error_msg","collaborator incidental",
"AP_OADijkstra","boundary","AP_OADijkstra::report_error","command collaborator",
"AP_OADijkstra","boundary","AP_OADijkstra::check_inclusion_polygon_updated","predicate controller",
"AP_OADijkstra","boundary","AP_OADijkstra::create_inclusion_polygon_with_margin","predicate non-void-command collaborator",
"AP_OADijkstra","boundary","AP_OADijkstra::check_exclusion_polygon_updated","predicate controller",
"AP_OADijkstra","boundary","AP_OADijkstra::create_exclusion_polygon_with_margin","predicate non-void-command collaborator",
"AP_OADijkstra","boundary","AP_OADijkstra::check_exclusion_circle_updated","predicate controller",
"AP_OADijkstra","boundary","AP_OADijkstra::create_exclusion_circle_with_margin","predicate non-void-command collaborator",
"AP_OADijkstra","boundary","AP_OADijkstra::total_numpoints","property",
"AP_OADijkstra","boundary","AP_OADijkstra::get_point","predicate collaborator",
"AP_OADijkstra","boundary","AP_OADijkstra::intersects_fence","controller stateless",
"AP_OADijkstra","boundary","AP_OADijkstra::create_fence_visgraph","predicate non-void-command collaborator",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::AP_Baro_BMP388","constructor",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::probe","controller stateless",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::init","predicate non-void-command",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::timer","command",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::update","command",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::scale_calibration_data","incidental",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::update_temperature","set",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::update_pressure","command",
"AP_Baro_BMP388","commander","AP_Baro_BMP388::read_registers","predicate non-void-command",
"AP_Frsky_Backend","degenerate","AP_Frsky_Backend","constructor",
"AP_Frsky_Backend","degenerate","~AP_Frsky_Backend","destructor",
"AP_Frsky_Backend","degenerate","initial_baud","incidental",
"AP_Frsky_Backend","degenerate","get_telem_data","incidental",
"AP_Frsky_Backend","degenerate","set_telem_data","incidental",
"AP_Frsky_Backend","degenerate","queue_text_message","empty",
"AP_Frsky_Backend","degenerate","AP_Frsky_Backend::init","predicate non-void-command",
"AP_Frsky_Backend","degenerate","AP_Frsky_Backend::init_serial_port","predicate non-void-command",
"AP_Frsky_Backend","degenerate","AP_Frsky_Backend::loop","command",
"AP_Frsky_Backend","degenerate","AP_Frsky_Backend::calc_nav_alt","wrapper stateless",
"AP_Frsky_Backend","degenerate","AP_Frsky_Backend::format_gps","incidental",
"AP_Frsky_Backend","degenerate","AP_Frsky_Backend::calc_gps_position","command",
"AP_Frsky_Backend","degenerate","AP_Frsky_Backend::calc_rpm","controller stateless",
"AP_RollController","unclassified","set_ff_scale","set",
"AP_RollController","unclassified","decay_I","unclassified",
"AP_RollController","unclassified","get_pid_info","get collaborator",
"AP_RollController","unclassified","set_notch_sample_rate","command",
"AP_RollController","unclassified","kP","property non-void-command collaborator",
"AP_RollController","unclassified","kI","property non-void-command collaborator",
"AP_RollController","unclassified","kD","property non-void-command collaborator",
"AP_RollController","unclassified","kFF","property non-void-command collaborator",
"AP_RollController","unclassified","tau","get collaborator",
"AP_RollController","unclassified","AP_RollController::AP_RollController","constructor",
"AP_RollController","unclassified","AP_RollController::_get_rate_out","property non-void-command",
"AP_RollController","unclassified","AP_RollController::get_rate_out","property non-void-command",
"AP_RollController","unclassified","AP_RollController::get_servo_out","property non-void-command",
"AP_RollController","unclassified","AP_RollController::reset_I","command",
"AP_RollController","unclassified","AP_RollController::convert_pid","command",
"AP_RollController","unclassified","AP_RollController::autotune_start","command",
"AP_RollController","unclassified","AP_RollController::autotune_restore","command",
"AP_AK8963_BusDriver","degenerate small-class","~AP_AK8963_BusDriver","destructor",
"AP_AK8963_BusDriver","degenerate small-class","configure","incidental",
"AP_AK8963_BusDriver","degenerate small-class","start_measurements","incidental",
"ProfiLED_SPI","commander","ProfiLED_SPI::ProfiLED_SPI","constructor",
"ProfiLED_SPI","commander","ProfiLED_SPI::init","predicate non-void-command",
"ProfiLED_SPI","commander","ProfiLED_SPI::rgb_set_id","set",
"ProfiLED_SPI","commander","ProfiLED_SPI::hw_set_rgb","predicate set",
"ProfiLED_SPI","commander","ProfiLED_SPI::_timer","set",
"ProfiLED_SPI","commander","ProfiLED_SPI::update_led_strip","command",
"AR_PosControl","unclassified","set_reversed","set",
"AR_PosControl","unclassified","get_reversed","get",
"AR_PosControl","unclassified","get_speed_max","get",
"AR_PosControl","unclassified","get_accel_max","get",
"AR_PosControl","unclassified","get_lat_accel_max","get",
"AR_PosControl","unclassified","get_jerk_max","get",
"AR_PosControl","unclassified","get_desired_speed","get",
"AR_PosControl","unclassified","get_desired_turn_rate_rads","get",
"AR_PosControl","unclassified","get_desired_lat_accel","get",
"AR_PosControl","unclassified","get_pos_target","get collaborator",
"AR_PosControl","unclassified","get_pos_p","get collaborator",
"AR_PosControl","unclassified","get_vel_pid","get collaborator",
"AR_PosControl","unclassified","AR_PosControl::AR_PosControl","constructor",
"AR_PosControl","unclassified","AR_PosControl::update","command",
"AR_PosControl","unclassified","AR_PosControl::is_active","predicate wrapper",
"AR_PosControl","unclassified","AR_PosControl::set_limits","command",
"AR_PosControl","unclassified","AR_PosControl::set_turn_params","set",
"AR_PosControl","unclassified","AR_PosControl::init","predicate non-void-command collaborator",
"AR_PosControl","unclassified","AR_PosControl::input_pos_target","command collaborator",
"AR_PosControl","unclassified","AR_PosControl::input_pos_vel_target","command collaborator",
"AR_PosControl","unclassified","AR_PosControl::input_pos_vel_accel_target","command",
"AR_PosControl","unclassified","AR_PosControl::set_pos_vel_accel_target","command collaborator",
"AR_PosControl","unclassified","AR_PosControl::get_desired_velocity","get property wrapper",
"AR_PosControl","unclassified","AR_PosControl::get_desired_accel","get property wrapper",
"AR_PosControl","unclassified","AR_PosControl::get_pos_error","property collaborator",
"AR_PosControl","unclassified","AR_PosControl::get_srate","void-accessor command",
"AR_PosControl","unclassified","AR_PosControl::write_log","command collaborator",
"AR_PosControl","unclassified","AR_PosControl::init_ekf_xy_reset","set collaborator",
"AR_PosControl","unclassified","AR_PosControl::handle_ekf_xy_reset","command collaborator",
"AP_ADC_ADS1115","unclassified","get_channels_number","get",
"AP_ADC_ADS1115","unclassified","AP_ADC_ADS1115::AP_ADC_ADS1115","constructor",
"AP_ADC_ADS1115","unclassified","AP_ADC_ADS1115::~AP_ADC_ADS1115","destructor",
"AP_ADC_ADS1115","unclassified","AP_ADC_ADS1115::init","predicate non-void-command",
"AP_ADC_ADS1115","unclassified","AP_ADC_ADS1115::_start_conversion","predicate non-void-command collaborator",
"AP_ADC_ADS1115","unclassified","AP_ADC_ADS1115::read","property",
"AP_ADC_ADS1115","unclassified","AP_ADC_ADS1115::_convert_register_data_to_mv","property wrapper",
"AP_ADC_ADS1115","unclassified","AP_ADC_ADS1115::_update","command",
"AP_BoardLED","lazy-class degenerate","AP_BoardLED::init","controller stateless",
"AP_BoardLED","lazy-class degenerate","AP_BoardLED::update","set",
"AP_BoardLED","lazy-class degenerate","AP_BoardLED::init","incidental",
"AP_BoardLED","lazy-class degenerate","AP_BoardLED::update","incidental",
"SoloGimbal_Parameters","commander boundary","set_channel","set collaborator",
"SoloGimbal_Parameters","commander boundary","update","wrapper stateless",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::SoloGimbal_Parameters","constructor",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::reset","command",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::get_param_name","collaborator incidental",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::fetch_params","incidental",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::initialized","incidental",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::received_all","incidental",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::get_param","incidental",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::set_param","set",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::update","command",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::handle_param_value","set collaborator",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::get_accel_bias","wrapper stateless",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::get_accel_gain","property non-void-command collaborator",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::set_accel_bias","command collaborator",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::set_accel_gain","command collaborator",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::get_gyro_bias","wrapper stateless",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::set_gyro_bias","command collaborator",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::get_joint_bias","wrapper stateless",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::get_K_rate","wrapper stateless",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::flash","set",
"SoloGimbal_Parameters","commander boundary","SoloGimbal_Parameters::flashing","predicate",
"SoloGimbal_Parameters","commander boundary","reset","controller stateless",
"AP_Avoidance","boundary","enable","command",
"AP_Avoidance","boundary","disable","command",
"AP_Avoidance","boundary","mav_avoidance_action","get collaborator",
"AP_Avoidance","boundary","AP_Avoidance::AP_Avoidance","constructor",
"AP_Avoidance","boundary","AP_Avoidance::init","command",
"AP_Avoidance","boundary","AP_Avoidance::deinit","command",
"AP_Avoidance","boundary","AP_Avoidance::check_startup","predicate non-void-command",
"AP_Avoidance","boundary","AP_Avoidance::add_obstacle","set collaborator",
"AP_Avoidance","boundary","AP_Avoidance::add_obstacle","command collaborator",
"AP_Avoidance","boundary","AP_Avoidance::src_id_for_adsb_vehicle","collaborator incidental",
"AP_Avoidance","boundary","AP_Avoidance::get_adsb_samples","command collaborator",
"AP_Avoidance","boundary","AP_Avoidance::update_threat_level","void-accessor controller",
"AP_Avoidance","boundary","AP_Avoidance::current_threat_level","get property collaborator",
"AP_Avoidance","boundary","AP_Avoidance::send_collision_all","wrapper stateless",
"AP_Avoidance","boundary","AP_Avoidance::handle_threat_gcs_notify","void-accessor collaborator",
"AP_Avoidance","boundary","AP_Avoidance::obstacle_is_more_serious_threat","predicate collaborator",
"AP_Avoidance","boundary","AP_Avoidance::check_for_threats","command",
"AP_Avoidance","boundary","AP_Avoidance::most_serious_threat","property collaborator",
"AP_Avoidance","boundary","AP_Avoidance::update","command",
"AP_Avoidance","boundary","AP_Avoidance::handle_avoidance_local","command collaborator",
"AP_Avoidance","boundary","AP_Avoidance::handle_msg","command collaborator",
"AP_Avoidance","boundary","AP_Avoidance::get_vector_perpendicular","predicate collaborator",
"AP_Avoidance","boundary","AP_Avoidance::perpendicular_xyz","controller stateless",
"AP_Avoidance","boundary","AP_Avoidance::perpendicular_xy","controller stateless",
"AP_Avoidance","boundary","update","wrapper stateless",
"AP_Avoidance","boundary","init","empty",
"AP_Avoidance","boundary","init","wrapper stateless",
"AP_Avoidance","boundary","init","wrapper stateless",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::detect","wrapper stateless",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::init","predicate set",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::update","command",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::send_packet","command collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::request_packet","command collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::handle_packet_XP","command collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::handle_ack","command collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::handle_adsb_in_msg","command collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::parse_byte_XP","predicate non-void-command",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::checksum_generate_XP","wrapper stateless",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::checksum_verify_XP","predicate collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::checksum_assign_XP","void-accessor command collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::send_msg","command collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::send_msg_Installation","command",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::send_msg_PreFlight","command collaborator",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::send_msg_Operating","command",
"AP_ADSB_Sagetech","entity commander boundary","AP_ADSB_Sagetech::send_msg_GPS","command collaborator",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::detect","wrapper stateless",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::init","predicate set",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::update","command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::handle_packet","command collaborator",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::parse_byte","predicate non-void-command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::msg_write","unclassified",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::auto_config_operating","command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::auto_config_installation","command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::auto_config_flightid","command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::handle_ack","set collaborator",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::handle_svr","command collaborator",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::handle_msr","command collaborator",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::send_data_req","command collaborator",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::send_install_msg","command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::send_flight_id_msg","command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::send_operating_msg","unclassified",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::send_gps_msg","command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::send_targetreq_msg","command",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::convert_emitter_type_to_sg","collaborator incidental",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::convert_sg_emitter_type_to_adsb","collaborator incidental",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::convert_airspeed_knots_to_sg","collaborator incidental",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::populate_op_altitude","controller stateless",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::populate_op_climbrate","controller stateless",
"AP_ADSB_Sagetech_MXS","commander","AP_ADSB_Sagetech_MXS::populate_op_airspeed_and_heading","controller stateless",
"CompassCalibratorAccess","boundary degenerate small-class","auto_rotation_index_test","wrapper stateless",
"CompassCalibratorAccess","boundary degenerate small-class","right_angle_rotation_test","wrapper stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","~AP_Airspeed_DLVR","destructor",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","AP_Airspeed_DLVR::AP_Airspeed_DLVR","constructor",
"AP_Airspeed_DLVR","controller lazy-class degenerate","AP_Airspeed_DLVR::probe","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","AP_Airspeed_DLVR::setup","command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","AP_Airspeed_DLVR::init","predicate set",
"AP_Airspeed_DLVR","controller lazy-class degenerate","AP_Airspeed_DLVR::timer","command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","AP_Airspeed_DLVR::get_differential_pressure","predicate non-void-command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","AP_Airspeed_DLVR::get_temperature","predicate non-void-command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","set",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","empty",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","empty",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","empty",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","empty",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","command",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_Airspeed_DLVR","controller lazy-class degenerate","setup","controller stateless",
"AP_GPS_NOVA","unclassified","highest_supported_status","collaborator incidental",
"AP_GPS_NOVA","unclassified","name","incidental",
"AP_GPS_NOVA","unclassified","AP_GPS_NOVA::AP_GPS_NOVA","constructor",
"AP_GPS_NOVA","unclassified","AP_GPS_NOVA::read","predicate non-void-command",
"AP_GPS_NOVA","unclassified","AP_GPS_NOVA::parse","predicate non-void-command",
"AP_GPS_NOVA","unclassified","AP_GPS_NOVA::process_message","predicate non-void-command collaborator",
"AP_ESC_Telem_SITL","commander boundary small-class","AP_ESC_Telem_SITL::AP_ESC_Telem_SITL","constructor",
"AP_ESC_Telem_SITL","commander boundary small-class","AP_ESC_Telem_SITL::update","command collaborator",
"AP_ESC_Telem_SITL","commander boundary small-class","update","wrapper stateless",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::detect","wrapper stateless",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::init","predicate",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::update","command",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::handle_msg","command collaborator",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::get_hardware_name","incidental",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::send_Transponder_Control","set",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::send_GPS_Data","command collaborator",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::hostTransmit","predicate non-void-command",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::request_msg","predicate non-void-command collaborator",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::gdl90Transmit","property non-void-command",
"AP_ADSB_uAvionix_UCP","unclassified","AP_ADSB_uAvionix_UCP::parseByte","wrapper stateless",
"AP_DAL_Compass","data-provider","use_for_yaw","get",
"AP_DAL_Compass","data-provider","healthy","get",
"AP_DAL_Compass","data-provider","get_offsets","get collaborator",
"AP_DAL_Compass","data-provider","have_scale_factor","get",
"AP_DAL_Compass","data-provider","auto_declination_enabled","get",
"AP_DAL_Compass","data-provider","get_count","get",
"AP_DAL_Compass","data-provider","get_declination","get",
"AP_DAL_Compass","data-provider","available","get",
"AP_DAL_Compass","data-provider","get_num_enabled","get",
"AP_DAL_Compass","data-provider","learn_offsets_enabled","get",
"AP_DAL_Compass","data-provider","last_update_usec","get",
"AP_DAL_Compass","data-provider","get_field","get collaborator",
"AP_DAL_Compass","data-provider","consistent","get",
"AP_DAL_Compass","data-provider","get_first_usable","get",
"AP_DAL_Compass","data-provider","handle_message","set collaborator",
"AP_DAL_Compass","data-provider","handle_message","set collaborator",
"AP_DAL_Compass","data-provider","AP_DAL_Compass::AP_DAL_Compass","constructor",
"AP_DAL_Compass","data-provider","AP_DAL_Compass::start_frame","command collaborator",
"AP_BattMonitor_FuelFlow","commander lazy-class degenerate","has_consumed_energy","incidental",
"AP_BattMonitor_FuelFlow","commander lazy-class degenerate","has_current","incidental",
"AP_BattMonitor_FuelFlow","commander lazy-class degenerate","init","empty",
"AP_BattMonitor_FuelFlow","commander lazy-class degenerate","AP_BattMonitor_FuelFlow::AP_BattMonitor_FuelFlow","constructor",
"AP_BattMonitor_FuelFlow","commander lazy-class degenerate","AP_BattMonitor_FuelFlow::irq_handler","incidental",
"AP_BattMonitor_FuelFlow","commander lazy-class degenerate","AP_BattMonitor_FuelFlow::read","set",
"AP_AHRS_Backend","data-provider degenerate","AP_AHRS_Backend","constructor",
"AP_AHRS_Backend","data-provider degenerate","~AP_AHRS_Backend","destructor",
"AP_AHRS_Backend","data-provider degenerate","get_primary_core_index","incidental",
"AP_AHRS_Backend","data-provider degenerate","get_primary_accel_index","wrapper stateless",
"AP_AHRS_Backend","data-provider degenerate","get_primary_gyro_index","wrapper stateless",
"AP_AHRS_Backend","data-provider degenerate","attitudes_consistent","incidental",
"AP_AHRS_Backend","data-provider degenerate","check_lane_switch","empty",
"AP_AHRS_Backend","data-provider degenerate","using_noncompass_for_yaw","incidental",
"AP_AHRS_Backend","data-provider degenerate","using_extnav_for_yaw","incidental",
"AP_AHRS_Backend","data-provider degenerate","request_yaw_reset","empty",
"AP_AHRS_Backend","data-provider degenerate","set_posvelyaw_source_set","empty",
"AP_AHRS_Backend","data-provider degenerate","get_hagl","incidental",
"AP_AHRS_Backend","data-provider degenerate","airspeed_estimate","incidental",
"AP_AHRS_Backend","data-provider degenerate","airspeed_estimate","incidental",
"AP_AHRS_Backend","data-provider degenerate","airspeed_estimate_true","predicate",
"AP_AHRS_Backend","data-provider degenerate","airspeed_vector_true","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_velocity_NED","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_mag_field_correction","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_mag_field_NED","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_mag_offsets","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","set_origin","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_relative_position_NED_origin","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_relative_position_NE_origin","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_relative_position_D_origin","incidental",
"AP_AHRS_Backend","data-provider degenerate","groundspeed","wrapper stateless",
"AP_AHRS_Backend","data-provider degenerate","have_inertial_nav","incidental",
"AP_AHRS_Backend","data-provider degenerate","initialised","incidental",
"AP_AHRS_Backend","data-provider degenerate","started","predicate",
"AP_AHRS_Backend","data-provider degenerate","getLastYawResetAngle","incidental",
"AP_AHRS_Backend","data-provider degenerate","getLastPosNorthEastReset","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","getLastVelNorthEastReset","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","getLastPosDownReset","incidental",
"AP_AHRS_Backend","data-provider degenerate","resetHeightDatum","incidental",
"AP_AHRS_Backend","data-provider degenerate","get_innovations","incidental",
"AP_AHRS_Backend","data-provider degenerate","get_filter_status","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_variances","incidental",
"AP_AHRS_Backend","data-provider degenerate","get_vel_innovations_and_variances_for_source","collaborator incidental",
"AP_AHRS_Backend","data-provider degenerate","get_hgt_ctrl_limit","incidental",
"AP_AHRS_Backend","data-provider degenerate","set_terrain_hgt_stable","empty",
"AP_AHRS_Backend","data-provider degenerate","AP_AHRS_Backend::init","empty",
"AP_AHRS_Backend","data-provider degenerate","AP_AHRS_Backend::get_EAS2TAS","wrapper stateless",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM","constructor",
"AP_AHRS_DCM","boundary","reset","command",
"AP_AHRS_DCM","boundary","yaw_initialised","get",
"AP_AHRS_DCM","boundary","get_error_rp","get",
"AP_AHRS_DCM","boundary","get_error_yaw","get",
"AP_AHRS_DCM","boundary","wind_estimate","predicate collaborator",
"AP_AHRS_DCM","boundary","synthetic_airspeed","predicate",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::reset_gyro_drift","unclassified",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::update","command",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_results","void-accessor command collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::backup_attitude","collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::matrix_update","set",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::reset","command",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::check_matrix","command",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::renorm","predicate non-void-command collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::normalize","collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::yaw_error_compass","property non-void-command collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::_P_gain","wrapper stateless",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::_yaw_gain","property",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::have_gps","predicate wrapper",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::use_fast_gains","predicate controller",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::use_compass","predicate non-void-command",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_quaternion","predicate controller",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::drift_correction_yaw","command",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::ra_delayed","property set collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::should_correct_centrifugal","controller stateless",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::drift_correction","command",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::estimate_wind","command collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_location","get collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::airspeed_estimate","predicate collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::airspeed_estimate","predicate",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_unconstrained_airspeed_estimate","predicate",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::healthy","predicate wrapper",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_velocity_NED","controller stateless",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::groundspeed_vector","property non-void-command collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_vert_pos_rate_D","predicate collaborator",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::pre_arm_check","predicate",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_origin","predicate controller",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_relative_position_NED_origin","controller stateless",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_relative_position_NE_origin","controller stateless",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_relative_position_D_origin","wrapper stateless",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::send_ekf_status_report","empty",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::yaw_source_available","wrapper stateless",
"AP_AHRS_DCM","boundary","AP_AHRS_DCM::get_control_limits","incidental",
"AP_Rally_Rover","pure-controller degenerate small-class","AP_Rally_Rover","constructor",
"AP_Rally_Rover","pure-controller degenerate small-class","AP_Rally_Rover::is_valid","controller stateless",
"AP_Periph_FW","commander","canfdout","predicate",
"AP_Periph_FW","commander","handle_battery_failsafe","empty",
"AP_Periph_FW","commander","get_yaw_earth","get",
"AP_Periph_FW","commander","get_vehicle_state","get",
"AP_Periph_FW","commander","get_yaw_earth","incidental",
"AP_Periph_FW","commander","get_vehicle_state","incidental",
"AP_Periph_FW","commander","debug_option_is_set","predicate collaborator",
"AP_Periph_FW","commander","option_is_set","predicate collaborator",
"AP_Periph_FW","commander","can_start","wrapper stateless",
"AP_Periph_FW","commander","can_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::AP_Periph_FW","constructor",
"AP_Periph_FW","commander","AP_Periph_FW::init","command",
"AP_Periph_FW","commander","AP_Periph_FW::update_rainbow","command",
"AP_Periph_FW","commander","AP_Periph_FW::load_parameters","command",
"AP_Periph_FW","commander","AP_Periph_FW::adsb_init","controller",
"AP_Periph_FW","commander","AP_Periph_FW::adsb_update","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::can_send_ADSB","controller stateless",
"AP_Periph_FW","commander","AP_Periph_FW::can_airspeed_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_baro_update","unclassified",
"AP_Periph_FW","commander","AP_Periph_FW::batt_balance_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_battery_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_battery_send_cells","command",
"AP_Periph_FW","commander","AP_Periph_FW::handle_beep_command","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::can_buzzer_update","controller stateless",
"AP_Periph_FW","commander","AP_Periph_FW::handle_get_node_info","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_param_getset","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_param_executeopcode","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_begin_firmware_update","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_allocation_response","set collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_safety_state","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_arming_status","controller stateless",
"AP_Periph_FW","commander","AP_Periph_FW::set_rgb_led","set",
"AP_Periph_FW","commander","AP_Periph_FW::handle_lightscommand","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_esc_rawcommand","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_act_command","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_notify_state","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::can_safety_LED_update","wrapper stateless",
"AP_Periph_FW","commander","AP_Periph_FW::can_safety_button_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::onTransferReceived","void-accessor command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::shouldAcceptTransfer","wrapper stateless",
"AP_Periph_FW","commander","AP_Periph_FW::cleanup_stale_transactions","wrapper stateless",
"AP_Periph_FW","commander","AP_Periph_FW::get_tid_ptr","wrapper stateless",
"AP_Periph_FW","commander","AP_Periph_FW::canard_broadcast","predicate non-void-command",
"AP_Periph_FW","commander","AP_Periph_FW::canard_respond","predicate non-void-command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::processTx","command",
"AP_Periph_FW","commander","AP_Periph_FW::update_rx_protocol_stats","incidental",
"AP_Periph_FW","commander","AP_Periph_FW::processRx","command",
"AP_Periph_FW","commander","AP_Periph_FW::processMirror","controller stateless",
"AP_Periph_FW","commander","AP_Periph_FW::pool_peak_percent","wrapper stateless",
"AP_Periph_FW","commander","AP_Periph_FW::node_status_send","command",
"AP_Periph_FW","commander","AP_Periph_FW::process1HzTasks","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::can_do_dna","predicate set",
"AP_Periph_FW","commander","AP_Periph_FW::can_start","command",
"AP_Periph_FW","commander","AP_Periph_FW::esc_telem_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::apd_esc_telem_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_mag_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_efi_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::handle_RTCMStream","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::handle_MovingBaselineData","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::can_gps_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::send_moving_baseline_msg","command",
"AP_Periph_FW","commander","AP_Periph_FW::send_relposheading_msg","command",
"AP_Periph_FW","commander","AP_Periph_FW::pwm_hardpoint_init","controller stateless",
"AP_Periph_FW","commander","AP_Periph_FW::pwm_irq_handler","incidental",
"AP_Periph_FW","commander","AP_Periph_FW::pwm_hardpoint_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::hwesc_telem_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::msp_init","controller stateless",
"AP_Periph_FW","commander","AP_Periph_FW::send_msp_packet","wrapper stateless",
"AP_Periph_FW","commander","AP_Periph_FW::msp_sensor_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::send_msp_GPS","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::send_msp_baro","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::send_msp_compass","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::send_msp_airspeed","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_proximity_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_rangefinder_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::rcin_init","set",
"AP_Periph_FW","commander","AP_Periph_FW::rcin_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::can_send_RCInput","controller stateless",
"AP_Periph_FW","commander","AP_Periph_FW::rcout_init","command",
"AP_Periph_FW","commander","AP_Periph_FW::rcout_init_1Hz","command",
"AP_Periph_FW","commander","AP_Periph_FW::rcout_esc","set",
"AP_Periph_FW","commander","AP_Periph_FW::rcout_srv_unitless","set collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::rcout_srv_PWM","set collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::rcout_handle_safety_state","set",
"AP_Periph_FW","commander","AP_Periph_FW::rcout_update","command",
"AP_Periph_FW","commander","AP_Periph_FW::handle_hardpoint_command","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::rpm_sensor_send","command",
"AP_Periph_FW","commander","AP_Periph_FW::get_default_tunnel_serial_port","property",
"AP_Periph_FW","commander","AP_Periph_FW::handle_tunnel_Targetted","command collaborator",
"AP_Periph_FW","commander","AP_Periph_FW::send_serial_monitor_data","command",
"AP_Periph_FW","commander","AP_Periph_FW::temperature_sensor_update","command",
"AP_Periph_FW","commander","update","wrapper stateless",
"AP_Periph_FW","commander","init","empty",
"AP_Periph_FW","commander","init","wrapper stateless",
"AP_Periph_FW","commander","init","wrapper stateless",
"HAL_Empty","pure-controller degenerate small-class","HAL_Empty::HAL_Empty","constructor",
"HAL_Empty","pure-controller degenerate small-class","HAL_Empty::run","controller stateless",
"AP_Airspeed_ASP5033","unclassified","AP_Airspeed_ASP5033::init","predicate non-void-command",
"AP_Airspeed_ASP5033","unclassified","AP_Airspeed_ASP5033::confirm_sensor_id","predicate non-void-command",
"AP_Airspeed_ASP5033","unclassified","AP_Airspeed_ASP5033::timer","command",
"AP_Airspeed_ASP5033","unclassified","AP_Airspeed_ASP5033::get_differential_pressure","predicate non-void-command",
"AP_Airspeed_ASP5033","unclassified","AP_Airspeed_ASP5033::get_temperature","predicate non-void-command",
"MAVLink_routing","boundary","MAVLink_routing::MAVLink_routing","constructor",
"MAVLink_routing","boundary","MAVLink_routing::check_and_forward","predicate collaborator",
"MAVLink_routing","boundary","MAVLink_routing::send_to_components","command collaborator",
"MAVLink_routing","boundary","MAVLink_routing::send_to_components","wrapper",
"MAVLink_routing","boundary","MAVLink_routing::find_by_mavtype","predicate collaborator",
"MAVLink_routing","boundary","MAVLink_routing::find_by_mavtype_and_compid","predicate collaborator",
"MAVLink_routing","boundary","MAVLink_routing::learn_route","set collaborator",
"MAVLink_routing","boundary","MAVLink_routing::handle_heartbeat","controller",
"MAVLink_routing","boundary","MAVLink_routing::get_targets","wrapper stateless",
"AP_ExpandingArray","data-provider boundary small-class","AP_ExpandingArray","constructor",
"AP_ExpandingArray","data-provider boundary small-class","operator[]","property collaborator",
"AP_ExpandingArray","data-provider boundary small-class","operator[]","property collaborator",
"ModeFollow","lazy-class degenerate","mode_number","collaborator incidental",
"ModeFollow","lazy-class degenerate","requires_GPS","incidental",
"ModeFollow","lazy-class degenerate","has_manual_throttle","incidental",
"ModeFollow","lazy-class degenerate","allows_arming","collaborator incidental",
"ModeFollow","lazy-class degenerate","is_autopilot","incidental",
"ModeFollow","lazy-class degenerate","name","incidental",
"ModeFollow","lazy-class degenerate","name4","incidental",
"ModeFollow","lazy-class degenerate","ModeFollow::init","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::exit","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::run","set",
"ModeFollow","lazy-class degenerate","ModeFollow::wp_distance","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::wp_bearing","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::get_wp","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::_enter","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::_exit","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::update","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::wp_bearing","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::get_distance_to_destination","controller stateless",
"ModeFollow","lazy-class degenerate","ModeFollow::set_desired_speed","wrapper stateless",
"DummyVehicle","lazy-class degenerate","set_mode","collaborator incidental",
"DummyVehicle","lazy-class degenerate","get_mode","incidental",
"DummyVehicle","lazy-class degenerate","get_scheduler_tasks","empty",
"DummyVehicle","lazy-class degenerate","init_ardupilot","empty",
"DummyVehicle","lazy-class degenerate","load_parameters","empty",
"DummyVehicle","lazy-class degenerate","init","command",
"DummyVehicle","lazy-class degenerate","get_log_bitmask","get collaborator",
"DummyVehicle","lazy-class degenerate","get_log_structures","get collaborator",
"DummyVehicle","lazy-class degenerate","get_num_log_structures","incidental",
"AP_Arming_Rover","degenerate","AP_Arming_Rover","constructor",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::rc_calibration_checks","controller stateless",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::gps_checks","controller stateless",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::pre_arm_checks","predicate non-void-command",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::arm_checks","predicate wrapper",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::update_soft_armed","controller stateless",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::arm","predicate non-void-command",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::disarm","predicate non-void-command",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::oa_check","controller stateless",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::parameter_checks","controller stateless",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::mode_checks","controller stateless",
"AP_Arming_Rover","degenerate","AP_Arming_Rover::motor_checks","controller stateless",
"CANIface","boundary","CANIface","constructor",
"CANIface","boundary","init","collaborator incidental",
"CANIface","boundary","set_can_iface","set",
"CANIface","boundary","get_iface_num","get",
"CANIface","boundary","add_to_rx_queue","predicate non-void-command collaborator",
"CANIface","boundary","SLCAN::CANIface::push_Frame","predicate non-void-command collaborator",
"CANIface","boundary","SLCAN::CANIface::handle_FrameDataExt","predicate non-void-command",
"CANIface","boundary","SLCAN::CANIface::handle_FDFrameDataExt","predicate non-void-command",
"CANIface","boundary","SLCAN::CANIface::handle_FrameDataStd","predicate non-void-command",
"CANIface","boundary","SLCAN::CANIface::handle_FrameRTRExt","predicate non-void-command collaborator",
"CANIface","boundary","SLCAN::CANIface::handle_FrameRTRStd","predicate non-void-command collaborator",
"CANIface","boundary","SLCAN::CANIface::init_passthrough","predicate non-void-command",
"CANIface","boundary","SLCAN::CANIface::reportFrame","property non-void-command collaborator",
"CANIface","boundary","SLCAN::CANIface::processCommand","property non-void-command",
"CANIface","boundary","SLCAN::CANIface::addByte","command",
"CANIface","boundary","SLCAN::CANIface::update_slcan_port","command",
"CANIface","boundary","SLCAN::CANIface::set_event_handle","predicate non-void-command collaborator",
"CANIface","boundary","SLCAN::CANIface::getNumFilters","property",
"CANIface","boundary","SLCAN::CANIface::getErrorCount","property",
"CANIface","boundary","SLCAN::CANIface::get_stats","command collaborator",
"CANIface","boundary","SLCAN::CANIface::is_busoff","predicate",
"CANIface","boundary","SLCAN::CANIface::configureFilters","predicate non-void-command",
"CANIface","boundary","SLCAN::CANIface::flush_tx","command",
"CANIface","boundary","SLCAN::CANIface::clear_rx","command",
"CANIface","boundary","SLCAN::CANIface::is_initialized","predicate",
"CANIface","boundary","SLCAN::CANIface::select","predicate non-void-command",
"CANIface","boundary","SLCAN::CANIface::send","property non-void-command collaborator",
"CANIface","boundary","SLCAN::CANIface::receive","property non-void-command collaborator",
"CANIface","boundary","SLCAN::CANIface::reset_params","command",
"CANIface","boundary","AP_HAL::CANIface::receive","property non-void-command collaborator",
"CANIface","boundary","AP_HAL::CANIface::send","property non-void-command collaborator",
"CANIface","boundary","AP_HAL::CANIface::register_frame_callback","collaborator incidental",
"CANIface","boundary","CANIface::CANIface","constructor",
"CANIface","boundary","CANIface::CANIface","constructor",
"CANIface","boundary","CANIface::handleBusOffInterrupt","incidental",
"CANIface","boundary","CANIface::computeTimings","controller stateless",
"CANIface","boundary","CANIface::computeFDTimings","collaborator incidental",
"CANIface","boundary","CANIface::send","controller stateless",
"CANIface","boundary","CANIface::receive","property non-void-command collaborator",
"CANIface","boundary","CANIface::configureFilters","wrapper stateless",
"CANIface","boundary","CANIface::getNumFilters","incidental",
"CANIface","boundary","CANIface::init","predicate non-void-command collaborator",
"CANIface","boundary","CANIface::clear_rx","command collaborator",
"CANIface","boundary","CANIface::setupMessageRam","wrapper stateless",
"CANIface","boundary","CANIface::handleTxCompleteInterrupt","command collaborator",
"CANIface","boundary","CANIface::readRxFIFO","predicate non-void-command collaborator",
"CANIface","boundary","CANIface::handleRxInterrupt","command",
"CANIface","boundary","CANIface::pollErrorFlagsFromISR","incidental",
"CANIface","boundary","CANIface::pollErrorFlags","command collaborator",
"CANIface","boundary","CANIface::canAcceptNewTxFrame","wrapper stateless",
"CANIface","boundary","CANIface::getErrorCount","collaborator incidental",
"CANIface","boundary","CANIface::set_event_handle","collaborator incidental",
"CANIface","boundary","CANIface::isRxBufferEmpty","predicate collaborator",
"CANIface","boundary","CANIface::clearErrors","incidental",
"CANIface","boundary","CANIface::discardTimedOutTxMailboxes","incidental",
"CANIface","boundary","CANIface::checkAvailable","void-accessor collaborator",
"CANIface","boundary","CANIface::select","predicate non-void-command",
"CANIface","boundary","CANIface::get_stats","controller stateless",
"CANIface","boundary","CANIface::CANIface","constructor",
"CANIface","boundary","CANIface::CANIface","constructor",
"CANIface","boundary","CANIface::computeTimings","controller stateless",
"CANIface","boundary","CANIface::send","controller stateless",
"CANIface","boundary","CANIface::receive","property non-void-command collaborator",
"CANIface","boundary","CANIface::configureFilters","wrapper stateless",
"CANIface","boundary","CANIface::waitMsrINakBitStateChange","wrapper stateless",
"CANIface","boundary","CANIface::handleTxMailboxInterrupt","command collaborator",
"CANIface","boundary","CANIface::handleTxInterrupt","command",
"CANIface","boundary","CANIface::handleRxInterrupt","command collaborator",
"CANIface","boundary","CANIface::pollErrorFlagsFromISR","wrapper stateless",
"CANIface","boundary","CANIface::discardTimedOutTxMailboxes","wrapper stateless",
"CANIface","boundary","CANIface::clear_rx","command collaborator",
"CANIface","boundary","CANIface::pollErrorFlags","command collaborator",
"CANIface","boundary","CANIface::canAcceptNewTxFrame","controller stateless",
"CANIface","boundary","CANIface::isRxBufferEmpty","predicate collaborator",
"CANIface","boundary","CANIface::getErrorCount","collaborator incidental",
"CANIface","boundary","CANIface::set_event_handle","collaborator incidental",
"CANIface","boundary","CANIface::checkAvailable","void-accessor collaborator",
"CANIface","boundary","CANIface::select","predicate non-void-command",
"CANIface","boundary","CANIface::initOnce","wrapper stateless",
"CANIface","boundary","CANIface::init","predicate non-void-command collaborator",
"CANIface","boundary","CANIface::get_stats","controller stateless",
"CANIface","boundary","CANIface::is_initialized","incidental",
"CANIface","boundary","CANIface::_openSocket","controller stateless",
"CANIface","boundary","CANIface::send","property non-void-command collaborator",
"CANIface","boundary","CANIface::receive","property non-void-command collaborator",
"CANIface","boundary","CANIface::_hasReadyTx","controller stateless",
"CANIface","boundary","CANIface::_hasReadyRx","controller stateless",
"CANIface","boundary","CANIface::_poll","command",
"CANIface","boundary","CANIface::configureFilters","controller stateless",
"CANIface","boundary","CANIface::getNumFilters","incidental",
"CANIface","boundary","CANIface::getErrorCount","incidental",
"CANIface","boundary","CANIface::_pollWrite","command",
"CANIface","boundary","CANIface::_pollRead","predicate non-void-command",
"CANIface","boundary","CANIface::_write","wrapper stateless",
"CANIface","boundary","CANIface::_read","property",
"CANIface","boundary","CANIface::flush_tx","command",
"CANIface","boundary","CANIface::clear_rx","wrapper stateless",
"CANIface","boundary","CANIface::_incrementNumFramesInSocketTxQueue","incidental",
"CANIface","boundary","CANIface::_confirmSentFrame","incidental",
"CANIface","boundary","CANIface::_wasInPendingLoopbackSet","controller stateless",
"CANIface","boundary","CANIface::_checkHWFilters","controller stateless",
"CANIface","boundary","CANIface::_updateDownStatusFromPollResult","wrapper stateless",
"CANIface","boundary","CANIface::init","predicate non-void-command collaborator",
"CANIface","boundary","CANIface::select","predicate non-void-command",
"CANIface","boundary","CANIface::set_event_handle","collaborator incidental",
"CANIface","boundary","CANIface::get_stats","controller stateless",
"CANIface","boundary","CANIface::is_initialized","incidental",
"CANIface","boundary","CANIface::send","property non-void-command collaborator",
"CANIface","boundary","CANIface::receive","property non-void-command collaborator",
"CANIface","boundary","CANIface::_hasReadyTx","controller stateless",
"CANIface","boundary","CANIface::_hasReadyRx","controller stateless",
"CANIface","boundary","CANIface::_poll","command",
"CANIface","boundary","CANIface::getErrorCount","incidental",
"CANIface","boundary","CANIface::_pollWrite","command",
"CANIface","boundary","CANIface::_pollRead","predicate non-void-command",
"CANIface","boundary","CANIface::flush_tx","command",
"CANIface","boundary","CANIface::clear_rx","controller stateless",
"CANIface","boundary","CANIface::_confirmSentFrame","incidental",
"CANIface","boundary","CANIface::init","predicate non-void-command collaborator",
"CANIface","boundary","CANIface::init","controller stateless",
"CANIface","boundary","CANIface::select","predicate non-void-command",
"CANIface","boundary","CANIface::set_event_handle","controller stateless",
"CANIface","boundary","CANIface::get_stats","controller stateless",
"ekf_imu_buffer","unclassified","is_filled","get",
"ekf_imu_buffer","unclassified","get_oldest_index","get",
"ekf_imu_buffer","unclassified","get_youngest_index","get",
"ekf_imu_buffer","unclassified","ekf_imu_buffer::ekf_imu_buffer","constructor",
"ekf_imu_buffer","unclassified","ekf_imu_buffer::get_offset","property wrapper",
"ekf_imu_buffer","unclassified","ekf_imu_buffer::init","predicate non-void-command",
"ekf_imu_buffer","unclassified","ekf_imu_buffer::push_youngest_element","command",
"ekf_imu_buffer","unclassified","ekf_imu_buffer::get_oldest_element","command",
"ekf_imu_buffer","unclassified","ekf_imu_buffer::reset_history","command",
"ekf_imu_buffer","unclassified","ekf_imu_buffer::reset","command",
"ekf_imu_buffer","unclassified","ekf_imu_buffer::get","property collaborator",
"ekf_imu_buffer","unclassified","reset","controller stateless",
"Matrix3","entity data-provider boundary","Matrix3<T>","constructor",
"Matrix3","entity data-provider boundary","Matrix3<T>","constructor",
"Matrix3","entity data-provider boundary","Matrix3<T>","constructor",
"Matrix3","entity data-provider boundary","operator()","command collaborator",
"Matrix3","entity data-provider boundary","operator==","predicate collaborator",
"Matrix3","entity data-provider boundary","operator!=","predicate collaborator",
"Matrix3","entity data-provider boundary","operator-","property wrapper",
"Matrix3","entity data-provider boundary","operator+","property wrapper",
"Matrix3","entity data-provider boundary","operator+=","collaborator incidental",
"Matrix3","entity data-provider boundary","operator-","property wrapper",
"Matrix3","entity data-provider boundary","operator-=","collaborator incidental",
"Matrix3","entity data-provider boundary","operator*","property wrapper",
"Matrix3","entity data-provider boundary","operator*=","collaborator incidental",
"Matrix3","entity data-provider boundary","operator/","property wrapper",
"Matrix3","entity data-provider boundary","operator/=","collaborator incidental",
"Matrix3","entity data-provider boundary","operator[]","property collaborator",
"Matrix3","entity data-provider boundary","operator[]","property collaborator",
"Matrix3","entity data-provider boundary","colx","property wrapper",
"Matrix3","entity data-provider boundary","coly","property wrapper",
"Matrix3","entity data-provider boundary","colz","property wrapper",
"Matrix3","entity data-provider boundary","operator*=","collaborator incidental",
"Matrix3","entity data-provider boundary","transpose","command",
"Matrix3","entity data-provider boundary","identity","command",
"Matrix3","entity data-provider boundary","is_nan","predicate non-void-command",
"Matrix3","entity data-provider boundary","todouble","property collaborator",
"Matrix3","entity data-provider boundary","tofloat","property collaborator",
"Matrix3","entity data-provider boundary","Matrix3<T>::from_euler","command collaborator",
"Matrix3","entity data-provider boundary","Matrix3<T>::to_euler","void-accessor wrapper",
"Matrix3","entity data-provider boundary","Matrix3<T>::from_rotation","command collaborator",
"Matrix3","entity data-provider boundary","Matrix3<T>::to_euler312","property wrapper",
"Matrix3","entity data-provider boundary","Matrix3<T>::from_euler312","command collaborator",
"Matrix3","entity data-provider boundary","Matrix3<T>::rotate","wrapper",
"Matrix3","entity data-provider boundary","Matrix3<T>::normalize","command collaborator",
"Matrix3","entity data-provider boundary","Matrix3<T>::operator*","property wrapper",
"Matrix3","entity data-provider boundary","Matrix3<T>::mulXY","property wrapper",
"Matrix3","entity data-provider boundary","Matrix3<T>::mul_transpose","property wrapper",
"Matrix3","entity data-provider boundary","Matrix3<T>::operator*","property wrapper",
"Matrix3","entity data-provider boundary","Matrix3<T>::transposed","property wrapper",
"Matrix3","entity data-provider boundary","Matrix3<T>::det","property collaborator",
"Matrix3","entity data-provider boundary","Matrix3<T>::inverse","predicate collaborator",
"Matrix3","entity data-provider boundary","Matrix3<T>::invert","predicate non-void-command",
"Matrix3","entity data-provider boundary","Matrix3<T>::zero","command",
"Matrix3","entity data-provider boundary","Matrix3<T>::from_axis_angle","command collaborator",
"AP_AccelCal_Client","degenerate","_acal_get_saving","incidental",
"AP_AccelCal_Client","degenerate","_acal_get_ready_to_sample","incidental",
"AP_AccelCal_Client","degenerate","_acal_get_fail","incidental",
"AP_AccelCal_Client","degenerate","_acal_event_success","empty",
"AP_AccelCal_Client","degenerate","_acal_event_cancellation","empty",
"AP_AccelCal_Client","degenerate","_acal_event_failure","empty",
"AC_WPNav","unclassified","set_rangefinder_terrain_offset","command",
"AC_WPNav","unclassified","rangefinder_used","get",
"AC_WPNav","unclassified","rangefinder_used_and_healthy","predicate",
"AC_WPNav","unclassified","get_terrain_margin","property wrapper",
"AC_WPNav","unclassified","set_pause","set",
"AC_WPNav","unclassified","set_resume","set",
"AC_WPNav","unclassified","paused","get",
"AC_WPNav","unclassified","get_default_speed_xy","get",
"AC_WPNav","unclassified","get_default_speed_up","get",
"AC_WPNav","unclassified","get_default_speed_down","property wrapper",
"AC_WPNav","unclassified","get_accel_z","get",
"AC_WPNav","unclassified","get_wp_acceleration","property wrapper",
"AC_WPNav","unclassified","get_corner_acceleration","property",
"AC_WPNav","unclassified","get_wp_destination","get collaborator",
"AC_WPNav","unclassified","get_wp_origin","get collaborator",
"AC_WPNav","unclassified","origin_and_destination_are_terrain_alt","get",
"AC_WPNav","unclassified","get_oa_wp_destination","predicate collaborator",
"AC_WPNav","unclassified","reached_wp_destination","incidental",
"AC_WPNav","unclassified","reached_wp_destination_xy","predicate",
"AC_WPNav","unclassified","get_wp_radius_cm","get",
"AC_WPNav","unclassified","get_roll","property",
"AC_WPNav","unclassified","get_pitch","property",
"AC_WPNav","unclassified","get_thrust_vector","property collaborator",
"AC_WPNav","unclassified","get_yaw","property",
"AC_WPNav","unclassified","crosstrack_error","property",
"AC_WPNav","unclassified","AC_WPNav::AC_WPNav","constructor",
"AC_WPNav","unclassified","AC_WPNav::get_terrain_source","property controller",
"AC_WPNav","unclassified","AC_WPNav::wp_and_spline_init","command collaborator",
"AC_WPNav","unclassified","AC_WPNav::set_speed_xy","command",
"AC_WPNav","unclassified","AC_WPNav::set_speed_up","command",
"AC_WPNav","unclassified","AC_WPNav::set_speed_down","command",
"AC_WPNav","unclassified","AC_WPNav::set_wp_destination_loc","predicate non-void-command collaborator",
"AC_WPNav","unclassified","AC_WPNav::set_wp_destination_next_loc","predicate non-void-command collaborator",
"AC_WPNav","unclassified","AC_WPNav::get_wp_destination_loc","predicate collaborator",
"AC_WPNav","unclassified","AC_WPNav::set_wp_destination","predicate non-void-command",
"AC_WPNav","unclassified","AC_WPNav::set_wp_destination_next","predicate non-void-command",
"AC_WPNav","unclassified","AC_WPNav::set_wp_destination_NED","wrapper stateless",
"AC_WPNav","unclassified","AC_WPNav::set_wp_destination_next_NED","wrapper stateless",
"AC_WPNav","unclassified","AC_WPNav::shift_wp_origin_and_destination_to_current_pos_xy","command collaborator",
"AC_WPNav","unclassified","AC_WPNav::shift_wp_origin_and_destination_to_stopping_point_xy","command collaborator",
"AC_WPNav","unclassified","AC_WPNav::get_wp_stopping_point_xy","void-accessor collaborator",
"AC_WPNav","unclassified","AC_WPNav::get_wp_stopping_point","void-accessor collaborator",
"AC_WPNav","unclassified","AC_WPNav::advance_wp_target_along_track","predicate non-void-command collaborator",
"AC_WPNav","unclassified","AC_WPNav::update_track_with_speed_accel_limits","command",
"AC_WPNav","unclassified","AC_WPNav::get_wp_distance_to_destination","property",
"AC_WPNav","unclassified","AC_WPNav::get_wp_bearing_to_destination","property",
"AC_WPNav","unclassified","AC_WPNav::update_wpnav","predicate non-void-command",
"AC_WPNav","unclassified","AC_WPNav::is_active","predicate wrapper",
"AC_WPNav","unclassified","AC_WPNav::force_stop_at_next_wp","predicate non-void-command",
"AC_WPNav","unclassified","AC_WPNav::get_terrain_offset","predicate non-void-command collaborator",
"AC_WPNav","unclassified","AC_WPNav::set_spline_destination_loc","predicate non-void-command",
"AC_WPNav","unclassified","AC_WPNav::set_spline_destination_next_loc","predicate non-void-command",
"AC_WPNav","unclassified","AC_WPNav::set_spline_destination","predicate non-void-command collaborator",
"AC_WPNav","unclassified","AC_WPNav::set_spline_destination_next","predicate collaborator",
"AC_WPNav","unclassified","AC_WPNav::get_vector_NEU","controller stateless",
"AC_WPNav","unclassified","AC_WPNav::calc_scurve_jerk_and_snap","command",
"AP_Compass_MAG3110","boundary","~AP_Compass_MAG3110","destructor",
"AP_Compass_MAG3110","boundary","AP_Compass_MAG3110::AP_Compass_MAG3110","constructor",
"AP_Compass_MAG3110","boundary","AP_Compass_MAG3110::probe","controller stateless",
"AP_Compass_MAG3110","boundary","AP_Compass_MAG3110::init","predicate non-void-command collaborator",
"AP_Compass_MAG3110","boundary","AP_Compass_MAG3110::_hardware_init","predicate non-void-command",
"AP_Compass_MAG3110","boundary","AP_Compass_MAG3110::_read_sample","predicate non-void-command",
"AP_Compass_MAG3110","boundary","AP_Compass_MAG3110::_update","command collaborator",
"AP_Compass_MAG3110","boundary","AP_Compass_MAG3110::read","wrapper",
"AP_Scripting","unclassified","enabled","predicate",
"AP_Scripting","unclassified","should_run","predicate",
"AP_Scripting","unclassified","get_disabled_dir","property non-void-command",
"AP_Scripting","unclassified","get_current_ref","get",
"AP_Scripting","unclassified","set_current_ref","set",
"AP_Scripting","unclassified","update","wrapper stateless",
"AP_Scripting","unclassified","AP_Scripting::AP_Scripting","constructor",
"AP_Scripting","unclassified","AP_Scripting::init","set collaborator",
"AP_Scripting","unclassified","AP_Scripting::handle_command_int_packet","property non-void-command collaborator",
"AP_Scripting","unclassified","AP_Scripting::thread","command",
"AP_Scripting","unclassified","AP_Scripting::handle_mission_command","collaborator",
"AP_Scripting","unclassified","AP_Scripting::arming_checks","predicate",
"AP_Scripting","unclassified","AP_Scripting::restart_all","command",
"AP_Scripting","unclassified","AP_Scripting::handle_message","controller stateless",
"AP_Scripting","unclassified","AP_Scripting::is_handling_command","predicate wrapper",
"AP_Scripting","unclassified","AP_Scripting::update","command",
"AP_Scripting","unclassified","AP_Scripting::save_checksum","command",
"AP_KDECAN","commander lazy-class degenerate","update","wrapper stateless",
"AP_KDECAN","commander lazy-class degenerate","init","empty",
"AP_KDECAN","commander lazy-class degenerate","init","wrapper stateless",
"AP_KDECAN","commander lazy-class degenerate","init","wrapper stateless",
"AP_KDECAN","commander lazy-class degenerate","AP_KDECAN::AP_KDECAN","constructor",
"AP_KDECAN","commander lazy-class degenerate","AP_KDECAN::init","set",
"AP_KDECAN","commander lazy-class degenerate","AP_KDECAN::update","command",
"GCS_Dummy","boundary degenerate","sysid_this_mav","incidental",
"GCS_Dummy","boundary degenerate","new_gcs_mavlink_backend","wrapper stateless",
"GCS_Dummy","boundary degenerate","frame_type","collaborator incidental",
"GCS_Dummy","boundary degenerate","custom_mode","incidental",
"GCS_Dummy","boundary degenerate","GCS_Dummy::send_textv","controller stateless",
"AP_Airspeed_Params","empty","AP_Airspeed_Params::AP_Airspeed_Params","constructor",
"AP_Airspeed_Params","empty","AP_Airspeed_Params::AP_Airspeed_Params","constructor",
"AR_WPNav","unclassified","get_speed_max","get",
"AR_WPNav","unclassified","get_reversed","get",
"AR_WPNav","unclassified","set_reversed","set",
"AR_WPNav","unclassified","get_speed","get",
"AR_WPNav","unclassified","get_turn_rate_rads","get",
"AR_WPNav","unclassified","get_lat_accel","get",
"AR_WPNav","unclassified","reached_destination","get",
"AR_WPNav","unclassified","get_distance_to_destination","get",
"AR_WPNav","unclassified","is_destination_valid","get",
"AR_WPNav","unclassified","get_destination","get collaborator",
"AR_WPNav","unclassified","wp_bearing_cd","get",
"AR_WPNav","unclassified","nav_bearing_cd","get",
"AR_WPNav","unclassified","crosstrack_error","get",
"AR_WPNav","unclassified","get_oa_origin","get collaborator",
"AR_WPNav","unclassified","get_oa_destination","property collaborator",
"AR_WPNav","unclassified","oa_wp_bearing_cd","property",
"AR_WPNav","unclassified","enable_overspeed","set",
"AR_WPNav","unclassified","get_default_speed","get",
"AR_WPNav","unclassified","get_default_accel","get",
"AR_WPNav","unclassified","get_default_jerk","get",
"AR_WPNav","unclassified","get_radius","get",
"AR_WPNav","unclassified","get_pivot_rate","property",
"AR_WPNav","unclassified","is_fast_waypoint","get",
"AR_WPNav","unclassified","AR_WPNav::AR_WPNav","constructor",
"AR_WPNav","unclassified","AR_WPNav::init","command",
"AR_WPNav","unclassified","AR_WPNav::update","command",
"AR_WPNav","unclassified","AR_WPNav::set_speed_max","predicate set",
"AR_WPNav","unclassified","AR_WPNav::set_nudge_speed_max","set",
"AR_WPNav","unclassified","AR_WPNav::set_desired_location","predicate non-void-command collaborator",
"AR_WPNav","unclassified","AR_WPNav::set_desired_location_to_stopping_location","predicate non-void-command collaborator",
"AR_WPNav","unclassified","AR_WPNav::set_desired_location_NED","controller stateless",
"AR_WPNav","unclassified","AR_WPNav::set_desired_location_NED","predicate non-void-command collaborator",
"AR_WPNav","unclassified","AR_WPNav::set_desired_location_expect_fast_update","predicate non-void-command collaborator",
"AR_WPNav","unclassified","AR_WPNav::get_stopping_location","predicate non-void-command collaborator",
"AR_WPNav","unclassified","AR_WPNav::is_active","predicate wrapper",
"AR_WPNav","unclassified","AR_WPNav::advance_wp_target_along_track","command",
"AR_WPNav","unclassified","AR_WPNav::update_psc_input_shaping","command collaborator",
"AR_WPNav","unclassified","AR_WPNav::update_distance_and_bearing_to_destination","command collaborator",
"AR_WPNav","unclassified","AR_WPNav::update_steering_and_speed","command",
"AR_WPNav","unclassified","AR_WPNav::set_turn_params","set",
"AR_WPNav","unclassified","AR_WPNav::calc_crosstrack_error","property collaborator",
"AR_WPNav","unclassified","AR_WPNav::get_corner_angle","controller stateless",
"AR_WPNav","unclassified","AR_WPNav::init_pos_control_if_necessary","command",
"AR_WPNav","unclassified","AR_WPNav::set_origin_and_destination_to_stopping_point","predicate non-void-command collaborator",
"AR_WPNav","unclassified","AR_WPNav::update_speed_max","unclassified",
"LR_MsgHandler_RWA2","pure-controller small-class","LR_MsgHandler_RWA2::process_message","controller",
"Airspeed_Calibration","data-class small-class","Airspeed_Calibration::Airspeed_Calibration","constructor",
"Airspeed_Calibration","data-class small-class","Airspeed_Calibration::init","set",
"Airspeed_Calibration","data-class small-class","Airspeed_Calibration::update","get non-void-command",
"RC_Channel_Rover","degenerate","RC_Channel_Rover::mode_switch_changed","controller stateless",
"RC_Channel_Rover","degenerate","RC_Channel_Rover::init_aux_function","command collaborator",
"RC_Channel_Rover","degenerate","RC_Channel_Rover::do_aux_function_change_mode","controller stateless",
"RC_Channel_Rover","degenerate","RC_Channel_Rover::add_waypoint_for_current_loc","controller stateless",
"RC_Channel_Rover","degenerate","RC_Channel_Rover::do_aux_function_sailboat_motor_3pos","controller stateless",
"RC_Channel_Rover","degenerate","RC_Channel_Rover::do_aux_function","predicate non-void-command collaborator",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::subscribe_msgs","controller stateless",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::probe","property controller",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::get_dronecan_backend","incidental",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::handle_airspeed","command collaborator",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::handle_hygrometer","command collaborator",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::init","incidental",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::get_differential_pressure","predicate wrapper",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::get_temperature","predicate wrapper",
"AP_Airspeed_DroneCAN","boundary","AP_Airspeed_DroneCAN::get_hygrometer","predicate wrapper",
"AP_Module","boundary","AP_Module::module_scan","set collaborator",
"AP_Module","boundary","AP_Module::init","command",
"AP_Module","boundary","AP_Module::call_hook_setup_start","wrapper",
"AP_Module","boundary","AP_Module::call_hook_setup_complete","wrapper",
"AP_Module","boundary","AP_Module::call_hook_AHRS_update","controller",
"AP_Module","boundary","AP_Module::call_hook_gyro_sample","void-accessor wrapper",
"AP_Module","boundary","AP_Module::call_hook_accel_sample","void-accessor wrapper",
"CRSF","commander boundary degenerate","CRSF","constructor",
"CRSF","commander boundary degenerate","update","wrapper stateless",
"CRSF","commander boundary degenerate","CRSF::dataid_string","collaborator incidental",
"CRSF","commander boundary degenerate","CRSF::update","command collaborator",
"Pollable","data-provider lazy-class degenerate","get_fd","get",
"Pollable","data-provider lazy-class degenerate","on_can_read","empty",
"Pollable","data-provider lazy-class degenerate","on_can_write","empty",
"Pollable","data-provider lazy-class degenerate","on_error","empty",
"Pollable","data-provider lazy-class degenerate","on_hang_up","empty",
"Pollable","data-provider lazy-class degenerate","Pollable::~Pollable","destructor",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::AP_Baro_ICP101XX","constructor",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::probe","controller stateless",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::init","predicate non-void-command",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::read_measure_results","predicate non-void-command",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::read_response","predicate non-void-command",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::send_command","predicate non-void-command",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::send_command","predicate non-void-command",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::cal_crc","incidental",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::read_calibration_data","predicate",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::start_measure","predicate set",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::calculate_conversion_constants","incidental",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::get_pressure","property non-void-command",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::convert_data","command",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::timer","unclassified",
"AP_Baro_ICP101XX","unclassified","AP_Baro_ICP101XX::update","wrapper",
"NavEKF2","data-provider","activeCores","get",
"NavEKF2","data-provider","set_baro_alt_noise","command",
"NavEKF2","data-provider","set_enable","command",
"NavEKF2","data-provider","get_enable","predicate",
"NavEKF2","data-provider","NavEKF2::NavEKF2","constructor",
"NavEKF2","data-provider","NavEKF2::InitialiseFilter","predicate non-void-command",
"NavEKF2","data-provider","NavEKF2::coreBetterScore","predicate controller",
"NavEKF2","data-provider","NavEKF2::UpdateFilter","command",
"NavEKF2","data-provider","NavEKF2::checkLaneSwitch","command",
"NavEKF2","data-provider","NavEKF2::healthy","get predicate",
"NavEKF2","data-provider","NavEKF2::pre_arm_check","predicate",
"NavEKF2","data-provider","NavEKF2::getPrimaryCoreIndex","get property",
"NavEKF2","data-provider","NavEKF2::getPrimaryCoreIMUIndex","get property wrapper",
"NavEKF2","data-provider","NavEKF2::getPosNE","get predicate collaborator",
"NavEKF2","data-provider","NavEKF2::getPosD","get predicate",
"NavEKF2","data-provider","NavEKF2::getVelNED","collaborator",
"NavEKF2","data-provider","NavEKF2::getAirSpdVec","get predicate collaborator",
"NavEKF2","data-provider","NavEKF2::getPosDownDerivative","get property",
"NavEKF2","data-provider","NavEKF2::getGyroBias","collaborator",
"NavEKF2","data-provider","NavEKF2::resetGyroBias","command",
"NavEKF2","data-provider","NavEKF2::resetHeightDatum","predicate non-void-command",
"NavEKF2","data-provider","NavEKF2::getEkfControlLimits","void-accessor",
"NavEKF2","data-provider","NavEKF2::getAccelZBias","unclassified",
"NavEKF2","data-provider","NavEKF2::getWind","collaborator",
"NavEKF2","data-provider","NavEKF2::getMagNED","collaborator",
"NavEKF2","data-provider","NavEKF2::getMagXYZ","collaborator",
"NavEKF2","data-provider","NavEKF2::getMagOffsets","predicate collaborator",
"NavEKF2","data-provider","NavEKF2::getLLH","get predicate collaborator",
"NavEKF2","data-provider","NavEKF2::getOriginLLH","get predicate collaborator",
"NavEKF2","data-provider","NavEKF2::setOriginLLH","predicate non-void-command collaborator",
"NavEKF2","data-provider","NavEKF2::getHAGL","get predicate",
"NavEKF2","data-provider","NavEKF2::getEulerAngles","collaborator",
"NavEKF2","data-provider","NavEKF2::getRotationBodyToNED","collaborator",
"NavEKF2","data-provider","NavEKF2::getQuaternionBodyToNED","collaborator",
"NavEKF2","data-provider","NavEKF2::getQuaternion","collaborator",
"NavEKF2","data-provider","NavEKF2::getInnovations","get predicate",
"NavEKF2","data-provider","NavEKF2::getVariances","get predicate collaborator",
"NavEKF2","data-provider","NavEKF2::use_compass","get predicate",
"NavEKF2","data-provider","NavEKF2::writeOptFlowMeas","command",
"NavEKF2","data-provider","NavEKF2::setTerrainHgtStable","command",
"NavEKF2","data-provider","NavEKF2::getFilterFaults","void-accessor",
"NavEKF2","data-provider","NavEKF2::getFilterStatus","collaborator",
"NavEKF2","data-provider","NavEKF2::getFilterGpsStatus","collaborator",
"NavEKF2","data-provider","NavEKF2::send_status_report","collaborator",
"NavEKF2","data-provider","NavEKF2::getHeightControlLimit","get predicate",
"NavEKF2","data-provider","NavEKF2::getLastYawResetAngle","property non-void-command",
"NavEKF2","data-provider","NavEKF2::getLastPosNorthEastReset","property non-void-command collaborator",
"NavEKF2","data-provider","NavEKF2::getLastVelNorthEastReset","get property collaborator",
"NavEKF2","data-provider","NavEKF2::getLastPosDownReset","property non-void-command",
"NavEKF2","data-provider","NavEKF2::updateLaneSwitchYawResetData","command",
"NavEKF2","data-provider","NavEKF2::updateLaneSwitchPosResetData","command collaborator",
"NavEKF2","data-provider","NavEKF2::updateLaneSwitchPosDownResetData","command",
"NavEKF2","data-provider","NavEKF2::writeExtNavData","command",
"NavEKF2","data-provider","NavEKF2::isExtNavUsedForYaw","get predicate",
"NavEKF2","data-provider","NavEKF2::configuredToUseGPSForPosXY","predicate",
"NavEKF2","data-provider","NavEKF2::requestYawReset","wrapper",
"NavEKF2","data-provider","NavEKF2::writeDefaultAirSpeed","command",
"NavEKF2","data-provider","NavEKF2::writeExtNavVelData","command",
"NavEKF2","data-provider","NavEKF2::get_yawEstimator","get property collaborator",
"NavEKF2","data-provider","NavEKF2::Log_Write","unclassified",
"RCInput_Navio2","commander","RCInput_Navio2::init","set",
"RCInput_Navio2","commander","RCInput_Navio2::_timer_tick","command",
"RCInput_Navio2","commander","RCInput_Navio2::RCInput_Navio2","constructor",
"RCInput_Navio2","commander","RCInput_Navio2::~RCInput_Navio2","destructor",
"RCInput_Navio2","commander","RCInput_Navio2::open_channel","wrapper stateless",
"Compass","boundary","available","predicate",
"Compass","boundary","calculate_heading","property collaborator",
"Compass","boundary","get_count","get",
"Compass","boundary","get_field","property collaborator",
"Compass","boundary","get_field","property collaborator",
"Compass","boundary","per_motor_calibration_start","command",
"Compass","boundary","per_motor_calibration_update","command",
"Compass","boundary","per_motor_calibration_end","command",
"Compass","boundary","compass_cal_requires_reboot","get",
"Compass","boundary","set_log_bit","set",
"Compass","boundary","healthy","predicate",
"Compass","boundary","get_offsets","property collaborator",
"Compass","boundary","get_offsets","property collaborator",
"Compass","boundary","get_diagonals","property collaborator",
"Compass","boundary","get_diagonals","property collaborator",
"Compass","boundary","get_offdiagonals","property collaborator",
"Compass","boundary","get_offdiagonals","property collaborator",
"Compass","boundary","learn_offsets_enabled","predicate",
"Compass","boundary","auto_declination_enabled","predicate",
"Compass","boundary","set_board_orientation","set collaborator",
"Compass","boundary","get_board_orientation","get collaborator",
"Compass","boundary","get_motor_compensation_type","get",
"Compass","boundary","get_motor_compensation","property collaborator",
"Compass","boundary","get_motor_compensation","property collaborator",
"Compass","boundary","get_motor_offsets","property collaborator",
"Compass","boundary","get_motor_offsets","property collaborator",
"Compass","boundary","set_throttle","set",
"Compass","boundary","set_voltage","command",
"Compass","boundary","last_update_usec","property",
"Compass","boundary","last_update_usec","property",
"Compass","boundary","last_update_ms","property",
"Compass","boundary","last_update_ms","property",
"Compass","boundary","get_learn_type","property collaborator",
"Compass","boundary","set_learn_type","command",
"Compass","boundary","get_offsets_max","property",
"Compass","boundary","get_filter_range","property",
"Compass","boundary","get_first_usable","get",
"Compass","boundary","_auto_reboot","get",
"Compass","boundary","_get_state","get collaborator",
"Compass","boundary","_get_priority","get collaborator",
"Compass","boundary","option_set","predicate collaborator",
"Compass","boundary","Compass::Compass","constructor",
"Compass","boundary","Compass::init","command collaborator",
"Compass","boundary","Compass::_update_priority_list","property non-void-command collaborator",
"Compass","boundary","Compass::_reorder_compass_params","controller",
"Compass","boundary","Compass::register_compass","predicate non-void-command",
"Compass","boundary","Compass::_get_state_id","property wrapper",
"Compass","boundary","Compass::_add_backend","predicate non-void-command collaborator",
"Compass","boundary","Compass::_driver_enabled","predicate non-void-command collaborator",
"Compass","boundary","Compass::_have_i2c_driver","predicate controller",
"Compass","boundary","Compass::_probe_external_i2c_compasses","wrapper stateless",
"Compass","boundary","Compass::_detect_backends","command",
"Compass","boundary","Compass::probe_i2c_spi_compasses","command",
"Compass","boundary","Compass::probe_dronecan_compasses","command collaborator",
"Compass","boundary","Compass::is_replacement_mag","predicate wrapper",
"Compass","boundary","Compass::remove_unreg_dev_id","wrapper",
"Compass","boundary","Compass::_reset_compass_id","command collaborator",
"Compass","boundary","Compass::_detect_runtime","command collaborator",
"Compass","boundary","Compass::read","predicate non-void-command collaborator",
"Compass","boundary","Compass::get_healthy_mask","property collaborator",
"Compass","boundary","Compass::set_offsets","command collaborator",
"Compass","boundary","Compass::set_and_save_offsets","command collaborator",
"Compass","boundary","Compass::set_and_save_diagonals","command collaborator",
"Compass","boundary","Compass::set_and_save_offdiagonals","command collaborator",
"Compass","boundary","Compass::set_and_save_scale_factor","command collaborator",
"Compass","boundary","Compass::save_offsets","command collaborator",
"Compass","boundary","Compass::set_and_save_orientation","command collaborator",
"Compass","boundary","Compass::save_offsets","command collaborator",
"Compass","boundary","Compass::set_motor_compensation","command collaborator",
"Compass","boundary","Compass::save_motor_compensation","command collaborator",
"Compass","boundary","Compass::try_set_initial_location","set collaborator",
"Compass","boundary","Compass::use_for_yaw","predicate",
"Compass","boundary","Compass::use_for_yaw","get predicate",
"Compass","boundary","Compass::get_num_enabled","property",
"Compass","boundary","Compass::set_declination","command",
"Compass","boundary","Compass::get_declination","property",
"Compass","boundary","Compass::calculate_heading","property",
"Compass","boundary","Compass::configured","predicate non-void-command",
"Compass","boundary","Compass::configured","predicate non-void-command",
"Compass","boundary","Compass::motor_compensation_type","set",
"Compass","boundary","Compass::consistent","predicate",
"Compass","boundary","Compass::healthy","predicate",
"Compass","boundary","Compass::have_scale_factor","predicate collaborator",
"Compass","boundary","Compass::handle_msp","collaborator",
"Compass","boundary","Compass::handle_external","command collaborator",
"Compass","boundary","Compass::force_save_calibration","controller",
"Compass","boundary","Compass::cal_update","collaborator",
"Compass","boundary","Compass::_start_calibration","predicate non-void-command collaborator",
"Compass","boundary","Compass::_update_calibration_trampoline","controller",
"Compass","boundary","Compass::_start_calibration_mask","predicate non-void-command",
"Compass","boundary","Compass::start_calibration_all","predicate non-void-command",
"Compass","boundary","Compass::_cancel_calibration","set collaborator",
"Compass","boundary","Compass::_cancel_calibration_mask","command",
"Compass","boundary","Compass::cancel_calibration_all","command",
"Compass","boundary","Compass::_accept_calibration","predicate",
"Compass","boundary","Compass::_accept_calibration_mask","predicate non-void-command collaborator",
"Compass","boundary","Compass::send_mag_cal_progress","predicate set collaborator",
"Compass","boundary","Compass::send_mag_cal_report","predicate set collaborator",
"Compass","boundary","Compass::is_calibrating","predicate wrapper",
"Compass","boundary","Compass::_get_cal_mask","property wrapper",
"Compass","boundary","Compass::handle_mag_cal_command","property non-void-command collaborator",
"Compass","boundary","Compass::get_uncorrected_field","predicate collaborator",
"Compass","boundary","Compass::mag_cal_fixed_yaw","predicate non-void-command collaborator",
"Compass","boundary","init","empty",
"Compass","boundary","init","wrapper stateless",
"Compass","boundary","init","wrapper stateless",
"AP_Airspeed_MS5525","unclassified","~AP_Airspeed_MS5525","destructor",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::AP_Airspeed_MS5525","constructor",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::init","predicate non-void-command",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::crc4_prom","property wrapper",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::read_prom","predicate non-void-command",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::read_adc","property non-void-command",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::calculate","command",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::timer","command",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::get_differential_pressure","predicate non-void-command",
"AP_Airspeed_MS5525","unclassified","AP_Airspeed_MS5525::get_temperature","predicate non-void-command",
"AP_InertialNav","data-provider boundary","AP_InertialNav","constructor",
"AP_InertialNav","data-provider boundary","AP_InertialNav::update","command",
"AP_InertialNav","data-provider boundary","AP_InertialNav::get_filter_status","property collaborator",
"AP_InertialNav","data-provider boundary","AP_InertialNav::get_position_neu_cm","get collaborator",
"AP_InertialNav","data-provider boundary","AP_InertialNav::get_position_xy_cm","property collaborator",
"AP_InertialNav","data-provider boundary","AP_InertialNav::get_position_z_up_cm","get",
"AP_InertialNav","data-provider boundary","AP_InertialNav::get_velocity_neu_cms","get collaborator",
"AP_InertialNav","data-provider boundary","AP_InertialNav::get_velocity_xy_cms","property collaborator",
"AP_InertialNav","data-provider boundary","AP_InertialNav::get_speed_xy_cms","property",
"AP_InertialNav","data-provider boundary","AP_InertialNav::get_velocity_z_up_cms","get",
"RF_NMEA","degenerate","device_baud","incidental",
"RF_NMEA","degenerate","has_temperature","incidental",
"RF_NMEA","degenerate","RF_NMEA::packet_for_alt","wrapper stateless",
"RF_NMEA","degenerate","RF_NMEA::packet_for_temperature","wrapper stateless",
"ModeStabilize","degenerate","mode_number","collaborator incidental",
"ModeStabilize","degenerate","requires_GPS","incidental",
"ModeStabilize","degenerate","has_manual_throttle","incidental",
"ModeStabilize","degenerate","allows_arming","collaborator incidental",
"ModeStabilize","degenerate","is_autopilot","incidental",
"ModeStabilize","degenerate","allows_save_trim","incidental",
"ModeStabilize","degenerate","allows_autotune","incidental",
"ModeStabilize","degenerate","allows_flip","incidental",
"ModeStabilize","degenerate","name","incidental",
"ModeStabilize","degenerate","name4","incidental",
"ModeStabilize","degenerate","ModeStabilize::run","controller stateless",
"ModeStabilize","degenerate","ModeStabilize::stabilize_stick_mixing_direct","controller stateless",
"ModeStabilize","degenerate","ModeStabilize::update","incidental",
"ModeStabilize","degenerate","ModeStabilize::run","command",
"ModeStabilize","degenerate","ModeStabilize::init","controller stateless",
"ModeStabilize","degenerate","ModeStabilize::run","controller stateless",
"SimMCast","commander","SimMCast::multicast_open","command",
"SimMCast","commander","SimMCast::servo_fd_open","command",
"SimMCast","commander","SimMCast::servo_send","command",
"SimMCast","commander","SimMCast::multicast_read","command collaborator",
"SimMCast","commander","SimMCast::SimMCast","constructor",
"SimMCast","commander","SimMCast::update","set collaborator",
"AP_Baro_BMP581","unclassified","AP_Baro_BMP581::AP_Baro_BMP581","constructor",
"AP_Baro_BMP581","unclassified","AP_Baro_BMP581::probe","controller stateless",
"AP_Baro_BMP581","unclassified","AP_Baro_BMP581::init","predicate",
"AP_Baro_BMP581","unclassified","AP_Baro_BMP581::timer","command",
"AP_Baro_BMP581","unclassified","AP_Baro_BMP581::update","command",
"RCOutput_PCA9685","commander","supports_gpio","incidental",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::RCOutput_PCA9685","constructor",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::~RCOutput_PCA9685","destructor",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::init","command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::reset_all_channels","command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::set_freq","command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::get_freq","get",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::enable_ch","empty",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::disable_ch","command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::force_safety_on","predicate non-void-command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::force_safety_off","command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::write","command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::write_gpio","set",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::write_raw","command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::cork","set",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::push","command",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::read","get",
"RCOutput_PCA9685","commander","RCOutput_PCA9685::read","void-accessor command",
"RCOutput_PCA9685","commander","reset","controller stateless",
"AP_Baro_ExternalAHRS","commander small-class","AP_Baro_ExternalAHRS::AP_Baro_ExternalAHRS","constructor",
"AP_Baro_ExternalAHRS","commander small-class","AP_Baro_ExternalAHRS::update","command",
"AP_Baro_ExternalAHRS","commander small-class","AP_Baro_ExternalAHRS::handle_external","command collaborator",
"AccelCalibrator","boundary","set_tolerance","set",
"AccelCalibrator","boundary","get_status","get collaborator",
"AccelCalibrator","boundary","get_num_samples_collected","get",
"AccelCalibrator","boundary","get_fitness","get",
"AccelCalibrator","boundary","param_u","constructor",
"AccelCalibrator","boundary","AccelCalibrator::AccelCalibrator","constructor",
"AccelCalibrator","boundary","AccelCalibrator::start","wrapper stateless",
"AccelCalibrator","boundary","AccelCalibrator::start","command collaborator",
"AccelCalibrator","boundary","AccelCalibrator::clear","command",
"AccelCalibrator","boundary","AccelCalibrator::running","predicate",
"AccelCalibrator","boundary","AccelCalibrator::collect_sample","command",
"AccelCalibrator","boundary","AccelCalibrator::new_sample","void-accessor command collaborator",
"AccelCalibrator","boundary","AccelCalibrator::accept_result","predicate wrapper",
"AccelCalibrator","boundary","AccelCalibrator::get_sample","predicate collaborator",
"AccelCalibrator","boundary","AccelCalibrator::get_sample_corrected","predicate collaborator",
"AccelCalibrator","boundary","AccelCalibrator::check_for_timeout","command",
"AccelCalibrator","boundary","AccelCalibrator::get_calibration","void-accessor collaborator",
"AccelCalibrator","boundary","AccelCalibrator::get_calibration","void-accessor collaborator",
"AccelCalibrator","boundary","AccelCalibrator::get_calibration","void-accessor collaborator",
"AccelCalibrator","boundary","AccelCalibrator::accept_sample","predicate non-void-command collaborator",
"AccelCalibrator","boundary","AccelCalibrator::set_status","command collaborator",
"AccelCalibrator","boundary","AccelCalibrator::run_fit","void-accessor",
"AccelCalibrator","boundary","AccelCalibrator::calc_residual","wrapper stateless",
"AccelCalibrator","boundary","AccelCalibrator::calc_mean_squared_residuals","property collaborator",
"AccelCalibrator","boundary","AccelCalibrator::calc_jacob","void-accessor wrapper",
"AccelCalibrator","boundary","AccelCalibrator::get_num_params","property",
"AP_Baro_LPS2XH","commander","~AP_Baro_LPS2XH","destructor",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::AP_Baro_LPS2XH","constructor",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::probe","controller stateless",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::probe_InvensenseIMU","controller stateless",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::_imu_i2c_init","predicate non-void-command",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::_init","predicate non-void-command",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::_check_whoami","predicate set",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::_timer","command",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::update","command",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::_update_temperature","set",
"AP_Baro_LPS2XH","commander","AP_Baro_LPS2XH::_update_pressure","command",
"LowPassFilter2p","unclassified","LowPassFilter2p<T>::LowPassFilter2p","constructor",
"LowPassFilter2p","unclassified","LowPassFilter2p<T>::LowPassFilter2p","constructor",
"LowPassFilter2p","unclassified","LowPassFilter2p<T>::set_cutoff_frequency","wrapper",
"LowPassFilter2p","unclassified","LowPassFilter2p<T>::get_cutoff_freq","get",
"LowPassFilter2p","unclassified","LowPassFilter2p<T>::get_sample_freq","get",
"LowPassFilter2p","unclassified","LowPassFilter2p<T>::apply","property non-void-command collaborator",
"LowPassFilter2p","unclassified","LowPassFilter2p<T>::reset","command",
"LowPassFilter2p","unclassified","LowPassFilter2p<T>::reset","command collaborator",
"SPIDevice","boundary degenerate","SPIDevice","constructor",
"SPIDevice","boundary degenerate","~SPIDevice","destructor",
"SPIDevice","boundary degenerate","clock_pulse","incidental",
"SPIDevice","boundary degenerate","adjust_periodic_callback","incidental",
"SPIDevice","boundary degenerate","set_slowdown","empty",
"SPIDevice","boundary degenerate","SPIDevice::SPIDevice","constructor",
"SPIDevice","boundary degenerate","SPIDevice::~SPIDevice","destructor",
"SPIDevice","boundary degenerate","SPIDevice::get_driver","collaborator incidental",
"SPIDevice","boundary degenerate","SPIDevice::set_speed","collaborator incidental",
"SPIDevice","boundary degenerate","SPIDevice::set_slowdown","command",
"SPIDevice","boundary degenerate","SPIDevice::do_transfer","predicate non-void-command collaborator",
"SPIDevice","boundary degenerate","SPIDevice::clock_pulse","predicate non-void-command",
"SPIDevice","boundary degenerate","SPIDevice::derive_freq_flag_bus","wrapper stateless",
"SPIDevice","boundary degenerate","SPIDevice::derive_freq_flag","property non-void-command",
"SPIDevice","boundary degenerate","SPIDevice::transfer","predicate non-void-command",
"SPIDevice","boundary degenerate","SPIDevice::transfer_fullduplex","predicate non-void-command",
"SPIDevice","boundary degenerate","SPIDevice::get_semaphore","collaborator incidental",
"SPIDevice","boundary degenerate","SPIDevice::register_periodic_callback","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::adjust_periodic_callback","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::acquire_bus","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::set_chip_select","predicate non-void-command",
"SPIDevice","boundary degenerate","SPIDevice::test_clock_freq","command",
"SPIDevice","boundary degenerate","SPIDevice::SPIDevice","copy-constructor",
"SPIDevice","boundary degenerate","SPIDevice::~SPIDevice","destructor",
"SPIDevice","boundary degenerate","SPIDevice::current_handle","collaborator incidental",
"SPIDevice","boundary degenerate","SPIDevice::set_speed","wrapper stateless",
"SPIDevice","boundary degenerate","SPIDevice::transfer","predicate non-void-command",
"SPIDevice","boundary degenerate","SPIDevice::transfer_fullduplex","predicate non-void-command collaborator",
"SPIDevice","boundary degenerate","SPIDevice::acquire_bus","command",
"SPIDevice","boundary degenerate","SPIDevice::get_semaphore","wrapper stateless",
"SPIDevice","boundary degenerate","SPIDevice::register_periodic_callback","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::adjust_periodic_callback","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::SPIDevice","constructor",
"SPIDevice","boundary degenerate","SPIDevice::~SPIDevice","destructor",
"SPIDevice","boundary degenerate","SPIDevice::set_speed","collaborator incidental",
"SPIDevice","boundary degenerate","SPIDevice::transfer","predicate non-void-command",
"SPIDevice","boundary degenerate","SPIDevice::transfer_fullduplex","predicate non-void-command",
"SPIDevice","boundary degenerate","SPIDevice::_cs_assert","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::_cs_release","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::get_semaphore","collaborator incidental",
"SPIDevice","boundary degenerate","SPIDevice::register_periodic_callback","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::adjust_periodic_callback","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::SPIDevice","constructor",
"SPIDevice","boundary degenerate","SPIDevice::get_semaphore","collaborator incidental",
"SPIDevice","boundary degenerate","SPIDevice::transfer","controller stateless",
"SPIDevice","boundary degenerate","SPIDevice::register_periodic_callback","controller stateless",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::AP_Baro_MS56XX","constructor",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::probe","controller stateless",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_init","predicate non-void-command collaborator",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_read_prom_word","property non-void-command",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_read_adc","property non-void-command",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_read_prom_5611","predicate non-void-command",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_read_prom_5637","predicate non-void-command",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_timer","command",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_update_and_wrap_accumulator","incidental",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::update","command",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_calculate_5611","wrapper",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_calculate_5607","wrapper",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_calculate_5637","wrapper",
"AP_Baro_MS56XX","unclassified","AP_Baro_MS56XX::_calculate_5837","wrapper",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::AP_Compass_AK09916","constructor",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::~AP_Compass_AK09916","destructor",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::probe","controller stateless",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::probe_ICM20948","property non-void-command collaborator",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::probe_ICM20948","property non-void-command collaborator",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::probe_ICM20948_SPI","controller stateless",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::probe_ICM20948_I2C","controller stateless",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::init","predicate non-void-command collaborator",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::read","wrapper",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::_make_adc_sensitivity_adjustment","collaborator incidental",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::_update","command collaborator",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::_check_id","predicate set",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::_setup_mode","predicate non-void-command",
"AP_Compass_AK09916","boundary","AP_Compass_AK09916::_reset","predicate non-void-command",
"AP_BattMonitor","data-provider","num_instances","get",
"AP_BattMonitor","data-provider","voltage","property",
"AP_BattMonitor","data-provider","gcs_voltage","property",
"AP_BattMonitor","data-provider","voltage_resting_estimate","property",
"AP_BattMonitor","data-provider","capacity_remaining_pct","predicate",
"AP_BattMonitor","data-provider","pack_capacity_mah","property",
"AP_BattMonitor","data-provider","has_failsafed","get",
"AP_BattMonitor","data-provider","get_highest_failsafe_priority","get",
"AP_BattMonitor","data-provider","configured_type","property controller",
"AP_BattMonitor","data-provider","allocated_type","get collaborator",
"AP_BattMonitor","data-provider","get_serial_number","property",
"AP_BattMonitor","data-provider","get_serial_number","get",
"AP_BattMonitor","data-provider","has_cell_voltages","predicate",
"AP_BattMonitor","data-provider","get_cell_voltages","property collaborator",
"AP_BattMonitor","data-provider","get_temperature","predicate",
"AP_BattMonitor","data-provider","get_resistance","property",
"AP_BattMonitor","data-provider","get_resistance","get",
"AP_BattMonitor","data-provider","reset_remaining","predicate non-void-command",
"AP_BattMonitor","data-provider","AP_BattMonitor::AP_BattMonitor","constructor",
"AP_BattMonitor","data-provider","AP_BattMonitor::init","command collaborator",
"AP_BattMonitor","data-provider","AP_BattMonitor::convert_dynamic_param_groups","controller stateless",
"AP_BattMonitor","data-provider","AP_BattMonitor::read","command",
"AP_BattMonitor","data-provider","AP_BattMonitor::healthy","predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::voltage","get property",
"AP_BattMonitor","data-provider","AP_BattMonitor::voltage_resting_estimate","get property",
"AP_BattMonitor","data-provider","AP_BattMonitor::gcs_voltage","get property",
"AP_BattMonitor","data-provider","AP_BattMonitor::current_amps","predicate wrapper",
"AP_BattMonitor","data-provider","AP_BattMonitor::consumed_mah","predicate wrapper",
"AP_BattMonitor","data-provider","AP_BattMonitor::consumed_wh","predicate wrapper",
"AP_BattMonitor","data-provider","AP_BattMonitor::capacity_remaining_pct","get predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::time_remaining","predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::pack_capacity_mah","get property",
"AP_BattMonitor","data-provider","AP_BattMonitor::check_failsafes","command",
"AP_BattMonitor","data-provider","AP_BattMonitor::overpower_detected","predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::overpower_detected","get predicate wrapper",
"AP_BattMonitor","data-provider","AP_BattMonitor::has_cell_voltages","get predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::get_cell_voltages","get collaborator",
"AP_BattMonitor","data-provider","AP_BattMonitor::get_cell_voltage","predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::get_temperature","get predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::set_temperature","predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::set_temperature_by_serial_number","predicate non-void-command",
"AP_BattMonitor","data-provider","AP_BattMonitor::get_cycle_count","get predicate wrapper",
"AP_BattMonitor","data-provider","AP_BattMonitor::arming_checks","predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::checkPoweringOff","wrapper",
"AP_BattMonitor","data-provider","AP_BattMonitor::reset_remaining_mask","predicate non-void-command",
"AP_BattMonitor","data-provider","AP_BattMonitor::get_mavlink_charge_state","property collaborator",
"AP_BattMonitor","data-provider","AP_BattMonitor::get_mavlink_fault_bitmask","get property",
"AP_BattMonitor","data-provider","AP_BattMonitor::get_state_of_health_pct","get predicate wrapper",
"AP_BattMonitor","data-provider","AP_BattMonitor::MPPT_set_powered_state_to_all","command",
"AP_BattMonitor","data-provider","AP_BattMonitor::MPPT_set_powered_state","wrapper",
"AP_BattMonitor","data-provider","AP_BattMonitor::healthy","predicate",
"AP_BattMonitor","data-provider","AP_BattMonitor::handle_scripting","get predicate wrapper",
"AP_BattMonitor","data-provider","init","empty",
"AP_BattMonitor","data-provider","init","set",
"AP_BattMonitor","data-provider","init","set",
"AP_Volz_Protocol","commander","update","wrapper stateless",
"AP_Volz_Protocol","commander","AP_Volz_Protocol::AP_Volz_Protocol","constructor",
"AP_Volz_Protocol","commander","AP_Volz_Protocol::init","set collaborator",
"AP_Volz_Protocol","commander","AP_Volz_Protocol::update","command",
"AP_Volz_Protocol","commander","AP_Volz_Protocol::send_command","command",
"AP_Volz_Protocol","commander","AP_Volz_Protocol::update_volz_bitmask","command",
"ObjectArray","unclassified","ObjectArray","constructor",
"ObjectArray","unclassified","~ObjectArray","destructor",
"ObjectArray","unclassified","size","get",
"ObjectArray","unclassified","available","get",
"ObjectArray","unclassified","space","property",
"ObjectArray","unclassified","is_empty","predicate",
"ObjectArray","unclassified","push","predicate non-void-command collaborator",
"ObjectArray","unclassified","pop","predicate non-void-command",
"ObjectArray","unclassified","clear","command",
"ObjectArray","unclassified","pop","predicate non-void-command collaborator",
"ObjectArray","unclassified","push_force","predicate non-void-command collaborator",
"ObjectArray","unclassified","remove","predicate set",
"ObjectArray","unclassified","operator[]","property collaborator",
"AP_BattMonitor_AD7091R5","unclassified","has_consumed_energy","predicate",
"AP_BattMonitor_AD7091R5","unclassified","has_current","incidental",
"AP_BattMonitor_AD7091R5","unclassified","AP_BattMonitor_AD7091R5::AP_BattMonitor_AD7091R5","constructor",
"AP_BattMonitor_AD7091R5","unclassified","AP_BattMonitor_AD7091R5::init","command",
"AP_BattMonitor_AD7091R5","unclassified","AP_BattMonitor_AD7091R5::read","command",
"AP_BattMonitor_AD7091R5","unclassified","AP_BattMonitor_AD7091R5::_read_adc","command",
"AP_BattMonitor_AD7091R5","unclassified","AP_BattMonitor_AD7091R5::_initialize","predicate non-void-command",
"AP_BattMonitor_AD7091R5","unclassified","AP_BattMonitor_AD7091R5::_data_to_volt","incidental",
"AP_GPS_Backend","unclassified","~AP_GPS_Backend","destructor",
"AP_GPS_Backend","unclassified","highest_supported_status","collaborator incidental",
"AP_GPS_Backend","unclassified","is_configured","incidental",
"AP_GPS_Backend","unclassified","supports_mavlink_gps_rtk_message","incidental",
"AP_GPS_Backend","unclassified","handle_msg","collaborator incidental",
"AP_GPS_Backend","unclassified","broadcast_configuration_failure_reason","incidental",
"AP_GPS_Backend","unclassified","handle_msp","collaborator incidental",
"AP_GPS_Backend","unclassified","handle_external","collaborator incidental",
"AP_GPS_Backend","unclassified","get_lag","incidental",
"AP_GPS_Backend","unclassified","is_healthy","incidental",
"AP_GPS_Backend","unclassified","logging_healthy","incidental",
"AP_GPS_Backend","unclassified","prepare_for_arming","incidental",
"AP_GPS_Backend","unclassified","get_RTCMV3","incidental",
"AP_GPS_Backend","unclassified","clear_RTCMV3","empty",
"AP_GPS_Backend","unclassified","get_error_codes","incidental",
"AP_GPS_Backend","unclassified","option_set","predicate collaborator",
"AP_GPS_Backend","unclassified","get_type","property collaborator",
"AP_GPS_Backend","unclassified","set_pps_desired_freq","empty",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::AP_GPS_Backend","constructor",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::make_gps_time","command",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::get_last_itow_ms","get property",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::fill_3d_velocity","command",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::velocity_to_speed_course","controller stateless",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::inject_data","command",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::_detection_message","controller",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::broadcast_gps_type","unclassified",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::Write_AP_Logger_Log_Startup_messages","unclassified",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::should_log","predicate",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::send_mavlink_gps_rtk","wrapper",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::set_uart_timestamp","command",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::check_new_itow","command",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::calculate_moving_base_yaw","predicate non-void-command",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::calculate_moving_base_yaw","predicate controller",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::set_alt_amsl_cm","void-accessor command",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::log_data","set",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::logging_loop","controller stateless",
"AP_GPS_Backend","unclassified","AP_GPS_Backend::logging_start","command",
"AP_BattMonitor_Analog","unclassified","has_consumed_energy","predicate",
"AP_BattMonitor_Analog","unclassified","init","empty",
"AP_BattMonitor_Analog","unclassified","AP_BattMonitor_Analog::AP_BattMonitor_Analog","constructor",
"AP_BattMonitor_Analog","unclassified","AP_BattMonitor_Analog::read","command",
"AP_BattMonitor_Analog","unclassified","AP_BattMonitor_Analog::has_current","predicate",
"AP_Proximity_Cygbot_D1","commander","distance_max","incidental",
"AP_Proximity_Cygbot_D1","commander","distance_min","incidental",
"AP_Proximity_Cygbot_D1","commander","AP_Proximity_Cygbot_D1::update","command",
"AP_Proximity_Cygbot_D1","commander","AP_Proximity_Cygbot_D1::send_sensor_start","command",
"AP_Proximity_Cygbot_D1","commander","AP_Proximity_Cygbot_D1::read_sensor_data","command",
"AP_Proximity_Cygbot_D1","commander","AP_Proximity_Cygbot_D1::parse_byte","predicate non-void-command",
"AP_Proximity_Cygbot_D1","commander","AP_Proximity_Cygbot_D1::parse_payload","command collaborator",
"AP_Proximity_Cygbot_D1","commander","AP_Proximity_Cygbot_D1::calc_checksum","incidental",
"AP_Proximity_Cygbot_D1","commander","AP_Proximity_Cygbot_D1::reset","command",
"AP_Proximity_Cygbot_D1","commander","reset","controller stateless",
"Bitmask","unclassified","Bitmask","constructor",
"Bitmask","unclassified","operator=","property wrapper",
"Bitmask","unclassified","operator==","predicate wrapper",
"Bitmask","unclassified","operator!=","incidental",
"Bitmask","unclassified","set","set",
"Bitmask","unclassified","setall","command",
"Bitmask","unclassified","clear","set",
"Bitmask","unclassified","setonoff","command",
"Bitmask","unclassified","clearall","wrapper",
"Bitmask","unclassified","get","get predicate wrapper",
"Bitmask","unclassified","empty","predicate",
"Bitmask","unclassified","count","property wrapper",
"Bitmask","unclassified","first_set","property wrapper",
"Bitmask","unclassified","size","get",
"AP_BattMonitor_FuelLevel_Analog","commander degenerate","has_consumed_energy","incidental",
"AP_BattMonitor_FuelLevel_Analog","commander degenerate","has_current","incidental",
"AP_BattMonitor_FuelLevel_Analog","commander degenerate","init","empty",
"AP_BattMonitor_FuelLevel_Analog","commander degenerate","AP_BattMonitor_FuelLevel_Analog::AP_BattMonitor_FuelLevel_Analog","constructor",
"AP_BattMonitor_FuelLevel_Analog","commander degenerate","AP_BattMonitor_FuelLevel_Analog::read","command",
"AP_BattMonitor_INA239","unclassified","has_cell_voltages","incidental",
"AP_BattMonitor_INA239","unclassified","has_temperature","incidental",
"AP_BattMonitor_INA239","unclassified","has_current","incidental",
"AP_BattMonitor_INA239","unclassified","get_cycle_count","incidental",
"AP_BattMonitor_INA239","unclassified","AP_BattMonitor_INA239::AP_BattMonitor_INA239","constructor",
"AP_BattMonitor_INA239","unclassified","AP_BattMonitor_INA239::init","unclassified",
"AP_BattMonitor_INA239","unclassified","AP_BattMonitor_INA239::configure","command",
"AP_BattMonitor_INA239","unclassified","AP_BattMonitor_INA239::read","command",
"AP_BattMonitor_INA239","unclassified","AP_BattMonitor_INA239::read_word","predicate",
"AP_BattMonitor_INA239","unclassified","AP_BattMonitor_INA239::write_word","predicate",
"AP_BattMonitor_INA239","unclassified","AP_BattMonitor_INA239::timer","command",
"AP_WheelEncoder","data-provider","num_sensors","get",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::AP_WheelEncoder","constructor",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::init","command",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::update","command",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::Log_Write","collaborator",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::healthy","predicate",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::enabled","predicate",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_counts_per_revolution","property",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_wheel_radius","get property",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_pos_offset","get collaborator",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_delta_angle","property",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_distance","property",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_rate","property",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_total_count","get property",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_error_count","get property",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_signal_quality","property wrapper",
"AP_WheelEncoder","data-provider","AP_WheelEncoder::get_last_reading_ms","get property",
"Empty::Flash","degenerate","getpageaddr","incidental",
"Empty::Flash","degenerate","getpagesize","incidental",
"Empty::Flash","degenerate","getnumpages","incidental",
"Empty::Flash","degenerate","erasepage","incidental",
"Empty::Flash","degenerate","write","incidental",
"Empty::Flash","degenerate","keep_unlocked","empty",
"Empty::Flash","degenerate","ispageerased","incidental",
"ModeAltHold","degenerate","mode_number","collaborator incidental",
"ModeAltHold","degenerate","requires_GPS","incidental",
"ModeAltHold","degenerate","has_manual_throttle","incidental",
"ModeAltHold","degenerate","allows_arming","collaborator incidental",
"ModeAltHold","degenerate","is_autopilot","incidental",
"ModeAltHold","degenerate","has_user_takeoff","incidental",
"ModeAltHold","degenerate","allows_autotune","incidental",
"ModeAltHold","degenerate","allows_flip","incidental",
"ModeAltHold","degenerate","name","incidental",
"ModeAltHold","degenerate","name4","incidental",
"ModeAltHold","degenerate","ModeAltHold::init","controller stateless",
"ModeAltHold","degenerate","ModeAltHold::run","controller stateless",
"AP_BattMonitor_INA2XX","unclassified","has_cell_voltages","incidental",
"AP_BattMonitor_INA2XX","unclassified","has_temperature","get",
"AP_BattMonitor_INA2XX","unclassified","has_current","incidental",
"AP_BattMonitor_INA2XX","unclassified","get_cycle_count","incidental",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::AP_BattMonitor_INA2XX","constructor",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::init","set",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::configure","predicate non-void-command collaborator",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::read","command",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::read_word16","predicate",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::read_word24","predicate",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::write_word","predicate",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::detect_device","predicate non-void-command",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::timer","command",
"AP_BattMonitor_INA2XX","unclassified","AP_BattMonitor_INA2XX::get_temperature","get",
"AP_InternalError","data-provider","last_error_line","get",
"AP_InternalError","data-provider","count","get",
"AP_InternalError","data-provider","errors","get",
"AP_InternalError","data-provider","AP_InternalError::error","command",
"AP_InternalError","data-provider","AP_InternalError::error_to_string","wrapper stateless",
"AP_InternalError","data-provider","AP_InternalError::errors_as_string","void-accessor controller",
"TestCall","degenerate small-class","foo","incidental",
"LoggerMessageWriter_DFLogStart","unclassified","LoggerMessageWriter_DFLogStart","constructor",
"LoggerMessageWriter_DFLogStart","unclassified","set_logger_backend","command collaborator",
"LoggerMessageWriter_DFLogStart","unclassified","fmt_done","get",
"LoggerMessageWriter_DFLogStart","unclassified","params_done","get",
"LoggerMessageWriter_DFLogStart","unclassified","LoggerMessageWriter_DFLogStart::reset","command",
"LoggerMessageWriter_DFLogStart","unclassified","LoggerMessageWriter_DFLogStart::out_of_time_for_writing_messages_df","predicate wrapper",
"LoggerMessageWriter_DFLogStart","unclassified","LoggerMessageWriter_DFLogStart::check_process_limit","wrapper stateless",
"LoggerMessageWriter_DFLogStart","unclassified","LoggerMessageWriter_DFLogStart::process","command collaborator",
"LoggerMessageWriter_DFLogStart","unclassified","LoggerMessageWriter_DFLogStart::writeentiremission","predicate non-void-command",
"LoggerMessageWriter_DFLogStart","unclassified","LoggerMessageWriter_DFLogStart::writeallrallypoints","predicate non-void-command",
"LoggerMessageWriter_DFLogStart","unclassified","LoggerMessageWriter_DFLogStart::writeallfence","predicate non-void-command",
"AP_BattMonitor_Params","data-provider boundary small-class","failsafe_voltage_source","property collaborator",
"AP_BattMonitor_Params","data-provider boundary small-class","AP_BattMonitor_Params::AP_BattMonitor_Params","constructor",
"Loiter","commander boundary small-class","Loiter::run","command collaborator",
"CompassCalibrator","boundary","CompassCalibrator::CompassCalibrator","constructor",
"CompassCalibrator","boundary","CompassCalibrator::stop","command",
"CompassCalibrator","boundary","CompassCalibrator::set_orientation","wrapper",
"CompassCalibrator","boundary","CompassCalibrator::start","command",
"CompassCalibrator","boundary","CompassCalibrator::new_sample","collaborator",
"CompassCalibrator","boundary","CompassCalibrator::failed","predicate wrapper",
"CompassCalibrator","boundary","CompassCalibrator::running","predicate wrapper",
"CompassCalibrator","boundary","CompassCalibrator::get_report","property wrapper",
"CompassCalibrator","boundary","CompassCalibrator::get_state","property wrapper",
"CompassCalibrator","boundary","CompassCalibrator::update","command",
"CompassCalibrator","boundary","CompassCalibrator::pull_sample","command collaborator",
"CompassCalibrator","boundary","CompassCalibrator::update_cal_settings","command",
"CompassCalibrator","boundary","CompassCalibrator::update_completion_mask","set collaborator",
"CompassCalibrator","boundary","CompassCalibrator::update_completion_mask","command",
"CompassCalibrator","boundary","CompassCalibrator::update_cal_status","wrapper",
"CompassCalibrator","boundary","CompassCalibrator::update_cal_report","wrapper",
"CompassCalibrator","boundary","CompassCalibrator::_running","predicate",
"CompassCalibrator","boundary","CompassCalibrator::_fitting","predicate",
"CompassCalibrator","boundary","CompassCalibrator::initialize_fit","command",
"CompassCalibrator","boundary","CompassCalibrator::reset_state","command",
"CompassCalibrator","boundary","CompassCalibrator::set_status","predicate non-void-command collaborator",
"CompassCalibrator","boundary","CompassCalibrator::fit_acceptable","predicate wrapper",
"CompassCalibrator","boundary","CompassCalibrator::thin_samples","command",
"CompassCalibrator","boundary","CompassCalibrator::accept_sample","predicate wrapper",
"CompassCalibrator","boundary","CompassCalibrator::accept_sample","predicate non-void-command",
"CompassCalibrator","boundary","CompassCalibrator::calc_residual","wrapper stateless",
"CompassCalibrator","boundary","CompassCalibrator::calc_mean_squared_residuals","property collaborator",
"CompassCalibrator","boundary","CompassCalibrator::calc_initial_offset","set",
"CompassCalibrator","boundary","CompassCalibrator::calc_sphere_jacob","wrapper stateless",
"CompassCalibrator","boundary","CompassCalibrator::run_sphere_fit","command",
"CompassCalibrator","boundary","CompassCalibrator::calc_ellipsoid_jacob","wrapper stateless",
"CompassCalibrator","boundary","CompassCalibrator::run_ellipsoid_fit","command",
"CompassCalibrator","boundary","CompassCalibrator::calculate_earth_field","property controller",
"CompassCalibrator","boundary","CompassCalibrator::calculate_orientation","predicate non-void-command collaborator",
"CompassCalibrator","boundary","CompassCalibrator::fix_radius","predicate set",
"CompassCalibrator","boundary","CompassCalibrator::auto_rotation_index","wrapper stateless",
"CompassCalibrator","boundary","CompassCalibrator::right_angle_rotation","collaborator incidental",
"CompassCalibrator","boundary","update","wrapper stateless",
"AP_BattMonitor_SMBus_Maxell","degenerate small-class","get_capacity_scaler","incidental",
"VRBoard_LED","pure-controller degenerate small-class","VRBoard_LED::VRBoard_LED","constructor",
"VRBoard_LED","pure-controller degenerate small-class","VRBoard_LED::init","controller stateless",
"VRBoard_LED","pure-controller degenerate small-class","VRBoard_LED::hw_set_rgb","controller stateless",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::open","property non-void-command collaborator",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::close","property non-void-command",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::read","property non-void-command",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::write","property non-void-command",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::fsync","property non-void-command",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::lseek","property non-void-command",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::stat","property non-void-command collaborator",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::unlink","property non-void-command",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::mkdir","wrapper stateless",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::opendir","property command collaborator",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::readdir","property non-void-command collaborator",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::closedir","property non-void-command",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::rename","property non-void-command",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::disk_free","wrapper stateless",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::disk_space","wrapper stateless",
"AP_Filesystem_Posix","unclassified","AP_Filesystem_Posix::set_mtime","wrapper stateless",
"AP_RCProtocol_Backend","data-provider","~AP_RCProtocol_Backend","destructor",
"AP_RCProtocol_Backend","data-provider","process_pulse","empty",
"AP_RCProtocol_Backend","data-provider","process_byte","empty",
"AP_RCProtocol_Backend","data-provider","process_handshake","empty",
"AP_RCProtocol_Backend","data-provider","start_bind","empty",
"AP_RCProtocol_Backend","data-provider","update","empty",
"AP_RCProtocol_Backend","data-provider","update_radio_rc_channels","empty",
"AP_RCProtocol_Backend","data-provider","get_rc_frame_count","get",
"AP_RCProtocol_Backend","data-provider","reset_rc_frame_count","set",
"AP_RCProtocol_Backend","data-provider","get_rc_input_count","get",
"AP_RCProtocol_Backend","data-provider","get_rc_protocols_mask","get",
"AP_RCProtocol_Backend","data-provider","protocol_enabled","predicate collaborator",
"AP_RCProtocol_Backend","data-provider","get_RSSI","get",
"AP_RCProtocol_Backend","data-provider","get_rx_link_quality","get",
"AP_RCProtocol_Backend","data-provider","get_UART","property collaborator",
"AP_RCProtocol_Backend","data-provider","get_available_UART","property collaborator",
"AP_RCProtocol_Backend","data-provider","have_UART","predicate",
"AP_RCProtocol_Backend","data-provider","is_rx_active","incidental",
"AP_RCProtocol_Backend","data-provider","is_detected","predicate",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::AP_RCProtocol_Backend","constructor",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::new_input","predicate set",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::num_channels","get",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::read","get",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::read","wrapper",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::add_input","command",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::decode_11bit_channels","wrapper stateless",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::configure_vtx","controller stateless",
"AP_RCProtocol_Backend","data-provider","AP_RCProtocol_Backend::log_data","wrapper stateless",
"Scheduler","commander boundary","is_system_initialized","get",
"Scheduler","commander boundary","stopped_clock_usec","get",
"Scheduler","commander boundary","set_cpu_affinity","set collaborator",
"Scheduler","commander boundary","Scheduler::register_delay_callback","incidental",
"Scheduler","commander boundary","Scheduler::call_delay_cb","wrapper stateless",
"Scheduler","commander boundary","Scheduler::Scheduler","constructor",
"Scheduler","commander boundary","Scheduler::init","wrapper",
"Scheduler","commander boundary","Scheduler::delay_microseconds","wrapper stateless",
"Scheduler","commander boundary","Scheduler::boost_end","command",
"Scheduler","commander boundary","Scheduler::delay_microseconds_boost","command",
"Scheduler","commander boundary","Scheduler::check_called_boost","incidental",
"Scheduler","commander boundary","Scheduler::delay","command collaborator",
"Scheduler","commander boundary","Scheduler::register_timer_process","command collaborator",
"Scheduler","commander boundary","Scheduler::register_io_process","command collaborator",
"Scheduler","commander boundary","Scheduler::register_timer_failsafe","set",
"Scheduler","commander boundary","Scheduler::reboot","controller stateless",
"Scheduler","commander boundary","Scheduler::_run_timers","set",
"Scheduler","commander boundary","Scheduler::_timer_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::_rcout_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::in_expected_delay","predicate wrapper",
"Scheduler","commander boundary","Scheduler::_monitor_thread","command collaborator",
"Scheduler","commander boundary","Scheduler::_rcin_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::_run_io","wrapper",
"Scheduler","commander boundary","Scheduler::_io_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::check_low_memory_is_zero","wrapper stateless",
"Scheduler","commander boundary","Scheduler::_storage_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::set_system_initialized","set",
"Scheduler","commander boundary","Scheduler::disable_interrupts_save","wrapper stateless",
"Scheduler","commander boundary","Scheduler::restore_interrupts","wrapper stateless",
"Scheduler","commander boundary","Scheduler::thread_create_trampoline","wrapper stateless",
"Scheduler","commander boundary","Scheduler::calculate_thread_priority","wrapper stateless",
"Scheduler","commander boundary","Scheduler::thread_create","predicate non-void-command collaborator",
"Scheduler","commander boundary","Scheduler::_expect_delay_ms","command",
"Scheduler","commander boundary","Scheduler::expect_delay_ms","command",
"Scheduler","commander boundary","Scheduler::watchdog_pat","command",
"Scheduler","commander boundary","Scheduler::ext_watchdog_pat","wrapper stateless",
"Scheduler","commander boundary","Scheduler::check_stack_free","wrapper stateless",
"Scheduler","commander boundary","Scheduler::try_force_mutex","wrapper stateless",
"Scheduler","commander boundary","Scheduler::Scheduler","constructor",
"Scheduler","commander boundary","Scheduler::init","controller",
"Scheduler","commander boundary","Scheduler::thread_create_trampoline","wrapper stateless",
"Scheduler","commander boundary","Scheduler::thread_create","wrapper stateless",
"Scheduler","commander boundary","Scheduler::delay","command",
"Scheduler","commander boundary","Scheduler::delay_microseconds","command",
"Scheduler","commander boundary","Scheduler::register_timer_process","command collaborator",
"Scheduler","commander boundary","Scheduler::register_io_process","command collaborator",
"Scheduler","commander boundary","Scheduler::register_timer_failsafe","set",
"Scheduler","commander boundary","Scheduler::reboot","controller stateless",
"Scheduler","commander boundary","Scheduler::in_main_thread","wrapper stateless",
"Scheduler","commander boundary","Scheduler::set_system_initialized","set",
"Scheduler","commander boundary","Scheduler::is_system_initialized","get",
"Scheduler","commander boundary","Scheduler::_timer_thread","controller",
"Scheduler","commander boundary","Scheduler::_rcout_thread","controller",
"Scheduler","commander boundary","Scheduler::_run_timers","set",
"Scheduler","commander boundary","Scheduler::_rcin_thread","controller",
"Scheduler","commander boundary","Scheduler::_run_io","controller",
"Scheduler","commander boundary","Scheduler::_io_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::_storage_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::_print_profile","controller stateless",
"Scheduler","commander boundary","Scheduler::_uart_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::get_loop_rate_hz","incidental",
"Scheduler","commander boundary","Scheduler::print_stats","wrapper stateless",
"Scheduler","commander boundary","Scheduler::print_main_loop_rate","command",
"Scheduler","commander boundary","Scheduler::_main_thread","controller stateless",
"Scheduler","commander boundary","Scheduler::Scheduler","constructor",
"Scheduler","commander boundary","Scheduler::init_realtime","wrapper stateless",
"Scheduler","commander boundary","Scheduler::init_cpu_affinity","wrapper",
"Scheduler","commander boundary","Scheduler::init","collaborator",
"Scheduler","commander boundary","Scheduler::_debug_stack","unclassified",
"Scheduler","commander boundary","Scheduler::microsleep","wrapper stateless",
"Scheduler","commander boundary","Scheduler::delay","command",
"Scheduler","commander boundary","Scheduler::delay_microseconds","command",
"Scheduler","commander boundary","Scheduler::register_timer_process","command collaborator",
"Scheduler","commander boundary","Scheduler::register_io_process","command collaborator",
"Scheduler","commander boundary","Scheduler::register_timer_failsafe","set",
"Scheduler","commander boundary","Scheduler::_timer_task","set",
"Scheduler","commander boundary","Scheduler::_run_io","command",
"Scheduler","commander boundary","Scheduler::_run_uarts","controller stateless",
"Scheduler","commander boundary","Scheduler::_rcin_task","wrapper stateless",
"Scheduler","commander boundary","Scheduler::_uart_task","command",
"Scheduler","commander boundary","Scheduler::_io_task","command",
"Scheduler","commander boundary","Scheduler::in_main_thread","predicate wrapper",
"Scheduler","commander boundary","Scheduler::_wait_all_threads","wrapper",
"Scheduler","commander boundary","Scheduler::set_system_initialized","set",
"Scheduler","commander boundary","Scheduler::reboot","incidental",
"Scheduler","commander boundary","Scheduler::stop_clock","set",
"Scheduler","commander boundary","Scheduler::stop_clock","empty",
"Scheduler","commander boundary","Scheduler::teardown","command",
"Scheduler","commander boundary","Scheduler::calculate_thread_priority","wrapper stateless",
"Scheduler","commander boundary","Scheduler::thread_create","predicate non-void-command",
"Scheduler","commander boundary","Scheduler::Scheduler","constructor",
"Scheduler","commander boundary","Scheduler::init","set",
"Scheduler","commander boundary","Scheduler::in_main_thread","predicate wrapper",
"Scheduler","commander boundary","Scheduler::semaphore_wait_hack_required","predicate wrapper",
"Scheduler","commander boundary","Scheduler::delay_microseconds","controller stateless",
"Scheduler","commander boundary","Scheduler::delay","command",
"Scheduler","commander boundary","Scheduler::register_timer_process","command collaborator",
"Scheduler","commander boundary","Scheduler::register_io_process","command collaborator",
"Scheduler","commander boundary","Scheduler::register_timer_failsafe","set",
"Scheduler","commander boundary","Scheduler::set_system_initialized","set",
"Scheduler","commander boundary","Scheduler::sitl_end_atomic","controller stateless",
"Scheduler","commander boundary","Scheduler::reboot","wrapper stateless",
"Scheduler","commander boundary","Scheduler::_run_timer_procs","set",
"Scheduler","commander boundary","Scheduler::_run_io_procs","command",
"Scheduler","commander boundary","Scheduler::stop_clock","set",
"Scheduler","commander boundary","Scheduler::thread_create_trampoline","wrapper stateless",
"Scheduler","commander boundary","Scheduler::thread_create","wrapper stateless",
"Scheduler","commander boundary","Scheduler::check_thread_stacks","wrapper stateless",
"Scheduler","commander boundary","Scheduler::get_current_thread_name","wrapper stateless",
"AP_BattMonitor_SMBus_Rotoye","boundary degenerate small-class","AP_BattMonitor_SMBus_Rotoye::read_temp","wrapper stateless",
"AP_ADSB_Backend","degenerate small-class","~AP_ADSB_Backend","destructor",
"AP_ADSB_Backend","degenerate small-class","init","incidental",
"AP_ADSB_Backend","degenerate small-class","AP_ADSB_Backend::AP_ADSB_Backend","constructor",
"AP_RAMTRON","unclassified","get_size","property",
"AP_RAMTRON","unclassified","AP_RAMTRON::init","predicate non-void-command collaborator",
"AP_RAMTRON","unclassified","AP_RAMTRON::send_offset","unclassified",
"AP_RAMTRON","unclassified","AP_RAMTRON::read","predicate non-void-command",
"AP_RAMTRON","unclassified","AP_RAMTRON::write","predicate non-void-command",
"GCS_MAVLINK_Copter","controller degenerate","vtol_state","collaborator incidental",
"GCS_MAVLINK_Copter","controller degenerate","log_radio_bit","incidental",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::base_mode","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::vehicle_system_status","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::send_attitude_target","controller",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::send_position_target_global_int","controller",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::send_position_target_local_ned","controller",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::send_nav_controller_output","controller",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::vfr_hud_airspeed","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::vfr_hud_throttle","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::send_pid_tuning","controller",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::send_winch_status","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::sysid_my_gcs","incidental",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::sysid_enforce","incidental",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::telem_delay","incidental",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::try_send_message","predicate non-void-command collaborator",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::mission_state","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_guided_request","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::packetReceived","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::params_ready","wrapper stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::send_banner","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_command_ack","wrapper stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_landing_target","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::_handle_command_preflight_calibration","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_command_do_set_roi","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_preflight_reboot","wrapper stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_command_int_do_reposition","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_command_int_packet","property non-void-command collaborator",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_command_mount","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_NAV_TAKEOFF","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::mav_frame_for_command_long","wrapper stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_CONDITION_YAW","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_DO_CHANGE_SPEED","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_MISSION_START","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_DO_PARACHUTE","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_DO_MOTOR_TEST","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_DO_WINCH","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_SOLO_BTN_FLY_CLICK","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_SOLO_BTN_FLY_HOLD","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_MAV_CMD_SOLO_BTN_PAUSE_CLICK","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_command_pause_continue","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_mount_message","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_manual_control_axes","wrapper stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::sane_vel_or_acc_vector","wrapper stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_message_set_attitude_target","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_message_set_position_target_local_ned","command collaborator",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_message_set_position_target_global_int","command collaborator",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_message","command collaborator",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::handle_flight_termination","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::vfr_hud_alt","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::capabilities","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::landed_state","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::send_wind","controller",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::high_latency_target_altitude","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::high_latency_tgt_heading","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::high_latency_tgt_dist","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::high_latency_tgt_airspeed","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::high_latency_wind_speed","controller stateless",
"GCS_MAVLINK_Copter","controller degenerate","GCS_MAVLINK_Copter::high_latency_wind_direction","wrapper stateless",
"AP_AK09916_BusDriver","degenerate","~AP_AK09916_BusDriver","destructor",
"AP_AK09916_BusDriver","degenerate","configure","incidental",
"AP_AK09916_BusDriver","degenerate","start_measurements","incidental",
"AP_AK09916_BusDriver","degenerate","setup_checked_registers","empty",
"AP_AK09916_BusDriver","degenerate","check_next_register","empty",
"AverageIntegralFilter","data-provider","AverageIntegralFilter<T,U,FILTER_SIZE>::apply","property non-void-command collaborator",
"AverageIntegralFilter","data-provider","AverageIntegralFilter<T,U,FILTER_SIZE>::getf","property",
"AverageIntegralFilter","data-provider","AverageIntegralFilter<T,U,FILTER_SIZE>::getd","property",
"AP_CSVReader","entity boundary","AP_CSVReader","constructor",
"AP_CSVReader","entity boundary","set_state","collaborator incidental",
"AP_CSVReader","entity boundary","AP_CSVReader::handle_unquoted_term","property non-void-command collaborator",
"AP_CSVReader","entity boundary","AP_CSVReader::handle_quoted_term","property non-void-command collaborator",
"AP_CSVReader","entity boundary","AP_CSVReader::feed","property non-void-command collaborator",
"AP_Beacon","data-provider","AP_Beacon::AP_Beacon","constructor",
"AP_Beacon","data-provider","AP_Beacon::init","set",
"AP_Beacon","data-provider","AP_Beacon::enabled","predicate",
"AP_Beacon","data-provider","AP_Beacon::healthy","predicate",
"AP_Beacon","data-provider","AP_Beacon::update","command",
"AP_Beacon","data-provider","AP_Beacon::get_origin","predicate collaborator",
"AP_Beacon","data-provider","AP_Beacon::get_vehicle_position_ned","predicate",
"AP_Beacon","data-provider","AP_Beacon::count","get property",
"AP_Beacon","data-provider","AP_Beacon::get_beacon_data","predicate collaborator",
"AP_Beacon","data-provider","AP_Beacon::beacon_id","get property",
"AP_Beacon","data-provider","AP_Beacon::beacon_healthy","get predicate",
"AP_Beacon","data-provider","AP_Beacon::beacon_distance","get property",
"AP_Beacon","data-provider","AP_Beacon::beacon_position","get property collaborator",
"AP_Beacon","data-provider","AP_Beacon::beacon_last_update_ms","get property",
"AP_Beacon","data-provider","AP_Beacon::update_boundary_points","command",
"AP_Beacon","data-provider","AP_Beacon::get_next_boundary_point","controller stateless",
"AP_Beacon","data-provider","AP_Beacon::get_boundary_points","get property collaborator",
"AP_Beacon","data-provider","AP_Beacon::device_ready","predicate",
"AP_Beacon","data-provider","AP_Beacon::log","command",
"AC_PrecLand_SITL","commander small-class","AC_PrecLand_SITL::init","set",
"AC_PrecLand_SITL","commander small-class","AC_PrecLand_SITL::update","command collaborator",
"CX_GBXXXCtrl","data-provider boundary","CX_GBXXXCtrl::CX_GBXXXCtrl","constructor",
"CX_GBXXXCtrl","data-provider boundary","CX_GBXXXCtrl::~CX_GBXXXCtrl","destructor",
"CX_GBXXXCtrl","data-provider boundary","CX_GBXXXCtrl::Open","predicate wrapper",
"CX_GBXXXCtrl","data-provider boundary","CX_GBXXXCtrl::Close","wrapper",
"CX_GBXXXCtrl","data-provider boundary","CX_GBXXXCtrl::SetCameraCtrl","predicate wrapper",
"CX_GBXXXCtrl","data-provider boundary","CX_GBXXXCtrl::GetCameraCtrl","predicate wrapper",
"AP_Beacon_SITL","entity boundary small-class","AP_Beacon_SITL::AP_Beacon_SITL","constructor",
"AP_Beacon_SITL","entity boundary small-class","AP_Beacon_SITL::healthy","predicate wrapper",
"AP_Beacon_SITL","entity boundary small-class","AP_Beacon_SITL::update","command collaborator",
"AP_Networking_MAC","boundary small-class","AP_Networking_MAC::AP_Networking_MAC","constructor",
"AP_Networking_MAC","boundary small-class","AP_Networking_MAC::get_address","wrapper",
"AP_Networking_MAC","boundary small-class","AP_Networking_MAC::set_default_address_byte","wrapper",
"TCPServerDevice","unclassified","TCPServerDevice::TCPServerDevice","constructor",
"TCPServerDevice","unclassified","TCPServerDevice::~TCPServerDevice","destructor",
"TCPServerDevice","unclassified","TCPServerDevice::write","property non-void-command collaborator",
"TCPServerDevice","unclassified","TCPServerDevice::read","property collaborator",
"TCPServerDevice","unclassified","TCPServerDevice::open","predicate non-void-command",
"TCPServerDevice","unclassified","TCPServerDevice::close","predicate set",
"TCPServerDevice","unclassified","TCPServerDevice::set_blocking","set",
"TCPServerDevice","unclassified","TCPServerDevice::set_speed","empty",
"ModeScan","boundary degenerate","number","collaborator incidental",
"ModeScan","boundary degenerate","requires_armed_servos","incidental",
"ModeScan","boundary degenerate","ModeScan::update","wrapper stateless",
"AP_Compass_LIS3MDL","boundary","AP_Compass_LIS3MDL::probe","controller stateless",
"AP_Compass_LIS3MDL","boundary","AP_Compass_LIS3MDL::AP_Compass_LIS3MDL","constructor",
"AP_Compass_LIS3MDL","boundary","AP_Compass_LIS3MDL::init","predicate non-void-command",
"AP_Compass_LIS3MDL","boundary","AP_Compass_LIS3MDL::timer","command collaborator",
"AP_Compass_LIS3MDL","boundary","AP_Compass_LIS3MDL::read","wrapper",
"DerivativeFilter","unclassified","DerivativeFilter","constructor",
"DerivativeFilter","unclassified","DerivativeFilter<T,FILTER_SIZE>::update","command",
"DerivativeFilter","unclassified","DerivativeFilter<T,FILTER_SIZE>::slope","get property non-void-command",
"DerivativeFilter","unclassified","DerivativeFilter<T,FILTER_SIZE>::reset","wrapper stateless",
"AP_BoardConfig","degenerate","get_alt_config","property non-void-command",
"AP_BoardConfig","degenerate","get_safety_button_options","controller stateless",
"AP_BoardConfig","degenerate","get_safety_mask","controller stateless",
"AP_BoardConfig","degenerate","get_serial_number","property",
"AP_BoardConfig","degenerate","get_heater_duty_cycle","incidental",
"AP_BoardConfig","degenerate","AP_BoardConfig::AP_BoardConfig","constructor",
"AP_BoardConfig","degenerate","AP_BoardConfig::init","command",
"AP_BoardConfig","degenerate","AP_BoardConfig::set_default_safety_ignore_mask","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::init_safety","command",
"AP_BoardConfig","degenerate","AP_BoardConfig::throw_error","set collaborator",
"AP_BoardConfig","degenerate","AP_BoardConfig::allocation_error","command",
"AP_BoardConfig","degenerate","AP_BoardConfig::config_error","command collaborator",
"AP_BoardConfig","degenerate","AP_BoardConfig::safety_button_handle_pressed","predicate non-void-command collaborator",
"AP_BoardConfig","degenerate","AP_BoardConfig::set_imu_temp","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::get_board_heater_temperature","incidental",
"AP_BoardConfig","degenerate","AP_BoardConfig::get_board_heater_arming_temperature","incidental",
"AP_BoardConfig","degenerate","AP_BoardConfig::board_init_safety","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::board_init_debug","wrapper",
"AP_BoardConfig","degenerate","AP_BoardConfig::board_setup_drivers","set",
"AP_BoardConfig","degenerate","AP_BoardConfig::spi_check_register","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::spi_check_register_inv2","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::check_ms5611","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::validate_board_type","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::board_autodetect","command",
"AP_BoardConfig","degenerate","AP_BoardConfig::board_setup_uart","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::board_setup_sbus","controller stateless",
"AP_BoardConfig","degenerate","AP_BoardConfig::board_setup","command",
"AP_BoardConfig","degenerate","AP_BoardConfig::detect_fmuv6_variant","controller stateless",
"ThreadWrapper","small-class","ThreadWrapper","constructor",
"ThreadWrapper","small-class","create","predicate controller",
"ThreadWrapper","small-class","run","wrapper",
"CANSensor","controller lazy-class degenerate","initialized","get",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","CANSensor::CANSensor","constructor",
"CANSensor","controller lazy-class degenerate","CANSensor::register_driver","command collaborator",
"CANSensor","controller lazy-class degenerate","CANSensor::register_driver_periph","command collaborator",
"CANSensor","controller lazy-class degenerate","CANSensor::init","command",
"CANSensor","controller lazy-class degenerate","CANSensor::add_interface","predicate collaborator",
"CANSensor","controller lazy-class degenerate","CANSensor::write_frame","predicate non-void-command",
"CANSensor","controller lazy-class degenerate","CANSensor::loop","command",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","wrapper stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","empty",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"CANSensor","controller lazy-class degenerate","loop","incidental",
"CANSensor","controller lazy-class degenerate","loop","incidental",
"CANSensor","controller lazy-class degenerate","loop","controller stateless",
"ModeRTL","degenerate","mode_number","collaborator incidental",
"ModeRTL","degenerate","run","command",
"ModeRTL","degenerate","requires_GPS","incidental",
"ModeRTL","degenerate","has_manual_throttle","incidental",
"ModeRTL","degenerate","allows_arming","collaborator incidental",
"ModeRTL","degenerate","is_autopilot","incidental",
"ModeRTL","degenerate","requires_terrain_failsafe","incidental",
"ModeRTL","degenerate","state","get collaborator",
"ModeRTL","degenerate","state_complete","get",
"ModeRTL","degenerate","name","incidental",
"ModeRTL","degenerate","name4","incidental",
"ModeRTL","degenerate","crosstrack_error","controller stateless",
"ModeRTL","degenerate","set_descent_target_alt","incidental",
"ModeRTL","degenerate","ModeRTL::init","predicate non-void-command",
"ModeRTL","degenerate","ModeRTL::restart_without_terrain","command",
"ModeRTL","degenerate","ModeRTL::get_alt_type","collaborator incidental",
"ModeRTL","degenerate","ModeRTL::run","unclassified",
"ModeRTL","degenerate","ModeRTL::climb_start","command",
"ModeRTL","degenerate","ModeRTL::return_start","command",
"ModeRTL","degenerate","ModeRTL::climb_return_run","set",
"ModeRTL","degenerate","ModeRTL::loiterathome_start","command",
"ModeRTL","degenerate","ModeRTL::loiterathome_run","set",
"ModeRTL","degenerate","ModeRTL::descent_start","command",
"ModeRTL","degenerate","ModeRTL::descent_run","set collaborator",
"ModeRTL","degenerate","ModeRTL::land_start","command",
"ModeRTL","degenerate","ModeRTL::is_landing","predicate",
"ModeRTL","degenerate","ModeRTL::land_run","set",
"ModeRTL","degenerate","ModeRTL::build_path","command",
"ModeRTL","degenerate","ModeRTL::compute_return_target","command",
"ModeRTL","degenerate","ModeRTL::get_wp","predicate controller",
"ModeRTL","degenerate","ModeRTL::wp_distance","controller stateless",
"ModeRTL","degenerate","ModeRTL::wp_bearing","controller stateless",
"ModeRTL","degenerate","ModeRTL::use_pilot_yaw","predicate controller",
"ModeRTL","degenerate","ModeRTL::set_speed_xy","controller stateless",
"ModeRTL","degenerate","ModeRTL::set_speed_up","controller stateless",
"ModeRTL","degenerate","ModeRTL::set_speed_down","controller stateless",
"ModeRTL","degenerate","ModeRTL::_enter","controller stateless",
"ModeRTL","degenerate","ModeRTL::update","controller stateless",
"ModeRTL","degenerate","ModeRTL::navigate","command",
"ModeRTL","degenerate","ModeRTL::switch_QRTL","controller stateless",
"ModeRTL","degenerate","ModeRTL::init","incidental",
"ModeRTL","degenerate","ModeRTL::run","controller stateless",
"ModeRTL","degenerate","ModeRTL::_enter","controller stateless",
"ModeRTL","degenerate","ModeRTL::update","controller stateless",
"ModeRTL","degenerate","ModeRTL::get_desired_location","controller stateless",
"ModeRTL","degenerate","ModeRTL::reached_destination","controller stateless",
"ModeRTL","degenerate","ModeRTL::set_desired_speed","controller stateless",
"AP_Camera_Backend","unclassified","init","empty",
"AP_Camera_Backend","unclassified","healthy","incidental",
"AP_Camera_Backend","unclassified","cam_mode_toggle","empty",
"AP_Camera_Backend","unclassified","record_video","incidental",
"AP_Camera_Backend","unclassified","set_zoom","incidental",
"AP_Camera_Backend","unclassified","set_focus","collaborator incidental",
"AP_Camera_Backend","unclassified","set_tracking","collaborator incidental",
"AP_Camera_Backend","unclassified","set_lens","incidental",
"AP_Camera_Backend","unclassified","set_camera_source","collaborator incidental",
"AP_Camera_Backend","unclassified","horizontal_fov","property wrapper",
"AP_Camera_Backend","unclassified","vertical_fov","property wrapper",
"AP_Camera_Backend","unclassified","handle_message","empty",
"AP_Camera_Backend","unclassified","configure","empty",
"AP_Camera_Backend","unclassified","set_trigger_distance","command",
"AP_Camera_Backend","unclassified","get_state","collaborator incidental",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::AP_Camera_Backend","constructor",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::update","command collaborator",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::get_mount_instance","get property",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::get_gimbal_device_id","property collaborator",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::take_picture","predicate non-void-command",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::take_multiple_pictures","incidental",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::stop_capture","incidental",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::control","command",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::send_camera_feedback","controller",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::send_camera_information","collaborator",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::send_camera_settings","wrapper stateless",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::send_camera_fov_status","collaborator",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::send_camera_capture_status","wrapper",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::setup_feedback_callback","command",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::feedback_pin_isr","command",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::feedback_pin_timer","command",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::check_feedback","unclassified",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::prep_mavlink_msg_camera_feedback","set collaborator",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::log_picture","command",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::Write_CameraInfo","command collaborator",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::Write_Camera","command",
"AP_Camera_Backend","unclassified","AP_Camera_Backend::Write_Trigger","command",
"AP_Camera_MAVLink","boundary degenerate","AP_Camera_MAVLink::trigger_pic","wrapper stateless",
"AP_Camera_MAVLink","boundary degenerate","AP_Camera_MAVLink::configure","wrapper stateless",
"AP_Camera_MAVLink","boundary degenerate","AP_Camera_MAVLink::control","wrapper stateless",
"NCP5623","unclassified","NCP5623::NCP5623","constructor",
"NCP5623","unclassified","NCP5623::write","predicate non-void-command",
"NCP5623","unclassified","NCP5623::write_pwm","predicate non-void-command",
"NCP5623","unclassified","NCP5623::init","predicate non-void-command",
"NCP5623","unclassified","NCP5623::hw_set_rgb","predicate non-void-command",
"NCP5623","unclassified","NCP5623::_timer","set",
"AP_Camera_Relay","boundary data-class small-class","AP_Camera_Relay::update","set collaborator",
"AP_Camera_Relay","boundary data-class small-class","AP_Camera_Relay::trigger_pic","predicate set collaborator",
"RF_MaxsonarSerialLV","boundary degenerate small-class","RF_MaxsonarSerialLV::packet_for_alt","wrapper stateless",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::GPIO_RPI_BCM","constructor",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::set_gpio_mode_alt","set",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::set_gpio_mode_in","set",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::set_gpio_mode_out","set",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::set_gpio_high","set",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::set_gpio_low","set",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::get_gpio_logic_state","get",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::get_address","collaborator incidental",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::get_memory_pointer","property wrapper",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::openMemoryDevice","predicate set",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::closeMemoryDevice","set",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::init","unclassified",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::pinMode","command",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::pinMode","command",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::read","property non-void-command",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::write","command",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::toggle","set",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::channel","wrapper stateless",
"GPIO_RPI_BCM","commander","GPIO_RPI_BCM::usb_connected","incidental",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::polynomial_eval","collaborator incidental",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::correct_sensor","void-accessor collaborator",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::correct_accel","collaborator",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::correct_gyro","collaborator",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::sitl_apply_accel","void-accessor collaborator",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::sitl_apply_gyro","void-accessor collaborator",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::update_accel_learning","command",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::update_gyro_learning","command",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::instance","wrapper stateless",
"AP_InertialSensor_TCal","entity boundary","AP_InertialSensor_TCal::get_persistent_params","collaborator",
"AP_TemperatureSensor_MAX31865","commander","update","empty",
"AP_TemperatureSensor_MAX31865","commander","AP_TemperatureSensor_MAX31865::init","unclassified",
"AP_TemperatureSensor_MAX31865","commander","AP_TemperatureSensor_MAX31865::thread_tick","command",
"AP_Arming_Plane","unclassified","AP_Arming_Plane","constructor",
"AP_Arming_Plane","unclassified","get_delay_arming","get",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::terrain_database_required","wrapper stateless",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::pre_arm_checks","predicate non-void-command",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::mandatory_checks","predicate non-void-command",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::quadplane_checks","controller stateless",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::ins_checks","wrapper stateless",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::arm_checks","predicate controller",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::change_arm_state","command",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::arm","predicate set",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::disarm","predicate non-void-command",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::update_soft_armed","command",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::mission_checks","controller stateless",
"AP_Arming_Plane","unclassified","AP_Arming_Plane::rc_received_if_enabled_check","controller stateless",
"RC_Channels_Plane","degenerate","channel","property collaborator",
"RC_Channels_Plane","degenerate","RC_Channels_Plane::flight_mode_channel_number","controller stateless",
"RC_Channels_Plane","degenerate","RC_Channels_Plane::in_rc_failsafe","controller stateless",
"RC_Channels_Plane","degenerate","RC_Channels_Plane::has_valid_input","predicate",
"RC_Channels_Plane","degenerate","RC_Channels_Plane::get_arming_channel","collaborator incidental",
"RC_Channels_Plane","degenerate","RC_Channels_Plane::read_mode_switch","wrapper stateless",
"VectorN","data-provider boundary","VectorN<T,N>","constructor",
"VectorN","data-provider boundary","VectorN<T,N>","constructor",
"VectorN","data-provider boundary","operator[]","get collaborator",
"VectorN","data-provider boundary","operator[]","get collaborator",
"VectorN","data-provider boundary","operator==","predicate collaborator",
"VectorN","data-provider boundary","zero","wrapper",
"VectorN","data-provider boundary","operator-","property collaborator",
"VectorN","data-provider boundary","operator+","property collaborator",
"VectorN","data-provider boundary","operator-","property collaborator",
"VectorN","data-provider boundary","operator*","property collaborator",
"VectorN","data-provider boundary","operator/","property collaborator",
"VectorN","data-provider boundary","operator+=","property set collaborator",
"VectorN","data-provider boundary","operator-=","property set collaborator",
"VectorN","data-provider boundary","operator*=","property set collaborator",
"VectorN","data-provider boundary","operator/=","property set collaborator",
"VectorN","data-provider boundary","operator*","property collaborator",
"VectorN","data-provider boundary","mult","set collaborator",
"Thrust_Linearization","data-provider","get_spin_min","property",
"Thrust_Linearization","data-provider","get_spin_max","property",
"Thrust_Linearization","data-provider","get_battery_index","property",
"Thrust_Linearization","data-provider","get_battery_min_voltage","property",
"Thrust_Linearization","data-provider","get_lift_max","get",
"Thrust_Linearization","data-provider","Thrust_Linearization::Thrust_Linearization","constructor",
"Thrust_Linearization","data-provider","Thrust_Linearization::thrust_to_actuator","property",
"Thrust_Linearization","data-provider","Thrust_Linearization::actuator_to_thrust","property",
"Thrust_Linearization","data-provider","Thrust_Linearization::apply_thrust_curve_and_volt_scaling","property",
"Thrust_Linearization","data-provider","Thrust_Linearization::remove_thrust_curve_and_volt_scaling","property",
"Thrust_Linearization","data-provider","Thrust_Linearization::update_lift_max_from_batt_voltage","unclassified",
"Thrust_Linearization","data-provider","Thrust_Linearization::get_compensation_gain","property",
"Display_SITL","commander","Display_SITL::Display_SITL","constructor",
"Display_SITL","commander","Display_SITL::~Display_SITL","destructor",
"Display_SITL","commander","Display_SITL::probe","controller stateless",
"Display_SITL","commander","Display_SITL::update_thread","command collaborator",
"Display_SITL","commander","Display_SITL::update_thread_start","property command collaborator",
"Display_SITL","commander","Display_SITL::hw_init","predicate set",
"Display_SITL","commander","Display_SITL::hw_update","set",
"Display_SITL","commander","Display_SITL::set_pixel","command",
"Display_SITL","commander","Display_SITL::clear_pixel","command",
"Display_SITL","commander","Display_SITL::clear_screen","set",
"AC_AttitudeControl_Heli","boundary","get_rate_roll_pid","get collaborator",
"AC_AttitudeControl_Heli","boundary","get_rate_pitch_pid","get collaborator",
"AC_AttitudeControl_Heli","boundary","get_rate_yaw_pid","get collaborator",
"AC_AttitudeControl_Heli","boundary","get_rate_roll_pid","get collaborator",
"AC_AttitudeControl_Heli","boundary","get_rate_pitch_pid","get collaborator",
"AC_AttitudeControl_Heli","boundary","get_rate_yaw_pid","get collaborator",
"AC_AttitudeControl_Heli","boundary","use_leaky_i","incidental",
"AC_AttitudeControl_Heli","boundary","use_flybar_passthrough","incidental",
"AC_AttitudeControl_Heli","boundary","set_hover_roll_trim_scalar","set",
"AC_AttitudeControl_Heli","boundary","get_roll_trim_cd","property wrapper",
"AC_AttitudeControl_Heli","boundary","get_roll_trim_rad","property wrapper",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::AC_AttitudeControl_Heli","constructor",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::passthrough_bf_roll_pitch_rate_yaw","command collaborator",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::integrate_bf_rate_error_to_angle_errors","command",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::input_rate_bf_roll_pitch_yaw","set",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::rate_controller_run","command collaborator",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::update_althold_lean_angle_max","set",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::rate_bf_to_motor_roll_pitch","command collaborator",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::rate_target_to_motor_yaw","property non-void-command",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::set_throttle_out","command",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::input_euler_angle_roll_pitch_euler_rate_yaw","wrapper",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::input_euler_angle_roll_pitch_yaw","wrapper",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::set_notch_sample_rate","command",
"AC_AttitudeControl_Heli","boundary","AC_AttitudeControl_Heli::set_inverted_flight","command",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::find_public_keys","controller stateless",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::all_zero_keys","wrapper stateless",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::read_bootloader","controller stateless",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::write_bootloader","controller stateless",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::check_signature","predicate non-void-command collaborator",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::set_public_keys","predicate non-void-command",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::handle_secure_command","command collaborator",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::handle_msg","command collaborator",
"AP_CheckFirmware","unclassified","AP_CheckFirmware::check_signed_bootloader","predicate non-void-command",
"LR_MsgHandler_RISH","boundary degenerate small-class","LR_MsgHandler_RISH::process_message","wrapper stateless",
"AP_EFI_Serial_Hirth","commander","AP_EFI_Serial_Hirth::AP_EFI_Serial_Hirth","constructor",
"AP_EFI_Serial_Hirth","commander","AP_EFI_Serial_Hirth::update","command",
"AP_EFI_Serial_Hirth","commander","AP_EFI_Serial_Hirth::check_response","command",
"AP_EFI_Serial_Hirth","commander","AP_EFI_Serial_Hirth::send_request","command collaborator",
"AP_EFI_Serial_Hirth","commander","AP_EFI_Serial_Hirth::send_target_values","predicate non-void-command",
"AP_EFI_Serial_Hirth","commander","AP_EFI_Serial_Hirth::send_request_status","predicate non-void-command",
"AP_EFI_Serial_Hirth","commander","AP_EFI_Serial_Hirth::decode_data","command collaborator",
"AP_EFI_Serial_Hirth","commander","AP_EFI_Serial_Hirth::log_status","wrapper",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::AP_InertialSensor_BMI055","constructor",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::probe","controller stateless",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::start","command",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::accel_init","predicate non-void-command",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::gyro_init","predicate non-void-command",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::init","predicate non-void-command",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::read_fifo_accel","collaborator",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::read_fifo_gyro","command collaborator",
"AP_InertialSensor_BMI055","unclassified","AP_InertialSensor_BMI055::update","predicate wrapper",
"AP_Button","unclassified","is_pwm_input","predicate wrapper",
"AP_Button","unclassified","is_input_inverted","predicate wrapper",
"AP_Button","unclassified","AP_Button::AP_Button","constructor",
"AP_Button","unclassified","AP_Button::update","command",
"AP_Button","unclassified","AP_Button::run_aux_functions","unclassified",
"AP_Button","unclassified","AP_Button::get_button_state","predicate non-void-command",
"AP_Button","unclassified","AP_Button::get_mask","property non-void-command",
"AP_Button","unclassified","AP_Button::timer_update","command",
"AP_Button","unclassified","AP_Button::send_report","wrapper",
"AP_Button","unclassified","AP_Button::setup_pins","command",
"AP_Button","unclassified","AP_Button::arming_checks","predicate controller",
"AP_Hott_Telem","commander","AP_Hott_Telem::AP_Hott_Telem","constructor",
"AP_Hott_Telem","commander","AP_Hott_Telem::init","set collaborator",
"AP_Hott_Telem","commander","AP_Hott_Telem::send_EAM","command collaborator",
"AP_Hott_Telem","commander","AP_Hott_Telem::GPS_to_DDM","wrapper stateless",
"AP_Hott_Telem","commander","AP_Hott_Telem::send_GPS","command",
"AP_Hott_Telem","commander","AP_Hott_Telem::send_Vario","command",
"AP_Hott_Telem","commander","AP_Hott_Telem::send_packet","void-accessor command",
"AP_Hott_Telem","commander","AP_Hott_Telem::loop","command",
"ModeSmartRTL","degenerate","mode_number","collaborator incidental",
"ModeSmartRTL","degenerate","requires_GPS","incidental",
"ModeSmartRTL","degenerate","has_manual_throttle","incidental",
"ModeSmartRTL","degenerate","allows_arming","collaborator incidental",
"ModeSmartRTL","degenerate","is_autopilot","incidental",
"ModeSmartRTL","degenerate","name","incidental",
"ModeSmartRTL","degenerate","name4","incidental",
"ModeSmartRTL","degenerate","crosstrack_error","controller stateless",
"ModeSmartRTL","degenerate","ModeSmartRTL::init","predicate set collaborator",
"ModeSmartRTL","degenerate","ModeSmartRTL::exit","controller stateless",
"ModeSmartRTL","degenerate","ModeSmartRTL::run","command",
"ModeSmartRTL","degenerate","ModeSmartRTL::is_landing","predicate",
"ModeSmartRTL","degenerate","ModeSmartRTL::wait_cleanup_run","command",
"ModeSmartRTL","degenerate","ModeSmartRTL::path_follow_run","command collaborator",
"ModeSmartRTL","degenerate","ModeSmartRTL::pre_land_position_run","set",
"ModeSmartRTL","degenerate","ModeSmartRTL::save_position","controller stateless",
"ModeSmartRTL","degenerate","ModeSmartRTL::get_wp","predicate controller",
"ModeSmartRTL","degenerate","ModeSmartRTL::wp_distance","controller stateless",
"ModeSmartRTL","degenerate","ModeSmartRTL::wp_bearing","controller stateless",
"ModeSmartRTL","degenerate","ModeSmartRTL::use_pilot_yaw","predicate controller",
"ModeSmartRTL","degenerate","ModeSmartRTL::_enter","predicate set collaborator",
"ModeSmartRTL","degenerate","ModeSmartRTL::update","set collaborator",
"ModeSmartRTL","degenerate","ModeSmartRTL::get_desired_location","predicate controller",
"ModeSmartRTL","degenerate","ModeSmartRTL::set_desired_speed","controller stateless",
"ModeSmartRTL","degenerate","ModeSmartRTL::save_position","controller stateless",
"EFI_Hirth","boundary","update","wrapper stateless",
"EFI_Hirth","boundary","init","empty",
"EFI_Hirth","boundary","init","wrapper stateless",
"EFI_Hirth","boundary","init","wrapper stateless",
"EFI_Hirth","boundary","EFI_Hirth::update_receive","collaborator",
"EFI_Hirth","boundary","EFI_Hirth::assert_receive_size","wrapper",
"EFI_Hirth","boundary","EFI_Hirth::handle_set_values","command",
"EFI_Hirth","boundary","EFI_Hirth::update_send","command",
"EFI_Hirth","boundary","EFI_Hirth::update_engine_model","wrapper stateless",
"EFI_Hirth","boundary","EFI_Hirth::init","set",
"EFI_Hirth","boundary","EFI_Hirth::update","collaborator",
"EFI_Hirth","boundary","EFI_Hirth::engine_status_field_value","incidental",
"EFI_Hirth","boundary","SITL::EFI_Hirth::send_record1","set collaborator",
"EFI_Hirth","boundary","SITL::EFI_Hirth::send_record2","controller",
"EFI_Hirth","boundary","SITL::EFI_Hirth::send_record3","controller",
"HALSITL::GPIO","degenerate small-class","valid_pin","incidental",
"LR_MsgHandler_RRNH","boundary degenerate small-class","LR_MsgHandler_RRNH::process_message","wrapper stateless",
"DigitalSource_Sysfs","controller","DigitalSource_Sysfs::DigitalSource_Sysfs","constructor",
"DigitalSource_Sysfs","controller","DigitalSource_Sysfs::~DigitalSource_Sysfs","destructor",
"DigitalSource_Sysfs","controller","DigitalSource_Sysfs::read","property controller",
"DigitalSource_Sysfs","controller","DigitalSource_Sysfs::write","controller",
"DigitalSource_Sysfs","controller","DigitalSource_Sysfs::mode","controller",
"DigitalSource_Sysfs","controller","DigitalSource_Sysfs::toggle","command",
"ModeCircle","lazy-class degenerate","mode_number","collaborator incidental",
"ModeCircle","lazy-class degenerate","requires_GPS","incidental",
"ModeCircle","lazy-class degenerate","has_manual_throttle","incidental",
"ModeCircle","lazy-class degenerate","allows_arming","collaborator incidental",
"ModeCircle","lazy-class degenerate","is_autopilot","incidental",
"ModeCircle","lazy-class degenerate","name","incidental",
"ModeCircle","lazy-class degenerate","name4","incidental",
"ModeCircle","lazy-class degenerate","ModeCircle::init","predicate set collaborator",
"ModeCircle","lazy-class degenerate","ModeCircle::run","set",
"ModeCircle","lazy-class degenerate","ModeCircle::wp_distance","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::wp_bearing","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::_enter","incidental",
"ModeCircle","lazy-class degenerate","ModeCircle::update","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::init","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::run","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::ModeCircle","constructor",
"ModeCircle","lazy-class degenerate","ModeCircle::set_center","predicate non-void-command collaborator",
"ModeCircle","lazy-class degenerate","ModeCircle::_enter","predicate non-void-command",
"ModeCircle","lazy-class degenerate","ModeCircle::init_target_yaw_rad","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::update","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::wp_bearing","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::nav_bearing","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::get_desired_lat_accel","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::set_desired_speed","predicate non-void-command",
"ModeCircle","lazy-class degenerate","ModeCircle::get_desired_location","collaborator incidental",
"ModeCircle","lazy-class degenerate","ModeCircle::check_config_speed","controller stateless",
"ModeCircle","lazy-class degenerate","ModeCircle::check_config_radius","wrapper stateless",
"AP_Tuning","commander","AP_Tuning::check_selector_switch","command",
"AP_Tuning","commander","AP_Tuning::re_center","command collaborator",
"AP_Tuning","commander","AP_Tuning::check_input","command",
"AP_Tuning","commander","AP_Tuning::Log_Write_Parameter_Tuning","wrapper",
"AP_Tuning","commander","AP_Tuning::save_parameters","command",
"AP_Tuning","commander","AP_Tuning::revert_parameters","set",
"AP_Tuning","commander","AP_Tuning::next_parameter","command",
"AP_Tuning","commander","AP_Tuning::get_tuning_name","get property",
"AP_Compass_Backend","boundary","~AP_Compass_Backend","destructor",
"AP_Compass_Backend","boundary","handle_msp","empty",
"AP_Compass_Backend","boundary","handle_external","empty",
"AP_Compass_Backend","boundary","get_error_count","get",
"AP_Compass_Backend","boundary","AP_Compass_Backend::AP_Compass_Backend","constructor",
"AP_Compass_Backend","boundary","AP_Compass_Backend::rotate_field","void-accessor command collaborator",
"AP_Compass_Backend","boundary","AP_Compass_Backend::publish_raw_field","command collaborator",
"AP_Compass_Backend","boundary","AP_Compass_Backend::correct_field","void-accessor command",
"AP_Compass_Backend","boundary","AP_Compass_Backend::accumulate_sample","command collaborator",
"AP_Compass_Backend","boundary","AP_Compass_Backend::drain_accumulated_samples","command collaborator",
"AP_Compass_Backend","boundary","AP_Compass_Backend::publish_filtered_field","wrapper",
"AP_Compass_Backend","boundary","AP_Compass_Backend::set_last_update_usec","wrapper",
"AP_Compass_Backend","boundary","AP_Compass_Backend::register_compass","predicate",
"AP_Compass_Backend","boundary","AP_Compass_Backend::set_dev_id","controller",
"AP_Compass_Backend","boundary","AP_Compass_Backend::save_dev_id","controller",
"AP_Compass_Backend","boundary","AP_Compass_Backend::set_external","controller",
"AP_Compass_Backend","boundary","AP_Compass_Backend::is_external","get wrapper",
"AP_Compass_Backend","boundary","AP_Compass_Backend::set_rotation","wrapper",
"AP_Compass_Backend","boundary","AP_Compass_Backend::field_ok","predicate non-void-command collaborator",
"AP_Compass_Backend","boundary","AP_Compass_Backend::get_board_orientation","get collaborator",
"Display","commander","Display::init","predicate non-void-command",
"Display","commander","Display::update","command",
"Display","commander","Display::update_all","command",
"Display","commander","Display::send_text_blocking","command",
"Display","commander","Display::release_text","wrapper",
"Display","commander","Display::draw_text","void-accessor command",
"Display","commander","Display::draw_char","command",
"Display","commander","Display::update_arm","command",
"Display","commander","Display::update_prearm","command",
"Display","commander","Display::update_gps","command",
"Display","commander","Display::update_gps_sats","command",
"Display","commander","Display::update_ekf","command",
"Display","commander","Display::update_battery","command",
"Display","commander","Display::update_mode","command",
"Display","commander","Display::update_text_empty","command",
"Display","commander","Display::update_text","command",
"Mode","controller degenerate","Mode","constructor",
"Mode","controller degenerate","Mode::update_auto","command",
"Mode","controller degenerate","Mode::update_scan","command",
"Mode","controller degenerate","Mode::calc_angle_error","command collaborator",
"Mode","controller degenerate","Mode::convert_ef_to_bf","controller stateless",
"Mode","controller degenerate","Mode::convert_bf_to_ef","controller stateless",
"Mode","controller degenerate","Mode::get_ef_yaw_direction","predicate non-void-command",
"Mode","controller degenerate","Mode::Mode","constructor",
"Mode","controller degenerate","Mode::get_pilot_desired_lean_angles","controller stateless",
"Mode","controller degenerate","Mode::get_pilot_desired_velocity","controller stateless",
"Mode","controller degenerate","Mode::is_disarmed_or_landed","controller stateless",
"Mode","controller degenerate","Mode::zero_throttle_and_relax_ac","controller stateless",
"Mode","controller degenerate","Mode::zero_throttle_and_hold_attitude","controller stateless",
"Mode","controller degenerate","Mode::make_safe_ground_handling","controller stateless",
"Mode","controller degenerate","Mode::get_alt_above_ground_cm","controller stateless",
"Mode","controller degenerate","Mode::land_run_vertical_control","command",
"Mode","controller degenerate","Mode::land_run_horizontal_control","command",
"Mode","controller degenerate","Mode::land_run_normal_or_precland","command",
"Mode","controller degenerate","Mode::precland_retry_position","command collaborator",
"Mode","controller degenerate","Mode::precland_run","command collaborator",
"Mode","controller degenerate","Mode::throttle_hover","controller stateless",
"Mode","controller degenerate","Mode::get_pilot_desired_throttle","property",
"Mode","controller degenerate","Mode::get_avoidance_adjusted_climbrate","controller stateless",
"Mode","controller degenerate","Mode::output_to_motors","controller stateless",
"Mode","controller degenerate","Mode::get_alt_hold_state","controller stateless",
"Mode","controller degenerate","Mode::get_pilot_desired_yaw_rate","controller stateless",
"Mode","controller degenerate","Mode::get_pilot_desired_climb_rate","controller stateless",
"Mode","controller degenerate","Mode::get_non_takeoff_throttle","controller stateless",
"Mode","controller degenerate","Mode::update_simple_mode","controller stateless",
"Mode","controller degenerate","Mode::set_mode","controller stateless",
"Mode","controller degenerate","Mode::set_land_complete","controller stateless",
"Mode","controller degenerate","Mode::gcs","controller stateless",
"Mode","controller degenerate","Mode::get_pilot_speed_dn","controller stateless",
"Mode","controller degenerate","Mode::get_stopping_point","controller stateless",
"Mode","controller degenerate","Mode::do_user_takeoff_start","controller stateless",
"Mode","controller degenerate","Mode::do_user_takeoff","predicate non-void-command",
"Mode","controller degenerate","Mode::is_taking_off","controller stateless",
"Mode","controller degenerate","Mode::Mode","constructor",
"Mode","controller degenerate","Mode::exit","controller stateless",
"Mode","controller degenerate","Mode::enter","controller stateless",
"Mode","controller degenerate","Mode::is_vtol_man_throttle","controller stateless",
"Mode","controller degenerate","Mode::update_target_altitude","controller stateless",
"Mode","controller degenerate","Mode::pre_arm_checks","predicate",
"Mode","controller degenerate","Mode::_pre_arm_checks","controller stateless",
"Mode","controller degenerate","Mode::run","controller stateless",
"Mode","controller degenerate","Mode::reset_controllers","controller stateless",
"Mode","controller degenerate","Mode::is_taking_off","incidental",
"Mode","controller degenerate","Mode::output_rudder_and_steering","wrapper stateless",
"Mode","controller degenerate","Mode::output_pilot_throttle","controller stateless",
"Mode","controller degenerate","Mode::use_throttle_limits","controller stateless",
"Mode","controller degenerate","Mode::use_battery_compensation","controller stateless",
"Mode","controller degenerate","Mode::Mode","constructor",
"Mode","controller degenerate","Mode::get_pilot_desired_angle_rates","controller stateless",
"Mode","controller degenerate","Mode::set_mode","controller stateless",
"Mode","controller degenerate","Mode::gcs","controller stateless",
"Mode","controller degenerate","Mode::Mode","constructor",
"Mode","controller degenerate","Mode::update_navigation","wrapper stateless",
"Mode","controller degenerate","Mode::get_pilot_input","controller stateless",
"Mode","controller degenerate","Mode::is_disarmed_or_landed","controller stateless",
"Mode","controller degenerate","Mode::set_mode","controller stateless",
"Mode","controller degenerate","Mode::gcs","controller stateless",
"Mode","controller degenerate","Mode::Mode","constructor",
"Mode","controller degenerate","Mode::exit","wrapper stateless",
"Mode","controller degenerate","Mode::enter","predicate non-void-command",
"Mode","controller degenerate","Mode::get_pilot_input","controller stateless",
"Mode","controller degenerate","Mode::get_pilot_desired_steering_and_throttle","void-accessor",
"Mode","controller degenerate","Mode::get_pilot_desired_steering_and_speed","void-accessor",
"Mode","controller degenerate","Mode::get_pilot_desired_lateral","controller stateless",
"Mode","controller degenerate","Mode::get_pilot_desired_heading_and_speed","void-accessor",
"Mode","controller degenerate","Mode::get_pilot_desired_roll_and_pitch","controller stateless",
"Mode","controller degenerate","Mode::get_pilot_desired_walking_height","controller stateless",
"Mode","controller degenerate","Mode::wp_bearing","controller stateless",
"Mode","controller degenerate","Mode::nav_bearing","controller stateless",
"Mode","controller degenerate","Mode::crosstrack_error","controller stateless",
"Mode","controller degenerate","Mode::get_desired_lat_accel","controller stateless",
"Mode","controller degenerate","Mode::set_desired_location","controller stateless",
"Mode","controller degenerate","Mode::get_speed_default","controller stateless",
"Mode","controller degenerate","Mode::set_reversed","controller stateless",
"Mode","controller degenerate","Mode::handle_tack_request","controller stateless",
"Mode","controller degenerate","Mode::calc_throttle","controller stateless",
"Mode","controller degenerate","Mode::stop_vehicle","controller stateless",
"Mode","controller degenerate","Mode::calc_speed_max","wrapper stateless",
"Mode","controller degenerate","Mode::calc_speed_nudge","property non-void-command",
"Mode","controller degenerate","Mode::navigate_to_waypoint","command",
"Mode","controller degenerate","Mode::calc_steering_from_turn_rate","command",
"Mode","controller degenerate","Mode::calc_steering_from_lateral_acceleration","command",
"Mode","controller degenerate","Mode::calc_steering_to_heading","command",
"Mode","controller degenerate","Mode::set_steering","controller stateless",
"AP_AK8963_BusDriver_HALDevice","unclassified","set_device_type","command",
"AP_AK8963_BusDriver_HALDevice","unclassified","get_bus_id","property",
"AP_AK8963_BusDriver_HALDevice","unclassified","AP_AK8963_BusDriver_HALDevice::AP_AK8963_BusDriver_HALDevice","constructor",
"AP_AK8963_BusDriver_HALDevice","unclassified","AP_AK8963_BusDriver_HALDevice::block_read","predicate non-void-command",
"AP_AK8963_BusDriver_HALDevice","unclassified","AP_AK8963_BusDriver_HALDevice::register_read","predicate non-void-command",
"AP_AK8963_BusDriver_HALDevice","unclassified","AP_AK8963_BusDriver_HALDevice::register_write","predicate non-void-command",
"AP_AK8963_BusDriver_HALDevice","unclassified","AP_AK8963_BusDriver_HALDevice::get_semaphore","property non-void-command collaborator",
"AP_AK8963_BusDriver_HALDevice","unclassified","AP_AK8963_BusDriver_HALDevice::register_periodic_callback","property non-void-command collaborator",
"LR_MsgHandler_RASH","boundary degenerate small-class","LR_MsgHandler_RASH::process_message","wrapper stateless",
"AP_Compass_IST8308","boundary","AP_Compass_IST8308::probe","controller stateless",
"AP_Compass_IST8308","boundary","AP_Compass_IST8308::AP_Compass_IST8308","constructor",
"AP_Compass_IST8308","boundary","AP_Compass_IST8308::init","predicate non-void-command",
"AP_Compass_IST8308","boundary","AP_Compass_IST8308::timer","command collaborator",
"AP_Compass_IST8308","boundary","AP_Compass_IST8308::read","wrapper",
"AP_Compass_LSM9DS1","unclassified","~AP_Compass_LSM9DS1","destructor",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::AP_Compass_LSM9DS1","constructor",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::probe","controller stateless",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::init","predicate non-void-command collaborator",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_dump_registers","command",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_update","command collaborator",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::read","wrapper",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_check_id","predicate non-void-command",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_configure","predicate non-void-command",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_set_scale","predicate set",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_register_read","property non-void-command",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_block_read","predicate non-void-command",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_register_write","command",
"AP_Compass_LSM9DS1","unclassified","AP_Compass_LSM9DS1::_register_modify","command",
"AP_AK09916_BusDriver_HALDevice","unclassified","set_device_type","command",
"AP_AK09916_BusDriver_HALDevice","unclassified","get_bus_id","property",
"AP_AK09916_BusDriver_HALDevice","unclassified","setup_checked_registers","command",
"AP_AK09916_BusDriver_HALDevice","unclassified","check_next_register","command",
"AP_AK09916_BusDriver_HALDevice","unclassified","AP_AK09916_BusDriver_HALDevice::AP_AK09916_BusDriver_HALDevice","constructor",
"AP_AK09916_BusDriver_HALDevice","unclassified","AP_AK09916_BusDriver_HALDevice::block_read","predicate non-void-command",
"AP_AK09916_BusDriver_HALDevice","unclassified","AP_AK09916_BusDriver_HALDevice::register_read","predicate non-void-command",
"AP_AK09916_BusDriver_HALDevice","unclassified","AP_AK09916_BusDriver_HALDevice::register_write","predicate non-void-command",
"AP_AK09916_BusDriver_HALDevice","unclassified","AP_AK09916_BusDriver_HALDevice::get_semaphore","property non-void-command collaborator",
"AP_AK09916_BusDriver_HALDevice","unclassified","AP_AK09916_BusDriver_HALDevice::register_periodic_callback","property non-void-command collaborator",
"AP_Compass_MMC3416","boundary","AP_Compass_MMC3416::probe","controller stateless",
"AP_Compass_MMC3416","boundary","AP_Compass_MMC3416::AP_Compass_MMC3416","constructor",
"AP_Compass_MMC3416","boundary","AP_Compass_MMC3416::init","predicate non-void-command",
"AP_Compass_MMC3416","boundary","AP_Compass_MMC3416::timer","command collaborator",
"AP_Compass_MMC3416","boundary","AP_Compass_MMC3416::read","wrapper",
"AP_MotorsMulticopter_test","commander degenerate","AP_MotorsMulticopter_test","constructor",
"AP_MotorsMulticopter_test","commander degenerate","init","empty",
"AP_MotorsMulticopter_test","commander degenerate","set_frame_class_and_type","empty",
"AP_MotorsMulticopter_test","commander degenerate","_output_test_seq","empty",
"AP_MotorsMulticopter_test","commander degenerate","_get_frame_string","incidental",
"AP_MotorsMulticopter_test","commander degenerate","output_armed_stabilizing","empty",
"AP_MotorsMulticopter_test","commander degenerate","output_to_motors","empty",
"AP_MotorsMulticopter_test","commander degenerate","set_expo","command",
"AP_Compass_QMC5883P","unclassified","AP_Compass_QMC5883P::probe","controller stateless",
"AP_Compass_QMC5883P","unclassified","AP_Compass_QMC5883P::AP_Compass_QMC5883P","constructor",
"AP_Compass_QMC5883P","unclassified","AP_Compass_QMC5883P::init","predicate non-void-command",
"AP_Compass_QMC5883P","unclassified","AP_Compass_QMC5883P::_check_whoami","predicate non-void-command",
"AP_Compass_QMC5883P","unclassified","AP_Compass_QMC5883P::timer","command collaborator",
"AP_Compass_QMC5883P","unclassified","AP_Compass_QMC5883P::read","wrapper",
"AP_Compass_QMC5883P","unclassified","AP_Compass_QMC5883P::_dump_registers","command",
"AP_Motors","unclassified","initialised_ok","get",
"AP_Motors","unclassified","set_initialised_ok","set",
"AP_Motors","unclassified","armed","get",
"AP_Motors","unclassified","set_interlock","set",
"AP_Motors","unclassified","get_interlock","get",
"AP_Motors","unclassified","get_spoolup_block","get",
"AP_Motors","unclassified","set_spoolup_block","set",
"AP_Motors","unclassified","set_roll","set",
"AP_Motors","unclassified","set_roll_ff","set",
"AP_Motors","unclassified","set_pitch","set",
"AP_Motors","unclassified","set_pitch_ff","set",
"AP_Motors","unclassified","set_yaw","set",
"AP_Motors","unclassified","set_yaw_ff","set",
"AP_Motors","unclassified","set_throttle","set",
"AP_Motors","unclassified","set_throttle_avg_max","set",
"AP_Motors","unclassified","set_throttle_filter_cutoff","command",
"AP_Motors","unclassified","set_slew_filter_cutoff","command",
"AP_Motors","unclassified","set_forward","set",
"AP_Motors","unclassified","set_lateral","set",
"AP_Motors","unclassified","set_roll_pitch","empty",
"AP_Motors","unclassified","get_roll","get",
"AP_Motors","unclassified","get_roll_ff","get",
"AP_Motors","unclassified","get_pitch","get",
"AP_Motors","unclassified","get_pitch_ff","get",
"AP_Motors","unclassified","get_yaw","get",
"AP_Motors","unclassified","get_yaw_ff","get",
"AP_Motors","unclassified","get_throttle_out","get",
"AP_Motors","unclassified","get_throttle","property",
"AP_Motors","unclassified","get_throttle_bidirectional","property",
"AP_Motors","unclassified","get_throttle_slew_rate","get",
"AP_Motors","unclassified","get_forward","get",
"AP_Motors","unclassified","get_lateral","get",
"AP_Motors","unclassified","set_thrust_boost","set",
"AP_Motors","unclassified","get_thrust_boost","get",
"AP_Motors","unclassified","get_lost_motor","incidental",
"AP_Motors","unclassified","get_desired_spool_state","get collaborator",
"AP_Motors","unclassified","get_spool_state","get collaborator",
"AP_Motors","unclassified","set_dt","set",
"AP_Motors","unclassified","get_dt","get",
"AP_Motors","unclassified","set_update_rate","set",
"AP_Motors","unclassified","get_roll_factor","incidental",
"AP_Motors","unclassified","get_pitch_factor","incidental",
"AP_Motors","unclassified","is_motor_enabled","incidental",
"AP_Motors","unclassified","init_targets_on_arming","incidental",
"AP_Motors","unclassified","is_brushed_pwm_type","predicate",
"AP_Motors","unclassified","is_normal_pwm_type","predicate",
"AP_Motors","unclassified","get_frame_mav_type","get collaborator",
"AP_Motors","unclassified","Log_Write","empty",
"AP_Motors","unclassified","has_option","predicate non-void-command collaborator",
"AP_Motors","unclassified","save_params_on_disarm","empty",
"AP_Motors","unclassified","get_type_string","incidental",
"AP_Motors","unclassified","AP_Motors::AP_Motors","constructor",
"AP_Motors","unclassified","AP_Motors::get_frame_and_type_string","unclassified",
"AP_Motors","unclassified","AP_Motors::armed","set",
"AP_Motors","unclassified","AP_Motors::set_desired_spool_state","set collaborator",
"AP_Motors","unclassified","AP_Motors::set_radio_passthrough","command",
"AP_Motors","unclassified","AP_Motors::rc_write","wrapper stateless",
"AP_Motors","unclassified","AP_Motors::rc_write_angle","wrapper stateless",
"AP_Motors","unclassified","AP_Motors::rc_set_freq","command",
"AP_Motors","unclassified","AP_Motors::motor_mask_to_srv_channel_mask","wrapper stateless",
"AP_Motors","unclassified","AP_Motors::add_motor_num","wrapper stateless",
"AP_Motors","unclassified","AP_Motors::set_limit_flag_pitch_roll_yaw","incidental",
"AP_Motors","unclassified","AP_Motors::set_external_limits","command",
"AP_Motors","unclassified","AP_Motors::is_digital_pwm_type","predicate",
"AP_Motors","unclassified","AP_Motors::get_frame_string","get property wrapper",
"AP_Motors","unclassified","AP_Motors::set_frame_string","set",
"AP_Motors","unclassified","AP_Motors::output_test_seq","command",
"AP_Motors","unclassified","AP_Motors::arming_checks","predicate",
"AP_Motors","unclassified","AP_Motors::motor_test_checks","wrapper stateless",
"AP_Invensense_AuxiliaryBus","unclassified","AP_Invensense_AuxiliaryBus::AP_Invensense_AuxiliaryBus","constructor",
"AP_Invensense_AuxiliaryBus","unclassified","AP_Invensense_AuxiliaryBus::get_semaphore","property controller",
"AP_Invensense_AuxiliaryBus","unclassified","AP_Invensense_AuxiliaryBus::_instantiate_slave","property non-void-command collaborator",
"AP_Invensense_AuxiliaryBus","unclassified","AP_Invensense_AuxiliaryBus::_configure_slaves","controller",
"AP_Invensense_AuxiliaryBus","unclassified","AP_Invensense_AuxiliaryBus::_configure_periodic_read","property set collaborator",
"AP_Invensense_AuxiliaryBus","unclassified","AP_Invensense_AuxiliaryBus::register_periodic_callback","property controller",
"CompassLearn","commander small-class","CompassLearn::CompassLearn","constructor",
"CompassLearn","commander small-class","CompassLearn::update","command",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::AP_Compass_AK8963","constructor",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::~AP_Compass_AK8963","destructor",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::probe","controller stateless",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::probe_mpu9250","property non-void-command collaborator",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::probe_mpu9250","controller stateless",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::init","predicate non-void-command collaborator",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::read","wrapper",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::_make_adc_sensitivity_adjustment","collaborator incidental",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::_make_factory_sensitivity_adjustment","void-accessor collaborator",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::_update","command collaborator",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::_check_id","predicate non-void-command",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::_setup_mode","predicate non-void-command",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::_reset","predicate non-void-command",
"AP_Compass_AK8963","boundary","AP_Compass_AK8963::_calibrate","predicate",
"AP_CustomRotation_params","empty","AP_CustomRotation_params::AP_CustomRotation_params","constructor",
"AP_DAL_Airspeed","data-provider","healthy","get",
"AP_DAL_Airspeed","data-provider","healthy","predicate",
"AP_DAL_Airspeed","data-provider","use","get",
"AP_DAL_Airspeed","data-provider","use","predicate",
"AP_DAL_Airspeed","data-provider","get_airspeed","get",
"AP_DAL_Airspeed","data-provider","get_airspeed","property",
"AP_DAL_Airspeed","data-provider","last_update_ms","get",
"AP_DAL_Airspeed","data-provider","last_update_ms","property",
"AP_DAL_Airspeed","data-provider","get_num_sensors","get",
"AP_DAL_Airspeed","data-provider","get_primary","get",
"AP_DAL_Airspeed","data-provider","handle_message","set collaborator",
"AP_DAL_Airspeed","data-provider","handle_message","set collaborator",
"AP_DAL_Airspeed","data-provider","AP_DAL_Airspeed::AP_DAL_Airspeed","constructor",
"AP_DAL_Airspeed","data-provider","AP_DAL_Airspeed::start_frame","command collaborator",
"AP_OpticalFlow_MSP","commander","init","empty",
"AP_OpticalFlow_MSP","commander","AP_OpticalFlow_MSP::detect","wrapper stateless",
"AP_OpticalFlow_MSP","commander","AP_OpticalFlow_MSP::update","command",
"AP_OpticalFlow_MSP","commander","AP_OpticalFlow_MSP::handle_msp","command collaborator",
"AP_Invensense_AuxiliaryBusSlave","unclassified","AP_Invensense_AuxiliaryBusSlave::AP_Invensense_AuxiliaryBusSlave","constructor",
"AP_Invensense_AuxiliaryBusSlave","unclassified","AP_Invensense_AuxiliaryBusSlave::_set_passthrough","property non-void-command",
"AP_Invensense_AuxiliaryBusSlave","unclassified","AP_Invensense_AuxiliaryBusSlave::passthrough_read","property non-void-command",
"AP_Invensense_AuxiliaryBusSlave","unclassified","AP_Invensense_AuxiliaryBusSlave::passthrough_write","property non-void-command",
"AP_Invensense_AuxiliaryBusSlave","unclassified","AP_Invensense_AuxiliaryBusSlave::read","get property non-void-command",
"AP_DAL_GPS","data-provider","status","property collaborator",
"AP_DAL_GPS","data-provider","status","property collaborator",
"AP_DAL_GPS","data-provider","location","get collaborator",
"AP_DAL_GPS","data-provider","have_vertical_velocity","get",
"AP_DAL_GPS","data-provider","have_vertical_velocity","predicate",
"AP_DAL_GPS","data-provider","horizontal_accuracy","get",
"AP_DAL_GPS","data-provider","horizontal_accuracy","predicate",
"AP_DAL_GPS","data-provider","vertical_accuracy","get",
"AP_DAL_GPS","data-provider","vertical_accuracy","predicate",
"AP_DAL_GPS","data-provider","get_hdop","get",
"AP_DAL_GPS","data-provider","get_hdop","property",
"AP_DAL_GPS","data-provider","last_message_time_ms","get",
"AP_DAL_GPS","data-provider","num_sats","get",
"AP_DAL_GPS","data-provider","num_sats","property",
"AP_DAL_GPS","data-provider","get_lag","get",
"AP_DAL_GPS","data-provider","get_lag","predicate",
"AP_DAL_GPS","data-provider","velocity","get collaborator",
"AP_DAL_GPS","data-provider","velocity","property collaborator",
"AP_DAL_GPS","data-provider","speed_accuracy","get",
"AP_DAL_GPS","data-provider","speed_accuracy","predicate",
"AP_DAL_GPS","data-provider","gps_yaw_deg","get",
"AP_DAL_GPS","data-provider","num_sensors","get",
"AP_DAL_GPS","data-provider","primary_sensor","get",
"AP_DAL_GPS","data-provider","location","property collaborator",
"AP_DAL_GPS","data-provider","get_antenna_offset","get collaborator",
"AP_DAL_GPS","data-provider","handle_message","set collaborator",
"AP_DAL_GPS","data-provider","handle_message","set collaborator",
"AP_DAL_GPS","data-provider","handle_message","set collaborator",
"AP_DAL_GPS","data-provider","AP_DAL_GPS::AP_DAL_GPS","constructor",
"AP_DAL_GPS","data-provider","AP_DAL_GPS::start_frame","command collaborator",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","empty",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","command",
"AP_LoggerTest","controller degenerate","loop","command",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","AP_LoggerTest::setup","command",
"AP_LoggerTest","controller degenerate","AP_LoggerTest::loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","empty",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","empty",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","wrapper stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","empty",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","loop","empty",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","incidental",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","incidental",
"AP_LoggerTest","controller degenerate","setup","controller stateless",
"AP_LoggerTest","controller degenerate","loop","controller stateless",
"AP_ExternalControl","degenerate small-class","set_linear_velocity_and_yaw_rate","incidental",
"AP_ExternalControl","degenerate small-class","set_global_position","collaborator incidental",
"AP_ExternalControl","degenerate small-class","~AP_ExternalControl","destructor",
"AP_ExternalControl","degenerate small-class","AP_ExternalControl::AP_ExternalControl","constructor",
"ModeZigZag","unclassified","mode_number","collaborator incidental",
"ModeZigZag","unclassified","requires_GPS","incidental",
"ModeZigZag","unclassified","has_manual_throttle","incidental",
"ModeZigZag","unclassified","allows_arming","collaborator incidental",
"ModeZigZag","unclassified","is_autopilot","incidental",
"ModeZigZag","unclassified","has_user_takeoff","incidental",
"ModeZigZag","unclassified","name","incidental",
"ModeZigZag","unclassified","name4","incidental",
"ModeZigZag","unclassified","ModeZigZag::ModeZigZag","constructor",
"ModeZigZag","unclassified","ModeZigZag::init","predicate non-void-command",
"ModeZigZag","unclassified","ModeZigZag::exit","command",
"ModeZigZag","unclassified","ModeZigZag::run","unclassified",
"ModeZigZag","unclassified","ModeZigZag::save_or_move_to_destination","command collaborator",
"ModeZigZag","unclassified","ModeZigZag::move_to_side","command",
"ModeZigZag","unclassified","ModeZigZag::return_to_manual_control","collaborator",
"ModeZigZag","unclassified","ModeZigZag::auto_control","command",
"ModeZigZag","unclassified","ModeZigZag::manual_control","controller stateless",
"ModeZigZag","unclassified","ModeZigZag::reached_destination","predicate set",
"ModeZigZag","unclassified","ModeZigZag::calculate_next_dest","predicate controller",
"ModeZigZag","unclassified","ModeZigZag::calculate_side_dest","predicate controller",
"ModeZigZag","unclassified","ModeZigZag::run_auto","command",
"ModeZigZag","unclassified","ModeZigZag::suspend_auto","set",
"ModeZigZag","unclassified","ModeZigZag::init_auto","command",
"ModeZigZag","unclassified","ModeZigZag::spray","controller",
"ModeZigZag","unclassified","ModeZigZag::wp_distance","property controller",
"ModeZigZag","unclassified","ModeZigZag::wp_bearing","property controller",
"ModeZigZag","unclassified","ModeZigZag::crosstrack_error","property controller",
"GPS_FILE","commander boundary small-class","GPS_FILE::publish","command collaborator",
"DShotLED","pure-controller degenerate small-class","DShotLED","constructor",
"DShotLED","pure-controller degenerate small-class","init","incidental",
"DShotLED","pure-controller degenerate small-class","DShotLED::hw_set_rgb","controller stateless",
"AP_RangeFinder_Backend","data-provider","~AP_RangeFinder_Backend","destructor",
"AP_RangeFinder_Backend","data-provider","init_serial","empty",
"AP_RangeFinder_Backend","data-provider","handle_msg","collaborator incidental",
"AP_RangeFinder_Backend","data-provider","handle_script_msg","incidental",
"AP_RangeFinder_Backend","data-provider","handle_script_msg","collaborator incidental",
"AP_RangeFinder_Backend","data-provider","handle_msp","collaborator incidental",
"AP_RangeFinder_Backend","data-provider","orientation","property collaborator",
"AP_RangeFinder_Backend","data-provider","distance","get",
"AP_RangeFinder_Backend","data-provider","distance_cm","property",
"AP_RangeFinder_Backend","data-provider","signal_quality_pct","get",
"AP_RangeFinder_Backend","data-provider","voltage_mv","get",
"AP_RangeFinder_Backend","data-provider","max_distance_cm","get",
"AP_RangeFinder_Backend","data-provider","min_distance_cm","get",
"AP_RangeFinder_Backend","data-provider","ground_clearance_cm","get",
"AP_RangeFinder_Backend","data-provider","type","property collaborator",
"AP_RangeFinder_Backend","data-provider","range_valid_count","get",
"AP_RangeFinder_Backend","data-provider","get_pos_offset","get collaborator",
"AP_RangeFinder_Backend","data-provider","last_reading_ms","get",
"AP_RangeFinder_Backend","data-provider","get_temp","incidental",
"AP_RangeFinder_Backend","data-provider","allocated_type","get collaborator",
"AP_RangeFinder_Backend","data-provider","update_status","command",
"AP_RangeFinder_Backend","data-provider","set_status","command collaborator",
"AP_RangeFinder_Backend","data-provider","AP_RangeFinder_Backend::AP_RangeFinder_Backend","constructor",
"AP_RangeFinder_Backend","data-provider","AP_RangeFinder_Backend::get_mav_distance_sensor_type","property collaborator",
"AP_RangeFinder_Backend","data-provider","AP_RangeFinder_Backend::status","get property collaborator",
"AP_RangeFinder_Backend","data-provider","AP_RangeFinder_Backend::has_data","predicate",
"AP_RangeFinder_Backend","data-provider","AP_RangeFinder_Backend::update_status","collaborator",
"AP_RangeFinder_Backend","data-provider","AP_RangeFinder_Backend::set_status","collaborator incidental",
"AP_RangeFinder_Backend","data-provider","AP_RangeFinder_Backend::get_state","void-accessor wrapper",
"AC_AutoTune_FreqResp","unclassified","AC_AutoTune_FreqResp","constructor",
"AC_AutoTune_FreqResp","unclassified","is_cycle_complete","get",
"AC_AutoTune_FreqResp","unclassified","reset_cycle_complete","set",
"AC_AutoTune_FreqResp","unclassified","get_freq","get",
"AC_AutoTune_FreqResp","unclassified","get_gain","get",
"AC_AutoTune_FreqResp","unclassified","get_phase","get",
"AC_AutoTune_FreqResp","unclassified","get_accel_max","get",
"AC_AutoTune_FreqResp","unclassified","AC_AutoTune_FreqResp::init","command collaborator",
"AC_AutoTune_FreqResp","unclassified","AC_AutoTune_FreqResp::update","command",
"AC_AutoTune_FreqResp","unclassified","AC_AutoTune_FreqResp::push_to_meas_buffer","command collaborator",
"AC_AutoTune_FreqResp","unclassified","AC_AutoTune_FreqResp::pull_from_meas_buffer","void-accessor command collaborator",
"AC_AutoTune_FreqResp","unclassified","AC_AutoTune_FreqResp::push_to_tgt_buffer","command collaborator",
"AC_AutoTune_FreqResp","unclassified","AC_AutoTune_FreqResp::pull_from_tgt_buffer","void-accessor command collaborator",
"AP_RangeFinder_USD1_CAN","boundary degenerate small-class","AP_RangeFinder_USD1_CAN","constructor",
"AP_RangeFinder_USD1_CAN","boundary degenerate small-class","AP_RangeFinder_USD1_CAN::handle_frame","wrapper stateless",
"AP_HAL_DAL_Standalone","degenerate","AP_HAL_DAL_Standalone","constructor",
"AP_HAL_DAL_Standalone","degenerate","run","empty",
"AP_HAL_DAL_Standalone","degenerate","setup","empty",
"AP_HAL_DAL_Standalone","degenerate","loop","empty",
"AP_NavEKF_Source","data-provider boundary","getPosXYSource","property collaborator",
"AP_NavEKF_Source","data-provider boundary","getPosVelYawSourceSet","get",
"AP_NavEKF_Source","data-provider boundary","getVelXYSource","property collaborator",
"AP_NavEKF_Source","data-provider boundary","getVelZSource","property collaborator",
"AP_NavEKF_Source","data-provider boundary","init","empty",
"AP_NavEKF_Source","data-provider boundary","init","wrapper stateless",
"AP_NavEKF_Source","data-provider boundary","init","wrapper stateless",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::AP_NavEKF_Source","constructor",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::setPosVelYawSourceSet","set collaborator",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::useVelXYSource","predicate collaborator",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::useVelZSource","predicate collaborator",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::haveVelZSource","predicate",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::getYawSource","property wrapper",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::getPosZSource","property wrapper",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::align_inactive_sources","command",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::usingGPS","predicate",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::configured","get predicate set",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::mark_configured","controller stateless",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::pre_arm_check","controller stateless",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::ext_nav_enabled","collaborator incidental",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::wheel_encoder_enabled","collaborator incidental",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::get_active_source_set","get",
"AP_NavEKF_Source","data-provider boundary","AP_NavEKF_Source::gps_yaw_enabled","controller stateless",
"CanardInterface","boundary","get_node_id","get",
"CanardInterface","boundary","shouldAcceptTransfer","wrapper stateless",
"CanardInterface","boundary","CanardInterface::CanardInterface","constructor",
"CanardInterface","boundary","CanardInterface::init","set",
"CanardInterface","boundary","CanardInterface::broadcast","predicate non-void-command collaborator",
"CanardInterface","boundary","CanardInterface::request","predicate non-void-command collaborator",
"CanardInterface","boundary","CanardInterface::respond","predicate non-void-command collaborator",
"CanardInterface","boundary","CanardInterface::onTransferReception","controller stateless",
"CanardInterface","boundary","CanardInterface::shouldAcceptTransfer","controller stateless",
"CanardInterface","boundary","CanardInterface::processTestRx","wrapper",
"CanardInterface","boundary","CanardInterface::processTx","wrapper",
"CanardInterface","boundary","CanardInterface::update_rx_protocol_stats","command",
"CanardInterface","boundary","CanardInterface::processRx","unclassified",
"CanardInterface","boundary","CanardInterface::process","command",
"CanardInterface","boundary","CanardInterface::add_interface","predicate non-void-command collaborator",
"CanardInterface","boundary","CanardInterface::add_11bit_driver","predicate set collaborator",
"CanardInterface","boundary","CanardInterface::write_aux_frame","predicate wrapper",
"JitterCorrection","unclassified","get_link_offset_usec","get",
"JitterCorrection","unclassified","JitterCorrection::JitterCorrection","constructor",
"JitterCorrection","unclassified","JitterCorrection::correct_offboard_timestamp_usec","property non-void-command",
"JitterCorrection","unclassified","JitterCorrection::correct_offboard_timestamp_msec","property non-void-command",
"AP_GPS_NMEA_Test","boundary degenerate small-class","parse_decimal_100","wrapper stateless",
"EKF_obs_buffer_t","boundary degenerate","EKF_obs_buffer_t","constructor",
"EKF_obs_buffer_t","boundary degenerate","init","wrapper stateless",
"EKF_obs_buffer_t","boundary degenerate","recall","wrapper stateless",
"EKF_obs_buffer_t","boundary degenerate","push","wrapper stateless",
"EKF_obs_buffer_t","boundary degenerate","reset","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","EKF_IMU_buffer_t","constructor",
"EKF_IMU_buffer_t","boundary degenerate","init","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","push_youngest_element","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","is_filled","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","get_oldest_element","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","reset_history","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","reset","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","operator[]","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","get_oldest_index","wrapper stateless",
"EKF_IMU_buffer_t","boundary degenerate","get_youngest_index","wrapper stateless",
"PolyFit","entity boundary small-class","PolyFit<order,xtype,vtype>::update","command collaborator",
"PolyFit","entity boundary small-class","PolyFit<order,xtype,vtype>::get_polynomial","predicate wrapper",
"AP_RTC","data-provider","get_semaphore","get collaborator",
"AP_RTC","data-provider","AP_RTC::AP_RTC","constructor",
"AP_RTC","data-provider","AP_RTC::set_utc_usec","command collaborator",
"AP_RTC","data-provider","AP_RTC::get_utc_usec","predicate wrapper",
"AP_RTC","data-provider","AP_RTC::clock_ms_to_hms_fields","incidental",
"AP_RTC","data-provider","AP_RTC::clock_s_to_date_fields","wrapper stateless",
"AP_RTC","data-provider","AP_RTC::_is_leap","incidental",
"AP_RTC","data-provider","AP_RTC::_timegm","property non-void-command collaborator",
"AP_RTC","data-provider","AP_RTC::date_fields_to_clock_s","property",
"AP_RTC","data-provider","AP_RTC::get_system_clock_utc","predicate",
"AP_RTC","data-provider","AP_RTC::get_local_time","predicate",
"AP_RTC","data-provider","AP_RTC::get_time_utc","property non-void-command",
"AP_RTC","data-provider","AP_RTC::get_date_and_time_utc","predicate collaborator",
"LowPassHelper","small-class","set_cutoff_frequency_override","set",
"LowPassHelper","small-class","print_transfer_function","controller",
"NavEKF2_core","unclassified","getIMUIndex","get",
"NavEKF2_core","unclassified","have_aligned_tilt","get",
"NavEKF2_core","unclassified","have_aligned_yaw","get",
"NavEKF2_core","unclassified","get_yawEstimator","get collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::FuseAirspeed","command",
"NavEKF2_core","unclassified","NavEKF2_core::SelectTasFusion","command",
"NavEKF2_core","unclassified","NavEKF2_core::SelectBetaFusion","command",
"NavEKF2_core","unclassified","NavEKF2_core::FuseSideslip","command",
"NavEKF2_core","unclassified","NavEKF2_core::controlFilterModes","command",
"NavEKF2_core","unclassified","NavEKF2_core::effective_magCal","get property",
"NavEKF2_core","unclassified","NavEKF2_core::setWindMagStateLearningMode","command",
"NavEKF2_core","unclassified","NavEKF2_core::setAidingMode","command",
"NavEKF2_core","unclassified","NavEKF2_core::checkAttitudeAlignmentStatus","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::useAirspeed","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::useRngFinder","incidental",
"NavEKF2_core","unclassified","NavEKF2_core::optFlowDataPresent","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::readyToUseGPS","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::readyToUseRangeBeacon","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::readyToUseExtNav","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::use_compass","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::assume_zero_sideslip","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::setOriginLLH","predicate non-void-command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::setOrigin","predicate non-void-command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::recordYawReset","command",
"NavEKF2_core","unclassified","NavEKF2_core::checkGyroCalStatus","get set collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::updateFilterStatus","command",
"NavEKF2_core","unclassified","NavEKF2_core::runYawEstimatorPrediction","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::runYawEstimatorCorrection","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::EKFGSF_requestYawReset","set",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_NKF1","collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_NKF2","collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_NKF3","unclassified",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_NKF4","collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_NKF5","unclassified",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_Quaternion","collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_Beacon","set collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_Timing","set",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write","command",
"NavEKF2_core","unclassified","NavEKF2_core::Log_Write_GSF","unclassified",
"NavEKF2_core","unclassified","NavEKF2_core::controlMagYawReset","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::realignYawGPS","command",
"NavEKF2_core","unclassified","NavEKF2_core::SelectMagFusion","command",
"NavEKF2_core","unclassified","NavEKF2_core::FuseMagnetometer","command",
"NavEKF2_core","unclassified","NavEKF2_core::fuseEulerYaw","command",
"NavEKF2_core","unclassified","NavEKF2_core::FuseDeclination","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::alignMagStateDeclination","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::recordMagReset","command",
"NavEKF2_core","unclassified","NavEKF2_core::EKFGSF_resetMainFilterYaw","predicate non-void-command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::resetQuatStateYawOnly","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::readRangeFinder","command",
"NavEKF2_core","unclassified","NavEKF2_core::writeOptFlowMeas","command",
"NavEKF2_core","unclassified","NavEKF2_core::tryChangeCompass","command",
"NavEKF2_core","unclassified","NavEKF2_core::readMagData","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::readIMUData","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::readDeltaVelocity","predicate non-void-command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::readGpsData","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::readDeltaAngle","predicate non-void-command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::readBaroData","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::calcFiltBaroOffset","set",
"NavEKF2_core","unclassified","NavEKF2_core::correctEkfOriginHeight","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::readAirSpdData","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::readRngBcnData","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::updateTimingStatistics","command",
"NavEKF2_core","unclassified","NavEKF2_core::writeExtNavData","command",
"NavEKF2_core","unclassified","NavEKF2_core::MagDeclination","get property collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::learnInactiveBiases","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::writeDefaultAirSpeed","set",
"NavEKF2_core","unclassified","NavEKF2_core::writeExtNavVelData","command",
"NavEKF2_core","unclassified","NavEKF2_core::SelectFlowFusion","command",
"NavEKF2_core","unclassified","NavEKF2_core::EstimateTerrainOffset","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::FuseOptFlow","command",
"NavEKF2_core","unclassified","NavEKF2_core::healthy","predicate collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::errorScore","property wrapper",
"NavEKF2_core","unclassified","NavEKF2_core::getHeightControlLimit","predicate collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getEulerAngles","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getGyroBias","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getGyroScaleErrorPercentage","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getRotationBodyToNED","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getQuaternion","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getLastYawResetAngle","get",
"NavEKF2_core","unclassified","NavEKF2_core::getLastPosNorthEastReset","get collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getLastPosDownReset","get",
"NavEKF2_core","unclassified","NavEKF2_core::getLastVelNorthEastReset","get collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getWind","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getVelNED","void-accessor wrapper",
"NavEKF2_core","unclassified","NavEKF2_core::getAirSpdVec","predicate collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getPosDownDerivative","property",
"NavEKF2_core","unclassified","NavEKF2_core::getAccelZBias","void-accessor",
"NavEKF2_core","unclassified","NavEKF2_core::getPosNE","predicate collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getPosD","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::getHAGL","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::getLLH","predicate collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getEkfControlLimits","void-accessor wrapper",
"NavEKF2_core","unclassified","NavEKF2_core::getOriginLLH","get collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getMagNED","void-accessor wrapper",
"NavEKF2_core","unclassified","NavEKF2_core::getMagXYZ","void-accessor wrapper",
"NavEKF2_core","unclassified","NavEKF2_core::getMagOffsets","predicate collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getInnovations","predicate",
"NavEKF2_core","unclassified","NavEKF2_core::getVariances","predicate collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getFilterFaults","void-accessor",
"NavEKF2_core","unclassified","NavEKF2_core::getFilterStatus","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::getFilterGpsStatus","collaborator incidental",
"NavEKF2_core","unclassified","NavEKF2_core::send_status_report","collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::prearm_failure_reason","get property",
"NavEKF2_core","unclassified","NavEKF2_core::getFramesSincePredict","get",
"NavEKF2_core","unclassified","NavEKF2_core::isExtNavUsedForYaw","get",
"NavEKF2_core","unclassified","NavEKF2_core::ResetVelocity","command",
"NavEKF2_core","unclassified","NavEKF2_core::ResetPosition","command",
"NavEKF2_core","unclassified","NavEKF2_core::ResetPositionNE","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::ResetHeight","command",
"NavEKF2_core","unclassified","NavEKF2_core::ResetPositionD","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::resetHeightDatum","predicate non-void-command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::CorrectGPSForAntennaOffset","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::CorrectExtNavForSensorOffset","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::CorrectExtNavVelForSensorOffset","void-accessor collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::SelectVelPosFusion","command",
"NavEKF2_core","unclassified","NavEKF2_core::FuseVelPosNED","command",
"NavEKF2_core","unclassified","NavEKF2_core::selectHeightForFusion","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::SelectRngBcnFusion","command",
"NavEKF2_core","unclassified","NavEKF2_core::FuseRngBcn","command",
"NavEKF2_core","unclassified","NavEKF2_core::FuseRngBcnStatic","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::CalcRangeBeaconPosDownOffset","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::calcGpsGoodToAlign","command",
"NavEKF2_core","unclassified","NavEKF2_core::calcGpsGoodForFlight","command",
"NavEKF2_core","unclassified","NavEKF2_core::detectFlight","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::setTerrainHgtStable","set",
"NavEKF2_core","unclassified","NavEKF2_core::detectOptFlowTakeoff","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::NavEKF2_core","constructor",
"NavEKF2_core","unclassified","NavEKF2_core::setup_core","predicate non-void-command",
"NavEKF2_core","unclassified","NavEKF2_core::InitialiseVariables","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::InitialiseVariablesMag","command",
"NavEKF2_core","unclassified","NavEKF2_core::InitialiseFilterBootstrap","predicate non-void-command",
"NavEKF2_core","unclassified","NavEKF2_core::CovarianceInit","command",
"NavEKF2_core","unclassified","NavEKF2_core::UpdateFilter","command",
"NavEKF2_core","unclassified","NavEKF2_core::correctDeltaAngle","void-accessor",
"NavEKF2_core","unclassified","NavEKF2_core::correctDeltaVelocity","void-accessor",
"NavEKF2_core","unclassified","NavEKF2_core::UpdateStrapdownEquationsNED","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::calcOutputStates","command",
"NavEKF2_core","unclassified","NavEKF2_core::CovariancePrediction","command",
"NavEKF2_core","unclassified","NavEKF2_core::zeroRows","wrapper stateless",
"NavEKF2_core","unclassified","NavEKF2_core::zeroCols","wrapper stateless",
"NavEKF2_core","unclassified","NavEKF2_core::StoreOutputReset","command",
"NavEKF2_core","unclassified","NavEKF2_core::StoreQuatReset","command",
"NavEKF2_core","unclassified","NavEKF2_core::StoreQuatRotate","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::ForceSymmetry","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::CopyCovariances","set",
"NavEKF2_core","unclassified","NavEKF2_core::ConstrainVariances","command",
"NavEKF2_core","unclassified","NavEKF2_core::MagTableConstrain","command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::ConstrainStates","command",
"NavEKF2_core","unclassified","NavEKF2_core::calcEarthRateNED","wrapper stateless",
"NavEKF2_core","unclassified","NavEKF2_core::calcQuatAndFieldStates","property non-void-command collaborator",
"NavEKF2_core","unclassified","NavEKF2_core::zeroAttCovOnly","unclassified",
"NavEKF2_core","unclassified","NavEKF2_core::resetGyroBias","command",
"NavEKF2_core","unclassified","NavEKF2_core::InitialGyroBiasUncertainty","collaborator incidental",
"PCA9685LED_I2C","unclassified","PCA9685LED_I2C::PCA9685LED_I2C","constructor",
"PCA9685LED_I2C","unclassified","PCA9685LED_I2C::init","predicate",
"PCA9685LED_I2C","unclassified","PCA9685LED_I2C::hw_set_rgb","predicate non-void-command",
"PCA9685LED_I2C","unclassified","PCA9685LED_I2C::_timer","set",
"SITL_SFML_LED","unclassified","SITL_SFML_LED","constructor",
"SITL_SFML_LED","unclassified","SITL_SFML_LED::layout_size","predicate",
"SITL_SFML_LED","unclassified","SITL_SFML_LED::layout_pos","incidental",
"SITL_SFML_LED","unclassified","SITL_SFML_LED::update_serial_LEDs","command",
"SITL_SFML_LED","unclassified","SITL_SFML_LED::update_thread","command",
"SITL_SFML_LED","unclassified","SITL_SFML_LED::update_thread_start","property command collaborator",
"SITL_SFML_LED","unclassified","SITL_SFML_LED::init","predicate wrapper",
"SITL_SFML_LED","unclassified","SITL_SFML_LED::update","empty",
"MS5XXX","commander","reset","controller stateless",
"MS5XXX","commander","MS5XXX::MS5XXX","constructor",
"MS5XXX","commander","MS5XXX::reset","set",
"MS5XXX","commander","MS5XXX::convert_D1","command",
"MS5XXX","commander","MS5XXX::convert_D2","command",
"MS5XXX","commander","MS5XXX::update","command collaborator",
"MS5XXX","commander","MS5XXX::rdwr","property set collaborator",
"AP_Radio_cc2500","unclassified","get_tx_version","wrapper stateless",
"AP_Radio_cc2500","unclassified","set_wifi_channel","set",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::AP_Radio_cc2500","constructor",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::init","predicate set",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::reset","predicate non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::get_stats","get collaborator",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::read","get property",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::update","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::num_channels","get non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::last_recv_us","get",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::send","incidental",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::probe","controller stateless",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::radio_init","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::trigger_irq_radio_event","set",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::trigger_timeout_event","wrapper",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::start_recv_bind","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::handle_data_packet","command collaborator",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::handle_D16_packet","predicate non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::handle_SRT_packet","predicate non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::have_channel","predicate",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::setup_hopping_table_SRT","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::handle_autobind_packet","predicate non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::map_RSSI_to_dBm","incidental",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::irq_handler","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::set_fcc_channel","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::irq_timeout","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::irq_handler_thd","command collaborator",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::initTuneRx","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::initialiseData","controller",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::initGetBind","set",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::check_best_LQI","predicate non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::tuneRx","predicate non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::getBindData","predicate non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::setChannel","controller stateless",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::setChannelRX","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::nextChannel","set",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::parse_frSkyX","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::calc_crc","incidental",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::check_crc","predicate non-void-command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::save_bind_info","controller",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::load_bind_info","predicate non-void-command collaborator",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::send_D16_telemetry","set",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::send_SRT_telemetry","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::check_fw_ack","command",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::map_stick_mode","wrapper stateless",
"AP_Radio_cc2500","unclassified","AP_Radio_cc2500::check_double_bind","command",
"NavEKF3","data-provider","activeCores","get",
"NavEKF3","data-provider","set_baro_alt_noise","command",
"NavEKF3","data-provider","set_enable","command",
"NavEKF3","data-provider","get_enable","predicate",
"NavEKF3","data-provider","NavEKF3::NavEKF3","constructor",
"NavEKF3","data-provider","NavEKF3::InitialiseFilter","predicate non-void-command",
"NavEKF3","data-provider","NavEKF3::coreBetterScore","get predicate controller",
"NavEKF3","data-provider","NavEKF3::UpdateFilter","command",
"NavEKF3","data-provider","NavEKF3::checkLaneSwitch","command",
"NavEKF3","data-provider","NavEKF3::requestYawReset","wrapper",
"NavEKF3","data-provider","NavEKF3::updateCoreErrorScores","get set",
"NavEKF3","data-provider","NavEKF3::updateCoreRelativeErrors","set",
"NavEKF3","data-provider","NavEKF3::resetCoreErrors","set",
"NavEKF3","data-provider","NavEKF3::setPosVelYawSourceSet","command",
"NavEKF3","data-provider","NavEKF3::healthy","get predicate",
"NavEKF3","data-provider","NavEKF3::pre_arm_check","predicate",
"NavEKF3","data-provider","NavEKF3::getPrimaryCoreIndex","get property",
"NavEKF3","data-provider","NavEKF3::getPrimaryCoreIMUIndex","get property wrapper",
"NavEKF3","data-provider","NavEKF3::getPosNE","get predicate collaborator",
"NavEKF3","data-provider","NavEKF3::getPosD","get predicate",
"NavEKF3","data-provider","NavEKF3::getVelNED","collaborator",
"NavEKF3","data-provider","NavEKF3::getAirSpdVec","get predicate collaborator",
"NavEKF3","data-provider","NavEKF3::getAirSpdHealthData","get predicate",
"NavEKF3","data-provider","NavEKF3::getPosDownDerivative","get property",
"NavEKF3","data-provider","NavEKF3::getGyroBias","wrapper",
"NavEKF3","data-provider","NavEKF3::getAccelBias","wrapper",
"NavEKF3","data-provider","NavEKF3::get_active_source_set","property",
"NavEKF3","data-provider","NavEKF3::resetGyroBias","command",
"NavEKF3","data-provider","NavEKF3::resetHeightDatum","predicate non-void-command",
"NavEKF3","data-provider","NavEKF3::getEkfControlLimits","void-accessor",
"NavEKF3","data-provider","NavEKF3::getWind","get predicate collaborator",
"NavEKF3","data-provider","NavEKF3::getMagNED","collaborator",
"NavEKF3","data-provider","NavEKF3::getMagXYZ","collaborator",
"NavEKF3","data-provider","NavEKF3::getActiveAirspeed","get property",
"NavEKF3","data-provider","NavEKF3::getMagOffsets","predicate collaborator",
"NavEKF3","data-provider","NavEKF3::getLLH","get predicate collaborator",
"NavEKF3","data-provider","NavEKF3::getOriginLLH","get predicate collaborator",
"NavEKF3","data-provider","NavEKF3::setOriginLLH","predicate non-void-command collaborator",
"NavEKF3","data-provider","NavEKF3::setLatLng","predicate non-void-command",
"NavEKF3","data-provider","NavEKF3::getHAGL","get predicate",
"NavEKF3","data-provider","NavEKF3::getEulerAngles","collaborator",
"NavEKF3","data-provider","NavEKF3::getRotationBodyToNED","collaborator",
"NavEKF3","data-provider","NavEKF3::getQuaternionBodyToNED","collaborator",
"NavEKF3","data-provider","NavEKF3::getQuaternion","collaborator",
"NavEKF3","data-provider","NavEKF3::getInnovations","get predicate",
"NavEKF3","data-provider","NavEKF3::getVariances","get predicate collaborator",
"NavEKF3","data-provider","NavEKF3::getVelInnovationsAndVariancesForSource","get predicate collaborator",
"NavEKF3","data-provider","NavEKF3::use_compass","get predicate",
"NavEKF3","data-provider","NavEKF3::using_noncompass_for_yaw","get predicate",
"NavEKF3","data-provider","NavEKF3::using_extnav_for_yaw","get predicate",
"NavEKF3","data-provider","NavEKF3::configuredToUseGPSForPosXY","predicate",
"NavEKF3","data-provider","NavEKF3::writeOptFlowMeas","command",
"NavEKF3","data-provider","NavEKF3::getOptFlowSample","get predicate collaborator",
"NavEKF3","data-provider","NavEKF3::writeEulerYawAngle","command",
"NavEKF3","data-provider","NavEKF3::writeExtNavData","command",
"NavEKF3","data-provider","NavEKF3::writeExtNavVelData","command",
"NavEKF3","data-provider","NavEKF3::writeBodyFrameOdom","command collaborator",
"NavEKF3","data-provider","NavEKF3::writeWheelOdom","command",
"NavEKF3","data-provider","NavEKF3::convert_parameters","command collaborator",
"NavEKF3","data-provider","NavEKF3::setTerrainHgtStable","command",
"NavEKF3","data-provider","NavEKF3::getFilterFaults","void-accessor",
"NavEKF3","data-provider","NavEKF3::getFilterStatus","collaborator",
"NavEKF3","data-provider","NavEKF3::send_status_report","collaborator",
"NavEKF3","data-provider","NavEKF3::getHeightControlLimit","get predicate",
"NavEKF3","data-provider","NavEKF3::getLastYawResetAngle","property non-void-command",
"NavEKF3","data-provider","NavEKF3::getLastPosNorthEastReset","property non-void-command collaborator",
"NavEKF3","data-provider","NavEKF3::getLastVelNorthEastReset","get property collaborator",
"NavEKF3","data-provider","NavEKF3::getLastPosDownReset","property non-void-command",
"NavEKF3","data-provider","NavEKF3::updateLaneSwitchYawResetData","command",
"NavEKF3","data-provider","NavEKF3::updateLaneSwitchPosResetData","command collaborator",
"NavEKF3","data-provider","NavEKF3::updateLaneSwitchPosDownResetData","command",
"NavEKF3","data-provider","NavEKF3::writeDefaultAirSpeed","command",
"NavEKF3","data-provider","NavEKF3::yawAlignmentComplete","get predicate wrapper",
"NavEKF3","data-provider","NavEKF3::isVibrationAffected","get predicate",
"NavEKF3","data-provider","NavEKF3::get_yawEstimator","get property collaborator",
"NavEKF3","data-provider","NavEKF3::Log_Write","unclassified",
"AP_WindVane_Analog","commander small-class","AP_WindVane_Analog::AP_WindVane_Analog","constructor",
"AP_WindVane_Analog","commander small-class","AP_WindVane_Analog::update_direction","command",
"AP_WindVane_Analog","commander small-class","AP_WindVane_Analog::calibrate","command",
"AP_Frsky_D","commander","initial_baud","incidental",
"AP_Frsky_D","commander","AP_Frsky_D::send_byte","command",
"AP_Frsky_D","commander","AP_Frsky_D::send_uint16","command",
"AP_Frsky_D","commander","AP_Frsky_D::send","command collaborator",
"AP_Proximity_RangeFinder","data-provider","distance_max","get",
"AP_Proximity_RangeFinder","data-provider","distance_min","get",
"AP_Proximity_RangeFinder","data-provider","AP_Proximity_RangeFinder::update","command",
"AP_Proximity_RangeFinder","data-provider","AP_Proximity_RangeFinder::get_upward_distance","predicate wrapper",
"AP_VisualOdom_MAV","commander small-class","AP_VisualOdom_MAV::handle_pose_estimate","command",
"AP_VisualOdom_MAV","commander small-class","AP_VisualOdom_MAV::handle_vision_speed_estimate","command",
"AP_Networking","boundary","get_semaphore","get collaborator",
"AP_Networking","boundary","is_healthy","predicate",
"AP_Networking","boundary","get_dhcp_enabled","incidental",
"AP_Networking","boundary","set_dhcp_enable","controller stateless",
"AP_Networking","boundary","get_ip_param","controller stateless",
"AP_Networking","boundary","set_ip_param","controller stateless",
"AP_Networking","boundary","get_netmask_param","property",
"AP_Networking","boundary","get_gateway_param","controller stateless",
"AP_Networking","boundary","set_gateway_param","controller stateless",
"AP_Networking","boundary","option_is_set","controller stateless",
"AP_Networking","boundary","update","wrapper stateless",
"AP_Networking","boundary","init","empty",
"AP_Networking","boundary","init","wrapper stateless",
"AP_Networking","boundary","init","wrapper stateless",
"AP_Networking","boundary","AP_Networking::AP_Networking","constructor",
"AP_Networking","boundary","AP_Networking::init","command",
"AP_Networking","boundary","AP_Networking::announce_address_changes","unclassified",
"AP_Networking","boundary","AP_Networking::update","command",
"AP_Networking","boundary","AP_Networking::convert_netmask_bitcount_to_ip","incidental",
"AP_Networking","boundary","AP_Networking::convert_netmask_ip_to_bitcount","incidental",
"AP_Networking","boundary","AP_Networking::convert_str_to_macaddr","wrapper stateless",
"AP_Networking","boundary","AP_Networking::get_ip_active","property",
"AP_Networking","boundary","AP_Networking::get_netmask_active","property",
"AP_Networking","boundary","AP_Networking::get_gateway_active","property",
"AP_Networking","boundary","AP_Networking::startup_wait","unclassified",
"AP_Networking","boundary","AP_Networking::sendfile","predicate non-void-command",
"AP_Networking","boundary","AP_Networking::sendfile_check","set collaborator",
"AP_Networking","boundary","AP_Networking::address_to_str","wrapper stateless",
"AP_Networking","boundary","AP_Networking::ports_init","controller",
"AP_Networking","boundary","AP_Networking::start_tests","controller stateless",
"AP_Networking","boundary","AP_Networking::test_UDP_client","command collaborator",
"AP_Networking","boundary","AP_Networking::test_TCP_client","command collaborator",
"AP_Networking","boundary","AP_Networking::test_TCP_discard","command",
"AP_AdvancedFailsafe_Copter","pure-controller degenerate","AP_AdvancedFailsafe_Copter::terminate_vehicle","controller",
"AP_AdvancedFailsafe_Copter","pure-controller degenerate","AP_AdvancedFailsafe_Copter::setup_IO_failsafe","controller stateless",
"AP_AdvancedFailsafe_Copter","pure-controller degenerate","AP_AdvancedFailsafe_Copter::afs_mode","controller stateless",
"AP_AdvancedFailsafe_Copter","pure-controller degenerate","AP_AdvancedFailsafe_Copter::set_mode_auto","controller stateless",
"AP_Networking_PPP","commander boundary","AP_Networking_PPP::ppp_output_cb","controller stateless",
"AP_Networking_PPP","commander boundary","AP_Networking_PPP::ppp_status_callback","set collaborator",
"AP_Networking_PPP","commander boundary","AP_Networking_PPP::init","predicate non-void-command",
"AP_Networking_PPP","commander boundary","AP_Networking_PPP::ppp_loop","command collaborator",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::pre_arm_checks","predicate non-void-command",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::run_pre_arm_checks","predicate non-void-command",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::rc_throttle_failsafe_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::barometer_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::ins_checks","predicate non-void-command",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::board_voltage_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::terrain_database_required","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::parameter_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::oa_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::rc_calibration_checks","wrapper stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::gps_checks","predicate non-void-command",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::pre_arm_ekf_attitude_check","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::proximity_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::mandatory_gps_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::gcs_failsafe_check","wrapper stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::winch_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::alt_checks","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::arm_checks","predicate controller",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::mandatory_checks","predicate non-void-command",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::set_pre_arm_check","incidental",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::arm","controller stateless",
"AP_Arming_Copter","degenerate","AP_Arming_Copter::disarm","controller stateless",
"AP_Networking_SITL","degenerate small-class","init","incidental",
"AP_Networking_IPV4","entity boundary","AP_Networking_IPV4::AP_Networking_IPV4","constructor",
"AP_Networking_IPV4","entity boundary","AP_Networking_IPV4::get_uint32","property wrapper",
"AP_Networking_IPV4","entity boundary","AP_Networking_IPV4::set_default_uint32","wrapper",
"AP_Networking_IPV4","entity boundary","AP_Networking_IPV4::get_str","property non-void-command collaborator",
"ModeSurface","pure-controller degenerate","requires_GPS","incidental",
"ModeSurface","pure-controller degenerate","has_manual_throttle","incidental",
"ModeSurface","pure-controller degenerate","allows_arming","incidental",
"ModeSurface","pure-controller degenerate","is_autopilot","incidental",
"ModeSurface","pure-controller degenerate","name","incidental",
"ModeSurface","pure-controller degenerate","name4","incidental",
"ModeSurface","pure-controller degenerate","ModeSurface::init","controller stateless",
"ModeSurface","pure-controller degenerate","ModeSurface::run","controller stateless",
"LR_MsgHandler_REPH","boundary small-class","LR_MsgHandler_REPH::process_message","wrapper",
"AP_Notify","unclassified","buzzer_enabled","predicate",
"AP_Notify","unclassified","get_buzzer_types","get",
"AP_Notify","unclassified","get_flight_mode_str","get",
"AP_Notify","unclassified","get_text","get",
"AP_Notify","unclassified","get_text_updated_millis","get",
"AP_Notify","unclassified","get_buzz_pin","get",
"AP_Notify","unclassified","get_buzz_level","get",
"AP_Notify","unclassified","get_buzz_volume","get",
"AP_Notify","unclassified","get_led_len","get",
"AP_Notify","unclassified","get_led_type","get",
"AP_Notify","unclassified","AP_Notify::AP_Notify","constructor",
"AP_Notify","unclassified","AP_Notify::add_backend_helper","command collaborator",
"AP_Notify","unclassified","AP_Notify::add_backends","wrapper",
"AP_Notify","unclassified","AP_Notify::init","command",
"AP_Notify","unclassified","AP_Notify::update","command",
"AP_Notify","unclassified","AP_Notify::handle_led_control","command collaborator",
"AP_Notify","unclassified","AP_Notify::handle_rgb","wrapper",
"AP_Notify","unclassified","AP_Notify::handle_rgb_id","wrapper",
"AP_Notify","unclassified","AP_Notify::play_tune","command",
"AP_Notify","unclassified","AP_Notify::set_flight_mode_str","set",
"AP_Notify","unclassified","AP_Notify::send_text","command",
"AP_Notify","unclassified","AP_Notify::send_text_scripting","wrapper",
"AP_Notify","unclassified","AP_Notify::release_text_scripting","wrapper",
"AP_Notify","unclassified","AP_Notify::get_rgb_led_brightness_percent","property",
"AP_Notify","unclassified","AP_Notify::handle_play_tune","command collaborator",
"Buzzer","commander","Buzzer","constructor",
"Buzzer","commander","Buzzer::init","predicate non-void-command",
"Buzzer","commander","Buzzer::update","command",
"Buzzer","commander","Buzzer::update_pattern_to_play","command",
"Buzzer","commander","Buzzer::update_playing_pattern","unclassified",
"Buzzer","commander","Buzzer::on","command",
"Buzzer","commander","Buzzer::play_pattern","command",
"Buzzer","commander","Buzzer::Buzzer","constructor",
"Buzzer","commander","Buzzer::update","controller",
"Buzzer","commander","Buzzer::Buzzer","constructor",
"Buzzer","commander","Buzzer::update","empty",
"DiscoLED","small-class","DiscoLED::DiscoLED","constructor",
"DiscoLED","small-class","DiscoLED::init","predicate non-void-command",
"DiscoLED","small-class","DiscoLED::hw_set_rgb","predicate non-void-command",
"DiscreteRGBLed","small-class","DiscreteRGBLed::DiscreteRGBLed","constructor",
"DiscreteRGBLed","small-class","DiscreteRGBLed::init","predicate non-void-command",
"DiscreteRGBLed","small-class","DiscreteRGBLed::hw_set_rgb","predicate non-void-command",
"Display_Backend","empty","~Display_Backend","destructor",
"QMC5883L","unclassified","reset","controller stateless",
"QMC5883L","unclassified","SITL::QMC5883L::QMC5883L","constructor",
"QMC5883L","unclassified","SITL::QMC5883L::reset","wrapper",
"QMC5883L","unclassified","SITL::QMC5883L::rdwr","property set collaborator",
"QMC5883L","unclassified","SITL::QMC5883L::update","controller stateless",
"AP_RunCam","commander boundary","get_top_menu_length","get",
"AP_RunCam","commander boundary","get_sub_menu_length","get",
"AP_RunCam","commander boundary","disable_osd","controller stateless",
"AP_RunCam","commander boundary","enable_osd","controller stateless",
"AP_RunCam","commander boundary","has_feature","predicate collaborator",
"AP_RunCam","commander boundary","has_2_key_OSD","predicate",
"AP_RunCam","commander boundary","has_5_key_OSD","predicate",
"AP_RunCam","commander boundary","is_arming_prevented","predicate",
"AP_RunCam","commander boundary","AP_RunCam::AP_RunCam","constructor",
"AP_RunCam","commander boundary","AP_RunCam::init","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::simulate_camera_button","predicate set",
"AP_RunCam","commander boundary","AP_RunCam::start_recording","command",
"AP_RunCam","commander boundary","AP_RunCam::stop_recording","command",
"AP_RunCam","commander boundary","AP_RunCam::enter_osd","set",
"AP_RunCam","commander boundary","AP_RunCam::exit_osd","set",
"AP_RunCam","commander boundary","AP_RunCam::osd_option","set",
"AP_RunCam","commander boundary","AP_RunCam::update","command",
"AP_RunCam","commander boundary","AP_RunCam::pre_arm_check","predicate",
"AP_RunCam","commander boundary","AP_RunCam::update_osd","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::update_state_machine_armed","command",
"AP_RunCam","commander boundary","AP_RunCam::update_state_machine_disarmed","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::handle_initialized","collaborator",
"AP_RunCam","commander boundary","AP_RunCam::handle_ready","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::handle_recording","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::handle_in_menu","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::map_rc_input_to_event","property collaborator",
"AP_RunCam","commander boundary","AP_RunCam::handle_2_key_simulation_process","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::exit_2_key_osd_menu","command",
"AP_RunCam","commander boundary","AP_RunCam::handle_5_key_simulation_process","collaborator",
"AP_RunCam","commander boundary","AP_RunCam::handle_5_key_simulation_response","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::start_recording_command","property collaborator",
"AP_RunCam","commander boundary","AP_RunCam::stop_recording_command","property collaborator",
"AP_RunCam","commander boundary","AP_RunCam::receive","command",
"AP_RunCam","commander boundary","AP_RunCam::drain","command",
"AP_RunCam","commander boundary","AP_RunCam::start_uart","command",
"AP_RunCam","commander boundary","AP_RunCam::get_device_info","wrapper stateless",
"AP_RunCam","commander boundary","AP_RunCam::map_key_to_protocol_operation","collaborator incidental",
"AP_RunCam","commander boundary","AP_RunCam::send_5_key_OSD_cable_simulation_event","command",
"AP_RunCam","commander boundary","AP_RunCam::open_5_key_OSD_cable_connection","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::close_5_key_OSD_cable_connection","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::simulate_5_key_OSD_cable_button_press","set collaborator",
"AP_RunCam","commander boundary","AP_RunCam::simulate_5_key_OSD_cable_button_release","set collaborator",
"AP_RunCam","commander boundary","AP_RunCam::send_request_and_waiting_response","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::send_packet","command",
"AP_RunCam","commander boundary","AP_RunCam::parse_device_info","command collaborator",
"AP_RunCam","commander boundary","AP_RunCam::camera_ready","predicate",
"AP_RunCam","commander boundary","AP_RunCam::simulation_OSD_cable_failed","set collaborator",
"AP_RunCam","commander boundary","AP_RunCam::request_pending","predicate non-void-command",
"AP_RunCam","commander boundary","update","wrapper stateless",
"AP_RunCam","commander boundary","init","empty",
"AP_RunCam","commander boundary","init","wrapper stateless",
"AP_RunCam","commander boundary","init","wrapper stateless",
"ExternalLED","degenerate","ExternalLED","constructor",
"ExternalLED","degenerate","ExternalLED::init","controller stateless",
"ExternalLED","degenerate","ExternalLED::update","command",
"ExternalLED","degenerate","ExternalLED::set_pattern","command collaborator",
"ExternalLED","degenerate","ExternalLED::armed_led","controller stateless",
"ExternalLED","degenerate","ExternalLED::gps_led","controller stateless",
"ExternalLED","degenerate","ExternalLED::motor_led1","controller stateless",
"ExternalLED","degenerate","ExternalLED::motor_led2","controller stateless",
"ExternalLED","degenerate","ExternalLED::init","incidental",
"ExternalLED","degenerate","ExternalLED::update","incidental",
"LP5562","unclassified","LP5562::LP5562","constructor",
"LP5562","unclassified","LP5562::init","predicate",
"LP5562","unclassified","LP5562::hw_set_rgb","predicate non-void-command",
"LP5562","unclassified","LP5562::_timer","command",
"LP5562","unclassified","LP5562::init","command",
"LP5562","unclassified","LP5562::reset_registers","wrapper stateless",
"LP5562","unclassified","LP5562::update","command collaborator",
"MMLPlayer","commander","update","wrapper stateless",
"MMLPlayer","commander","MMLPlayer::update","command",
"MMLPlayer","commander","MMLPlayer::prepare_to_play_string","command",
"MMLPlayer","commander","MMLPlayer::play","command",
"MMLPlayer","commander","MMLPlayer::stop","set",
"MMLPlayer","commander","MMLPlayer::start_silence","command",
"MMLPlayer","commander","MMLPlayer::start_note","command collaborator",
"MMLPlayer","commander","MMLPlayer::next_char","property set",
"MMLPlayer","commander","MMLPlayer::next_number","property",
"MMLPlayer","commander","MMLPlayer::next_dots","property set",
"MMLPlayer","commander","MMLPlayer::rest_duration","property",
"MMLPlayer","commander","MMLPlayer::next_action","command",
"AP_Proximity_TeraRangerTowerEvo","commander","AP_Proximity_TeraRangerTowerEvo::update","unclassified",
"AP_Proximity_TeraRangerTowerEvo","commander","AP_Proximity_TeraRangerTowerEvo::distance_max","incidental",
"AP_Proximity_TeraRangerTowerEvo","commander","AP_Proximity_TeraRangerTowerEvo::distance_min","incidental",
"AP_Proximity_TeraRangerTowerEvo","commander","AP_Proximity_TeraRangerTowerEvo::initialise_modes","command",
"AP_Proximity_TeraRangerTowerEvo","commander","AP_Proximity_TeraRangerTowerEvo::set_mode","set",
"AP_Proximity_TeraRangerTowerEvo","commander","AP_Proximity_TeraRangerTowerEvo::read_sensor_data","predicate non-void-command",
"AP_Proximity_TeraRangerTowerEvo","commander","AP_Proximity_TeraRangerTowerEvo::update_sector_data","set",
"NavigatorLED","unclassified","NavigatorLED::NavigatorLED","constructor",
"NavigatorLED","unclassified","NavigatorLED::init","predicate set",
"NavigatorLED","unclassified","NavigatorLED::hw_set_rgb","predicate non-void-command",
"NavigatorLED","unclassified","NavigatorLED::_setup_data","command",
"NeoPixel","pure-controller degenerate small-class","NeoPixel::NeoPixel","constructor",
"NeoPixel","pure-controller degenerate small-class","NeoPixel::init_ports","controller stateless",
"PixRacerLED","pure-controller degenerate","PixRacerLED::PixRacerLED","constructor",
"PixRacerLED","pure-controller degenerate","PixRacerLED::init","controller stateless",
"PixRacerLED","pure-controller degenerate","PixRacerLED::hw_set_rgb","controller stateless",
"PixRacerLED","pure-controller degenerate","PixRacerLED::init","incidental",
"PixRacerLED","pure-controller degenerate","PixRacerLED::hw_set_rgb","incidental",
"AP_BattMonitor_SMBus_Generic","small-class","AP_BattMonitor_SMBus_Generic::AP_BattMonitor_SMBus_Generic","constructor",
"AP_BattMonitor_SMBus_Generic","small-class","AP_BattMonitor_SMBus_Generic::timer","command",
"AP_BattMonitor_SMBus_Generic","small-class","AP_BattMonitor_SMBus_Generic::check_pec_support","predicate non-void-command",
"RCOutputRGBLed","data-provider","RCOutputRGBLed::RCOutputRGBLed","constructor",
"RCOutputRGBLed","data-provider","RCOutputRGBLed::RCOutputRGBLed","constructor",
"RCOutputRGBLed","data-provider","RCOutputRGBLed::init","predicate controller",
"RCOutputRGBLed","data-provider","RCOutputRGBLed::get_duty_cycle_for_color","property",
"RCOutputRGBLed","data-provider","RCOutputRGBLed::hw_set_rgb","predicate non-void-command",
"AP_SerialLED","pure-controller degenerate","AP_SerialLED::set_num_neopixel","controller stateless",
"AP_SerialLED","pure-controller degenerate","AP_SerialLED::set_num_neopixel_rgb","controller stateless",
"AP_SerialLED","pure-controller degenerate","AP_SerialLED::set_num_profiled","controller stateless",
"AP_SerialLED","pure-controller degenerate","AP_SerialLED::set_RGB","controller stateless",
"AP_SerialLED","pure-controller degenerate","AP_SerialLED::send","controller stateless",
"AnalogIn","data-provider boundary","board_voltage","get",
"AnalogIn","data-provider boundary","AnalogIn::get_pin_channel","get property wrapper",
"AnalogIn","data-provider boundary","AnalogIn::get_analog_pin","get property wrapper",
"AnalogIn","data-provider boundary","AnalogIn::get_pin_scaling","get property wrapper",
"AnalogIn","data-provider boundary","AnalogIn::adccallback","command collaborator",
"AnalogIn","data-provider boundary","AnalogIn::get_adc_index","wrapper stateless",
"AnalogIn","data-provider boundary","AnalogIn::get_num_grp_channels","wrapper stateless",
"AnalogIn","data-provider boundary","AnalogIn::init","command",
"AnalogIn","data-provider boundary","AnalogIn::setup_adc","command",
"AnalogIn","data-provider boundary","AnalogIn::read_adc","void-accessor command",
"AnalogIn","data-provider boundary","AnalogIn::timer_tick_adc","collaborator",
"AnalogIn","data-provider boundary","AnalogIn::_timer_tick","unclassified",
"AnalogIn","data-provider boundary","AnalogIn::channel","get property set collaborator",
"AnalogIn","data-provider boundary","AnalogIn::update_power_flags","controller stateless",
"AnalogIn","data-provider boundary","AnalogIn::init","wrapper stateless",
"AnalogIn","data-provider boundary","AnalogIn::_timer_tick","wrapper",
"AnalogIn","data-provider boundary","AnalogIn::find_pinconfig","property",
"AnalogIn","data-provider boundary","AnalogIn::channel","get property set collaborator",
"AnalogIn","data-provider boundary","AnalogIn::AnalogIn","constructor",
"AnalogIn","data-provider boundary","AnalogIn::init","empty",
"AnalogIn","data-provider boundary","AnalogIn::channel","wrapper stateless",
"AnalogIn","data-provider boundary","AnalogIn::board_voltage","incidental",
"AnalogIn","data-provider boundary","AnalogIn::init","empty",
"AnalogIn","data-provider boundary","AnalogIn::channel","wrapper stateless",
"RCOutputRGBLedInverted","degenerate small-class","RCOutputRGBLedInverted","constructor",
"RCOutputRGBLedInverted","degenerate small-class","RCOutputRGBLedInverted::get_duty_cycle_for_color","incidental",
"I2CCommandResponseDevice","lazy-class small-class","command_processing_time_ms","incidental",
"I2CCommandResponseDevice","lazy-class small-class","SITL::I2CCommandResponseDevice::rdwr","property set collaborator",
"RCOutputRGBLedOff","boundary degenerate small-class","RCOutputRGBLedOff","constructor",
"RCOutputRGBLedOff","boundary degenerate small-class","hw_set_rgb","wrapper stateless",
"SerialLED","unclassified","init_ports","incidental",
"SerialLED","unclassified","SerialLED::SerialLED","constructor",
"SerialLED","unclassified","SerialLED::init","predicate set",
"SerialLED","unclassified","SerialLED::hw_set_rgb","predicate controller",
"AP_ToneAlarm","commander","AP_ToneAlarm::init","predicate non-void-command collaborator",
"AP_ToneAlarm","commander","AP_ToneAlarm::play_tone","command collaborator",
"AP_ToneAlarm","commander","AP_ToneAlarm::_timer_task","command",
"AP_ToneAlarm","commander","AP_ToneAlarm::play_tune","unclassified",
"AP_ToneAlarm","commander","AP_ToneAlarm::stop_cont_tone","command",
"AP_ToneAlarm","commander","AP_ToneAlarm::check_cont_tone","command",
"AP_ToneAlarm","commander","AP_ToneAlarm::update","command",
"RF_LightWareSerialBinary","degenerate small-class","RF_LightWareSerialBinary::packet_for_alt","incidental",
"AP_OLC","unclassified","AP_OLC::compute_precision_for_length","wrapper stateless",
"AP_OLC","unclassified","AP_OLC::adjust_latitude","property non-void-command",
"AP_OLC","unclassified","AP_OLC::normalize_longitude","incidental",
"AP_OLC","unclassified","AP_OLC::encode_pairs","property collaborator",
"AP_OLC","unclassified","AP_OLC::encode_grid","property collaborator",
"AP_OLC","unclassified","AP_OLC::olc_encode","property non-void-command",
"AP_Airspeed_External","unclassified","init","incidental",
"AP_Airspeed_External","unclassified","AP_Airspeed_External::AP_Airspeed_External","constructor",
"AP_Airspeed_External","unclassified","AP_Airspeed_External::get_differential_pressure","predicate non-void-command",
"AP_Airspeed_External","unclassified","AP_Airspeed_External::get_temperature","predicate non-void-command",
"AP_Airspeed_External","unclassified","AP_Airspeed_External::handle_external","command collaborator",
"AP_ONVIF","boundary","get_pan_tilt_limit_max","get collaborator",
"AP_ONVIF","boundary","get_pan_tilt_limit_min","get collaborator",
"AP_ONVIF","boundary","AP_ONVIF::AP_ONVIF","constructor",
"AP_ONVIF","boundary","AP_ONVIF::start","predicate non-void-command",
"AP_ONVIF","boundary","AP_ONVIF::report_error","wrapper",
"AP_ONVIF","boundary","AP_ONVIF::probe_onvif_server","predicate non-void-command collaborator",
"AP_ONVIF","boundary","AP_ONVIF::rand_nonce","controller stateless",
"AP_ONVIF","boundary","AP_ONVIF::set_credentials","predicate non-void-command",
"AP_ONVIF","boundary","AP_ONVIF::set_absolutemove","predicate non-void-command collaborator",
"ModeSimple","commander","mode_number","collaborator incidental",
"ModeSimple","commander","name4","incidental",
"ModeSimple","commander","ModeSimple::init_heading","command",
"ModeSimple","commander","ModeSimple::update","set",
"AP_Mount_SoloGimbal","commander boundary","has_pan_control","incidental",
"AP_Mount_SoloGimbal","commander boundary","suppress_heartbeat","incidental",
"AP_Mount_SoloGimbal","commander boundary","AP_Mount_SoloGimbal::AP_Mount_SoloGimbal","constructor",
"AP_Mount_SoloGimbal","commander boundary","AP_Mount_SoloGimbal::init","set",
"AP_Mount_SoloGimbal","commander boundary","AP_Mount_SoloGimbal::update_fast","command",
"AP_Mount_SoloGimbal","commander boundary","AP_Mount_SoloGimbal::update","command collaborator",
"AP_Mount_SoloGimbal","commander boundary","AP_Mount_SoloGimbal::get_attitude_quaternion","predicate non-void-command collaborator",
"AP_Mount_SoloGimbal","commander boundary","AP_Mount_SoloGimbal::handle_gimbal_report","collaborator",
"AP_Mount_SoloGimbal","commander boundary","AP_Mount_SoloGimbal::handle_param_value","command collaborator",
"AP_Mount_SoloGimbal","commander boundary","AP_Mount_SoloGimbal::handle_gimbal_torque_report","command collaborator",
"AP_RangeFinder_NoopLoop","small-class","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_NoopLoop","small-class","AP_RangeFinder_NoopLoop::get_reading","predicate non-void-command",
"RTCM3_Parser","unclassified","RTCM3_Parser::reset","command",
"RTCM3_Parser","unclassified","RTCM3_Parser::clear_packet","command",
"RTCM3_Parser","unclassified","RTCM3_Parser::get_len","get",
"RTCM3_Parser","unclassified","RTCM3_Parser::get_id","get property",
"RTCM3_Parser","unclassified","RTCM3_Parser::resync","command",
"RTCM3_Parser","unclassified","RTCM3_Parser::parse","predicate set",
"RTCM3_Parser","unclassified","RTCM3_Parser::read","predicate non-void-command",
"PayloadPlace","unclassified","PayloadPlace::start_descent","set",
"PayloadPlace","unclassified","PayloadPlace::run","command",
"PayloadPlace","unclassified","PayloadPlace::verify","predicate",
"PayloadPlace","unclassified","run","wrapper stateless",
"PayloadPlace","unclassified","run","wrapper stateless",
"PayloadPlace","unclassified","run","wrapper stateless",
"Vector3","data-provider boundary","Vector3<T>","constructor",
"Vector3","data-provider boundary","Vector3<T>","constructor",
"Vector3","data-provider boundary","Vector3<T>","constructor",
"Vector3","data-provider boundary","operator*=","property non-void-command collaborator",
"Vector3","data-provider boundary","operator[]","property collaborator",
"Vector3","data-provider boundary","operator[]","property collaborator",
"Vector3","data-provider boundary","dot","collaborator incidental",
"Vector3","data-provider boundary","cross","collaborator incidental",
"Vector3","data-provider boundary","scale","collaborator incidental",
"Vector3","data-provider boundary","is_zero","predicate",
"Vector3","data-provider boundary","xy","collaborator incidental",
"Vector3","data-provider boundary","xy","collaborator incidental",
"Vector3","data-provider boundary","length_squared","collaborator incidental",
"Vector3","data-provider boundary","normalize","command",
"Vector3","data-provider boundary","zero","command",
"Vector3","data-provider boundary","normalized","property collaborator",
"Vector3","data-provider boundary","reflect","command collaborator",
"Vector3","data-provider boundary","project","collaborator incidental",
"Vector3","data-provider boundary","projected","collaborator incidental",
"Vector3","data-provider boundary","distance_squared","property collaborator",
"Vector3","data-provider boundary","tofloat","property wrapper",
"Vector3","data-provider boundary","todouble","property wrapper",
"Vector3","data-provider boundary","rfu_to_frd","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::rotate","command collaborator",
"Vector3","data-provider boundary","Vector3<T>::rotate_inverse","controller stateless",
"Vector3","data-provider boundary","Vector3<T>::rotate_xy","command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator%","property collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator*","property collaborator",
"Vector3","data-provider boundary","Vector3<T>::length","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::limit_length_xy","predicate non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator*=","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator/=","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator-=","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::is_nan","predicate wrapper",
"Vector3","data-provider boundary","Vector3<T>::is_inf","predicate wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator+=","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator/","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator*","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator-","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator+","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator-","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator==","predicate wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator!=","predicate wrapper",
"Vector3","data-provider boundary","Vector3<T>::angle","controller stateless",
"Vector3","data-provider boundary","Vector3<T>::row_times_mat","controller stateless",
"Vector3","data-provider boundary","Vector3<T>::mul_rowcol","wrapper stateless",
"Vector3","data-provider boundary","Vector3<T>::offset_bearing","command collaborator",
"Vector3","data-provider boundary","Vector3<T>::distance_to_segment","property collaborator",
"Vector3","data-provider boundary","Vector3<T>::closest_distance_between_line_and_point","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::point_on_line_closest_to_other_point","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::segment_to_segment_closest_point","void-accessor command collaborator",
"Vector3","data-provider boundary","Vector3<T>::segment_plane_intersect","predicate non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<float>::is_zero","predicate",
"Vector3","data-provider boundary","Vector3<double>::is_zero","predicate",
"Vector3","data-provider boundary","Vector3<T>::operator%","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator*","property collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator*=","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator/=","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator-=","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator+=","property non-void-command collaborator",
"Vector3","data-provider boundary","Vector3<T>::operator/","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator*","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator-","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator+","property wrapper",
"Vector3","data-provider boundary","Vector3<T>::operator-","property wrapper",
"ExpectDelay","empty","ExpectDelay::ExpectDelay","constructor",
"ExpectDelay","empty","ExpectDelay::~ExpectDelay","destructor",
"AP_Terrain","boundary","enabled","get",
"AP_Terrain","boundary","set_enabled","command",
"AP_Terrain","boundary","status","get collaborator",
"AP_Terrain","boundary","get_grid_spacing","property wrapper",
"AP_Terrain","boundary","init_failed","get",
"AP_Terrain","boundary","AP_Terrain::AP_Terrain","constructor",
"AP_Terrain","boundary","AP_Terrain::height_amsl","predicate non-void-command",
"AP_Terrain","boundary","AP_Terrain::height_terrain_difference_home","predicate controller",
"AP_Terrain","boundary","AP_Terrain::height_above_terrain","predicate controller",
"AP_Terrain","boundary","AP_Terrain::height_relative_home_equivalent","predicate non-void-command",
"AP_Terrain","boundary","AP_Terrain::lookahead","property non-void-command",
"AP_Terrain","boundary","AP_Terrain::update","command",
"AP_Terrain","boundary","AP_Terrain::update_surrounding_tiles","predicate controller",
"AP_Terrain","boundary","AP_Terrain::pre_arm_checks","predicate",
"AP_Terrain","boundary","AP_Terrain::log_terrain_data","command collaborator",
"AP_Terrain","boundary","AP_Terrain::allocate","predicate non-void-command",
"AP_Terrain","boundary","AP_Terrain::set_reference_location","command collaborator",
"AP_Terrain","boundary","AP_Terrain::update_reference_offset","command",
"AP_Terrain","boundary","AP_Terrain::request_missing","predicate set collaborator",
"AP_Terrain","boundary","AP_Terrain::request_missing","predicate non-void-command collaborator",
"AP_Terrain","boundary","AP_Terrain::send_cache_request","predicate non-void-command collaborator",
"AP_Terrain","boundary","AP_Terrain::send_request","command collaborator",
"AP_Terrain","boundary","AP_Terrain::bitcount64","wrapper stateless",
"AP_Terrain","boundary","AP_Terrain::get_statistics","void-accessor",
"AP_Terrain","boundary","AP_Terrain::handle_data","command collaborator",
"AP_Terrain","boundary","AP_Terrain::send_terrain_report","command",
"AP_Terrain","boundary","AP_Terrain::handle_terrain_check","command collaborator",
"AP_Terrain","boundary","AP_Terrain::handle_terrain_data","command collaborator",
"AP_Terrain","boundary","AP_Terrain::check_disk_read","command",
"AP_Terrain","boundary","AP_Terrain::check_disk_write","command",
"AP_Terrain","boundary","AP_Terrain::schedule_disk_io","command",
"AP_Terrain","boundary","AP_Terrain::open_file","command",
"AP_Terrain","boundary","AP_Terrain::east_blocks","property controller",
"AP_Terrain","boundary","AP_Terrain::seek_offset","command",
"AP_Terrain","boundary","AP_Terrain::write_block","command collaborator",
"AP_Terrain","boundary","AP_Terrain::read_block","command collaborator",
"AP_Terrain","boundary","AP_Terrain::io_timer","command",
"AP_Terrain","boundary","AP_Terrain::update_mission_data","command",
"AP_Terrain","boundary","AP_Terrain::update_rally_data","command",
"AP_Terrain","boundary","AP_Terrain::grid_bitnum","wrapper stateless",
"AP_Terrain","boundary","AP_Terrain::check_bitmap","predicate non-void-command",
"AP_Terrain","boundary","AP_Terrain::calculate_grid_info","void-accessor controller",
"AP_Terrain","boundary","AP_Terrain::find_grid_cache","get property wrapper",
"AP_Terrain","boundary","AP_Terrain::find_io_idx","property wrapper",
"AP_Terrain","boundary","AP_Terrain::get_block_crc","wrapper stateless",
"PrescalerParameterizedTestFixture","commander data-class small-class","test_prescaler","set",
"PrescalerParameterizedTestFixture","commander data-class small-class","test_prescaler_neopixel","set",
"GCS_MAVLINK_Dummy","degenerate","telem_delay","incidental",
"GCS_MAVLINK_Dummy","degenerate","try_send_message","collaborator incidental",
"GCS_MAVLINK_Dummy","degenerate","sysid_my_gcs","incidental",
"GCS_MAVLINK_Dummy","degenerate","base_mode","collaborator incidental",
"GCS_MAVLINK_Dummy","degenerate","vehicle_system_status","collaborator incidental",
"GCS_MAVLINK_Dummy","degenerate","send_nav_controller_output","empty",
"GCS_MAVLINK_Dummy","degenerate","send_pid_tuning","empty",
"HALSITL::SITL_State","data-provider data-class","use_rtscts","get",
"HALSITL::SITL_State","data-provider data-class","base_port","get",
"HALSITL::SITL_State","data-provider data-class","get_instance","get",
"HALSITL::SITL_State","data-provider data-class","run_in_maintenance_mode","get",
"AP_WindVane","unclassified","get_apparent_wind_direction_rad","get",
"AP_WindVane","unclassified","get_true_wind_direction_rad","get",
"AP_WindVane","unclassified","get_apparent_wind_speed","get",
"AP_WindVane","unclassified","get_true_wind_speed","get",
"AP_WindVane","unclassified","get_tack_threshold_wind_dir_rad","get",
"AP_WindVane","unclassified","get_current_tack","get collaborator",
"AP_WindVane","unclassified","update","wrapper stateless",
"AP_WindVane","unclassified","AP_WindVane::AP_WindVane","constructor",
"AP_WindVane","unclassified","AP_WindVane::get_singleton","get",
"AP_WindVane","unclassified","AP_WindVane::enabled","predicate",
"AP_WindVane","unclassified","AP_WindVane::wind_speed_enabled","predicate",
"AP_WindVane","unclassified","AP_WindVane::init","command collaborator",
"AP_WindVane","unclassified","AP_WindVane::update","command",
"AP_WindVane","unclassified","AP_WindVane::record_home_heading","set",
"AP_WindVane","unclassified","AP_WindVane::start_direction_calibration","predicate non-void-command",
"AP_WindVane","unclassified","AP_WindVane::start_speed_calibration","predicate non-void-command",
"AP_WindVane","unclassified","AP_WindVane::send_wind","collaborator",
"AP_WindVane","unclassified","AP_WindVane::update_true_wind_speed_and_direction","command collaborator",
"AP_WindVane","unclassified","AP_WindVane::update_apparent_wind_dir_from_true","command collaborator",
"AP_SerialManager","boundary","init","empty",
"AP_SerialManager","boundary","init","set",
"AP_SerialManager","boundary","init","set",
"AP_SerialManager","boundary","AP_SerialManager::AP_SerialManager","constructor",
"AP_SerialManager","boundary","AP_SerialManager::init_console","set",
"AP_SerialManager","boundary","AP_SerialManager::init","command",
"AP_SerialManager","boundary","AP_SerialManager::find_protocol_instance","get property collaborator",
"AP_SerialManager","boundary","AP_SerialManager::find_serial","property collaborator",
"AP_SerialManager","boundary","AP_SerialManager::have_serial","predicate",
"AP_SerialManager","boundary","AP_SerialManager::find_baudrate","property collaborator",
"AP_SerialManager","boundary","AP_SerialManager::find_portnum","property collaborator",
"AP_SerialManager","boundary","AP_SerialManager::get_serial_by_id","property controller",
"AP_SerialManager","boundary","AP_SerialManager::get_state_by_id","get property collaborator",
"AP_SerialManager","boundary","AP_SerialManager::map_baudrate","incidental",
"AP_SerialManager","boundary","AP_SerialManager::protocol_match","collaborator incidental",
"AP_SerialManager","boundary","AP_SerialManager::set_options","command collaborator",
"AP_SerialManager","boundary","AP_SerialManager::get_passthru","predicate non-void-command collaborator",
"AP_SerialManager","boundary","AP_SerialManager::disable_passthru","controller stateless",
"AP_SerialManager","boundary","AP_SerialManager::set_protocol_and_baud","controller",
"AP_SerialManager","boundary","AP_SerialManager::register_port","void-accessor set collaborator",
"AC_CustomControl_PID","commander","AC_CustomControl_PID::AC_CustomControl_PID","constructor",
"AC_CustomControl_PID","commander","AC_CustomControl_PID::update","property non-void-command collaborator",
"AC_CustomControl_PID","commander","AC_CustomControl_PID::reset","command",
"AC_CustomControl_PID","commander","AC_CustomControl_PID::set_notch_sample_rate","command",
"LR_MsgHandler_RVOH","boundary degenerate small-class","LR_MsgHandler_RVOH::process_message","wrapper stateless",
"AP_LeakDetector_Backend","empty","AP_LeakDetector_Backend::AP_LeakDetector_Backend","constructor",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::Display_SSD1306_I2C","constructor",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::~Display_SSD1306_I2C","destructor",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::probe","controller stateless",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::hw_init","predicate",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::hw_update","set",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::_timer","unclassified",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::set_pixel","set",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::clear_pixel","set",
"Display_SSD1306_I2C","commander","Display_SSD1306_I2C::clear_screen","wrapper",
"RC_Channels_RC","data-provider small-class","channel","property collaborator",
"RC_Channels_RC","data-provider small-class","flight_mode_channel_number","incidental",
"HWESC_Telem","boundary","get_telem","get collaborator",
"HWESC_Telem","boundary","HWESC_Telem::HWESC_Telem","constructor",
"HWESC_Telem","boundary","HWESC_Telem::init","collaborator",
"HWESC_Telem","boundary","HWESC_Telem::update","predicate non-void-command",
"HWESC_Telem","boundary","HWESC_Telem::temperature_decode","wrapper stateless",
"HWESC_Telem","boundary","HWESC_Telem::parse_packet","predicate non-void-command",
"AP_IRLock_I2C","unclassified","AP_IRLock_I2C::init","set",
"AP_IRLock_I2C","unclassified","AP_IRLock_I2C::sync_frame_start","predicate",
"AP_IRLock_I2C","unclassified","AP_IRLock_I2C::pixel_to_1M_plane","incidental",
"AP_IRLock_I2C","unclassified","AP_IRLock_I2C::read_block","predicate set collaborator",
"AP_IRLock_I2C","unclassified","AP_IRLock_I2C::read_frames","command",
"AP_IRLock_I2C","unclassified","AP_IRLock_I2C::update","predicate non-void-command",
"AP_WheelEncoder_Quadrature","commander","AP_WheelEncoder_Quadrature::update_pin","controller stateless",
"AP_WheelEncoder_Quadrature","commander","AP_WheelEncoder_Quadrature::update","command",
"AP_WheelEncoder_Quadrature","commander","AP_WheelEncoder_Quadrature::pin_ab_to_phase","incidental",
"AP_WheelEncoder_Quadrature","commander","AP_WheelEncoder_Quadrature::update_phase_and_error_count","command",
"AP_WheelEncoder_Quadrature","commander","AP_WheelEncoder_Quadrature::irq_handler","command",
"AP_TempCalibration","commander","AP_TempCalibration","constructor",
"AP_TempCalibration","commander","AP_TempCalibration::calculate_correction","property wrapper",
"AP_TempCalibration","commander","AP_TempCalibration::setup_learning","command",
"AP_TempCalibration","commander","AP_TempCalibration::calculate_p_range","property",
"AP_TempCalibration","commander","AP_TempCalibration::calculate_calibration","command",
"AP_TempCalibration","commander","AP_TempCalibration::learn_calibration","command",
"AP_TempCalibration","commander","AP_TempCalibration::apply_calibration","command",
"AP_TempCalibration","commander","AP_TempCalibration::update","command",
"AP_OpticalFlow_UPFLOW","unclassified","AP_OpticalFlow_UPFLOW::AP_OpticalFlow_UPFLOW","constructor",
"AP_OpticalFlow_UPFLOW","unclassified","AP_OpticalFlow_UPFLOW::detect","controller stateless",
"AP_OpticalFlow_UPFLOW","unclassified","AP_OpticalFlow_UPFLOW::init","command",
"AP_OpticalFlow_UPFLOW","unclassified","AP_OpticalFlow_UPFLOW::update","command collaborator",
"AP_RCProtocol_FDM","small-class","active","predicate",
"AP_RCProtocol_FDM","small-class","AP_RCProtocol_FDM::update","set",
"AP_RCProtocol_SRXL","commander","AP_RCProtocol_SRXL","constructor",
"AP_RCProtocol_SRXL","commander","AP_RCProtocol_SRXL::process_pulse","command",
"AP_RCProtocol_SRXL","commander","AP_RCProtocol_SRXL::srxl_channels_get_v1v2","property set",
"AP_RCProtocol_SRXL","commander","AP_RCProtocol_SRXL::srxl_channels_get_v5","property non-void-command",
"AP_RCProtocol_SRXL","commander","AP_RCProtocol_SRXL::_process_byte","command",
"AP_RCProtocol_SRXL","commander","AP_RCProtocol_SRXL::process_byte","command",
"AP_Torqeedo","data-provider","init","empty",
"AP_Torqeedo","data-provider","init","wrapper stateless",
"AP_Torqeedo","data-provider","init","wrapper stateless",
"AP_Torqeedo","data-provider","AP_Torqeedo::AP_Torqeedo","constructor",
"AP_Torqeedo","data-provider","AP_Torqeedo::init","unclassified",
"AP_Torqeedo","data-provider","AP_Torqeedo::enabled","predicate",
"AP_Torqeedo","data-provider","AP_Torqeedo::enabled","predicate controller",
"AP_Torqeedo","data-provider","AP_Torqeedo::healthy","predicate non-void-command",
"AP_Torqeedo","data-provider","AP_Torqeedo::healthy","predicate non-void-command",
"AP_Torqeedo","data-provider","AP_Torqeedo::pre_arm_checks","predicate non-void-command",
"AP_Torqeedo","data-provider","AP_Torqeedo::clear_motor_error","command",
"AP_Torqeedo","data-provider","AP_Torqeedo::get_batt_info","predicate",
"AP_Torqeedo","data-provider","AP_Torqeedo::get_batt_capacity_Ah","predicate",
"AP_Torqeedo","data-provider","AP_Torqeedo::get_instance","get property collaborator",
"AP_Torqeedo","data-provider","AP_Torqeedo::get_singleton","get",
"AP_RangeFinder_Benewake_TFMiniPlus","commander degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_Benewake_TFMiniPlus","commander degenerate","AP_RangeFinder_Benewake_TFMiniPlus::AP_RangeFinder_Benewake_TFMiniPlus","constructor",
"AP_RangeFinder_Benewake_TFMiniPlus","commander degenerate","AP_RangeFinder_Benewake_TFMiniPlus::detect","controller stateless",
"AP_RangeFinder_Benewake_TFMiniPlus","commander degenerate","AP_RangeFinder_Benewake_TFMiniPlus::init","predicate non-void-command",
"AP_RangeFinder_Benewake_TFMiniPlus","commander degenerate","AP_RangeFinder_Benewake_TFMiniPlus::update","command",
"AP_RangeFinder_Benewake_TFMiniPlus","commander degenerate","AP_RangeFinder_Benewake_TFMiniPlus::process_raw_measure","wrapper stateless",
"AP_RangeFinder_Benewake_TFMiniPlus","commander degenerate","AP_RangeFinder_Benewake_TFMiniPlus::check_checksum","incidental",
"AP_RangeFinder_Benewake_TFMiniPlus","commander degenerate","AP_RangeFinder_Benewake_TFMiniPlus::timer","command",
"AP_Airspeed_MSP","unclassified","init","incidental",
"AP_Airspeed_MSP","unclassified","AP_Airspeed_MSP::AP_Airspeed_MSP","constructor",
"AP_Airspeed_MSP","unclassified","AP_Airspeed_MSP::get_differential_pressure","predicate non-void-command",
"AP_Airspeed_MSP","unclassified","AP_Airspeed_MSP::get_temperature","predicate non-void-command",
"AP_Airspeed_MSP","unclassified","AP_Airspeed_MSP::handle_msp","command collaborator",
"AP_DAL_Baro","unclassified","get_primary","get",
"AP_DAL_Baro","unclassified","num_instances","get",
"AP_DAL_Baro","unclassified","healthy","get",
"AP_DAL_Baro","unclassified","get_last_update","get",
"AP_DAL_Baro","unclassified","get_last_update","property",
"AP_DAL_Baro","unclassified","get_altitude","get",
"AP_DAL_Baro","unclassified","get_altitude","property",
"AP_DAL_Baro","unclassified","handle_message","set collaborator",
"AP_DAL_Baro","unclassified","handle_message","set collaborator",
"AP_DAL_Baro","unclassified","AP_DAL_Baro::AP_DAL_Baro","constructor",
"AP_DAL_Baro","unclassified","AP_DAL_Baro::start_frame","command collaborator",
"AP_DAL_Baro","unclassified","AP_DAL_Baro::update_calibration","command",
"AP_OSD_AbstractScreen","data-provider","draw","empty",
"AP_OSD_AbstractScreen","data-provider","get_txt_resolution","incidental",
"AP_OSD_AbstractScreen","data-provider","get_font_index","incidental",
"AP_OSD_AbstractScreen","data-provider","AP_OSD_AbstractScreen::set_backend","command collaborator",
"AP_OSD_AbstractScreen","data-provider","AP_OSD_AbstractScreen::check_option","predicate",
"AP_OSD_AbstractScreen","data-provider","AP_OSD_AbstractScreen::u_icon","property wrapper",
"AP_OSD_AbstractScreen","data-provider","AP_OSD_AbstractScreen::u_scale","property wrapper",
"AP_RCProtocol_UDP","commander boundary","set_fdm_backend","set collaborator",
"AP_RCProtocol_UDP","commander boundary","AP_RCProtocol_UDP::set_default_pwm_input_values","command",
"AP_RCProtocol_UDP","commander boundary","AP_RCProtocol_UDP::init","predicate non-void-command collaborator",
"AP_RCProtocol_UDP","commander boundary","AP_RCProtocol_UDP::update","command collaborator",
"AP_RCProtocol_UDP","commander boundary","AP_RCProtocol_UDP::read_all_socket_input","command",
"AP_PiccoloCAN_Device","unclassified","is_enabled","incidental",
"AP_PiccoloCAN_Device","unclassified","is_connected","predicate wrapper",
"AP_PiccoloCAN_Device","unclassified","reset_rx_timestamp","set",
"AP_EFI_MAV","commander small-class","AP_EFI_MAV::update","set",
"AP_EFI_MAV","commander small-class","AP_EFI_MAV::handle_EFI_message","command collaborator",
"AP_TemperatureSensor_Params","empty","AP_TemperatureSensor_Params::AP_TemperatureSensor_Params","constructor",
"ModeAcro_Heli","degenerate","ModeAcro_Heli::init","controller stateless",
"ModeAcro_Heli","degenerate","ModeAcro_Heli::run","command",
"ModeAcro_Heli","degenerate","ModeAcro_Heli::virtual_flybar","controller stateless",
"ESP32::Storage","degenerate small-class","init","empty",
"AP_Mount_Backend","unclassified","AP_Mount_Backend","constructor",
"AP_Mount_Backend","unclassified","update_fast","empty",
"AP_Mount_Backend","unclassified","healthy","incidental",
"AP_Mount_Backend","unclassified","get_angular_velocity","collaborator incidental",
"AP_Mount_Backend","unclassified","get_mode","get collaborator",
"AP_Mount_Backend","unclassified","set_yaw_lock","set",
"AP_Mount_Backend","unclassified","handle_gimbal_report","empty",
"AP_Mount_Backend","unclassified","handle_param_value","empty",
"AP_Mount_Backend","unclassified","handle_gimbal_device_information","empty",
"AP_Mount_Backend","unclassified","handle_gimbal_device_attitude_status","empty",
"AP_Mount_Backend","unclassified","get_location_target","collaborator incidental",
"AP_Mount_Backend","unclassified","set_attitude_euler","empty",
"AP_Mount_Backend","unclassified","take_picture","incidental",
"AP_Mount_Backend","unclassified","record_video","incidental",
"AP_Mount_Backend","unclassified","set_zoom","incidental",
"AP_Mount_Backend","unclassified","set_focus","collaborator incidental",
"AP_Mount_Backend","unclassified","set_tracking","collaborator incidental",
"AP_Mount_Backend","unclassified","set_lens","incidental",
"AP_Mount_Backend","unclassified","set_camera_source","incidental",
"AP_Mount_Backend","unclassified","send_camera_information","empty",
"AP_Mount_Backend","unclassified","send_camera_settings","empty",
"AP_Mount_Backend","unclassified","send_camera_capture_status","empty",
"AP_Mount_Backend","unclassified","get_rangefinder_distance","incidental",
"AP_Mount_Backend","unclassified","set_rangefinder_enable","incidental",
"AP_Mount_Backend","unclassified","option_set","predicate collaborator",
"AP_Mount_Backend","unclassified","roll_range_valid","predicate",
"AP_Mount_Backend","unclassified","pitch_range_valid","predicate",
"AP_Mount_Backend","unclassified","yaw_range_valid","predicate",
"AP_Mount_Backend","unclassified","suppress_heartbeat","incidental",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::init","set",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::set_dev_id","command",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::has_roll_control","predicate",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::has_pitch_control","predicate",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::valid_mode","collaborator incidental",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::set_mode","predicate set collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::set_angle_target","command",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::set_rate_target","command",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::set_roi_target","command collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::clear_roi_target","command collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::set_target_sysid","unclassified",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::handle_mount_configure","command collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::send_gimbal_device_attitude_status","command collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_gimbal_manager_capability_flags","property",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::send_gimbal_manager_information","command collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::send_gimbal_manager_status","wrapper",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::handle_mount_control","command collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::handle_command_do_mount_control","property non-void-command collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::handle_command_do_gimbal_manager_configure","wrapper stateless",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::handle_global_position_int","predicate non-void-command collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::write_log","command",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_poi","controller stateless",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::calculate_poi","controller stateless",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::set_rctargeting_on_rcinput_change","command",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_rc_input","void-accessor controller",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_rc_target","void-accessor collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_angle_target_to_location","controller stateless",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_angle_target_to_roi","predicate collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::update_angle_target_from_rate","void-accessor controller",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_gimbal_device_flags","property",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_angle_target_to_home","predicate collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_angle_target_to_sysid","predicate collaborator",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_rate_target","wrapper stateless",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::get_angle_target","wrapper stateless",
"AP_Mount_Backend","unclassified","AP_Mount_Backend::send_warning_to_GCS","set",
"AP_IOMCU_FW","commander","update","wrapper stateless",
"AP_IOMCU_FW","commander","init","empty",
"AP_IOMCU_FW","commander","init","wrapper stateless",
"AP_IOMCU_FW","commander","init","wrapper stateless",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::tx_dma_allocate","wrapper stateless",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::tx_dma_deallocate","wrapper stateless",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::init","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::update","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::pwm_out_update","controller",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::heater_update","set",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::rcin_update","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::erpm_update","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::telem_update","command collaborator",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::process_io_packet","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::page_status_update","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::handle_code_read","predicate non-void-command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::handle_code_write","predicate non-void-command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::schedule_reboot","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::calculate_fw_crc","wrapper stateless",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::safety_update","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::rcout_config_update","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::fill_failsafe_pwm","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::GPIO_write","controller",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::mix_input_angle","property",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::mix_input_range","property",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::mix_output_angle","property wrapper",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::mix_output_range","property wrapper",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::mix_elevon_vtail","property",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::run_mixer","command",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::rcin_serial_init","wrapper stateless",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::rcin_serial_update","controller stateless",
"AP_IOMCU_FW","commander","AP_IOMCU_FW::dsm_bind_step","command",
"default_parse_context","unclassified","default_parse_context","constructor",
"default_parse_context","unclassified","set_null","predicate set",
"default_parse_context","unclassified","set_bool","predicate set",
"default_parse_context","unclassified","set_number","predicate set",
"default_parse_context","unclassified","parse_string","predicate set collaborator",
"default_parse_context","unclassified","parse_array_start","predicate set",
"default_parse_context","unclassified","parse_array_item","predicate non-void-command collaborator",
"default_parse_context","unclassified","parse_array_stop","incidental",
"default_parse_context","unclassified","parse_object_start","predicate set",
"default_parse_context","unclassified","parse_object_item","predicate non-void-command",
"AP_RPM_DroneCAN","unclassified","AP_RPM_DroneCAN::AP_RPM_DroneCAN","constructor",
"AP_RPM_DroneCAN","unclassified","AP_RPM_DroneCAN::subscribe_msgs","controller stateless",
"AP_RPM_DroneCAN","unclassified","AP_RPM_DroneCAN::handle_rpm","command collaborator",
"AP_RPM_DroneCAN","unclassified","AP_RPM_DroneCAN::update","command",
"GPS_SBP_Common","boundary degenerate small-class","GPS_SBP_Common::sbp_send_message","wrapper stateless",
"CAN_SocketCAN","unclassified","get_read_fd","get",
"CAN_SocketCAN","unclassified","CAN_SocketCAN::init","predicate set",
"CAN_SocketCAN","unclassified","CAN_SocketCAN::send","predicate wrapper",
"CAN_SocketCAN","unclassified","CAN_SocketCAN::receive","predicate non-void-command collaborator",
"AP_TemperatureSensor_MCP9600","unclassified","update","empty",
"AP_TemperatureSensor_MCP9600","unclassified","AP_TemperatureSensor_MCP9600::init","command",
"AP_TemperatureSensor_MCP9600","unclassified","AP_TemperatureSensor_MCP9600::_timer","command",
"AP_TemperatureSensor_MCP9600","unclassified","AP_TemperatureSensor_MCP9600::set_config","predicate non-void-command",
"AP_TemperatureSensor_MCP9600","unclassified","AP_TemperatureSensor_MCP9600::read_temperature","predicate non-void-command",
"AP_RangeFinder_analog","commander","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_analog","commander","AP_RangeFinder_analog::AP_RangeFinder_analog","constructor",
"AP_RangeFinder_analog","commander","AP_RangeFinder_analog::detect","collaborator incidental",
"AP_RangeFinder_analog","commander","AP_RangeFinder_analog::update_voltage","unclassified",
"AP_RangeFinder_analog","commander","AP_RangeFinder_analog::update","command",
"BattBalance","empty","BattBalance::BattBalance","constructor",
"TestPeriodicThread1","degenerate small-class","TestPeriodicThread1","constructor",
"TestPeriodicThread1","degenerate small-class","_task","empty",
"SoftSerial","data-provider","get_byte_timestamp_us","get",
"SoftSerial","data-provider","baud","get",
"SoftSerial","data-provider","SoftSerial::SoftSerial","constructor",
"SoftSerial","data-provider","SoftSerial::process_pulse","predicate non-void-command",
"AP_Camera_Scripting","unclassified","AP_Camera_Scripting::trigger_pic","predicate set",
"AP_Camera_Scripting","unclassified","AP_Camera_Scripting::record_video","predicate set",
"AP_Camera_Scripting","unclassified","AP_Camera_Scripting::set_zoom","predicate non-void-command",
"AP_Camera_Scripting","unclassified","AP_Camera_Scripting::set_focus","property non-void-command collaborator",
"AP_Camera_Scripting","unclassified","AP_Camera_Scripting::set_tracking","predicate non-void-command collaborator",
"AP_Camera_Scripting","unclassified","AP_Camera_Scripting::get_state","predicate collaborator",
"AP_MSP_Telem_DisplayPort","degenerate","is_scheduler_enabled","incidental",
"AP_MSP_Telem_DisplayPort","degenerate","use_msp_thread","incidental",
"AP_MSP_Telem_DisplayPort","degenerate","get_serial_protocol","collaborator incidental",
"AP_MSP_Telem_DisplayPort","degenerate","AP_MSP_Telem_DisplayPort::msp_process_out_fc_variant","controller stateless",
"AP_MSP_Telem_DisplayPort","degenerate","AP_MSP_Telem_DisplayPort::init_uart","predicate non-void-command",
"AP_Networking_Backend","degenerate small-class","update","empty",
"SIM_BattMonitor_SMBus","commander boundary data-class small-class","SITL::SIM_BattMonitor_SMBus::SIM_BattMonitor_SMBus","constructor",
"SIM_BattMonitor_SMBus","commander boundary data-class small-class","SITL::SIM_BattMonitor_SMBus::update","set collaborator",
"WakeupPollable","boundary small-class","WakeupPollable::on_can_read","wrapper",
"AP_RangeFinder_BLPing","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_BLPing","unclassified","read_timeout_ms","incidental",
"AP_RangeFinder_BLPing","unclassified","AP_RangeFinder_BLPing::update","unclassified",
"AP_RangeFinder_BLPing","unclassified","AP_RangeFinder_BLPing::init_sensor","command",
"AP_RangeFinder_BLPing","unclassified","AP_RangeFinder_BLPing::get_reading","predicate non-void-command",
"AP_RangeFinder_BLPing","unclassified","AP_RangeFinder_BLPing::get_signal_quality_pct","property",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::process_position_datagram","command",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::process_position_highres_datagram","command",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::get_or_alloc_beacon","property set collaborator",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::process_beacons_positions_datagram","unclassified",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::process_beacons_positions_highres_datagram","unclassified",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::process_beacons_distances_datagram","set",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::find_beacon_instance","property",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::update","command",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::healthy","predicate wrapper",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::set_stationary_beacons_positions","command",
"AP_Beacon_Marvelmind","commander","AP_Beacon_Marvelmind::order_stationary_beacons","command",
"ADSB_Vehicle","entity boundary","velocity","predicate collaborator",
"ADSB_Vehicle","entity boundary","ADSB_Vehicle::update","command collaborator",
"ADSB_Vehicle","entity boundary","ADSB_Vehicle::get_location","get collaborator",
"ModeLoiter","lazy-class degenerate","mode_number","collaborator incidental",
"ModeLoiter","lazy-class degenerate","requires_GPS","incidental",
"ModeLoiter","lazy-class degenerate","has_manual_throttle","incidental",
"ModeLoiter","lazy-class degenerate","allows_arming","collaborator incidental",
"ModeLoiter","lazy-class degenerate","is_autopilot","incidental",
"ModeLoiter","lazy-class degenerate","has_user_takeoff","incidental",
"ModeLoiter","lazy-class degenerate","allows_autotune","incidental",
"ModeLoiter","lazy-class degenerate","set_precision_loiter_enabled","set",
"ModeLoiter","lazy-class degenerate","name","incidental",
"ModeLoiter","lazy-class degenerate","name4","incidental",
"ModeLoiter","lazy-class degenerate","crosstrack_error","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::init","predicate set",
"ModeLoiter","lazy-class degenerate","ModeLoiter::do_precision_loiter","predicate controller",
"ModeLoiter","lazy-class degenerate","ModeLoiter::precision_loiter_xy","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::run","unclassified",
"ModeLoiter","lazy-class degenerate","ModeLoiter::wp_distance","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::wp_bearing","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::_enter","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::update","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::isHeadingLinedUp","predicate non-void-command collaborator",
"ModeLoiter","lazy-class degenerate","ModeLoiter::isHeadingLinedUp_cd","predicate non-void-command",
"ModeLoiter","lazy-class degenerate","ModeLoiter::isHeadingLinedUp_cd","wrapper stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::navigate","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::update_target_altitude","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::init","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::run","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::_enter","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::update","controller stateless",
"ModeLoiter","lazy-class degenerate","ModeLoiter::get_desired_location","collaborator incidental",
"RCOutput_Tap","unclassified","RCOutput_Tap::_uart_close","set",
"RCOutput_Tap","unclassified","RCOutput_Tap::_uart_open","predicate collaborator",
"RCOutput_Tap","unclassified","RCOutput_Tap::init","command",
"RCOutput_Tap","unclassified","RCOutput_Tap::_send_packet","property non-void-command collaborator",
"RCOutput_Tap","unclassified","RCOutput_Tap::_crc8_esc","incidental",
"RCOutput_Tap","unclassified","RCOutput_Tap::_crc_packet","property non-void-command collaborator",
"RCOutput_Tap","unclassified","RCOutput_Tap::set_freq","empty",
"RCOutput_Tap","unclassified","RCOutput_Tap::get_freq","incidental",
"RCOutput_Tap","unclassified","RCOutput_Tap::enable_ch","set",
"RCOutput_Tap","unclassified","RCOutput_Tap::disable_ch","set",
"RCOutput_Tap","unclassified","RCOutput_Tap::write","set",
"RCOutput_Tap","unclassified","RCOutput_Tap::read","get property",
"RCOutput_Tap","unclassified","RCOutput_Tap::read","void-accessor command",
"RCOutput_Tap","unclassified","RCOutput_Tap::cork","set",
"RCOutput_Tap","unclassified","RCOutput_Tap::push","command",
"RCOutput_Tap","unclassified","RCOutput_Tap::_uart_set_speed","predicate wrapper",
"AP_Proximity_LD06","commander","distance_max","incidental",
"AP_Proximity_LD06","commander","distance_min","incidental",
"AP_Proximity_LD06","commander","AP_Proximity_LD06::update","command",
"AP_Proximity_LD06","commander","AP_Proximity_LD06::get_readings","command",
"AP_Proximity_LD06","commander","AP_Proximity_LD06::parse_response_data","command collaborator",
"AP_WheelEncoder_Backend","entity data-provider boundary","~AP_WheelEncoder_Backend","destructor",
"AP_WheelEncoder_Backend","entity data-provider boundary","AP_WheelEncoder_Backend::AP_WheelEncoder_Backend","constructor",
"AP_WheelEncoder_Backend","entity data-provider boundary","AP_WheelEncoder_Backend::get_pin_a","get property wrapper",
"AP_WheelEncoder_Backend","entity data-provider boundary","AP_WheelEncoder_Backend::get_pin_b","get property wrapper",
"AP_WheelEncoder_Backend","entity data-provider boundary","AP_WheelEncoder_Backend::copy_state_to_frontend","command",
"TestThread2","commander data-class small-class","TestThread2","constructor",
"TestThread2","commander data-class small-class","_task","set",
"AP_RangeFinder_Lua","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_Lua","unclassified","AP_RangeFinder_Lua::AP_RangeFinder_Lua","constructor",
"AP_RangeFinder_Lua","unclassified","AP_RangeFinder_Lua::handle_script_msg","predicate set collaborator",
"AP_RangeFinder_Lua","unclassified","AP_RangeFinder_Lua::handle_script_msg","predicate non-void-command",
"AP_RangeFinder_Lua","unclassified","AP_RangeFinder_Lua::update","set",
"PWM_Sysfs_Base","unclassified","init","empty",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::PWM_Sysfs_Base","constructor",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::~PWM_Sysfs_Base","destructor",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::init","set",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::enable","controller",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::is_enabled","predicate controller",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::set_period","command",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::get_period","property controller",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::set_freq","command",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::get_freq","property non-void-command",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::set_duty_cycle","predicate set",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::get_duty_cycle","get",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::set_polarity","controller",
"PWM_Sysfs_Base","unclassified","PWM_Sysfs_Base::get_polarity","property controller",
"PWM_Sysfs_Base","unclassified","init","wrapper stateless",
"PWM_Sysfs_Base","unclassified","init","wrapper stateless",
"AP_MotorsUGV","unclassified","get_steering","get",
"AP_MotorsUGV","unclassified","get_throttle","get",
"AP_MotorsUGV","unclassified","get_roll","get",
"AP_MotorsUGV","unclassified","get_pitch","get",
"AP_MotorsUGV","unclassified","get_walking_height","get",
"AP_MotorsUGV","unclassified","get_lateral","get",
"AP_MotorsUGV","unclassified","get_mainsail","get",
"AP_MotorsUGV","unclassified","get_wingsail","get",
"AP_MotorsUGV","unclassified","get_mast_rotation","get",
"AP_MotorsUGV","unclassified","have_vectored_thrust","predicate wrapper",
"AP_MotorsUGV","unclassified","get_motor_mask","get",
"AP_MotorsUGV","unclassified","is_omni","predicate",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::AP_MotorsUGV","constructor",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::init","unclassified",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::get_legacy_relay_index","predicate",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::setup_safety_output","wrapper",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::setup_servo_output","wrapper",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_steering","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_throttle","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_lateral","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_roll","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_pitch","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_walking_height","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_mainsail","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_wingsail","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_mast_rotation","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::get_slew_limited_throttle","property wrapper",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::have_skid_steering","predicate",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::has_sail","wrapper stateless",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::output","unclassified",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::output_test_pct","wrapper stateless",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::output_test_pwm","wrapper stateless",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::pre_arm_check","predicate",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::sanity_check_parameters","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::setup_pwm_type","set",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::setup_omni","unclassified",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::add_omni_motor","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::add_omni_motor_num","wrapper",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::clear_omni_motors","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::output_regular","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::output_skid_steering","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::output_omni","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::output_throttle","command collaborator",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::output_sail","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::slew_limit_throttle","command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::set_limits_from_input","unclassified",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::get_scaled_throttle","property wrapper",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::get_rate_controlled_throttle","property non-void-command",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::active","predicate",
"AP_MotorsUGV","unclassified","AP_MotorsUGV::is_digital_pwm_type","predicate",
"TSYS01","entity boundary","set_state","set collaborator",
"TSYS01","entity boundary","time_in_state_ms","property wrapper",
"TSYS01","entity boundary","SITL::TSYS01::rdwr","property non-void-command collaborator",
"TSYS01","entity boundary","SITL::TSYS01::temperature_for_adc","property wrapper",
"TSYS01","entity boundary","SITL::TSYS01::calculate_adc","property",
"TSYS01","entity boundary","SITL::TSYS01::update","command collaborator",
"TSYS01","entity boundary","SITL::TSYS01::get_sim_temperature","wrapper stateless",
"AP_ExternalAHRS","data-provider boundary","get_IMU_rate","property",
"AP_ExternalAHRS","data-provider boundary","set_gnss_disable","set",
"AP_ExternalAHRS","data-provider boundary","option_is_set","predicate collaborator",
"AP_ExternalAHRS","data-provider boundary","has_sensor","predicate collaborator",
"AP_ExternalAHRS","data-provider boundary","set_default_sensors","command",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::AP_ExternalAHRS","constructor",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::init","unclassified",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::enabled","predicate wrapper",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_port","property collaborator",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::healthy","predicate",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::initialised","predicate",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_quaternion","wrapper stateless",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_origin","wrapper stateless",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_location","controller stateless",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_groundspeed_vector","wrapper stateless",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_velocity_NED","wrapper stateless",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_speed_down","wrapper stateless",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::pre_arm_check","predicate collaborator",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_filter_status","void-accessor collaborator",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_gyro","predicate non-void-command collaborator",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_accel","predicate non-void-command collaborator",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::send_status_report","collaborator",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::update","command collaborator",
"AP_ExternalAHRS","data-provider boundary","AP_ExternalAHRS::get_name","property",
"AP_ExternalAHRS","data-provider boundary","update","wrapper stateless",
"AP_RangeFinder_GYUS42v2","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_GYUS42v2","unclassified","initial_baudrate","incidental",
"AP_RangeFinder_GYUS42v2","unclassified","AP_RangeFinder_GYUS42v2::find_signature_in_buffer","predicate set",
"AP_RangeFinder_GYUS42v2","unclassified","AP_RangeFinder_GYUS42v2::get_reading","predicate non-void-command",
"AP_RCProtocol_SRXL2","commander","is_bootstrapped","predicate",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::AP_RCProtocol_SRXL2","constructor",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::_bootstrap","set",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::~AP_RCProtocol_SRXL2","destructor",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::_process_byte","command",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::update","set",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::capture_scaled_input","command",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::start_bind","wrapper stateless",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::process_byte","command",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::process_handshake","command",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::send_on_uart","controller",
"AP_RCProtocol_SRXL2","commander","AP_RCProtocol_SRXL2::change_baud_rate","controller stateless",
"AP_RCTelemetry","degenerate","AP_RCTelemetry","constructor",
"AP_RCTelemetry","degenerate","~AP_RCTelemetry","destructor",
"AP_RCTelemetry","degenerate","enable_scheduler_entry","wrapper",
"AP_RCTelemetry","degenerate","disable_scheduler_entry","wrapper",
"AP_RCTelemetry","degenerate","set_scheduler_entry_min_period","incidental",
"AP_RCTelemetry","degenerate","is_scheduler_entry_enabled","predicate wrapper",
"AP_RCTelemetry","degenerate","reset_scheduler_entry_min_periods","empty",
"AP_RCTelemetry","degenerate","get_avg_packet_rate","incidental",
"AP_RCTelemetry","degenerate","get_max_packet_rate","incidental",
"AP_RCTelemetry","degenerate","set_scheduler_entry","incidental",
"AP_RCTelemetry","degenerate","add_scheduler_entry","set",
"AP_RCTelemetry","degenerate","get_next_msg_chunk","incidental",
"AP_RCTelemetry","degenerate","is_packet_ready","incidental",
"AP_RCTelemetry","degenerate","adjust_packet_weight","empty",
"AP_RCTelemetry","degenerate","check_scheduler_entry_time_constraints","incidental",
"AP_RCTelemetry","degenerate","update_max_packet_rate","wrapper stateless",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::init","predicate non-void-command",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::update_avg_packet_rate","wrapper stateless",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::run_wfq_scheduler","property non-void-command",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::process_scheduler_entry","predicate non-void-command",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::queue_message","controller stateless",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::check_sensor_status_flags","unclassified",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::check_ekf_status","unclassified",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::sensor_status_flags","wrapper stateless",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::get_vspeed_ms","controller stateless",
"AP_RCTelemetry","degenerate","AP_RCTelemetry::get_nav_alt_m","controller stateless",
"AP_SteerController","unclassified","AP_SteerController","constructor",
"AP_SteerController","unclassified","get_turn_radius","property",
"AP_SteerController","unclassified","get_pid_info","get collaborator",
"AP_SteerController","unclassified","set_reverse","set",
"AP_SteerController","unclassified","AP_SteerController::get_steering_out_rate","property non-void-command",
"AP_SteerController","unclassified","AP_SteerController::get_steering_out_lat_accel","property non-void-command",
"AP_SteerController","unclassified","AP_SteerController::get_steering_out_angle_error","property non-void-command",
"AP_SteerController","unclassified","AP_SteerController::reset_I","set",
"AP_SteerController","unclassified","AP_SteerController::active","predicate wrapper",
"PingProtocol","boundary degenerate","get_message_id","collaborator incidental",
"PingProtocol","boundary degenerate","PingProtocol::get_confidence","incidental",
"PingProtocol","boundary degenerate","PingProtocol::get_distance_mm","incidental",
"PingProtocol","boundary degenerate","PingProtocol::send_message","controller",
"PingProtocol","boundary degenerate","PingProtocol::parse_byte","property non-void-command collaborator",
"typesafe_index","data-provider boundary","typesafe_index","constructor",
"typesafe_index","data-provider boundary","operator=","set collaborator",
"typesafe_index","data-provider boundary","get_int","get collaborator",
"typesafe_index","data-provider boundary","operator++","property set",
"typesafe_index","data-provider boundary","operator++","property set",
"typesafe_index","data-provider boundary","operator%","property wrapper",
"typesafe_index","data-provider boundary","operator<","predicate collaborator",
"typesafe_index","data-provider boundary","operator<=","predicate collaborator",
"typesafe_index","data-provider boundary","operator>=","predicate collaborator",
"typesafe_index","data-provider boundary","operator>","predicate collaborator",
"typesafe_index","data-provider boundary","operator!=","predicate collaborator",
"typesafe_index","data-provider boundary","operator==","predicate collaborator",
"typesafe_index","data-provider boundary","operatorbase_type","get",
"typesafe_index","data-provider boundary","operator+","property wrapper",
"AP_Proximity_LightWareSerial","small-class","AP_Proximity_LightWareSerial::send_message","command",
"AP_Proximity_LightWareSerial","small-class","AP_Proximity_LightWareSerial::parse_byte","predicate non-void-command",
"DefaultIntervalsFromFiles","data-provider","num_intervals","get",
"DefaultIntervalsFromFiles","data-provider","DefaultIntervalsFromFiles::DefaultIntervalsFromFiles","constructor",
"DefaultIntervalsFromFiles","data-provider","DefaultIntervalsFromFiles::~DefaultIntervalsFromFiles","destructor",
"DefaultIntervalsFromFiles","data-provider","DefaultIntervalsFromFiles::set","set",
"DefaultIntervalsFromFiles","data-provider","DefaultIntervalsFromFiles::get_interval_for_ap_message_id","predicate",
"DefaultIntervalsFromFiles","data-provider","DefaultIntervalsFromFiles::id_at","get property collaborator",
"DefaultIntervalsFromFiles","data-provider","DefaultIntervalsFromFiles::interval_at","get property",
"AP_RCProtocol_ST24","commander","AP_RCProtocol_ST24","constructor",
"AP_RCProtocol_ST24","commander","AP_RCProtocol_ST24::st24_crc8","incidental",
"AP_RCProtocol_ST24","commander","AP_RCProtocol_ST24::process_pulse","command",
"AP_RCProtocol_ST24","commander","AP_RCProtocol_ST24::_process_byte","command",
"AP_RCProtocol_ST24","commander","AP_RCProtocol_ST24::process_byte","command",
"GCS","boundary","GCS","constructor",
"GCS","boundary","frame_string","incidental",
"GCS","boundary","statustext_queue","get collaborator",
"GCS","boundary","sysid_myggcs_last_seen_time_ms","get",
"GCS","boundary","sysid_myggcs_seen","set",
"GCS","boundary","num_gcs","get",
"GCS","boundary","min_loop_time_remaining_for_message_send_us","incidental",
"GCS","boundary","get_hud_throttle","controller stateless",
"GCS","boundary","vehicle_initialised","incidental",
"GCS","boundary","simple_input_active","incidental",
"GCS","boundary","supersimple_input_active","incidental",
"GCS","boundary","update_vehicle_sensor_status_flags","empty",
"GCS","boundary","min_status_for_gps_healthy","collaborator incidental",
"GCS","boundary","init","empty",
"GCS","boundary","init","wrapper stateless",
"GCS","boundary","init","wrapper stateless",
"GCS","boundary","GCS::get_sensor_status_flags","void-accessor command",
"GCS","boundary","GCS::init","wrapper stateless",
"GCS","boundary","GCS::statustext_send_channel_mask","wrapper stateless",
"GCS","boundary","GCS::send_textv","command collaborator",
"GCS","boundary","GCS::send_text","command collaborator",
"GCS","boundary","GCS::send_to_active_channels","command collaborator",
"GCS","boundary","GCS::send_named_float","collaborator",
"GCS","boundary","GCS::enable_high_latency_connections","set",
"GCS","boundary","GCS::get_high_latency_status","get",
"GCS","boundary","GCS::install_alternative_protocol","wrapper stateless",
"GCS","boundary","GCS::update_sensor_status_flags","command collaborator",
"GCS","boundary","GCS::out_of_time","predicate",
"GCS","boundary","GCS::get_prot_for_mission_type","get property wrapper",
"GCS","boundary","GCS::send_textv","command collaborator",
"GCS","boundary","GCS::service_statustext","command",
"GCS","boundary","GCS::send_message","command collaborator",
"GCS","boundary","GCS::update_send","command",
"GCS","boundary","GCS::update_receive","command",
"GCS","boundary","GCS::send_mission_item_reached_message","command",
"GCS","boundary","GCS::setup_console","command collaborator",
"GCS","boundary","GCS::create_gcs_mavlink_backend","command collaborator",
"GCS","boundary","GCS::setup_uarts","command collaborator",
"GCS","boundary","GCS::set_message_interval","property non-void-command collaborator",
"GCS","boundary","GCS::get_channel_from_port_number","property non-void-command",
"GCS","boundary","GCS::try_send_queued_message_for_type","collaborator",
"GCS","boundary","GCS::update_passthru","controller stateless",
"GCS","boundary","GCS::passthru_timer","controller stateless",
"GCS","boundary","GCS::send_parameter_value","command collaborator",
"FileData","empty","FileData","constructor",
"FileData","empty","FileData::~FileData","destructor",
"ObjectBuffer","unclassified","ObjectBuffer","constructor",
"ObjectBuffer","unclassified","ObjectBuffer","constructor",
"ObjectBuffer","unclassified","~ObjectBuffer","destructor",
"ObjectBuffer","unclassified","get_size","property",
"ObjectBuffer","unclassified","set_size","predicate non-void-command",
"ObjectBuffer","unclassified","peek","property non-void-command",
"ObjectBuffer","unclassified","clear","command",
"ObjectBuffer","unclassified","available","property",
"ObjectBuffer","unclassified","space","property",
"ObjectBuffer","unclassified","is_empty","predicate",
"ObjectBuffer","unclassified","push","predicate non-void-command collaborator",
"ObjectBuffer","unclassified","push","predicate non-void-command",
"ObjectBuffer","unclassified","pop","predicate non-void-command",
"ObjectBuffer","unclassified","pop","predicate non-void-command collaborator",
"ObjectBuffer","unclassified","push_force","predicate non-void-command collaborator",
"ObjectBuffer","unclassified","push_force","predicate non-void-command",
"ObjectBuffer","unclassified","peek","predicate non-void-command collaborator",
"ObjectBuffer","unclassified","readptr","property non-void-command collaborator",
"ObjectBuffer","unclassified","advance","predicate non-void-command",
"ObjectBuffer","unclassified","update","predicate non-void-command collaborator",
"AP_WheelEncoder_SITL_Quadrature","commander small-class","AP_WheelEncoder_SITL_Quadrature::update","command",
"AP_RangeFinder_JRE_Serial","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_JRE_Serial","unclassified","get_signal_quality_pct","property",
"AP_RangeFinder_JRE_Serial","unclassified","AP_RangeFinder_JRE_Serial::move_preamble_in_buffer","set",
"AP_RangeFinder_JRE_Serial","unclassified","AP_RangeFinder_JRE_Serial::get_reading","predicate non-void-command",
"ByteBuffer","unclassified","ByteBuffer","constructor",
"ByteBuffer","unclassified","get_size","get",
"ByteBuffer","unclassified","ByteBuffer::ByteBuffer","constructor",
"ByteBuffer","unclassified","ByteBuffer::~ByteBuffer","destructor",
"ByteBuffer","unclassified","ByteBuffer::set_size","predicate non-void-command",
"ByteBuffer","unclassified","ByteBuffer::set_size_best","predicate non-void-command",
"ByteBuffer","unclassified","ByteBuffer::available","property",
"ByteBuffer","unclassified","ByteBuffer::clear","command",
"ByteBuffer","unclassified","ByteBuffer::space","property",
"ByteBuffer","unclassified","ByteBuffer::is_empty","predicate",
"ByteBuffer","unclassified","ByteBuffer::write","property non-void-command",
"ByteBuffer","unclassified","ByteBuffer::update","predicate non-void-command",
"ByteBuffer","unclassified","ByteBuffer::advance","predicate set",
"ByteBuffer","unclassified","ByteBuffer::peekiovec","property non-void-command collaborator",
"ByteBuffer","unclassified","ByteBuffer::peekbytes","property non-void-command",
"ByteBuffer","unclassified","ByteBuffer::reserve","property non-void-command",
"ByteBuffer","unclassified","ByteBuffer::commit","predicate set",
"ByteBuffer","unclassified","ByteBuffer::read","property non-void-command",
"ByteBuffer","unclassified","ByteBuffer::read_byte","predicate non-void-command",
"ByteBuffer","unclassified","ByteBuffer::readptr","property",
"ByteBuffer","unclassified","ByteBuffer::peek","get property",
"AP_Proximity_Params","empty","AP_Proximity_Params::AP_Proximity_Params","constructor",
"AP_RangeFinder_NRA24_CAN","entity boundary","AP_RangeFinder_NRA24_CAN","constructor",
"AP_RangeFinder_NRA24_CAN","entity boundary","get_radar_id","incidental",
"AP_RangeFinder_NRA24_CAN","entity boundary","AP_RangeFinder_NRA24_CAN::update","wrapper",
"AP_RangeFinder_NRA24_CAN","entity boundary","AP_RangeFinder_NRA24_CAN::handle_frame","predicate non-void-command collaborator",
"AP_RPM_HarmonicNotch","commander boundary small-class","AP_RPM_HarmonicNotch::update","command collaborator",
"JSON","commander boundary","JSON::JSON","constructor",
"JSON","commander boundary","JSON::set_interface_ports","command",
"JSON","commander boundary","JSON::output_servos","command collaborator",
"JSON","commander boundary","JSON::parse_sensors","wrapper stateless",
"JSON","commander boundary","JSON::recv_fdm","command collaborator",
"JSON","commander boundary","JSON::update","command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader","constructor",
"AC_PolyFence_loader","boundary","num_stored_items","get",
"AC_PolyFence_loader","boundary","get_exclusion_polygon_count","get",
"AC_PolyFence_loader","boundary","get_exclusion_polygon_update_ms","get",
"AC_PolyFence_loader","boundary","get_inclusion_polygon_count","get",
"AC_PolyFence_loader","boundary","get_inclusion_polygon_update_ms","get",
"AC_PolyFence_loader","boundary","get_exclusion_circle_count","get",
"AC_PolyFence_loader","boundary","get_exclusion_circle_update_ms","get",
"AC_PolyFence_loader","boundary","get_inclusion_circle_count","get",
"AC_PolyFence_loader","boundary","inclusion_boundary_available","predicate",
"AC_PolyFence_loader","boundary","loaded","predicate",
"AC_PolyFence_loader","boundary","get_loaded_fence_semaphore","get collaborator",
"AC_PolyFence_loader","boundary","total_fence_count","property",
"AC_PolyFence_loader","boundary","failed_sdcard_storage","get",
"AC_PolyFence_loader","boundary","void_index","command",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::init","command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::find_index_for_seq","predicate",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::find_storage_offset_for_seq","predicate",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_item","predicate non-void-command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::write_type_to_storage","controller stateless",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::write_latlon_to_storage","controller stateless",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::read_latlon_from_storage","controller stateless",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::breached","predicate collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::breached","predicate collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::formatted","predicate controller",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::max_items","controller stateless",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::format","predicate non-void-command",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::scale_latlon_from_origin","controller stateless",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::read_polygon_from_storage","predicate non-void-command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::scan_eeprom","predicate set collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::scan_eeprom_count_fences","command",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::count_eeprom_fences","predicate non-void-command",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::scan_eeprom_index_fences","set",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::index_eeprom","predicate non-void-command",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::check_indexed","get non-void-command",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::unload","command",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::index_fence_count","property collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::sum_of_polygon_point_counts_and_returnpoint","property wrapper",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::load_from_eeprom","predicate non-void-command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_exclusion_polygon","property collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_inclusion_polygon","property collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_exclusion_circle","predicate",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_inclusion_circle","predicate",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::check_inclusion_circle_margin","predicate collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::validate_fence","wrapper stateless",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::fence_storage_space_required","wrapper stateless",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::write_fence","predicate non-void-command",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_return_point","predicate non-void-command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::find_first_fence","property collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::handle_msg_fetch_fence_point","command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_or_create_return_point","property non-void-command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_or_create_include_fence","property collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::handle_msg_fence_point","command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::contains_compatible_fence","predicate wrapper",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::write_eos_to_storage","predicate set",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::handle_msg","command collaborator",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::update","unclassified",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::init","empty",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_item","collaborator incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_exclusion_polygon","collaborator incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_inclusion_polygon","collaborator incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_exclusion_circle","incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_inclusion_circle","incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::handle_msg","empty",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::breached","incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::breached","collaborator incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::max_items","incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::write_fence","incidental",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::update","empty",
"AC_PolyFence_loader","boundary","AC_PolyFence_loader::get_return_point","collaborator incidental",
"AC_PolyFence_loader","boundary","update","wrapper stateless",
"AC_PolyFence_loader","boundary","init","empty",
"AC_PolyFence_loader","boundary","init","wrapper stateless",
"AC_PolyFence_loader","boundary","init","wrapper stateless",
"AC_AutoTune_Heli","commander","updating_rate_d_down_all","empty",
"AC_AutoTune_Heli","commander","updating_angle_p_down_all","empty",
"AC_AutoTune_Heli","commander","twitch_reverse_direction","get",
"AC_AutoTune_Heli","commander","get_axis_bitmask","get",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::AC_AutoTune_Heli","constructor",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::test_init","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::test_run","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::do_gcs_announcements","set",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::do_post_test_gcs_announcements","wrapper",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::backup_gains_and_initialise","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::load_orig_gains","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::load_tuned_gains","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::load_intra_test_gains","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::load_test_gains","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::load_gain_set","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::save_tuning_gains","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::report_final_gains","collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::report_axis_gains","wrapper stateless",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::rate_ff_test_init","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::rate_ff_test_run","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::dwell_test_init","command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::dwell_test_run","void-accessor command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_rate_p_up_all","command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_rate_d_up_all","command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_rate_ff_up_all","collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_angle_p_up_all","command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_max_gains_all","command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::set_gains_post_tune","command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_rate_ff_up","void-accessor command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_rate_p_up","void-accessor command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_rate_d_up","void-accessor command collaborator",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_angle_p_up","void-accessor command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::updating_max_gains","void-accessor command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::target_angle_max_rp_cd","incidental",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::target_angle_max_y_cd","incidental",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::target_angle_min_rp_cd","incidental",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::target_angle_min_y_cd","incidental",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::angle_lim_max_rp_cd","incidental",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::angle_lim_neg_rpy_cd","incidental",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::Log_AutoTune","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::Log_AutoTuneDetails","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::Log_AutoTuneSweep","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::Log_Write_AutoTune","wrapper",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::Log_Write_AutoTuneDetails","wrapper stateless",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::Log_Write_AutoTuneSweep","wrapper stateless",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::reset_vehicle_test_variables","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::reset_update_gain_variables","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::reset_maxgains_update_gain_variables","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::reset_sweep_variables","command",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::set_tune_sequence","set",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::get_testing_step_timeout_ms","incidental",
"AC_AutoTune_Heli","commander","AC_AutoTune_Heli::exceeded_freq_range","predicate",
"SlewCalculator2D","small-class","SlewCalculator2D::SlewCalculator2D","constructor",
"SlewCalculator2D","small-class","SlewCalculator2D::update","command",
"SlewCalculator2D","small-class","SlewCalculator2D::get_slew_rate","property",
"AP_InertialSensor_Params","empty","AP_InertialSensor_Params::AP_InertialSensor_Params","constructor",
"RF_BLping","boundary degenerate small-class","RF_BLping::packet_for_alt","wrapper stateless",
"AP_Radio","unclassified","AP_Radio::AP_Radio","constructor",
"AP_Radio","unclassified","AP_Radio::init","predicate set",
"AP_Radio","unclassified","AP_Radio::reset","predicate non-void-command",
"AP_Radio","unclassified","AP_Radio::send","predicate non-void-command",
"AP_Radio","unclassified","AP_Radio::start_recv_bind","command",
"AP_Radio","unclassified","AP_Radio::get_stats","property non-void-command collaborator",
"AP_Radio","unclassified","AP_Radio::num_channels","property non-void-command",
"AP_Radio","unclassified","AP_Radio::read","property non-void-command",
"AP_Radio","unclassified","AP_Radio::last_recv_us","property non-void-command",
"AP_Radio","unclassified","AP_Radio::handle_data_packet","command collaborator",
"AP_Radio","unclassified","AP_Radio::play_tune","command",
"AP_Radio","unclassified","AP_Radio::update","command",
"AP_Radio","unclassified","AP_Radio::get_tx_version","property non-void-command",
"AP_Radio","unclassified","AP_Radio::set_wifi_channel","command",
"AP_Radio","unclassified","AP_Radio::change_txmode","command",
"RC_Channel_Copter","degenerate","RC_Channel_Copter::mode_switch_changed","controller stateless",
"RC_Channel_Copter","degenerate","RC_Channel_Copter::init_aux_function","wrapper stateless",
"RC_Channel_Copter","degenerate","RC_Channel_Copter::do_aux_function_change_mode","controller stateless",
"RC_Channel_Copter","degenerate","RC_Channel_Copter::do_aux_function","predicate non-void-command collaborator",
"RC_Channel_Copter","degenerate","RC_Channel_Copter::do_aux_function_change_air_mode","collaborator incidental",
"RC_Channel_Copter","degenerate","RC_Channel_Copter::do_aux_function_change_force_flying","collaborator incidental",
"SyncTiming","commander small-class","SyncTiming","constructor",
"SyncTiming","commander small-class","SyncTiming::Rx","command",
"LR_MsgHandler_RBRH","boundary degenerate small-class","LR_MsgHandler_RBRH::process_message","wrapper stateless",
"SerialRangeFinder","commander degenerate","SerialRangeFinder","constructor",
"SerialRangeFinder","commander degenerate","reading_interval_ms","incidental",
"SerialRangeFinder","commander degenerate","has_temperature","incidental",
"SerialRangeFinder","commander degenerate","packet_for_temperature","incidental",
"SerialRangeFinder","commander degenerate","SerialRangeFinder::update","unclassified",
"SerialRangeFinder","commander degenerate","SerialRangeFinder::send_temperature","command",
"AirSim","commander boundary","AirSim::AirSim","constructor",
"AirSim","commander boundary","AirSim::set_interface_ports","command",
"AirSim","commander boundary","AirSim::output_copter","command collaborator",
"AirSim","commander boundary","AirSim::output_rover","command collaborator",
"AirSim","commander boundary","AirSim::output_servos","command collaborator",
"AirSim","commander boundary","AirSim::parse_sensors","wrapper stateless",
"AirSim","commander boundary","AirSim::recv_fdm","command collaborator",
"AirSim","commander boundary","AirSim::update","command collaborator",
"AirSim","commander boundary","AirSim::report_FPS","command",
"AP_Compass_QMC5883L","unclassified","AP_Compass_QMC5883L::probe","controller stateless",
"AP_Compass_QMC5883L","unclassified","AP_Compass_QMC5883L::AP_Compass_QMC5883L","constructor",
"AP_Compass_QMC5883L","unclassified","AP_Compass_QMC5883L::init","predicate non-void-command",
"AP_Compass_QMC5883L","unclassified","AP_Compass_QMC5883L::_check_whoami","predicate non-void-command",
"AP_Compass_QMC5883L","unclassified","AP_Compass_QMC5883L::timer","command collaborator",
"AP_Compass_QMC5883L","unclassified","AP_Compass_QMC5883L::read","wrapper",
"AP_Compass_QMC5883L","unclassified","AP_Compass_QMC5883L::_dump_registers","command",
"AP_BattMonitor_Bebop","commander degenerate","AP_BattMonitor_Bebop","constructor",
"AP_BattMonitor_Bebop","commander degenerate","~AP_BattMonitor_Bebop","destructor",
"AP_BattMonitor_Bebop","commander degenerate","has_current","incidental",
"AP_BattMonitor_Bebop","commander degenerate","reset_remaining","incidental",
"AP_BattMonitor_Bebop","commander degenerate","AP_BattMonitor_Bebop::init","command",
"AP_BattMonitor_Bebop","commander degenerate","AP_BattMonitor_Bebop::_filter_voltage","property non-void-command",
"AP_BattMonitor_Bebop","commander degenerate","AP_BattMonitor_Bebop::_compute_compensation","wrapper stateless",
"AP_BattMonitor_Bebop","commander degenerate","AP_BattMonitor_Bebop::_compute_battery_percentage","incidental",
"AP_BattMonitor_Bebop","commander degenerate","AP_BattMonitor_Bebop::read","command collaborator",
"AP_Proximity_Backend","degenerate","~AP_Proximity_Backend","destructor",
"AP_Proximity_Backend","degenerate","get_upward_distance","incidental",
"AP_Proximity_Backend","degenerate","handle_msg","empty",
"AP_Proximity_Backend","degenerate","set_distance_min_max","incidental",
"AP_Proximity_Backend","degenerate","handle_script_distance_msg","incidental",
"AP_Proximity_Backend","degenerate","handle_script_3d_msg","incidental",
"AP_Proximity_Backend","degenerate","update_virtual_boundary","incidental",
"AP_Proximity_Backend","degenerate","type","property collaborator",
"AP_Proximity_Backend","degenerate","ignore_reading","predicate",
"AP_Proximity_Backend","degenerate","AP_Proximity_Backend::AP_Proximity_Backend","constructor",
"AP_Proximity_Backend","degenerate","AP_Proximity_Backend::set_status","set collaborator",
"AP_Proximity_Backend","degenerate","AP_Proximity_Backend::correct_angle_for_orientation","property wrapper",
"AP_Proximity_Backend","degenerate","AP_Proximity_Backend::ignore_reading","predicate",
"AP_Proximity_Backend","degenerate","AP_Proximity_Backend::database_prepare_for_push","controller stateless",
"AP_Proximity_Backend","degenerate","AP_Proximity_Backend::database_push","command collaborator",
"AP_Proximity_Backend","degenerate","AP_Proximity_Backend::database_push","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough","constructor",
"AP_Frsky_SPort_Passthrough","unclassified","queue_text_message","wrapper stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::init","wrapper stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::init_serial_port","predicate wrapper",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::send_sport_frame","command",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::setup_wfq_scheduler","command",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::adjust_packet_weight","command",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::is_packet_ready","predicate controller",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::process_packet","command",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::send","command collaborator",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::get_next_msg_chunk","predicate set",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_param","property set",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_gps_status","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_batt","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::is_passthrough_byte","predicate",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_ap_status","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_home","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_velandyaw","property set",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_attiandrng","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_rpm","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_terrain","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_wind","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::calc_waypoint","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::get_telem_data","predicate set",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::set_telem_data","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::queue_rx_packet","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::process_rx_queue","command collaborator",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::process_tx_queue","command collaborator",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::set_sensor_id","controller stateless",
"AP_Frsky_SPort_Passthrough","unclassified","AP_Frsky_SPort_Passthrough::send_message","predicate non-void-command collaborator",
"AP_MotorsMulticopter","unclassified","set_yaw_headroom","command",
"AP_MotorsMulticopter","unclassified","get_throttle_hover","property wrapper",
"AP_MotorsMulticopter","unclassified","get_throttle_thrust_max","get",
"AP_MotorsMulticopter","unclassified","spool_up_complete","predicate",
"AP_MotorsMulticopter","unclassified","get_pwm_output_min","get",
"AP_MotorsMulticopter","unclassified","get_pwm_output_max","get",
"AP_MotorsMulticopter","unclassified","set_thrust_compensation_callback","set collaborator",
"AP_MotorsMulticopter","unclassified","disable_yaw_torque","empty",
"AP_MotorsMulticopter","unclassified","is_motor_enabled","get",
"AP_MotorsMulticopter","unclassified","thrust_compensation","empty",
"AP_MotorsMulticopter","unclassified","motor_enabled_mask","get",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::AP_MotorsMulticopter","constructor",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::output","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::update_external_limits","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::output_boost_throttle","wrapper",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::output_rpyt","wrapper",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::output_min","set",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::update_throttle_filter","unclassified",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::get_current_limit_max_throttle","property non-void-command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::Log_Write","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::output_to_pwm","property non-void-command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::set_actuator_with_slew","void-accessor wrapper",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::actuator_spin_up_to_ground_idle","property",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::check_mot_pwm_params","predicate",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::update_throttle_range","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::update_throttle_hover","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::output_logic","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::set_throttle_passthrough_for_esc_calibration","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::output_motor_mask","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::get_motor_mask","wrapper stateless",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::save_params_on_disarm","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::convert_pwm_min_max_param","command",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::arming_checks","predicate collaborator",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::get_throttle_avg_max","get",
"AP_MotorsMulticopter","unclassified","AP_MotorsMulticopter::get_yaw_headroom","get",
"AP_ExternalAHRS_MicroStrain7","unclassified","update","command",
"AP_ExternalAHRS_MicroStrain7","unclassified","num_gps_sensors","get",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::AP_ExternalAHRS_MicroStrain7","constructor",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::update_thread","command",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::check_initialise_state","collaborator",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::build_packet","command collaborator",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::post_imu","command collaborator",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::post_filter","command collaborator",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::get_port","get property",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::get_name","incidental",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::healthy","predicate",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::initialised","predicate",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::pre_arm_check","predicate",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::get_filter_status","void-accessor collaborator",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::send_status_report","collaborator",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::times_healthy","predicate wrapper",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::filter_healthy","predicate",
"AP_ExternalAHRS_MicroStrain7","unclassified","AP_ExternalAHRS_MicroStrain7::filter_state_healthy","collaborator incidental",
"ModeFilter","entity boundary","get","get collaborator",
"ModeFilter","entity boundary","ModeFilter<T,FILTER_SIZE>::ModeFilter","constructor",
"ModeFilter","entity boundary","ModeFilter<T,FILTER_SIZE>::apply","property non-void-command collaborator",
"ModeFilter","entity boundary","ModeFilter<T,FILTER_SIZE>::isort","incidental",
"AP_Proximity","data-provider","num_sensors","get",
"AP_Proximity","data-provider","get_filter_freq","get",
"AP_Proximity","data-provider","get_address","property controller",
"AP_Proximity","data-provider","update","wrapper stateless",
"AP_Proximity","data-provider","init","empty",
"AP_Proximity","data-provider","init","set",
"AP_Proximity","data-provider","init","set",
"AP_Proximity","data-provider","AP_Proximity::AP_Proximity","constructor",
"AP_Proximity","data-provider","AP_Proximity::init","command",
"AP_Proximity","data-provider","AP_Proximity::update","command",
"AP_Proximity","data-provider","AP_Proximity::get_type","property collaborator",
"AP_Proximity","data-provider","AP_Proximity::get_instance_status","get property collaborator",
"AP_Proximity","data-provider","AP_Proximity::get_status","property collaborator",
"AP_Proximity","data-provider","AP_Proximity::get_backend","get property collaborator",
"AP_Proximity","data-provider","AP_Proximity::prearm_healthy","predicate",
"AP_Proximity","data-provider","AP_Proximity::distance_max","property",
"AP_Proximity","data-provider","AP_Proximity::distance_min","property",
"AP_Proximity","data-provider","AP_Proximity::get_horizontal_distances","predicate collaborator",
"AP_Proximity","data-provider","AP_Proximity::get_obstacle_count","property",
"AP_Proximity","data-provider","AP_Proximity::get_obstacle","predicate collaborator",
"AP_Proximity","data-provider","AP_Proximity::closest_point_from_segment_to_obstacle","predicate collaborator",
"AP_Proximity","data-provider","AP_Proximity::get_closest_object","predicate",
"AP_Proximity","data-provider","AP_Proximity::get_object_count","property",
"AP_Proximity","data-provider","AP_Proximity::get_object_angle_and_distance","predicate",
"AP_Proximity","data-provider","AP_Proximity::get_obstacle_info","predicate",
"AP_Proximity","data-provider","AP_Proximity::handle_msg","command collaborator",
"AP_Proximity","data-provider","AP_Proximity::sensor_present","predicate",
"AP_Proximity","data-provider","AP_Proximity::sensor_enabled","predicate",
"AP_Proximity","data-provider","AP_Proximity::sensor_failed","predicate",
"AP_Proximity","data-provider","AP_Proximity::get_upward_distance","get predicate",
"AP_Proximity","data-provider","AP_Proximity::get_upward_distance","predicate",
"AP_Proximity","data-provider","AP_Proximity::log","command",
"AP_Proximity","data-provider","AP_Proximity::valid_instance","predicate controller",
"AP_Proximity","data-provider","AP_Proximity::set_rangefinder_alt","wrapper stateless",
"AP_Proximity","data-provider","AP_Proximity::get_rangefinder_alt","wrapper stateless",
"AP_Proximity","data-provider","AP_Proximity::check_obstacle_near_ground","predicate",
"ModeQRTL","degenerate","mode_number","collaborator incidental",
"ModeQRTL","degenerate","name","incidental",
"ModeQRTL","degenerate","name4","incidental",
"ModeQRTL","degenerate","is_vtol_mode","incidental",
"ModeQRTL","degenerate","does_auto_throttle","incidental",
"ModeQRTL","degenerate","_pre_arm_checks","incidental",
"ModeQRTL","degenerate","ModeQRTL::_enter","predicate non-void-command",
"ModeQRTL","degenerate","ModeQRTL::update","controller stateless",
"ModeQRTL","degenerate","ModeQRTL::run","command",
"ModeQRTL","degenerate","ModeQRTL::update_target_altitude","controller stateless",
"ModeQRTL","degenerate","ModeQRTL::allows_throttle_nudging","controller stateless",
"ModeQRTL","degenerate","ModeQRTL::get_VTOL_return_radius","wrapper stateless",
"Butter2","small-class","filter","property non-void-command",
"I2CDeviceManager","boundary degenerate","get_device","collaborator incidental",
"I2CDeviceManager","boundary degenerate","get_bus_mask","incidental",
"I2CDeviceManager","boundary degenerate","get_bus_mask_external","incidental",
"I2CDeviceManager","boundary degenerate","get_bus_mask_internal","incidental",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::I2CDeviceManager","constructor",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_device","wrapper stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask","wrapper stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask_internal","property",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask_external","property",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::I2CDeviceManager","constructor",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_device","wrapper stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask","wrapper stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask_internal","wrapper stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask_external","property",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::I2CDeviceManager","constructor",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_device","property non-void-command collaborator",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_device","property non-void-command collaborator",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::_create_device","wrapper stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::_unregister","controller stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::teardown","controller stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask","incidental",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask_internal","incidental",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_bus_mask_external","incidental",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::I2CDeviceManager","constructor",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::get_device","wrapper stateless",
"I2CDeviceManager","boundary degenerate","I2CDeviceManager::_timer_tick","controller stateless",
"AP_WindVane_Backend","commander degenerate","~AP_WindVane_Backend","destructor",
"AP_WindVane_Backend","commander degenerate","init","empty",
"AP_WindVane_Backend","commander degenerate","update_speed","empty",
"AP_WindVane_Backend","commander degenerate","update_direction","empty",
"AP_WindVane_Backend","commander degenerate","AP_WindVane_Backend::AP_WindVane_Backend","constructor",
"AP_WindVane_Backend","commander degenerate","AP_WindVane_Backend::calibrate","command",
"AP_RCProtocol_PPMSum","boundary degenerate small-class","AP_RCProtocol_PPMSum","constructor",
"AP_RCProtocol_PPMSum","boundary degenerate small-class","AP_RCProtocol_PPMSum::process_pulse","wrapper stateless",
"ESP32::WiFiUdpDriver","degenerate small-class","bw_in_bytes_per_second","incidental",
"ModeServoTest","degenerate","number","collaborator incidental",
"ModeServoTest","degenerate","requires_armed_servos","incidental",
"ModeServoTest","degenerate","update","empty",
"ModeServoTest","degenerate","ModeServoTest::set_servo","wrapper stateless",
"Empty::OpticalFlow","degenerate","init","empty",
"Empty::OpticalFlow","degenerate","read","collaborator incidental",
"Empty::OpticalFlow","degenerate","push_gyro","empty",
"Empty::OpticalFlow","degenerate","push_gyro_bias","empty",
"RC_UART","unclassified","RC_UART::setup","controller",
"RC_UART","unclassified","RC_UART::read_wait","controller stateless",
"RC_UART","unclassified","RC_UART::loop","command",
"ModeLoiterAltQLand","boundary degenerate","mode_number","collaborator incidental",
"ModeLoiterAltQLand","boundary degenerate","name","incidental",
"ModeLoiterAltQLand","boundary degenerate","name4","incidental",
"ModeLoiterAltQLand","boundary degenerate","ModeLoiterAltQLand::_enter","predicate non-void-command collaborator",
"ModeLoiterAltQLand","boundary degenerate","ModeLoiterAltQLand::navigate","command",
"ModeLoiterAltQLand","boundary degenerate","ModeLoiterAltQLand::switch_qland","controller stateless",
"ModeLoiterAltQLand","boundary degenerate","ModeLoiterAltQLand::handle_guided_request","controller stateless",
"AP_Proximity_MAV","entity boundary","distance_max","get",
"AP_Proximity_MAV","entity boundary","distance_min","get",
"AP_Proximity_MAV","entity boundary","AP_Proximity_MAV::update","wrapper",
"AP_Proximity_MAV","entity boundary","AP_Proximity_MAV::get_upward_distance","predicate wrapper",
"AP_Proximity_MAV","entity boundary","AP_Proximity_MAV::handle_msg","command collaborator",
"AP_Proximity_MAV","entity boundary","AP_Proximity_MAV::handle_distance_sensor_msg","command collaborator",
"AP_Proximity_MAV","entity boundary","AP_Proximity_MAV::handle_obstacle_distance_msg","command collaborator",
"AP_Proximity_MAV","entity boundary","AP_Proximity_MAV::handle_obstacle_distance_3d_msg","command collaborator",
"PerfInfo","unclassified","PerfInfo","constructor",
"PerfInfo","unclassified","has_task_info","predicate",
"PerfInfo","unclassified","get_task_info","property collaborator",
"PerfInfo","unclassified","task_slipped","unclassified",
"PerfInfo","unclassified","AP::PerfInfo::reset","command",
"PerfInfo","unclassified","AP::PerfInfo::ignore_this_loop","set",
"PerfInfo","unclassified","AP::PerfInfo::allocate_task_info","command",
"PerfInfo","unclassified","AP::PerfInfo::free_task_info","command",
"PerfInfo","unclassified","AP::PerfInfo::update_task_info","controller",
"PerfInfo","unclassified","AP::PerfInfo::check_loop_time","command",
"PerfInfo","unclassified","AP::PerfInfo::get_num_loops","get",
"PerfInfo","unclassified","AP::PerfInfo::get_max_time","get",
"PerfInfo","unclassified","AP::PerfInfo::get_min_time","get",
"PerfInfo","unclassified","AP::PerfInfo::get_num_long_running","get",
"PerfInfo","unclassified","AP::PerfInfo::get_avg_time","property",
"PerfInfo","unclassified","AP::PerfInfo::get_stddev_time","property wrapper",
"PerfInfo","unclassified","AP::PerfInfo::get_filtered_time","get",
"PerfInfo","unclassified","AP::PerfInfo::get_filtered_loop_rate_hz","get property",
"PerfInfo","unclassified","AP::PerfInfo::update_logging","unclassified",
"PerfInfo","unclassified","AP::PerfInfo::set_loop_rate","command",
"PerfInfo","unclassified","reset","controller stateless",
"LR_MsgHandler_RASI","boundary degenerate small-class","LR_MsgHandler_RASI::process_message","wrapper stateless",
"A","empty","A","constructor",
"AP_Proximity_LightWareSF45B","commander degenerate","AP_Proximity_LightWareSF45B","constructor",
"AP_Proximity_LightWareSF45B","commander degenerate","rxspace","incidental",
"AP_Proximity_LightWareSF45B","commander degenerate","distance_max","incidental",
"AP_Proximity_LightWareSF45B","commander degenerate","distance_min","incidental",
"AP_Proximity_LightWareSF45B","commander degenerate","AP_Proximity_LightWareSF45B::update","command",
"AP_Proximity_LightWareSF45B","commander degenerate","AP_Proximity_LightWareSF45B::initialise","command",
"AP_Proximity_LightWareSF45B","commander degenerate","AP_Proximity_LightWareSF45B::request_stream_start","wrapper stateless",
"AP_Proximity_LightWareSF45B","commander degenerate","AP_Proximity_LightWareSF45B::process_replies","command",
"AP_Proximity_LightWareSF45B","commander degenerate","AP_Proximity_LightWareSF45B::process_message","command",
"AP_Proximity_LightWareSF45B","commander degenerate","AP_Proximity_LightWareSF45B::convert_angle_to_minisector","wrapper stateless",
"AP_Enum","degenerate small-class","operatorconsteclass","incidental",
"AP_Enum","degenerate small-class","set","wrapper stateless",
"AP_Gripper_EPM","unclassified","should_use_uavcan","predicate",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::AP_Gripper_EPM","constructor",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::init_gripper","set",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::grab","command collaborator",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::release","command collaborator",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::neutral","command",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::update_gripper","unclassified",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::make_uavcan_command","property collaborator",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::released","predicate",
"AP_Gripper_EPM","unclassified","AP_Gripper_EPM::grabbed","predicate",
"AP_DDS_External_Control","degenerate","AP_DDS_External_Control::handle_global_position_control","predicate non-void-command collaborator",
"AP_DDS_External_Control","degenerate","AP_DDS_External_Control::handle_velocity_control","controller stateless",
"AP_DDS_External_Control","degenerate","AP_DDS_External_Control::convert_alt_frame","collaborator incidental",
"AP_Proximity_DroneCAN","unclassified","AP_Proximity_DroneCAN::subscribe_msgs","controller stateless",
"AP_Proximity_DroneCAN","unclassified","AP_Proximity_DroneCAN::get_dronecan_backend","controller stateless",
"AP_Proximity_DroneCAN","unclassified","AP_Proximity_DroneCAN::update","command collaborator",
"AP_Proximity_DroneCAN","unclassified","AP_Proximity_DroneCAN::distance_max","get property wrapper",
"AP_Proximity_DroneCAN","unclassified","AP_Proximity_DroneCAN::distance_min","get",
"AP_Proximity_DroneCAN","unclassified","AP_Proximity_DroneCAN::handle_measurement","command collaborator",
"Battery","unclassified","get_temperature","incidental",
"Battery","unclassified","Battery::get_resting_voltage","property wrapper",
"Battery","unclassified","Battery::set_initial_SoC","set",
"Battery","unclassified","Battery::setup","command",
"Battery","unclassified","Battery::init_voltage","command",
"Battery","unclassified","Battery::set_current","command",
"Battery","unclassified","Battery::get_voltage","property",
"AP_OpticalFlow_Pixart","commander","init","empty",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::AP_OpticalFlow_Pixart","constructor",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::detect","controller stateless",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::setup_sensor","predicate non-void-command",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::reg_write","command",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::reg_read","property non-void-command",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::reg_read16u","property non-void-command",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::reg_read16s","property non-void-command",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::srom_download","command",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::load_configuration","command",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::motion_burst","command",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::timer","set collaborator",
"AP_OpticalFlow_Pixart","commander","AP_OpticalFlow_Pixart::update","set",
"last_letter","commander boundary","last_letter::last_letter","constructor",
"last_letter","commander boundary","last_letter::start_last_letter","wrapper stateless",
"last_letter","commander boundary","last_letter::send_servos","command collaborator",
"last_letter","commander boundary","last_letter::recv_fdm","command collaborator",
"last_letter","commander boundary","last_letter::update","command collaborator",
"PWM_Sysfs_Bebop","boundary degenerate","set_polarity","empty",
"PWM_Sysfs_Bebop","boundary degenerate","get_polarity","collaborator incidental",
"PWM_Sysfs_Bebop","boundary degenerate","PWM_Sysfs_Bebop::_generate_export_path","wrapper stateless",
"PWM_Sysfs_Bebop","boundary degenerate","PWM_Sysfs_Bebop::_generate_enable_path","wrapper stateless",
"PWM_Sysfs_Bebop","boundary degenerate","PWM_Sysfs_Bebop::_generate_duty_path","wrapper stateless",
"PWM_Sysfs_Bebop","boundary degenerate","PWM_Sysfs_Bebop::_generate_period_path","wrapper stateless",
"PWM_Sysfs_Bebop","boundary degenerate","PWM_Sysfs_Bebop::PWM_Sysfs_Bebop","constructor",
"AP_Baro_Dummy","boundary degenerate small-class","AP_Baro_Dummy::AP_Baro_Dummy","constructor",
"AP_Baro_Dummy","boundary degenerate small-class","AP_Baro_Dummy::update","wrapper stateless",
"ChibiOS::Scheduler","lazy-class","in_main_thread","wrapper stateless",
"ChibiOS::Scheduler","lazy-class","is_system_initialized","get",
"ChibiOS::Scheduler","lazy-class","hal_initialized","set",
"AP_BattMonitor_Torqeedo","data-provider","has_current","get",
"AP_BattMonitor_Torqeedo","data-provider","has_temperature","get",
"AP_BattMonitor_Torqeedo","data-provider","AP_BattMonitor_Torqeedo::read","command",
"AP_BattMonitor_Torqeedo","data-provider","AP_BattMonitor_Torqeedo::capacity_remaining_pct","get",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM","constructor",
"AP_AHRS_SIM","data-provider boundary","~AP_AHRS_SIM","destructor",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM","constructor",
"AP_AHRS_SIM","data-provider boundary","reset_gyro_drift","empty",
"AP_AHRS_SIM","data-provider boundary","update","empty",
"AP_AHRS_SIM","data-provider boundary","reset","incidental",
"AP_AHRS_SIM","data-provider boundary","use_compass","incidental",
"AP_AHRS_SIM","data-provider boundary","pre_arm_check","incidental",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_location","predicate collaborator",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_velocity_NED","predicate wrapper",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::wind_estimate","predicate collaborator",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::airspeed_estimate","predicate",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::airspeed_estimate","predicate",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_quaternion","predicate collaborator",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::groundspeed_vector","property wrapper",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_vert_pos_rate_D","predicate",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_hagl","predicate wrapper",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_relative_position_NED_origin","predicate collaborator",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_relative_position_NE_origin","predicate collaborator",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_relative_position_D_origin","predicate collaborator",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_filter_status","wrapper stateless",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_control_limits","incidental",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_mag_offsets","controller stateless",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::send_ekf_status_report","controller stateless",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_origin","predicate collaborator",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_innovations","controller stateless",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_variances","controller stateless",
"AP_AHRS_SIM","data-provider boundary","AP_AHRS_SIM::get_results","void-accessor command collaborator",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::AP_InertialSensor_NONE","constructor",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::detect","controller stateless",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::init_sensor","incidental",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::accumulate","empty",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::generate_accel","set collaborator",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::generate_gyro","collaborator",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::timer_update","command",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::gyro_drift","wrapper stateless",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::update","predicate wrapper",
"AP_InertialSensor_NONE","boundary","AP_InertialSensor_NONE::start","unclassified",
"NotchFilterParams","data-provider","center_freq_hz","get",
"NotchFilterParams","data-provider","bandwidth_hz","get",
"NotchFilterParams","data-provider","attenuation_dB","get",
"NotchFilterParams","data-provider","enabled","get",
"NotchFilterParams","data-provider","enable","command",
"AP_FlashStorage","unclassified","erase","predicate non-void-command",
"AP_FlashStorage","unclassified","AP_FlashStorage::AP_FlashStorage","constructor",
"AP_FlashStorage","unclassified","AP_FlashStorage::init","predicate non-void-command",
"AP_FlashStorage","unclassified","AP_FlashStorage::switch_full_sector","predicate set",
"AP_FlashStorage","unclassified","AP_FlashStorage::protected_switch_full_sector","predicate non-void-command",
"AP_FlashStorage","unclassified","AP_FlashStorage::write","predicate",
"AP_FlashStorage","unclassified","AP_FlashStorage::load_sector","predicate set",
"AP_FlashStorage","unclassified","AP_FlashStorage::erase_sector","controller stateless",
"AP_FlashStorage","unclassified","AP_FlashStorage::erase_all","predicate non-void-command collaborator",
"AP_FlashStorage","unclassified","AP_FlashStorage::write_all","predicate non-void-command",
"AP_FlashStorage","unclassified","AP_FlashStorage::all_zero","predicate",
"AP_FlashStorage","unclassified","AP_FlashStorage::switch_sectors","predicate non-void-command",
"AP_FlashStorage","unclassified","AP_FlashStorage::re_initialise","predicate non-void-command",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator","constructor",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::start","set",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::stop","wrapper stateless",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::update","predicate collaborator",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::get_scalars","wrapper stateless",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::add_sample","void-accessor collaborator",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::sample_buffers_full","wrapper stateless",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::run_calibration","predicate non-void-command",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::calc_scalars","predicate non-void-command",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::calc_sample_residual","incidental",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::calc_sample_best_scalar","wrapper stateless",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::calc_mean_squared_residuals","property",
"AP_OpticalFlow_Calibrator","boundary","AP_OpticalFlow_Calibrator::log_sample","wrapper stateless",
"Flow_PX4","data-provider boundary small-class","Flow_PX4::Flow_PX4","constructor",
"Flow_PX4","data-provider boundary small-class","Flow_PX4::compute_flow","property wrapper",
"DSPTest","degenerate","fft_init","collaborator incidental",
"DSPTest","degenerate","fft_start","empty",
"DSPTest","degenerate","fft_analyse","incidental",
"DSPTest","degenerate","vector_max_float","empty",
"DSPTest","degenerate","vector_scale_float","empty",
"DSPTest","degenerate","vector_mean_float","incidental",
"DSPTest","degenerate","vector_add_float","empty",
"DSPTest","degenerate","DSPTest::run_tests","controller stateless",
"GCS_Rover","degenerate","new_gcs_mavlink_backend","wrapper stateless",
"GCS_Rover","degenerate","GCS_Rover::frame_type","controller stateless",
"GCS_Rover","degenerate","GCS_Rover::custom_mode","controller stateless",
"GCS_Rover","degenerate","GCS_Rover::vehicle_initialised","incidental",
"GCS_Rover","degenerate","GCS_Rover::sysid_this_mav","incidental",
"GCS_Rover","degenerate","GCS_Rover::simple_input_active","incidental",
"GCS_Rover","degenerate","GCS_Rover::supersimple_input_active","incidental",
"GCS_Rover","degenerate","GCS_Rover::update_vehicle_sensor_status_flags","command collaborator",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::AP_Compass_HMC5843","constructor",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::~AP_Compass_HMC5843","destructor",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::probe","controller stateless",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::probe_mpu6000","controller stateless",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::init","predicate non-void-command collaborator",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::_timer","command collaborator",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::read","wrapper",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::_setup_sampling_mode","predicate",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::_read_sample","predicate non-void-command",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::_take_sample","command",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::_check_whoami","predicate non-void-command",
"AP_Compass_HMC5843","unclassified","AP_Compass_HMC5843::_calibrate","predicate non-void-command",
"AP_ParamA","data-provider boundary data-class","operator[]","get collaborator",
"AP_ParamA","data-provider boundary data-class","operator[]","get collaborator",
"AP_ParamA","data-provider boundary data-class","get","get property collaborator",
"AP_ParamA","data-provider boundary data-class","set","set collaborator",
"ProfiLED","pure-controller degenerate small-class","ProfiLED::ProfiLED","constructor",
"ProfiLED","pure-controller degenerate small-class","ProfiLED::init_ports","controller stateless",
"AC_PrecLand","unclassified","healthy","incidental",
"AC_PrecLand","unclassified","enabled","predicate",
"AC_PrecLand","unclassified","last_update_ms","get",
"AC_PrecLand","unclassified","last_backend_los_meas_ms","get",
"AC_PrecLand","unclassified","get_max_xy_error_before_descending_cm","property",
"AC_PrecLand","unclassified","get_orient","get collaborator",
"AC_PrecLand","unclassified","ekf_outlier_count","get",
"AC_PrecLand","unclassified","get_last_valid_target_ms","get",
"AC_PrecLand","unclassified","get_target_state","get collaborator",
"AC_PrecLand","unclassified","get_last_detected_landing_pos","void-accessor collaborator",
"AC_PrecLand","unclassified","get_last_vehicle_pos_when_target_detected","void-accessor collaborator",
"AC_PrecLand","unclassified","get_retry_strictness","property collaborator",
"AC_PrecLand","unclassified","get_max_retry_allowed","get",
"AC_PrecLand","unclassified","get_min_retry_time_sec","get",
"AC_PrecLand","unclassified","get_retry_behaviour","property collaborator",
"AC_PrecLand","unclassified","allow_precland_after_reposition","predicate",
"AC_PrecLand","unclassified","do_fast_descend","predicate",
"AC_PrecLand","unclassified","AC_PrecLand::AC_PrecLand","constructor",
"AC_PrecLand","unclassified","AC_PrecLand::init","command",
"AC_PrecLand","unclassified","AC_PrecLand::update","command",
"AC_PrecLand","unclassified","AC_PrecLand::check_target_status","unclassified",
"AC_PrecLand","unclassified","AC_PrecLand::check_if_sensor_in_range","predicate wrapper",
"AC_PrecLand","unclassified","AC_PrecLand::target_acquired","get non-void-command",
"AC_PrecLand","unclassified","AC_PrecLand::get_target_position_cm","predicate non-void-command collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::get_target_position_measurement_cm","void-accessor collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::get_target_position_relative_cm","predicate non-void-command collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::get_target_velocity_relative_cms","predicate non-void-command collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::get_target_velocity_cms","void-accessor command collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::handle_msg","command",
"AC_PrecLand","unclassified","AC_PrecLand::run_estimator","command",
"AC_PrecLand","unclassified","AC_PrecLand::check_ekf_init_timeout","command",
"AC_PrecLand","unclassified","AC_PrecLand::retrieve_los_meas","predicate collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::construct_pos_meas_using_rangefinder","predicate non-void-command collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::run_output_prediction","command collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::get_target_location","predicate non-void-command collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::get_target_velocity","predicate non-void-command collaborator",
"AC_PrecLand","unclassified","AC_PrecLand::Write_Precland","command collaborator",
"AP_ParamT","entity commander boundary","get","get collaborator",
"AP_ParamT","entity commander boundary","set","set collaborator",
"AP_ParamT","entity commander boundary","operatorconstT&","get",
"AP_ParamT","entity commander boundary","AP_ParamT<T,PT>::set_and_default","empty",
"AP_ParamT","entity commander boundary","AP_ParamT<T,PT>::set_enable","set collaborator",
"AP_ParamT","entity commander boundary","AP_ParamT<T,PT>::set_default","command collaborator",
"AP_ParamT","entity commander boundary","AP_ParamT<T,PT>::set_and_default","command collaborator",
"AP_ParamT","entity commander boundary","AP_ParamT<T,PT>::set_and_notify","command collaborator",
"AP_ParamT","entity commander boundary","AP_ParamT<T,PT>::set_and_save","command collaborator",
"AP_ParamT","entity commander boundary","AP_ParamT<T,PT>::set_and_save_ifchanged","command collaborator",
"AP_ParamT","entity commander boundary","AP_ParamT<T,PT>::cast_to_float","property",
"AP_Camera_SoloGimbal","entity boundary","AP_Camera_SoloGimbal::trigger_pic","predicate wrapper",
"AP_Camera_SoloGimbal","entity boundary","AP_Camera_SoloGimbal::cam_mode_toggle","wrapper",
"AP_Camera_SoloGimbal","entity boundary","AP_Camera_SoloGimbal::handle_message","command collaborator",
"AP_OSD_MAX7456","unclassified","is_compatible_with_backend_type","collaborator incidental",
"AP_OSD_MAX7456","unclassified","get_backend_type","collaborator incidental",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::AP_OSD_MAX7456","constructor",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::init","predicate non-void-command",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::update_font","predicate",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::check_font_char","predicate non-void-command",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::update_font_char","predicate non-void-command",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::probe","controller stateless",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::buffer_add_cmd","command",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::check_reinit","command",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::reinit","command",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::flush","command",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::transfer_frame","command",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::is_dirty","get predicate",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::clear","wrapper",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::write","void-accessor set",
"AP_OSD_MAX7456","unclassified","AP_OSD_MAX7456::get_aspect_ratio_correction","incidental",
"AIS","commander lazy-class small-class","update","wrapper stateless",
"AIS","commander lazy-class small-class","AIS::AIS","constructor",
"AIS","commander lazy-class small-class","AIS::update","set",
"AP_TemperatureSensor_Analog","commander small-class","AP_TemperatureSensor_Analog::AP_TemperatureSensor_Analog","constructor",
"AP_TemperatureSensor_Analog","commander small-class","AP_TemperatureSensor_Analog::update","command",
"AP_RangeFinder_Backend_Serial","commander degenerate","rx_bufsize","incidental",
"AP_RangeFinder_Backend_Serial","commander degenerate","tx_bufsize","incidental",
"AP_RangeFinder_Backend_Serial","commander degenerate","get_signal_quality_pct","incidental",
"AP_RangeFinder_Backend_Serial","commander degenerate","read_timeout_ms","incidental",
"AP_RangeFinder_Backend_Serial","commander degenerate","AP_RangeFinder_Backend_Serial::AP_RangeFinder_Backend_Serial","constructor",
"AP_RangeFinder_Backend_Serial","commander degenerate","AP_RangeFinder_Backend_Serial::init_serial","command",
"AP_RangeFinder_Backend_Serial","commander degenerate","AP_RangeFinder_Backend_Serial::initial_baudrate","wrapper stateless",
"AP_RangeFinder_Backend_Serial","commander degenerate","AP_RangeFinder_Backend_Serial::update","command",
"BufferChunker","unclassified","BufferChunker","constructor",
"BufferChunker","unclassified","put_string","command",
"BufferChunker","unclassified","put_byte","command",
"BufferChunker","unclassified","chunks_remaining","property",
"BufferChunker","unclassified","bytes_written","get",
"BufferChunker","unclassified","remaining","property",
"BufferChunker","unclassified","skip_bytes","predicate non-void-command",
"RangeFinder","data-provider boundary","set_log_rfnd_bit","set",
"RangeFinder","data-provider boundary","num_sensors","get",
"RangeFinder","data-provider boundary","get_type","property controller",
"RangeFinder","data-provider boundary","get_address","property controller",
"RangeFinder","data-provider boundary","set_estimated_terrain_height","set",
"RangeFinder","data-provider boundary","RangeFinder::RangeFinder","constructor",
"RangeFinder","data-provider boundary","RangeFinder::init","set collaborator",
"RangeFinder","data-provider boundary","RangeFinder::update","command",
"RangeFinder","data-provider boundary","RangeFinder::_add_backend","predicate non-void-command",
"RangeFinder","data-provider boundary","RangeFinder::detect_instance","void-accessor command",
"RangeFinder","data-provider boundary","RangeFinder::get_backend","get property wrapper",
"RangeFinder","data-provider boundary","RangeFinder::status_orient","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::handle_msg","command collaborator",
"RangeFinder","data-provider boundary","RangeFinder::handle_msp","command collaborator",
"RangeFinder","data-provider boundary","RangeFinder::has_orientation","predicate collaborator",
"RangeFinder","data-provider boundary","RangeFinder::find_instance","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::distance_orient","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::distance_cm_orient","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::signal_quality_pct_orient","get property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::max_distance_cm_orient","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::min_distance_cm_orient","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::ground_clearance_cm_orient","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::has_data_orient","predicate collaborator",
"RangeFinder","data-provider boundary","RangeFinder::range_valid_count_orient","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::get_pos_offset_orient","get property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::last_reading_ms","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::get_mav_distance_sensor_type_orient","property collaborator",
"RangeFinder","data-provider boundary","RangeFinder::get_temp","predicate collaborator",
"RangeFinder","data-provider boundary","RangeFinder::Log_RFND","collaborator",
"RangeFinder","data-provider boundary","RangeFinder::prearm_healthy","predicate controller",
"AP_EFI_Serial_Lutan","commander small-class","AP_EFI_Serial_Lutan::AP_EFI_Serial_Lutan","constructor",
"AP_EFI_Serial_Lutan","commander small-class","AP_EFI_Serial_Lutan::update","command",
"AP_EFI_Serial_Lutan","commander small-class","AP_EFI_Serial_Lutan::send_request","command",
"AP_Camera_Servo","commander","AP_Camera_Servo::update","command",
"AP_Camera_Servo","commander","AP_Camera_Servo::trigger_pic","predicate set",
"AP_Camera_Servo","commander","AP_Camera_Servo::configure","set",
"AP_OSD_Setting","empty","AP_OSD_Setting::AP_OSD_Setting","constructor",
"AP_OSD_Screen","commander","get_txt_resolution","get",
"AP_OSD_Screen","commander","get_font_index","get",
"AP_OSD_Screen","commander","AP_OSD_Screen::AP_OSD_Screen","constructor",
"AP_OSD_Screen","commander","AP_OSD_Screen::get_arrow_font_index","wrapper stateless",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_altitude","command collaborator",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_bat_volt","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_bat_volt","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_avgcellvolt","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_avgcellrestvolt","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_restvolt","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_rssi","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_link_quality","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_current","unclassified",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_current","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_fltmode","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_sats","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_batused","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_batused","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_message","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_speed","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_gspeed","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_horizon","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_distance","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_home","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_heading","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_rrpm","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_throttle","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_sidebars","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_compass","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_wind","command collaborator",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_aspeed","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_vspeed","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_esc_temp","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_esc_rpm","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_esc_amps","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::is_btfl_fonts","controller stateless",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_rc_tx_power","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_rc_rssi_dbm","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_rc_snr","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_rc_active_antenna","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_rc_lq","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_gps_latitude","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_gps_longitude","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_roll_angle","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_pitch_angle","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_temp","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_hdop","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_waypoint","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_xtrack_error","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_stat","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_dist","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_flightime","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_eff","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_climbeff","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_btemp","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_atemp","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_bat2_vlt","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_bat2used","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_aspd1","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_aspd2","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_clk","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_pluscode","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_callsign","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_current2","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_vtx_power","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_hgt_abvterr","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_fence","command collaborator",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw_rngf","command",
"AP_OSD_Screen","commander","AP_OSD_Screen::draw","wrapper",
"AP_MotorsTailsitter","commander degenerate","set_frame_class_and_type","empty",
"AP_MotorsTailsitter","commander degenerate","set_min_throttle","set",
"AP_MotorsTailsitter","commander degenerate","_get_frame_string","incidental",
"AP_MotorsTailsitter","commander degenerate","AP_MotorsTailsitter::init","set collaborator",
"AP_MotorsTailsitter","commander degenerate","AP_MotorsTailsitter::AP_MotorsTailsitter","constructor",
"AP_MotorsTailsitter","commander degenerate","AP_MotorsTailsitter::set_update_rate","wrapper stateless",
"AP_MotorsTailsitter","commander degenerate","AP_MotorsTailsitter::output_to_motors","command",
"AP_MotorsTailsitter","commander degenerate","AP_MotorsTailsitter::get_motor_mask","wrapper stateless",
"AP_MotorsTailsitter","commander degenerate","AP_MotorsTailsitter::output_armed_stabilizing","command",
"AP_MotorsTailsitter","commander degenerate","AP_MotorsTailsitter::_output_test_seq","wrapper stateless",
"AP_OSD_ParamSetting","unclassified","copy_name","void-accessor",
"AP_OSD_ParamSetting","unclassified","get_custom_metadata","property collaborator",
"AP_OSD_ParamSetting","unclassified","update","wrapper stateless",
"AP_OSD_ParamSetting","unclassified","AP_OSD_ParamSetting::AP_OSD_ParamSetting","constructor",
"AP_OSD_ParamSetting","unclassified","AP_OSD_ParamSetting::AP_OSD_ParamSetting","constructor",
"AP_OSD_ParamSetting","unclassified","AP_OSD_ParamSetting::update","command",
"AP_OSD_ParamSetting","unclassified","AP_OSD_ParamSetting::set_by_name","predicate non-void-command collaborator",
"AP_OSD_ParamSetting","unclassified","AP_OSD_ParamSetting::guess_ranges","command",
"AP_OSD_ParamSetting","unclassified","AP_OSD_ParamSetting::copy_name_camel_case","void-accessor",
"AP_OSD_ParamSetting","unclassified","AP_OSD_ParamSetting::set_from_metadata","predicate non-void-command",
"AP_OSD_ParamSetting","unclassified","AP_OSD_ParamSetting::save_as_new","command",
"ELRS","commander boundary degenerate","device_baud","incidental",
"ELRS","commander boundary degenerate","update","wrapper stateless",
"ELRS","commander boundary degenerate","ELRS::ELRS","constructor",
"ELRS","commander boundary degenerate","ELRS::update","command collaborator",
"ELRS","commander boundary degenerate","ELRS::mavlink_parse_char_helper","wrapper stateless",
"ELRS","commander boundary degenerate","ELRS::sendQueuedData","command",
"RC_Channels","boundary","lua_rc_channel","wrapper stateless",
"RC_Channels","boundary","in_rc_failsafe","incidental",
"RC_Channels","boundary","has_valid_input","incidental",
"RC_Channels","boundary","get_arming_channel","collaborator incidental",
"RC_Channels","boundary","gcs_overrides_enabled","get",
"RC_Channels","boundary","set_gcs_overrides_enabled","set",
"RC_Channels","boundary","option_is_enabled","predicate wrapper",
"RC_Channels","boundary","arming_check_throttle","predicate",
"RC_Channels","boundary","get_override_timeout_ms","predicate",
"RC_Channels","boundary","has_had_rc_receiver","get",
"RC_Channels","boundary","has_had_rc_override","get",
"RC_Channels","boundary","last_input_ms","get",
"RC_Channels","boundary","run_aux_function","predicate non-void-command collaborator",
"RC_Channels","boundary","calibrating","set",
"RC_Channels","boundary","calibrating","get",
"RC_Channels","boundary","has_ever_seen_rc_input","get",
"RC_Channels","boundary","get_fs_timeout_ms","property wrapper",
"RC_Channels","boundary","new_override_received","command",
"RC_Channels","boundary","RC_Channels::get_channel_pos","controller stateless",
"RC_Channels","boundary","RC_Channels::find_channel_for_option","controller stateless",
"RC_Channels","boundary","RC_Channels::duplicate_options_exist","controller stateless",
"RC_Channels","boundary","RC_Channels::convert_options","controller stateless",
"RC_Channels","boundary","RC_Channels::RC_Channels","constructor",
"RC_Channels","boundary","RC_Channels::init","command",
"RC_Channels","boundary","RC_Channels::get_radio_in","wrapper stateless",
"RC_Channels","boundary","RC_Channels::read_input","predicate non-void-command",
"RC_Channels","boundary","RC_Channels::get_valid_channel_count","controller stateless",
"RC_Channels","boundary","RC_Channels::get_receiver_rssi","controller stateless",
"RC_Channels","boundary","RC_Channels::get_receiver_link_quality","controller stateless",
"RC_Channels","boundary","RC_Channels::clear_overrides","controller stateless",
"RC_Channels","boundary","RC_Channels::get_override_mask","controller stateless",
"RC_Channels","boundary","RC_Channels::set_override","controller stateless",
"RC_Channels","boundary","RC_Channels::has_active_overrides","controller stateless",
"RC_Channels","boundary","RC_Channels::receiver_bind","controller stateless",
"RC_Channels","boundary","RC_Channels::read_aux_all","command collaborator",
"RC_Channels","boundary","RC_Channels::init_aux_all","command collaborator",
"RC_Channels","boundary","RC_Channels::flight_mode_channel","wrapper stateless",
"RC_Channels","boundary","RC_Channels::reset_mode_switch","command collaborator",
"RC_Channels","boundary","RC_Channels::read_mode_switch","command collaborator",
"RC_Channels","boundary","RC_Channels::flight_mode_channel_conflicts_with_rc_option","predicate collaborator",
"RC_Channels","boundary","RC_Channels::get_pwm","controller stateless",
"RC_Channels","boundary","RC_Channels::enabled_protocols","property",
"RC_Channels","boundary","RC_Channels::get_aux_cached","predicate non-void-command",
"RC_Channels","boundary","RC_Channels::set_aux_cached","command collaborator",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::AP_OSD_ParamScreen","constructor",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::get_setting","property wrapper",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::draw_parameter","command",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::modify_parameter","set collaborator",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::modify_configured_parameter","set collaborator",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::get_channel_pos","controller stateless",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::map_rc_input_to_event","property collaborator",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::update_state_machine","command",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::draw","collaborator",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::save_parameters","set collaborator",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::handle_write_msg","controller",
"AP_OSD_ParamScreen","boundary","AP_OSD_ParamScreen::handle_read_msg","controller",
"AP_OSD","unclassified","get_stats_info","get collaborator",
"AP_OSD","unclassified","disable","set",
"AP_OSD","unclassified","enable","set",
"AP_OSD","unclassified","get_screen","get collaborator",
"AP_OSD","unclassified","is_readonly_screen","predicate",
"AP_OSD","unclassified","get_current_screen","get",
"AP_OSD","unclassified","get_setting","get property wrapper",
"AP_OSD","unclassified","get_semaphore","get collaborator",
"AP_OSD","unclassified","init","empty",
"AP_OSD","unclassified","init","wrapper stateless",
"AP_OSD","unclassified","init","wrapper stateless",
"AP_OSD","unclassified","AP_OSD::AP_OSD","constructor",
"AP_OSD","unclassified","AP_OSD::init","command",
"AP_OSD","unclassified","AP_OSD::init_backend","predicate set collaborator",
"AP_OSD","unclassified","AP_OSD::osd_thread","command",
"AP_OSD","unclassified","AP_OSD::update_osd","command",
"AP_OSD","unclassified","AP_OSD::update_stats","command",
"AP_OSD","unclassified","AP_OSD::update_current_screen","command",
"AP_OSD","unclassified","AP_OSD::next_screen","set",
"AP_OSD","unclassified","AP_OSD::set_nav_info","set collaborator",
"AP_OSD","unclassified","AP_OSD::pre_arm_check","predicate",
"AP_OSD","unclassified","AP_OSD::handle_msg","controller",
"AP_OSD_Backend","unclassified","AP_OSD_Backend","constructor",
"AP_OSD_Backend","unclassified","~AP_OSD_Backend","destructor",
"AP_OSD_Backend","unclassified","get_aspect_ratio_correction","incidental",
"AP_OSD_Backend","unclassified","clear","set",
"AP_OSD_Backend","unclassified","osd_thread_run_once","incidental",
"AP_OSD_Backend","unclassified","get_osd","property collaborator",
"AP_OSD_Backend","unclassified","get_font_num","property",
"AP_OSD_Backend","unclassified","check_option","predicate",
"AP_OSD_Backend","unclassified","AP_OSD_Backend::convert_to_decimal_packed_characters","wrapper stateless",
"AP_OSD_Backend","unclassified","AP_OSD_Backend::format_string_for_osd","property non-void-command collaborator",
"AP_OSD_Backend","unclassified","AP_OSD_Backend::write","command",
"AP_OSD_Backend","unclassified","AP_OSD_Backend::load_font_data","property non-void-command collaborator",
"AP_OSD_Backend","unclassified","AP_OSD_Backend::init_symbol_set","wrapper",
"AP_Proximity_Boundary_3D","unclassified","get_face","property collaborator",
"AP_Proximity_Boundary_3D","unclassified","set_face_attributes","command",
"AP_Proximity_Boundary_3D","unclassified","get_num_layers","incidental",
"AP_Proximity_Boundary_3D","unclassified","set_filter_freq","set",
"AP_Proximity_Boundary_3D","unclassified","get_next_sector","incidental",
"AP_Proximity_Boundary_3D","unclassified","get_prev_sector","incidental",
"AP_Proximity_Boundary_3D","unclassified","init","empty",
"AP_Proximity_Boundary_3D","unclassified","init","wrapper stateless",
"AP_Proximity_Boundary_3D","unclassified","init","wrapper stateless",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::AP_Proximity_Boundary_3D","constructor",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::init","set",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_face","wrapper stateless",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::set_face_attributes","command",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::apply_filter_freq","wrapper",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::set_filtered_distance","unclassified",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::update_boundary","command collaborator",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::reset","set",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::reset_face","set",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::check_face_timeout","command",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_distance","predicate controller",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_obstacle_count","incidental",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::convert_obstacle_num_to_face","predicate collaborator",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_obstacle","predicate collaborator",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::closest_point_from_segment_to_obstacle","predicate collaborator",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_closest_object","predicate",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_horizontal_object_count","incidental",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_horizontal_object_angle_and_distance","predicate wrapper",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_obstacle_info","predicate wrapper",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_filtered_distance","predicate controller",
"AP_Proximity_Boundary_3D","unclassified","AP_Proximity_Boundary_3D::get_layer_distances","predicate collaborator",
"AP_Proximity_Boundary_3D","unclassified","reset","controller stateless",
"AP_OSD_MSP","degenerate","write","empty",
"AP_OSD_MSP","degenerate","flush","empty",
"AP_OSD_MSP","degenerate","clear","empty",
"AP_OSD_MSP","degenerate","is_compatible_with_backend_type","collaborator incidental",
"AP_OSD_MSP","degenerate","get_backend_type","collaborator incidental",
"AP_OSD_MSP","degenerate","AP_OSD_MSP::init","incidental",
"AP_OSD_MSP","degenerate","AP_OSD_MSP::setup_defaults","wrapper stateless",
"AP_OSD_MSP","degenerate","AP_OSD_MSP::probe","controller stateless",
"AP_Gripper_Backend","commander degenerate","AP_Gripper_Backend","constructor",
"AP_Gripper_Backend","commander degenerate","valid","incidental",
"AP_Gripper_Backend","commander degenerate","update_gripper","empty",
"AP_Gripper_Backend","commander degenerate","AP_Gripper_Backend::init","wrapper stateless",
"AP_Gripper_Backend","commander degenerate","AP_Gripper_Backend::update","command",
"AP_Gripper_Backend","commander degenerate","update","wrapper stateless",
"AP_Gripper_Backend","commander degenerate","init","empty",
"AP_Gripper_Backend","commander degenerate","init","wrapper stateless",
"AP_Gripper_Backend","commander degenerate","init","wrapper stateless",
"AP_OSD_MSP_DisplayPort","boundary","is_compatible_with_backend_type","collaborator incidental",
"AP_OSD_MSP_DisplayPort","boundary","get_backend_type","collaborator incidental",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::init","predicate set collaborator",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::osd_thread_run_once","command",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::clear","command",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::write","command",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::format_string_for_osd","controller stateless",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::flush","command",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::init_symbol_set","controller",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::setup_defaults","wrapper stateless",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::probe","controller stateless",
"AP_OSD_MSP_DisplayPort","boundary","AP_OSD_MSP_DisplayPort::get_aspect_ratio_correction","incidental",
"AP_OpenDroneID","commander boundary","enabled","predicate",
"AP_OpenDroneID","commander boundary","option_enabled","predicate collaborator",
"AP_OpenDroneID","commander boundary","update","wrapper stateless",
"AP_OpenDroneID","commander boundary","init","empty",
"AP_OpenDroneID","commander boundary","init","wrapper stateless",
"AP_OpenDroneID","commander boundary","init","wrapper stateless",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::AP_OpenDroneID","constructor",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::init","command",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::load_UAS_ID_from_persistent_memory","unclassified",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::set_basic_id","command",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::get_persistent_params","controller",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::pre_arm_check","predicate non-void-command",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::update","command collaborator",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::send_dynamic_out","command",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::send_static_out","command",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::send_location_message","command",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::send_basic_id_message","set",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::send_system_message","set",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::send_self_id_message","set",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::send_system_update_message","set collaborator",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::send_operator_id_message","set",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::create_enum_horizontal_accuracy","collaborator incidental",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::create_enum_vertical_accuracy","collaborator incidental",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::create_enum_speed_accuracy","collaborator incidental",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::create_enum_timestamp_accuracy","collaborator incidental",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::create_speed_horizontal","incidental",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::create_speed_vertical","incidental",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::create_altitude","incidental",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::create_location_timestamp","incidental",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::handle_msg","command collaborator",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::dronecan_init","command collaborator",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::dronecan_send","command collaborator",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::dronecan_send_location","controller",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::dronecan_send_basic_id","controller",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::dronecan_send_system","controller",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::dronecan_send_self_id","controller",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::dronecan_send_operator_id","controller",
"AP_OpenDroneID","commander boundary","AP_OpenDroneID::set_arm_status","command collaborator",
"OpticalFlow_backend","unclassified","init","empty",
"OpticalFlow_backend","unclassified","handle_msg","empty",
"OpticalFlow_backend","unclassified","handle_msp","empty",
"OpticalFlow_backend","unclassified","_flowScaler","property wrapper",
"OpticalFlow_backend","unclassified","_yawAngleRad","property wrapper",
"OpticalFlow_backend","unclassified","get_address","get",
"OpticalFlow_backend","unclassified","OpticalFlow_backend::OpticalFlow_backend","constructor",
"OpticalFlow_backend","unclassified","OpticalFlow_backend::~OpticalFlow_backend","destructor",
"OpticalFlow_backend","unclassified","OpticalFlow_backend::_update_frontend","command collaborator",
"OpticalFlow_backend","unclassified","OpticalFlow_backend::_applyYaw","command collaborator",
"ADSB_Sagetech_MXS","commander boundary","u","constructor",
"ADSB_Sagetech_MXS","commander boundary","set_input_state","collaborator incidental",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::move_preamble_in_buffer","set",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::update_serial_input","unclassified",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::_handle_message","predicate non-void-command",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::handle_message","command",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::handle_message","wrapper stateless",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::assert_good_flight_id","wrapper",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::handle_message","predicate set collaborator",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::handle_message","wrapper stateless",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::lon_string_to_double","property non-void-command",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::lat_string_to_double","wrapper stateless",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::handle_message","predicate non-void-command collaborator",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::handle_message","wrapper stateless",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::handle_message","wrapper stateless",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::update_serial_output","set collaborator",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::update_serial_output_vehicles","command collaborator",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::pack_scaled_geocoord","command",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::pack_scaled_alt","command",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::pack_int32_into_uint8_ts","incidental",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::scaled_groundspeed","wrapper stateless",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::pack_scaled_groundspeed","unclassified",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::pack_scaled_airspeed","incidental",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::pack_scaled_vertical_rate","incidental",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::send_vehicle_message","command collaborator",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::send_vehicle_message_state_vector","collaborator",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::send_vehicle_message_status_report","set collaborator",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::update_rf_input","empty",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::update_rf_output","empty",
"ADSB_Sagetech_MXS","commander boundary","ADSB_Sagetech_MXS::update","command collaborator",
"AP_OpticalFlow_CXOF","unclassified","AP_OpticalFlow_CXOF::AP_OpticalFlow_CXOF","constructor",
"AP_OpticalFlow_CXOF","unclassified","AP_OpticalFlow_CXOF::detect","controller stateless",
"AP_OpticalFlow_CXOF","unclassified","AP_OpticalFlow_CXOF::init","set",
"AP_OpticalFlow_CXOF","unclassified","AP_OpticalFlow_CXOF::update","command",
"AP_OpticalFlow_HereFlow","commander","init","empty",
"AP_OpticalFlow_HereFlow","commander","AP_OpticalFlow_HereFlow::AP_OpticalFlow_HereFlow","constructor",
"AP_OpticalFlow_HereFlow","commander","AP_OpticalFlow_HereFlow::subscribe_msgs","controller stateless",
"AP_OpticalFlow_HereFlow","commander","AP_OpticalFlow_HereFlow::handle_measurement","command collaborator",
"AP_OpticalFlow_HereFlow","commander","AP_OpticalFlow_HereFlow::update","command",
"AP_OpticalFlow_HereFlow","commander","AP_OpticalFlow_HereFlow::_push_state","set",
"AP_TECS","unclassified","AP_TECS","constructor",
"AP_TECS","unclassified","get_throttle_demand","property",
"AP_TECS","unclassified","get_pitch_demand","property wrapper",
"AP_TECS","unclassified","get_VXdot","get",
"AP_TECS","unclassified","get_target_airspeed","property",
"AP_TECS","unclassified","get_max_climbrate","get",
"AP_TECS","unclassified","get_max_sinkrate","get",
"AP_TECS","unclassified","reset_pitch_I","command",
"AP_TECS","unclassified","reset_throttle_I","set",
"AP_TECS","unclassified","get_land_sinkrate","get",
"AP_TECS","unclassified","get_land_airspeed","get",
"AP_TECS","unclassified","get_height_rate_demand","get",
"AP_TECS","unclassified","set_path_proportion","set",
"AP_TECS","unclassified","set_gliding_requested_flag","set",
"AP_TECS","unclassified","set_propulsion_failed_flag","set",
"AP_TECS","unclassified","set_pitch_max_limit","set",
"AP_TECS","unclassified","use_synthetic_airspeed","set",
"AP_TECS","unclassified","reset","set",
"AP_TECS","unclassified","AP_TECS::update_50hz","command",
"AP_TECS","unclassified","AP_TECS::_update_speed","command",
"AP_TECS","unclassified","AP_TECS::_update_speed_demand","command",
"AP_TECS","unclassified","AP_TECS::_update_height_demand","command",
"AP_TECS","unclassified","AP_TECS::_detect_underspeed","command",
"AP_TECS","unclassified","AP_TECS::_update_energies","command",
"AP_TECS","unclassified","AP_TECS::timeConstant","get property",
"AP_TECS","unclassified","AP_TECS::_update_throttle_with_airspeed","command",
"AP_TECS","unclassified","AP_TECS::_get_i_gain","property wrapper",
"AP_TECS","unclassified","AP_TECS::_update_throttle_without_airspeed","command",
"AP_TECS","unclassified","AP_TECS::_detect_bad_descent","set",
"AP_TECS","unclassified","AP_TECS::_update_pitch","command",
"AP_TECS","unclassified","AP_TECS::_initialise_states","command",
"AP_TECS","unclassified","AP_TECS::_update_STE_rate_lim","command",
"AP_TECS","unclassified","AP_TECS::update_pitch_throttle","command",
"StorageManager","pure-controller degenerate small-class","StorageManager::erase","controller stateless",
"Tailsitter","controller degenerate","enabled","predicate",
"Tailsitter","controller degenerate","Tailsitter::Tailsitter","constructor",
"Tailsitter","controller degenerate","Tailsitter::setup","command",
"Tailsitter","controller degenerate","Tailsitter::is_control_surface_tailsitter","predicate wrapper",
"Tailsitter","controller degenerate","Tailsitter::active","predicate non-void-command",
"Tailsitter","controller degenerate","Tailsitter::output","command",
"Tailsitter","controller degenerate","Tailsitter::transition_fw_complete","predicate controller",
"Tailsitter","controller degenerate","Tailsitter::transition_vtol_complete","predicate",
"Tailsitter","controller degenerate","Tailsitter::check_input","command",
"Tailsitter","controller degenerate","Tailsitter::in_vtol_transition","predicate",
"Tailsitter","controller degenerate","Tailsitter::is_in_fw_flight","predicate",
"Tailsitter","controller degenerate","Tailsitter::get_transition_angle_vtol","get",
"Tailsitter","controller degenerate","Tailsitter::speed_scaling","unclassified",
"Tailsitter","controller degenerate","Tailsitter::write_log","command collaborator",
"Tailsitter","controller degenerate","Tailsitter::relax_pitch","predicate non-void-command",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","empty",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","unclassified",
"Tailsitter","controller degenerate","setup","command",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","empty",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","empty",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","empty",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"Tailsitter","controller degenerate","setup","controller stateless",
"AP_OpticalFlow_MAV","commander","init","empty",
"AP_OpticalFlow_MAV","commander","AP_OpticalFlow_MAV::detect","wrapper stateless",
"AP_OpticalFlow_MAV","commander","AP_OpticalFlow_MAV::update","command",
"AP_OpticalFlow_MAV","commander","AP_OpticalFlow_MAV::handle_msg","command collaborator",
"AP_OpticalFlow_Onboard","lazy-class small-class","AP_OpticalFlow_Onboard::init","controller stateless",
"AP_OpticalFlow_Onboard","lazy-class small-class","AP_OpticalFlow_Onboard::update","set",
"AP_OpticalFlow_PX4Flow","unclassified","init","empty",
"AP_OpticalFlow_PX4Flow","unclassified","AP_OpticalFlow_PX4Flow::detect","controller stateless",
"AP_OpticalFlow_PX4Flow","unclassified","AP_OpticalFlow_PX4Flow::scan_buses","predicate set collaborator",
"AP_OpticalFlow_PX4Flow","unclassified","AP_OpticalFlow_PX4Flow::setup_sensor","predicate non-void-command",
"AP_OpticalFlow_PX4Flow","unclassified","AP_OpticalFlow_PX4Flow::update","empty",
"AP_OpticalFlow_PX4Flow","unclassified","AP_OpticalFlow_PX4Flow::timer","command",
"AP_OpticalFlow_SITL","commander small-class","AP_OpticalFlow_SITL::update","command",
"AP_Declination","entity boundary","AP_Declination::get_mag_field_ef","predicate wrapper",
"AP_Declination","entity boundary","AP_Declination::get_declination","property non-void-command",
"AP_Declination","entity boundary","AP_Declination::get_earth_field_ga","property non-void-command collaborator",
"AP_Declination","entity boundary","get_declination","wrapper stateless",
"ModeThermal","degenerate","mode_number","collaborator incidental",
"ModeThermal","degenerate","name","incidental",
"ModeThermal","degenerate","name4","incidental",
"ModeThermal","degenerate","allows_throttle_nudging","incidental",
"ModeThermal","degenerate","does_auto_navigation","incidental",
"ModeThermal","degenerate","does_auto_throttle","incidental",
"ModeThermal","degenerate","ModeThermal::_enter","controller stateless",
"ModeThermal","degenerate","ModeThermal::update","controller stateless",
"ModeThermal","degenerate","ModeThermal::update_soaring","command",
"ModeThermal","degenerate","ModeThermal::navigate","controller stateless",
"ModeThermal","degenerate","ModeThermal::exit_heading_aligned","controller stateless",
"ModeThermal","degenerate","ModeThermal::restore_mode","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","update","wrapper stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","command",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::AP_PiccoloCAN","constructor",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::get_pcan","wrapper stateless",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::add_interface","predicate collaborator",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::init","command",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::loop","command",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::write_frame","predicate non-void-command",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::read_frame","predicate non-void-command collaborator",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::update","command",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::send_servo_messages","command",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::send_esc_messages","command",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::handle_servo_message","get predicate wrapper",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::handle_esc_message","get predicate wrapper",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::send_ecu_messages","command",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::handle_ecu_message","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::is_servo_channel_active","predicate wrapper",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::is_esc_channel_active","predicate wrapper",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::is_servo_present","get predicate wrapper",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::is_esc_present","get predicate wrapper",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::is_servo_enabled","get predicate wrapper",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::is_esc_enabled","get predicate wrapper",
"AP_PiccoloCAN","lazy-class degenerate","AP_PiccoloCAN::pre_arm_check","predicate non-void-command",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","wrapper stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","empty",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN","lazy-class degenerate","loop","incidental",
"AP_PiccoloCAN","lazy-class degenerate","loop","incidental",
"AP_PiccoloCAN","lazy-class degenerate","loop","controller stateless",
"AP_PiccoloCAN_Servo","lazy-class degenerate","is_enabled","incidental",
"AP_PiccoloCAN_Servo","lazy-class degenerate","position","incidental",
"AP_PiccoloCAN_Servo","lazy-class degenerate","commandedPosition","incidental",
"AP_PiccoloCAN_Servo","lazy-class degenerate","current","incidental",
"AP_PiccoloCAN_Servo","lazy-class degenerate","voltage","incidental",
"AP_PiccoloCAN_Servo","lazy-class degenerate","speed","incidental",
"AP_PiccoloCAN_Servo","lazy-class degenerate","dutyCycle","wrapper stateless",
"AP_PiccoloCAN_Servo","lazy-class degenerate","temperature","incidental",
"AP_PiccoloCAN_Servo","lazy-class degenerate","AP_PiccoloCAN_Servo::handle_can_frame","predicate set collaborator",
"GPIO_RPI_HAL","degenerate small-class","GPIO_RPI_HAL","constructor",
"GPIO_RPI_HAL","degenerate small-class","pinMode","empty",
"AP_Proximity_Backend_Serial","degenerate small-class","rxspace","incidental",
"AP_Proximity_Backend_Serial","degenerate small-class","AP_Proximity_Backend_Serial::AP_Proximity_Backend_Serial","constructor",
"AP_Proximity_Backend_Serial","degenerate small-class","AP_Proximity_Backend_Serial::detect","wrapper stateless",
"AP_Mount_SToRM32","entity commander boundary","has_pan_control","wrapper stateless",
"AP_Mount_SToRM32","entity commander boundary","AP_Mount_SToRM32::update","command collaborator",
"AP_Mount_SToRM32","entity commander boundary","AP_Mount_SToRM32::get_attitude_quaternion","predicate non-void-command collaborator",
"AP_Mount_SToRM32","entity commander boundary","AP_Mount_SToRM32::find_gimbal","command",
"AP_Mount_SToRM32","entity commander boundary","AP_Mount_SToRM32::send_do_mount_control","set collaborator",
"Proximity_Distance_Array","data-provider small-class","valid","predicate",
"AP_Proximity_Temp_Boundary","unclassified","AP_Proximity_Temp_Boundary","constructor",
"AP_Proximity_Temp_Boundary","unclassified","add_distance","command",
"AP_Proximity_Temp_Boundary","unclassified","AP_Proximity_Temp_Boundary::reset","set",
"AP_Proximity_Temp_Boundary","unclassified","AP_Proximity_Temp_Boundary::add_distance","command",
"AP_Proximity_Temp_Boundary","unclassified","AP_Proximity_Temp_Boundary::update_3D_boundary","controller",
"AP_Proximity_Temp_Boundary","unclassified","reset","controller stateless",
"AP_Proximity_LightWareSF40C","commander","rxspace","incidental",
"AP_Proximity_LightWareSF40C","commander","distance_max","incidental",
"AP_Proximity_LightWareSF40C","commander","distance_min","incidental",
"AP_Proximity_LightWareSF40C","commander","got_token","incidental",
"AP_Proximity_LightWareSF40C","commander","clear_token","wrapper stateless",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::update","command",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::initialise","unclassified",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::restart_sensor","unclassified",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::send_message","command",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::request_motor_state","command",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::request_stream_start","command collaborator",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::request_token","command",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::request_reset","command",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::process_replies","command",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::parse_byte","set",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::process_message","command",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::buff_to_uint32","incidental",
"AP_Proximity_LightWareSF40C","commander","AP_Proximity_LightWareSF40C::buff_to_uint16","incidental",
"AP_Proximity_Scripting","unclassified","distance_max","get",
"AP_Proximity_Scripting","unclassified","distance_min","get",
"AP_Proximity_Scripting","unclassified","AP_Proximity_Scripting::update","wrapper",
"AP_Proximity_Scripting","unclassified","AP_Proximity_Scripting::set_distance_min_max","predicate non-void-command",
"AP_Proximity_Scripting","unclassified","AP_Proximity_Scripting::get_upward_distance","predicate wrapper",
"AP_Proximity_Scripting","unclassified","AP_Proximity_Scripting::handle_script_distance_msg","predicate non-void-command collaborator",
"AP_Proximity_Scripting","unclassified","AP_Proximity_Scripting::handle_script_3d_msg","predicate non-void-command",
"AP_Proximity_Scripting","unclassified","AP_Proximity_Scripting::update_virtual_boundary","predicate non-void-command",
"AP_RCProtocol_CRSF","boundary","get_bootstrap_baud_rate","wrapper stateless",
"AP_RCProtocol_CRSF","boundary","is_rx_active","predicate wrapper",
"AP_RCProtocol_CRSF","boundary","is_tx_active","predicate wrapper",
"AP_RCProtocol_CRSF","boundary","get_link_status","get collaborator",
"AP_RCProtocol_CRSF","boundary","get_current_UART","property wrapper",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::AP_RCProtocol_CRSF","constructor",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::~AP_RCProtocol_CRSF","destructor",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::get_protocol_string","property collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::get_link_rate","get property collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::process_byte","command",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::_process_byte","command",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::check_frame","predicate non-void-command collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::skip_to_next_frame","command",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::update","command",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::write_frame","void-accessor command collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::decode_crsf_packet","predicate non-void-command collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::decode_variable_bit_channels","set",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::process_telemetry","predicate collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::process_link_stats_frame","command",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::process_link_stats_rx_frame","set collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::process_link_stats_tx_frame","set collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::start_uart","command",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::change_baud_rate","predicate set collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::process_handshake","command collaborator",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::derive_scaled_lq_value","wrapper stateless",
"AP_RCProtocol_CRSF","boundary","AP_RCProtocol_CRSF::start_bind","controller stateless",
"AP_Compass_BMM150","boundary","AP_Compass_BMM150::probe","controller stateless",
"AP_Compass_BMM150","boundary","AP_Compass_BMM150::AP_Compass_BMM150","constructor",
"AP_Compass_BMM150","boundary","AP_Compass_BMM150::_load_trim_values","predicate non-void-command",
"AP_Compass_BMM150","boundary","AP_Compass_BMM150::init","predicate non-void-command",
"AP_Compass_BMM150","boundary","AP_Compass_BMM150::_compensate_xy","incidental",
"AP_Compass_BMM150","boundary","AP_Compass_BMM150::_compensate_z","wrapper stateless",
"AP_Compass_BMM150","boundary","AP_Compass_BMM150::_update","command collaborator",
"AP_Compass_BMM150","boundary","AP_Compass_BMM150::read","wrapper",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM","constructor",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::process_pulse","command",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::dsm_decode_channel","incidental",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::dsm_guess_format","command",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::dsm_decode","predicate",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::start_bind","controller",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::update","set",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::dsm_parse_byte","predicate set",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::_process_byte","command",
"AP_RCProtocol_DSM","commander","AP_RCProtocol_DSM::process_byte","command",
"AP_RCProtocol_FPort","commander boundary","AP_RCProtocol_FPort::AP_RCProtocol_FPort","constructor",
"AP_RCProtocol_FPort","commander boundary","AP_RCProtocol_FPort::decode_control","wrapper stateless",
"AP_RCProtocol_FPort","commander boundary","AP_RCProtocol_FPort::decode_downlink","command collaborator",
"AP_RCProtocol_FPort","commander boundary","AP_RCProtocol_FPort::process_pulse","command",
"AP_RCProtocol_FPort","commander boundary","AP_RCProtocol_FPort::_process_byte","command collaborator",
"AP_RCProtocol_FPort","commander boundary","AP_RCProtocol_FPort::check_checksum","wrapper stateless",
"AP_RCProtocol_FPort","commander boundary","AP_RCProtocol_FPort::process_byte","command",
"AP_RCProtocol_GHST","unclassified","is_rx_active","predicate wrapper",
"AP_RCProtocol_GHST","unclassified","is_tx_active","predicate wrapper",
"AP_RCProtocol_GHST","unclassified","get_link_status","get collaborator",
"AP_RCProtocol_GHST","unclassified","get_current_UART","wrapper stateless",
"AP_RCProtocol_GHST","unclassified","add_to_buffer","unclassified",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::AP_RCProtocol_GHST","constructor",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::~AP_RCProtocol_GHST","destructor",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::get_protocol_string","incidental",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::get_link_rate","get",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::_process_byte","command",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::update","empty",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::write_frame","predicate non-void-command collaborator",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::decode_ghost_packet","predicate non-void-command",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::process_telemetry","predicate collaborator",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::process_link_stats_frame","command",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::is_telemetry_supported","predicate",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::process_byte","command",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::process_handshake","command collaborator",
"AP_RCProtocol_GHST","unclassified","AP_RCProtocol_GHST::derive_scaled_lq_value","wrapper stateless",
"AP_RCProtocol_IBUS","commander","AP_RCProtocol_IBUS::ibus_decode","incidental",
"AP_RCProtocol_IBUS","commander","AP_RCProtocol_IBUS::process_pulse","command",
"AP_RCProtocol_IBUS","commander","AP_RCProtocol_IBUS::_process_byte","command",
"AP_RCProtocol_IBUS","commander","AP_RCProtocol_IBUS::process_byte","command",
"AP_RCProtocol_MAVLinkRadio","boundary degenerate small-class","AP_RCProtocol_MAVLinkRadio::update_radio_rc_channels","wrapper stateless",
"AP_RCProtocol_SBUS","commander","AP_RCProtocol_SBUS::AP_RCProtocol_SBUS","constructor",
"AP_RCProtocol_SBUS","commander","AP_RCProtocol_SBUS::sbus_decode","wrapper stateless",
"AP_RCProtocol_SBUS","commander","AP_RCProtocol_SBUS::process_pulse","command",
"AP_RCProtocol_SBUS","commander","AP_RCProtocol_SBUS::_process_byte","command",
"AP_RCProtocol_SBUS","commander","AP_RCProtocol_SBUS::process_byte","command",
"AP_RCProtocol_SUMD","commander","AP_RCProtocol_SUMD","constructor",
"AP_RCProtocol_SUMD","commander","AP_RCProtocol_SUMD::process_pulse","command",
"AP_RCProtocol_SUMD","commander","AP_RCProtocol_SUMD::_process_byte","command",
"AP_RCProtocol_SUMD","commander","AP_RCProtocol_SUMD::process_byte","command",
"RC_Channels_Example","data-provider small-class","channel","property collaborator",
"RC_Channels_Example","data-provider small-class","flight_mode_channel_number","incidental",
"AP_RPM_Backend","small-class","~AP_RPM_Backend","destructor",
"AP_RPM_Backend","small-class","get_pin","get property controller",
"AP_RPM_Backend","small-class","AP_RPM_Backend::AP_RPM_Backend","constructor",
"AP_RPM_Backend","small-class","AP_RPM_Backend::update_esc_telem_outbound","command",
"ModeDrift","commander degenerate","mode_number","collaborator incidental",
"ModeDrift","commander degenerate","requires_GPS","incidental",
"ModeDrift","commander degenerate","has_manual_throttle","incidental",
"ModeDrift","commander degenerate","allows_arming","collaborator incidental",
"ModeDrift","commander degenerate","is_autopilot","incidental",
"ModeDrift","commander degenerate","name","incidental",
"ModeDrift","commander degenerate","name4","incidental",
"ModeDrift","commander degenerate","ModeDrift::init","incidental",
"ModeDrift","commander degenerate","ModeDrift::run","command",
"ModeDrift","commander degenerate","ModeDrift::get_throttle_assist","wrapper stateless",
"AP_Proximity_AirSimSITL","commander degenerate","AP_Proximity_AirSimSITL::update","command collaborator",
"AP_Proximity_AirSimSITL","commander degenerate","AP_Proximity_AirSimSITL::distance_max","incidental",
"AP_Proximity_AirSimSITL","commander degenerate","AP_Proximity_AirSimSITL::distance_min","incidental",
"AP_Proximity_AirSimSITL","commander degenerate","AP_Proximity_AirSimSITL::get_upward_distance","incidental",
"Sprayer","unclassified","Sprayer","constructor",
"Sprayer","unclassified","payload_mass","property",
"Sprayer","unclassified","is_enabled","predicate",
"Sprayer","unclassified","Sprayer::update","command collaborator",
"Sprayer","unclassified","Sprayer::should_report","predicate set",
"AP_Baro_BMP280","commander","AP_Baro_BMP280::AP_Baro_BMP280","constructor",
"AP_Baro_BMP280","commander","AP_Baro_BMP280::probe","controller stateless",
"AP_Baro_BMP280","commander","AP_Baro_BMP280::_init","predicate non-void-command",
"AP_Baro_BMP280","commander","AP_Baro_BMP280::_timer","command",
"AP_Baro_BMP280","commander","AP_Baro_BMP280::update","command",
"AP_Baro_BMP280","commander","AP_Baro_BMP280::_update_temperature","command",
"AP_Baro_BMP280","commander","AP_Baro_BMP280::_update_pressure","command",
"AP_CRSF_Telem","commander","get_protocol_string","property",
"AP_CRSF_Telem","commander","is_elrs","incidental",
"AP_CRSF_Telem","commander","is_tracer","incidental",
"AP_CRSF_Telem","commander","start_bind","set",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::AP_CRSF_Telem","constructor",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::~AP_CRSF_Telem","destructor",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::init","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::setup_wfq_scheduler","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::setup_custom_telemetry","collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::update_custom_telemetry_rates","command collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_rf_mode_changes","predicate non-void-command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_custom_telem_frame_id","property",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_rf_mode","property collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::is_high_speed_telemetry","predicate collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_telemetry_rate","controller stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::queue_message","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::disable_tx_entries","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::enable_tx_entries","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::enter_scheduler_params_mode","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::exit_scheduler_params_mode","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::adjust_packet_weight","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::is_packet_ready","get predicate non-void-command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_packet","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::_process_frame","predicate",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_vtx_frame","void-accessor command collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_vtx_telem_frame","void-accessor command collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_ping_frame","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_device_info_frame","command collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_command_frame","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_param_read_frame","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_pending_requests","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::update_vtx_params","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_parameter_ping","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_heartbeat","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_battery","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_altitude_packed","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_vertical_speed_packed","wrapper stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_baro_vario","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_vario","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_gps","command collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_attitude","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_flight_mode","command collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_device_info","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_device_ping","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_command_response","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_bind","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_parameter","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_text_selection","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_param_write_frame","controller stateless",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::calc_status_text","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_single_packet_passthrough_telem_data","command collaborator",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_multi_packet_passthrough_telem_data","command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::_get_telem_data","predicate non-void-command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::process_frame","predicate non-void-command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_telem_data","predicate non-void-command",
"AP_CRSF_Telem","commander","AP_CRSF_Telem::get_singleton","get non-void-command collaborator",
"AP_GHST_Telem","unclassified","get_protocol_string","property",
"AP_GHST_Telem","unclassified","update","wrapper stateless",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::AP_GHST_Telem","constructor",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::~AP_GHST_Telem","destructor",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::init","wrapper stateless",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::setup_wfq_scheduler","wrapper stateless",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::update_custom_telemetry_rates","command collaborator",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::process_rf_mode_changes","predicate non-void-command",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::get_rf_mode","controller stateless",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::is_high_speed_telemetry","collaborator incidental",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::get_telemetry_rate","wrapper stateless",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::is_packet_ready","get",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::process_packet","command",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::_process_frame","predicate set",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::update","empty",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::process_pending_requests","incidental",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::calc_battery","command",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::calc_gps","command collaborator",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::calc_gps2","command collaborator",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::calc_attitude","command",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::_get_telem_data","predicate non-void-command",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::process_frame","predicate non-void-command",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::get_telem_data","predicate non-void-command",
"AP_GHST_Telem","unclassified","AP_GHST_Telem::get_singleton","get non-void-command collaborator",
"AP_ROMFS","boundary","AP_ROMFS::find_file","property wrapper",
"AP_ROMFS","boundary","AP_ROMFS::find_decompress","property non-void-command",
"AP_ROMFS","boundary","AP_ROMFS::free","command",
"AP_ROMFS","boundary","AP_ROMFS::dir_list","get property wrapper",
"AP_ROMFS","boundary","AP_ROMFS::find_size","predicate non-void-command collaborator",
"ToneAlarm_Disco","small-class","ToneAlarm_Disco::ToneAlarm_Disco","constructor",
"ToneAlarm_Disco","small-class","ToneAlarm_Disco::init","predicate set",
"ToneAlarm_Disco","small-class","ToneAlarm_Disco::set_buzzer_tone","command",
"AP_Airspeed_Backend","unclassified","get_differential_pressure","incidental",
"AP_Airspeed_Backend","unclassified","has_airspeed","incidental",
"AP_Airspeed_Backend","unclassified","get_airspeed","incidental",
"AP_Airspeed_Backend","unclassified","handle_msp","empty",
"AP_Airspeed_Backend","unclassified","handle_external","empty",
"AP_Airspeed_Backend","unclassified","get_hygrometer","incidental",
"AP_Airspeed_Backend","unclassified","get_instance","get",
"AP_Airspeed_Backend","unclassified","disable_voltage_correction","predicate",
"AP_Airspeed_Backend","unclassified","get_tube_order","property controller",
"AP_Airspeed_Backend","unclassified","get_airspeed_ratio","property",
"AP_Airspeed_Backend","unclassified","set_use_zero_offset","unclassified",
"AP_Airspeed_Backend","unclassified","set_skip_cal","controller",
"AP_Airspeed_Backend","unclassified","set_offset","controller",
"AP_Airspeed_Backend","unclassified","set_use","controller",
"AP_Airspeed_Backend","unclassified","AP_Airspeed_Backend::AP_Airspeed_Backend","constructor",
"AP_Airspeed_Backend","unclassified","AP_Airspeed_Backend::~AP_Airspeed_Backend","destructor",
"AP_Airspeed_Backend","unclassified","AP_Airspeed_Backend::get_pin","get property",
"AP_Airspeed_Backend","unclassified","AP_Airspeed_Backend::get_psi_range","get",
"AP_Airspeed_Backend","unclassified","AP_Airspeed_Backend::get_bus","get",
"AP_Airspeed_Backend","unclassified","AP_Airspeed_Backend::bus_is_configured","get controller",
"AP_Airspeed_Backend","unclassified","AP_Airspeed_Backend::set_bus_id","controller",
"AP_RangeFinder_TeraRanger_Serial","small-class","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_TeraRanger_Serial","small-class","AP_RangeFinder_TeraRanger_Serial::get_reading","predicate non-void-command",
"AP_RPM","data-provider","num_sensors","get",
"AP_RPM","data-provider","get_signal_quality","get",
"AP_RPM","data-provider","AP_RPM::AP_RPM","constructor",
"AP_RPM","data-provider","AP_RPM::init","command",
"AP_RPM","data-provider","AP_RPM::convert_params","controller",
"AP_RPM","data-provider","AP_RPM::update","command",
"AP_RPM","data-provider","AP_RPM::healthy","predicate",
"AP_RPM","data-provider","AP_RPM::enabled","predicate",
"AP_RPM","data-provider","AP_RPM::get_rpm","predicate",
"AP_RPM","data-provider","AP_RPM::arming_checks","predicate controller",
"AP_RPM","data-provider","AP_RPM::Log_RPM","unclassified",
"AP_RPM","data-provider","AP_RPM::get_dronecan_sensor_id","get property",
"AP_RPM_Params","empty","AP_RPM_Params::AP_RPM_Params","constructor",
"AP_GPS_UBLOX","boundary","highest_supported_status","collaborator incidental",
"AP_GPS_UBLOX","boundary","is_configured","predicate",
"AP_GPS_UBLOX","boundary","get_error_codes","predicate",
"AP_GPS_UBLOX","boundary","name","incidental",
"AP_GPS_UBLOX","boundary","mb_use_uart2","wrapper stateless",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::AP_GPS_UBLOX","constructor",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::~AP_GPS_UBLOX","destructor",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_request_next_config","command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_verify_rate","command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_request_port","command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::read","predicate non-void-command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::log_mon_hw","wrapper",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::log_mon_hw2","wrapper",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::log_tim_tm2","wrapper",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::log_rxm_raw","wrapper stateless",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::log_rxm_rawx","wrapper stateless",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::unexpected_message","set",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::config_key_size","wrapper stateless",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::find_active_config_index","collaborator incidental",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_parse_gps","predicate non-void-command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::pps_interrupt","set",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::set_pps_desired_freq","command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_update_checksum","incidental",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_send_message","predicate non-void-command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_request_message_rate","predicate non-void-command collaborator",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_configure_message_rate","predicate non-void-command collaborator",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_configure_valset","predicate non-void-command collaborator",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_configure_valget","predicate non-void-command collaborator",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_configure_config_set","predicate non-void-command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_configure_list_valset","predicate non-void-command collaborator",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_save_cfg","command collaborator",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_detect","incidental",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_request_version","command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_configure_rate","command collaborator",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::broadcast_configuration_failure_reason","wrapper",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::get_lag","predicate",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::Write_AP_Logger_Log_Startup_messages","wrapper",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::_check_new_itow","wrapper",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::get_RTCMV3","predicate controller",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::clear_RTCMV3","controller",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::is_healthy","predicate",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::populate_F9_gnss","property non-void-command",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::supports_F9_config","predicate",
"AP_GPS_UBLOX","boundary","AP_GPS_UBLOX::is_gnss_key","wrapper stateless",
"LowPassFilter","unclassified","reset","command",
"LowPassFilter","unclassified","LowPassFilter<T>::LowPassFilter","constructor",
"LowPassFilter","unclassified","LowPassFilter<T>::LowPassFilter","constructor",
"LowPassFilter","unclassified","LowPassFilter<T>::LowPassFilter","constructor",
"LowPassFilter","unclassified","LowPassFilter<T>::set_cutoff_frequency","set",
"LowPassFilter","unclassified","LowPassFilter<T>::set_cutoff_frequency","set",
"LowPassFilter","unclassified","LowPassFilter<T>::get_cutoff_freq","get",
"LowPassFilter","unclassified","LowPassFilter<T>::apply","property non-void-command collaborator",
"LowPassFilter","unclassified","LowPassFilter<T>::apply","property non-void-command collaborator",
"LowPassFilter","unclassified","LowPassFilter<T>::get","property collaborator",
"LowPassFilter","unclassified","LowPassFilter<T>::reset","command collaborator",
"Storage","commander","Storage","constructor",
"Storage","commander","AP_HAL::Storage::erase","predicate non-void-command",
"Storage","commander","Storage::_storage_open","command",
"Storage","commander","Storage::_save_backup","controller",
"Storage","commander","Storage::_mark_dirty","command",
"Storage","commander","Storage::read_block","command",
"Storage","commander","Storage::write_block","command",
"Storage","commander","Storage::_timer_tick","command",
"Storage","commander","Storage::_flash_load","controller stateless",
"Storage","commander","Storage::_flash_write","controller stateless",
"Storage","commander","Storage::_flash_write_data","predicate non-void-command",
"Storage","commander","Storage::_flash_read_data","controller stateless",
"Storage","commander","Storage::_flash_erase_sector","controller stateless",
"Storage","commander","Storage::_flash_erase_ok","controller stateless",
"Storage","commander","Storage::healthy","wrapper stateless",
"Storage","commander","Storage::erase","controller stateless",
"Storage","commander","Storage::get_storage_ptr","predicate",
"Storage","commander","Storage::_storage_open","command",
"Storage","commander","Storage::_mark_dirty","command",
"Storage","commander","Storage::read_block","command",
"Storage","commander","Storage::write_block","command",
"Storage","commander","Storage::_timer_tick","command",
"Storage","commander","Storage::_flash_load","controller stateless",
"Storage","commander","Storage::_flash_write","command",
"Storage","commander","Storage::_flash_write_data","predicate non-void-command",
"Storage","commander","Storage::_flash_read_data","wrapper stateless",
"Storage","commander","Storage::_flash_erase_sector","wrapper stateless",
"Storage","commander","Storage::_flash_erase_ok","controller stateless",
"Storage","commander","Storage::healthy","predicate wrapper",
"Storage","commander","Storage::get_storage_ptr","predicate",
"Storage","commander","Storage::Storage","constructor",
"Storage","commander","Storage::init","empty",
"Storage","commander","Storage::read_block","wrapper stateless",
"Storage","commander","Storage::write_block","empty",
"Storage","commander","Storage::_storage_create","property wrapper",
"Storage","commander","Storage::init","command collaborator",
"Storage","commander","Storage::_mark_dirty","set",
"Storage","commander","Storage::read_block","command",
"Storage","commander","Storage::write_block","command",
"Storage","commander","Storage::_timer_tick","command",
"Storage","commander","Storage::get_storage_ptr","predicate",
"Storage","commander","Storage::_storage_open","command",
"Storage","commander","Storage::_mark_dirty","command",
"Storage","commander","Storage::read_block","command",
"Storage","commander","Storage::write_block","command",
"Storage","commander","Storage::_timer_tick","command collaborator",
"Storage","commander","Storage::_flash_load","controller stateless",
"Storage","commander","Storage::_flash_write","command",
"Storage","commander","Storage::_flash_write_data","predicate non-void-command",
"Storage","commander","Storage::_flash_read_data","wrapper stateless",
"Storage","commander","Storage::_flash_erase_sector","wrapper stateless",
"Storage","commander","Storage::_flash_erase_ok","controller stateless",
"Storage","commander","Storage::healthy","wrapper stateless",
"Storage","commander","Storage::get_storage_ptr","predicate",
"AP_RPM_ESC_Telem","commander small-class","AP_RPM_ESC_Telem::update","command",
"AP_RPM_Generator","commander boundary small-class","AP_RPM_Generator::update","command collaborator",
"AP_RangeFinder_SITL","commander small-class","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_SITL","commander small-class","AP_RangeFinder_SITL::AP_RangeFinder_SITL","constructor",
"AP_RangeFinder_SITL","commander small-class","AP_RangeFinder_SITL::update","command",
"GPS_Backend","entity boundary","~GPS_Backend","destructor",
"GPS_Backend","entity boundary","device_baud","incidental",
"GPS_Backend","entity boundary","simulation_timeval","wrapper stateless",
"GPS_Backend","entity boundary","GPS_Backend::GPS_Backend","constructor",
"GPS_Backend","entity boundary","GPS_Backend::write_to_autopilot","property collaborator",
"GPS_Backend","entity boundary","GPS_Backend::read_from_autopilot","property collaborator",
"GPS_Backend","entity boundary","GPS_Backend::simulation_timeval","wrapper stateless",
"GPS_Backend","entity boundary","GPS_Backend::gps_time","property non-void-command collaborator",
"GPS_Backend","entity boundary","GPS_Backend::update_read","command",
"GPS_Backend","entity boundary","simulation_timeval","wrapper stateless",
"AP_RPM_SITL","commander small-class","AP_RPM_SITL::AP_RPM_SITL","constructor",
"AP_RPM_SITL","commander small-class","AP_RPM_SITL::update","command",
"AP_FlashIface","degenerate","start_program_offset","incidental",
"AP_FlashIface","degenerate","start_erase_offset","incidental",
"AP_FlashIface","degenerate","start_xip_mode","incidental",
"AP_FlashIface","degenerate","stop_xip_mode","incidental",
"AP_RSSI","unclassified","enabled","predicate",
"AP_RSSI","unclassified","init","empty",
"AP_RSSI","unclassified","init","wrapper stateless",
"AP_RSSI","unclassified","init","wrapper stateless",
"AP_RSSI","unclassified","AP_RSSI::AP_RSSI","constructor",
"AP_RSSI","unclassified","AP_RSSI::~AP_RSSI","destructor",
"AP_RSSI","unclassified","AP_RSSI::get_singleton","get",
"AP_RSSI","unclassified","AP_RSSI::init","set",
"AP_RSSI","unclassified","AP_RSSI::read_receiver_rssi","property non-void-command",
"AP_RSSI","unclassified","AP_RSSI::read_receiver_link_quality","property non-void-command",
"AP_RSSI","unclassified","AP_RSSI::read_receiver_rssi_uint8","property non-void-command",
"AP_RSSI","unclassified","AP_RSSI::read_pin_rssi","property non-void-command",
"AP_RSSI","unclassified","AP_RSSI::read_channel_rssi","property non-void-command",
"AP_RSSI","unclassified","AP_RSSI::read_pwm_pin_rssi","property non-void-command",
"AP_RSSI","unclassified","AP_RSSI::read_telemetry_radio_rssi","wrapper stateless",
"AP_RSSI","unclassified","AP_RSSI::scale_and_constrain_float_rssi","wrapper stateless",
"AP_Radio_backend","data-provider","handle_data_packet","empty",
"AP_Radio_backend","data-provider","get_protocol","property collaborator",
"AP_Radio_backend","data-provider","get_debug_level","property",
"AP_Radio_backend","data-provider","get_disable_crc","predicate",
"AP_Radio_backend","data-provider","get_rssi_chan","property",
"AP_Radio_backend","data-provider","get_pps_chan","property",
"AP_Radio_backend","data-provider","get_tx_rssi_chan","property",
"AP_Radio_backend","data-provider","get_tx_pps_chan","property",
"AP_Radio_backend","data-provider","get_telem_enable","predicate",
"AP_Radio_backend","data-provider","get_transmit_power","property",
"AP_Radio_backend","data-provider","get_tx_max_power","property",
"AP_Radio_backend","data-provider","set_tx_max_power_default","command",
"AP_Radio_backend","data-provider","get_fcc_test","property",
"AP_Radio_backend","data-provider","get_stick_mode","property",
"AP_Radio_backend","data-provider","get_factory_test","property",
"AP_Radio_backend","data-provider","get_tx_buzzer_adjust","property",
"AP_Radio_backend","data-provider","get_autobind_time","property",
"AP_Radio_backend","data-provider","get_autobind_rssi","property",
"AP_Radio_backend","data-provider","AP_Radio_backend::AP_Radio_backend","constructor",
"AP_Radio_backend","data-provider","AP_Radio_backend::~AP_Radio_backend","destructor",
"FwUpload","unclassified","pending_length","property",
"FwUpload","unclassified","free_length","property non-void-command",
"FwUpload","unclassified","reset","command",
"FwUpload","unclassified","FwUpload::queue","command",
"FwUpload","unclassified","FwUpload::dequeue","command",
"AP_Radio_beken","unclassified","get_tx_version","wrapper stateless",
"AP_Radio_beken","unclassified","set_wifi_channel","set",
"AP_Radio_beken","unclassified","AP_Radio_beken::AP_Radio_beken","constructor",
"AP_Radio_beken","unclassified","AP_Radio_beken::init","predicate set",
"AP_Radio_beken","unclassified","AP_Radio_beken::reset","predicate non-void-command",
"AP_Radio_beken","unclassified","AP_Radio_beken::get_stats","get collaborator",
"AP_Radio_beken","unclassified","AP_Radio_beken::read","get property",
"AP_Radio_beken","unclassified","AP_Radio_beken::update","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::num_channels","get non-void-command",
"AP_Radio_beken","unclassified","AP_Radio_beken::last_recv_us","get",
"AP_Radio_beken","unclassified","AP_Radio_beken::send","incidental",
"AP_Radio_beken","unclassified","AP_Radio_beken::radio_init","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::trigger_irq_radio_event","set",
"AP_Radio_beken","unclassified","AP_Radio_beken::trigger_timeout_event","set",
"AP_Radio_beken","unclassified","AP_Radio_beken::start_recv_bind","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::handle_data_packet","command collaborator",
"AP_Radio_beken","unclassified","AP_Radio_beken::update_SRT_telemetry","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::UpdateTxData","predicate non-void-command collaborator",
"AP_Radio_beken","unclassified","AP_Radio_beken::check_fw_ack","unclassified",
"AP_Radio_beken","unclassified","AP_Radio_beken::map_stick_mode","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::ProcessBindPacket","property non-void-command collaborator",
"AP_Radio_beken","unclassified","AP_Radio_beken::ProcessPacket","property non-void-command",
"AP_Radio_beken","unclassified","AP_Radio_beken::UpdateFccScan","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::irq_handler","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::irq_timeout","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::irq_handler_thd","collaborator",
"AP_Radio_beken","unclassified","AP_Radio_beken::setChannel","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::nextChannel","command",
"AP_Radio_beken","unclassified","AP_Radio_beken::save_bind_info","controller",
"AP_Radio_beken","unclassified","AP_Radio_beken::load_bind_info","predicate non-void-command collaborator",
"AP_Radio_beken","unclassified","AP_Radio_beken::BadDroneId","command",
"AP_Radio_cypress","commander","get_tx_version","wrapper stateless",
"AP_Radio_cypress","commander","set_wifi_channel","set",
"AP_Radio_cypress","commander","AP_Radio_cypress::AP_Radio_cypress","constructor",
"AP_Radio_cypress","commander","AP_Radio_cypress::init","predicate non-void-command",
"AP_Radio_cypress","commander","AP_Radio_cypress::reset","predicate non-void-command",
"AP_Radio_cypress","commander","AP_Radio_cypress::get_stats","get collaborator",
"AP_Radio_cypress","commander","AP_Radio_cypress::read","property non-void-command",
"AP_Radio_cypress","commander","AP_Radio_cypress::update","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::print_debug_info","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::num_channels","property non-void-command",
"AP_Radio_cypress","commander","AP_Radio_cypress::check_fw_ack","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::last_recv_us","incidental",
"AP_Radio_cypress","commander","AP_Radio_cypress::send","incidental",
"AP_Radio_cypress","commander","AP_Radio_cypress::read_status_debounced","property non-void-command",
"AP_Radio_cypress","commander","AP_Radio_cypress::force_initial_state","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::set_channel","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::radio_set_config","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::radio_init","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::dump_registers","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::read_register","property non-void-command",
"AP_Radio_cypress","commander","AP_Radio_cypress::write_multiple","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::write_register","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::map_stick_mode","wrapper stateless",
"AP_Radio_cypress","commander","AP_Radio_cypress::check_double_bind","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::parse_dsm_channels","predicate non-void-command",
"AP_Radio_cypress","commander","AP_Radio_cypress::process_bind","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::dsm2_start_sync","wrapper stateless",
"AP_Radio_cypress","commander","AP_Radio_cypress::setup_timeout","wrapper",
"AP_Radio_cypress","commander","AP_Radio_cypress::process_packet","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::start_receive","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::irq_handler_recv","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::irq_handler_send","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::irq_handler","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::irq_timeout","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::irq_handler_thd","collaborator",
"AP_Radio_cypress","commander","AP_Radio_cypress::trigger_timeout_event","wrapper",
"AP_Radio_cypress","commander","AP_Radio_cypress::trigger_irq_radio_event","wrapper",
"AP_Radio_cypress","commander","AP_Radio_cypress::dsm_set_channel","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::dsm_generate_channels_dsmx","wrapper stateless",
"AP_Radio_cypress","commander","AP_Radio_cypress::dsm_setup_transfer_dsmx","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::dsm_choose_channel","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::start_recv_bind","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::save_bind_info","controller",
"AP_Radio_cypress","commander","AP_Radio_cypress::load_bind_info","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::is_DSM2","wrapper stateless",
"AP_Radio_cypress","commander","AP_Radio_cypress::transmit16","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::send_telem_packet","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::send_FCC_test_packet","command",
"AP_Radio_cypress","commander","AP_Radio_cypress::handle_data_packet","command collaborator",
"AP_ExternalControl_Plane","pure-controller degenerate small-class","AP_ExternalControl_Plane::set_global_position","controller stateless",
"AP_Rally","data-provider boundary","get_rally_total","property",
"AP_Rally","data-provider boundary","get_rally_max","property",
"AP_Rally","data-provider boundary","get_rally_limit_km","get",
"AP_Rally","data-provider boundary","last_change_time_ms","get",
"AP_Rally","data-provider boundary","is_valid","collaborator incidental",
"AP_Rally","data-provider boundary","AP_Rally::AP_Rally","constructor",
"AP_Rally","data-provider boundary","AP_Rally::get_rally_point_with_index","predicate collaborator",
"AP_Rally","data-provider boundary","AP_Rally::truncate","command",
"AP_Rally","data-provider boundary","AP_Rally::append","predicate non-void-command collaborator",
"AP_Rally","data-provider boundary","AP_Rally::set_rally_point_with_index","predicate non-void-command collaborator",
"AP_Rally","data-provider boundary","AP_Rally::rally_location_to_location","wrapper stateless",
"AP_Rally","data-provider boundary","AP_Rally::find_nearest_rally_point","predicate collaborator",
"AP_Rally","data-provider boundary","AP_Rally::calc_best_rally_or_home_location","property collaborator",
"AP_RangeFinder_BBB_PRU","degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_BBB_PRU","degenerate","AP_RangeFinder_BBB_PRU::detect","controller stateless",
"AP_RangeFinder_BBB_PRU","degenerate","AP_RangeFinder_BBB_PRU::update","command",
"AP_OSD_SITL","boundary","is_compatible_with_backend_type","collaborator incidental",
"AP_OSD_SITL","boundary","get_backend_type","collaborator incidental",
"AP_OSD_SITL","boundary","getbuffer","property wrapper",
"AP_OSD_SITL","boundary","AP_OSD_SITL::load_font","set collaborator",
"AP_OSD_SITL","boundary","AP_OSD_SITL::write","void-accessor command",
"AP_OSD_SITL","boundary","AP_OSD_SITL::clear","wrapper",
"AP_OSD_SITL","boundary","AP_OSD_SITL::flush","set",
"AP_OSD_SITL","boundary","AP_OSD_SITL::update_thread","command",
"AP_OSD_SITL","boundary","AP_OSD_SITL::update_thread_start","property command collaborator",
"AP_OSD_SITL","boundary","AP_OSD_SITL::init","predicate wrapper",
"AP_OSD_SITL","boundary","AP_OSD_SITL::probe","controller stateless",
"AP_OSD_SITL","boundary","AP_OSD_SITL::AP_OSD_SITL","constructor",
"AP_RangeFinder_Backend_CAN","unclassified","read_timeout_ms","incidental",
"AP_RangeFinder_Backend_CAN","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_Backend_CAN","unclassified","accumulate_distance_m","command",
"AP_RangeFinder_Backend_CAN","unclassified","AP_RangeFinder_Backend_CAN::AP_RangeFinder_Backend_CAN","constructor",
"AP_RangeFinder_Backend_CAN","unclassified","AP_RangeFinder_Backend_CAN::update","unclassified",
"AP_RangeFinder_Backend_CAN","unclassified","AP_RangeFinder_Backend_CAN::get_reading","predicate non-void-command",
"AP_RangeFinder_Backend_CAN","unclassified","AP_RangeFinder_Backend_CAN::is_correct_id","predicate",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::RCOutput_Sysfs","constructor",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::~RCOutput_Sysfs","destructor",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::init","set",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::set_freq","wrapper",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::get_freq","get property non-void-command",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::enable_ch","wrapper",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::disable_ch","wrapper",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::write","command",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::read","property wrapper",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::read","void-accessor command",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::cork","set",
"RCOutput_Sysfs","unclassified","RCOutput_Sysfs::push","command",
"ChibiOS::CANIface","data-provider lazy-class","init","wrapper stateless",
"ChibiOS::CANIface","data-provider lazy-class","is_busoff","get",
"ChibiOS::CANIface","data-provider lazy-class","is_initialized","get",
"ChibiOS::CANIface","data-provider lazy-class","get_statistics","collaborator incidental",
"ChibiOS::CANIface","data-provider lazy-class","add_to_rx_queue","predicate non-void-command collaborator",
"ChibiOS::CANIface","data-provider lazy-class","get_iface_num","get",
"AP_RangeFinder_Bebop","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::AP_RangeFinder_Bebop","constructor",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::~AP_RangeFinder_Bebop","destructor",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::detect","incidental",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::get_threshold_at","property",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_apply_averaging_filter","property set",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_search_local_maxima","property",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_search_maximum_with_max_amplitude","get property",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_loop","command",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::update","command",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_launch_purge","property non-void-command",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_configure_gpio","command",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_reconfigure_wave","unclassified",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_configure_wave","property non-void-command",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_configure_capture","property non-void-command",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_init","command",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_launch","property non-void-command",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_capture","property wrapper",
"AP_RangeFinder_Bebop","unclassified","AP_RangeFinder_Bebop::_update_mode","get non-void-command",
"AP_RangeFinder_Benewake","degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_Benewake","degenerate","has_signal_byte","incidental",
"AP_RangeFinder_Benewake","degenerate","AP_RangeFinder_Benewake::get_reading","predicate non-void-command",
"AP_Vehicle","degenerate","AP_Vehicle","constructor",
"AP_Vehicle","degenerate","get_control_mode_reason","get collaborator",
"AP_Vehicle","degenerate","current_mode_requires_mission","incidental",
"AP_Vehicle","degenerate","set_likely_flying","command",
"AP_Vehicle","degenerate","get_likely_flying","get",
"AP_Vehicle","degenerate","get_time_flying_ms","property wrapper",
"AP_Vehicle","degenerate","set_target_location","collaborator incidental",
"AP_Vehicle","degenerate","start_takeoff","incidental",
"AP_Vehicle","degenerate","set_target_pos_NED","incidental",
"AP_Vehicle","degenerate","set_target_posvel_NED","collaborator incidental",
"AP_Vehicle","degenerate","set_target_posvelaccel_NED","incidental",
"AP_Vehicle","degenerate","set_target_velocity_NED","collaborator incidental",
"AP_Vehicle","degenerate","set_target_velaccel_NED","incidental",
"AP_Vehicle","degenerate","set_target_angle_and_climbrate","incidental",
"AP_Vehicle","degenerate","set_target_throttle_rate_rpy","empty",
"AP_Vehicle","degenerate","set_rudder_offset","empty",
"AP_Vehicle","degenerate","nav_scripting_enable","incidental",
"AP_Vehicle","degenerate","get_target_location","collaborator incidental",
"AP_Vehicle","degenerate","update_target_location","collaborator incidental",
"AP_Vehicle","degenerate","get_circle_radius","incidental",
"AP_Vehicle","degenerate","set_circle_rate","incidental",
"AP_Vehicle","degenerate","set_steering_and_throttle","incidental",
"AP_Vehicle","degenerate","get_steering_and_throttle","incidental",
"AP_Vehicle","degenerate","set_desired_turn_rate_and_speed","incidental",
"AP_Vehicle","degenerate","set_desired_speed","incidental",
"AP_Vehicle","degenerate","nav_script_time","incidental",
"AP_Vehicle","degenerate","nav_script_time_done","empty",
"AP_Vehicle","degenerate","set_velocity_match","collaborator incidental",
"AP_Vehicle","degenerate","has_ekf_failsafed","incidental",
"AP_Vehicle","degenerate","set_land_descent_rate","incidental",
"AP_Vehicle","degenerate","get_control_output","incidental",
"AP_Vehicle","degenerate","is_landing","incidental",
"AP_Vehicle","degenerate","is_taking_off","incidental",
"AP_Vehicle","degenerate","should_zero_rc_outputs_on_reboot","incidental",
"AP_Vehicle","degenerate","get_wp_distance_m","incidental",
"AP_Vehicle","degenerate","get_wp_bearing_deg","incidental",
"AP_Vehicle","degenerate","get_wp_crosstrack_error_m","incidental",
"AP_Vehicle","degenerate","get_pan_tilt_norm","incidental",
"AP_Vehicle","degenerate","get_rate_ef_targets","collaborator incidental",
"AP_Vehicle","degenerate","set_home_to_current_location","incidental",
"AP_Vehicle","degenerate","set_home","incidental",
"AP_Vehicle","degenerate","set_control_channels","empty",
"AP_Vehicle","degenerate","get_log_bitmask","get collaborator",
"AP_Vehicle","degenerate","get_log_structures","collaborator incidental",
"AP_Vehicle","degenerate","get_num_log_structures","incidental",
"AP_Vehicle","degenerate","AP_Vehicle::setup","command",
"AP_Vehicle","degenerate","AP_Vehicle::loop","command",
"AP_Vehicle","degenerate","AP_Vehicle::get_common_scheduler_tasks","void-accessor wrapper",
"AP_Vehicle","degenerate","AP_Vehicle::scheduler_delay_callback","command",
"AP_Vehicle","degenerate","AP_Vehicle::send_watchdog_reset_statustext","controller stateless",
"AP_Vehicle","degenerate","AP_Vehicle::is_crashed","wrapper stateless",
"AP_Vehicle","degenerate","AP_Vehicle::update_throttle_notch","controller stateless",
"AP_Vehicle","degenerate","AP_Vehicle::update_dynamic_notch","command collaborator",
"AP_Vehicle","degenerate","AP_Vehicle::update_dynamic_notch_at_specified_rate","unclassified",
"AP_Vehicle","degenerate","AP_Vehicle::notify_no_such_mode","wrapper stateless",
"AP_Vehicle","degenerate","AP_Vehicle::reboot","command",
"AP_Vehicle","degenerate","AP_Vehicle::publish_osd_info","command",
"AP_Vehicle","degenerate","AP_Vehicle::get_osd_roll_pitch_rad","void-accessor",
"AP_Vehicle","degenerate","AP_Vehicle::accel_cal_update","command collaborator",
"AP_Vehicle","degenerate","AP_Vehicle::update_arming","wrapper stateless",
"AP_Vehicle","degenerate","AP_Vehicle::one_Hz_update","set",
"AP_Vehicle","degenerate","AP_Vehicle::check_motor_noise","unclassified",
"AP_Vehicle","degenerate","AP_Vehicle::init_dds_client","predicate set",
"AP_Vehicle","degenerate","AP_Vehicle::block_GCS_mode_change","predicate wrapper",
"AP_Vehicle","degenerate","AP_Vehicle::get_singleton","get",
"AP_Vehicle","degenerate","AP_Vehicle::load_parameters","controller stateless",
"AP_RangeFinder_Benewake_TFMini","degenerate small-class","model_dist_max_cm","incidental",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::AP_InertialSensor_SCHA63T","constructor",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::probe","controller stateless",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::start","command",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::init","predicate non-void-command",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::check_startup","predicate non-void-command",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::read_accel","command collaborator",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::read_gyro","command collaborator",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::set_temperature","wrapper stateless",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::update","predicate wrapper",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::read_register","predicate non-void-command",
"AP_InertialSensor_SCHA63T","unclassified","AP_InertialSensor_SCHA63T::write_register","predicate non-void-command",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","delay_microseconds_boost","wrapper stateless",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","expect_delay_ms","empty",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","in_expected_delay","incidental",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","boost_end","empty",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","in_delay_callback","get",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","stop_clock","empty",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","disable_interrupts_save","collaborator incidental",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","restore_interrupts","empty",
"AP_HAL::Scheduler","data-provider lazy-class degenerate","thread_create","incidental",
"AP_RangeFinder_DroneCAN","unclassified","_get_mav_distance_sensor_type","get collaborator",
"AP_RangeFinder_DroneCAN","unclassified","AP_RangeFinder_DroneCAN::subscribe_msgs","controller stateless",
"AP_RangeFinder_DroneCAN","unclassified","AP_RangeFinder_DroneCAN::get_dronecan_backend","controller stateless",
"AP_RangeFinder_DroneCAN","unclassified","AP_RangeFinder_DroneCAN::update","command",
"AP_RangeFinder_DroneCAN","unclassified","AP_RangeFinder_DroneCAN::handle_measurement","command collaborator",
"AP_RangeFinder_HC_SR04","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_HC_SR04","unclassified","AP_RangeFinder_HC_SR04::AP_RangeFinder_HC_SR04","constructor",
"AP_RangeFinder_HC_SR04","unclassified","AP_RangeFinder_HC_SR04::check_pins","predicate non-void-command",
"AP_RangeFinder_HC_SR04","unclassified","AP_RangeFinder_HC_SR04::check_trigger_pin","set",
"AP_RangeFinder_HC_SR04","unclassified","AP_RangeFinder_HC_SR04::check_echo_pin","predicate non-void-command",
"AP_RangeFinder_HC_SR04","unclassified","AP_RangeFinder_HC_SR04::detect","collaborator incidental",
"AP_RangeFinder_HC_SR04","unclassified","AP_RangeFinder_HC_SR04::update","command",
"AP_RangeFinder_MaxsonarSerialLV","degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_MaxsonarSerialLV","degenerate","read_timeout_ms","incidental",
"AP_RangeFinder_MaxsonarSerialLV","degenerate","AP_RangeFinder_MaxsonarSerialLV::AP_RangeFinder_MaxsonarSerialLV","constructor",
"AP_RangeFinder_MaxsonarSerialLV","degenerate","AP_RangeFinder_MaxsonarSerialLV::get_reading","predicate non-void-command",
"AP_RangeFinder_NMEA","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_NMEA","unclassified","read_timeout_ms","incidental",
"AP_RangeFinder_NMEA","unclassified","AP_RangeFinder_NMEA::get_reading","predicate non-void-command",
"AP_RangeFinder_NMEA","unclassified","AP_RangeFinder_NMEA::get_temp","predicate",
"AP_RangeFinder_NMEA","unclassified","AP_RangeFinder_NMEA::decode","predicate non-void-command",
"AP_RangeFinder_NMEA","unclassified","AP_RangeFinder_NMEA::decode_latest_term","predicate non-void-command",
"AP_RangeFinder_PWM","unclassified","~AP_RangeFinder_PWM","destructor",
"AP_RangeFinder_PWM","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_PWM","unclassified","AP_RangeFinder_PWM::AP_RangeFinder_PWM","constructor",
"AP_RangeFinder_PWM","unclassified","AP_RangeFinder_PWM::detect","incidental",
"AP_RangeFinder_PWM","unclassified","AP_RangeFinder_PWM::get_reading","predicate non-void-command",
"AP_RangeFinder_PWM","unclassified","AP_RangeFinder_PWM::check_pin","predicate non-void-command",
"AP_RangeFinder_PWM","unclassified","AP_RangeFinder_PWM::check_stop_pin","set",
"AP_RangeFinder_PWM","unclassified","AP_RangeFinder_PWM::check_pins","predicate non-void-command",
"AP_RangeFinder_PWM","unclassified","AP_RangeFinder_PWM::update","command",
"AP_RangeFinder_PWM","unclassified","AP_RangeFinder_PWM::out_of_range","predicate",
"AP_RCProtocol_Joystick_SFML","boundary degenerate small-class","AP_RCProtocol_Joystick_SFML","constructor",
"AP_RCProtocol_Joystick_SFML","boundary degenerate small-class","AP_RCProtocol_Joystick_SFML::update","wrapper stateless",
"AP_Winch_PWM","commander","get_current_length","get",
"AP_Winch_PWM","commander","AP_Winch_PWM::healthy","wrapper stateless",
"AP_Winch_PWM","commander","AP_Winch_PWM::update","command",
"AP_Winch_PWM","commander","AP_Winch_PWM::control_winch","command",
"AP_Winch_PWM","commander","AP_Winch_PWM::send_status","command collaborator",
"AP_Winch_PWM","commander","AP_Winch_PWM::write_log","command",
"AP_RangeFinder_Params","empty","AP_RangeFinder_Params::AP_RangeFinder_Params","constructor",
"AP_RangeFinder_PulsedLightLRF","degenerate","update","empty",
"AP_RangeFinder_PulsedLightLRF","degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_PulsedLightLRF","degenerate","AP_RangeFinder_PulsedLightLRF::AP_RangeFinder_PulsedLightLRF","constructor",
"AP_RangeFinder_PulsedLightLRF","degenerate","AP_RangeFinder_PulsedLightLRF::detect","controller stateless",
"AP_RangeFinder_PulsedLightLRF","degenerate","AP_RangeFinder_PulsedLightLRF::timer","command",
"AP_RangeFinder_PulsedLightLRF","degenerate","AP_RangeFinder_PulsedLightLRF::init","predicate non-void-command",
"AP_Mount_Xacti","boundary","has_pan_control","wrapper stateless",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::AP_Mount_Xacti","constructor",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::init","command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::update","command collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::healthy","predicate wrapper",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::take_picture","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::record_video","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::set_zoom","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::set_focus","property non-void-command collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::set_lens","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::set_camera_source","predicate non-void-command collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::send_camera_information","wrapper",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::send_camera_settings","wrapper",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::get_attitude_quaternion","predicate collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::send_target_rates","command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::send_target_angles","command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::subscribe_msgs","set collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::register_backend","command collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::get_dronecan_backend","property controller",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::handle_gimbal_attitude_status","command collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::handle_gnss_status_req","controller stateless",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::handle_param_get_set_response_int","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::handle_param_get_set_response_string","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::handle_param_save_response","wrapper",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::get_param_name_str","get property wrapper",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::set_param_int32","predicate controller",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::set_param_string","predicate set",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::get_param_string","predicate set collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::process_set_param_int32_queue","predicate set",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::send_gimbal_control","set collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::send_copter_att_status","predicate set collaborator",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::update_zoom_rate_control","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::request_firmware_version","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::request_capabilities","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::set_datetime","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::request_status","predicate non-void-command",
"AP_Mount_Xacti","boundary","AP_Mount_Xacti::is_safe_to_send","predicate",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::AP_AK8963_BusDriver_Auxiliary","constructor",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::~AP_AK8963_BusDriver_Auxiliary","destructor",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::block_read","predicate non-void-command",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::register_read","predicate non-void-command",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::register_write","predicate non-void-command",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::get_semaphore","property non-void-command collaborator",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::configure","predicate",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::start_measurements","predicate set",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::register_periodic_callback","property non-void-command collaborator",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::set_device_type","command",
"AP_AK8963_BusDriver_Auxiliary","unclassified","AP_AK8963_BusDriver_Auxiliary::get_bus_id","property",
"BinarySemTest","commander","BinarySemTest::setup","controller stateless",
"BinarySemTest","commander","BinarySemTest::thread2","command",
"BinarySemTest","commander","BinarySemTest::thread1","command",
"BinarySemTest","commander","BinarySemTest::update","command",
"AP_RangeFinder_RDS02UF","lazy-class degenerate","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_RDS02UF","lazy-class degenerate","read_timeout_ms","incidental",
"AP_RangeFinder_RDS02UF","lazy-class degenerate","max_distance_cm","wrapper stateless",
"AP_RangeFinder_RDS02UF","lazy-class degenerate","min_distance_cm","wrapper stateless",
"AP_RangeFinder_RDS02UF","lazy-class degenerate","AP_RangeFinder_RDS02UF::get_reading","predicate non-void-command",
"AP_RangeFinder_RDS02UF","lazy-class degenerate","AP_RangeFinder_RDS02UF::move_header_in_buffer","set",
"AP_RangeFinder_TOFSenseP_CAN","entity boundary small-class","AP_RangeFinder_TOFSenseP_CAN","constructor",
"AP_RangeFinder_TOFSenseP_CAN","entity boundary small-class","AP_RangeFinder_TOFSenseP_CAN::handle_frame","predicate non-void-command collaborator",
"AP_RangeFinder_TeraRangerI2C","unclassified","_get_mav_distance_sensor_type","collaborator incidental",
"AP_RangeFinder_TeraRangerI2C","unclassified","AP_RangeFinder_TeraRangerI2C::AP_RangeFinder_TeraRangerI2C","constructor",
"AP_RangeFinder_TeraRangerI2C","unclassified","AP_RangeFinder_TeraRangerI2C::detect","controller stateless",
"AP_RangeFinder_TeraRangerI2C","unclassified","AP_RangeFinder_TeraRangerI2C::init","predicate non-void-command",
"AP_RangeFinder_TeraRangerI2C","unclassified","AP_RangeFinder_TeraRangerI2C::measure","predicate non-void-command",
"AP_RangeFinder_TeraRangerI2C","unclassified","AP_RangeFinder_TeraRangerI2C::collect_raw","predicate non-void-command",
"AP_RangeFinder_TeraRangerI2C","unclassified","AP_RangeFinder_TeraRangerI2C::process_raw_measure","wrapper stateless",
"AP_RangeFinder_TeraRangerI2C","unclassified","AP_RangeFinder_TeraRangerI2C::timer","command",
"AP_RangeFinder_TeraRangerI2C","unclassified","AP_RangeFinder_TeraRangerI2C::update","command",
"AP_Relay","boundary","on","command",
"AP_Relay","boundary","off","command",
"AP_Relay","boundary","init","empty",
"AP_Relay","boundary","init","wrapper stateless",
"AP_Relay","boundary","init","wrapper stateless",
"AP_Relay","boundary","AP_Relay::AP_Relay","constructor",
"AP_Relay","boundary","AP_Relay::convert_params","controller",
"AP_Relay","boundary","AP_Relay::set_defaults","controller",
"AP_Relay","boundary","AP_Relay::function_valid","collaborator incidental",
"AP_Relay","boundary","AP_Relay::init","command collaborator",
"AP_Relay","boundary","AP_Relay::set","command",
"AP_Relay","boundary","AP_Relay::set_pin_by_instance","command",
"AP_Relay","boundary","AP_Relay::set","command",
"AP_Relay","boundary","AP_Relay::toggle","command",
"AP_Relay","boundary","AP_Relay::arming_checks","predicate",
"AP_Relay","boundary","AP_Relay::get","predicate",
"AP_Relay","boundary","AP_Relay::get_pin","controller stateless",
"AP_Relay","boundary","AP_Relay::set_pin","controller stateless",
"AP_Relay","boundary","AP_Relay::enabled","predicate wrapper",
"AP_Relay","boundary","AP_Relay::enabled","predicate wrapper",
"AP_Relay","boundary","AP_Relay::send_relay_status","predicate collaborator",
"AP_DroneCAN","commander boundary","get_driver_index","get",
"AP_DroneCAN","commander boundary","option_is_set","predicate collaborator",
"AP_DroneCAN","commander boundary","get_canard_iface","get collaborator",
"AP_DroneCAN","commander boundary","handle_restart_node_response","empty",
"AP_DroneCAN","commander boundary","AP_DroneCAN::AP_DroneCAN","constructor",
"AP_DroneCAN","commander boundary","AP_DroneCAN::~AP_DroneCAN","destructor",
"AP_DroneCAN","commander boundary","AP_DroneCAN::get_dronecan","wrapper stateless",
"AP_DroneCAN","commander boundary","AP_DroneCAN::add_interface","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::init","command",
"AP_DroneCAN","commander boundary","AP_DroneCAN::loop","command",
"AP_DroneCAN","commander boundary","AP_DroneCAN::hobbywing_ESC_update","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_hobbywing_GetEscID","collaborator incidental",
"AP_DroneCAN","commander boundary","AP_DroneCAN::hobbywing_find_esc_index","predicate",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_hobbywing_StatusMsg1","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_hobbywing_StatusMsg2","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::send_node_status","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_node_info_request","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::scale_esc_output","property controller",
"AP_DroneCAN","commander boundary","AP_DroneCAN::SRV_send_actuator","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::SRV_send_himark","command",
"AP_DroneCAN","commander boundary","AP_DroneCAN::SRV_send_esc","command",
"AP_DroneCAN","commander boundary","AP_DroneCAN::SRV_send_esc_hobbywing","command",
"AP_DroneCAN","commander boundary","AP_DroneCAN::SRV_push_servos","command",
"AP_DroneCAN","commander boundary","AP_DroneCAN::notify_state_send","set",
"AP_DroneCAN","commander boundary","AP_DroneCAN::gnss_send_fix","command",
"AP_DroneCAN","commander boundary","AP_DroneCAN::gnss_send_yaw","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::safety_state_send","collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::relay_hardpoint_send","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_button","controller stateless",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_traffic_report","controller stateless",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_actuator_status","wrapper stateless",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_himark_servoinfo","wrapper stateless",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_actuator_status_Volz","wrapper stateless",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_ESC_status","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::is_esc_data_index_valid","incidental",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_debug","wrapper stateless",
"AP_DroneCAN","commander boundary","AP_DroneCAN::check_parameter_callback_timeout","command",
"AP_DroneCAN","commander boundary","AP_DroneCAN::send_parameter_request","set",
"AP_DroneCAN","commander boundary","AP_DroneCAN::set_parameter_on_node","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::set_parameter_on_node","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::set_parameter_on_node","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::get_parameter_on_node","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::get_parameter_on_node","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::get_parameter_on_node","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_param_get_set_response","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::send_parameter_save_request","set",
"AP_DroneCAN","commander boundary","AP_DroneCAN::save_parameters_on_node","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::handle_param_save_response","set collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::send_reboot_request","command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::check_and_reset_option","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::prearm_check","predicate",
"AP_DroneCAN","commander boundary","AP_DroneCAN::logging","set collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::add_11bit_driver","predicate non-void-command collaborator",
"AP_DroneCAN","commander boundary","AP_DroneCAN::write_aux_frame","predicate non-void-command",
"AP_Relay_Params","empty","AP_Relay_Params::AP_Relay_Params","constructor",
"AP_RobotisServo","commander","update","wrapper stateless",
"AP_RobotisServo","commander","AP_RobotisServo::AP_RobotisServo","constructor",
"AP_RobotisServo","commander","AP_RobotisServo::init","command collaborator",
"AP_RobotisServo","commander","AP_RobotisServo::add_stuffing","wrapper stateless",
"AP_RobotisServo","commander","AP_RobotisServo::send_packet","void-accessor command",
"AP_RobotisServo","commander","AP_RobotisServo::detect_servos","command",
"AP_RobotisServo","commander","AP_RobotisServo::configure_servos","command",
"AP_RobotisServo","commander","AP_RobotisServo::send_command","command",
"AP_RobotisServo","commander","AP_RobotisServo::read_bytes","command",
"AP_RobotisServo","commander","AP_RobotisServo::process_packet","set",
"AP_RobotisServo","commander","AP_RobotisServo::update","command",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","empty",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","empty",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","empty",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","wrapper stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","SchedTest::setup","command",
"SchedTest","controller lazy-class degenerate","SchedTest::loop","command",
"SchedTest","controller lazy-class degenerate","SchedTest::ins_update","set",
"SchedTest","controller lazy-class degenerate","SchedTest::one_hz_print","set",
"SchedTest","controller lazy-class degenerate","SchedTest::five_second_call","set",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","empty",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","empty",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","incidental",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","incidental",
"SchedTest","controller lazy-class degenerate","setup","controller stateless",
"SchedTest","controller lazy-class degenerate","loop","controller stateless",
"HAL_ESP32","pure-controller degenerate small-class","HAL_ESP32::HAL_ESP32","constructor",
"HAL_ESP32","pure-controller degenerate small-class","HAL_ESP32::run","controller stateless",
"ScriptingCANBuffer","unclassified","ScriptingCANBuffer","constructor",
"ScriptingCANBuffer","unclassified","ScriptingCANBuffer::write_frame","predicate non-void-command",
"ScriptingCANBuffer","unclassified","ScriptingCANBuffer::read_frame","predicate non-void-command collaborator",
"ScriptingCANBuffer","unclassified","ScriptingCANBuffer::handle_frame","command collaborator",
"ScriptingCANBuffer","unclassified","ScriptingCANBuffer::add_buffer","set",
"ScriptingCANBuffer","unclassified","ScriptingCANBuffer::add_filter","predicate set",
"DeviceBus","boundary","DeviceBus::DeviceBus","constructor",
"DeviceBus","boundary","DeviceBus::DeviceBus","constructor",
"DeviceBus","boundary","DeviceBus::bus_thread","controller stateless",
"DeviceBus","boundary","DeviceBus::register_periodic_callback","property non-void-command collaborator",
"DeviceBus","boundary","DeviceBus::adjust_timer","predicate wrapper",
"DeviceBus","boundary","DeviceBus::bouncebuffer_setup","predicate wrapper",
"DeviceBus","boundary","DeviceBus::bouncebuffer_finish","wrapper",
"DeviceBus","boundary","DeviceBus::DeviceBus","constructor",
"DeviceBus","boundary","DeviceBus::bus_thread","controller stateless",
"DeviceBus","boundary","DeviceBus::register_periodic_callback","property non-void-command collaborator",
"DeviceBus","boundary","DeviceBus::adjust_timer","wrapper stateless",
"TimeCheck","empty","TimeCheck::TimeCheck","constructor",
"TimeCheck","empty","TimeCheck::~TimeCheck","destructor",
"AP_LeakDetector_Analog","small-class","AP_LeakDetector_Analog::AP_LeakDetector_Analog","constructor",
"AP_LeakDetector_Analog","small-class","AP_LeakDetector_Analog::read","unclassified",
"AP_DDS_External_Odom","commander boundary degenerate","AP_DDS_External_Odom::handle_external_odom","command collaborator",
"AP_DDS_External_Odom","commander boundary degenerate","AP_DDS_External_Odom::is_odometry_frame","wrapper stateless",
"AP_DDS_External_Odom","commander boundary degenerate","AP_DDS_External_Odom::convert_transform","collaborator incidental",
"ModeMotordetect","pure-controller degenerate","requires_GPS","incidental",
"ModeMotordetect","pure-controller degenerate","has_manual_throttle","incidental",
"ModeMotordetect","pure-controller degenerate","allows_arming","incidental",
"ModeMotordetect","pure-controller degenerate","is_autopilot","incidental",
"ModeMotordetect","pure-controller degenerate","name","incidental",
"ModeMotordetect","pure-controller degenerate","name4","incidental",
"ModeMotordetect","pure-controller degenerate","ModeMotordetect::init","incidental",
"ModeMotordetect","pure-controller degenerate","ModeMotordetect::run","controller stateless",
"AP_OABendyRuler","unclassified","set_config","set",
"AP_OABendyRuler","unclassified","Write_OABendyRuler","empty",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::Write_OABendyRuler","controller stateless",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::AP_OABendyRuler","constructor",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::update","predicate non-void-command",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::search_xy_path","predicate",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::search_vertical_path","predicate",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::get_type","property collaborator",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::resist_bearing_change","predicate",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::calc_avoidance_margin","property",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::calc_margin_from_circular_fence","controller stateless",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::calc_margin_from_alt_fence","controller stateless",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::calc_margin_from_inclusion_and_exclusion_polygons","controller stateless",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::calc_margin_from_inclusion_and_exclusion_circles","controller stateless",
"AP_OABendyRuler","unclassified","AP_OABendyRuler::calc_margin_from_object_database","controller stateless",
"AP_Enum16","degenerate small-class","operatorconsteclass","incidental",
"AP_Enum16","degenerate small-class","set","wrapper stateless",
"AP_Torqeedo_TQBus","commander","clear_motor_error","set",
"AP_Torqeedo_TQBus","commander","safe_to_send","predicate",
"AP_Torqeedo_TQBus","commander","get_motor_speed_limited","property",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::init","controller",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::healthy","predicate wrapper",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::init_internals","predicate collaborator",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::thread_main","command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::map_master_error_code_to_string","incidental",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::report_error_codes","command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::get_batt_info","wrapper stateless",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::get_batt_capacity_Ah","incidental",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::parse_byte","predicate non-void-command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::parse_message","command collaborator",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::send_start","command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::check_for_send_end","set",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::calc_send_delay_us","incidental",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::set_expected_reply_msgid","command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::check_for_reply_timeout","command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::set_reply_received","set",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::send_message","predicate non-void-command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::add_byte_to_message","incidental",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::send_motor_speed_cmd","command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::send_motor_msg_request","command collaborator",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::calc_motor_speed_limited","property non-void-command",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::log_TRQD","unclassified",
"AP_Torqeedo_TQBus","commander","AP_Torqeedo_TQBus::update_esc_telem","command collaborator",
"lua_scripts","entity boundary","heap_allocated","predicate",
"lua_scripts","entity boundary","lua_scripts::lua_scripts","constructor",
"lua_scripts","entity boundary","lua_scripts::~lua_scripts","destructor",
"lua_scripts","entity boundary","lua_scripts::hook","set collaborator",
"lua_scripts","entity boundary","lua_scripts::print_error","collaborator",
"lua_scripts","entity boundary","lua_scripts::set_and_print_new_error_message","command",
"lua_scripts","entity boundary","lua_scripts::atpanic","property wrapper",
"lua_scripts","entity boundary","lua_scripts::update_stats","command",
"lua_scripts","entity boundary","lua_scripts::load_script","property non-void-command factory collaborator",
"lua_scripts","entity boundary","lua_scripts::create_sandbox","wrapper stateless",
"lua_scripts","entity boundary","lua_scripts::load_all_scripts_in_dir","command collaborator",
"lua_scripts","entity boundary","lua_scripts::reset_loop_overtime","set collaborator",
"lua_scripts","entity boundary","lua_scripts::run_next_script","collaborator",
"lua_scripts","entity boundary","lua_scripts::remove_script","command collaborator",
"lua_scripts","entity boundary","lua_scripts::reschedule_script","void-accessor set collaborator",
"lua_scripts","entity boundary","lua_scripts::alloc","property command collaborator",
"lua_scripts","entity boundary","lua_scripts::run","command",
"lua_scripts","entity boundary","lua_scripts::get_loaded_checksum","get wrapper",
"lua_scripts","entity boundary","lua_scripts::get_running_checksum","get wrapper",
"AP_ServoRelayEvents","boundary","AP_ServoRelayEvents","constructor",
"AP_ServoRelayEvents","boundary","AP_ServoRelayEvents::do_set_servo","predicate set",
"AP_ServoRelayEvents","boundary","AP_ServoRelayEvents::do_set_relay","predicate set collaborator",
"AP_ServoRelayEvents","boundary","AP_ServoRelayEvents::do_repeat_servo","predicate non-void-command",
"AP_ServoRelayEvents","boundary","AP_ServoRelayEvents::do_repeat_relay","predicate non-void-command collaborator",
"AP_ServoRelayEvents","boundary","AP_ServoRelayEvents::update_events","command collaborator",
"SoaringController","unclassified","get_throttle_suppressed","get",
"SoaringController","unclassified","get_vario_reading","property",
"SoaringController","unclassified","is_active","predicate",
"SoaringController","unclassified","set_pilot_desired_state","set collaborator",
"SoaringController","unclassified","get_alt_cutoff","get",
"SoaringController","unclassified","get_circling_time","get",
"SoaringController","unclassified","get_thermalling_flap","get",
"SoaringController","unclassified","SoaringController::SoaringController","constructor",
"SoaringController","unclassified","SoaringController::get_target","void-accessor command collaborator",
"SoaringController","unclassified","SoaringController::suppress_throttle","get non-void-command",
"SoaringController","unclassified","SoaringController::check_thermal_criteria","predicate non-void-command",
"SoaringController","unclassified","SoaringController::check_cruise_criteria","property non-void-command collaborator",
"SoaringController","unclassified","SoaringController::init_thermalling","command collaborator",
"SoaringController","unclassified","SoaringController::init_cruising","set",
"SoaringController","unclassified","SoaringController::update_thermalling","command collaborator",
"SoaringController","unclassified","SoaringController::update_cruising","command",
"SoaringController","unclassified","SoaringController::update_vario","command",
"SoaringController","unclassified","SoaringController::McCready","get",
"SoaringController","unclassified","SoaringController::active_state","get property collaborator",
"SoaringController","unclassified","SoaringController::update_active_state","command",
"SoaringController","unclassified","SoaringController::set_throttle_suppressed","set",
"SoaringController","unclassified","SoaringController::check_drift","predicate controller",
"SoaringController","unclassified","SoaringController::get_thermalling_radius","property",
"SoaringController","unclassified","SoaringController::get_thermalling_target_airspeed","get",
"SoaringController","unclassified","SoaringController::get_cruising_target_airspeed","get property non-void-command",
"SpeedToFly","small-class","SpeedToFly","constructor",
"SpeedToFly","small-class","speed_to_fly","property wrapper",
"SpeedToFly","small-class","SpeedToFly::update","set",
"AP_Winch","unclassified","relax","incidental",
"AP_Winch","unclassified","get_rate_max","wrapper stateless",
"AP_Winch","unclassified","update","wrapper stateless",
"AP_Winch","unclassified","init","empty",
"AP_Winch","unclassified","init","wrapper stateless",
"AP_Winch","unclassified","init","wrapper stateless",
"AP_Winch","unclassified","AP_Winch::AP_Winch","constructor",
"AP_Winch","unclassified","AP_Winch::enabled","predicate",
"AP_Winch","unclassified","AP_Winch::healthy","predicate",
"AP_Winch","unclassified","AP_Winch::init","command",
"AP_Winch","unclassified","AP_Winch::release_length","command",
"AP_Winch","unclassified","AP_Winch::set_desired_rate","command",
"AP_Winch","unclassified","AP_Winch::send_status","command collaborator",
"AP_Winch","unclassified","AP_Winch::pre_arm_check","predicate",
"AP_Winch","unclassified","AP_Winch::get_singleton","get",
"Variometer","data-provider","reset_climb_filter","command",
"Variometer","data-provider","reset_trigger_filter","command",
"Variometer","data-provider","get_airspeed","get",
"Variometer","data-provider","get_displayed_value","property",
"Variometer","data-provider","get_filtered_climb","property",
"Variometer","data-provider","get_trigger_value","property",
"Variometer","data-provider","get_stf_value","property",
"Variometer","data-provider","get_exp_thermalling_sink","get",
"Variometer","data-provider","Variometer::Variometer","constructor",
"Variometer","data-provider","Variometer::update","command",
"Variometer","data-provider","Variometer::calculate_aircraft_sinkrate","property",
"Variometer","data-provider","Variometer::calculate_circling_time_constant","property wrapper",
"AP_SurfaceDistance","data-provider","AP_SurfaceDistance","constructor",
"AP_SurfaceDistance","data-provider","update","wrapper stateless",
"AP_SurfaceDistance","data-provider","AP_SurfaceDistance::update","command",
"AP_SurfaceDistance","data-provider","AP_SurfaceDistance::get_rangefinder_height_interpolated_cm","predicate",
"AP_SurfaceDistance","data-provider","AP_SurfaceDistance::Log_Write","unclassified",
"AP_SurfaceDistance","data-provider","AP_SurfaceDistance::data_stale","predicate wrapper",
"AP_SurfaceDistance","data-provider","AP_SurfaceDistance::enabled_and_healthy","predicate",
"AP_TemperatureSensor_Backend","boundary","init","empty",
"AP_TemperatureSensor_Backend","boundary","AP_TemperatureSensor_Backend::AP_TemperatureSensor_Backend","constructor",
"AP_TemperatureSensor_Backend","boundary","AP_TemperatureSensor_Backend::healthy","predicate wrapper",
"AP_TemperatureSensor_Backend","boundary","AP_TemperatureSensor_Backend::Log_Write_TEMP","wrapper",
"AP_TemperatureSensor_Backend","boundary","AP_TemperatureSensor_Backend::set_temperature","command",
"AP_TemperatureSensor_Backend","boundary","AP_TemperatureSensor_Backend::update_external_libraries","command collaborator",
"AP_TemperatureSensor_DroneCAN","degenerate","update","empty",
"AP_TemperatureSensor_DroneCAN","degenerate","AP_TemperatureSensor_DroneCAN::AP_TemperatureSensor_DroneCAN","constructor",
"AP_TemperatureSensor_DroneCAN","degenerate","AP_TemperatureSensor_DroneCAN::subscribe_msgs","controller stateless",
"AP_TemperatureSensor_DroneCAN","degenerate","AP_TemperatureSensor_DroneCAN::handle_temperature","command collaborator",
"AP_SmartRTL","boundary","is_active","get",
"AP_SmartRTL","boundary","get_point","get collaborator",
"AP_SmartRTL","boundary","log_action","empty",
"AP_SmartRTL","boundary","init","empty",
"AP_SmartRTL","boundary","init","wrapper stateless",
"AP_SmartRTL","boundary","init","wrapper stateless",
"AP_SmartRTL","boundary","AP_SmartRTL::AP_SmartRTL","constructor",
"AP_SmartRTL","boundary","AP_SmartRTL::init","command",
"AP_SmartRTL","boundary","AP_SmartRTL::get_num_points","get",
"AP_SmartRTL","boundary","AP_SmartRTL::pop_point","predicate non-void-command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::peek_point","predicate non-void-command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::set_home","command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::set_home","command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::update","command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::update","command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::request_thorough_cleanup","predicate non-void-command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::cancel_request_for_thorough_cleanup","set",
"AP_SmartRTL","boundary","AP_SmartRTL::add_point","predicate non-void-command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::run_background_cleanup","command",
"AP_SmartRTL","boundary","AP_SmartRTL::routine_cleanup","command",
"AP_SmartRTL","boundary","AP_SmartRTL::thorough_cleanup","predicate non-void-command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::detect_simplifications","controller",
"AP_SmartRTL","boundary","AP_SmartRTL::detect_loops","command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::restart_simplify_if_new_points","command",
"AP_SmartRTL","boundary","AP_SmartRTL::restart_pruning_if_new_points","command",
"AP_SmartRTL","boundary","AP_SmartRTL::restart_simplification","controller stateless",
"AP_SmartRTL","boundary","AP_SmartRTL::reset_simplification","command",
"AP_SmartRTL","boundary","AP_SmartRTL::restart_pruning","incidental",
"AP_SmartRTL","boundary","AP_SmartRTL::reset_pruning","command",
"AP_SmartRTL","boundary","AP_SmartRTL::remove_points_by_simplify_bitmask","command",
"AP_SmartRTL","boundary","AP_SmartRTL::remove_points_by_loops","predicate non-void-command",
"AP_SmartRTL","boundary","AP_SmartRTL::add_loop","predicate non-void-command collaborator",
"AP_SmartRTL","boundary","AP_SmartRTL::segment_segment_dist","controller stateless",
"AP_SmartRTL","boundary","AP_SmartRTL::deactivate","set",
"AP_SmartRTL","boundary","AP_SmartRTL::log_action","wrapper",
"AP_SmartRTL","boundary","AP_SmartRTL::loops_overlap","collaborator incidental",
"AP_SmartRTL","boundary","AP_SmartRTL::use_pilot_yaw","predicate",
"AP_TemperatureSensor_TSYS03","commander","update","empty",
"AP_TemperatureSensor_TSYS03","commander","AP_TemperatureSensor_TSYS03::init","command",
"AP_TemperatureSensor_TSYS03","commander","AP_TemperatureSensor_TSYS03::read_adc","property",
"AP_TemperatureSensor_TSYS03","commander","AP_TemperatureSensor_TSYS03::_timer","command",
"AP_TemperatureSensor_TSYS03","commander","AP_TemperatureSensor_TSYS03::start_next_sample","command",
"AP_TemperatureSensor_TSYS03","commander","AP_TemperatureSensor_TSYS03::calculate","wrapper stateless",
"AP_Torqeedo_Backend","data-provider boundary small-class","get_type","property collaborator",
"AP_Torqeedo_Backend","data-provider boundary small-class","option_enabled","predicate collaborator",
"AP_Torqeedo_Backend","data-provider boundary small-class","AP_Torqeedo_Backend::AP_Torqeedo_Backend","constructor",
"AP_SmartAudio","lazy-class degenerate","ignore_crc","wrapper stateless",
"AP_SmartAudio","lazy-class degenerate","set_configuration_pending","set",
"AP_SmartAudio","lazy-class degenerate","is_configuration_pending","get",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","wrapper stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::AP_SmartAudio","constructor",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::init","predicate",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::loop","command collaborator",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::update_vtx_params","command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::send_request","command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::read_response","predicate non-void-command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::push_command_only_frame","command collaborator",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::push_uint8_command_frame","command collaborator",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::push_uint16_command_frame","command collaborator",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::request_settings","command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::set_operation_mode","command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::set_frequency","command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::set_channel","command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::request_pit_mode_frequency","command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::set_power","command",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::set_band_channel","wrapper stateless",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::unpack_frequency","incidental",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::unpack_settings","void-accessor command collaborator",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::unpack_settings","void-accessor command collaborator",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::print_bytes_to_hex_string","controller stateless",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::print_settings","wrapper stateless",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::update_vtx_settings","command collaborator",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::parse_response_buffer","predicate",
"AP_SmartAudio","lazy-class degenerate","AP_SmartAudio::update_baud_rate","command",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","empty",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_SmartAudio","lazy-class degenerate","loop","incidental",
"AP_SmartAudio","lazy-class degenerate","loop","incidental",
"AP_SmartAudio","lazy-class degenerate","loop","controller stateless",
"AP_WindVane_ModernDevice","commander small-class","AP_WindVane_ModernDevice::AP_WindVane_ModernDevice","constructor",
"AP_WindVane_ModernDevice","commander small-class","AP_WindVane_ModernDevice::update_speed","command",
"AP_WindVane_ModernDevice","commander small-class","AP_WindVane_ModernDevice::calibrate","command",
"AP_VideoTX","unclassified","set_frequency_mhz","set",
"AP_VideoTX","unclassified","set_configured_frequency_mhz","command",
"AP_VideoTX","unclassified","get_frequency_mhz","get",
"AP_VideoTX","unclassified","get_configured_frequency_mhz","get",
"AP_VideoTX","unclassified","update_frequency","predicate",
"AP_VideoTX","unclassified","get_configured_power_mw","get",
"AP_VideoTX","unclassified","get_power_mw","get",
"AP_VideoTX","unclassified","get_configured_power_dbm","get",
"AP_VideoTX","unclassified","get_configured_power_level","get",
"AP_VideoTX","unclassified","get_configured_power_dac","get",
"AP_VideoTX","unclassified","set_band","set",
"AP_VideoTX","unclassified","set_configured_band","command",
"AP_VideoTX","unclassified","get_configured_band","get",
"AP_VideoTX","unclassified","get_band","get",
"AP_VideoTX","unclassified","update_band","predicate",
"AP_VideoTX","unclassified","set_channel","set",
"AP_VideoTX","unclassified","set_configured_channel","command",
"AP_VideoTX","unclassified","get_configured_channel","get",
"AP_VideoTX","unclassified","get_channel","get",
"AP_VideoTX","unclassified","update_channel","predicate",
"AP_VideoTX","unclassified","set_options","set",
"AP_VideoTX","unclassified","set_configured_options","command",
"AP_VideoTX","unclassified","get_configured_options","get",
"AP_VideoTX","unclassified","get_options","get",
"AP_VideoTX","unclassified","has_option","predicate collaborator",
"AP_VideoTX","unclassified","get_configured_pitmode","predicate",
"AP_VideoTX","unclassified","get_pitmode","predicate wrapper",
"AP_VideoTX","unclassified","get_enabled","get",
"AP_VideoTX","unclassified","update_enabled","predicate",
"AP_VideoTX","unclassified","set_options_are_current","set",
"AP_VideoTX","unclassified","set_configuration_finished","set",
"AP_VideoTX","unclassified","is_configuration_finished","get",
"AP_VideoTX","unclassified","is_provider_enabled","predicate collaborator",
"AP_VideoTX","unclassified","set_provider_enabled","set collaborator",
"AP_VideoTX","unclassified","update","wrapper stateless",
"AP_VideoTX","unclassified","AP_VideoTX::AP_VideoTX","constructor",
"AP_VideoTX","unclassified","AP_VideoTX::~AP_VideoTX","destructor",
"AP_VideoTX","unclassified","AP_VideoTX::init","predicate non-void-command",
"AP_VideoTX","unclassified","AP_VideoTX::get_band_and_channel","predicate wrapper",
"AP_VideoTX","unclassified","AP_VideoTX::set_configured_power_mw","command",
"AP_VideoTX","unclassified","AP_VideoTX::find_current_power","property",
"AP_VideoTX","unclassified","AP_VideoTX::set_power_dbm","set collaborator",
"AP_VideoTX","unclassified","AP_VideoTX::update_power_dbm","property wrapper",
"AP_VideoTX","unclassified","AP_VideoTX::update_all_power_dbm","command",
"AP_VideoTX","unclassified","AP_VideoTX::set_power_mw","set",
"AP_VideoTX","unclassified","AP_VideoTX::set_power_level","set collaborator",
"AP_VideoTX","unclassified","AP_VideoTX::set_power_dac","set collaborator",
"AP_VideoTX","unclassified","AP_VideoTX::set_enabled","unclassified",
"AP_VideoTX","unclassified","AP_VideoTX::set_power_is_current","command",
"AP_VideoTX","unclassified","AP_VideoTX::set_freq_is_current","command",
"AP_VideoTX","unclassified","AP_VideoTX::update","command",
"AP_VideoTX","unclassified","AP_VideoTX::update_options","predicate wrapper",
"AP_VideoTX","unclassified","AP_VideoTX::update_power","predicate",
"AP_VideoTX","unclassified","AP_VideoTX::have_params_changed","predicate",
"AP_VideoTX","unclassified","AP_VideoTX::update_configured_frequency","command",
"AP_VideoTX","unclassified","AP_VideoTX::update_configured_channel_and_band","command",
"AP_VideoTX","unclassified","AP_VideoTX::set_defaults","predicate non-void-command",
"AP_VideoTX","unclassified","AP_VideoTX::announce_vtx_settings","unclassified",
"AP_VideoTX","unclassified","AP_VideoTX::change_power","command",
"AP_VisualOdom","unclassified","get_orientation","property collaborator",
"AP_VisualOdom","unclassified","get_pos_scale","get",
"AP_VisualOdom","unclassified","get_pos_offset","get collaborator",
"AP_VisualOdom","unclassified","get_delay_ms","property wrapper",
"AP_VisualOdom","unclassified","get_vel_noise","get",
"AP_VisualOdom","unclassified","get_pos_noise","get",
"AP_VisualOdom","unclassified","get_yaw_noise","get",
"AP_VisualOdom","unclassified","get_quality_min","get",
"AP_VisualOdom","unclassified","get_type","get collaborator",
"AP_VisualOdom","unclassified","init","empty",
"AP_VisualOdom","unclassified","init","wrapper stateless",
"AP_VisualOdom","unclassified","init","wrapper stateless",
"AP_VisualOdom","unclassified","AP_VisualOdom::AP_VisualOdom","constructor",
"AP_VisualOdom","unclassified","AP_VisualOdom::init","set",
"AP_VisualOdom","unclassified","AP_VisualOdom::enabled","predicate",
"AP_VisualOdom","unclassified","AP_VisualOdom::healthy","predicate",
"AP_VisualOdom","unclassified","AP_VisualOdom::quality","property",
"AP_VisualOdom","unclassified","AP_VisualOdom::handle_vision_position_delta_msg","command collaborator",
"AP_VisualOdom","unclassified","AP_VisualOdom::handle_pose_estimate","command collaborator",
"AP_VisualOdom","unclassified","AP_VisualOdom::handle_pose_estimate","command",
"AP_VisualOdom","unclassified","AP_VisualOdom::handle_vision_speed_estimate","command",
"AP_VisualOdom","unclassified","AP_VisualOdom::request_align_yaw_to_ahrs","command",
"AP_VisualOdom","unclassified","AP_VisualOdom::align_position_to_ahrs","command",
"AP_VisualOdom","unclassified","AP_VisualOdom::pre_arm_check","predicate",
"BalanceBot","entity boundary small-class","BalanceBot::BalanceBot","constructor",
"BalanceBot","entity boundary small-class","BalanceBot::calc_yaw_rate","property wrapper",
"BalanceBot","entity boundary small-class","BalanceBot::update","command collaborator",
"AP_VisualOdom_IntelT265","boundary","request_align_yaw_to_ahrs","set",
"AP_VisualOdom_IntelT265","boundary","align_position_to_ahrs","command",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::handle_pose_estimate","command",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::handle_vision_speed_estimate","command",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::rotate_and_correct_position","void-accessor collaborator",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::rotate_velocity","void-accessor collaborator",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::rotate_attitude","void-accessor wrapper",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::align_yaw_to_ahrs","predicate non-void-command collaborator",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::align_yaw","command collaborator",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::align_position_to_ahrs","predicate non-void-command collaborator",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::align_position","command collaborator",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::pre_arm_check","predicate controller",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::should_consume_sensor_data","predicate non-void-command",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::record_voxl_position_and_reset_count","command",
"AP_VisualOdom_IntelT265","boundary","AP_VisualOdom_IntelT265::handle_voxl_camera_reset_jump","unclassified",
"AP_Winch_Backend","unclassified","AP_Winch_Backend","constructor",
"AP_Winch_Backend","unclassified","option_enabled","predicate wrapper",
"AP_Winch_Backend","unclassified","set_previous_rate","set",
"AP_Winch_Backend","unclassified","AP_Winch_Backend::init","controller stateless",
"AP_Winch_Backend","unclassified","AP_Winch_Backend::read_pilot_desired_rate","command",
"AP_Winch_Backend","unclassified","AP_Winch_Backend::get_rate_limited_by_accel","property non-void-command",
"AP_CANManager","boundary","get_num_drivers","incidental",
"AP_CANManager","boundary","get_driver","get property wrapper",
"AP_CANManager","boundary","get_log_level","property collaborator",
"AP_CANManager","boundary","get_driver_type","get property wrapper",
"AP_CANManager","boundary","AP_CANManager::AP_CANManager","constructor",
"AP_CANManager","boundary","AP_CANManager::init","command",
"AP_CANManager","boundary","AP_CANManager::init","command",
"AP_CANManager","boundary","AP_CANManager::register_driver","predicate non-void-command collaborator",
"AP_CANManager","boundary","AP_CANManager::register_11bit_driver","predicate controller",
"AP_CANManager","boundary","AP_CANManager::log_text","set collaborator",
"AP_CANManager","boundary","AP_CANManager::log_retrieve","controller",
"AP_CANManager","boundary","AP_CANManager::handle_can_forward","controller stateless",
"AP_CANManager","boundary","AP_CANManager::handle_can_frame","command collaborator",
"AP_CANManager","boundary","AP_CANManager::process_frame_buffer","command",
"AP_CANManager","boundary","AP_CANManager::handle_can_filter_modify","wrapper stateless",
"AP_CANManager","boundary","AP_CANManager::can_frame_callback","controller stateless",
"AP_WindVane_NMEA","commander","update","wrapper stateless",
"AP_WindVane_NMEA","commander","AP_WindVane_NMEA::init","set collaborator",
"AP_WindVane_NMEA","commander","AP_WindVane_NMEA::update_direction","command",
"AP_WindVane_NMEA","commander","AP_WindVane_NMEA::update_speed","command",
"AP_WindVane_NMEA","commander","AP_WindVane_NMEA::update","command",
"AP_WindVane_NMEA","commander","AP_WindVane_NMEA::decode","predicate non-void-command",
"AP_WindVane_NMEA","commander","AP_WindVane_NMEA::decode_latest_term","predicate non-void-command",
"AP_WindVane_SITL","commander boundary data-class small-class","AP_WindVane_SITL::update_direction","set collaborator",
"AP_WindVane_SITL","commander boundary data-class small-class","AP_WindVane_SITL::update_speed","set collaborator",
"AR_WPNav_OA","entity data-provider boundary","AR_WPNav_OA::update","command collaborator",
"AR_WPNav_OA","entity data-provider boundary","AR_WPNav_OA::set_desired_location","predicate set collaborator",
"AR_WPNav_OA","entity data-provider boundary","AR_WPNav_OA::reached_destination","predicate wrapper",
"AR_WPNav_OA","entity data-provider boundary","AR_WPNav_OA::get_oa_origin","get collaborator",
"AR_WPNav_OA","entity data-provider boundary","AR_WPNav_OA::get_oa_destination","get property wrapper",
"AR_WPNav_OA","entity data-provider boundary","AR_WPNav_OA::oa_wp_bearing_cd","get property wrapper",
"AR_WPNav_OA","entity data-provider boundary","AR_WPNav_OA::update_oa_distance_and_bearing_to_destination","command collaborator",
"SlewLimiter","small-class","get_slew_rate","get",
"SlewLimiter","small-class","SlewLimiter::SlewLimiter","constructor",
"SlewLimiter","small-class","SlewLimiter::modifier","property non-void-command",
"AP_Filter","degenerate","setup_notch_filter","incidental",
"AP_Filter","degenerate","init","empty",
"AP_Filter","degenerate","init","wrapper stateless",
"AP_Filter","degenerate","init","wrapper stateless",
"AP_Filter","degenerate","AP_Filter::AP_Filter","constructor",
"JSButton","small-class","JSButton::JSButton","constructor",
"JSButton","small-class","JSButton::function","get",
"JSButton","small-class","JSButton::set_default","command collaborator",
"AverageFilter","data-class small-class","AverageFilter","constructor",
"AverageFilter","data-class small-class","AverageFilter<T,U,FILTER_SIZE>::apply","property set collaborator",
"AverageFilter","data-class small-class","AverageFilter<T,U,FILTER_SIZE>::reset","set",
"OreoLED_I2C","unclassified","OreoLED_I2C::OreoLED_I2C","constructor",
"OreoLED_I2C","unclassified","OreoLED_I2C::init","predicate set",
"OreoLED_I2C","unclassified","OreoLED_I2C::update","command",
"OreoLED_I2C","unclassified","OreoLED_I2C::slow_counter","predicate set",
"OreoLED_I2C","unclassified","OreoLED_I2C::mode_firmware_update","predicate non-void-command",
"OreoLED_I2C","unclassified","OreoLED_I2C::mode_init","predicate non-void-command",
"OreoLED_I2C","unclassified","OreoLED_I2C::mode_failsafe_radio","predicate non-void-command",
"OreoLED_I2C","unclassified","OreoLED_I2C::mode_failsafe_gcs","predicate non-void-command",
"OreoLED_I2C","unclassified","OreoLED_I2C::set_standard_colors","predicate non-void-command",
"OreoLED_I2C","unclassified","OreoLED_I2C::mode_failsafe_batt","predicate non-void-command",
"OreoLED_I2C","unclassified","OreoLED_I2C::mode_auto_flight","predicate non-void-command",
"OreoLED_I2C","unclassified","OreoLED_I2C::mode_pilot_flight","predicate non-void-command",
"OreoLED_I2C","unclassified","OreoLED_I2C::set_rgb","command",
"OreoLED_I2C","unclassified","OreoLED_I2C::set_rgb","unclassified",
"OreoLED_I2C","unclassified","OreoLED_I2C::set_rgb","set",
"OreoLED_I2C","unclassified","OreoLED_I2C::set_macro","set collaborator",
"OreoLED_I2C","unclassified","OreoLED_I2C::clear_state","set",
"OreoLED_I2C","unclassified","OreoLED_I2C::command_send","predicate non-void-command collaborator",
"OreoLED_I2C","unclassified","OreoLED_I2C::boot_leds","command",
"OreoLED_I2C","unclassified","OreoLED_I2C::update_timer","command collaborator",
"OreoLED_I2C","unclassified","OreoLED_I2C::send_sync","command",
"OreoLED_I2C","unclassified","OreoLED_I2C::handle_led_control","collaborator",
"FilterWithBuffer","unclassified","get_filter_size","incidental",
"FilterWithBuffer","unclassified","get_sample","get collaborator",
"FilterWithBuffer","unclassified","FilterWithBuffer<T,FILTER_SIZE>::FilterWithBuffer","constructor",
"FilterWithBuffer","unclassified","FilterWithBuffer<T,FILTER_SIZE>::reset","command",
"FilterWithBuffer","unclassified","FilterWithBuffer<T,FILTER_SIZE>::apply","property non-void-command collaborator",
"SIM","boundary","SIM","constructor",
"SIM","boundary","i2c_ioctl","controller stateless",
"SIM","boundary","spi_ioctl","property non-void-command",
"SIM","boundary","get_apparent_wind_dir","property",
"SIM","boundary","get_apparent_wind_spd","property",
"SIM","boundary","set_stop_MAVLink_sim_state","set",
"SIM","boundary","SIM::simstate_send","wrapper",
"SIM","boundary","SIM::sim_state_send","wrapper",
"SIM","boundary","SIM::Log_Write_SIMSTATE","wrapper",
"SIM","boundary","SIM::convert_body_frame","wrapper stateless",
"SIM","boundary","SIM::convert_earth_frame","controller stateless",
"SIM","boundary","SIM::get_rangefinder","get property wrapper",
"SIM","boundary","SIM::measure_distance_at_angle_bf","property controller",
"HarmonicNotchFilter","commander","reset","controller stateless",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::~HarmonicNotchFilter","destructor",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::init","command collaborator",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::allocate_filters","command",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::expand_filter_count","command collaborator",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::set_center_frequency","command",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::update","command",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::update","unclassified",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::apply","property non-void-command collaborator",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::reset","command",
"HarmonicNotchFilter","commander","HarmonicNotchFilter<T>::log_notch_centers","wrapper",
"SIM_Precland","data-provider","SIM_Precland","constructor",
"SIM_Precland","data-provider","healthy","get",
"SIM_Precland","data-provider","last_update_ms","get",
"SIM_Precland","data-provider","get_target_position","get collaborator",
"SIM_Precland","data-provider","is_enabled","predicate",
"SIM_Precland","data-provider","option_enabled","predicate wrapper",
"SIM_Precland","data-provider","SIM_Precland::update","command collaborator",
"SIM_Precland","data-provider","SIM_Precland::set_default_location","command",
"AP_Filters","boundary degenerate","update","wrapper stateless",
"AP_Filters","boundary degenerate","init","empty",
"AP_Filters","boundary degenerate","init","wrapper stateless",
"AP_Filters","boundary degenerate","init","wrapper stateless",
"AP_Filters","boundary degenerate","AP_Filters::AP_Filters","constructor",
"AP_Filters","boundary degenerate","AP_Filters::init","command",
"AP_Filters","boundary degenerate","AP_Filters::update","command",
"AP_Filters","boundary degenerate","AP_Filters::get_filter","get property collaborator",
"HarmonicNotchFilterParams","unclassified","set_center_freq_hz","command",
"HarmonicNotchFilterParams","unclassified","set_bandwidth_hz","command",
"HarmonicNotchFilterParams","unclassified","set_attenuation","command",
"HarmonicNotchFilterParams","unclassified","harmonics","get",
"HarmonicNotchFilterParams","unclassified","set_harmonics","command",
"HarmonicNotchFilterParams","unclassified","set_default_harmonics","command",
"HarmonicNotchFilterParams","unclassified","reference","get",
"HarmonicNotchFilterParams","unclassified","set_reference","command",
"HarmonicNotchFilterParams","unclassified","hasOption","predicate wrapper",
"HarmonicNotchFilterParams","unclassified","tracking_mode","property collaborator",
"HarmonicNotchFilterParams","unclassified","freq_min_ratio","get",
"HarmonicNotchFilterParams","unclassified","set_freq_min_ratio","command",
"HarmonicNotchFilterParams","unclassified","set_options","command",
"HarmonicNotchFilterParams","unclassified","num_composite_notches","property",
"HarmonicNotchFilterParams","unclassified","init","empty",
"HarmonicNotchFilterParams","unclassified","init","wrapper stateless",
"HarmonicNotchFilterParams","unclassified","init","wrapper stateless",
"HarmonicNotchFilterParams","unclassified","HarmonicNotchFilterParams::HarmonicNotchFilterParams","constructor",
"HarmonicNotchFilterParams","unclassified","HarmonicNotchFilterParams::init","command",
"HarmonicNotchFilterParams","unclassified","HarmonicNotchFilterParams::save_params","command",
"DigitalLPF","boundary","reset","set",
"DigitalLPF","boundary","DigitalLPF<T>::DigitalLPF","constructor",
"DigitalLPF","boundary","DigitalLPF<T>::apply","get non-void-command collaborator",
"DigitalLPF","boundary","DigitalLPF<T>::apply","get non-void-command collaborator",
"DigitalLPF","boundary","DigitalLPF<T>::compute_alpha","set",
"DigitalLPF","boundary","DigitalLPF<T>::get","get collaborator",
"DigitalLPF","boundary","DigitalLPF<T>::reset","command collaborator",
"DigitalBiquadFilter","commander boundary","reset","controller stateless",
"DigitalBiquadFilter","commander boundary","DigitalBiquadFilter<T>::DigitalBiquadFilter","constructor",
"DigitalBiquadFilter","commander boundary","DigitalBiquadFilter<T>::apply","property non-void-command collaborator",
"DigitalBiquadFilter","commander boundary","DigitalBiquadFilter<T>::reset","set",
"DigitalBiquadFilter","commander boundary","DigitalBiquadFilter<T>::reset","command collaborator",
"DigitalBiquadFilter","commander boundary","DigitalBiquadFilter<T>::compute_params","wrapper stateless",
"GCS_MAVLINK_Parameters","empty","GCS_MAVLINK_Parameters::GCS_MAVLINK_Parameters","constructor",
"MissionItemProtocol","commander boundary","active_link_is","predicate collaborator",
"MissionItemProtocol","commander boundary","allocate_receive_resources","collaborator incidental",
"MissionItemProtocol","commander boundary","allocate_update_resources","collaborator incidental",
"MissionItemProtocol","commander boundary","free_upload_resources","empty",
"MissionItemProtocol","commander boundary","complete","collaborator incidental",
"MissionItemProtocol","commander boundary","timeout","empty",
"MissionItemProtocol","commander boundary","update","wrapper stateless",
"MissionItemProtocol","commander boundary","MissionItemProtocol::init_send_requests","command",
"MissionItemProtocol","commander boundary","MissionItemProtocol::handle_mission_clear_all","command collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::mavlink2_requirement_met","predicate collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::handle_mission_count","command collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::handle_mission_request_list","command collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::handle_mission_request_int","command collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::handle_mission_request","collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::send_mission_item_warning","set",
"MissionItemProtocol","commander boundary","MissionItemProtocol::handle_mission_write_partial_list","command collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::handle_mission_item","command collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::transfer_is_complete","command collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::send_mission_ack","collaborator",
"MissionItemProtocol","commander boundary","MissionItemProtocol::send_mission_ack","controller stateless",
"MissionItemProtocol","commander boundary","MissionItemProtocol::queued_request_send","unclassified",
"MissionItemProtocol","commander boundary","MissionItemProtocol::update","command",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally","constructor",
"MissionItemProtocol_Rally","boundary","mission_type","collaborator incidental",
"MissionItemProtocol_Rally","boundary","next_item_ap_message_id","collaborator incidental",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::append_item","property non-void-command collaborator",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::complete","wrapper stateless",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::clear_all_items","predicate non-void-command",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::convert_MISSION_ITEM_INT_to_RallyLocation","wrapper stateless",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::get_item_as_mission_item","controller stateless",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::get_item","property non-void-command collaborator",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::item_count","property",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::max_items","property",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::replace_item","property non-void-command collaborator",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::timeout","command",
"MissionItemProtocol_Rally","boundary","MissionItemProtocol_Rally::truncate","command collaborator",
"PID","unclassified","PID","constructor",
"PID","unclassified","operator()","command",
"PID","unclassified","kP","property",
"PID","unclassified","kI","property",
"PID","unclassified","kD","property",
"PID","unclassified","imax","property",
"PID","unclassified","kP","command",
"PID","unclassified","kI","command",
"PID","unclassified","kD","command",
"PID","unclassified","imax","command",
"PID","unclassified","get_integrator","get",
"PID","unclassified","get_pid_info","get collaborator",
"PID","unclassified","reset","controller stateless",
"PID","unclassified","PID::get_pid","property non-void-command",
"PID","unclassified","PID::reset_I","command",
"PID","unclassified","PID::reset","command",
"PID","unclassified","PID::load_gains","command",
"PID","unclassified","PID::save_gains","command",
"AP_VisualOdom_Backend","unclassified","quality","get",
"AP_VisualOdom_Backend","unclassified","request_align_yaw_to_ahrs","empty",
"AP_VisualOdom_Backend","unclassified","align_position_to_ahrs","empty",
"AP_VisualOdom_Backend","unclassified","pre_arm_check","incidental",
"AP_VisualOdom_Backend","unclassified","get_type","property collaborator",
"AP_VisualOdom_Backend","unclassified","AP_VisualOdom_Backend::AP_VisualOdom_Backend","constructor",
"AP_VisualOdom_Backend","unclassified","AP_VisualOdom_Backend::healthy","predicate wrapper",
"AP_VisualOdom_Backend","unclassified","AP_VisualOdom_Backend::handle_vision_position_delta_msg","command collaborator",
"AP_VisualOdom_Backend","unclassified","AP_VisualOdom_Backend::get_reset_timestamp_ms","get non-void-command",
"AP_VisualOdom_Backend","unclassified","AP_VisualOdom_Backend::Write_VisualOdom","wrapper stateless",
"AP_VisualOdom_Backend","unclassified","AP_VisualOdom_Backend::Write_VisualPosition","wrapper stateless",
"AP_VisualOdom_Backend","unclassified","AP_VisualOdom_Backend::Write_VisualVelocity","command",
"RC_Channel","boundary","get_range","get",
"RC_Channel","boundary","get_dead_zone","get",
"RC_Channel","boundary","get_radio_in","get",
"RC_Channel","boundary","set_radio_in","set",
"RC_Channel","boundary","get_control_in","get",
"RC_Channel","boundary","set_control_in","set",
"RC_Channel","boundary","get_radio_min","property",
"RC_Channel","boundary","get_radio_max","property",
"RC_Channel","boundary","get_radio_trim","property",
"RC_Channel","boundary","set_and_save_trim","command",
"RC_Channel","boundary","set_and_save_radio_trim","command",
"RC_Channel","boundary","configured","predicate non-void-command",
"RC_Channel","boundary","get_type","get collaborator",
"RC_Channel","boundary","mode_switch_changed","empty",
"RC_Channel","boundary","RC_Channel::RC_Channel","constructor",
"RC_Channel","boundary","RC_Channel::set_range","command",
"RC_Channel","boundary","RC_Channel::set_angle","command",
"RC_Channel","boundary","RC_Channel::set_default_dead_zone","command",
"RC_Channel","boundary","RC_Channel::get_reverse","predicate",
"RC_Channel","boundary","RC_Channel::update","predicate non-void-command",
"RC_Channel","boundary","RC_Channel::get_control_mid","property",
"RC_Channel","boundary","RC_Channel::pwm_to_angle_dz_trim","property",
"RC_Channel","boundary","RC_Channel::pwm_to_angle_dz","property",
"RC_Channel","boundary","RC_Channel::pwm_to_angle","property",
"RC_Channel","boundary","RC_Channel::pwm_to_range_dz","property",
"RC_Channel","boundary","RC_Channel::pwm_to_range","property",
"RC_Channel","boundary","RC_Channel::get_control_in_zero_dz","property",
"RC_Channel","boundary","RC_Channel::norm_input","property wrapper",
"RC_Channel","boundary","RC_Channel::norm_input_dz","property wrapper",
"RC_Channel","boundary","RC_Channel::norm_input_ignore_trim","property wrapper",
"RC_Channel","boundary","RC_Channel::percent_input","property",
"RC_Channel","boundary","RC_Channel::in_trim_dz","predicate wrapper",
"RC_Channel","boundary","RC_Channel::in_min_dz","predicate",
"RC_Channel","boundary","RC_Channel::set_override","command",
"RC_Channel","boundary","RC_Channel::clear_override","command",
"RC_Channel","boundary","RC_Channel::has_override","predicate wrapper",
"RC_Channel","boundary","RC_Channel::stick_mixing","property wrapper",
"RC_Channel","boundary","RC_Channel::reset_mode_switch","command",
"RC_Channel","boundary","RC_Channel::read_6pos_switch","predicate non-void-command",
"RC_Channel","boundary","RC_Channel::read_mode_switch","command",
"RC_Channel","boundary","RC_Channel::debounce_completed","wrapper stateless",
"RC_Channel","boundary","RC_Channel::init_aux_function","command collaborator",
"RC_Channel","boundary","RC_Channel::string_for_aux_function","property collaborator",
"RC_Channel","boundary","RC_Channel::string_for_aux_pos","collaborator incidental",
"RC_Channel","boundary","RC_Channel::read_aux","predicate non-void-command",
"RC_Channel","boundary","RC_Channel::init_position_on_first_radio_read","collaborator incidental",
"RC_Channel","boundary","RC_Channel::do_aux_function_armdisarm","wrapper stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_avoid_adsb","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_avoid_proximity","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_camera_trigger","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_record_video","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_camera_zoom","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_camera_manual_focus","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_camera_auto_focus","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_camera_image_tracking","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_camera_lens","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_runcam_control","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_runcam_osd_control","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_fence","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_clear_wp","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_relay","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_generator","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_sprayer","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_gripper","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_lost_vehicle_sound","collaborator incidental",
"RC_Channel","boundary","RC_Channel::do_aux_function_rc_override_enable","wrapper stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_mission_reset","controller stateless",
"RC_Channel","boundary","RC_Channel::do_aux_function_fft_notch_tune","controller stateless",
"RC_Channel","boundary","RC_Channel::run_aux_function","predicate non-void-command collaborator",
"RC_Channel","boundary","RC_Channel::do_aux_function","predicate non-void-command collaborator",
"RC_Channel","boundary","RC_Channel::init_aux","command collaborator",
"RC_Channel","boundary","RC_Channel::read_3pos_switch","predicate collaborator",
"RC_Channel","boundary","RC_Channel::get_aux_switch_pos","property collaborator",
"Aircraft","boundary","get_speedup","get",
"Aircraft","boundary","set_instance","set",
"Aircraft","boundary","set_autotest_dir","set",
"Aircraft","boundary","set_interface_ports","empty",
"Aircraft","boundary","get_rate_hz","get",
"Aircraft","boundary","get_gyro","get collaborator",
"Aircraft","boundary","get_velocity_ef","get collaborator",
"Aircraft","boundary","get_velocity_air_ef","get collaborator",
"Aircraft","boundary","get_dcm","get collaborator",
"Aircraft","boundary","get_mag_field_bf","get collaborator",
"Aircraft","boundary","gross_mass","property",
"Aircraft","boundary","set_config","set",
"Aircraft","boundary","get_origin","get collaborator",
"Aircraft","boundary","get_location","get collaborator",
"Aircraft","boundary","get_attitude","controller",
"Aircraft","boundary","get_home","get collaborator",
"Aircraft","boundary","get_home_yaw","get",
"Aircraft","boundary","set_buzzer","set collaborator",
"Aircraft","boundary","set_sprayer","set collaborator",
"Aircraft","boundary","set_parachute","set collaborator",
"Aircraft","boundary","set_richenpower","set collaborator",
"Aircraft","boundary","set_adsb","set collaborator",
"Aircraft","boundary","set_loweheiser","set collaborator",
"Aircraft","boundary","set_fetteconewireesc","set collaborator",
"Aircraft","boundary","set_ie24","set collaborator",
"Aircraft","boundary","set_gripper_servo","set collaborator",
"Aircraft","boundary","set_gripper_epm","set collaborator",
"Aircraft","boundary","set_i2c","set collaborator",
"Aircraft","boundary","set_dronecan_device","set collaborator",
"Aircraft","boundary","get_battery_voltage","get",
"Aircraft","boundary","get_battery_temperature","property",
"Aircraft","boundary","rangefinder_beam_width","incidental",
"Aircraft","boundary","Aircraft::Aircraft","constructor",
"Aircraft","boundary","Aircraft::set_start_location","command",
"Aircraft","boundary","Aircraft::ground_height_difference","get property controller",
"Aircraft","boundary","Aircraft::set_precland","command collaborator",
"Aircraft","boundary","Aircraft::hagl","property",
"Aircraft","boundary","Aircraft::on_ground","predicate",
"Aircraft","boundary","Aircraft::update_position","command collaborator",
"Aircraft","boundary","Aircraft::update_mag_field_bf","unclassified",
"Aircraft","boundary","Aircraft::time_advance","command",
"Aircraft","boundary","Aircraft::setup_frame_time","command",
"Aircraft","boundary","Aircraft::adjust_frame_time","command",
"Aircraft","boundary","Aircraft::sync_frame_time","command",
"Aircraft","boundary","Aircraft::add_noise","command",
"Aircraft","boundary","Aircraft::rand_normal","wrapper stateless",
"Aircraft","boundary","Aircraft::fill_fdm","void-accessor command collaborator",
"Aircraft","boundary","Aircraft::perpendicular_distance_to_rangefinder_surface","property",
"Aircraft","boundary","Aircraft::rangefinder_range","property collaborator",
"Aircraft","boundary","Aircraft::get_wall_time_us","wrapper stateless",
"Aircraft","boundary","Aircraft::set_speedup","command",
"Aircraft","boundary","Aircraft::update_home","command collaborator",
"Aircraft","boundary","Aircraft::update_model","set collaborator",
"Aircraft","boundary","Aircraft::update_dynamics","command collaborator",
"Aircraft","boundary","Aircraft::update_wind","command collaborator",
"Aircraft","boundary","Aircraft::smooth_sensors","command",
"Aircraft","boundary","Aircraft::filtered_servo_angle","get wrapper",
"Aircraft","boundary","Aircraft::filtered_servo_range","get wrapper",
"Aircraft","boundary","Aircraft::filtered_servo_setup","wrapper",
"Aircraft","boundary","Aircraft::extrapolate_sensors","command collaborator",
"Aircraft","boundary","Aircraft::update_external_payload","command collaborator",
"Aircraft","boundary","Aircraft::add_shove_forces","void-accessor set collaborator",
"Aircraft","boundary","Aircraft::get_local_updraft","property wrapper",
"Aircraft","boundary","Aircraft::add_twist_forces","void-accessor collaborator",
"Aircraft","boundary","Aircraft::get_position_relhome","property collaborator",
"Aircraft","boundary","Aircraft::get_air_density","wrapper stateless",
"Aircraft","boundary","Aircraft::update_eas_airspeed","command",
"Motor","unclassified","Motor","constructor",
"Motor","unclassified","Motor","constructor",
"Motor","unclassified","set_slew_max","set",
"Motor","unclassified","get_command","get",
"Motor","unclassified","Motor::calculate_forces","void-accessor command",
"Motor","unclassified","Motor::update_servo","property wrapper",
"Motor","unclassified","Motor::get_current","get",
"Motor","unclassified","Motor::setup_params","command",
"Motor","unclassified","Motor::pwm_to_command","property wrapper",
"Motor","unclassified","Motor::calc_thrust","property wrapper",
"Balloon","commander boundary small-class","Balloon::Balloon","constructor",
"Balloon","commander boundary small-class","Balloon::update","command collaborator",
"Parameter","unclassified","Parameter::init","predicate set",
"Parameter","unclassified","Parameter::init_by_info","predicate non-void-command collaborator",
"Parameter","unclassified","Parameter::set","predicate non-void-command",
"Parameter","unclassified","Parameter::get","predicate non-void-command",
"Parameter","unclassified","Parameter::set_and_save","predicate non-void-command",
"Parameter","unclassified","Parameter::configured","predicate non-void-command",
"Parameter","unclassified","Parameter::set_default","predicate non-void-command",
"AP_SBusOut","boundary","update","wrapper stateless",
"AP_SBusOut","boundary","AP_SBusOut::AP_SBusOut","constructor",
"AP_SBusOut","boundary","AP_SBusOut::sbus_format_frame","controller stateless",
"AP_SBusOut","boundary","AP_SBusOut::update","unclassified",
"AP_SBusOut","boundary","AP_SBusOut::init","command collaborator",
"AC_Circle","unclassified","set_center","command",
"AC_Circle","unclassified","get_center","get collaborator",
"AC_Circle","unclassified","center_is_terrain_alt","get",
"AC_Circle","unclassified","get_radius","property wrapper",
"AC_Circle","unclassified","get_rate","get",
"AC_Circle","unclassified","get_rate_current","property wrapper",
"AC_Circle","unclassified","get_angle_total","get",
"AC_Circle","unclassified","get_roll","property",
"AC_Circle","unclassified","get_pitch","property",
"AC_Circle","unclassified","get_thrust_vector","property collaborator",
"AC_Circle","unclassified","get_yaw","get",
"AC_Circle","unclassified","get_distance_to_target","property",
"AC_Circle","unclassified","get_bearing_to_target","property",
"AC_Circle","unclassified","pilot_control_enabled","predicate",
"AC_Circle","unclassified","roi_at_center","predicate",
"AC_Circle","unclassified","set_rangefinder_terrain_offset","command",
"AC_Circle","unclassified","AC_Circle::AC_Circle","constructor",
"AC_Circle","unclassified","AC_Circle::init","command",
"AC_Circle","unclassified","AC_Circle::init","command collaborator",
"AC_Circle","unclassified","AC_Circle::set_center","command collaborator",
"AC_Circle","unclassified","AC_Circle::set_rate","set",
"AC_Circle","unclassified","AC_Circle::set_radius_cm","set",
"AC_Circle","unclassified","AC_Circle::is_active","predicate wrapper",
"AC_Circle","unclassified","AC_Circle::update","predicate non-void-command",
"AC_Circle","unclassified","AC_Circle::get_closest_point_on_circle","void-accessor collaborator",
"AC_Circle","unclassified","AC_Circle::calc_velocities","command",
"AC_Circle","unclassified","AC_Circle::init_start_angle","command",
"AC_Circle","unclassified","AC_Circle::get_terrain_source","property controller",
"AC_Circle","unclassified","AC_Circle::get_terrain_offset","predicate non-void-command collaborator",
"AC_Circle","unclassified","AC_Circle::check_param_change","command",
"AC_Circle","unclassified","init","empty",
"AC_Circle","unclassified","init","wrapper stateless",
"AC_Circle","unclassified","init","wrapper stateless",
"Maxell","degenerate small-class","cellcount","incidental",
"Maxell","degenerate small-class","connected_cells","incidental",
"Maxell","degenerate small-class","SITL::Maxell::Maxell","constructor",
"Rotoye","commander lazy-class small-class","cellcount","incidental",
"Rotoye","commander lazy-class small-class","SITL::Rotoye::Rotoye","constructor",
"Rotoye","commander lazy-class small-class","SITL::Rotoye::update","set collaborator",
"AP_RangeFinder_MAVLink","unclassified","_get_mav_distance_sensor_type","get collaborator",
"AP_RangeFinder_MAVLink","unclassified","AP_RangeFinder_MAVLink::handle_msg","command collaborator",
"AP_RangeFinder_MAVLink","unclassified","AP_RangeFinder_MAVLink::max_distance_cm","get",
"AP_RangeFinder_MAVLink","unclassified","AP_RangeFinder_MAVLink::min_distance_cm","get",
"AP_RangeFinder_MAVLink","unclassified","AP_RangeFinder_MAVLink::update","command",
"DataRateLimit","small-class","DataRateLimit::max_bytes","property non-void-command",
"Calibration","unclassified","SITL::Calibration::Calibration","constructor",
"Calibration","unclassified","SITL::Calibration::update","command collaborator",
"Calibration","unclassified","SITL::Calibration::_stop_control","void-accessor collaborator",
"Calibration","unclassified","SITL::Calibration::_attitude_control","command collaborator",
"Calibration","unclassified","SITL::Calibration::_attitude_set","void-accessor controller",
"Calibration","unclassified","SITL::Calibration::_angular_velocity_control","void-accessor controller",
"Calibration","unclassified","SITL::Calibration::_calibration_poses","command collaborator",
"DroneCANDevice","commander boundary","DroneCANDevice::update_baro","command collaborator",
"DroneCANDevice","commander boundary","DroneCANDevice::update_airspeed","set collaborator",
"DroneCANDevice","commander boundary","DroneCANDevice::_setup_eliptical_correcion","command collaborator",
"DroneCANDevice","commander boundary","DroneCANDevice::update_compass","set collaborator",
"DroneCANDevice","commander boundary","DroneCANDevice::update_rangefinder","set",
"DroneCANDevice","commander boundary","DroneCANDevice::update","command",
"EFI_MegaSquirt","commander boundary degenerate","update","wrapper stateless",
"EFI_MegaSquirt","commander boundary degenerate","EFI_MegaSquirt::update","command",
"EFI_MegaSquirt","commander boundary degenerate","EFI_MegaSquirt::send_table","wrapper stateless",
"OwnPtr","entity boundary","OwnPtr","constructor",
"OwnPtr","entity boundary","OwnPtr","constructor",
"OwnPtr","entity boundary","OwnPtr","copy-constructor",
"OwnPtr","entity boundary","OwnPtr","constructor",
"OwnPtr","entity boundary","operator=","property non-void-command collaborator",
"OwnPtr","entity boundary","operator=","property set collaborator",
"OwnPtr","entity boundary","operator=","property set collaborator",
"OwnPtr","entity boundary","~OwnPtr","destructor",
"OwnPtr","entity boundary","clear","command",
"OwnPtr","entity boundary","leak","property set collaborator",
"OwnPtr","entity boundary","get","get collaborator",
"OwnPtr","entity boundary","operator*","get collaborator",
"OwnPtr","entity boundary","operator->","get collaborator",
"OwnPtr","entity boundary","operator!","predicate",
"OwnPtr","entity boundary","operatorbool","unclassified",
"FETtecOneWireESC","boundary","enabled","predicate",
"FETtecOneWireESC","boundary","MessageUnion","constructor",
"FETtecOneWireESC","boundary","FETtecOneWireESC::FETtecOneWireESC","constructor",
"FETtecOneWireESC","boundary","FETtecOneWireESC::update_escs","controller",
"FETtecOneWireESC","boundary","FETtecOneWireESC::update","command collaborator",
"FETtecOneWireESC","boundary","FETtecOneWireESC::handle_config_message","command collaborator",
"FETtecOneWireESC","boundary","FETtecOneWireESC::send_response","wrapper stateless",
"FETtecOneWireESC","boundary","FETtecOneWireESC::bootloader_handle_config_message","command collaborator",
"FETtecOneWireESC","boundary","FETtecOneWireESC::running_handle_config_message","void-accessor command collaborator",
"FETtecOneWireESC","boundary","FETtecOneWireESC::handle_config_message_set_tlm_type","void-accessor wrapper",
"FETtecOneWireESC","boundary","FETtecOneWireESC::handle_fast_esc_data","wrapper",
"FETtecOneWireESC","boundary","FETtecOneWireESC::consume_bytes","set",
"FETtecOneWireESC","boundary","FETtecOneWireESC::update_input","unclassified",
"FETtecOneWireESC","boundary","FETtecOneWireESC::update_sitl_input_pwm","void-accessor wrapper",
"FETtecOneWireESC","boundary","FETtecOneWireESC::send_esc_telemetry","controller",
"FETtecOneWireESC","boundary","FETtecOneWireESC::update_send","command collaborator",
