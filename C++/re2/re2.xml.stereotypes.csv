Class Name,Class Stereotype,Method Name,Method Stereotype
"WalkState","empty","WalkState","constructor",
"ToStringWalker","unclassified","ToStringWalker","constructor",
"ToStringWalker","unclassified","ShortVisit","incidental",
"ToStringWalker","unclassified","ToStringWalker::PreVisit","property non-void-command",
"ToStringWalker","unclassified","ToStringWalker::PostVisit","property non-void-command collaborator",
"Tester","entity boundary","error","get",
"Tester","entity boundary","Tester::Tester","constructor",
"Tester","entity boundary","Tester::~Tester","destructor",
"Tester","entity boundary","Tester::TestCase","predicate non-void-command collaborator",
"Tester","entity boundary","Tester::TestInput","predicate non-void-command collaborator",
"Tester","entity boundary","Tester::TestInputInContext","predicate non-void-command collaborator",
"StringGenerator","unclassified","~StringGenerator","destructor",
"StringGenerator","unclassified","HasNext","get",
"StringGenerator","unclassified","StringGenerator::StringGenerator","constructor",
"StringGenerator","unclassified","StringGenerator::Reset","command",
"StringGenerator","unclassified","StringGenerator::IncrementDigits","predicate",
"StringGenerator","unclassified","StringGenerator::RandomDigits","predicate non-void-command",
"StringGenerator","unclassified","StringGenerator::Next","get non-void-command collaborator",
"StringGenerator","unclassified","StringGenerator::Random","command",
"StringGenerator","unclassified","StringGenerator::GenerateNULL","command",
"TestInstance","entity boundary","flags","get collaborator",
"TestInstance","entity boundary","error","get",
"TestInstance","entity boundary","TestInstance::TestInstance","constructor",
"TestInstance","entity boundary","TestInstance::~TestInstance","destructor",
"TestInstance","entity boundary","TestInstance::RunSearch","void-accessor command collaborator",
"TestInstance","entity boundary","TestInstance::RunCase","predicate non-void-command collaborator",
"TestInstance","entity boundary","TestInstance::LogMatch","command collaborator",
"Regexp::Walker","data-provider data-class small-class","stopped_early","get",
"TestInstance::Result","commander data-class small-class","ClearSubmatch","set",
"SetHooks","empty","SetHooks","constructor",
"PCRE::Arg","empty","Arg","constructor",
"Backtracker","unclassified","Backtracker::Backtracker","constructor",
"Backtracker","unclassified","Backtracker::Search","predicate non-void-command",
"Backtracker","unclassified","Backtracker::Visit","predicate non-void-command collaborator",
"Backtracker","unclassified","Backtracker::Try","predicate non-void-command",
"SparseArray<Value>::IndexValue","data-provider boundary data-class","index","get",
"SparseArray<Value>::IndexValue","data-provider boundary data-class","value","get collaborator",
"SparseArray<Value>::IndexValue","data-provider boundary data-class","value","get collaborator",
"PCRE","data-provider","pattern","get",
"PCRE","data-provider","error","get",
"PCRE","data-provider","PCRE::Init","command",
"PCRE","data-provider","PCRE::PCRE","constructor",
"PCRE","data-provider","PCRE::PCRE","constructor",
"PCRE","data-provider","PCRE::PCRE","constructor",
"PCRE","data-provider","PCRE::PCRE","constructor",
"PCRE","data-provider","PCRE::PCRE","copy-constructor",
"PCRE","data-provider","PCRE::PCRE","copy-constructor",
"PCRE","data-provider","PCRE::~PCRE","destructor",
"PCRE","data-provider","PCRE::Compile","property set collaborator",
"PCRE","data-provider","PCRE::Replace","controller stateless",
"PCRE","data-provider","PCRE::GlobalReplace","controller stateless",
"PCRE","data-provider","PCRE::Extract","controller stateless",
"PCRE","data-provider","PCRE::QuoteMeta","controller stateless",
"PCRE","data-provider","PCRE::HitLimit","predicate",
"PCRE","data-provider","PCRE::ClearHitLimit","set",
"PCRE","data-provider","PCRE::TryMatch","property set",
"PCRE","data-provider","PCRE::DoMatchImpl","predicate",
"PCRE","data-provider","PCRE::DoMatch","predicate",
"PCRE","data-provider","PCRE::Rewrite","predicate",
"PCRE","data-provider","PCRE::CheckRewriteString","predicate",
"PCRE","data-provider","PCRE::NumberOfCapturingGroups","property wrapper",
"SimplifyWalker","controller degenerate","SimplifyWalker","constructor",
"SimplifyWalker","controller degenerate","SimplifyWalker::Copy","controller stateless",
"SimplifyWalker","controller degenerate","SimplifyWalker::ShortVisit","controller stateless",
"SimplifyWalker","controller degenerate","SimplifyWalker::PreVisit","controller stateless",
"SimplifyWalker","controller degenerate","SimplifyWalker::PostVisit","property non-void-command factory collaborator",
"SimplifyWalker","controller degenerate","SimplifyWalker::Concat2","factory controller stateless",
"SimplifyWalker","controller degenerate","SimplifyWalker::SimplifyRepeat","property non-void-command factory collaborator",
"SimplifyWalker","controller degenerate","SimplifyWalker::SimplifyCharClass","factory controller stateless",
"CoalesceWalker","controller degenerate","CoalesceWalker","constructor",
"CoalesceWalker","controller degenerate","CoalesceWalker::Copy","controller stateless",
"CoalesceWalker","controller degenerate","CoalesceWalker::ShortVisit","controller stateless",
"CoalesceWalker","controller degenerate","CoalesceWalker::PostVisit","property non-void-command factory collaborator",
"CoalesceWalker","controller degenerate","CoalesceWalker::CanCoalesce","controller stateless",
"CoalesceWalker","controller degenerate","CoalesceWalker::DoCoalesce","controller stateless",
"RegexpGenerator","commander","~RegexpGenerator","destructor",
"RegexpGenerator","commander","RegexpGenerator::EgrepOps","wrapper stateless",
"RegexpGenerator","commander","RegexpGenerator::RegexpGenerator","constructor",
"RegexpGenerator","commander","RegexpGenerator::Generate","command",
"RegexpGenerator","commander","RegexpGenerator::GenerateRandom","command",
"RegexpGenerator","commander","RegexpGenerator::GeneratePostfix","command",
"RegexpGenerator","commander","RegexpGenerator::GenerateRandomPostfix","predicate non-void-command",
"RegexpGenerator","commander","RegexpGenerator::RunPostfix","controller stateless",
"Regexp","boundary","op","property collaborator",
"Regexp","boundary","nsub","get",
"Regexp","boundary","simple","predicate",
"Regexp","boundary","parse_flags","property collaborator",
"Regexp","boundary","sub","get property",
"Regexp","boundary","min","property wrapper",
"Regexp","boundary","max","property wrapper",
"Regexp","boundary","rune","get wrapper",
"Regexp","boundary","cc","property wrapper",
"Regexp","boundary","cap","property wrapper",
"Regexp","boundary","name","property wrapper",
"Regexp","boundary","runes","property wrapper",
"Regexp","boundary","nrunes","property wrapper",
"Regexp","boundary","match_id","get wrapper",
"Regexp","boundary","AllocSub","command",
"Regexp","boundary","Regexp::CompileToProg","wrapper stateless",
"Regexp","boundary","Regexp::CompileToReverseProg","wrapper stateless",
"Regexp","boundary","Regexp::MimicsPCRE","controller stateless",
"Regexp","boundary","Regexp::FUZZING_ONLY_set_maximum_repeat_count","incidental",
"Regexp","boundary","Regexp::LeadingRegexp","property non-void-command",
"Regexp","boundary","Regexp::RemoveLeadingRegexp","property non-void-command factory collaborator",
"Regexp","boundary","Regexp::LeadingString","get property controller",
"Regexp","boundary","Regexp::RemoveLeadingString","void-accessor command",
"Regexp","boundary","Regexp::FactorAlternation","controller stateless",
"Regexp","boundary","Regexp::Parse","controller stateless",
"Regexp","boundary","Regexp::Regexp","copy-constructor",
"Regexp","boundary","Regexp::~Regexp","destructor",
"Regexp","boundary","Regexp::QuickDestroy","predicate",
"Regexp","boundary","Regexp::Ref","get property wrapper",
"Regexp","boundary","Regexp::Incref","property set collaborator",
"Regexp","boundary","Regexp::Decref","set",
"Regexp","boundary","Regexp::Destroy","set",
"Regexp","boundary","Regexp::AddRuneToString","wrapper",
"Regexp","boundary","Regexp::HaveMatch","factory wrapper stateless",
"Regexp","boundary","Regexp::StarPlusOrQuest","property non-void-command factory collaborator",
"Regexp","boundary","Regexp::Plus","property non-void-command collaborator",
"Regexp","boundary","Regexp::Star","property non-void-command collaborator",
"Regexp","boundary","Regexp::Quest","property non-void-command collaborator",
"Regexp","boundary","Regexp::ConcatOrAlternate","property non-void-command factory",
"Regexp","boundary","Regexp::Concat","property non-void-command collaborator",
"Regexp","boundary","Regexp::Alternate","property non-void-command collaborator",
"Regexp","boundary","Regexp::AlternateNoFactor","property non-void-command collaborator",
"Regexp","boundary","Regexp::Capture","factory controller stateless",
"Regexp","boundary","Regexp::Repeat","factory controller stateless",
"Regexp","boundary","Regexp::NewLiteral","factory wrapper stateless",
"Regexp","boundary","Regexp::LiteralString","property non-void-command factory collaborator",
"Regexp","boundary","Regexp::NewCharClass","factory wrapper stateless",
"Regexp","boundary","Regexp::Swap","wrapper stateless",
"Regexp","boundary","Regexp::Equal","controller stateless",
"Regexp","boundary","Regexp::NumCaptures","controller stateless",
"Regexp","boundary","Regexp::NamedCaptures","controller stateless",
"Regexp","boundary","Regexp::CaptureNames","controller stateless",
"Regexp","boundary","Regexp::RequiredPrefix","predicate non-void-command",
"Regexp","boundary","Regexp::RequiredPrefixForAccel","predicate non-void-command",
"Regexp","boundary","Regexp::SimplifyRegexp","predicate non-void-command collaborator",
"Regexp","boundary","Regexp::ComputeSimple","predicate non-void-command",
"Regexp","boundary","Regexp::Simplify","controller stateless",
"Regexp","boundary","Regexp::Dump","wrapper stateless",
"Regexp","boundary","Regexp::NullWalk","controller stateless",
"Regexp","boundary","Regexp::ToString","controller stateless",
"CharClass","data-provider","begin","get collaborator",
"CharClass","data-provider","end","property collaborator",
"CharClass","data-provider","size","get",
"CharClass","data-provider","empty","predicate",
"CharClass","data-provider","full","predicate",
"CharClass","data-provider","FoldsASCII","get",
"CharClass","data-provider","CharClass::New","incidental",
"CharClass","data-provider","CharClass::Delete","incidental",
"CharClass","data-provider","CharClass::Negate","property non-void-command",
"CharClass","data-provider","CharClass::Contains","predicate collaborator",
"RuneRangeLess","boundary degenerate small-class","operator()","collaborator incidental",
"RuneRange","empty","RuneRange","constructor",
"RuneRange","empty","RuneRange","constructor",
"RegexpStatus","boundary","RegexpStatus","constructor",
"RegexpStatus","boundary","~RegexpStatus","destructor",
"RegexpStatus","boundary","set_code","set collaborator",
"RegexpStatus","boundary","set_error_arg","set collaborator",
"RegexpStatus","boundary","set_tmp","set",
"RegexpStatus","boundary","code","get collaborator",
"RegexpStatus","boundary","error_arg","get collaborator",
"RegexpStatus","boundary","ok","predicate",
"RegexpStatus","boundary","RegexpStatus::CodeText","wrapper stateless",
"RegexpStatus","boundary","RegexpStatus::Text","property",
"RegexpStatus","boundary","RegexpStatus::Copy","command",
"SparseSetT","unclassified","size","get",
"SparseSetT","unclassified","empty","property",
"SparseSetT","unclassified","begin","property non-void-command collaborator",
"SparseSetT","unclassified","end","property non-void-command collaborator",
"SparseSetT","unclassified","begin","property collaborator",
"SparseSetT","unclassified","end","property collaborator",
"SparseSetT","unclassified","max_size","property",
"SparseSetT","unclassified","clear","set",
"SparseSetT","unclassified","insert","property non-void-command collaborator",
"SparseSetT","unclassified","insert_new","property non-void-command collaborator",
"SparseSetT","unclassified","InsertInternal","property non-void-command collaborator",
"SparseSetT","unclassified","MaybeInitializeMemory","set",
"SparseSetT","unclassified","SparseSetT<Value>::resize","command collaborator",
"SparseSetT","unclassified","SparseSetT<Value>::contains","predicate",
"SparseSetT","unclassified","SparseSetT<Value>::create_index","command",
"SparseSetT","unclassified","SparseSetT<Value>::SparseSetT","constructor",
"SparseSetT","unclassified","SparseSetT<Value>::~SparseSetT","destructor",
"SparseSetT","unclassified","SparseSetT<Value>::DebugCheckInvariants","unclassified",
"SparseSetT","unclassified","SparseSetT<Value>::less","incidental",
"SparseArray","boundary","size","get",
"SparseArray","boundary","empty","property",
"SparseArray","boundary","begin","property non-void-command collaborator",
"SparseArray","boundary","end","property non-void-command collaborator",
"SparseArray","boundary","begin","property collaborator",
"SparseArray","boundary","end","property collaborator",
"SparseArray","boundary","max_size","property",
"SparseArray","boundary","clear","set",
"SparseArray","boundary","set","property non-void-command collaborator",
"SparseArray","boundary","set_new","property non-void-command collaborator",
"SparseArray","boundary","set_existing","property non-void-command collaborator",
"SparseArray","boundary","get_existing","get non-void-command collaborator",
"SparseArray","boundary","get_existing","get collaborator",
"SparseArray","boundary","SetInternal","property non-void-command collaborator",
"SparseArray","boundary","SetExistingInternal","property non-void-command collaborator",
"SparseArray","boundary","MaybeInitializeMemory","set",
"SparseArray","boundary","SparseArray<Value>::SparseArray","copy-constructor",
"SparseArray","boundary","SparseArray<Value>::SparseArray","copy-constructor",
"SparseArray","boundary","SparseArray<Value>::operator=","property non-void-command collaborator",
"SparseArray","boundary","SparseArray<Value>::operator=","property non-void-command collaborator",
"SparseArray","boundary","SparseArray<Value>::resize","command collaborator",
"SparseArray","boundary","SparseArray<Value>::has_index","predicate",
"SparseArray","boundary","SparseArray<Value>::create_index","command",
"SparseArray","boundary","SparseArray<Value>::SparseArray","constructor",
"SparseArray","boundary","SparseArray<Value>::~SparseArray","destructor",
"SparseArray","boundary","SparseArray<Value>::DebugCheckInvariants","unclassified",
"SparseArray","boundary","SparseArray<Value>::less","collaborator incidental",
"NamedCapturesWalker","boundary lazy-class","NamedCapturesWalker","constructor",
"NamedCapturesWalker","boundary lazy-class","~NamedCapturesWalker","destructor",
"NamedCapturesWalker","boundary lazy-class","TakeMap","property set",
"NamedCapturesWalker","boundary lazy-class","PreVisit","property set collaborator",
"NamedCapturesWalker","boundary lazy-class","ShortVisit","wrapper stateless",
"NumCapturesWalker","boundary lazy-class","NumCapturesWalker","constructor",
"NumCapturesWalker","boundary lazy-class","ncapture","get",
"NumCapturesWalker","boundary lazy-class","PreVisit","property set collaborator",
"NumCapturesWalker","boundary lazy-class","ShortVisit","wrapper stateless",
"Frame","empty","Frame","constructor",
"RepetitionWalker","degenerate","RepetitionWalker","constructor",
"RepetitionWalker","degenerate","RepetitionWalker::PreVisit","controller stateless",
"RepetitionWalker","degenerate","RepetitionWalker::PostVisit","incidental",
"RepetitionWalker","degenerate","RepetitionWalker::ShortVisit","wrapper stateless",
"Splice","empty","Splice","constructor",
"PCREWalker","degenerate small-class","PCREWalker","constructor",
"PCREWalker","degenerate small-class","ShortVisit","wrapper stateless",
"PCREWalker","degenerate small-class","PCREWalker::PostVisit","controller stateless",
"PODArray","data-provider boundary","PODArray","constructor",
"PODArray","data-provider boundary","PODArray","constructor",
"PODArray","data-provider boundary","data","property collaborator",
"PODArray","data-provider boundary","size","property",
"PODArray","data-provider boundary","operator[]","get collaborator",
"SubstringWalker","pure-controller degenerate small-class","PostVisit","controller stateless",
"SubstringWalker","pure-controller degenerate small-class","ShortVisit","incidental",
"FactorAlternationImpl","pure-controller degenerate","FactorAlternationImpl::Round1","controller stateless",
"FactorAlternationImpl","pure-controller degenerate","FactorAlternationImpl::Round2","controller stateless",
"FactorAlternationImpl","pure-controller degenerate","FactorAlternationImpl::Round3","controller stateless",
"Set","unclassified","Set","constructor",
"Set","unclassified","Add","property non-void-command collaborator",
"Set","unclassified","Compile","predicate non-void-command",
"Set","unclassified","Match","property collaborator",
"Set","unclassified","RE2::Set::Set","constructor",
"Set","unclassified","RE2::Set::~Set","destructor",
"Set","unclassified","RE2::Set::Set","copy-constructor",
"Set","unclassified","RE2::Set::operator=","controller stateless",
"Set","unclassified","RE2::Set::Add","controller stateless",
"Set","unclassified","RE2::Set::Compile","controller stateless",
"Set","unclassified","RE2::Set::Match","predicate",
"Set","unclassified","RE2::Set::Match","controller stateless",
"Frag","empty","Frag","constructor",
"Frag","empty","Frag","constructor",
"EmptyStringWalker","degenerate small-class","EmptyStringWalker","constructor",
"EmptyStringWalker","degenerate small-class","ShortVisit","wrapper stateless",
"EmptyStringWalker","degenerate small-class","EmptyStringWalker::PostVisit","controller stateless",
"Filter","data-provider","Add","property non-void-command collaborator",
"Filter","data-provider","Compile","predicate",
"Filter","data-provider","Match","property",
"Filter","data-provider","GetRE2","property collaborator",
"MallocCounter","degenerate","MallocCounter","constructor",
"MallocCounter","degenerate","HeapGrowth","incidental",
"MallocCounter","degenerate","PeakHeapGrowth","incidental",
"MallocCounter","degenerate","Reset","empty",
"ExhaustiveTester","unclassified","ExhaustiveTester","constructor",
"ExhaustiveTester","unclassified","regexps","get",
"ExhaustiveTester","unclassified","tests","get",
"ExhaustiveTester","unclassified","failures","get",
"ExhaustiveTester","unclassified","RandomStrings","command",
"ExhaustiveTester","unclassified","ExhaustiveTester::HandleRegexp","command",
"PrefilterTree","boundary","PrefilterTree::PrefilterTree","constructor",
"PrefilterTree","boundary","PrefilterTree::PrefilterTree","constructor",
"PrefilterTree","boundary","PrefilterTree::~PrefilterTree","destructor",
"PrefilterTree","boundary","PrefilterTree::Add","void-accessor command collaborator",
"PrefilterTree","boundary","PrefilterTree::Compile","command collaborator",
"PrefilterTree","boundary","PrefilterTree::CanonicalNode","controller stateless",
"PrefilterTree","boundary","PrefilterTree::KeepNode","predicate collaborator",
"PrefilterTree","boundary","PrefilterTree::AssignUniqueIds","command collaborator",
"PrefilterTree","boundary","PrefilterTree::RegexpsGivenStrings","collaborator",
"PrefilterTree","boundary","PrefilterTree::PropagateMatch","collaborator",
"PrefilterTree","boundary","PrefilterTree::PrintPrefilter","command",
"PrefilterTree","boundary","PrefilterTree::PrintDebugInfo","command collaborator",
"PrefilterTree","boundary","PrefilterTree::DebugNodeString","property collaborator",
"CaptureNamesWalker","boundary lazy-class","CaptureNamesWalker","constructor",
"CaptureNamesWalker","boundary lazy-class","~CaptureNamesWalker","destructor",
"CaptureNamesWalker","boundary lazy-class","TakeMap","property set",
"CaptureNamesWalker","boundary lazy-class","PreVisit","property set collaborator",
"CaptureNamesWalker","boundary lazy-class","ShortVisit","wrapper stateless",
"Bitmap256","boundary","Bitmap256","constructor",
"Bitmap256","boundary","Clear","wrapper",
"Bitmap256","boundary","Test","get wrapper",
"Bitmap256","boundary","Set","set",
"Bitmap256","boundary","Bitmap256::FindNextSetBit","property wrapper",
"SubexpressionWalker","pure-controller degenerate small-class","PostVisit","controller stateless",
"SubexpressionWalker","pure-controller degenerate small-class","ShortVisit","incidental",
"PCRE_Options","data-class","PCRE_Options","constructor",
"PCRE_Options","data-class","option","get collaborator",
"PCRE_Options","data-class","set_option","set collaborator",
"PCRE_Options","data-class","match_limit","get",
"PCRE_Options","data-class","set_match_limit","set",
"PCRE_Options","data-class","stack_limit","get",
"PCRE_Options","data-class","set_stack_limit","set",
"PCRE_Options","data-class","report_errors","get",
"PCRE_Options","data-class","set_report_errors","set",
"NFA","entity boundary","CopyCapture","wrapper",
"NFA","entity boundary","NFA::NFA","constructor",
"NFA","entity boundary","NFA::~NFA","destructor",
"NFA","entity boundary","NFA::AllocThread","property collaborator",
"NFA","entity boundary","NFA::Incref","wrapper stateless",
"NFA","entity boundary","NFA::Decref","void-accessor set collaborator",
"NFA","entity boundary","NFA::AddToThreadq","void-accessor command collaborator",
"NFA","entity boundary","NFA::Step","property non-void-command collaborator",
"NFA","entity boundary","NFA::FormatCapture","property wrapper",
"NFA","entity boundary","NFA::Search","predicate non-void-command",
"Compiler","boundary","Compiler::Compiler","constructor",
"Compiler","boundary","Compiler::~Compiler","destructor",
"Compiler","boundary","Compiler::AllocInst","property non-void-command",
"Compiler","boundary","Compiler::NoMatch","wrapper stateless",
"Compiler","boundary","Compiler::Cat","property non-void-command collaborator",
"Compiler","boundary","Compiler::Alt","property non-void-command collaborator",
"Compiler","boundary","Compiler::Plus","property non-void-command collaborator",
"Compiler","boundary","Compiler::Star","property non-void-command collaborator",
"Compiler","boundary","Compiler::Quest","property non-void-command collaborator",
"Compiler","boundary","Compiler::ByteRange","property non-void-command collaborator",
"Compiler","boundary","Compiler::Nop","property non-void-command collaborator",
"Compiler","boundary","Compiler::Match","property non-void-command collaborator",
"Compiler","boundary","Compiler::EmptyWidth","property non-void-command collaborator",
"Compiler","boundary","Compiler::Capture","property non-void-command collaborator",
"Compiler","boundary","Compiler::BeginRange","command",
"Compiler","boundary","Compiler::UncachedRuneByteSuffix","property non-void-command collaborator",
"Compiler","boundary","Compiler::CachedRuneByteSuffix","property non-void-command",
"Compiler","boundary","Compiler::IsCachedRuneByteSuffix","predicate non-void-command",
"Compiler","boundary","Compiler::AddSuffix","unclassified",
"Compiler","boundary","Compiler::AddSuffixRecursive","property",
"Compiler","boundary","Compiler::ByteRangeEqual","get wrapper",
"Compiler","boundary","Compiler::FindByteRange","property non-void-command collaborator",
"Compiler","boundary","Compiler::EndRange","get collaborator",
"Compiler","boundary","Compiler::AddRuneRange","command",
"Compiler","boundary","Compiler::AddRuneRangeLatin1","command",
"Compiler","boundary","Compiler::Add_80_10ffff","command",
"Compiler","boundary","Compiler::AddRuneRangeUTF8","command",
"Compiler","boundary","Compiler::Copy","property set collaborator",
"Compiler","boundary","Compiler::ShortVisit","property set collaborator",
"Compiler","boundary","Compiler::PreVisit","property wrapper",
"Compiler","boundary","Compiler::Literal","property non-void-command collaborator",
"Compiler","boundary","Compiler::PostVisit","property collaborator",
"Compiler","boundary","Compiler::Setup","command collaborator",
"Compiler","boundary","Compiler::Compile","controller stateless",
"Compiler","boundary","Compiler::Finish","property non-void-command collaborator",
"Compiler","boundary","Compiler::DotStar","property non-void-command collaborator",
"Compiler","boundary","Compiler::CompileSet","controller stateless",
"CharClassBuilder","boundary","begin","property non-void-command collaborator",
"CharClassBuilder","boundary","end","property non-void-command collaborator",
"CharClassBuilder","boundary","size","get",
"CharClassBuilder","boundary","empty","predicate",
"CharClassBuilder","boundary","full","predicate",
"CharClassBuilder","boundary","CharClassBuilder::AddRangeFlags","command collaborator",
"CharClassBuilder","boundary","CharClassBuilder::CharClassBuilder","constructor",
"CharClassBuilder","boundary","CharClassBuilder::AddRange","predicate non-void-command collaborator",
"CharClassBuilder","boundary","CharClassBuilder::AddCharClass","command collaborator",
"CharClassBuilder","boundary","CharClassBuilder::Contains","predicate non-void-command collaborator",
"CharClassBuilder","boundary","CharClassBuilder::FoldsASCII","predicate",
"CharClassBuilder","boundary","CharClassBuilder::Copy","property non-void-command factory collaborator",
"CharClassBuilder","boundary","CharClassBuilder::RemoveAbove","command collaborator",
"CharClassBuilder","boundary","CharClassBuilder::Negate","command",
"CharClassBuilder","boundary","CharClassBuilder::GetCharClass","property non-void-command collaborator",
"Info","factory controller degenerate","Prefilter::Info::Info","constructor",
"Info","factory controller degenerate","Prefilter::Info::~Info","destructor",
"Info","factory controller degenerate","Prefilter::Info::TakeMatch","wrapper stateless",
"Info","factory controller degenerate","Prefilter::Info::ToString","controller stateless",
"Info","factory controller degenerate","Prefilter::Info::Concat","factory wrapper stateless",
"Info","factory controller degenerate","Prefilter::Info::And","factory controller stateless",
"Info","factory controller degenerate","Prefilter::Info::Alt","factory controller stateless",
"Info","factory controller degenerate","Prefilter::Info::Quest","factory wrapper stateless",
"Info","factory controller degenerate","Prefilter::Info::Star","property non-void-command",
"Info","factory controller degenerate","Prefilter::Info::Plus","factory controller stateless",
"Info","factory controller degenerate","Prefilter::Info::Literal","factory controller stateless",
"Info","factory controller degenerate","Prefilter::Info::LiteralLatin1","factory controller stateless",
"Info","factory controller degenerate","Prefilter::Info::AnyCharOrAnyByte","factory wrapper stateless",
"Info","factory controller degenerate","Prefilter::Info::NoMatch","factory wrapper stateless",
"Info","factory controller degenerate","Prefilter::Info::AnyMatch","factory wrapper stateless",
"Info","factory controller degenerate","Prefilter::Info::EmptyString","factory controller stateless",
"Info","factory controller degenerate","Prefilter::Info::CClass","property non-void-command factory collaborator",
"DFA::Workq","unclassified","is_mark","predicate",
"DFA::Workq","unclassified","maxmark","get",
"DFA::Workq","unclassified","clear","set",
"DFA::Workq","unclassified","mark","command",
"DFA::Workq","unclassified","size","property",
"DFA::Workq","unclassified","insert","command",
"DFA::Workq","unclassified","insert_new","set",
"Prefilter","boundary","op","get collaborator",
"Prefilter","boundary","atom","get",
"Prefilter","boundary","set_unique_id","set",
"Prefilter","boundary","unique_id","get",
"Prefilter","boundary","subs","get wrapper",
"Prefilter","boundary","set_subs","set",
"Prefilter","boundary","AbslHashValue","property controller",
"Prefilter","boundary","operator==","predicate controller",
"Prefilter","boundary","Prefilter::Prefilter","constructor",
"Prefilter","boundary","Prefilter::~Prefilter","destructor",
"Prefilter","boundary","Prefilter::Simplify","property",
"Prefilter","boundary","Prefilter::AndOr","factory controller stateless",
"Prefilter","boundary","Prefilter::And","property non-void-command",
"Prefilter","boundary","Prefilter::Or","property non-void-command",
"Prefilter","boundary","Prefilter::SimplifyStringSet","controller stateless",
"Prefilter","boundary","Prefilter::OrStrings","property non-void-command factory collaborator",
"Prefilter","boundary","Prefilter::FromString","factory wrapper stateless",
"Prefilter","boundary","Prefilter::CrossProduct","controller stateless",
"Prefilter","boundary","Prefilter::BuildInfo","controller stateless",
"Prefilter","boundary","Prefilter::FromRegexp","property non-void-command collaborator",
"Prefilter","boundary","Prefilter::DebugString","get property",
"Prefilter","boundary","Prefilter::FromRE2","property non-void-command collaborator",
"","boundary degenerate small-class","ParseFrom","wrapper stateless",
"BitState","unclassified","BitState::BitState","constructor",
"BitState","unclassified","BitState::ShouldVisit","predicate",
"BitState","unclassified","BitState::GrowStack","collaborator",
"BitState","unclassified","BitState::Push","command collaborator",
"BitState","unclassified","BitState::TrySearch","predicate non-void-command",
"BitState","unclassified","BitState::Search","predicate non-void-command",
"Prefilter::Info::Walker","data-provider data-class small-class","latin1","get",
"ByteMapBuilder","unclassified","ByteMapBuilder","constructor",
"ByteMapBuilder","unclassified","ByteMapBuilder::Mark","command",
"ByteMapBuilder","unclassified","ByteMapBuilder::Merge","command",
"ByteMapBuilder","unclassified","ByteMapBuilder::Build","void-accessor command",
"ByteMapBuilder","unclassified","ByteMapBuilder::Recolor","property",
"Prog","unclassified","inst","property collaborator",
"Prog","unclassified","start","get",
"Prog","unclassified","set_start","set",
"Prog","unclassified","start_unanchored","get",
"Prog","unclassified","set_start_unanchored","set",
"Prog","unclassified","size","get",
"Prog","unclassified","reversed","get",
"Prog","unclassified","set_reversed","set",
"Prog","unclassified","list_count","get",
"Prog","unclassified","inst_count","get collaborator",
"Prog","unclassified","list_heads","property non-void-command",
"Prog","unclassified","bit_state_text_max_size","get",
"Prog","unclassified","dfa_mem","get",
"Prog","unclassified","set_dfa_mem","set",
"Prog","unclassified","anchor_start","get",
"Prog","unclassified","set_anchor_start","set",
"Prog","unclassified","anchor_end","get",
"Prog","unclassified","set_anchor_end","set",
"Prog","unclassified","bytemap_range","get",
"Prog","unclassified","bytemap","get",
"Prog","unclassified","can_prefix_accel","predicate",
"Prog","unclassified","PrefixAccel","property command collaborator",
"Prog","unclassified","CanBitState","predicate non-void-command",
"Prog","unclassified","Prog::SearchBitState","controller stateless",
"Prog","unclassified","Prog::CompileSet","wrapper stateless",
"Prog","unclassified","Prog::TESTING_ONLY_set_dfa_should_bail_when_slow","incidental",
"Prog","unclassified","Prog::GetDFA","get non-void-command collaborator",
"Prog","unclassified","Prog::DeleteDFA","collaborator incidental",
"Prog","unclassified","Prog::SearchDFA","predicate non-void-command collaborator",
"Prog","unclassified","Prog::PossibleMatchRange","predicate non-void-command",
"Prog","unclassified","Prog::SearchNFA","predicate non-void-command collaborator",
"Prog","unclassified","Prog::Fanout","command collaborator",
"Prog","unclassified","Prog::SearchOnePass","predicate non-void-command",
"Prog","unclassified","Prog::IsOnePass","predicate non-void-command",
"Prog","unclassified","Prog::Prog","constructor",
"Prog","unclassified","Prog::~Prog","destructor",
"Prog","unclassified","Prog::Dump","property wrapper",
"Prog","unclassified","Prog::DumpUnanchored","property wrapper",
"Prog","unclassified","Prog::DumpByteMap","property wrapper",
"Prog","unclassified","Prog::Optimize","command collaborator",
"Prog","unclassified","Prog::EmptyFlags","controller stateless",
"Prog","unclassified","Prog::ComputeByteMap","command",
"Prog","unclassified","Prog::Flatten","command",
"Prog","unclassified","Prog::MarkSuccessors","command",
"Prog","unclassified","Prog::MarkDominator","command",
"Prog","unclassified","Prog::EmitList","command collaborator",
"Prog","unclassified","Prog::ComputeHints","controller stateless",
"Prog","unclassified","Prog::ConfigurePrefixAccel","command",
"Prog","unclassified","Prog::PrefixAccel_ShiftDFA","property collaborator",
"Prog","unclassified","Prog::PrefixAccel_FrontAndBack","property wrapper",
"Prog","unclassified","Prog::UnsafeSearchBacktrack","controller stateless",
"NullWalker","degenerate small-class","NullWalker","constructor",
"NullWalker","degenerate small-class","ShortVisit","wrapper stateless",
"NullWalker","degenerate small-class","NullWalker::PostVisit","incidental",
"RE2::Arg","data-provider boundary small-class","Arg","constructor",
"RE2::Arg","data-provider boundary small-class","Arg","constructor",
"RE2::Arg","data-provider boundary small-class","Arg","constructor",
"RE2::Arg","data-provider boundary small-class","Arg","constructor",
"RE2::Arg","data-provider boundary small-class","Parse","predicate wrapper",
"RE2","data-provider boundary","ok","predicate",
"RE2","data-provider boundary","pattern","get",
"RE2","data-provider boundary","error","get",
"RE2","data-provider boundary","error_code","get collaborator",
"RE2","data-provider boundary","error_arg","get",
"RE2","data-provider boundary","Regexp","get collaborator",
"RE2","data-provider boundary","NumberOfCapturingGroups","get",
"RE2","data-provider boundary","options","get collaborator",
"RE2","data-provider boundary","RE2::FUZZING_ONLY_set_maximum_global_replace_count","incidental",
"RE2","data-provider boundary","RE2::RE2","constructor",
"RE2","data-provider boundary","RE2::RE2","constructor",
"RE2","data-provider boundary","RE2::RE2","constructor",
"RE2","data-provider boundary","RE2::RE2","constructor",
"RE2","data-provider boundary","RE2::Init","command collaborator",
"RE2","data-provider boundary","RE2::ReverseProg","get collaborator",
"RE2","data-provider boundary","RE2::~RE2","destructor",
"RE2","data-provider boundary","RE2::ProgramSize","property",
"RE2","data-provider boundary","RE2::ReverseProgramSize","property collaborator",
"RE2","data-provider boundary","RE2::ProgramFanout","property wrapper",
"RE2","data-provider boundary","RE2::ReverseProgramFanout","property collaborator",
"RE2","data-provider boundary","RE2::NamedCapturingGroups","get set",
"RE2","data-provider boundary","RE2::CapturingGroupNames","get set",
"RE2","data-provider boundary","RE2::FullMatchN","controller stateless",
"RE2","data-provider boundary","RE2::PartialMatchN","controller stateless",
"RE2","data-provider boundary","RE2::ConsumeN","controller stateless",
"RE2","data-provider boundary","RE2::FindAndConsumeN","controller stateless",
"RE2","data-provider boundary","RE2::Replace","predicate non-void-command collaborator",
"RE2","data-provider boundary","RE2::GlobalReplace","property non-void-command collaborator",
"RE2","data-provider boundary","RE2::Extract","predicate non-void-command",
"RE2","data-provider boundary","RE2::QuoteMeta","controller stateless",
"RE2","data-provider boundary","RE2::PossibleMatchRange","predicate",
"RE2","data-provider boundary","RE2::Match","predicate",
"RE2","data-provider boundary","RE2::DoMatch","predicate collaborator",
"RE2","data-provider boundary","RE2::CheckRewriteString","predicate",
"RE2","data-provider boundary","RE2::MaxSubmatch","controller stateless",
"RE2","data-provider boundary","RE2::Rewrite","predicate collaborator",
"RE2","data-provider boundary","RE2::CRadix","wrapper stateless",
"RE2","data-provider boundary","RE2::Hex","wrapper stateless",
"RE2","data-provider boundary","RE2::Octal","wrapper stateless",
"Regexp::ParseState","data-provider data-class small-class","flags","get collaborator",
"Regexp::ParseState","data-provider data-class small-class","rune_max","get",
"FilteredRE2","unclassified","NumRegexps","controller stateless",
"FilteredRE2","unclassified","GetRE2","get collaborator",
"FilteredRE2","unclassified","FilteredRE2::FilteredRE2","constructor",
"FilteredRE2","unclassified","FilteredRE2::FilteredRE2","constructor",
"FilteredRE2","unclassified","FilteredRE2::~FilteredRE2","destructor",
"FilteredRE2","unclassified","FilteredRE2::FilteredRE2","copy-constructor",
"FilteredRE2","unclassified","FilteredRE2::operator=","controller stateless",
"FilteredRE2","unclassified","FilteredRE2::Add","controller stateless",
"FilteredRE2","unclassified","FilteredRE2::Compile","collaborator",
"FilteredRE2","unclassified","FilteredRE2::SlowFirstMatch","property controller",
"FilteredRE2","unclassified","FilteredRE2::FirstMatch","property",
"FilteredRE2","unclassified","FilteredRE2::AllMatches","predicate",
"FilteredRE2","unclassified","FilteredRE2::AllPotentials","unclassified",
"FilteredRE2","unclassified","FilteredRE2::RegexpsGivenStrings","command",
"FilteredRE2","unclassified","FilteredRE2::PrintPrefilter","command",
"PossibleMatchTester","unclassified","PossibleMatchTester","constructor",
"PossibleMatchTester","unclassified","regexps","get",
"PossibleMatchTester","unclassified","tests","get",
"PossibleMatchTester","unclassified","PossibleMatchTester::HandleRegexp","command collaborator",
"FilterTestVars","empty","FilterTestVars","constructor",
"FilterTestVars","empty","FilterTestVars","constructor",
"Prefilter::Info","data-provider data-class small-class","exact","get collaborator",
"Prefilter::Info","data-provider data-class small-class","is_exact","get",
"DFA","boundary","ok","predicate",
"DFA","boundary","kind","get collaborator",
"DFA","boundary","ByteMap","property non-void-command",
"DFA","boundary","DFA::DFA","constructor",
"DFA","boundary","DFA::~DFA","destructor",
"DFA","boundary","DFA::DumpWorkq","controller stateless",
"DFA","boundary","DFA::DumpState","wrapper stateless",
"DFA","boundary","DFA::WorkqToCachedState","property non-void-command collaborator",
"DFA","boundary","DFA::CachedState","property non-void-command factory collaborator",
"DFA","boundary","DFA::ClearCache","command",
"DFA","boundary","DFA::StateToWorkq","command collaborator",
"DFA","boundary","DFA::AddToQueue","command collaborator",
"DFA","boundary","DFA::RunWorkqOnEmptyString","command collaborator",
"DFA","boundary","DFA::RunWorkqOnByte","void-accessor command collaborator",
"DFA","boundary","DFA::RunStateOnByteUnlocked","property non-void-command collaborator",
"DFA","boundary","DFA::RunStateOnByte","property non-void-command collaborator",
"DFA","boundary","DFA::ResetCache","command collaborator",
"DFA","boundary","DFA::InlinedSearchLoop","predicate non-void-command collaborator",
"DFA","boundary","DFA::SearchFFF","wrapper stateless",
"DFA","boundary","DFA::SearchFFT","wrapper stateless",
"DFA","boundary","DFA::SearchFTF","wrapper stateless",
"DFA","boundary","DFA::SearchFTT","wrapper stateless",
"DFA","boundary","DFA::SearchTFF","wrapper stateless",
"DFA","boundary","DFA::SearchTFT","wrapper stateless",
"DFA","boundary","DFA::SearchTTF","wrapper stateless",
"DFA","boundary","DFA::SearchTTT","wrapper stateless",
"DFA","boundary","DFA::FastSearchLoop","wrapper stateless",
"DFA","boundary","DFA::AnalyzeSearch","predicate non-void-command collaborator",
"DFA","boundary","DFA::AnalyzeSearchHelper","predicate non-void-command collaborator",
"DFA","boundary","DFA::Search","predicate non-void-command collaborator",
"DFA","boundary","DFA::PossibleMatchRange","predicate non-void-command collaborator",
"LazyRE2","data-provider boundary","operator*","property collaborator",
"LazyRE2","data-provider boundary","operator->","property collaborator",
"LazyRE2","data-provider boundary","get","get wrapper",
