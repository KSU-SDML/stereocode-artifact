Class Name,Class Stereotype,Method Name,Method Stereotype
"Span","empty","CSelf","constructor",
"Span","empty","CSelf","copy-constructor",
"Span","empty","CSelf","copy-constructor",
"PtrOrSpanOrNull","empty","CSelf","constructor",
"PtrOrSpanOrNull","empty","CSelf","constructor",
"PtrOrSpanOrNull","empty","CSelf","constructor",
"Ptr","entity data-provider boundary","ensurePtr","get collaborator",
"Ptr","entity data-provider boundary","assertInvariants","empty",
"Ptr","entity data-provider boundary","operatorpointer","get",
"Ptr","entity data-provider boundary","~CSelf","destructor",
"Ptr","entity data-provider boundary","~CSelf","destructor",
"Ptr","entity data-provider boundary","invalidate","non-void-command collaborator",
"Ptr","entity data-provider boundary","CSelf","constructor",
"Ptr","entity data-provider boundary","CSelf","constructor",
"Ptr","entity data-provider boundary","CSelf","constructor",
"Ptr","entity data-provider boundary","CSelf","constructor",
"Ptr","entity data-provider boundary","CSelf","constructor",
"Ptr","entity data-provider boundary","assign","get non-void-command collaborator",
"Ptr","entity data-provider boundary","operator=","property non-void-command collaborator",
"Ptr","entity data-provider boundary","type_cast","property wrapper",
"Ptr","entity data-provider boundary","operator==","predicate collaborator",
"Ptr","entity data-provider boundary","operator*","property wrapper",
"Ptr","entity data-provider boundary","operator[]","property wrapper",
"Ptr","entity data-provider boundary","operator->","property wrapper",
"Ptr","entity data-provider boundary","operator++","get set collaborator",
"Ptr","entity data-provider boundary","operator++","property collaborator",
"Ptr","entity data-provider boundary","operator--","get set collaborator",
"Ptr","entity data-provider boundary","operator--","property collaborator",
"Ptr","entity data-provider boundary","operator+=","get set collaborator",
"Ptr","entity data-provider boundary","operator-=","get set collaborator",
"Ptr","entity data-provider boundary","operator+","property wrapper",
"Ptr","entity data-provider boundary","operator-","property wrapper",
"Ptr","entity data-provider boundary","CSelf","constructor",
"Ptr","entity data-provider boundary","operator=","property non-void-command collaborator",
"Ptr","entity data-provider boundary","raw_ptr","get collaborator",
"Ptr","entity data-provider boundary","raw_bytes","get collaborator",
"XSpanInternalDummyArg","degenerate small-class","XSpanInternalDummyArg","empty",
"XSpanInternalDummyArg","degenerate small-class","XSpanInternalDummyArg","empty",
"PackLinuxElf32x86","unclassified","getFormat","incidental",
"PackLinuxElf32x86","unclassified","getName","incidental",
"PackLinuxElf32x86","unclassified","getFullName","incidental",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::addStubEntrySections","void-accessor command",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::defineSymbols","void-accessor command collaborator",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::buildLoader","non-void-command collaborator",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::pack1","void-accessor command collaborator",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::PackLinuxElf32x86","constructor",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::~PackLinuxElf32x86","destructor",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::canUnpack","property non-void-command collaborator",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::newLinker","factory collaborator incidental",
"PackLinuxElf32x86","unclassified","PackLinuxElf32x86::getFilters","incidental",
"PackLinuxElf64ppcle","degenerate","getFormat","incidental",
"PackLinuxElf64ppcle","degenerate","getName","incidental",
"PackLinuxElf64ppcle","degenerate","getFullName","incidental",
"PackLinuxElf64ppcle","degenerate","PackLinuxElf64ppcle::getFilters","incidental",
"PackLinuxElf64ppcle","degenerate","PackLinuxElf64ppcle::PackLinuxElf64ppcle","constructor",
"PackLinuxElf64ppcle","degenerate","PackLinuxElf64ppcle::~PackLinuxElf64ppcle","destructor",
"PackLinuxElf64ppcle","degenerate","PackLinuxElf64ppcle::newLinker","factory collaborator incidental",
"PackLinuxElf64ppcle","degenerate","PackLinuxElf64ppcle::buildLoader","non-void-command collaborator",
"PackLinuxElf64ppcle","degenerate","PackLinuxElf64ppcle::pack1","void-accessor command collaborator",
"lzma_compress_config_t","commander small-class","lzma_compress_config_t::reset","command",
"PackLinuxElf32ppc","degenerate","getFormat","incidental",
"PackLinuxElf32ppc","degenerate","getName","incidental",
"PackLinuxElf32ppc","degenerate","getFullName","incidental",
"PackLinuxElf32ppc","degenerate","PackLinuxElf32ppc::getFilters","incidental",
"PackLinuxElf32ppc","degenerate","PackLinuxElf32ppc::PackLinuxElf32ppc","constructor",
"PackLinuxElf32ppc","degenerate","PackLinuxElf32ppc::~PackLinuxElf32ppc","destructor",
"PackLinuxElf32ppc","degenerate","PackLinuxElf32ppc::newLinker","factory collaborator incidental",
"PackLinuxElf32ppc","degenerate","PackLinuxElf32ppc::buildLoader","non-void-command collaborator",
"PackLinuxElf32ppc","degenerate","PackLinuxElf32ppc::pack1","void-accessor command collaborator",
"PackLinuxElf","degenerate","getVersion","incidental",
"PackLinuxElf","degenerate","canUnpackVersion","incidental",
"PackLinuxElf","degenerate","canUnpack","property non-void-command collaborator",
"PackLinuxElf","degenerate","PackLinuxElf::PackLinuxElf","constructor",
"PackLinuxElf","degenerate","PackLinuxElf::~PackLinuxElf","destructor",
"PackLinuxElf","degenerate","PackLinuxElf::pack3","get property non-void-command collaborator",
"PackLinuxElf","degenerate","PackLinuxElf::addStubEntrySections","command",
"PackLinuxElf","degenerate","PackLinuxElf::defineSymbols","controller",
"PackLinuxElf","degenerate","PackLinuxElf::getCompressionMethods","wrapper stateless",
"PackLinuxElf","degenerate","PackLinuxElf::gnu_hash","incidental",
"PackLinuxElf","degenerate","PackLinuxElf::elf_hash","incidental",
"PackLinuxElf","degenerate","PackLinuxElf::unpack","wrapper stateless",
"InputFile","small-class","open","void-accessor command",
"InputFile","small-class","InputFile::sopen","command",
"PeFile","boundary","getVersion","incidental",
"PeFile","boundary","addNewRelocations","empty",
"PeFile","boundary","getProcessImportParam","incidental",
"PeFile","boundary","canUnpackVersion","incidental",
"PeFile","boundary","kernelDll","incidental",
"PeFile","boundary","PeFile::PeFile","constructor",
"PeFile","boundary","PeFile::testUnpackVersion","predicate",
"PeFile","boundary","PeFile::checkMachine","wrapper stateless",
"PeFile","boundary","PeFile::readFileHeader","property non-void-command",
"PeFile","boundary","PeFile::IDADDR","get collaborator",
"PeFile","boundary","PeFile::ODSIZE","get collaborator",
"PeFile","boundary","PeFile::ODADDR","get collaborator",
"PeFile","boundary","PeFile::IDSIZE","get collaborator",
"PeFile","boundary","PeFile::IDADDR","get collaborator",
"PeFile","boundary","PeFile::addKernelImport","void-accessor command",
"PeFile","boundary","PeFile::addStubImports","command",
"PeFile","boundary","PeFile::processImports2","command",
"PeFile","boundary","PeFile::processImports0","non-void-command collaborator",
"PeFile","boundary","PeFile::processExports","command collaborator",
"PeFile","boundary","PeFile::processExports","controller",
"PeFile","boundary","PeFile::processTls1","void-accessor command",
"PeFile","boundary","PeFile::processTls2","void-accessor controller",
"PeFile","boundary","PeFile::processLoadConf","command collaborator",
"PeFile","boundary","PeFile::processLoadConf","controller stateless",
"PeFile","boundary","PeFile::processResources","command",
"PeFile","boundary","PeFile::processResources","command collaborator",
"PeFile","boundary","PeFile::~PeFile","destructor",
"PackLinuxElf64Be","empty","PackLinuxElf64Be","constructor",
"PackLinuxElf32Le","empty","PackLinuxElf32Le","constructor",
"PackExe","degenerate","getVersion","incidental",
"PackExe","degenerate","getFormat","incidental",
"PackExe","degenerate","getName","incidental",
"PackExe","degenerate","getFullName","incidental",
"PackExe","degenerate","canUnpackVersion","incidental",
"PackExe","degenerate","canUnpackFormat","incidental",
"PackExe","degenerate","PackExe::getCompressionMethods","property",
"PackExe","degenerate","PackExe::getFilters","incidental",
"PackExe","degenerate","PackExe::fillExeHeader","property non-void-command collaborator",
"PackExe","degenerate","PackExe::addLoaderEpilogue","command",
"PackExe","degenerate","PackExe::buildLoader","command",
"PackExe","degenerate","PackExe::readFileHeader","property non-void-command",
"PackExe","degenerate","PackExe::canPack","property non-void-command collaborator",
"ElfLinkerMipsLE","small-class","ElfLinkerMipsLE::relocate1","void-accessor command",
"Options","pure-controller small-class","Options::reset","controller",
"BEPolicy","boundary degenerate","BEPolicy","constructor",
"BEPolicy","boundary degenerate","isBE","collaborator incidental",
"BEPolicy","boundary degenerate","isLE","collaborator incidental",
"BEPolicy","boundary degenerate","get16","wrapper stateless",
"BEPolicy","boundary degenerate","get24","wrapper stateless",
"BEPolicy","boundary degenerate","get32","wrapper stateless",
"BEPolicy","boundary degenerate","get64","wrapper stateless",
"BEPolicy","boundary degenerate","set16","wrapper stateless",
"BEPolicy","boundary degenerate","set24","wrapper stateless",
"BEPolicy","boundary degenerate","set32","wrapper stateless",
"BEPolicy","boundary degenerate","set64","wrapper stateless",
"BEPolicy","boundary degenerate","get16_signed","wrapper stateless",
"BEPolicy","boundary degenerate","get24_signed","wrapper stateless",
"BEPolicy","boundary degenerate","get32_signed","wrapper stateless",
"BEPolicy","boundary degenerate","get64_signed","wrapper stateless",
"BEPolicy","boundary degenerate","u16_compare","wrapper stateless",
"BEPolicy","boundary degenerate","u24_compare","wrapper stateless",
"BEPolicy","boundary degenerate","u32_compare","wrapper stateless",
"BEPolicy","boundary degenerate","u64_compare","wrapper stateless",
"BEPolicy","boundary degenerate","u16_compare_signed","wrapper stateless",
"BEPolicy","boundary degenerate","u24_compare_signed","wrapper stateless",
"BEPolicy","boundary degenerate","u32_compare_signed","wrapper stateless",
"BEPolicy","boundary degenerate","u64_compare_signed","wrapper stateless",
"ElfLinkerPpc32","small-class","ElfLinkerPpc32","constructor",
"ElfLinkerPpc32","small-class","ElfLinkerPpc32::relocate1","void-accessor command",
"ProgressInfo","entity boundary small-class","~ProgressInfo","destructor",
"ProgressInfo","entity boundary small-class","ProgressInfo::SetRatioInfo","property non-void-command collaborator",
"zlib_compress_config_t","commander small-class","zlib_compress_config_t::reset","command",
"Z2_X1","empty","~Z2_X1","destructor",
"ElfLinkerM68k","small-class","ElfLinkerM68k","constructor",
"ElfLinkerM68k","small-class","ElfLinkerM68k::alignCode","set",
"ElfLinkerM68k","small-class","ElfLinkerM68k::relocate1","void-accessor command",
"PackW64PeArm64EC","degenerate","PackW64PeArm64EC","constructor",
"PackW64PeArm64EC","degenerate","getFormat","incidental",
"PackW64PeArm64EC","degenerate","getName","incidental",
"PackW64PeArm64EC","degenerate","getFullName","incidental",
"PackW64PeArm64EC","degenerate","PackW64PeArm64EC::canPack","property non-void-command collaborator",
"ElfLinkerArmLE","small-class","ElfLinkerArmLE::relocate1","void-accessor command",
"ElfLinkerArmBE","small-class","ElfLinkerArmBE","constructor",
"ElfLinkerArmBE","small-class","ElfLinkerArmBE::relocate1","void-accessor command",
"ElfLinkerArm64LE","entity boundary small-class","ElfLinkerArm64LE::relocate1","void-accessor command collaborator",
"ElfLinker","boundary","alignCode","command",
"ElfLinker","boundary","alignData","command",
"ElfLinker","boundary","defineSymbol","void-accessor command",
"ElfLinker","boundary","defineSymbol","void-accessor command",
"ElfLinker","boundary","defineSymbol","void-accessor command",
"ElfLinker","boundary","ElfLinker::ElfLinker","constructor",
"ElfLinker","boundary","ElfLinker::~ElfLinker","destructor",
"ElfLinker","boundary","ElfLinker::init","command",
"ElfLinker","boundary","ElfLinker::preprocessSections","void-accessor command",
"ElfLinker","boundary","ElfLinker::preprocessSymbols","void-accessor command",
"ElfLinker","boundary","ElfLinker::preprocessRelocations","void-accessor command",
"ElfLinker","boundary","ElfLinker::findSection","get property wrapper",
"ElfLinker","boundary","ElfLinker::findSymbol","get property wrapper",
"ElfLinker","boundary","ElfLinker::addSection","property non-void-command factory collaborator",
"ElfLinker","boundary","ElfLinker::addSymbol","non-void-command factory collaborator",
"ElfLinker","boundary","ElfLinker::addRelocation","non-void-command factory collaborator",
"ElfLinker","boundary","ElfLinker::addLoader","get non-void-command",
"ElfLinker","boundary","ElfLinker::addLoader","void-accessor command collaborator",
"ElfLinker","boundary","ElfLinker::addLoaderVA","void-accessor command collaborator",
"ElfLinker","boundary","ElfLinker::getSection","property wrapper",
"ElfLinker","boundary","ElfLinker::getSectionSize","wrapper stateless",
"ElfLinker","boundary","ElfLinker::getLoader","get",
"ElfLinker","boundary","ElfLinker::relocate","set",
"ElfLinker","boundary","ElfLinker::defineSymbol","wrapper stateless",
"ElfLinker","boundary","ElfLinker::dumpSymbol","wrapper stateless",
"ElfLinker","boundary","ElfLinker::dumpSymbols","void-accessor collaborator",
"ElfLinker","boundary","ElfLinker::getSymbolOffset","wrapper stateless",
"ElfLinker","boundary","ElfLinker::alignWithByte","set",
"ElfLinker","boundary","ElfLinker::relocate1","wrapper stateless",
"PackLinuxElf64Le","empty","PackLinuxElf64Le","constructor",
"LeFile","commander","encodePageMap","command",
"LeFile","commander","decodePageMap","command",
"LeFile","commander","encodeResidentNames","command",
"LeFile","commander","decodeResidentNames","command",
"LeFile","commander","encodeNonResidentNames","command",
"LeFile","commander","decodeNonResidentNames","command",
"LeFile","commander","LeFile::LeFile","constructor",
"LeFile","commander","LeFile::~LeFile","destructor",
"LeFile","commander","LeFile::readObjectTable","command",
"LeFile","commander","LeFile::writeObjectTable","command",
"LeFile","commander","LeFile::readPageMap","command",
"LeFile","commander","LeFile::writePageMap","command",
"LeFile","commander","LeFile::readResidentNames","command",
"LeFile","commander","LeFile::writeResidentNames","command",
"LeFile","commander","LeFile::readEntryTable","command",
"LeFile","commander","LeFile::writeEntryTable","command",
"LeFile","commander","LeFile::readFixupPageTable","command",
"LeFile","commander","LeFile::writeFixupPageTable","command",
"LeFile","commander","LeFile::readFixups","command",
"LeFile","commander","LeFile::writeFixups","command",
"LeFile","commander","LeFile::getImageSize","unclassified",
"LeFile","commander","LeFile::readImage","command",
"LeFile","commander","LeFile::writeImage","command",
"LeFile","commander","LeFile::readNonResidentNames","command",
"LeFile","commander","LeFile::writeNonResidentNames","command",
"LeFile","commander","LeFile::readFileHeader","predicate non-void-command",
"LeFile","commander","LeFile::writeFile","command",
"LeFile","commander","LeFile::countFixups","void-accessor wrapper",
"PackerNames","commander boundary data-class small-class","add","set collaborator",
"PackVmlinuzI386","degenerate","getVersion","incidental",
"PackVmlinuzI386","degenerate","getFormat","incidental",
"PackVmlinuzI386","degenerate","getName","incidental",
"PackVmlinuzI386","degenerate","getFullName","incidental",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::PackVmlinuzI386","constructor",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::getCompressionMethods","wrapper stateless",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::getFilters","incidental",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::getStrategy","incidental",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::canPack","property non-void-command collaborator",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::readFileHeader","property non-void-command",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::pack","void-accessor command collaborator",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::canUnpack","property non-void-command collaborator",
"PackVmlinuzI386","degenerate","PackVmlinuzI386::unpack","command collaborator",
"ElfLinkerMipsBE","small-class","ElfLinkerMipsBE","constructor",
"ElfLinkerMipsBE","small-class","ElfLinkerMipsBE::relocate1","void-accessor command",
"InternalError","empty","InternalError","constructor",
"CantUnpackException","empty","CantUnpackException","constructor",
"FileBase","unclassified","isOpen","predicate",
"FileBase","unclassified","getFd","get",
"FileBase","unclassified","getName","get",
"FileBase","unclassified","FileBase::chmod","void-accessor command",
"FileBase","unclassified","FileBase::rename","void-accessor command",
"FileBase","unclassified","FileBase::unlink_noexcept","predicate non-void-command",
"FileBase","unclassified","FileBase::unlink","void-accessor command",
"FileBase","unclassified","FileBase::~FileBase","destructor",
"FileBase","unclassified","FileBase::do_sopen","predicate non-void-command",
"FileBase","unclassified","FileBase::close_noexcept","predicate non-void-command",
"FileBase","unclassified","FileBase::closex","command",
"FileBase","unclassified","FileBase::seek","property non-void-command collaborator",
"FileBase","unclassified","FileBase::tell","property collaborator",
"FileBase","unclassified","FileBase::set_extent","command collaborator",
"FileBase","unclassified","FileBase::st_size","get collaborator",
"NotCompressibleException","empty","NotCompressibleException","constructor",
"CantPackException","empty","CantPackException","constructor",
"PackerBase","empty","~PackerBase","destructor",
"PackerBase","empty","PackerBase::PackerBase","constructor",
"OverlayException","empty","OverlayException","constructor",
"PackPs1","unclassified","getVersion","incidental",
"PackPs1","unclassified","getFormat","incidental",
"PackPs1","unclassified","getName","incidental",
"PackPs1","unclassified","getFullName","incidental",
"PackPs1","unclassified","PackPs1::getFilters","incidental",
"PackPs1","unclassified","PackPs1::newLinker","factory collaborator incidental",
"PackPs1","unclassified","PackPs1::readFileHeader","property non-void-command",
"PackPs1","unclassified","PackPs1::readBkupHeader","predicate non-void-command",
"PackPs1","unclassified","PackPs1::putBkupHeader","void-accessor wrapper",
"PackPs1","unclassified","PackPs1::getBkupHeader","wrapper stateless",
"PackPs1","unclassified","PackPs1::checkFileHeader","predicate set",
"PackPs1","unclassified","PackPs1::canPack","property non-void-command collaborator",
"PackPs1","unclassified","PackPs1::buildLoader","command",
"PackPs1","unclassified","PackPs1::findBssSection","predicate non-void-command",
"PackPs1","unclassified","PackPs1::pack","void-accessor command collaborator",
"PackPs1","unclassified","PackPs1::canUnpack","property non-void-command collaborator",
"PackPs1","unclassified","PackPs1::unpack","command collaborator",
"EOFException","empty","EOFException","constructor",
"AlreadyPackedException","empty","AlreadyPackedException","constructor",
"VPtr","boundary small-class","operator+","wrapper",
"OutOfMemoryException","empty","OutOfMemoryException","constructor",
"PackFreeBSDElf32x86","degenerate","getFormat","incidental",
"PackFreeBSDElf32x86","degenerate","getName","incidental",
"PackFreeBSDElf32x86","degenerate","getFullName","incidental",
"PackFreeBSDElf32x86","degenerate","PackFreeBSDElf32x86::PackFreeBSDElf32x86","constructor",
"PackFreeBSDElf32x86","degenerate","PackFreeBSDElf32x86::~PackFreeBSDElf32x86","destructor",
"OutStream","entity boundary","~OutStream","destructor",
"OutStream","entity boundary","Init","command",
"OutStream","entity boundary","WriteByte","property non-void-command collaborator",
"OutStream","entity boundary","OutStream::Write","property non-void-command collaborator",
"zstd_compress_result_t","boundary small-class","reset","wrapper",
"Error","empty","Error","constructor",
"X2","empty","~X2","destructor",
"PackLinuxElf32armBe","entity boundary degenerate","getFormat","incidental",
"PackLinuxElf32armBe","entity boundary degenerate","getName","incidental",
"PackLinuxElf32armBe","entity boundary degenerate","getFullName","incidental",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::getCompressionMethods","wrapper stateless",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::updateLoader","void-accessor command collaborator",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::buildLoader","non-void-command collaborator",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::pack1","void-accessor command collaborator",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::getFilters","wrapper stateless",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::defineSymbols","void-accessor command collaborator",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::PackLinuxElf32armBe","constructor",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::~PackLinuxElf32armBe","destructor",
"PackLinuxElf32armBe","entity boundary degenerate","PackLinuxElf32armBe::newLinker","factory collaborator stateless",
"ElfLinkerX86","small-class","alignCode","command",
"ElfLinkerX86","small-class","ElfLinkerX86::relocate1","void-accessor command",
"Exception","empty","Exception","constructor",
"lzma_compress_result_t","boundary small-class","reset","wrapper",
"upx_compress_result_t","commander small-class","reset","command",
"PackNetBSDElf32x86","degenerate","getFormat","incidental",
"PackNetBSDElf32x86","degenerate","getName","incidental",
"PackNetBSDElf32x86","degenerate","getFullName","incidental",
"PackNetBSDElf32x86","degenerate","PackNetBSDElf32x86::buildLoader","non-void-command collaborator",
"PackNetBSDElf32x86","degenerate","PackNetBSDElf32x86::generateElfHdr","void-accessor command collaborator",
"PackNetBSDElf32x86","degenerate","PackNetBSDElf32x86::PackNetBSDElf32x86","constructor",
"PackNetBSDElf32x86","degenerate","PackNetBSDElf32x86::~PackNetBSDElf32x86","destructor",
"NotPackedException","empty","NotPackedException","constructor",
"MyVType2","empty","MyVType2","constructor",
"MyVType2","empty","~MyVType2","destructor",
"X1","empty","~X1","destructor",
"ucl_compress_result_t","boundary small-class","reset","wrapper",
"PackLinuxElf64","entity boundary","PackLinuxElf64::checkEhdr","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::is_LOAD64","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_find_Phdr_for_va","property non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::pack3","get non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::defineSymbols","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::PackLinuxElf64","constructor",
"PackLinuxElf64","entity boundary","PackLinuxElf64::~PackLinuxElf64","destructor",
"PackLinuxElf64","entity boundary","PackLinuxElf64::add_phdrx","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::PackLinuxElf64help1","command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::patchLoader","empty",
"PackLinuxElf64","entity boundary","PackLinuxElf64::updateLoader","command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::buildLinuxLoader","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_find_ptype","property non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_find_section_name","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_find_section_type","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::get_str_name","property wrapper",
"PackLinuxElf64","entity boundary","PackLinuxElf64::get_dynsym_name","property",
"PackLinuxElf64","entity boundary","PackLinuxElf64::calls_crt1","predicate non-void-command",
"PackLinuxElf64","entity boundary","PackLinuxElf64::canUnpack","property non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::canPack","property non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::getbrk","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::generateElfHdr","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::adjABS","property non-void-command",
"PackLinuxElf64","entity boundary","PackLinuxElf64::asl_pack2_Shdrs","void-accessor command",
"PackLinuxElf64","entity boundary","PackLinuxElf64::pack1","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::find_LOAD_gap","non-void-command",
"PackLinuxElf64","entity boundary","PackLinuxElf64::pack2","property non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::forward_Shdrs","non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::pack4","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::unRela64","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::un_asl_dynsym","command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::un_shlib_1","void-accessor command",
"PackLinuxElf64","entity boundary","PackLinuxElf64::un_DT_INIT","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::unpack","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_find_dynptr","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_find_dynamic","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_unsigned_dynamic","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_get_offset_from_address","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::check_pt_load","property non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_has_dynamic","property collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::check_pt_dynamic","property non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::sort_DT64_offsets","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::find_dt_ndx","non-void-command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_find_table_size","get non-void-command",
"PackLinuxElf64","entity boundary","PackLinuxElf64::invert_pt_dynamic","void-accessor command collaborator",
"PackLinuxElf64","entity boundary","PackLinuxElf64::elf_lookup","property collaborator",
"PackDylibI386","lazy-class degenerate","getFormat","incidental",
"PackDylibI386","lazy-class degenerate","getName","incidental",
"PackDylibI386","lazy-class degenerate","getFullName","incidental",
"PackDylibI386","lazy-class degenerate","PackDylibI386::PackDylibI386","constructor",
"PackDylibI386","lazy-class degenerate","PackDylibI386::pack4","void-accessor command collaborator",
"PackDylibI386","lazy-class degenerate","PackDylibI386::pack3","property set collaborator",
"IOException","empty","IOException","constructor",
"PackLinuxElf32","entity boundary","PackLinuxElf32::checkEhdr","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::is_LOAD32","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::PackLinuxElf32help1","command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_find_Phdr_for_va","property non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::asl_slide_Shdrs","command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::pack3","get non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::defineSymbols","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::PackLinuxElf32","constructor",
"PackLinuxElf32","entity boundary","PackLinuxElf32::~PackLinuxElf32","destructor",
"PackLinuxElf32","entity boundary","PackLinuxElf32::add_phdrx","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::patchLoader","empty",
"PackLinuxElf32","entity boundary","PackLinuxElf32::ARM_updateLoader","command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::updateLoader","command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::buildLinuxLoader","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::sort_DT32_offsets","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::find_dt_ndx","non-void-command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_find_table_size","get non-void-command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::invert_pt_dynamic","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_find_ptype","property non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_find_section_name","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_find_section_type","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::get_str_name","property wrapper",
"PackLinuxElf32","entity boundary","PackLinuxElf32::get_dynsym_name","property",
"PackLinuxElf32","entity boundary","PackLinuxElf32::calls_crt1","predicate non-void-command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::canUnpack","property non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::canPackOSABI","predicate non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::canPack","property non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::getbrk","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::getbase","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::generateElfHdr","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::adjABS","property non-void-command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::pack1","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::asl_pack2_Shdrs","void-accessor command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::find_LOAD_gap","non-void-command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::pack2","property non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::ARM_is_QNX","property non-void-command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::ARM_defineSymbols","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::forward_Shdrs","non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::pack4","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::unRel32","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::un_asl_dynsym","command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::un_shlib_1","void-accessor command",
"PackLinuxElf32","entity boundary","PackLinuxElf32::un_DT_INIT","void-accessor command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_get_offset_from_address","unclassified",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_get_offset_from_Phdrs","collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::check_pt_load","property non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_has_dynamic","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::check_pt_dynamic","non-void-command collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_find_dynptr","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_find_dynamic","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_unsigned_dynamic","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::elf_lookup","property collaborator",
"PackLinuxElf32","entity boundary","PackLinuxElf32::unpack","void-accessor command collaborator",
"PackLinuxElf64amd","degenerate","getFormat","incidental",
"PackLinuxElf64amd","degenerate","getName","incidental",
"PackLinuxElf64amd","degenerate","getFullName","incidental",
"PackLinuxElf64amd","degenerate","PackLinuxElf64amd::newLinker","factory collaborator incidental",
"PackLinuxElf64amd","degenerate","PackLinuxElf64amd::getFilters","incidental",
"PackLinuxElf64amd","degenerate","PackLinuxElf64amd::PackLinuxElf64amd","constructor",
"PackLinuxElf64amd","degenerate","PackLinuxElf64amd::~PackLinuxElf64amd","destructor",
"PackLinuxElf64amd","degenerate","PackLinuxElf64amd::defineSymbols","void-accessor command collaborator",
"PackLinuxElf64amd","degenerate","PackLinuxElf64amd::buildLoader","non-void-command collaborator",
"PackLinuxElf64amd","degenerate","PackLinuxElf64amd::pack1","void-accessor command collaborator",
"MyType1","empty","MyType1","constructor",
"PackWinCeArm","unclassified","getFormat","incidental",
"PackWinCeArm","unclassified","getName","incidental",
"PackWinCeArm","unclassified","getFullName","incidental",
"PackWinCeArm","unclassified","defineFilterSymbols","empty",
"PackWinCeArm","unclassified","kernelDll","incidental",
"PackWinCeArm","unclassified","PackWinCeArm::getCompressionMethods","property wrapper",
"PackWinCeArm","unclassified","PackWinCeArm::getFilters","incidental",
"PackWinCeArm","unclassified","PackWinCeArm::processImports2","command",
"PackWinCeArm","unclassified","PackWinCeArm::addStubImports","command",
"PackWinCeArm","unclassified","PackWinCeArm::processTls","set",
"PackWinCeArm","unclassified","PackWinCeArm::canPack","property non-void-command collaborator",
"PackWinCeArm","unclassified","PackWinCeArm::buildLoader","command collaborator",
"PackWinCeArm","unclassified","PackWinCeArm::needForceOption","predicate",
"PackWinCeArm","unclassified","PackWinCeArm::callCompressWithFilters","void-accessor controller",
"PackWinCeArm","unclassified","PackWinCeArm::addNewRelocations","controller stateless",
"PackWinCeArm","unclassified","PackWinCeArm::getProcessImportParam","controller stateless",
"PackWinCeArm","unclassified","PackWinCeArm::defineSymbols","command",
"PackWinCeArm","unclassified","PackWinCeArm::setOhDataBase","set collaborator",
"PackWinCeArm","unclassified","PackWinCeArm::setOhHeaderSize","set collaborator",
"PackWinCeArm","unclassified","PackWinCeArm::pack","void-accessor command collaborator",
"BE16","data-provider boundary","operatorunsigned","property wrapper",
"BE16","data-provider boundary","operator=","get wrapper",
"BE16","data-provider boundary","operator+=","get wrapper",
"BE16","data-provider boundary","operator-=","get wrapper",
"BE16","data-provider boundary","operator*=","get wrapper",
"BE16","data-provider boundary","operator/=","get wrapper",
"BE16","data-provider boundary","operator&=","get wrapper",
"BE16","data-provider boundary","operator|=","get wrapper",
"BE16","data-provider boundary","operator^=","get wrapper",
"BE16","data-provider boundary","operator<<=","get wrapper",
"BE16","data-provider boundary","operator>>=","get wrapper",
"BE16","data-provider boundary","operator==","property wrapper",
"BE16","data-provider boundary","operator<","property wrapper",
"LE16","data-provider boundary","operatorunsigned","property wrapper",
"LE16","data-provider boundary","operator=","get wrapper",
"LE16","data-provider boundary","operator+=","get wrapper",
"LE16","data-provider boundary","operator-=","get wrapper",
"LE16","data-provider boundary","operator*=","get wrapper",
"LE16","data-provider boundary","operator/=","get wrapper",
"LE16","data-provider boundary","operator&=","get wrapper",
"LE16","data-provider boundary","operator|=","get wrapper",
"LE16","data-provider boundary","operator^=","get wrapper",
"LE16","data-provider boundary","operator<<=","get wrapper",
"LE16","data-provider boundary","operator>>=","get wrapper",
"LE16","data-provider boundary","operator==","property wrapper",
"LE16","data-provider boundary","operator<","property wrapper",
"ElfLinker::Relocation","empty","~Relocation","destructor",
"LEPolicy","boundary degenerate","LEPolicy","constructor",
"LEPolicy","boundary degenerate","isBE","collaborator incidental",
"LEPolicy","boundary degenerate","isLE","collaborator incidental",
"LEPolicy","boundary degenerate","get16","wrapper stateless",
"LEPolicy","boundary degenerate","get24","wrapper stateless",
"LEPolicy","boundary degenerate","get32","wrapper stateless",
"LEPolicy","boundary degenerate","get64","wrapper stateless",
"LEPolicy","boundary degenerate","set16","wrapper stateless",
"LEPolicy","boundary degenerate","set24","wrapper stateless",
"LEPolicy","boundary degenerate","set32","wrapper stateless",
"LEPolicy","boundary degenerate","set64","wrapper stateless",
"LEPolicy","boundary degenerate","get16_signed","wrapper stateless",
"LEPolicy","boundary degenerate","get24_signed","wrapper stateless",
"LEPolicy","boundary degenerate","get32_signed","wrapper stateless",
"LEPolicy","boundary degenerate","get64_signed","wrapper stateless",
"LEPolicy","boundary degenerate","u16_compare","wrapper stateless",
"LEPolicy","boundary degenerate","u24_compare","wrapper stateless",
"LEPolicy","boundary degenerate","u32_compare","wrapper stateless",
"LEPolicy","boundary degenerate","u64_compare","wrapper stateless",
"LEPolicy","boundary degenerate","u16_compare_signed","wrapper stateless",
"LEPolicy","boundary degenerate","u24_compare_signed","wrapper stateless",
"LEPolicy","boundary degenerate","u32_compare_signed","wrapper stateless",
"LEPolicy","boundary degenerate","u64_compare_signed","wrapper stateless",
"PackDjgpp2","unclassified","getVersion","incidental",
"PackDjgpp2","unclassified","getFormat","incidental",
"PackDjgpp2","unclassified","getName","incidental",
"PackDjgpp2","unclassified","getFullName","incidental",
"PackDjgpp2","unclassified","PackDjgpp2::getCompressionMethods","wrapper stateless",
"PackDjgpp2","unclassified","PackDjgpp2::getFilters","incidental",
"PackDjgpp2","unclassified","PackDjgpp2::findOverlapOverhead","unclassified",
"PackDjgpp2","unclassified","PackDjgpp2::buildLoader","void-accessor command collaborator",
"PackDjgpp2","unclassified","PackDjgpp2::handleStub","void-accessor controller",
"PackDjgpp2","unclassified","PackDjgpp2::readFileHeader","property non-void-command",
"PackDjgpp2","unclassified","PackDjgpp2::stripDebug","command",
"PackDjgpp2","unclassified","PackDjgpp2::canPack","property non-void-command collaborator",
"PackDjgpp2","unclassified","PackDjgpp2::pack","void-accessor command collaborator",
"PackDjgpp2","unclassified","PackDjgpp2::canUnpack","property non-void-command collaborator",
"PackDjgpp2","unclassified","PackDjgpp2::unpack","void-accessor command collaborator",
"OutputFile","data-provider boundary lazy-class small-class","open","wrapper stateless",
"OutputFile","data-provider boundary lazy-class small-class","getBytesWritten","get collaborator",
"PackLinuxElf64arm","degenerate","getFormat","incidental",
"PackLinuxElf64arm","degenerate","getName","incidental",
"PackLinuxElf64arm","degenerate","getFullName","incidental",
"PackLinuxElf64arm","degenerate","PackLinuxElf64arm::newLinker","factory collaborator incidental",
"PackLinuxElf64arm","degenerate","PackLinuxElf64arm::getFilters","incidental",
"PackLinuxElf64arm","degenerate","PackLinuxElf64arm::PackLinuxElf64arm","constructor",
"PackLinuxElf64arm","degenerate","PackLinuxElf64arm::~PackLinuxElf64arm","destructor",
"PackLinuxElf64arm","degenerate","PackLinuxElf64arm::buildLoader","non-void-command collaborator",
"PackLinuxElf64arm","degenerate","PackLinuxElf64arm::pack1","void-accessor command collaborator",
"PackLinuxElf64arm","degenerate","PackLinuxElf64arm::defineSymbols","void-accessor command collaborator",
"LE64","data-provider boundary","operatorupx_uint64_t","property wrapper",
"LE64","data-provider boundary","operator=","get wrapper",
"LE64","data-provider boundary","operator+=","get wrapper",
"LE64","data-provider boundary","operator-=","get wrapper",
"LE64","data-provider boundary","operator*=","get wrapper",
"LE64","data-provider boundary","operator/=","get wrapper",
"LE64","data-provider boundary","operator&=","get wrapper",
"LE64","data-provider boundary","operator|=","get wrapper",
"LE64","data-provider boundary","operator^=","get wrapper",
"LE64","data-provider boundary","operator<<=","get wrapper",
"LE64","data-provider boundary","operator>>=","get wrapper",
"LE64","data-provider boundary","operator==","property wrapper",
"LE64","data-provider boundary","operator<","property wrapper",
"PackTmt","unclassified","getVersion","incidental",
"PackTmt","unclassified","getFormat","incidental",
"PackTmt","unclassified","getName","incidental",
"PackTmt","unclassified","getFullName","incidental",
"PackTmt","unclassified","PackTmt::getCompressionMethods","wrapper stateless",
"PackTmt","unclassified","PackTmt::getFilters","incidental",
"PackTmt","unclassified","PackTmt::findOverlapOverhead","unclassified",
"PackTmt","unclassified","PackTmt::buildLoader","void-accessor command collaborator",
"PackTmt","unclassified","PackTmt::readFileHeader","property non-void-command",
"PackTmt","unclassified","PackTmt::canPack","property non-void-command collaborator",
"PackTmt","unclassified","PackTmt::pack","void-accessor command collaborator",
"PackTmt","unclassified","PackTmt::canUnpack","property non-void-command collaborator",
"PackTmt","unclassified","PackTmt::unpack","void-accessor command collaborator",
"MyType","empty","MyType","constructor",
"MyType","empty","MyType","constructor",
"PackLinuxElf32mipsel","boundary degenerate","getFormat","incidental",
"PackLinuxElf32mipsel","boundary degenerate","getName","incidental",
"PackLinuxElf32mipsel","boundary degenerate","getFullName","incidental",
"PackLinuxElf32mipsel","boundary degenerate","PackLinuxElf32mipsel::updateLoader","void-accessor command collaborator",
"PackLinuxElf32mipsel","boundary degenerate","PackLinuxElf32mipsel::buildLoader","non-void-command collaborator",
"PackLinuxElf32mipsel","boundary degenerate","PackLinuxElf32mipsel::pack1","void-accessor command collaborator",
"PackLinuxElf32mipsel","boundary degenerate","PackLinuxElf32mipsel::getFilters","incidental",
"PackLinuxElf32mipsel","boundary degenerate","PackLinuxElf32mipsel::defineSymbols","void-accessor command collaborator",
"PackLinuxElf32mipsel","boundary degenerate","PackLinuxElf32mipsel::PackLinuxElf32mipsel","constructor",
"PackLinuxElf32mipsel","boundary degenerate","PackLinuxElf32mipsel::~PackLinuxElf32mipsel","destructor",
"PackLinuxElf32mipsel","boundary degenerate","PackLinuxElf32mipsel::newLinker","factory collaborator stateless",
"BE32","data-provider boundary","operatorunsigned","property wrapper",
"BE32","data-provider boundary","operator=","get wrapper",
"BE32","data-provider boundary","operator+=","get wrapper",
"BE32","data-provider boundary","operator-=","get wrapper",
"BE32","data-provider boundary","operator*=","get wrapper",
"BE32","data-provider boundary","operator/=","get wrapper",
"BE32","data-provider boundary","operator&=","get wrapper",
"BE32","data-provider boundary","operator|=","get wrapper",
"BE32","data-provider boundary","operator^=","get wrapper",
"BE32","data-provider boundary","operator<<=","get wrapper",
"BE32","data-provider boundary","operator>>=","get wrapper",
"BE32","data-provider boundary","operator==","property wrapper",
"BE32","data-provider boundary","operator<","property wrapper",
"PackMachPPC64","boundary","getFormat","incidental",
"PackMachPPC64","boundary","getName","incidental",
"PackMachPPC64","boundary","getFullName","incidental",
"PackMachPPC64","boundary","threado_size","property",
"PackMachPPC64","boundary","threado_setPC","command collaborator",
"PackMachPPC64","boundary","threado_rewrite","controller",
"PackMachPPC64","boundary","threado_write","controller",
"PackMachPPC64","boundary","threadc_getPC","property collaborator",
"PackMachPPC64","boundary","PackMachPPC64::PackMachPPC64","constructor",
"PackMachPPC64","boundary","PackMachPPC64::getFilters","incidental",
"PackMachPPC64","boundary","PackMachPPC64::newLinker","factory collaborator incidental",
"PackMachPPC64","boundary","PackMachPPC64::pack1_setup_threado","command collaborator",
"OptVar","unclassified","operatorT","get",
"OptVar","unclassified","assertValue","unclassified",
"OptVar","unclassified","OptVar","constructor",
"OptVar","unclassified","operator=","get non-void-command collaborator",
"OptVar","unclassified","reset","command",
"AbstractPolicy","empty","AbstractPolicy","constructor",
"AbstractPolicy","empty","~AbstractPolicy","destructor",
"ucl_compress_config_t","boundary small-class","reset","wrapper",
"Z1_X2","empty","~Z1_X2","destructor",
"PeFile32","entity data-provider boundary","PeFile32::PeFile32","constructor",
"PeFile32","entity data-provider boundary","PeFile32::~PeFile32","destructor",
"PeFile32","entity data-provider boundary","PeFile32::readPeHeader","command",
"PeFile32","entity data-provider boundary","PeFile32::pack0","void-accessor wrapper",
"PeFile32","entity data-provider boundary","PeFile32::unpack","void-accessor wrapper",
"PeFile32","entity data-provider boundary","PeFile32::canUnpack","property wrapper",
"PeFile32","entity data-provider boundary","PeFile32::processImports","wrapper stateless",
"PeFile32","entity data-provider boundary","PeFile32::processTls","void-accessor wrapper",
"PeFile32","entity data-provider boundary","PeFile32::processTls","void-accessor wrapper",
"bzip2_compress_result_t","boundary small-class","reset","wrapper",
"zlib_compress_result_t","boundary small-class","reset","wrapper",
"LE32","data-provider boundary","operatorunsigned","property wrapper",
"LE32","data-provider boundary","operator=","get wrapper",
"LE32","data-provider boundary","operator+=","get wrapper",
"LE32","data-provider boundary","operator-=","get wrapper",
"LE32","data-provider boundary","operator*=","get wrapper",
"LE32","data-provider boundary","operator/=","get wrapper",
"LE32","data-provider boundary","operator&=","get wrapper",
"LE32","data-provider boundary","operator|=","get wrapper",
"LE32","data-provider boundary","operator^=","get wrapper",
"LE32","data-provider boundary","operator<<=","get wrapper",
"LE32","data-provider boundary","operator>>=","get wrapper",
"LE32","data-provider boundary","operator==","property wrapper",
"LE32","data-provider boundary","operator<","property wrapper",
"FileAlreadyExistsException","empty","FileAlreadyExistsException","constructor",
"TestDestructor","empty","TestDestructor","constructor",
"Z2_X2","empty","~Z2_X2","destructor",
"Throwable","data-provider lazy-class","getMsg","incidental",
"Throwable","data-provider lazy-class","getErrno","get",
"Throwable","data-provider lazy-class","isWarning","get",
"Throwable","data-provider lazy-class","Throwable::Throwable","constructor",
"PackLinuxElf32Be","empty","PackLinuxElf32Be","constructor",
"BE64","data-provider boundary","operatorupx_uint64_t","property wrapper",
"BE64","data-provider boundary","operator=","get wrapper",
"BE64","data-provider boundary","operator+=","get wrapper",
"BE64","data-provider boundary","operator-=","get wrapper",
"BE64","data-provider boundary","operator*=","get wrapper",
"BE64","data-provider boundary","operator/=","get wrapper",
"BE64","data-provider boundary","operator&=","get wrapper",
"BE64","data-provider boundary","operator|=","get wrapper",
"BE64","data-provider boundary","operator^=","get wrapper",
"BE64","data-provider boundary","operator<<=","get wrapper",
"BE64","data-provider boundary","operator>>=","get wrapper",
"BE64","data-provider boundary","operator==","property wrapper",
"BE64","data-provider boundary","operator<","property wrapper",
"Z1_X1","empty","~Z1_X1","destructor",
"InStream","small-class","~InStream","destructor",
"InStream","small-class","Init","command",
"InStream","small-class","InStream::Read","property set collaborator",
"upx_callback_t","boundary small-class","reset","wrapper",
"PackW32PeI386","unclassified","getFormat","incidental",
"PackW32PeI386","unclassified","getName","property",
"PackW32PeI386","unclassified","getFullName","incidental",
"PackW32PeI386","unclassified","PackW32PeI386::getFilters","incidental",
"PackW32PeI386","unclassified","PackW32PeI386::newLinker","factory collaborator incidental",
"PackW32PeI386","unclassified","PackW32PeI386::readFileHeader","property non-void-command",
"PackW32PeI386","unclassified","PackW32PeI386::canPack","property non-void-command collaborator",
"PackW32PeI386","unclassified","PackW32PeI386::buildLoader","void-accessor command collaborator",
"PackW32PeI386","unclassified","PackW32PeI386::needForceOption","predicate",
"PackW32PeI386","unclassified","PackW32PeI386::defineSymbols","command",
"PackW32PeI386","unclassified","PackW32PeI386::addNewRelocations","controller",
"PackW32PeI386","unclassified","PackW32PeI386::setOhDataBase","set collaborator",
"PackW32PeI386","unclassified","PackW32PeI386::setOhHeaderSize","void-accessor set collaborator",
"PackW32PeI386","unclassified","PackW32PeI386::pack","void-accessor command collaborator",
"PackBSDElf32x86","entity boundary small-class","PackBSDElf32x86::buildLoader","non-void-command collaborator",
"PackBSDElf32x86","entity boundary small-class","PackBSDElf32x86::pack1","void-accessor command collaborator",
"PackBSDElf32x86","entity boundary small-class","PackBSDElf32x86::PackBSDElf32x86","constructor",
"PackBSDElf32x86","entity boundary small-class","PackBSDElf32x86::~PackBSDElf32x86","destructor",
"PackOpenBSDElf32x86","degenerate","getFormat","incidental",
"PackOpenBSDElf32x86","degenerate","getName","incidental",
"PackOpenBSDElf32x86","degenerate","getFullName","incidental",
"PackOpenBSDElf32x86","degenerate","PackOpenBSDElf32x86::generateElfHdr","void-accessor command",
"PackOpenBSDElf32x86","degenerate","PackOpenBSDElf32x86::PackOpenBSDElf32x86","constructor",
"PackOpenBSDElf32x86","degenerate","PackOpenBSDElf32x86::~PackOpenBSDElf32x86","destructor",
"ElfLinkerAMD64","small-class","alignCode","command",
"ElfLinkerAMD64","small-class","ElfLinkerAMD64::relocate1","void-accessor command",
"PackLinuxElf32armLe","entity boundary degenerate","getFormat","incidental",
"PackLinuxElf32armLe","entity boundary degenerate","getName","incidental",
"PackLinuxElf32armLe","entity boundary degenerate","getFullName","incidental",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::getCompressionMethods","wrapper stateless",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::updateLoader","void-accessor command collaborator",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::buildLoader","void-accessor command collaborator",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::pack1","void-accessor command collaborator",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::getFilters","wrapper stateless",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::defineSymbols","void-accessor command collaborator",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::PackLinuxElf32armLe","constructor",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::~PackLinuxElf32armLe","destructor",
"PackLinuxElf32armLe","entity boundary degenerate","PackLinuxElf32armLe::newLinker","factory collaborator stateless",
"PackLinuxElf32mipseb","boundary degenerate","getFormat","incidental",
"PackLinuxElf32mipseb","boundary degenerate","getName","incidental",
"PackLinuxElf32mipseb","boundary degenerate","getFullName","incidental",
"PackLinuxElf32mipseb","boundary degenerate","PackLinuxElf32mipseb::updateLoader","void-accessor command collaborator",
"PackLinuxElf32mipseb","boundary degenerate","PackLinuxElf32mipseb::buildLoader","non-void-command collaborator",
"PackLinuxElf32mipseb","boundary degenerate","PackLinuxElf32mipseb::pack1","void-accessor command collaborator",
"PackLinuxElf32mipseb","boundary degenerate","PackLinuxElf32mipseb::getFilters","incidental",
"PackLinuxElf32mipseb","boundary degenerate","PackLinuxElf32mipseb::defineSymbols","void-accessor command collaborator",
"PackLinuxElf32mipseb","boundary degenerate","PackLinuxElf32mipseb::PackLinuxElf32mipseb","constructor",
"PackLinuxElf32mipseb","boundary degenerate","PackLinuxElf32mipseb::~PackLinuxElf32mipseb","destructor",
"PackLinuxElf32mipseb","boundary degenerate","PackLinuxElf32mipseb::newLinker","factory collaborator stateless",
"PackDylibAMD64","lazy-class degenerate","getFormat","incidental",
"PackDylibAMD64","lazy-class degenerate","getName","incidental",
"PackDylibAMD64","lazy-class degenerate","getFullName","incidental",
"PackDylibAMD64","lazy-class degenerate","PackDylibAMD64::PackDylibAMD64","constructor",
"PackDylibAMD64","lazy-class degenerate","PackDylibAMD64::pack4","void-accessor command collaborator",
"PackDylibAMD64","lazy-class degenerate","PackDylibAMD64::pack3","property set collaborator",
"PackLinuxI386","boundary degenerate","getFormat","incidental",
"PackLinuxI386","boundary degenerate","getName","incidental",
"PackLinuxI386","boundary degenerate","getFullName","incidental",
"PackLinuxI386","boundary degenerate","PackLinuxI386::PackLinuxI386","constructor",
"PackLinuxI386","boundary degenerate","PackLinuxI386::getCompressionMethods","wrapper stateless",
"PackLinuxI386","boundary degenerate","PackLinuxI386::getFilters","incidental",
"PackLinuxI386","boundary degenerate","PackLinuxI386::generateElfHdr","void-accessor controller",
"PackLinuxI386","boundary degenerate","PackLinuxI386::pack1","void-accessor command collaborator",
"PackLinuxI386","boundary degenerate","PackLinuxI386::pack4","void-accessor set collaborator",
"PackLinuxI386","boundary degenerate","PackLinuxI386::newLinker","factory collaborator incidental",
"PackLinuxI386","boundary degenerate","PackLinuxI386::buildLinuxLoader","void-accessor command collaborator",
"PackLinuxI386","boundary degenerate","PackLinuxI386::buildLoader","void-accessor command collaborator",
"PackLinuxI386","boundary degenerate","PackLinuxI386::getLoaderPrefixSize","incidental",
"PackLinuxI386","boundary degenerate","PackLinuxI386::checkEhdr","wrapper stateless",
"PackLinuxI386","boundary degenerate","PackLinuxI386::canPack","property non-void-command collaborator",
"PackLinuxI386","boundary degenerate","PackLinuxI386::patchLoader","empty",
"PackLinuxI386","boundary degenerate","PackLinuxI386::patchLoaderChecksum","command collaborator",
"PackLinuxI386","boundary degenerate","PackLinuxI386::updateLoader","set collaborator",
"Filter","unclassified","Filter::isValidFilter","wrapper stateless",
"Filter","unclassified","Filter::isValidFilter","predicate non-void-command",
"Filter","unclassified","Filter::Filter","constructor",
"Filter","unclassified","Filter::init","command",
"PackHeader","commander small-class","PackHeader::PackHeader","constructor",
"PackHeader","commander small-class","PackHeader::reset","command",
"UnknownExecutableFormatException","empty","UnknownExecutableFormatException","constructor",
"PackBvmlinuzI386","degenerate","PackBvmlinuzI386","constructor",
"PackBvmlinuzI386","degenerate","getFormat","incidental",
"PackBvmlinuzI386","degenerate","getName","incidental",
"PackBvmlinuzI386","degenerate","getFullName","incidental",
"PackBvmlinuzI386","degenerate","PackBvmlinuzI386::getFilters","incidental",
"PackBvmlinuzI386","degenerate","PackBvmlinuzI386::buildLoader","void-accessor command collaborator",
"PackBvmlinuzI386","degenerate","PackBvmlinuzI386::pack","void-accessor command collaborator",
"PackBSDI386","degenerate","getFormat","incidental",
"PackBSDI386","degenerate","getName","incidental",
"PackBSDI386","degenerate","getFullName","incidental",
"PackBSDI386","degenerate","PackBSDI386::PackBSDI386","constructor",
"PackBSDI386","degenerate","PackBSDI386::pack1","void-accessor command collaborator",
"PackBSDI386","degenerate","PackBSDI386::buildLoader","void-accessor command collaborator",
"PackLinuxElf32x86interp","degenerate","getVersion","incidental",
"PackLinuxElf32x86interp","degenerate","getFormat","incidental",
"PackLinuxElf32x86interp","degenerate","getName","incidental",
"PackLinuxElf32x86interp","degenerate","getFullName","incidental",
"ElfLinkerPpc64le","small-class","ElfLinkerPpc64le::relocate1","void-accessor command",
"PeFile::Resource::res_dir","boundary small-class","Sizeof","wrapper",
"PackMachPPC32","unclassified","getFormat","incidental",
"PackMachPPC32","unclassified","getName","incidental",
"PackMachPPC32","unclassified","getFullName","incidental",
"PackMachPPC32","unclassified","threado_size","property",
"PackMachPPC32","unclassified","threado_setPC","command collaborator",
"PackMachPPC32","unclassified","threado_rewrite","controller",
"PackMachPPC32","unclassified","threado_write","controller",
"PackMachPPC32","unclassified","threadc_getPC","property collaborator",
"PackMachPPC32","unclassified","PackMachPPC32::PackMachPPC32","constructor",
"PackMachPPC32","unclassified","PackMachPPC32::getFilters","incidental",
"PackMachPPC32","unclassified","PackMachPPC32::newLinker","factory collaborator incidental",
"PackMachPPC32","unclassified","PackMachPPC32::addStubEntrySections","command",
"PackMachPPC32","unclassified","PackMachPPC32::pack1_setup_threado","command collaborator",
"PackMachI386","unclassified","getFormat","incidental",
"PackMachI386","unclassified","getName","incidental",
"PackMachI386","unclassified","getFullName","incidental",
"PackMachI386","unclassified","threado_size","property",
"PackMachI386","unclassified","threado_setPC","command collaborator",
"PackMachI386","unclassified","threado_rewrite","controller",
"PackMachI386","unclassified","threado_write","controller",
"PackMachI386","unclassified","threadc_getPC","property collaborator",
"PackMachI386","unclassified","PackMachI386::PackMachI386","constructor",
"PackMachI386","unclassified","PackMachI386::getFilters","incidental",
"PackMachI386","unclassified","PackMachI386::newLinker","factory collaborator incidental",
"PackMachI386","unclassified","PackMachI386::addStubEntrySections","command",
"PackMachI386","unclassified","PackMachI386::pack1_setup_threado","command collaborator",
"PackMachAMD64","unclassified","getFormat","incidental",
"PackMachAMD64","unclassified","getName","incidental",
"PackMachAMD64","unclassified","getFullName","incidental",
"PackMachAMD64","unclassified","threado_size","property",
"PackMachAMD64","unclassified","threado_setPC","command collaborator",
"PackMachAMD64","unclassified","threado_rewrite","controller",
"PackMachAMD64","unclassified","threado_write","controller",
"PackMachAMD64","unclassified","threadc_getPC","property collaborator",
"PackMachAMD64","unclassified","PackMachAMD64::PackMachAMD64","constructor",
"PackMachAMD64","unclassified","PackMachAMD64::getFilters","incidental",
"PackMachAMD64","unclassified","PackMachAMD64::newLinker","factory collaborator incidental",
"PackMachAMD64","unclassified","PackMachAMD64::addStubEntrySections","command",
"PackMachAMD64","unclassified","PackMachAMD64::pack1_setup_threado","command collaborator",
"PackMachARMEL","boundary","getFormat","incidental",
"PackMachARMEL","boundary","getName","incidental",
"PackMachARMEL","boundary","getFullName","incidental",
"PackMachARMEL","boundary","threado_size","property",
"PackMachARMEL","boundary","threado_setPC","command collaborator",
"PackMachARMEL","boundary","threado_rewrite","controller",
"PackMachARMEL","boundary","threado_write","controller",
"PackMachARMEL","boundary","threadc_getPC","property collaborator",
"PackMachARMEL","boundary","PackMachARMEL::getCompressionMethods","wrapper stateless",
"PackMachARMEL","boundary","PackMachARMEL::PackMachARMEL","constructor",
"PackMachARMEL","boundary","PackMachARMEL::getFilters","incidental",
"PackMachARMEL","boundary","PackMachARMEL::newLinker","factory collaborator incidental",
"PackMachARMEL","boundary","PackMachARMEL::addStubEntrySections","command",
"PackMachARMEL","boundary","PackMachARMEL::pack1_setup_threado","command collaborator",
"ElfLinkerPpc64","small-class","ElfLinkerPpc64","constructor",
"ElfLinkerPpc64","small-class","ElfLinkerPpc64::relocate1","void-accessor command",
"PackMachARM64EL","unclassified","getFormat","incidental",
"PackMachARM64EL","unclassified","getName","incidental",
"PackMachARM64EL","unclassified","getFullName","incidental",
"PackMachARM64EL","unclassified","threado_size","property",
"PackMachARM64EL","unclassified","threado_setPC","command collaborator",
"PackMachARM64EL","unclassified","threado_rewrite","controller",
"PackMachARM64EL","unclassified","threado_write","controller",
"PackMachARM64EL","unclassified","threadc_getPC","property collaborator",
"PackMachARM64EL","unclassified","PackMachARM64EL::PackMachARM64EL","constructor",
"PackMachARM64EL","unclassified","PackMachARM64EL::getFilters","incidental",
"PackMachARM64EL","unclassified","PackMachARM64EL::newLinker","factory collaborator incidental",
"PackMachARM64EL","unclassified","PackMachARM64EL::addStubEntrySections","command",
"PackMachARM64EL","unclassified","PackMachARM64EL::pack1_setup_threado","command collaborator",
"PackMachFat","degenerate","getVersion","incidental",
"PackMachFat","degenerate","getFormat","incidental",
"PackMachFat","degenerate","getName","incidental",
"PackMachFat","degenerate","getFullName","incidental",
"PackMachFat","degenerate","PackMachFat::PackMachFat","constructor",
"PackMachFat","degenerate","PackMachFat::~PackMachFat","destructor",
"PackMachFat","degenerate","PackMachFat::check_fat_head","non-void-command",
"PackMachFat","degenerate","PackMachFat::getCompressionMethods","incidental",
"PackMachFat","degenerate","PackMachFat::getFilters","incidental",
"PackMachFat","degenerate","PackMachFat::pack","void-accessor command collaborator",
"PackMachFat","degenerate","PackMachFat::unpack","void-accessor command collaborator",
"PackMachFat","degenerate","PackMachFat::canPack","property non-void-command collaborator",
"PackMachFat","degenerate","PackMachFat::canUnpack","property non-void-command collaborator",
"PackMachFat","degenerate","PackMachFat::buildLoader","incidental",
"PackMachFat","degenerate","PackMachFat::newLinker","factory collaborator incidental",
"PackMachFat","degenerate","PackMachFat::list","incidental",
"ObjectDeleter","boundary small-class","ObjectDeleter","constructor",
"ObjectDeleter","boundary small-class","~ObjectDeleter","destructor",
"ObjectDeleter","boundary small-class","delete_items","wrapper",
"CSelf","entity data-provider boundary","operatorpointer","get",
"CSelf","entity data-provider boundary","assertInvariants","wrapper",
"CSelf","entity data-provider boundary","assertInvariants","empty",
"CSelf","entity data-provider boundary","ensurePtr","get wrapper",
"CSelf","entity data-provider boundary","ensureBase","get wrapper",
"CSelf","entity data-provider boundary","~CSelf","destructor",
"CSelf","entity data-provider boundary","~CSelf","destructor",
"CSelf","entity data-provider boundary","invalidate","non-void-command collaborator",
"CSelf","entity data-provider boundary","CSelf","constructor",
"CSelf","entity data-provider boundary","CSelf","constructor",
"CSelf","entity data-provider boundary","assign","get non-void-command collaborator",
"CSelf","entity data-provider boundary","assign","get non-void-command collaborator",
"CSelf","entity data-provider boundary","assign","get non-void-command collaborator",
"CSelf","entity data-provider boundary","operator=","property non-void-command collaborator",
"CSelf","entity data-provider boundary","operator=","property non-void-command collaborator",
"CSelf","entity data-provider boundary","operator=","property non-void-command collaborator",
"CSelf","entity data-provider boundary","subspan","property collaborator",
"CSelf","entity data-provider boundary","subspan","property collaborator",
"CSelf","entity data-provider boundary","type_cast","property wrapper",
"CSelf","entity data-provider boundary","operator==","predicate collaborator",
"CSelf","entity data-provider boundary","operator!=","predicate collaborator",
"CSelf","entity data-provider boundary","operator<","predicate collaborator",
"CSelf","entity data-provider boundary","operator*","property collaborator",
"CSelf","entity data-provider boundary","operator[]","property collaborator",
"CSelf","entity data-provider boundary","operator->","property collaborator",
"CSelf","entity data-provider boundary","operator++","get set collaborator",
"CSelf","entity data-provider boundary","operator++","property collaborator",
"CSelf","entity data-provider boundary","operator--","get set collaborator",
"CSelf","entity data-provider boundary","operator--","property collaborator",
"CSelf","entity data-provider boundary","operator+=","get set collaborator",
"CSelf","entity data-provider boundary","operator-=","get set collaborator",
"CSelf","entity data-provider boundary","operator+","property collaborator",
"CSelf","entity data-provider boundary","operator-","property collaborator",
"CSelf","entity data-provider boundary","check_deref","property collaborator",
"CSelf","entity data-provider boundary","check_deref","property collaborator",
"CSelf","entity data-provider boundary","check_add","property collaborator",
"CSelf","entity data-provider boundary","raw_ptr","get collaborator",
"CSelf","entity data-provider boundary","raw_base","get collaborator",
"CSelf","entity data-provider boundary","raw_size_in_bytes","get",
"CSelf","entity data-provider boundary","raw_bytes","get collaborator",
"CSelf","entity data-provider boundary","data","get collaborator",
"CSelf","entity data-provider boundary","data","property collaborator",
"CSelf","entity data-provider boundary","size","property",
"CSelf","entity data-provider boundary","size_bytes","property collaborator",
"MyType2","empty","MyType2","constructor",
"PackTos","unclassified","getVersion","incidental",
"PackTos","unclassified","getFormat","incidental",
"PackTos","unclassified","getName","incidental",
"PackTos","unclassified","getFullName","incidental",
"PackTos","unclassified","PackTos::getCompressionMethods","property",
"PackTos","unclassified","PackTos::getFilters","incidental",
"PackTos","unclassified","PackTos::getDecomprOffset","controller stateless",
"PackTos","unclassified","PackTos::buildLoader","command collaborator",
"PackTos","unclassified","PackTos::readFileHeader","property non-void-command",
"PackTos","unclassified","PackTos::checkFileHeader","predicate wrapper",
"PackTos","unclassified","PackTos::canPack","property non-void-command collaborator",
"PackTos","unclassified","PackTos::fileInfo","command",
"PackTos","unclassified","PackTos::pack","void-accessor command collaborator",
"PackTos","unclassified","PackTos::canUnpack","property non-void-command collaborator",
"PackTos","unclassified","PackTos::unpack","void-accessor command collaborator",
"PackUnix","boundary","getVersion","incidental",
"PackUnix","boundary","getFilters","incidental",
"PackUnix","boundary","PackUnix::PackUnix","constructor",
"PackUnix","boundary","PackUnix::~PackUnix","destructor",
"PackUnix","boundary","PackUnix::canPack","property non-void-command collaborator",
"PackUnix","boundary","PackUnix::writePackHeader","command collaborator",
"PackUnix","boundary","PackUnix::checkCompressionRatio","incidental",
"PackUnix","boundary","PackUnix::pack1","empty",
"PackUnix","boundary","PackUnix::getStrategy","incidental",
"PackUnix","boundary","PackUnix::pack2","property non-void-command collaborator",
"PackUnix","boundary","PackUnix::patchLoaderChecksum","command collaborator",
"PackUnix","boundary","PackUnix::pack3","property non-void-command collaborator",
"PackUnix","boundary","PackUnix::pack4","void-accessor command collaborator",
"PackUnix","boundary","PackUnix::pack","void-accessor command collaborator",
"PackUnix","boundary","PackUnix::packExtent","void-accessor command",
"PackUnix","boundary","PackUnix::unpackExtent","non-void-command collaborator",
"PackUnix","boundary","PackUnix::canUnpack","property non-void-command collaborator",
"PackUnix","boundary","PackUnix::find_overlay_offset","property non-void-command collaborator",
"PackUnix","boundary","PackUnix::unpack","command collaborator",
"FilterImpl","data-provider boundary small-class","FilterImpl::getFilter","property wrapper",
"PackDylibPPC32","lazy-class degenerate","getFormat","incidental",
"PackDylibPPC32","lazy-class degenerate","getName","incidental",
"PackDylibPPC32","lazy-class degenerate","getFullName","incidental",
"PackDylibPPC32","lazy-class degenerate","PackDylibPPC32::PackDylibPPC32","constructor",
"PackDylibPPC32","lazy-class degenerate","PackDylibPPC32::pack4","void-accessor command collaborator",
"PackDylibPPC32","lazy-class degenerate","PackDylibPPC32::pack3","property set collaborator",
"PackUnixBe32","empty","PackUnixBe32","constructor",
"PackUnixLe32","empty","PackUnixLe32","constructor",
"PackMaster","boundary","PackMaster::PackMaster","constructor",
"PackMaster","boundary","PackMaster::~PackMaster","destructor",
"PackMaster","boundary","PackMaster::visitAllPackers","wrapper stateless",
"PackMaster","boundary","PackMaster::getPacker","property non-void-command collaborator",
"PackMaster","boundary","PackMaster::getUnpacker","property non-void-command collaborator",
"PackMaster","boundary","PackMaster::pack","void-accessor command collaborator",
"PackMaster","boundary","PackMaster::unpack","void-accessor command collaborator",
"PackMaster","boundary","PackMaster::test","command",
"PackMaster","boundary","PackMaster::list","command",
"PackMaster","boundary","PackMaster::fileInfo","command",
"bzip2_compress_config_t","boundary small-class","bzip2_compress_config_t::reset","wrapper",
"PackVmlinuxBase","entity boundary","getVersion","incidental",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::PackVmlinuxBase","constructor",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::~PackVmlinuxBase","destructor",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::getStrategy","incidental",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::compare_Phdr","wrapper stateless",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::getElfSections","property non-void-command collaborator",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::canPack","property non-void-command collaborator",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::pack","void-accessor command collaborator",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::canUnpack","property non-void-command collaborator",
"PackVmlinuxBase","entity boundary","PackVmlinuxBase<T>::unpack","command collaborator",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB","constructor",
"PackVmlinuxARMEB","degenerate","getFormat","incidental",
"PackVmlinuxARMEB","degenerate","getName","incidental",
"PackVmlinuxARMEB","degenerate","getFullName","incidental",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB::getCompressionMethods","wrapper stateless",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB::getFilters","incidental",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB::is_valid_e_entry","collaborator incidental",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB::newLinker","factory collaborator incidental",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB::buildLoader","void-accessor command collaborator",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB::defineDecompressorSymbols","command",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB::write_vmlinux_head","controller",
"PackVmlinuxARMEB","degenerate","PackVmlinuxARMEB::has_valid_vmlinux_head","predicate non-void-command",
"PackCom","unclassified","PackCom","constructor",
"PackCom","unclassified","getVersion","incidental",
"PackCom","unclassified","getFormat","incidental",
"PackCom","unclassified","getName","incidental",
"PackCom","unclassified","getFullName","incidental",
"PackCom","unclassified","getCallTrickOffset","incidental",
"PackCom","unclassified","PackCom::getCompressionMethods","wrapper stateless",
"PackCom","unclassified","PackCom::getFilters","incidental",
"PackCom","unclassified","PackCom::canPack","property non-void-command collaborator",
"PackCom","unclassified","PackCom::addFilter16","command",
"PackCom","unclassified","PackCom::buildLoader","void-accessor command collaborator",
"PackCom","unclassified","PackCom::patchLoader","void-accessor command",
"PackCom","unclassified","PackCom::pack","void-accessor command collaborator",
"PackCom","unclassified","PackCom::canUnpack","property wrapper",
"PackCom","unclassified","PackCom::unpack","command collaborator",
"PackVmlinuxI386","degenerate","PackVmlinuxI386","constructor",
"PackVmlinuxI386","degenerate","getFormat","incidental",
"PackVmlinuxI386","degenerate","getName","incidental",
"PackVmlinuxI386","degenerate","getFullName","incidental",
"PackVmlinuxI386","degenerate","PackVmlinuxI386::getCompressionMethods","wrapper stateless",
"PackVmlinuxI386","degenerate","PackVmlinuxI386::getFilters","incidental",
"PackVmlinuxI386","degenerate","PackVmlinuxI386::is_valid_e_entry","collaborator incidental",
"PackVmlinuxI386","degenerate","PackVmlinuxI386::newLinker","factory collaborator incidental",
"PackVmlinuxI386","degenerate","PackVmlinuxI386::buildLoader","void-accessor command collaborator",
"PackVmlinuxI386","degenerate","PackVmlinuxI386::write_vmlinux_head","property controller",
"PackVmlinuxI386","degenerate","PackVmlinuxI386::defineDecompressorSymbols","command",
"PackVmlinuxI386","degenerate","PackVmlinuxI386::has_valid_vmlinux_head","predicate non-void-command",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL","constructor",
"PackVmlinuxARMEL","degenerate","getFormat","incidental",
"PackVmlinuxARMEL","degenerate","getName","incidental",
"PackVmlinuxARMEL","degenerate","getFullName","incidental",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL::getCompressionMethods","wrapper stateless",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL::getFilters","incidental",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL::is_valid_e_entry","collaborator incidental",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL::newLinker","factory collaborator incidental",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL::buildLoader","void-accessor command collaborator",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL::defineDecompressorSymbols","command",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL::write_vmlinux_head","controller",
"PackVmlinuxARMEL","degenerate","PackVmlinuxARMEL::has_valid_vmlinux_head","predicate non-void-command",
"zstd_compress_config_t","boundary small-class","zstd_compress_config_t::reset","wrapper",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32","constructor",
"PackVmlinuxPPC32","degenerate","getFormat","incidental",
"PackVmlinuxPPC32","degenerate","getName","incidental",
"PackVmlinuxPPC32","degenerate","getFullName","incidental",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32::getCompressionMethods","wrapper stateless",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32::getFilters","incidental",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32::is_valid_e_entry","collaborator incidental",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32::newLinker","factory collaborator incidental",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32::buildLoader","void-accessor command collaborator",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32::defineDecompressorSymbols","command",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32::write_vmlinux_head","incidental",
"PackVmlinuxPPC32","degenerate","PackVmlinuxPPC32::has_valid_vmlinux_head","predicate non-void-command",
"PackVmlinuxPPC64LE","degenerate","PackVmlinuxPPC64LE","constructor",
"PackVmlinuxPPC64LE","degenerate","getFormat","incidental",
"PackVmlinuxPPC64LE","degenerate","getName","incidental",
"PackVmlinuxPPC64LE","degenerate","getFullName","incidental",
"PackVmlinuxPPC64LE","degenerate","PackVmlinuxPPC64LE::getCompressionMethods","wrapper stateless",
"PackVmlinuxPPC64LE","degenerate","PackVmlinuxPPC64LE::getFilters","incidental",
"PackVmlinuxPPC64LE","degenerate","PackVmlinuxPPC64LE::is_valid_e_entry","collaborator incidental",
"PackVmlinuxPPC64LE","degenerate","PackVmlinuxPPC64LE::newLinker","factory collaborator incidental",
"PackVmlinuxPPC64LE","degenerate","PackVmlinuxPPC64LE::defineDecompressorSymbols","command",
"PackVmlinuxPPC64LE","degenerate","PackVmlinuxPPC64LE::write_vmlinux_head","incidental",
"upx_compress_config_t","commander small-class","reset","command",
"PackWcle","commander","PackWcle","constructor",
"PackWcle","commander","getVersion","incidental",
"PackWcle","commander","getFormat","incidental",
"PackWcle","commander","getName","incidental",
"PackWcle","commander","getFullName","incidental",
"PackWcle","commander","PackWcle::getFilters","incidental",
"PackWcle","commander","PackWcle::newLinker","factory collaborator incidental",
"PackWcle","commander","PackWcle::buildLoader","void-accessor command collaborator",
"PackWcle","commander","PackWcle::handleStub","void-accessor wrapper",
"PackWcle","commander","PackWcle::canPack","property non-void-command collaborator",
"PackWcle","commander","PackWcle::encodeEntryTable","command",
"PackWcle","commander","PackWcle::readObjectTable","command",
"PackWcle","commander","PackWcle::encodeObjectTable","command",
"PackWcle","commander","PackWcle::encodePageMap","command",
"PackWcle","commander","PackWcle::encodeFixupPageTable","command",
"PackWcle","commander","PackWcle::encodeFixups","command",
"PackWcle","commander","PackWcle::preprocessFixups","command",
"PackWcle","commander","PackWcle::encodeImage","void-accessor command collaborator",
"PackWcle","commander","PackWcle::pack","void-accessor command collaborator",
"PackWcle","commander","PackWcle::decodeFixups","command",
"PackWcle","commander","PackWcle::decodeFixupPageTable","command",
"PackWcle","commander","PackWcle::decodeObjectTable","command",
"PackWcle","commander","PackWcle::decodeImage","command",
"PackWcle","commander","PackWcle::decodeEntryTable","command",
"PackWcle","commander","PackWcle::canUnpack","property non-void-command collaborator",
"PackWcle","commander","PackWcle::virt2rela","incidental",
"PackWcle","commander","PackWcle::unpack","void-accessor command collaborator",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64","constructor",
"PackVmlinuxAMD64","degenerate","getFormat","incidental",
"PackVmlinuxAMD64","degenerate","getName","incidental",
"PackVmlinuxAMD64","degenerate","getFullName","incidental",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64::buildLoader","void-accessor command collaborator",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64::write_vmlinux_head","controller",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64::defineDecompressorSymbols","command",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64::has_valid_vmlinux_head","predicate non-void-command",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64::getCompressionMethods","wrapper stateless",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64::getFilters","incidental",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64::is_valid_e_entry","collaborator incidental",
"PackVmlinuxAMD64","degenerate","PackVmlinuxAMD64::newLinker","factory collaborator incidental",
"PackVmlinuzARMEL","unclassified","getVersion","incidental",
"PackVmlinuzARMEL","unclassified","getFormat","incidental",
"PackVmlinuzARMEL","unclassified","getName","incidental",
"PackVmlinuzARMEL","unclassified","getFullName","incidental",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::PackVmlinuzARMEL","constructor",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::getCompressionMethods","wrapper stateless",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::getFilters","incidental",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::getStrategy","incidental",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::canPack","property non-void-command collaborator",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::readFileHeader","property non-void-command",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::decompressKernel","property non-void-command",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::readKernel","command",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::newLinker","factory collaborator incidental",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::buildLoader","non-void-command collaborator",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::defineDecompressorSymbols","command",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::write_vmlinuz_head","non-void-command collaborator",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::pack","void-accessor command collaborator",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::canUnpack","property non-void-command collaborator",
"PackVmlinuzARMEL","unclassified","PackVmlinuzARMEL::unpack","command collaborator",
"PackW64PeAmd64","unclassified","getFormat","incidental",
"PackW64PeAmd64","unclassified","getName","incidental",
"PackW64PeAmd64","unclassified","getFullName","incidental",
"PackW64PeAmd64","unclassified","setOhDataBase","empty",
"PackW64PeAmd64","unclassified","PackW64PeAmd64::getFilters","incidental",
"PackW64PeAmd64","unclassified","PackW64PeAmd64::newLinker","factory collaborator incidental",
"PackW64PeAmd64","unclassified","PackW64PeAmd64::canPack","property non-void-command collaborator",
"PackW64PeAmd64","unclassified","PackW64PeAmd64::buildLoader","command collaborator",
"PackW64PeAmd64","unclassified","PackW64PeAmd64::needForceOption","predicate",
"PackW64PeAmd64","unclassified","PackW64PeAmd64::defineSymbols","controller",
"PackW64PeAmd64","unclassified","PackW64PeAmd64::setOhHeaderSize","void-accessor set collaborator",
"PackW64PeAmd64","unclassified","PackW64PeAmd64::pack","void-accessor command collaborator",
"PackW64PeArm64","boundary degenerate","~PackW64PeArm64","destructor",
"PackW64PeArm64","boundary degenerate","getFormat","incidental",
"PackW64PeArm64","boundary degenerate","getName","incidental",
"PackW64PeArm64","boundary degenerate","getFullName","incidental",
"PackW64PeArm64","boundary degenerate","setOhDataBase","empty",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::PackW64PeArm64","constructor",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::newLinker","factory collaborator incidental",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::getCompressionMethods","property",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::getFilters","incidental",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::canPack","property non-void-command collaborator",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::buildLoader","wrapper stateless",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::needForceOption","wrapper stateless",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::defineSymbols","wrapper stateless",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::setOhHeaderSize","wrapper stateless",
"PackW64PeArm64","boundary degenerate","PackW64PeArm64::pack","wrapper stateless",
"PackDylibPPC64","lazy-class degenerate","getFormat","incidental",
"PackDylibPPC64","lazy-class degenerate","getName","incidental",
"PackDylibPPC64","lazy-class degenerate","getFullName","incidental",
"PackDylibPPC64","lazy-class degenerate","PackDylibPPC64::PackDylibPPC64","constructor",
"PackDylibPPC64","lazy-class degenerate","PackDylibPPC64::pack4","void-accessor command collaborator",
"PackDylibPPC64","lazy-class degenerate","PackDylibPPC64::pack3","property set collaborator",
"PeFile64","entity data-provider boundary","PeFile64::PeFile64","constructor",
"PeFile64","entity data-provider boundary","PeFile64::~PeFile64","destructor",
"PeFile64","entity data-provider boundary","PeFile64::readPeHeader","command",
"PeFile64","entity data-provider boundary","PeFile64::pack0","void-accessor wrapper",
"PeFile64","entity data-provider boundary","PeFile64::unpack","void-accessor wrapper",
"PeFile64","entity data-provider boundary","PeFile64::canUnpack","property wrapper",
"PeFile64","entity data-provider boundary","PeFile64::processImports","wrapper stateless",
"PeFile64","entity data-provider boundary","PeFile64::processTls","void-accessor wrapper",
"PeFile64","entity data-provider boundary","PeFile64::processTls","void-accessor wrapper",
"PackLinuxI386sh","degenerate","getVersion","incidental",
"PackLinuxI386sh","degenerate","getFormat","incidental",
"PackLinuxI386sh","degenerate","getName","incidental",
"PackLinuxI386sh","degenerate","getFullName","incidental",
"PackLinuxI386sh","degenerate","getFilters","incidental",
"PackLinuxI386sh","degenerate","canUnpackVersion","incidental",
"PackSys","degenerate","PackSys","constructor",
"PackSys","degenerate","getVersion","incidental",
"PackSys","degenerate","getFormat","incidental",
"PackSys","degenerate","getName","incidental",
"PackSys","degenerate","getFullName","incidental",
"PackSys","degenerate","getCallTrickOffset","incidental",
"PackSys","degenerate","PackSys::buildLoader","void-accessor command collaborator",
"PackSys","degenerate","PackSys::patchLoader","void-accessor command",
"PackLinuxElf64ppc","degenerate","getFormat","incidental",
"PackLinuxElf64ppc","degenerate","getName","incidental",
"PackLinuxElf64ppc","degenerate","getFullName","incidental",
"PackLinuxElf64ppc","degenerate","PackLinuxElf64ppc::getFilters","incidental",
"PackLinuxElf64ppc","degenerate","PackLinuxElf64ppc::PackLinuxElf64ppc","constructor",
"PackLinuxElf64ppc","degenerate","PackLinuxElf64ppc::~PackLinuxElf64ppc","destructor",
"PackLinuxElf64ppc","degenerate","PackLinuxElf64ppc::newLinker","factory collaborator incidental",
"PackLinuxElf64ppc","degenerate","PackLinuxElf64ppc::buildLoader","non-void-command collaborator",
"PackLinuxElf64ppc","degenerate","PackLinuxElf64ppc::pack1","void-accessor command collaborator",
"PtrOrSpan","empty","CSelf","constructor",
"PtrOrSpan","empty","CSelf","constructor",
"PtrOrSpan","empty","CSelf","copy-constructor",
"UiPacker","commander","getCallback","property collaborator",
"UiPacker","commander","UiPacker::UiPacker","constructor",
"UiPacker","commander","UiPacker::~UiPacker","destructor",
"UiPacker","commander","UiPacker::printInfo","command",
"UiPacker","commander","UiPacker::startCallback","command",
"UiPacker","commander","UiPacker::firstCallback","command",
"UiPacker","commander","UiPacker::finalCallback","command",
"UiPacker","commander","UiPacker::endCallback","command",
"UiPacker","commander","UiPacker::endCallback","command",
"UiPacker","commander","UiPacker::progress_callback","controller stateless",
"UiPacker","commander","UiPacker::doCallback","controller stateless",
"UiPacker","commander","UiPacker::uiPackStart","void-accessor set collaborator",
"UiPacker","commander","UiPacker::uiPackEnd","command collaborator",
"UiPacker","commander","UiPacker::uiPackTotal","command",
"UiPacker","commander","UiPacker::uiUnpackStart","void-accessor set collaborator",
"UiPacker","commander","UiPacker::uiUnpackEnd","command collaborator",
"UiPacker","commander","UiPacker::uiUnpackTotal","command",
"UiPacker","commander","UiPacker::uiListStart","set",
"UiPacker","commander","UiPacker::uiList","command",
"UiPacker","commander","UiPacker::uiListEnd","wrapper stateless",
"UiPacker","commander","UiPacker::uiListTotal","wrapper",
"UiPacker","commander","UiPacker::uiTestStart","set",
"UiPacker","commander","UiPacker::uiTestEnd","wrapper stateless",
"UiPacker","commander","UiPacker::uiTestTotal","command",
"UiPacker","commander","UiPacker::uiFileInfoStart","predicate non-void-command",
"UiPacker","commander","UiPacker::uiFileInfoEnd","wrapper stateless",
"UiPacker","commander","UiPacker::uiFileInfoTotal","empty",
"UiPacker","commander","UiPacker::uiHeader","wrapper stateless",
"UiPacker","commander","UiPacker::uiFooter","void-accessor wrapper",
"UiPacker","commander","UiPacker::uiUpdate","command collaborator",
"UiPacker","commander","UiPacker::uiConfirmUpdate","command",
"MyVType1","empty","MyVType1","constructor",
"MyVType1","empty","~MyVType1","destructor",
"noncopyable","degenerate small-class","noncopyable","empty",
"PackMachBase","entity boundary","getVersion","incidental",
"PackMachBase","entity boundary","PackMachBase<T>::PackMachBase","constructor",
"PackMachBase","entity boundary","PackMachBase<T>::~PackMachBase","destructor",
"PackMachBase","entity boundary","PackMachBase<T>::getCompressionMethods","wrapper stateless",
"PackMachBase","entity boundary","PackMachBase<T>::addStubEntrySections","command",
"PackMachBase","entity boundary","PackMachBase<T>::defineSymbols","empty",
"PackMachBase","entity boundary","PackMachBase<T>::buildMachLoader","void-accessor command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::buildLoader","void-accessor command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::patchLoader","empty",
"PackMachBase","entity boundary","PackMachBase<T>::updateLoader","empty",
"PackMachBase","entity boundary","PackMachBase<T>::patchLoaderChecksum","command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::compare_segment_command","wrapper stateless",
"PackMachBase","entity boundary","PackMachBase<T>::pack4","void-accessor command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::pack4dylib","void-accessor command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::pack3","property non-void-command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::find_SEGMENT_gap","unclassified",
"PackMachBase","entity boundary","PackMachBase<T>::pack2","property non-void-command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::pack1","command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::unpack","void-accessor command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::canUnpack","property non-void-command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::get_mod_init_func","property non-void-command collaborator",
"PackMachBase","entity boundary","PackMachBase<T>::canPack","property non-void-command collaborator",
"Packer","boundary","canUnpackVersion","incidental",
"Packer","boundary","canUnpackFormat","wrapper stateless",
"Packer","boundary","optimizeFilter","empty",
"Packer","boundary","get_te16","unclassified",
"Packer","boundary","get_te32","unclassified",
"Packer","boundary","get_te64","property collaborator",
"Packer","boundary","set_te16","void-accessor command",
"Packer","boundary","set_te32","void-accessor command",
"Packer","boundary","set_te64","void-accessor command collaborator",
"Packer","boundary","get_te16","collaborator",
"Packer","boundary","get_te32","collaborator",
"Packer","boundary","get_te64","property collaborator",
"Packer","boundary","set_te16","void-accessor command",
"Packer","boundary","set_te32","void-accessor command",
"Packer","boundary","set_te64","void-accessor command collaborator",
"Packer","boundary","Packer::Packer","constructor",
"Packer","boundary","Packer::~Packer","destructor",
"Packer","boundary","Packer::assertPacker","wrapper",
"Packer","boundary","Packer::doPack","controller stateless",
"Packer","boundary","Packer::doUnpack","controller stateless",
"Packer","boundary","Packer::doTest","command",
"Packer","boundary","Packer::doList","command",
"Packer","boundary","Packer::doFileInfo","command",
"Packer","boundary","Packer::test","wrapper stateless",
"Packer","boundary","Packer::list","controller stateless",
"Packer","boundary","Packer::fileInfo","empty",
"Packer","boundary","Packer::testUnpackVersion","predicate",
"Packer","boundary","Packer::testUnpackFormat","predicate",
"Packer","boundary","Packer::checkFinalCompressionRatio","predicate controller",
"Packer","boundary","Packer::checkOverlay","wrapper",
"Packer","boundary","Packer::copyOverlay","void-accessor command",
"Packer","boundary","Packer::getRandomId","wrapper",
"Packer","boundary","Packer::initPackHeader","command",
"Packer","boundary","Packer::updatePackHeader","command",
"Packer","boundary","Packer::patchPackHeader","property non-void-command collaborator",
"Packer","boundary","Packer::getPackHeader","predicate non-void-command collaborator",
"Packer","boundary","Packer::readPackHeader","predicate non-void-command collaborator",
"Packer","boundary","Packer::checkAlreadyPacked","wrapper stateless",
"Packer","boundary","Packer::checkPatch","command",
"Packer","boundary","Packer::patch_be16","property non-void-command",
"Packer","boundary","Packer::patch_be16","property non-void-command",
"Packer","boundary","Packer::patch_be32","property non-void-command",
"Packer","boundary","Packer::patch_be32","property non-void-command",
"Packer","boundary","Packer::patch_le16","property non-void-command",
"Packer","boundary","Packer::patch_le16","property non-void-command",
"Packer","boundary","Packer::patch_le32","property non-void-command",
"Packer","boundary","Packer::patch_le32","property non-void-command",
"Packer","boundary","Packer::initLoader","controller stateless",
"Packer","boundary","Packer::addLoader","command collaborator",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoader","wrapper stateless",
"Packer","boundary","Packer::addLoaderVA","controller stateless",
"Packer","boundary","Packer::getLoader","controller stateless",
"Packer","boundary","Packer::getLoaderSize","controller stateless",
"Packer","boundary","Packer::hasLoaderSection","controller stateless",
"Packer","boundary","Packer::getLoaderSection","controller stateless",
"Packer","boundary","Packer::getLoaderSectionStart","controller stateless",
"Packer","boundary","Packer::relocateLoader","controller stateless",
"Packer","boundary","Packer::prepareMethods","property",
"Packer","boundary","Packer::compressWithFilters","void-accessor command",
"Packer","boundary","Packer::compressWithFilters","void-accessor command",
"Packer","boundary","Packer::compressWithFilters","void-accessor command",
"Packer","boundary","Packer::isValidCompressionMethod","wrapper stateless",
"Packer","boundary","Packer::getDefaultCompressionMethods_8","property wrapper",
"Packer","boundary","Packer::getDefaultCompressionMethods_le32","property wrapper",
"Packer","boundary","Packer::getDecompressorSections","property wrapper",
"Packer","boundary","Packer::getDecompressorWrkmemSize","wrapper",
"Packer","boundary","Packer::defineDecompressorSymbols","command",
"Packer","boundary","Packer::isValidFilter","wrapper stateless",
"Packer","boundary","Packer::addFilter32","command",
"Packer","boundary","Packer::defineFilterSymbols","controller stateless",
"ArrayDeleter","boundary small-class","ArrayDeleter","constructor",
"ArrayDeleter","boundary small-class","~ArrayDeleter","destructor",
"ArrayDeleter","boundary small-class","delete_items","wrapper",
"MallocDeleter","boundary small-class","MallocDeleter","constructor",
"MallocDeleter","boundary small-class","~MallocDeleter","destructor",
"MallocDeleter","boundary small-class","delete_items","wrapper",
"FileNotFoundException","empty","FileNotFoundException","constructor",
"TriBool","data-provider","TriBool","empty",
"TriBool","data-provider","TriBool","constructor",
"TriBool","data-provider","TriBool","constructor",
"TriBool","data-provider","operatorbool","unclassified",
"TriBool","data-provider","isStrictFalse","predicate",
"TriBool","data-provider","isStrictTrue","predicate",
"TriBool","data-provider","isStrictBool","predicate",
"TriBool","data-provider","isThird","predicate",
"TriBool","data-provider","getValue","get collaborator",
"TriBool","data-provider","operator==","predicate",
"TriBool","data-provider","operator==","predicate collaborator",
"TriBool","data-provider","operator==","predicate collaborator",
"OwningPointer","data-provider boundary data-class","OwningPointer","constructor",
"OwningPointer","data-provider boundary data-class","operatorpointer","get",
"OwningPointer","data-provider boundary data-class","operatorconst_pointer","get",
"OwningPointer","data-provider boundary data-class","operator*","get collaborator",
"OwningPointer","data-provider boundary data-class","operator*","get collaborator",
"OwningPointer","data-provider boundary data-class","operator->","get collaborator",
"OwningPointer","data-provider boundary data-class","operator->","get collaborator",
"MemBufferBase","data-provider boundary","MemBufferBase","constructor",
"MemBufferBase","data-provider boundary","~MemBufferBase","destructor",
"MemBufferBase","data-provider boundary","operatorpointer","get",
"MemBufferBase","data-provider boundary","operator[]","get wrapper",
"MemBufferBase","data-provider boundary","begin","get wrapper",
"MemBufferBase","data-provider boundary","cbegin","get wrapper",
"MemBufferBase","data-provider boundary","end","property wrapper",
"MemBufferBase","data-provider boundary","cend","property wrapper",
"MemBufferBase","data-provider boundary","operator+","property collaborator",
"MemBufferBase","data-provider boundary","raw_ptr","get collaborator",
"MemBufferBase","data-provider boundary","raw_size_in_bytes","get",
"MemBufferBase","data-provider boundary","raw_bytes","get wrapper",
"MemBuffer","boundary","MemBuffer","constructor",
"MemBuffer","boundary","getVoidPtr","property collaborator",
"MemBuffer","boundary","getVoidPtr","property collaborator",
"MemBuffer","boundary","getSizeInBytes","get",
"MemBuffer","boundary","getSize","get",
"MemBuffer","boundary","clear","non-void-command collaborator",
"MemBuffer","boundary","clear","non-void-command collaborator",
"MemBuffer","boundary","subref","property non-void-command collaborator",
"MemBuffer","boundary","MemBuffer::MemBuffer","constructor",
"MemBuffer","boundary","MemBuffer::~MemBuffer","destructor",
"MemBuffer","boundary","MemBuffer::subref_impl","property wrapper",
"MemBuffer","boundary","MemBuffer::getSizeForCompression","wrapper stateless",
"MemBuffer","boundary","MemBuffer::getSizeForDecompression","wrapper stateless",
"MemBuffer","boundary","MemBuffer::allocForCompression","command",
"MemBuffer","boundary","MemBuffer::allocForDecompression","command",
"MemBuffer","boundary","MemBuffer::fill","command",
"MemBuffer","boundary","MemBuffer::checkState","wrapper",
"MemBuffer","boundary","MemBuffer::alloc","command collaborator",
"MemBuffer","boundary","MemBuffer::dealloc","command",
