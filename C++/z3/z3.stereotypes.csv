Class Name,Class Stereotype,Method Name,Method Stereotype
"z3_exception","data-provider small-class","z3_exception::error_code","incidental"
"z3_exception","data-provider small-class","z3_exception::has_error_code","predicate"
"visit_helper","commander","init_visited","command"
"visit_helper","commander","mark_visited","set"
"visit_helper","commander","inc_visited","set"
"visit_helper","commander","is_visited","get"
"visit_helper","commander","num_visited","wrapper"
"vector","boundary","destroy_elements","command"
"vector","boundary","free_memory","wrapper"
"vector","boundary","expand_vector","command collaborator"
"vector","boundary","copy_core","set collaborator"
"vector","boundary","destroy","command"
"vector","boundary","vector","constructor"
"vector","boundary","init","command collaborator"
"vector","boundary","vector","constructor"
"vector","boundary","vector","copy-constructor"
"vector","boundary","vector","copy-constructor"
"vector","boundary","vector","constructor"
"vector","boundary","~vector","destructor"
"vector","boundary","finalize","set"
"vector","boundary","operator==","predicate"
"vector","boundary","operator!=","predicate"
"vector","boundary","operator=","get non-void-command"
"vector","boundary","operator=","get set"
"vector","boundary","containsp","predicate wrapper"
"vector","boundary","filter_pure","controller"
"vector","boundary","filter_update","get non-void-command collaborator"
"vector","boundary","map_pure","property controller"
"vector","boundary","map_update","get non-void-command collaborator"
"vector","boundary","reset","command"
"vector","boundary","clear","command"
"vector","boundary","empty","predicate"
"vector","boundary","size","property collaborator"
"vector","boundary","capacity","property collaborator"
"vector","boundary","begin","get collaborator"
"vector","boundary","end","property non-void-command collaborator"
"vector","boundary","begin","get collaborator"
"vector","boundary","end","property collaborator"
"vector","boundary","rbegin","property non-void-command collaborator"
"vector","boundary","rend","property non-void-command collaborator"
"vector","boundary","set_end","command collaborator"
"vector","boundary","operator[]","get non-void-command collaborator"
"vector","boundary","operator[]","get collaborator"
"vector","boundary","get","get non-void-command collaborator"
"vector","boundary","get","get collaborator"
"vector","boundary","set","set collaborator"
"vector","boundary","set","set collaborator"
"vector","boundary","back","property non-void-command collaborator"
"vector","boundary","back","property collaborator"
"vector","boundary","pop_back","command"
"vector","boundary","push_back","get non-void-command collaborator"
"vector","boundary","push_back","get non-void-command collaborator"
"vector","boundary","push_back","get non-void-command collaborator"
"vector","boundary","insert","command collaborator"
"vector","boundary","erase","command collaborator"
"vector","boundary","erase","command collaborator"
"vector","boundary","erase_if","property non-void-command collaborator"
"vector","boundary","shrink","command collaborator"
"vector","boundary","resize","command collaborator"
"vector","boundary","resize","command collaborator"
"vector","boundary","append","command collaborator"
"vector","boundary","append","command collaborator"
"vector","boundary","init","command collaborator"
"vector","boundary","init","command collaborator"
"vector","boundary","data","get collaborator"
"vector","boundary","swap","wrapper"
"vector","boundary","reverse","command collaborator"
"vector","boundary","fill","command collaborator"
"vector","boundary","fill","command collaborator"
"vector","boundary","contains","predicate collaborator"
"vector","boundary","setx","command collaborator"
"vector","boundary","get","get property collaborator"
"vector","boundary","reserve","command collaborator"
"vector","boundary","reserve","command collaborator"
"var_queue","entity boundary","activity_increased_eh","command collaborator"
"var_queue","entity boundary","activity_changed_eh","command"
"var_queue","entity boundary","mk_var_eh","command collaborator"
"var_queue","entity boundary","del_var_eh","command collaborator"
"var_queue","entity boundary","unassign_var_eh","command collaborator"
"var_queue","entity boundary","reset","command"
"var_queue","entity boundary","contains","predicate collaborator"
"var_queue","entity boundary","empty","predicate"
"var_queue","entity boundary","next_var","property non-void-command collaborator"
"var_queue","entity boundary","min_var","property non-void-command collaborator"
"var_queue","entity boundary","more_active","predicate collaborator"
"var_queue","entity boundary","display","property collaborator"
"var_queue","entity boundary","begin","property collaborator"
"var_queue","entity boundary","end","property collaborator"
"scoped_ptr","data-provider boundary data-class","scoped_ptr","constructor"
"scoped_ptr","data-provider boundary data-class","scoped_ptr","copy-constructor"
"scoped_ptr","data-provider boundary data-class","~scoped_ptr","destructor"
"scoped_ptr","data-provider boundary data-class","operator->","get collaborator"
"scoped_ptr","data-provider boundary data-class","get","get collaborator"
"scoped_ptr","data-provider boundary data-class","operatorbool","unclassified"
"scoped_ptr","data-provider boundary data-class","operator*","get collaborator"
"scoped_ptr","data-provider boundary data-class","operator*","get collaborator"
"scoped_ptr","data-provider boundary data-class","operator=","get set collaborator"
"scoped_ptr","data-provider boundary data-class","operator=","get set"
"scoped_ptr","data-provider boundary data-class","detach","property set collaborator"
"scoped_ptr","data-provider boundary data-class","swap","wrapper"
"deref_eq","boundary degenerate small-class","operator()","collaborator incidental"
"ptr_eq","boundary degenerate small-class","operator()","collaborator incidental"
"default_eq","boundary degenerate small-class","operator()","collaborator incidental"
"delete_proc","boundary degenerate small-class","operator()","wrapper stateless"
"basic_union_find","unclassified","ensure_size","command"
"basic_union_find","unclassified","mk_var","non-void-command"
"basic_union_find","unclassified","get_num_vars","unclassified"
"basic_union_find","unclassified","find","unclassified"
"basic_union_find","unclassified","next","get"
"basic_union_find","unclassified","is_root","predicate"
"basic_union_find","unclassified","merge","command"
"basic_union_find","unclassified","reset","command"
"union_find_default_ctx","data-provider lazy-class degenerate","unmerge_eh","empty"
"union_find_default_ctx","data-provider lazy-class degenerate","merge_eh","empty"
"union_find_default_ctx","data-provider lazy-class degenerate","after_merge_eh","empty"
"union_find_default_ctx","data-provider lazy-class degenerate","get_trail_stack","get collaborator"
"indexed_uint_set","unclassified","indexed_uint_set","constructor"
"indexed_uint_set","unclassified","insert_fresh","command"
"indexed_uint_set","unclassified","insert","command"
"indexed_uint_set","unclassified","remove","command"
"indexed_uint_set","unclassified","elem_at","get wrapper"
"indexed_uint_set","unclassified","operator[]","get wrapper"
"indexed_uint_set","unclassified","contains","predicate"
"indexed_uint_set","unclassified","reset","set"
"indexed_uint_set","unclassified","empty","predicate"
"indexed_uint_set","unclassified","size","get"
"indexed_uint_set","unclassified","max_var","unclassified"
"indexed_uint_set","unclassified","begin","property collaborator"
"indexed_uint_set","unclassified","end","property collaborator"
"tracked_uint_set","unclassified","insert","command"
"tracked_uint_set","unclassified","remove","command collaborator"
"tracked_uint_set","unclassified","contains","predicate"
"tracked_uint_set","unclassified","empty","predicate"
"tracked_uint_set","unclassified","erase","non-void-command"
"tracked_uint_set","unclassified","size","unclassified"
"tracked_uint_set","unclassified","begin","property collaborator"
"tracked_uint_set","unclassified","end","property collaborator"
"tracked_uint_set","unclassified","reset","command"
"tracked_uint_set","unclassified","finalize","command"
"tracked_uint_set","unclassified","operator&=","get non-void-command"
"tracked_uint_set","unclassified","operator|=","get non-void-command"
"uint_set","data-provider boundary","swap","command"
"uint_set","data-provider boundary","get_max_elem","wrapper stateless"
"uint_set","data-provider boundary","reset","command"
"uint_set","data-provider boundary","empty","predicate wrapper"
"uint_set","data-provider boundary","insert","wrapper"
"uint_set","data-provider boundary","remove","wrapper"
"uint_set","data-provider boundary","contains","predicate wrapper"
"uint_set","data-provider boundary","num_elems","wrapper"
"uint_set","data-provider boundary","operator|=","get controller"
"uint_set","data-provider boundary","operator&=","get controller"
"uint_set","data-provider boundary","operator==","predicate controller"
"uint_set","data-provider boundary","operator!=","predicate"
"uint_set","data-provider boundary","subset_of","predicate controller"
"uint_set","data-provider boundary","begin","property wrapper"
"uint_set","data-provider boundary","end","property wrapper"
"uint_set","data-provider boundary","get_hash","wrapper"
"trail_stack","commander","get_region","get collaborator"
"trail_stack","commander","reset","command"
"trail_stack","commander","push_ptr","command collaborator"
"trail_stack","commander","push","command collaborator"
"trail_stack","commander","get_num_scopes","unclassified"
"trail_stack","commander","push_scope","command"
"trail_stack","commander","pop_scope","command"
"insert_obj_trail","commander small-class","insert_obj_trail","constructor"
"insert_obj_trail","commander small-class","undo","command"
"new_obj_trail","boundary small-class","new_obj_trail","constructor"
"new_obj_trail","boundary small-class","undo","wrapper"
"history_trail","commander small-class","history_trail","constructor"
"history_trail","commander small-class","undo","command"
"push_back2_trail","boundary small-class","push_back2_trail","constructor"
"push_back2_trail","boundary small-class","undo","wrapper"
"pop_back2_trail","boundary small-class","pop_back2_trail","constructor"
"pop_back2_trail","boundary small-class","undo","wrapper"
"push_back_vector","commander small-class","push_back_vector","constructor"
"push_back_vector","commander small-class","undo","command"
"insert_ref_map","commander small-class","insert_ref_map","constructor"
"insert_ref_map","commander small-class","undo","command"
"insert_map","commander small-class","insert_map","constructor"
"insert_map","commander small-class","undo","command"
"remove_obj_map","commander small-class","remove_obj_map","constructor"
"remove_obj_map","commander small-class","undo","command"
"vector_value_trail","commander data-class small-class","vector_value_trail","constructor"
"vector_value_trail","commander data-class small-class","undo","set"
"restore_vector","commander small-class","restore_vector","constructor"
"restore_vector","commander small-class","restore_vector","constructor"
"restore_vector","commander small-class","undo","command"
"reset_flag_trail","commander data-class small-class","reset_flag_trail","constructor"
"reset_flag_trail","commander data-class small-class","undo","set"
"total_order","entity boundary","base","property collaborator"
"total_order","entity boundary","init_base","command"
"total_order","entity boundary","v","collaborator incidental"
"total_order","entity boundary","vb","property collaborator"
"total_order","entity boundary","vbn","property collaborator"
"total_order","entity boundary","mk_cell","property non-void-command collaborator"
"total_order","entity boundary","del_cell","command collaborator"
"total_order","entity boundary","to_cell","property collaborator"
"total_order","entity boundary","_insert_after","void-accessor command collaborator"
"total_order","entity boundary","insert_core","command collaborator"
"total_order","entity boundary","remove_cell","command collaborator"
"total_order","entity boundary","move_after","command collaborator"
"total_order","entity boundary","move_beginning","command collaborator"
"total_order","entity boundary","erase","command collaborator"
"total_order","entity boundary","~total_order","destructor"
"total_order","entity boundary","contains","predicate collaborator"
"total_order","entity boundary","insert","command collaborator"
"total_order","entity boundary","insert_after","command collaborator"
"total_order","entity boundary","move_beginning","command collaborator"
"total_order","entity boundary","move_after","command collaborator"
"total_order","entity boundary","erase","command collaborator"
"total_order","entity boundary","lt","predicate collaborator"
"total_order","entity boundary","gt","predicate collaborator"
"total_order","entity boundary","empty","predicate"
"total_order","entity boundary","size","get"
"total_order","entity boundary","first","property collaborator"
"total_order","entity boundary","has_next","predicate collaborator"
"total_order","entity boundary","next","property collaborator"
"total_order","entity boundary","has_pred","predicate collaborator"
"total_order","entity boundary","pred","property collaborator"
"total_order","entity boundary","display","collaborator"
"total_order","entity boundary","display_detail","collaborator"
"total_order","entity boundary","check_invariant","predicate collaborator"
"timer","data-provider","timer","constructor"
"timer","data-provider","get_seconds","property"
"timer","data-provider","timeout","predicate"
"timer","data-provider","ms_timeout","predicate"
"g_timeout_eh","commander boundary data-class small-class","operator()","set collaborator"
"tbv","data-provider small-class","operator[]","property collaborator"
"tbv","data-provider small-class","get","unclassified"
"symbol_eq_proc","boundary degenerate small-class","operator()","collaborator incidental"
"symbol_hash_proc","pure-controller degenerate small-class","operator()","controller stateless"
"string_buffer","commander","expand","command"
"string_buffer","commander","string_buffer","constructor"
"string_buffer","commander","~string_buffer","destructor"
"string_buffer","commander","reset","set"
"string_buffer","commander","append","command"
"string_buffer","commander","append","set"
"string_buffer","commander","append","set"
"string_buffer","commander","append","command collaborator"
"string_buffer","commander","append","command collaborator"
"string_buffer","commander","append","command collaborator"
"string_buffer","commander","append","command"
"string_buffer","commander","size","get"
"string_buffer","commander","empty","predicate"
"string_buffer","commander","c_str","get set"
"str_hash_proc","boundary degenerate small-class","operator()","wrapper stateless"
"scoped_watch","empty","scoped_watch","constructor"
"scoped_watch","empty","~scoped_watch","destructor"
"str_lt","boundary degenerate small-class","operator()","wrapper stateless"
"state_graph","boundary","state_graph::add_state_core","command collaborator"
"state_graph","boundary","state_graph::remove_state_core","command collaborator"
"state_graph","boundary","state_graph::mark_unknown_core","command collaborator"
"state_graph","boundary","state_graph::mark_live_core","command collaborator"
"state_graph","boundary","state_graph::mark_dead_core","command collaborator"
"state_graph","boundary","state_graph::add_edge_core","command"
"state_graph","boundary","state_graph::remove_edge_core","wrapper"
"state_graph","boundary","state_graph::rename_edge_core","command collaborator"
"state_graph","boundary","state_graph::merge_states","property non-void-command collaborator"
"state_graph","boundary","state_graph::merge_states","property non-void-command collaborator"
"state_graph","boundary","state_graph::mark_live_recursive","command collaborator"
"state_graph","boundary","state_graph::all_targets_dead","predicate non-void-command collaborator"
"state_graph","boundary","state_graph::mark_dead_recursive","command collaborator"
"state_graph","boundary","state_graph::merge_all_cycles","property non-void-command collaborator"
"state_graph","boundary","state_graph::add_state","command collaborator"
"state_graph","boundary","state_graph::mark_live","command collaborator"
"state_graph","boundary","state_graph::add_edge","command"
"state_graph","boundary","state_graph::mark_done","command collaborator"
"state_graph","boundary","state_graph::get_size","unclassified"
"state_graph","boundary","state_graph::is_seen","predicate collaborator"
"state_graph","boundary","state_graph::is_live","predicate collaborator"
"state_graph","boundary","state_graph::is_dead","predicate collaborator"
"state_graph","boundary","state_graph::is_done","predicate collaborator"
"state_graph","boundary","state_graph::display","property collaborator"
"state_graph","boundary","state_graph::is_subset","controller stateless"
"state_graph","boundary","state_graph::is_disjoint","controller stateless"
"state_graph","boundary","state_graph::check_invariant","predicate"
"state_graph","boundary","state_graph::write_dgml","predicate non-void-command collaborator"
"state_graph","boundary","state_graph::write_dot","predicate non-void-command collaborator"
"stacked_value","unclassified","push","command"
"stacked_value","unclassified","clear","command collaborator"
"stacked_value","unclassified","stack_size","unclassified"
"stacked_value","unclassified","pop","command"
"stacked_value","unclassified","pop","command"
"stacked_value","unclassified","stacked_value","constructor"
"stacked_value","unclassified","stacked_value","constructor"
"stacked_value","unclassified","stacked_value","constructor"
"stacked_value","unclassified","operator=","set collaborator"
"stacked_value","unclassified","operator=","set collaborator"
"stacked_value","unclassified","operatorT&","get"
"stacked_value","unclassified","operatorconstT&","get"
"stacked_value","unclassified","operator()","get collaborator"
"stacked_value","unclassified","operator()","get collaborator"
"stack","unclassified","allocate","property command collaborator"
"stack","unclassified","empty","predicate"
"stack","unclassified","deallocate","command collaborator"
"stack","unclassified","stack::store_mark","set"
"stack","unclassified","stack::top_mark","property"
"stack","unclassified","stack::allocate_page","command"
"stack","unclassified","stack::store_mark","command"
"stack","unclassified","stack::stack","constructor"
"stack","unclassified","stack::~stack","destructor"
"stack","unclassified","stack::reset","command"
"stack","unclassified","stack::top","property collaborator"
"stack","unclassified","stack::allocate_small","property command collaborator"
"stack","unclassified","stack::allocate_big","property command collaborator"
"stack","unclassified","stack::deallocate","command"
"small_object_allocator","unclassified","get_allocation_size","get"
"small_object_allocator","unclassified","small_object_allocator::small_object_allocator","constructor"
"small_object_allocator","unclassified","small_object_allocator::~small_object_allocator","destructor"
"small_object_allocator","unclassified","small_object_allocator::reset","command collaborator"
"small_object_allocator","unclassified","small_object_allocator::deallocate","command"
"small_object_allocator","unclassified","small_object_allocator::allocate","property command collaborator"
"small_object_allocator","unclassified","small_object_allocator::get_wasted_size","property"
"small_object_allocator","unclassified","small_object_allocator::get_num_free_objs","property"
"small_object_allocator","unclassified","small_object_allocator::consolidate","command"
"ptr_lt","boundary degenerate small-class","operator()","collaborator incidental"
"sexpr_manager","factory controller","inc_ref","controller stateless"
"sexpr_manager","factory controller","dec_ref","void-accessor command collaborator"
"sexpr_manager","factory controller","sexpr_manager::del","command collaborator"
"sexpr_manager","factory controller","sexpr_manager::sexpr_manager","constructor"
"sexpr_manager","factory controller","sexpr_manager::mk_composite","property non-void-command factory collaborator"
"sexpr_manager","factory controller","sexpr_manager::mk_numeral","property non-void-command factory collaborator"
"sexpr_manager","factory controller","sexpr_manager::mk_bv_numeral","property non-void-command factory collaborator"
"sexpr_manager","factory controller","sexpr_manager::mk_string","property non-void-command factory collaborator"
"sexpr_manager","factory controller","sexpr_manager::mk_string","property non-void-command factory collaborator"
"sexpr_manager","factory controller","sexpr_manager::mk_keyword","property non-void-command factory collaborator"
"sexpr_manager","factory controller","sexpr_manager::mk_symbol","property non-void-command factory collaborator"
"sexpr","data-provider","inc_ref","set"
"sexpr","data-provider","get_ref_count","get"
"sexpr","data-provider","get_line","get"
"sexpr","data-provider","get_pos","get"
"sexpr","data-provider","get_kind","get collaborator"
"sexpr","data-provider","is_composite","predicate"
"sexpr","data-provider","is_numeral","predicate"
"sexpr","data-provider","is_bv_numeral","predicate"
"sexpr","data-provider","is_string","predicate"
"sexpr","data-provider","is_keyword","predicate"
"sexpr","data-provider","is_symbol","predicate"
"sexpr","data-provider","sexpr::sexpr","constructor"
"sexpr","data-provider","sexpr::get_numeral","property collaborator"
"sexpr","data-provider","sexpr::get_bv_size","unclassified"
"sexpr","data-provider","sexpr::get_symbol","property collaborator"
"sexpr","data-provider","sexpr::get_string","property"
"sexpr","data-provider","sexpr::get_num_children","unclassified"
"sexpr","data-provider","sexpr::get_child","property"
"sexpr","data-provider","sexpr::get_children","property"
"sexpr","data-provider","sexpr::display_atom","collaborator"
"sexpr","data-provider","sexpr::display","collaborator"
"sexpr_symbol","empty","sexpr_symbol","constructor"
"sexpr_string","empty","sexpr_string","constructor"
"sexpr_string","empty","sexpr_string","constructor"
"sexpr_composite","empty","sexpr_composite","constructor"
"scoped_vector","boundary","push_scope","command"
"scoped_vector","boundary","pop_scope","command"
"scoped_vector","boundary","operator[]","get wrapper"
"scoped_vector","boundary","ref","get wrapper"
"scoped_vector","boundary","set","command collaborator"
"scoped_vector","boundary","set","command collaborator"
"scoped_vector","boundary","begin","property wrapper"
"scoped_vector","boundary","end","property wrapper"
"scoped_vector","boundary","push_back","command collaborator"
"scoped_vector","boundary","push_back","command collaborator"
"scoped_vector","boundary","pop_back","command"
"scoped_vector","boundary","erase_and_swap","command collaborator"
"scoped_vector","boundary","size","get"
"scoped_vector","boundary","empty","predicate"
"scoped_vector","boundary","set_index","command"
"scoped_vector","boundary","invariant","predicate"
"scoped_ptr_vector","boundary","~scoped_ptr_vector","destructor"
"scoped_ptr_vector","boundary","scoped_ptr_vector","copy-constructor"
"scoped_ptr_vector","boundary","operator=","get non-void-command"
"scoped_ptr_vector","boundary","reset","command"
"scoped_ptr_vector","boundary","push_back","command collaborator"
"scoped_ptr_vector","boundary","push_back","command collaborator"
"scoped_ptr_vector","boundary","pop_back","command"
"scoped_ptr_vector","boundary","back","property collaborator"
"scoped_ptr_vector","boundary","operator[]","get collaborator"
"scoped_ptr_vector","boundary","get","property collaborator"
"scoped_ptr_vector","boundary","set","set collaborator"
"scoped_ptr_vector","boundary","swap","command"
"scoped_ptr_vector","boundary","size","unclassified"
"scoped_ptr_vector","boundary","empty","predicate"
"scoped_ptr_vector","boundary","resize","command"
"scoped_ptr_vector","boundary","reserve","command"
"scoped_ptr_vector","boundary","swap_back","void-accessor command collaborator"
"scoped_ptr_vector","boundary","detach_back","property non-void-command collaborator"
"scoped_ptr_vector","boundary","detach","property non-void-command collaborator"
"scoped_ptr_vector","boundary","data","property collaborator"
"scoped_ptr_vector","boundary","begin","property collaborator"
"scoped_ptr_vector","boundary","end","property collaborator"
"scoped_limit_trail","small-class","push","command"
"scoped_limit_trail","small-class","pop","get non-void-command"
"scoped_ctrl_c","commander data-class small-class","reset","set"
"scoped_ctrl_c","commander data-class small-class","scoped_ctrl_c::scoped_ctrl_c","constructor"
"scoped_ctrl_c","commander data-class small-class","scoped_ctrl_c::~scoped_ctrl_c","destructor"
"literal_set","boundary","literal_set","constructor"
"literal_set","boundary","literal_set","constructor"
"literal_set","boundary","to_vector","property controller"
"literal_set","boundary","operator=","get non-void-command collaborator"
"literal_set","boundary","insert","command collaborator"
"literal_set","boundary","remove","command collaborator"
"literal_set","boundary","pop","property non-void-command collaborator"
"literal_set","boundary","contains","predicate collaborator"
"literal_set","boundary","empty","predicate"
"literal_set","boundary","size","unclassified"
"literal_set","boundary","reset","command"
"literal_set","boundary","finalize","command"
"literal_set","boundary","begin","property collaborator"
"literal_set","boundary","end","property collaborator"
"literal_set","boundary","operator&=","get set"
"literal_set","boundary","operator|=","get set"
"literal2unsigned","pure-controller degenerate small-class","operator()","controller stateless"
"scoped_limits","commander data-class small-class","scoped_limits","constructor"
"scoped_limits","commander data-class small-class","~scoped_limits","destructor"
"scoped_limits","commander data-class small-class","reset","set"
"scoped_limits","commander data-class small-class","push_child","set collaborator"
"scoped_suspend_rlimit","empty","scoped_suspend_rlimit","constructor"
"scoped_suspend_rlimit","empty","scoped_suspend_rlimit","constructor"
"scoped_suspend_rlimit","empty","~scoped_suspend_rlimit","destructor"
"reslimit","unclassified","suspended","get"
"reslimit","unclassified","not_canceled","predicate"
"reslimit","unclassified","is_canceled","predicate"
"reslimit","unclassified","reslimit::reslimit","constructor"
"reslimit","unclassified","reslimit::count","get"
"reslimit","unclassified","reslimit::inc","predicate set"
"reslimit","unclassified","reslimit::inc","predicate set"
"reslimit","unclassified","reslimit::push","command"
"reslimit","unclassified","reslimit::pop","command"
"reslimit","unclassified","reslimit::get_cancel_msg","property"
"reslimit","unclassified","reslimit::push_child","command collaborator"
"reslimit","unclassified","reslimit::pop_child","command collaborator"
"reslimit","unclassified","reslimit::cancel","command collaborator"
"reslimit","unclassified","reslimit::reset_cancel","command collaborator"
"reslimit","unclassified","reslimit::inc_cancel","command collaborator"
"reslimit","unclassified","reslimit::dec_cancel","command collaborator"
"reslimit","unclassified","reslimit::set_cancel","command"
"region","commander","~region","destructor"
"region","commander","push_scope","command"
"region","commander","pop_scope","command"
"region","commander","pop_scope","command"
"region","commander","region::display_mem_stats","collaborator"
"region","commander","region::allocate","property command collaborator"
"region","commander","region::reset","command"
"region","commander","region::pop_scope","command collaborator"
"region","commander","region::allocate_page","command"
"region","commander","region::region","constructor"
"region","commander","region::~region","destructor"
"region","commander","region::allocate","property command collaborator"
"region","commander","region::recycle_curr_page","set"
"region","commander","region::reset","command"
"region","commander","region::push_scope","set"
"region","commander","region::pop_scope","command"
"region","commander","region::display_mem_stats","wrapper"
"ref_vector_ptr_eq","pure-controller degenerate small-class","operator()","controller stateless"
"ref_vector_ptr_hash","pure-controller degenerate small-class","operator()","controller stateless"
"ref_vector","data-provider boundary","ref_vector","constructor"
"ref_vector","data-provider boundary","ref_vector","copy-constructor"
"ref_vector","data-provider boundary","ref_vector","constructor"
"ref_vector","data-provider boundary","get_manager","collaborator incidental"
"ref_vector","data-provider boundary","m","property collaborator"
"ref_vector","data-provider boundary","swap","command"
"ref_vector","data-provider boundary","operator[]","property collaborator"
"ref_vector","data-provider boundary","operator[]","get wrapper"
"ref_vector","data-provider boundary","set","command collaborator"
"ref_vector","data-provider boundary","setx","command collaborator"
"ref_vector","data-provider boundary","set","get controller"
"ref_vector","data-provider boundary","operator==","predicate controller"
"ref_vector","data-provider boundary","operator!=","predicate"
"ref_vector","data-provider boundary","forall","predicate wrapper"
"ref_vector","data-provider boundary","exists","predicate wrapper"
"ref_vector","data-provider boundary","filter_pure","property collaborator"
"ref_vector","data-provider boundary","mapv_pure","property controller"
"ref_vector","data-provider boundary","map_pure","property collaborator"
"ref_vector","data-provider boundary","map_update","get non-void-command collaborator"
"ref_pair_vector","data-provider boundary","ref_pair_vector","constructor"
"ref_pair_vector","data-provider boundary","ref_pair_vector","copy-constructor"
"ref_pair_vector","data-provider boundary","ref_pair_vector","copy-constructor"
"ref_pair_vector","data-provider boundary","ref_pair_vector","constructor"
"ref_pair_vector","data-provider boundary","get_manager","collaborator incidental"
"ref_pair_vector","data-provider boundary","m","property collaborator"
"ref_pair_vector","data-provider boundary","swap","command"
"ref_pair_vector","data-provider boundary","operator[]","property collaborator"
"ref_pair_vector","data-provider boundary","operator[]","get wrapper"
"ref_pair_vector","data-provider boundary","set","command collaborator"
"ref_pair_vector","data-provider boundary","operator==","predicate controller"
"ref_pair_vector","data-provider boundary","operator!=","predicate"
"ref_buffer","empty","ref_buffer","constructor"
"ref_buffer","empty","ref_buffer","copy-constructor"
"ref_buffer_core","boundary","inc_ref","command collaborator"
"ref_buffer_core","boundary","dec_ref","command collaborator"
"ref_buffer_core","boundary","dec_range_ref","command collaborator"
"ref_buffer_core","boundary","ref_buffer_core","constructor"
"ref_buffer_core","boundary","~ref_buffer_core","destructor"
"ref_buffer_core","boundary","push_back","command collaborator"
"ref_buffer_core","boundary","push_back","command collaborator"
"ref_buffer_core","boundary","pop_back","command collaborator"
"ref_buffer_core","boundary","back","property collaborator"
"ref_buffer_core","boundary","back","property non-void-command collaborator"
"ref_buffer_core","boundary","data","property collaborator"
"ref_buffer_core","boundary","operator[]","get collaborator"
"ref_buffer_core","boundary","begin","property collaborator"
"ref_buffer_core","boundary","end","property collaborator"
"ref_buffer_core","boundary","set","command collaborator"
"ref_buffer_core","boundary","size","unclassified"
"ref_buffer_core","boundary","empty","predicate"
"ref_buffer_core","boundary","reset","command"
"ref_buffer_core","boundary","finalize","command"
"ref_buffer_core","boundary","append","command collaborator"
"ref_buffer_core","boundary","append","command"
"ref_buffer_core","boundary","resize","command"
"ref_buffer_core","boundary","shrink","command"
"ref_buffer_core","boundary","setx","command collaborator"
"ref_buffer_core","boundary","operator=","get non-void-command"
"ref","unclassified","inc_ref","command"
"ref","unclassified","dec_ref","command"
"ref","unclassified","ref","constructor"
"ref","unclassified","ref","constructor"
"ref","unclassified","ref","copy-constructor"
"ref","unclassified","ref","copy-constructor"
"ref","unclassified","~ref","destructor"
"ref","unclassified","operator->","get collaborator"
"ref","unclassified","get","get collaborator"
"ref","unclassified","operatorbool","unclassified"
"ref","unclassified","operator!","predicate"
"ref","unclassified","operator*","get collaborator"
"ref","unclassified","operator*","get collaborator"
"ref","unclassified","operator=","get set collaborator"
"ref","unclassified","operator=","get set"
"ref","unclassified","operator=","get set"
"ref","unclassified","reset","set"
"ref","unclassified","detach","property set collaborator"
"ref","unclassified","operator==","incidental"
"ref","unclassified","operator!=","incidental"
"ref","unclassified","swap","collaborator incidental"
"rational","data-provider","display_hex","unclassified"
"rational","data-provider","display_bin","unclassified"
"rational","data-provider","rational","constructor"
"rational","data-provider","rational","copy-constructor"
"rational","data-provider","rational","constructor"
"rational","data-provider","rational","constructor"
"rational","data-provider","rational","constructor"
"rational","data-provider","rational","constructor"
"rational","data-provider","rational","constructor"
"rational","data-provider","rational","constructor"
"rational","data-provider","rational","constructor"
"rational","data-provider","rational","constructor"
"rational","data-provider","~rational","destructor"
"rational","data-provider","to_mpq","get collaborator"
"rational","data-provider","bitsize","unclassified"
"rational","data-provider","storage_size","unclassified"
"rational","data-provider","reset","command"
"rational","data-provider","is_int","predicate"
"rational","data-provider","is_small","predicate"
"rational","data-provider","is_big","predicate"
"rational","data-provider","hash","unclassified"
"rational","data-provider","swap","wrapper"
"rational","data-provider","to_string","property"
"rational","data-provider","display","wrapper"
"rational","data-provider","display_decimal","wrapper"
"rational","data-provider","display_smt2","wrapper"
"rational","data-provider","as_hex","property wrapper"
"rational","data-provider","operator<<","collaborator incidental"
"rational","data-provider","as_bin","property wrapper"
"rational","data-provider","operator<<","collaborator incidental"
"rational","data-provider","is_uint64","predicate"
"rational","data-provider","is_int64","predicate"
"rational","data-provider","get_uint64","property"
"rational","data-provider","get_int64","property"
"rational","data-provider","is_unsigned","predicate"
"rational","data-provider","get_unsigned","unclassified"
"rational","data-provider","is_int32","predicate"
"rational","data-provider","get_int32","property"
"rational","data-provider","get_double","property"
"rational","data-provider","get_rational","get"
"rational","data-provider","get_infinitesimal","get"
"rational","data-provider","operator=","get wrapper"
"rational","data-provider","operator=","get wrapper"
"rational","data-provider","numerator","wrapper stateless"
"rational","data-provider","denominator","wrapper stateless"
"rational","data-provider","inv","wrapper stateless"
"rational","data-provider","operator+=","get wrapper"
"rational","data-provider","operator+=","get non-void-command"
"rational","data-provider","operator-=","get wrapper"
"rational","data-provider","operator-=","get non-void-command"
"rational","data-provider","operator*=","get wrapper"
"rational","data-provider","operator/=","get non-void-command"
"rational","data-provider","operator%=","get wrapper"
"rational","data-provider","operator%=","property set"
"rational","data-provider","operator/=","property set"
"rational","data-provider","operator*=","property set"
"rational","data-provider","div","wrapper stateless"
"rational","data-provider","div","wrapper stateless"
"rational","data-provider","machine_div","wrapper stateless"
"rational","data-provider","machine_div_rem","wrapper stateless"
"rational","data-provider","machine_div2k","wrapper stateless"
"rational","data-provider","mod","property non-void-command"
"rational","data-provider","mod","command"
"rational","data-provider","mod2k","property non-void-command"
"rational","data-provider","operator%","wrapper stateless"
"rational","data-provider","mod_hat","property non-void-command"
"rational","data-provider","operator++","get wrapper"
"rational","data-provider","operator++","property"
"rational","data-provider","operator--","get wrapper"
"rational","data-provider","operator--","property"
"rational","data-provider","operator==","wrapper stateless"
"rational","data-provider","operator<","wrapper stateless"
"rational","data-provider","neg","command"
"rational","data-provider","is_zero","predicate"
"rational","data-provider","is_one","predicate"
"rational","data-provider","is_minus_one","predicate"
"rational","data-provider","is_neg","predicate"
"rational","data-provider","is_pos","predicate"
"rational","data-provider","is_nonneg","predicate"
"rational","data-provider","is_nonpos","predicate"
"rational","data-provider","is_even","predicate"
"rational","data-provider","is_odd","predicate"
"rational","data-provider","floor","wrapper stateless"
"rational","data-provider","ceil","wrapper stateless"
"rational","data-provider","expt","property wrapper"
"rational","data-provider","is_power_of_two","predicate wrapper"
"rational","data-provider","is_power_of_two","predicate wrapper"
"rational","data-provider","addmul","controller stateless"
"rational","data-provider","submul","controller stateless"
"rational","data-provider","is_int_perfect_square","predicate wrapper"
"rational","data-provider","is_perfect_square","predicate wrapper"
"rational","data-provider","root","predicate wrapper"
"rational","data-provider","operator<<","property non-void-command collaborator"
"rational","data-provider","divides","predicate non-void-command"
"rational","data-provider","lcm","wrapper stateless"
"rational","data-provider","bitwise_or","wrapper stateless"
"rational","data-provider","bitwise_and","wrapper stateless"
"rational","data-provider","bitwise_xor","wrapper stateless"
"rational","data-provider","bitwise_not","wrapper stateless"
"rational","data-provider","to_rational","get"
"rational","data-provider","get_num_digits","unclassified"
"rational","data-provider","get_num_bits","unclassified"
"rational","data-provider","get_num_decimal","unclassified"
"rational","data-provider","prev_power_of_two","unclassified"
"rational","data-provider","next_power_of_two","unclassified"
"rational","data-provider","get_bit","predicate wrapper"
"rational","data-provider","trailing_zeros","unclassified"
"rational","data-provider","parity","unclassified"
"rational","data-provider","rational::power_of_two","property non-void-command collaborator"
"rational","data-provider","rational::initialize","set"
"rational","data-provider","rational::finalize","command"
"rational","data-provider","rational::limit_denominator","predicate non-void-command"
"rational","data-provider","rational::mult_inverse","predicate"
"rational","data-provider","rational::pseudo_inverse","property"
"ptr_scoped_buffer","boundary","deallocate_all","command collaborator"
"ptr_scoped_buffer","boundary","ptr_scoped_buffer","constructor"
"ptr_scoped_buffer","boundary","~ptr_scoped_buffer","destructor"
"ptr_scoped_buffer","boundary","reset","command"
"ptr_scoped_buffer","boundary","finalize","command"
"ptr_scoped_buffer","boundary","release","command"
"ptr_scoped_buffer","boundary","size","unclassified"
"ptr_scoped_buffer","boundary","empty","predicate"
"ptr_scoped_buffer","boundary","begin","property collaborator"
"ptr_scoped_buffer","boundary","end","property collaborator"
"ptr_scoped_buffer","boundary","push_back","command collaborator"
"ptr_scoped_buffer","boundary","back","property collaborator"
"ptr_scoped_buffer","boundary","pop_back","command"
"ptr_scoped_buffer","boundary","get","property collaborator"
"ptr_scoped_buffer","boundary","set","command collaborator"
"ptr_scoped_buffer","boundary","append","command collaborator"
"prime_generator_exception","empty","prime_generator_exception","constructor"
"pool","entity boundary small-class","~pool","destructor"
"pool","entity boundary small-class","mk","property non-void-command collaborator"
"pool","entity boundary small-class","recycle","command collaborator"
"plugin_manager","boundary","~plugin_manager","destructor"
"plugin_manager","boundary","reset","command"
"plugin_manager","boundary","release","command"
"plugin_manager","boundary","register_plugin","command collaborator"
"plugin_manager","boundary","get_plugin","controller stateless"
"plugin_manager","boundary","plugins","get collaborator"
"plugin_manager","boundary","begin","property collaborator"
"plugin_manager","boundary","end","property collaborator"
"permutation","unclassified","operator()","get"
"permutation","unclassified","inv","get"
"permutation","unclassified","permutation::permutation","constructor"
"permutation","unclassified","permutation::reset","command"
"permutation","unclassified","permutation::swap","command"
"permutation","unclassified","permutation::move_after","command"
"permutation","unclassified","permutation::display","collaborator"
"permutation","unclassified","permutation::check_invariant","predicate"
"dummy_value_manager","degenerate small-class","inc_ref","empty"
"dummy_value_manager","degenerate small-class","dec_ref","empty"
"parray_manager","boundary","allocate_values","property non-void-command collaborator"
"parray_manager","boundary","deallocate_values","command collaborator"
"parray_manager","boundary","inc_ref","command collaborator"
"parray_manager","boundary","dec_ref","command collaborator"
"parray_manager","boundary","dec_ref","command collaborator"
"parray_manager","boundary","mk","non-void-command factory collaborator"
"parray_manager","boundary","del","void-accessor command collaborator"
"parray_manager","boundary","inc_ref","collaborator incidental"
"parray_manager","boundary","dec_ref","void-accessor command collaborator"
"parray_manager","boundary","expand","void-accessor command collaborator"
"parray_manager","boundary","rset","void-accessor command collaborator"
"parray_manager","boundary","rset","command collaborator"
"parray_manager","boundary","rpush_back","void-accessor command collaborator"
"parray_manager","boundary","rpush_back","command collaborator"
"parray_manager","boundary","rpop_back","void-accessor command"
"parray_manager","boundary","rpop_back","command collaborator"
"parray_manager","boundary","copy_values","void-accessor command collaborator"
"parray_manager","boundary","get_values","non-void-command collaborator"
"parray_manager","boundary","unfold","void-accessor command collaborator"
"parray_manager","boundary","parray_manager","constructor"
"parray_manager","boundary","manager","get collaborator"
"parray_manager","boundary","mk","void-accessor command collaborator"
"parray_manager","boundary","del","void-accessor command collaborator"
"parray_manager","boundary","copy","void-accessor command collaborator"
"parray_manager","boundary","size","controller stateless"
"parray_manager","boundary","check_size","void-accessor collaborator"
"parray_manager","boundary","empty","predicate collaborator"
"parray_manager","boundary","get","property collaborator"
"parray_manager","boundary","set","void-accessor command collaborator"
"parray_manager","boundary","set","command collaborator"
"parray_manager","boundary","push_back","void-accessor command collaborator"
"parray_manager","boundary","push_back","command collaborator"
"parray_manager","boundary","pop_back","void-accessor command collaborator"
"parray_manager","boundary","pop_back","command collaborator"
"parray_manager","boundary","unshare","void-accessor command collaborator"
"parray_manager","boundary","unfold","void-accessor command collaborator"
"parray_manager","boundary","reroot","void-accessor command collaborator"
"parray_manager","boundary","display_info","controller stateless"
"object_allocator","boundary","allocate_core","get property controller"
"object_allocator","boundary","recycle_core","wrapper"
"object_allocator","boundary","~object_allocator","destructor"
"object_allocator","boundary","enable_concurrent","incidental"
"object_allocator","boundary","reserve","command"
"object_allocator","boundary","capacity","unclassified"
"object_allocator","boundary","reset","command"
"object_allocator","boundary","allocate","property wrapper"
"object_allocator","boundary","recycle","command collaborator"
"object_allocator","boundary","allocate","property wrapper"
"object_allocator","boundary","recycle","command collaborator"
"object_allocator","boundary","get_worker_allocator","property non-void-command collaborator"
"object_allocator","boundary","get_objects_count","unclassified"
"simple_reset_proc","pure-controller degenerate small-class","operator()","controller stateless"
"do_nothing_reset_proc","degenerate small-class","operator()","empty"
"obj_triple_map","entity boundary","find_core","property collaborator"
"obj_triple_map","entity boundary","reset","command"
"obj_triple_map","entity boundary","empty","predicate"
"obj_triple_map","entity boundary","size","unclassified"
"obj_triple_map","entity boundary","capacity","unclassified"
"obj_triple_map","entity boundary","begin","property collaborator"
"obj_triple_map","entity boundary","end","property collaborator"
"obj_triple_map","entity boundary","insert","command collaborator"
"obj_triple_map","entity boundary","insert_if_not_there","property non-void-command collaborator"
"obj_triple_map","entity boundary","find","predicate collaborator"
"obj_triple_map","entity boundary","contains","predicate collaborator"
"obj_triple_map","entity boundary","erase","command collaborator"
"obj_triple_hashtable","empty","obj_triple_hashtable","constructor"
"obj_triple_hash_entry","unclassified","get_hash","get"
"obj_triple_hash_entry","unclassified","is_free","predicate"
"obj_triple_hash_entry","unclassified","is_deleted","predicate"
"obj_triple_hash_entry","unclassified","is_used","predicate"
"obj_triple_hash_entry","unclassified","get_data","get collaborator"
"obj_triple_hash_entry","unclassified","get_data","get collaborator"
"obj_triple_hash_entry","unclassified","set_data","set collaborator"
"obj_triple_hash_entry","unclassified","set_hash","set"
"obj_triple_hash_entry","unclassified","mark_as_deleted","set"
"obj_triple_hash_entry","unclassified","mark_as_free","set"
"obj_pair_set","entity boundary","insert","command collaborator"
"obj_pair_set","entity boundary","insert","command collaborator"
"obj_pair_set","entity boundary","insert_if_not_there","predicate non-void-command collaborator"
"obj_pair_set","entity boundary","insert_if_not_there","predicate non-void-command collaborator"
"obj_pair_set","entity boundary","erase","command collaborator"
"obj_pair_set","entity boundary","erase","command collaborator"
"obj_pair_set","entity boundary","remove","command collaborator"
"obj_pair_set","entity boundary","contains","predicate collaborator"
"obj_pair_set","entity boundary","contains","predicate collaborator"
"obj_pair_set","entity boundary","reset","command"
"obj_pair_set","entity boundary","empty","predicate"
"obj_pair_set","entity boundary","begin","property non-void-command collaborator"
"obj_pair_set","entity boundary","end","property non-void-command collaborator"
"obj_pair_hash_entry","unclassified","get_hash","get"
"obj_pair_hash_entry","unclassified","is_free","predicate"
"obj_pair_hash_entry","unclassified","is_deleted","predicate"
"obj_pair_hash_entry","unclassified","is_used","predicate"
"obj_pair_hash_entry","unclassified","get_data","get collaborator"
"obj_pair_hash_entry","unclassified","get_data","get collaborator"
"obj_pair_hash_entry","unclassified","set_data","set collaborator"
"obj_pair_hash_entry","unclassified","set_hash","set"
"obj_pair_hash_entry","unclassified","mark_as_deleted","set"
"obj_pair_hash_entry","unclassified","mark_as_free","set"
"default_t2uint","pure-controller degenerate small-class","operator()","controller stateless"
"scoped_value_trail","commander small-class","scoped_value_trail","constructor"
"scoped_value_trail","commander small-class","undo","command"
"obj_hashtable","empty","obj_hashtable","constructor"
"nat_set","commander","nat_set","constructor"
"nat_set","commander","set_domain","command"
"nat_set","commander","get_domain","unclassified"
"nat_set","commander","assure_domain","command"
"nat_set","commander","contains","get"
"nat_set","commander","insert","set"
"nat_set","commander","remove","set"
"nat_set","commander","reset","set"
"nat_set","commander","empty","predicate collaborator"
"mutex","degenerate small-class","lock","empty"
"mutex","degenerate small-class","unlock","empty"
"mpzzp_manager","entity boundary","is_p_normalized_core","predicate collaborator"
"mpzzp_manager","entity boundary","setup_p","command"
"mpzzp_manager","entity boundary","p_normalize_core","command collaborator"
"mpzzp_manager","entity boundary","field","predicate"
"mpzzp_manager","entity boundary","finite","predicate"
"mpzzp_manager","entity boundary","modular","predicate"
"mpzzp_manager","entity boundary","mpzzp_manager","constructor"
"mpzzp_manager","entity boundary","mpzzp_manager","constructor"
"mpzzp_manager","entity boundary","mpzzp_manager","constructor"
"mpzzp_manager","entity boundary","~mpzzp_manager","destructor"
"mpzzp_manager","entity boundary","is_p_normalized","predicate collaborator"
"mpzzp_manager","entity boundary","p_normalize","command collaborator"
"mpzzp_manager","entity boundary","m","get collaborator"
"mpzzp_manager","entity boundary","p","get collaborator"
"mpzzp_manager","entity boundary","set_z","set"
"mpzzp_manager","entity boundary","set_zp","command collaborator"
"mpzzp_manager","entity boundary","set_zp","command"
"mpzzp_manager","entity boundary","set_p_sq","command"
"mpzzp_manager","entity boundary","set_zp_swap","command collaborator"
"mpzzp_manager","entity boundary","reset","command collaborator"
"mpzzp_manager","entity boundary","is_small","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","del","command collaborator"
"mpzzp_manager","entity boundary","neg","command collaborator"
"mpzzp_manager","entity boundary","abs","command collaborator"
"mpzzp_manager","entity boundary","is_zero","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","is_one","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","is_pos","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","is_neg","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","is_nonpos","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","is_nonneg","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","is_minus_one","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","eq","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","lt","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","le","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","gt","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","ge","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","to_string","property collaborator"
"mpzzp_manager","entity boundary","display","collaborator"
"mpzzp_manager","entity boundary","add","command collaborator"
"mpzzp_manager","entity boundary","sub","command collaborator"
"mpzzp_manager","entity boundary","inc","command collaborator"
"mpzzp_manager","entity boundary","dec","command collaborator"
"mpzzp_manager","entity boundary","mul","command collaborator"
"mpzzp_manager","entity boundary","addmul","command collaborator"
"mpzzp_manager","entity boundary","submul","command collaborator"
"mpzzp_manager","entity boundary","inv","command collaborator"
"mpzzp_manager","entity boundary","swap","command collaborator"
"mpzzp_manager","entity boundary","divides","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","div","command collaborator"
"mpzzp_manager","entity boundary","gcd","command collaborator"
"mpzzp_manager","entity boundary","gcd","command collaborator"
"mpzzp_manager","entity boundary","gcd","command collaborator"
"mpzzp_manager","entity boundary","set","command collaborator"
"mpzzp_manager","entity boundary","set","command"
"mpzzp_manager","entity boundary","set","command"
"mpzzp_manager","entity boundary","set","command"
"mpzzp_manager","entity boundary","set","command"
"mpzzp_manager","entity boundary","set","command"
"mpzzp_manager","entity boundary","set","command collaborator"
"mpzzp_manager","entity boundary","is_uint64","predicate collaborator"
"mpzzp_manager","entity boundary","is_int64","predicate collaborator"
"mpzzp_manager","entity boundary","get_uint64","property collaborator"
"mpzzp_manager","entity boundary","get_int64","property collaborator"
"mpzzp_manager","entity boundary","get_double","property collaborator"
"mpzzp_manager","entity boundary","power","command collaborator"
"mpzzp_manager","entity boundary","is_perfect_square","predicate non-void-command collaborator"
"mpzzp_manager","entity boundary","is_uint64","predicate collaborator"
"mpzzp_manager","entity boundary","is_int64","predicate collaborator"
"mpzzp_manager","entity boundary","get_uint64","property collaborator"
"mpzzp_manager","entity boundary","get_int64","property collaborator"
"mpzzp_manager","entity boundary","mul2k","command"
"mpzzp_manager","entity boundary","mul2k","command collaborator"
"mpzzp_manager","entity boundary","power_of_two_multiple","non-void-command collaborator"
"mpzzp_manager","entity boundary","log2","non-void-command collaborator"
"mpzzp_manager","entity boundary","mlog2","non-void-command collaborator"
"mpzzp_manager","entity boundary","machine_div2k","command"
"mpzzp_manager","entity boundary","machine_div2k","command collaborator"
"mpzzp_manager","entity boundary","root","predicate non-void-command"
"mpzzp_manager","entity boundary","root","predicate non-void-command collaborator"
"mpz_stack","empty","mpz_stack","constructor"
"mpz","unclassified","operator=","get non-void-command"
"mpz","unclassified","swap","void-accessor command"
"mpz","unclassified","set","command"
"mpz","unclassified","is_small","predicate"
"mpz","unclassified","value","get"
"mpz","unclassified","sign","get"
"mpz_manager<SYNCH>::sz_lt","small-class","operator()","predicate non-void-command"
"mpq_manager","entity commander boundary","reset_denominator","command collaborator"
"mpq_manager","entity commander boundary","normalize","command collaborator"
"mpq_manager","entity commander boundary","rat_add","command collaborator"
"mpq_manager","entity commander boundary","reset","command collaborator"
"mpq_manager","entity commander boundary","reset","command collaborator"
"mpq_manager","entity commander boundary","mk_q","property non-void-command collaborator"
"mpq_manager","entity commander boundary","del","command collaborator"
"mpq_manager","entity commander boundary","del","command collaborator"
"mpq_manager","entity commander boundary","get_numerator","command collaborator"
"mpq_manager","entity commander boundary","get_denominator","command collaborator"
"mpq_manager","entity commander boundary","get_numerator","command collaborator"
"mpq_manager","entity commander boundary","get_denominator","command collaborator"
"mpq_manager","entity commander boundary","neg","command collaborator"
"mpq_manager","entity commander boundary","neg","command collaborator"
"mpq_manager","entity commander boundary","abs","command collaborator"
"mpq_manager","entity commander boundary","abs","command collaborator"
"mpq_manager","entity commander boundary","floor","command collaborator"
"mpq_manager","entity commander boundary","ceil","command collaborator"
"mpq_manager","entity commander boundary","to_rational_string","property non-void-command collaborator"
"mpq_manager","entity commander boundary","to_string","property collaborator"
"mpq_manager","entity commander boundary","display","collaborator"
"mpq_manager","entity commander boundary","display_pp","collaborator"
"mpq_manager","entity commander boundary","display_smt2","unclassified"
"mpq_manager","entity commander boundary","add","command collaborator"
"mpq_manager","entity commander boundary","add","command collaborator"
"mpq_manager","entity commander boundary","add","command collaborator"
"mpq_manager","entity commander boundary","sub","command collaborator"
"mpq_manager","entity commander boundary","sub","command collaborator"
"mpq_manager","entity commander boundary","inc","command collaborator"
"mpq_manager","entity commander boundary","dec","command collaborator"
"mpq_manager","entity commander boundary","inc","command collaborator"
"mpq_manager","entity commander boundary","dec","command collaborator"
"mpq_manager","entity commander boundary","mul","command collaborator"
"mpq_manager","entity commander boundary","mul","command collaborator"
"mpq_manager","entity commander boundary","mul","command collaborator"
"mpq_manager","entity commander boundary","mul","command collaborator"
"mpq_manager","entity commander boundary","addmul","command collaborator"
"mpq_manager","entity commander boundary","submul","command collaborator"
"mpq_manager","entity commander boundary","addmul","command collaborator"
"mpq_manager","entity commander boundary","addmul","command collaborator"
"mpq_manager","entity commander boundary","submul","command collaborator"
"mpq_manager","entity commander boundary","submul","command collaborator"
"mpq_manager","entity commander boundary","inv","command collaborator"
"mpq_manager","entity commander boundary","inv","command collaborator"
"mpq_manager","entity commander boundary","div","command collaborator"
"mpq_manager","entity commander boundary","div","command collaborator"
"mpq_manager","entity commander boundary","acc_div","command collaborator"
"mpq_manager","entity commander boundary","machine_div","command collaborator"
"mpq_manager","entity commander boundary","machine_div_rem","command collaborator"
"mpq_manager","entity commander boundary","machine_div2k","command collaborator"
"mpq_manager","entity commander boundary","div","command collaborator"
"mpq_manager","entity commander boundary","rat_div","command collaborator"
"mpq_manager","entity commander boundary","machine_idiv","command collaborator"
"mpq_manager","entity commander boundary","machine_idiv_rem","command collaborator"
"mpq_manager","entity commander boundary","machine_idiv","command collaborator"
"mpq_manager","entity commander boundary","machine_idiv2k","command collaborator"
"mpq_manager","entity commander boundary","idiv","command collaborator"
"mpq_manager","entity commander boundary","idiv","command collaborator"
"mpq_manager","entity commander boundary","rem","command collaborator"
"mpq_manager","entity commander boundary","rem","command collaborator"
"mpq_manager","entity commander boundary","rem","command collaborator"
"mpq_manager","entity commander boundary","mod","command collaborator"
"mpq_manager","entity commander boundary","mod","command collaborator"
"mpq_manager","entity commander boundary","mod","command collaborator"
"mpq_manager","entity commander boundary","eq","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","eq","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","lt","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","lt","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","neq","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","gt","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","ge","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","le","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","neq","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","gt","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","ge","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","le","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","gcd","command collaborator"
"mpq_manager","entity commander boundary","gcd","command collaborator"
"mpq_manager","entity commander boundary","gcd","command collaborator"
"mpq_manager","entity commander boundary","gcd","command collaborator"
"mpq_manager","entity commander boundary","gcd","command collaborator"
"mpq_manager","entity commander boundary","lcm","command collaborator"
"mpq_manager","entity commander boundary","lcm","command collaborator"
"mpq_manager","entity commander boundary","divides","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","divides","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","bitwise_or","command collaborator"
"mpq_manager","entity commander boundary","bitwise_or","command collaborator"
"mpq_manager","entity commander boundary","bitwise_and","command collaborator"
"mpq_manager","entity commander boundary","bitwise_and","command collaborator"
"mpq_manager","entity commander boundary","bitwise_xor","command collaborator"
"mpq_manager","entity commander boundary","bitwise_xor","command collaborator"
"mpq_manager","entity commander boundary","bitwise_not","command collaborator"
"mpq_manager","entity commander boundary","bitwise_not","command collaborator"
"mpq_manager","entity commander boundary","set","command collaborator"
"mpq_manager","entity commander boundary","set","command collaborator"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command collaborator"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command"
"mpq_manager","entity commander boundary","set","command collaborator"
"mpq_manager","entity commander boundary","set","command collaborator"
"mpq_manager","entity commander boundary","set","command collaborator"
"mpq_manager","entity commander boundary","dup","property non-void-command collaborator"
"mpq_manager","entity commander boundary","dup","property non-void-command collaborator"
"mpq_manager","entity commander boundary","swap","command collaborator"
"mpq_manager","entity commander boundary","swap","command collaborator"
"mpq_manager","entity commander boundary","swap_numerator","command collaborator"
"mpq_manager","entity commander boundary","is_uint64","predicate collaborator"
"mpq_manager","entity commander boundary","is_int64","predicate collaborator"
"mpq_manager","entity commander boundary","get_uint64","property collaborator"
"mpq_manager","entity commander boundary","get_int64","property collaborator"
"mpq_manager","entity commander boundary","is_uint64","predicate collaborator"
"mpq_manager","entity commander boundary","is_int64","predicate collaborator"
"mpq_manager","entity commander boundary","get_uint64","property collaborator"
"mpq_manager","entity commander boundary","get_int64","property collaborator"
"mpq_manager","entity commander boundary","get_double","property collaborator"
"mpq_manager","entity commander boundary","power","command collaborator"
"mpq_manager","entity commander boundary","is_power_of_two","predicate non-void-command"
"mpq_manager","entity commander boundary","is_power_of_two","predicate non-void-command"
"mpq_manager","entity commander boundary","bitsize","non-void-command collaborator"
"mpq_manager","entity commander boundary","bitsize","non-void-command collaborator"
"mpq_manager","entity commander boundary","storage_size","non-void-command collaborator"
"mpq_manager","entity commander boundary","storage_size","non-void-command collaborator"
"mpq_manager","entity commander boundary","get_bit","predicate non-void-command"
"mpq_manager","entity commander boundary","is_perfect_square","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","is_perfect_square","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","root","predicate non-void-command"
"mpq_manager","entity commander boundary","root","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","prev_power_of_two","non-void-command collaborator"
"mpq_manager","entity commander boundary","next_power_of_two","non-void-command collaborator"
"mpq_manager","entity commander boundary","is_int_perfect_square","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","is_even","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","is_even","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::~mpq_manager","destructor"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::rat_lt","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::floor","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::ceil","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::gcd","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::to_string","property collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::display","collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::display_smt2","unclassified"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::display_decimal","command"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::set","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::power","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::get_double","property collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::root","predicate non-void-command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::prev_power_of_two","non-void-command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::next_power_of_two","non-void-command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::lin_arith_op","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::rat_mul","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::rat_mul","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::rat_mul","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::rat_add","command collaborator"
"mpq_manager","entity commander boundary","mpq_manager<SYNCH>::rat_sub","command collaborator"
"mpfx_manager","entity boundary","words","collaborator"
"mpfx_manager","entity boundary","ensure_capacity","command"
"mpfx_manager","entity boundary","allocate_if_needed","command collaborator"
"mpfx_manager","entity boundary","round_to_plus_inf","set"
"mpfx_manager","entity boundary","round_to_minus_inf","set"
"mpfx_manager","entity boundary","set_rounding","set"
"mpfx_manager","entity boundary","rounding_to_plus_inf","get"
"mpfx_manager","entity boundary","is_one","predicate collaborator"
"mpfx_manager","entity boundary","is_minus_one","predicate collaborator"
"mpfx_manager","entity boundary","inc","command collaborator"
"mpfx_manager","entity boundary","dec","command collaborator"
"mpfx_manager","entity boundary","inv","command collaborator"
"mpfx_manager","entity boundary","inv","command collaborator"
"mpfx_manager","entity boundary","div2k","command collaborator"
"mpfx_manager","entity boundary","div2","command collaborator"
"mpfx_manager","entity boundary","div2","command collaborator"
"mpfx_manager","entity boundary","neq","predicate collaborator"
"mpfx_manager","entity boundary","gt","predicate collaborator"
"mpfx_manager","entity boundary","le","predicate collaborator"
"mpfx_manager","entity boundary","ge","predicate collaborator"
"mpfx_manager","entity boundary","floor","command collaborator"
"mpfx_manager","entity boundary","ceil","command collaborator"
"mpfx_manager","entity boundary","display_pp","collaborator"
"mpfx_manager","entity boundary","mpfx_manager::mpfx_manager","constructor"
"mpfx_manager","entity boundary","mpfx_manager::~mpfx_manager","destructor"
"mpfx_manager","entity boundary","mpfx_manager::expand","set"
"mpfx_manager","entity boundary","mpfx_manager::allocate","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::sz","wrapper"
"mpfx_manager","entity boundary","mpfx_manager::del","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::reset","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::is_int","predicate collaborator"
"mpfx_manager","entity boundary","mpfx_manager::is_abs_one","predicate collaborator"
"mpfx_manager","entity boundary","mpfx_manager::is_int64","predicate collaborator"
"mpfx_manager","entity boundary","mpfx_manager::is_uint64","predicate collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set","void-accessor command"
"mpfx_manager","entity boundary","mpfx_manager::set","void-accessor command"
"mpfx_manager","entity boundary","mpfx_manager::set","void-accessor command"
"mpfx_manager","entity boundary","mpfx_manager::set","void-accessor command"
"mpfx_manager","entity boundary","mpfx_manager::set","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set_core","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set_core","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::eq","predicate collaborator"
"mpfx_manager","entity boundary","mpfx_manager::lt","predicate collaborator"
"mpfx_manager","entity boundary","mpfx_manager::add_sub","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::add","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::sub","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::mul","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::div","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::div2k","command"
"mpfx_manager","entity boundary","mpfx_manager::set_epsilon","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set_minus_epsilon","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::set_plus_epsilon","void-accessor command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::floor","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::ceil","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::power","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::is_power_of_two","predicate"
"mpfx_manager","entity boundary","mpfx_manager::is_power_of_two","predicate collaborator"
"mpfx_manager","entity boundary","mpfx_manager::get_int64","property collaborator"
"mpfx_manager","entity boundary","mpfx_manager::get_uint64","property collaborator"
"mpfx_manager","entity boundary","mpfx_manager::to_mpz_core","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::to_mpz","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::to_mpz","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::to_mpq_core","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::to_mpq","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::to_mpq","command collaborator"
"mpfx_manager","entity boundary","mpfx_manager::display_raw","collaborator"
"mpfx_manager","entity boundary","mpfx_manager::display","collaborator"
"mpfx_manager","entity boundary","mpfx_manager::display_smt2","collaborator"
"mpfx_manager","entity boundary","mpfx_manager::display_decimal","unclassified"
"mpfx_manager","entity boundary","mpfx_manager::to_string","property collaborator"
"mpfx_manager","entity boundary","mpfx_manager::to_rational_string","property collaborator"
"mpfx_manager","entity boundary","mpfx_manager::check","predicate collaborator"
"mpfx_manager","entity boundary","mpfx_manager::prev_power_of_two","non-void-command collaborator"
"mpff_manager","entity boundary","sig","collaborator"
"mpff_manager","entity boundary","ensure_capacity","command"
"mpff_manager","entity boundary","allocate_if_needed","command collaborator"
"mpff_manager","entity boundary","set_exponent","void-accessor command"
"mpff_manager","entity boundary","round_to_plus_inf","set"
"mpff_manager","entity boundary","round_to_minus_inf","set"
"mpff_manager","entity boundary","set_rounding","set"
"mpff_manager","entity boundary","rounding_to_plus_inf","get"
"mpff_manager","entity boundary","set_exponent","void-accessor command"
"mpff_manager","entity boundary","is_one","predicate collaborator"
"mpff_manager","entity boundary","is_minus_one","predicate collaborator"
"mpff_manager","entity boundary","inc","command collaborator"
"mpff_manager","entity boundary","dec","command collaborator"
"mpff_manager","entity boundary","inv","command collaborator"
"mpff_manager","entity boundary","inv","command collaborator"
"mpff_manager","entity boundary","neq","predicate collaborator"
"mpff_manager","entity boundary","gt","predicate collaborator"
"mpff_manager","entity boundary","le","predicate collaborator"
"mpff_manager","entity boundary","ge","predicate collaborator"
"mpff_manager","entity boundary","floor","command collaborator"
"mpff_manager","entity boundary","ceil","command collaborator"
"mpff_manager","entity boundary","display_pp","collaborator"
"mpff_manager","entity boundary","mpff_manager::mpff_manager","constructor"
"mpff_manager","entity boundary","mpff_manager::~mpff_manager","destructor"
"mpff_manager","entity boundary","mpff_manager::expand","set"
"mpff_manager","entity boundary","mpff_manager::allocate","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::to_buffer","collaborator"
"mpff_manager","entity boundary","mpff_manager::to_buffer_ext","collaborator"
"mpff_manager","entity boundary","mpff_manager::to_buffer_shifting","collaborator"
"mpff_manager","entity boundary","mpff_manager::del","command collaborator"
"mpff_manager","entity boundary","mpff_manager::reset","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::is_int","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::is_int64","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::is_uint64","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::get_uint64","property collaborator"
"mpff_manager","entity boundary","mpff_manager::get_int64","property collaborator"
"mpff_manager","entity boundary","mpff_manager::is_abs_one","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::is_two","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::set","void-accessor command"
"mpff_manager","entity boundary","mpff_manager::set","void-accessor command"
"mpff_manager","entity boundary","mpff_manager::set","void-accessor command"
"mpff_manager","entity boundary","mpff_manager::set","void-accessor command"
"mpff_manager","entity boundary","mpff_manager::set","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::set_core","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::set","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set_core","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set","command collaborator"
"mpff_manager","entity boundary","mpff_manager::eq","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::lt","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::inc_significand","void-accessor wrapper"
"mpff_manager","entity boundary","mpff_manager::inc_significand","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::dec_significand","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::min_significand","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::is_minus_epsilon","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::is_plus_epsilon","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::set_min_significand","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set_max_significand","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set_plus_epsilon","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::set_minus_epsilon","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::set_max","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::set_min","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::next","command collaborator"
"mpff_manager","entity boundary","mpff_manager::prev","command collaborator"
"mpff_manager","entity boundary","mpff_manager::set_big_exponent","command"
"mpff_manager","entity boundary","mpff_manager::add_sub","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::add","command collaborator"
"mpff_manager","entity boundary","mpff_manager::sub","command collaborator"
"mpff_manager","entity boundary","mpff_manager::mul","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::div","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::floor","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::ceil","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::power","void-accessor command collaborator"
"mpff_manager","entity boundary","mpff_manager::is_power_of_two","predicate"
"mpff_manager","entity boundary","mpff_manager::is_power_of_two","predicate collaborator"
"mpff_manager","entity boundary","mpff_manager::significand_core","command collaborator"
"mpff_manager","entity boundary","mpff_manager::significand","command collaborator"
"mpff_manager","entity boundary","mpff_manager::significand","command collaborator"
"mpff_manager","entity boundary","mpff_manager::to_mpz_core","command collaborator"
"mpff_manager","entity boundary","mpff_manager::to_mpz","command collaborator"
"mpff_manager","entity boundary","mpff_manager::to_mpz","command collaborator"
"mpff_manager","entity boundary","mpff_manager::to_mpq_core","command collaborator"
"mpff_manager","entity boundary","mpff_manager::to_mpq","command collaborator"
"mpff_manager","entity boundary","mpff_manager::to_mpq","command collaborator"
"mpff_manager","entity boundary","mpff_manager::display_raw","collaborator"
"mpff_manager","entity boundary","mpff_manager::display","collaborator"
"mpff_manager","entity boundary","mpff_manager::display_decimal","command"
"mpff_manager","entity boundary","mpff_manager::display_smt2","unclassified"
"mpff_manager","entity boundary","mpff_manager::to_string","property collaborator"
"mpff_manager","entity boundary","mpff_manager::to_rational_string","property collaborator"
"mpff_manager","entity boundary","mpff_manager::prev_power_of_two","wrapper"
"mpff_manager","entity boundary","mpff_manager::check","predicate collaborator"
"mpff","small-class","swap","void-accessor command"
"mpf_manager","boundary","reset","command"
"mpf_manager","boundary","del","command collaborator"
"mpf_manager","boundary","swap","controller stateless"
"mpf_manager","boundary","eq_core","predicate non-void-command collaborator"
"mpf_manager","boundary","le","predicate non-void-command collaborator"
"mpf_manager","boundary","ge","predicate non-void-command collaborator"
"mpf_manager","boundary","to_rational","command collaborator"
"mpf_manager","boundary","sgn","collaborator incidental"
"mpf_manager","boundary","sig","collaborator incidental"
"mpf_manager","boundary","sig_normalized","command collaborator"
"mpf_manager","boundary","exp","collaborator incidental"
"mpf_manager","boundary","exp_normalized","property non-void-command collaborator"
"mpf_manager","boundary","is_regular","predicate non-void-command collaborator"
"mpf_manager","boundary","mpz_manager","get collaborator"
"mpf_manager","boundary","mpq_manager","get collaborator"
"mpf_manager","boundary","hash","non-void-command collaborator"
"mpf_manager","boundary","to_mpz","command collaborator"
"mpf_manager","boundary","mpf_manager::mpf_manager","constructor"
"mpf_manager","boundary","mpf_manager::set","void-accessor command"
"mpf_manager","boundary","mpf_manager::set","command collaborator"
"mpf_manager","boundary","mpf_manager::set","void-accessor command"
"mpf_manager","boundary","mpf_manager::set","void-accessor command"
"mpf_manager","boundary","mpf_manager::set","command collaborator"
"mpf_manager","boundary","mpf_manager::set","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::set","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::set","void-accessor command"
"mpf_manager","boundary","mpf_manager::set","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::set","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::set","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::abs","collaborator incidental"
"mpf_manager","boundary","mpf_manager::abs","command collaborator"
"mpf_manager","boundary","mpf_manager::neg","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::neg","command collaborator"
"mpf_manager","boundary","mpf_manager::is_zero","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_one","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_neg","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_pos","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_nzero","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_pzero","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::eq","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::lt","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::lte","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::gt","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::gte","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::add","command collaborator"
"mpf_manager","boundary","mpf_manager::sub","command collaborator"
"mpf_manager","boundary","mpf_manager::add_sub","void-accessor command"
"mpf_manager","boundary","mpf_manager::mul","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::div","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::fma","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::sqrt","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::round_to_integral","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::to_mpz","controller stateless"
"mpf_manager","boundary","mpf_manager::to_sbv_mpq","command collaborator"
"mpf_manager","boundary","mpf_manager::to_ieee_bv_mpz","command collaborator"
"mpf_manager","boundary","mpf_manager::renormalize","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::partial_remainder","command collaborator"
"mpf_manager","boundary","mpf_manager::rem","command collaborator"
"mpf_manager","boundary","mpf_manager::maximum","command collaborator"
"mpf_manager","boundary","mpf_manager::minimum","command collaborator"
"mpf_manager","boundary","mpf_manager::to_string","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::to_rational_string","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::display_decimal","command collaborator"
"mpf_manager","boundary","mpf_manager::display_smt2","command collaborator"
"mpf_manager","boundary","mpf_manager::to_string_raw","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::to_string_hexfloat","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::to_string_hexfloat","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::to_string_binary","property non-void-command"
"mpf_manager","boundary","mpf_manager::to_rational","command collaborator"
"mpf_manager","boundary","mpf_manager::to_double","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::to_float","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_nan","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_inf","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_pinf","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_ninf","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_normal","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_denormal","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::is_int","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::has_bot_exp","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::has_top_exp","predicate non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::mk_bot_exp","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::mk_top_exp","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::mk_min_exp","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::mk_max_exp","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::bias_exp","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::unbias_exp","property non-void-command collaborator"
"mpf_manager","boundary","mpf_manager::mk_nzero","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::mk_pzero","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::mk_zero","command collaborator"
"mpf_manager","boundary","mpf_manager::mk_nan","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::mk_one","void-accessor collaborator"
"mpf_manager","boundary","mpf_manager::mk_max_value","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::mk_inf","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::mk_pinf","command collaborator"
"mpf_manager","boundary","mpf_manager::mk_ninf","command collaborator"
"mpf_manager","boundary","mpf_manager::unpack","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::mk_round_inf","command collaborator"
"mpf_manager","boundary","mpf_manager::round","void-accessor command collaborator"
"mpf_manager","boundary","mpf_manager::round_sqrt","command collaborator"
"mpf_manager","boundary","mpf_manager::prev_power_of_two","non-void-command collaborator"
"mpf","unclassified","get_ebits","get"
"mpf","unclassified","get_sbits","get"
"mpf","unclassified","mpf::mpf","constructor"
"mpf","unclassified","mpf::set","command"
"mpf","unclassified","mpf::mpf","constructor"
"mpf","unclassified","mpf::swap","void-accessor command"
"mpbqi_manager","commander boundary","mpbqi_manager","constructor"
"mpbqi_manager","commander boundary","set","command collaborator"
"mpbqi_manager","commander boundary","set","command collaborator"
"mpbqi_manager","commander boundary","set","command collaborator"
"mpbqi_manager","commander boundary","set","command collaborator"
"mpbqi_manager","commander boundary","add","command collaborator"
"mpbqi_manager","commander boundary","add","command collaborator"
"mpbq_manager","entity boundary","del","command collaborator"
"mpbq_manager","entity boundary","reset","void-accessor command collaborator"
"mpbq_manager","entity boundary","set","void-accessor command"
"mpbq_manager","entity boundary","set","void-accessor command"
"mpbq_manager","entity boundary","set","void-accessor command"
"mpbq_manager","entity boundary","set","void-accessor command"
"mpbq_manager","entity boundary","set","void-accessor command collaborator"
"mpbq_manager","entity boundary","set","void-accessor command collaborator"
"mpbq_manager","entity boundary","set","void-accessor command"
"mpbq_manager","entity boundary","is_int","collaborator incidental"
"mpbq_manager","entity boundary","get_numerator","command collaborator"
"mpbq_manager","entity boundary","get_denominator_power","collaborator incidental"
"mpbq_manager","entity boundary","is_zero","predicate collaborator"
"mpbq_manager","entity boundary","is_nonzero","predicate collaborator"
"mpbq_manager","entity boundary","is_one","predicate collaborator"
"mpbq_manager","entity boundary","is_pos","predicate collaborator"
"mpbq_manager","entity boundary","is_neg","predicate collaborator"
"mpbq_manager","entity boundary","is_nonpos","predicate collaborator"
"mpbq_manager","entity boundary","is_nonneg","predicate collaborator"
"mpbq_manager","entity boundary","addmul","command collaborator"
"mpbq_manager","entity boundary","addmul","command collaborator"
"mpbq_manager","entity boundary","neg","command collaborator"
"mpbq_manager","entity boundary","div2","void-accessor command collaborator"
"mpbq_manager","entity boundary","div2k","void-accessor command"
"mpbq_manager","entity boundary","power","command collaborator"
"mpbq_manager","entity boundary","root_lower","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","root_upper","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","eq","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","neq","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","gt","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","ge","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","le","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","neq","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","gt","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","ge","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","eq","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","neq","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","gt","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","ge","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","floor","command collaborator"
"mpbq_manager","entity boundary","ceil","command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::mpbq_manager","constructor"
"mpbq_manager","entity boundary","mpbq_manager::~mpbq_manager","destructor"
"mpbq_manager","entity boundary","mpbq_manager::reset","command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::normalize","void-accessor command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::magnitude_lb","property non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::magnitude_ub","property non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::mul2","void-accessor command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::mul2k","void-accessor command"
"mpbq_manager","entity boundary","mpbq_manager::add","void-accessor command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::add","void-accessor command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::sub","void-accessor command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::sub","void-accessor command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::mul","void-accessor command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::mul","void-accessor command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::power","void-accessor command"
"mpbq_manager","entity boundary","mpbq_manager::root_lower","predicate non-void-command"
"mpbq_manager","entity boundary","mpbq_manager::root_upper","predicate non-void-command"
"mpbq_manager","entity boundary","mpbq_manager::lt","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::lt_1div2k","predicate non-void-command"
"mpbq_manager","entity boundary","mpbq_manager::eq","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::lt","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::le","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::lt","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::le","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::to_string","property non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::display","property non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::display_pp","property non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::display_smt2","property non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::display_decimal","property non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::display_decimal","property non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::to_mpbq","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::refine_upper","command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::refine_lower","command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_integer","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_integer","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_integer","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_integer","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_small_core","command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_small","predicate non-void-command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_small_core","command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_small_core","command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::select_small_core","command collaborator"
"mpbq_manager","entity boundary","mpbq_manager::approx","void-accessor command"
"mpbq_manager","entity boundary","mpbq_manager::approx_div","void-accessor command collaborator"
"mpbq","unclassified","numerator","get collaborator"
"mpbq","unclassified","k","get"
"mpbq","unclassified","swap","command"
"min_cut","commander boundary","min_cut::min_cut","constructor"
"min_cut","commander boundary","min_cut::new_node","non-void-command"
"min_cut","commander boundary","min_cut::add_edge","command"
"min_cut","commander boundary","min_cut::compute_min_cut","command collaborator"
"min_cut","commander boundary","min_cut::compute_initial_distances","command"
"min_cut","commander boundary","min_cut::get_admissible_edge","non-void-command collaborator"
"min_cut","commander boundary","min_cut::augment_path","wrapper"
"min_cut","commander boundary","min_cut::compute_distance","command collaborator"
"min_cut","commander boundary","min_cut::compute_reachable_nodes","void-accessor controller"
"min_cut","commander boundary","min_cut::compute_cut_and_add_lemmas","command collaborator"
"std_allocator","entity boundary small-class","std_allocator","copy-constructor"
"std_allocator","entity boundary small-class","allocate","property non-void-command collaborator"
"std_allocator","entity boundary small-class","deallocate","wrapper stateless"
"memory","commander boundary degenerate","memory::exit_when_out_of_memory","incidental"
"memory","commander boundary degenerate","memory::initialize","wrapper stateless"
"memory","commander boundary degenerate","memory::is_out_of_memory","incidental"
"memory","commander boundary degenerate","memory::set_high_watermark","incidental"
"memory","commander boundary degenerate","memory::above_high_watermark","collaborator incidental"
"memory","commander boundary degenerate","memory::set_max_size","incidental"
"memory","commander boundary degenerate","memory::set_max_alloc_count","incidental"
"memory","commander boundary degenerate","memory::finalize","command"
"memory","commander boundary degenerate","memory::get_allocation_size","collaborator incidental"
"memory","commander boundary degenerate","memory::get_max_used_memory","collaborator incidental"
"memory","commander boundary degenerate","memory::get_max_memory_size","wrapper stateless"
"memory","commander boundary degenerate","memory::get_allocation_count","incidental"
"memory","commander boundary degenerate","memory::display_max_usage","command collaborator"
"memory","commander boundary degenerate","memory::display_i_max_usage","command collaborator"
"memory","commander boundary degenerate","memory::deallocate","command"
"memory","commander boundary degenerate","memory::allocate","property command collaborator"
"memory","commander boundary degenerate","memory::deallocate","wrapper stateless"
"memory","commander boundary degenerate","memory::allocate","wrapper stateless"
"memory","commander boundary degenerate","memory::reallocate","wrapper stateless"
"memory","commander boundary degenerate","memory::deallocate","wrapper stateless"
"memory","commander boundary degenerate","memory::allocate","wrapper stateless"
"memory","commander boundary degenerate","memory::reallocate","wrapper stateless"
"out_of_memory_error","empty","out_of_memory_error::out_of_memory_error","constructor"
"mem_usage_report","empty","~mem_usage_report","destructor"
"int_eq","degenerate small-class","operator()","incidental"
"u64_eq","degenerate small-class","operator()","incidental"
"u64_hash","boundary degenerate small-class","operator()","wrapper stateless"
"u_eq","degenerate small-class","operator()","incidental"
"u_hash","degenerate small-class","operator()","incidental"
"ptr_map_entry","unclassified","get_hash","get"
"ptr_map_entry","unclassified","is_free","predicate"
"ptr_map_entry","unclassified","is_deleted","predicate"
"ptr_map_entry","unclassified","is_used","predicate"
"ptr_map_entry","unclassified","get_data","get collaborator"
"ptr_map_entry","unclassified","get_data","get collaborator"
"ptr_map_entry","unclassified","set_data","set collaborator"
"ptr_map_entry","unclassified","set_hash","set"
"ptr_map_entry","unclassified","mark_as_deleted","set"
"ptr_map_entry","unclassified","mark_as_free","set"
"_key_ptr_data","empty","_key_ptr_data","constructor"
"_key_ptr_data","empty","_key_ptr_data","constructor"
"_key_ptr_data","empty","_key_ptr_data","constructor"
"map","empty","map","constructor"
"table2map","entity boundary","reset","command"
"table2map","entity boundary","finalize","command"
"table2map","entity boundary","empty","predicate"
"table2map","entity boundary","size","unclassified"
"table2map","entity boundary","capacity","unclassified"
"table2map","entity boundary","begin","property collaborator"
"table2map","entity boundary","end","property collaborator"
"table2map","entity boundary","insert","command collaborator"
"table2map","entity boundary","insert","command collaborator"
"table2map","entity boundary","insert_if_not_there_core","predicate non-void-command collaborator"
"table2map","entity boundary","insert_if_not_there","property non-void-command collaborator"
"table2map","entity boundary","insert_if_not_there3","property non-void-command collaborator"
"table2map","entity boundary","find_core","property collaborator"
"table2map","entity boundary","find","predicate collaborator"
"table2map","entity boundary","get","property collaborator"
"table2map","entity boundary","find_iterator","property collaborator"
"table2map","entity boundary","find","property collaborator"
"table2map","entity boundary","find","property non-void-command collaborator"
"table2map","entity boundary","operator[]","property collaborator"
"table2map","entity boundary","operator[]","property non-void-command collaborator"
"table2map","entity boundary","contains","predicate collaborator"
"table2map","entity boundary","remove","command collaborator"
"table2map","entity boundary","erase","command collaborator"
"table2map","entity boundary","get_num_collision","property"
"table2map","entity boundary","swap","command"
"table2map","entity boundary","operator==","predicate collaborator"
"table2map","entity boundary","check_invariant","predicate non-void-command"
"_key_data","empty","_key_data","constructor"
"_key_data","empty","_key_data","constructor"
"_key_data","empty","_key_data","constructor"
"_key_data","empty","_key_data","constructor"
"dimacs_lit","empty","dimacs_lit","constructor"
"list","data-provider boundary","list","copy-constructor"
"list","data-provider boundary","head","get collaborator"
"list","data-provider boundary","tail","get"
"list","data-provider boundary","head","get collaborator"
"list","data-provider boundary","tail","get"
"list","data-provider boundary","begin","property wrapper"
"list","data-provider boundary","end","wrapper stateless"
"lim_svector","unclassified","push_scope","command"
"lim_svector","unclassified","pop_scope","command"
"lim_svector","unclassified","num_scopes","unclassified"
"lim_svector","unclassified","old_size","get"
"inf_s_integer","data-provider","hash","unclassified"
"inf_s_integer","data-provider","swap","wrapper"
"inf_s_integer","data-provider","is_int64","predicate"
"inf_s_integer","data-provider","is_uint64","predicate"
"inf_s_integer","data-provider","is_rational","predicate"
"inf_s_integer","data-provider","get_int64","get"
"inf_s_integer","data-provider","get_uint64","get"
"inf_s_integer","data-provider","get_rational","property wrapper"
"inf_s_integer","data-provider","get_infinitesimal","property wrapper"
"inf_s_integer","data-provider","operator=","get non-void-command"
"inf_s_integer","data-provider","operator=","get non-void-command collaborator"
"inf_s_integer","data-provider","operator=","get non-void-command collaborator"
"inf_s_integer","data-provider","numerator","get wrapper"
"inf_s_integer","data-provider","denominator","wrapper stateless"
"inf_s_integer","data-provider","operator+=","get non-void-command"
"inf_s_integer","data-provider","operator-=","get non-void-command"
"inf_s_integer","data-provider","operator+=","get set collaborator"
"inf_s_integer","data-provider","operator-=","get set collaborator"
"inf_s_integer","data-provider","operator*=","get non-void-command collaborator"
"inf_s_integer","data-provider","operator/=","get non-void-command collaborator"
"inf_s_integer","data-provider","operator++","get set"
"inf_s_integer","data-provider","operator++","property"
"inf_s_integer","data-provider","operator--","get set"
"inf_s_integer","data-provider","operator--","property"
"inf_s_integer","data-provider","operator==","incidental"
"inf_s_integer","data-provider","operator==","controller stateless"
"inf_s_integer","data-provider","operator==","controller stateless"
"inf_s_integer","data-provider","operator<","incidental"
"inf_s_integer","data-provider","operator<","controller stateless"
"inf_s_integer","data-provider","operator<","controller stateless"
"inf_s_integer","data-provider","neg","command"
"inf_s_integer","data-provider","is_zero","predicate"
"inf_s_integer","data-provider","is_one","predicate"
"inf_s_integer","data-provider","is_minus_one","predicate"
"inf_s_integer","data-provider","is_neg","predicate"
"inf_s_integer","data-provider","is_pos","predicate"
"inf_s_integer","data-provider","is_nonneg","predicate"
"inf_s_integer","data-provider","is_nonpos","predicate"
"inf_s_integer","data-provider","floor","get property wrapper"
"inf_s_integer","data-provider","ceil","get property wrapper"
"inf_s_integer","data-provider","addmul","command"
"inf_s_integer","data-provider","submul","command"
"inf_s_integer","data-provider","operator<<","collaborator incidental"
"inf_rational","unclassified","hash","unclassified"
"inf_rational","unclassified","swap","command"
"inf_rational","unclassified","to_string","property"
"inf_rational","unclassified","is_int64","predicate"
"inf_rational","unclassified","is_uint64","predicate"
"inf_rational","unclassified","is_rational","predicate"
"inf_rational","unclassified","get_int64","property"
"inf_rational","unclassified","get_uint64","property"
"inf_rational","unclassified","get_rational","get collaborator"
"inf_rational","unclassified","get_infinitesimal","get collaborator"
"inf_rational","unclassified","get_first","get collaborator"
"inf_rational","unclassified","operator=","get set collaborator"
"inf_rational","unclassified","numerator","get non-void-command"
"inf_rational","unclassified","denominator","get non-void-command"
"inf_rational","unclassified","operator+=","get non-void-command"
"inf_rational","unclassified","operator-=","get non-void-command"
"inf_rational","unclassified","operator+=","get set collaborator"
"inf_rational","unclassified","operator-=","get set collaborator"
"inf_rational","unclassified","operator*=","get non-void-command collaborator"
"inf_rational","unclassified","operator/=","get non-void-command collaborator"
"inf_rational","unclassified","operator++","get set"
"inf_rational","unclassified","operator++","property"
"inf_rational","unclassified","operator--","get set"
"inf_rational","unclassified","operator--","property"
"inf_rational","unclassified","operator==","incidental"
"inf_rational","unclassified","operator==","controller stateless"
"inf_rational","unclassified","operator==","controller stateless"
"inf_rational","unclassified","operator<","incidental"
"inf_rational","unclassified","operator<","controller stateless"
"inf_rational","unclassified","operator<","controller stateless"
"inf_rational","unclassified","neg","command"
"inf_rational","unclassified","is_zero","predicate"
"inf_rational","unclassified","is_one","predicate"
"inf_rational","unclassified","is_minus_one","predicate"
"inf_rational","unclassified","is_neg","predicate"
"inf_rational","unclassified","is_pos","predicate"
"inf_rational","unclassified","is_nonneg","predicate"
"inf_rational","unclassified","is_nonpos","predicate"
"inf_rational","unclassified","floor","get property non-void-command collaborator"
"inf_rational","unclassified","ceil","get property non-void-command collaborator"
"inf_rational","unclassified","addmul","command"
"inf_rational","unclassified","submul","command"
"inf_rational","unclassified","inf_rational::init","command"
"inf_rational","unclassified","inf_rational::finalize","command"
"inf_int_rational","unclassified","hash","unclassified"
"inf_int_rational","unclassified","swap","command"
"inf_int_rational","unclassified","is_int64","predicate"
"inf_int_rational","unclassified","is_uint64","predicate"
"inf_int_rational","unclassified","is_rational","predicate"
"inf_int_rational","unclassified","get_int64","property"
"inf_int_rational","unclassified","get_uint64","property"
"inf_int_rational","unclassified","get_rational","get collaborator"
"inf_int_rational","unclassified","get_infinitesimal","property wrapper"
"inf_int_rational","unclassified","get_first","get collaborator"
"inf_int_rational","unclassified","operator=","get non-void-command collaborator"
"inf_int_rational","unclassified","numerator","get non-void-command"
"inf_int_rational","unclassified","denominator","get non-void-command"
"inf_int_rational","unclassified","operator+=","get non-void-command"
"inf_int_rational","unclassified","operator*=","get non-void-command collaborator"
"inf_int_rational","unclassified","operator-=","get non-void-command"
"inf_int_rational","unclassified","operator+=","get set collaborator"
"inf_int_rational","unclassified","operator-=","get set collaborator"
"inf_int_rational","unclassified","operator++","get set"
"inf_int_rational","unclassified","operator++","property"
"inf_int_rational","unclassified","operator--","get set"
"inf_int_rational","unclassified","operator--","property"
"inf_int_rational","unclassified","operator==","incidental"
"inf_int_rational","unclassified","operator==","incidental"
"inf_int_rational","unclassified","operator==","collaborator incidental"
"inf_int_rational","unclassified","operator<","incidental"
"inf_int_rational","unclassified","operator<","incidental"
"inf_int_rational","unclassified","operator<","collaborator incidental"
"inf_int_rational","unclassified","neg","set"
"inf_int_rational","unclassified","is_zero","predicate"
"inf_int_rational","unclassified","is_one","predicate"
"inf_int_rational","unclassified","is_minus_one","predicate"
"inf_int_rational","unclassified","is_neg","predicate"
"inf_int_rational","unclassified","is_pos","predicate"
"inf_int_rational","unclassified","is_nonneg","predicate"
"inf_int_rational","unclassified","is_nonpos","predicate"
"inf_int_rational","unclassified","floor","get property non-void-command collaborator"
"inf_int_rational","unclassified","ceil","get property non-void-command collaborator"
"inf_int_rational","unclassified","inf_int_rational::to_string","property collaborator"
"inf_int_rational","unclassified","inf_int_rational::init","command"
"inf_int_rational","unclassified","inf_int_rational::finalize","command"
"id_var_list","unclassified","id_var_list","constructor"
"id_var_list","unclassified","id_var_list","copy-constructor"
"id_var_list","unclassified","get_id","get"
"id_var_list","unclassified","get_var","get"
"id_var_list","unclassified","empty","predicate"
"id_var_list","unclassified","find","property collaborator"
"id_var_list","unclassified","size","collaborator"
"id_var_list","unclassified","add_var","command collaborator"
"id_var_list","unclassified","replace","command collaborator"
"id_var_list","unclassified","del_var","command"
"id_var_list","unclassified","get_next","get"
"id_var_list","unclassified","set_id","set"
"id_var_list","unclassified","set_var","set"
"id_var_list","unclassified","set_next","set"
"id_gen","commander","id_gen","constructor"
"id_gen","commander","mk","non-void-command"
"id_gen","commander","recycle","command"
"id_gen","commander","reset","set"
"id_gen","commander","cleanup","set"
"id_gen","commander","show_hash","non-void-command"
"id_gen","commander","get_id_range","get"
"id_gen","commander","set_next_id","get non-void-command"
"id_gen","commander","display_free_ids","command collaborator"
"hwf_manager","boundary degenerate","reset","command collaborator"
"hwf_manager","boundary degenerate","reset","command"
"hwf_manager","boundary degenerate","set","command collaborator"
"hwf_manager","boundary degenerate","set","command"
"hwf_manager","boundary degenerate","set","command"
"hwf_manager","boundary degenerate","set","command"
"hwf_manager","boundary degenerate","set","command"
"hwf_manager","boundary degenerate","del","empty"
"hwf_manager","boundary degenerate","le","predicate non-void-command collaborator"
"hwf_manager","boundary degenerate","ge","predicate non-void-command collaborator"
"hwf_manager","boundary degenerate","to_double","collaborator incidental"
"hwf_manager","boundary degenerate","to_float","collaborator incidental"
"hwf_manager","boundary degenerate","to_rational","command collaborator"
"hwf_manager","boundary degenerate","sgn","controller stateless"
"hwf_manager","boundary degenerate","sig","controller stateless"
"hwf_manager","boundary degenerate","exp","controller stateless"
"hwf_manager","boundary degenerate","hash","controller stateless"
"hwf_manager","boundary degenerate","hwf_manager::hwf_manager","constructor"
"hwf_manager","boundary degenerate","hwf_manager::~hwf_manager","destructor"
"hwf_manager","boundary degenerate","hwf_manager::set","incidental"
"hwf_manager","boundary degenerate","hwf_manager::set","void-accessor command"
"hwf_manager","boundary degenerate","hwf_manager::set","incidental"
"hwf_manager","boundary degenerate","hwf_manager::set","incidental"
"hwf_manager","boundary degenerate","hwf_manager::set","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::set","command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::set","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::set","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::set","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::abs","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::abs","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::neg","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::neg","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::eq","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::lt","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::lte","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::gt","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::gte","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::add","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::sub","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::mul","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::div","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::fma","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::sqrt","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::round_to_integral","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::rem","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::maximum","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::minimum","void-accessor command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::to_string","controller stateless"
"hwf_manager","boundary degenerate","hwf_manager::to_rational_string","property non-void-command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::display_decimal","command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::display_smt2","command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::to_rational","command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::is_zero","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_neg","predicate non-void-command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::is_pos","predicate non-void-command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::is_nzero","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_pzero","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_one","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_nan","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_inf","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_pinf","predicate non-void-command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::is_ninf","predicate non-void-command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::is_normal","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_denormal","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_regular","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::is_int","predicate non-void-command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::mk_nzero","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::mk_pzero","collaborator incidental"
"hwf_manager","boundary degenerate","hwf_manager::mk_zero","command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::mk_nan","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::mk_inf","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::mk_pinf","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::mk_ninf","wrapper stateless"
"hwf_manager","boundary degenerate","hwf_manager::prev_power_of_two","non-void-command collaborator"
"hwf_manager","boundary degenerate","hwf_manager::set_rounding_mode","wrapper stateless"
"hwf","data-provider boundary small-class","get_raw","property wrapper"
"hwf","data-provider boundary small-class","swap","wrapper"
"int_hashtable","empty","int_hashtable","constructor"
"ptr_hashtable","empty","ptr_hashtable","constructor"
"hashtable","empty","hashtable","constructor"
"core_hashtable","boundary","alloc_table","wrapper stateless"
"core_hashtable","boundary","delete_table","set"
"core_hashtable","boundary","get_hash","wrapper stateless"
"core_hashtable","boundary","equals","wrapper stateless"
"core_hashtable","boundary","expand_table","command collaborator"
"core_hashtable","boundary","remove_deleted_entries","command collaborator"
"core_hashtable","boundary","core_hashtable","constructor"
"core_hashtable","boundary","core_hashtable","copy-constructor"
"core_hashtable","boundary","core_hashtable","copy-constructor"
"core_hashtable","boundary","~core_hashtable","destructor"
"core_hashtable","boundary","swap","wrapper"
"core_hashtable","boundary","reset","command collaborator"
"core_hashtable","boundary","finalize","command"
"core_hashtable","boundary","empty","predicate"
"core_hashtable","boundary","size","get"
"core_hashtable","boundary","capacity","get"
"core_hashtable","boundary","begin","property wrapper"
"core_hashtable","boundary","end","property wrapper"
"core_hashtable","boundary","insert","command collaborator"
"core_hashtable","boundary","insert","command collaborator"
"core_hashtable","boundary","insert_if_not_there_core","predicate non-void-command collaborator"
"core_hashtable","boundary","insert_if_not_there_core","predicate non-void-command collaborator"
"core_hashtable","boundary","insert_if_not_there","property non-void-command collaborator"
"core_hashtable","boundary","insert_if_not_there2","property non-void-command collaborator"
"core_hashtable","boundary","find_core","property collaborator"
"core_hashtable","boundary","find","predicate collaborator"
"core_hashtable","boundary","contains","predicate collaborator"
"core_hashtable","boundary","find","property collaborator"
"core_hashtable","boundary","remove","command collaborator"
"core_hashtable","boundary","erase","command collaborator"
"core_hashtable","boundary","dump","controller"
"core_hashtable","boundary","operator|=","get non-void-command collaborator"
"core_hashtable","boundary","operator&=","get non-void-command collaborator"
"core_hashtable","boundary","operator=","get non-void-command collaborator"
"core_hashtable","boundary","check_invariant","predicate controller"
"core_hashtable","boundary","get_num_collision","get"
"core_hashtable","boundary","get_num_collision","incidental"
"core_hashtable","boundary","get_collisions","command collaborator"
"ptr_addr_hash_entry","unclassified","get_hash","wrapper"
"ptr_addr_hash_entry","unclassified","is_free","predicate"
"ptr_addr_hash_entry","unclassified","is_deleted","predicate"
"ptr_addr_hash_entry","unclassified","is_used","predicate"
"ptr_addr_hash_entry","unclassified","get_data","get collaborator"
"ptr_addr_hash_entry","unclassified","get_data","get collaborator"
"ptr_addr_hash_entry","unclassified","set_data","set collaborator"
"ptr_addr_hash_entry","unclassified","set_hash","wrapper"
"ptr_addr_hash_entry","unclassified","mark_as_deleted","set"
"ptr_addr_hash_entry","unclassified","mark_as_free","set"
"ptr_hash_entry","unclassified","get_hash","get"
"ptr_hash_entry","unclassified","is_free","predicate"
"ptr_hash_entry","unclassified","is_deleted","predicate"
"ptr_hash_entry","unclassified","is_used","predicate"
"ptr_hash_entry","unclassified","get_data","get collaborator"
"ptr_hash_entry","unclassified","get_data","get collaborator"
"ptr_hash_entry","unclassified","set_data","set collaborator"
"ptr_hash_entry","unclassified","set_hash","set"
"ptr_hash_entry","unclassified","mark_as_deleted","set"
"ptr_hash_entry","unclassified","mark_as_free","set"
"int_hash_entry","unclassified","get_hash","get"
"int_hash_entry","unclassified","is_free","predicate"
"int_hash_entry","unclassified","is_deleted","predicate"
"int_hash_entry","unclassified","is_used","predicate"
"int_hash_entry","unclassified","get_data","get"
"int_hash_entry","unclassified","get_data","get"
"int_hash_entry","unclassified","set_data","set"
"int_hash_entry","unclassified","set_hash","set"
"int_hash_entry","unclassified","mark_as_deleted","set"
"int_hash_entry","unclassified","mark_as_free","set"
"default_hash_entry","unclassified","get_hash","get"
"default_hash_entry","unclassified","is_free","predicate"
"default_hash_entry","unclassified","is_deleted","predicate"
"default_hash_entry","unclassified","is_used","predicate"
"default_hash_entry","unclassified","get_data","get collaborator"
"default_hash_entry","unclassified","get_data","get collaborator"
"default_hash_entry","unclassified","set_data","command collaborator"
"default_hash_entry","unclassified","set_hash","set"
"default_hash_entry","unclassified","mark_as_deleted","set"
"default_hash_entry","unclassified","mark_as_free","set"
"ptr_hash","boundary degenerate small-class","operator()","wrapper stateless"
"pair_hash","boundary small-class","pair_hash","constructor"
"pair_hash","boundary small-class","operator()","collaborator"
"triple_hash","boundary small-class","triple_hash","constructor"
"triple_hash","boundary small-class","operator()","collaborator"
"obj_ptr_hash","pure-controller degenerate small-class","operator()","controller stateless"
"bool_hash","degenerate small-class","operator()","incidental"
"uint64_hash","degenerate small-class","operator()","incidental"
"unsigned_hash","degenerate small-class","operator()","incidental"
"int_hash","degenerate small-class","operator()","incidental"
"default_kind_hash_proc","boundary degenerate small-class","operator()","collaborator incidental"
"gparams","commander","gparams::reset","command"
"gparams","commander","gparams::set","command"
"gparams","commander","gparams::set","command"
"gparams","commander","gparams::get_value","property non-void-command"
"gparams","commander","gparams::get_value","property non-void-command collaborator"
"gparams","commander","gparams::register_global","command collaborator"
"gparams","commander","gparams::register_module","command collaborator"
"gparams","commander","gparams::register_module_descr","command"
"gparams","commander","gparams::get_module","property non-void-command collaborator"
"gparams","commander","gparams::get_ref","property non-void-command collaborator"
"gparams","commander","gparams::display","command"
"gparams","commander","gparams::get_global_param_descrs","property non-void-command collaborator"
"gparams","commander","gparams::display_modules","command collaborator"
"gparams","commander","gparams::display_module","command"
"gparams","commander","gparams::display_module_markdown","command"
"gparams","commander","gparams::display_parameter","command"
"gparams","commander","gparams::init","set"
"gparams","commander","gparams::finalize","wrapper"
"gparams","commander","gparams::g_buffer","property wrapper"
"gparams::imp","boundary","check_registered","set"
"gparams::imp","boundary","get_module_param_descrs","get non-void-command collaborator"
"gparams::imp","boundary","get_module_descrs","get non-void-command collaborator"
"gparams::imp","boundary","get_param_descrs","get non-void-command collaborator"
"gparams::imp","boundary","cpy","property wrapper"
"gparams::imp","boundary","get_module_param_descr","predicate non-void-command collaborator"
"gparams::imp","boundary","get_module_param_descr","predicate non-void-command collaborator"
"gparams::imp","boundary","~imp","destructor"
"gparams::imp","boundary","reset","command collaborator"
"gparams::imp","boundary","register_global","command collaborator"
"gparams::imp","boundary","register_module","command collaborator"
"gparams::imp","boundary","register_module_descr","command"
"gparams::imp","boundary","normalize","controller stateless"
"gparams::imp","boundary","get_params","get property non-void-command collaborator"
"gparams::imp","boundary","throw_unknown_parameter","controller stateless"
"gparams::imp","boundary","validate_type","controller stateless"
"gparams::imp","boundary","set","command collaborator"
"gparams::imp","boundary","set","command collaborator"
"gparams::imp","boundary","get_value","controller stateless"
"gparams::imp","boundary","get_default","property non-void-command"
"gparams::imp","boundary","get_value","property non-void-command collaborator"
"gparams::imp","boundary","get_module","property non-void-command collaborator"
"gparams::imp","boundary","get_ref","get collaborator"
"gparams::imp","boundary","display","command"
"gparams::imp","boundary","display_modules","command collaborator"
"gparams::imp","boundary","display_module","command"
"gparams::imp","boundary","display_module_markdown","command"
"gparams::imp","boundary","get_global_param_descrs","property non-void-command collaborator"
"gparams::imp","boundary","display_parameter","command collaborator"
"fixed_bit_vector","unclassified","get_bit_word","get"
"fixed_bit_vector","unclassified","get_bit_word","get"
"fixed_bit_vector","unclassified","get_word","get"
"fixed_bit_vector","unclassified","operator[]","predicate"
"fixed_bit_vector","unclassified","get","predicate"
"fixed_bit_vector","unclassified","set","command"
"fixed_bit_vector","unclassified","unset","command"
"fixed_bit_vector","unclassified","set","command"
"fixed_bit_vector","unclassified","fixed_bit_vector::set","command"
"f2n","entity commander boundary","check","command collaborator"
"f2n","entity commander boundary","~f2n","destructor"
"f2n","entity commander boundary","set_rounding_mode","set collaborator"
"f2n","entity commander boundary","rounding_mode","get collaborator"
"f2n","entity commander boundary","round_to_plus_inf","set"
"f2n","entity commander boundary","round_to_minus_inf","set"
"f2n","entity commander boundary","set_rounding","command"
"f2n","entity commander boundary","ebits","get"
"f2n","entity commander boundary","sbits","get"
"f2n","entity commander boundary","m","get collaborator"
"f2n","entity commander boundary","to_double","property collaborator"
"f2n","entity commander boundary","del","command collaborator"
"f2n","entity commander boundary","abs","command collaborator"
"f2n","entity commander boundary","abs","command collaborator"
"f2n","entity commander boundary","neg","command collaborator"
"f2n","entity commander boundary","neg","command collaborator"
"f2n","entity commander boundary","is_zero","predicate non-void-command collaborator"
"f2n","entity commander boundary","is_neg","predicate non-void-command collaborator"
"f2n","entity commander boundary","is_pos","predicate non-void-command collaborator"
"f2n","entity commander boundary","is_nonneg","predicate non-void-command collaborator"
"f2n","entity commander boundary","is_nonpos","predicate non-void-command collaborator"
"f2n","entity commander boundary","set","command"
"f2n","entity commander boundary","set","command"
"f2n","entity commander boundary","set","command"
"f2n","entity commander boundary","set","command"
"f2n","entity commander boundary","set","command collaborator"
"f2n","entity commander boundary","set","command collaborator"
"f2n","entity commander boundary","reset","command collaborator"
"f2n","entity commander boundary","add","command collaborator"
"f2n","entity commander boundary","sub","command collaborator"
"f2n","entity commander boundary","mul","command collaborator"
"f2n","entity commander boundary","div","command collaborator"
"f2n","entity commander boundary","inv","command collaborator"
"f2n","entity commander boundary","inv","command collaborator"
"f2n","entity commander boundary","inc","command collaborator"
"f2n","entity commander boundary","dec","command collaborator"
"f2n","entity commander boundary","power","command collaborator"
"f2n","entity commander boundary","floor","command collaborator"
"f2n","entity commander boundary","ceil","command collaborator"
"f2n","entity commander boundary","prev_power_of_two","non-void-command collaborator"
"f2n","entity commander boundary","eq","predicate non-void-command collaborator"
"f2n","entity commander boundary","lt","predicate non-void-command collaborator"
"f2n","entity commander boundary","le","predicate non-void-command collaborator"
"f2n","entity commander boundary","gt","predicate non-void-command collaborator"
"f2n","entity commander boundary","ge","predicate non-void-command collaborator"
"f2n","entity commander boundary","is_int","predicate non-void-command collaborator"
"f2n","entity commander boundary","is_one","predicate non-void-command collaborator"
"f2n","entity commander boundary","is_minus_one","predicate non-void-command collaborator"
"f2n","entity commander boundary","to_string","property non-void-command collaborator"
"f2n","entity commander boundary","to_rational_string","property non-void-command collaborator"
"f2n","entity commander boundary","display","command collaborator"
"f2n","entity commander boundary","display_decimal","command"
"f2n","entity commander boundary","display_smt2","command"
"event_handler","data-provider boundary data-class small-class","event_handler","constructor"
"event_handler","data-provider boundary data-class small-class","caller_id","get collaborator"
"dll_elements","data-provider boundary small-class","dll_elements","constructor"
"dll_elements","data-provider boundary small-class","begin","property wrapper"
"dll_elements","data-provider boundary small-class","end","property wrapper"
"dll_iterator","data-provider","dll_iterator","constructor"
"dll_iterator","data-provider","operator++","get non-void-command"
"dll_iterator","data-provider","operator*","get collaborator"
"dll_iterator","data-provider","operator==","predicate"
"dll_iterator","data-provider","operator!=","predicate"
"dll_base","entity data-provider boundary","prev","get collaborator"
"dll_base","entity data-provider boundary","next","get collaborator"
"dll_base","entity data-provider boundary","prev","get collaborator"
"dll_base","entity data-provider boundary","next","get collaborator"
"dll_base","entity data-provider boundary","init","command collaborator"
"dll_base","entity data-provider boundary","insert_after","void-accessor command collaborator"
"dll_base","entity data-provider boundary","insert_before","void-accessor command collaborator"
"dll_base","entity data-provider boundary","invariant","predicate"
"stacked_dependency_manager","entity boundary","mk_empty","property non-void-command collaborator"
"stacked_dependency_manager","entity boundary","mk_leaf","property non-void-command collaborator"
"stacked_dependency_manager","entity boundary","mk_join","property non-void-command collaborator"
"stacked_dependency_manager","entity boundary","contains","predicate non-void-command collaborator"
"stacked_dependency_manager","entity boundary","linearize","command collaborator"
"stacked_dependency_manager","entity boundary","linearize","command collaborator"
"scoped_dependency_manager","entity boundary","mk_empty","property non-void-command collaborator"
"scoped_dependency_manager","entity boundary","mk_leaf","property non-void-command collaborator"
"scoped_dependency_manager","entity boundary","mk_join","property non-void-command collaborator"
"scoped_dependency_manager","entity boundary","contains","predicate non-void-command collaborator"
"scoped_dependency_manager","entity boundary","linearize","collaborator"
"scoped_dependency_manager","entity boundary","linearize","collaborator"
"scoped_dependency_manager","entity boundary","reset","command"
"scoped_dependency_manager","entity boundary","push_scope","command"
"scoped_dependency_manager","entity boundary","pop_scope","command"
"cmd","boundary lazy-class degenerate","cmd","constructor"
"cmd","boundary lazy-class degenerate","reset","empty"
"cmd","boundary lazy-class degenerate","finalize","empty"
"cmd","boundary lazy-class degenerate","get_name","get collaborator"
"cmd","boundary lazy-class degenerate","get_usage","incidental"
"cmd","boundary lazy-class degenerate","get_descr","collaborator incidental"
"cmd","boundary lazy-class degenerate","get_arity","incidental"
"cmd","boundary lazy-class degenerate","set_line_pos","command"
"cmd","boundary lazy-class degenerate","prepare","empty"
"cmd","boundary lazy-class degenerate","next_arg_kind","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","set_next_arg","wrapper stateless"
"cmd","boundary lazy-class degenerate","failure_cleanup","empty"
"cmd","boundary lazy-class degenerate","execute","empty"
"cmd_exception","data-provider","compose","controller stateless"
"cmd_exception","data-provider","cmd_exception","constructor"
"cmd_exception","data-provider","cmd_exception","constructor"
"cmd_exception","data-provider","cmd_exception","constructor"
"cmd_exception","data-provider","cmd_exception","constructor"
"cmd_exception","data-provider","cmd_exception","constructor"
"cmd_exception","data-provider","has_pos","predicate"
"cmd_exception","data-provider","line","get"
"cmd_exception","data-provider","pos","get"
"checked_int64","data-provider","r64","wrapper stateless"
"checked_int64","data-provider","checked_int64","constructor"
"checked_int64","data-provider","checked_int64","constructor"
"checked_int64","data-provider","is_zero","predicate"
"checked_int64","data-provider","is_pos","predicate"
"checked_int64","data-provider","is_neg","predicate"
"checked_int64","data-provider","is_one","predicate"
"checked_int64","data-provider","is_minus_one","predicate"
"checked_int64","data-provider","is_nonneg","predicate"
"checked_int64","data-provider","is_nonpos","predicate"
"checked_int64","data-provider","is_even","predicate"
"checked_int64","data-provider","get_int64","get"
"checked_int64","data-provider","abs","get property wrapper"
"checked_int64","data-provider","neg","get set"
"checked_int64","data-provider","hash","unclassified"
"checked_int64","data-provider","operator<<","collaborator incidental"
"checked_int64","data-provider","operator==","incidental"
"checked_int64","data-provider","operator<","incidental"
"checked_int64","data-provider","operator++","get set"
"checked_int64","data-provider","operator++","property"
"checked_int64","data-provider","operator--","get set"
"checked_int64","data-provider","operator--","property"
"checked_int64","data-provider","operator+=","get set"
"checked_int64","data-provider","operator-=","get set"
"checked_int64","data-provider","operator*=","get non-void-command collaborator"
"checked_int64","data-provider","abs","controller stateless"
"cmap","boundary","reset","command"
"cmap","boundary","finalize","command"
"cmap","boundary","empty","predicate"
"cmap","boundary","size","unclassified"
"cmap","boundary","capacity","unclassified"
"cmap","boundary","used_slots","unclassified"
"cmap","boundary","collisions","unclassified"
"cmap","boundary","begin","property collaborator"
"cmap","boundary","end","property collaborator"
"cmap","boundary","insert","command collaborator"
"cmap","boundary","insert_if_not_there","property non-void-command collaborator"
"cmap","boundary","contains","predicate collaborator"
"cmap","boundary","find_core","property collaborator"
"cmap","boundary","find","predicate collaborator"
"cmap","boundary","erase","command collaborator"
"chashtable","boundary","get_hash","wrapper stateless"
"chashtable","boundary","equals","wrapper stateless"
"chashtable","boundary","delete_table","wrapper"
"chashtable","boundary","copy_table","property non-void-command collaborator"
"chashtable","boundary","expand_table","command collaborator"
"chashtable","boundary","has_free_cells","predicate"
"chashtable","boundary","get_free_cell","property non-void-command collaborator"
"chashtable","boundary","recycle_cell","void-accessor set collaborator"
"chashtable","boundary","push_recycle_cell","void-accessor set collaborator"
"chashtable","boundary","init","command"
"chashtable","boundary","~chashtable","destructor"
"chashtable","boundary","reset","command"
"chashtable","boundary","finalize","command"
"chashtable","boundary","empty","predicate"
"chashtable","boundary","size","get"
"chashtable","boundary","capacity","get"
"chashtable","boundary","used_slots","get"
"chashtable","boundary","insert_fresh","command collaborator"
"chashtable","boundary","insert","command collaborator"
"chashtable","boundary","insert_if_not_there","property non-void-command collaborator"
"chashtable","boundary","insert_if_not_there2","predicate non-void-command collaborator"
"chashtable","boundary","contains","predicate collaborator"
"chashtable","boundary","find_core","property collaborator"
"chashtable","boundary","find","predicate non-void-command collaborator"
"chashtable","boundary","erase","command collaborator"
"chashtable","boundary","begin","property wrapper"
"chashtable","boundary","end","wrapper stateless"
"chashtable","boundary","swap","wrapper"
"chashtable","boundary","collisions","get"
"chashtable","boundary","check_invariant","predicate controller"
"cancel_eh","unclassified","cancel_eh","constructor"
"cancel_eh","unclassified","~cancel_eh","destructor"
"cancel_eh","unclassified","operator()","command collaborator"
"cancel_eh","unclassified","canceled","get"
"cancel_eh","unclassified","reset","set"
"buffer","boundary","free_memory","wrapper"
"buffer","boundary","expand","command"
"buffer","boundary","destroy_elements","command collaborator"
"buffer","boundary","destroy","command"
"buffer","boundary","buffer","copy-constructor"
"buffer","boundary","buffer","copy-constructor"
"buffer","boundary","buffer","constructor"
"buffer","boundary","~buffer","destructor"
"buffer","boundary","reset","set"
"buffer","boundary","finalize","command"
"buffer","boundary","size","get"
"buffer","boundary","empty","predicate"
"buffer","boundary","begin","get collaborator"
"buffer","boundary","end","property non-void-command collaborator"
"buffer","boundary","set_end","set collaborator"
"buffer","boundary","begin","get collaborator"
"buffer","boundary","end","property collaborator"
"buffer","boundary","push_back","set collaborator"
"buffer","boundary","push_back","set collaborator"
"buffer","boundary","pop_back","set"
"buffer","boundary","back","get collaborator"
"buffer","boundary","back","get non-void-command collaborator"
"buffer","boundary","data","get collaborator"
"buffer","boundary","append","command collaborator"
"buffer","boundary","append","command"
"buffer","boundary","operator[]","get non-void-command collaborator"
"buffer","boundary","operator[]","get collaborator"
"buffer","boundary","get","get non-void-command collaborator"
"buffer","boundary","get","get collaborator"
"buffer","boundary","set","set collaborator"
"buffer","boundary","resize","command collaborator"
"buffer","boundary","shrink","command"
"buffer","boundary","operator=","get non-void-command"
"fr_bit_vector","commander","fill0","command"
"fr_bit_vector","commander","set","command"
"fr_bit_vector","commander","set","command"
"fr_bit_vector","commander","push_back","command"
"fr_bit_vector","commander","fr_bit_vector::reset","command"
"basic_interval_manager","commander boundary","~basic_interval_manager","destructor"
"basic_interval_manager","commander boundary","m","get collaborator"
"basic_interval_manager","commander boundary","del","command collaborator"
"basic_interval_manager","commander boundary","reset","command collaborator"
"basic_interval_manager","commander boundary","lower","controller stateless"
"basic_interval_manager","commander boundary","upper","controller stateless"
"basic_interval_manager","commander boundary","set","command collaborator"
"basic_interval_manager","commander boundary","set","command collaborator"
"basic_interval_manager","commander boundary","set","command collaborator"
"basic_interval_manager","commander boundary","set_lower","command collaborator"
"basic_interval_manager","commander boundary","set_upper","command collaborator"
"basic_interval_manager","commander boundary","swap","command collaborator"
"basic_interval_manager","commander boundary","neg","command collaborator"
"basic_interval_manager","commander boundary","is_empty","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","is_pos","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","is_neg","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","contains_zero","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","is_subset","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","disjoint","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","precedes","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","precedes","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","precedes","predicate non-void-command collaborator"
"basic_interval_manager","commander boundary","inv","command collaborator"
"basic_interval_manager","commander boundary","add","command collaborator"
"basic_interval_manager","commander boundary","sub","command collaborator"
"basic_interval_manager","commander boundary","init_mul_max_min","command"
"basic_interval_manager","commander boundary","update_mul_max_min","command"
"basic_interval_manager","commander boundary","mul","command collaborator"
"basic_interval_manager","commander boundary","div","command collaborator"
"basic_interval_manager","commander boundary","power","command collaborator"
"basic_interval_manager","commander boundary","display","command collaborator"
"backtrackable_set","entity boundary","backtrackable_set","constructor"
"backtrackable_set","entity boundary","insert","command collaborator"
"backtrackable_set","entity boundary","erase","command collaborator"
"backtrackable_set","entity boundary","contains","predicate collaborator"
"backtrackable_set","entity boundary","empty","predicate"
"backtrackable_set","entity boundary","push_scope","command"
"backtrackable_set","entity boundary","pop_scope","command collaborator"
"backtrackable_set","entity boundary","reset","command"
"backtrackable_set","entity boundary","begin","property collaborator"
"backtrackable_set","entity boundary","end","property collaborator"
"default_eh","degenerate small-class","operator()","empty"
"ptr_array","empty","ptr_array","constructor"
"ptr_array","empty","ptr_array","constructor"
"ptr_array","empty","ptr_array","constructor"
"ptr_array","empty","ptr_array","constructor"
"ptr_array","empty","ptr_array","constructor"
"bound_relation_plugin::union_fn_i","boundary small-class","operator()","wrapper"
"check_logic::imp","commander boundary","reset","command"
"check_logic::imp","commander boundary","set_logic","command collaborator"
"check_logic::imp","commander boundary","fail","set"
"check_logic::imp","commander boundary","fail","set"
"check_logic::imp","commander boundary","check_sort","command collaborator"
"check_logic::imp","commander boundary","operator()","command collaborator"
"check_logic::imp","commander boundary","is_int","predicate non-void-command collaborator"
"check_logic::imp","commander boundary","is_numeral","predicate non-void-command collaborator"
"check_logic::imp","commander boundary","check_mul","command collaborator"
"check_logic::imp","commander boundary","check_div","command collaborator"
"check_logic::imp","commander boundary","is_diff_var","predicate collaborator"
"check_logic::imp","commander boundary","fail_non_diff","command collaborator"
"check_logic::imp","commander boundary","same_args","controller stateless"
"check_logic::imp","commander boundary","is_arith","predicate collaborator"
"check_logic::imp","commander boundary","is_offset","predicate non-void-command collaborator"
"check_logic::imp","commander boundary","is_diff_arg","predicate non-void-command collaborator"
"check_logic::imp","commander boundary","check_diff_predicate","command collaborator"
"check_logic::imp","commander boundary","check_diff_arg","command collaborator"
"check_logic::imp","commander boundary","check_diff_args","command collaborator"
"check_logic::imp","commander boundary","operator()","command collaborator"
"check_logic::imp","commander boundary","operator()","command collaborator"
"check_logic::imp","commander boundary","operator()","predicate wrapper"
"check_logic::imp","commander boundary","operator()","predicate non-void-command collaborator"
"check_relation_plugin","boundary","set_plugin","set collaborator"
"check_relation_plugin","boundary","check_relation_plugin::ground","property collaborator"
"check_relation_plugin","boundary","check_relation_plugin::ground","property collaborator"
"check_relation_plugin","boundary","check_relation_plugin::check_relation_plugin","constructor"
"check_relation_plugin","boundary","check_relation_plugin::~check_relation_plugin","destructor"
"check_relation_plugin","boundary","check_relation_plugin::get","collaborator incidental"
"check_relation_plugin","boundary","check_relation_plugin::get","collaborator incidental"
"check_relation_plugin","boundary","check_relation_plugin::get","collaborator incidental"
"check_relation_plugin","boundary","check_relation_plugin::can_handle_signature","predicate non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_empty","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_full","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_join_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_join_project_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::verify_filter_project","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::verify_project","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::verify_project","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_project","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::verify_join_project","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_join","controller stateless"
"check_relation_plugin","boundary","check_relation_plugin::verify_permutation","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::verify_join","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::verify_filter","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::check_contains","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::check_equiv","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::verify_union","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_union_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_widen_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_filter_identical_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_project_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_rename_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_filter_equal_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_filter_by_negation_fn","property non-void-command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::verify_filter_by_negation","command collaborator"
"check_relation_plugin","boundary","check_relation_plugin::mk_filter_interpreted_and_project_fn","property non-void-command collaborator"
"check_relation_plugin::filter_equal_fn","pure-controller small-class","operator()","controller"
"check_relation_plugin::rename_fn","pure-controller degenerate small-class","operator()","controller stateless"
"eval::scoped_mark_reset","empty","~scoped_mark_reset","destructor"
"check_relation_plugin::project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"uint_set2","data-provider small-class","operator==","predicate"
"uint_set2","data-provider small-class","operator!=","predicate"
"distribution","unclassified","choose","wrapper"
"distribution","unclassified","distribution","constructor"
"distribution","unclassified","reset","set"
"distribution","unclassified","empty","predicate"
"distribution","unclassified","push","set"
"distribution","unclassified","choose","get non-void-command"
"distribution","unclassified","begin","property wrapper"
"distribution","unclassified","end","property wrapper"
"bound","entity data-provider boundary","bound","copy-constructor"
"bound","entity data-provider boundary","get_var","get collaborator"
"bound","entity data-provider boundary","column_index","get collaborator"
"bound","entity data-provider boundary","get_lit","get collaborator"
"bound","entity data-provider boundary","get_bound_kind","get collaborator"
"bound","entity data-provider boundary","is_int","get"
"bound","entity data-provider boundary","get_value","get collaborator"
"bound","entity data-provider boundary","get_constraint","get collaborator"
"bound","entity data-provider boundary","get_value","property collaborator"
"bound","entity data-provider boundary","display","property collaborator"
"bound","entity data-provider boundary","bound","constructor"
"bound","entity data-provider boundary","is_strict","get"
"bound","entity data-provider boundary","term","property collaborator"
"bound","entity data-provider boundary","coeff","get collaborator"
"bound","entity data-provider boundary","update","command collaborator"
"bound","entity data-provider boundary","pp","command collaborator"
"bound","entity data-provider boundary","bound_propagator::bound::bound","copy-constructor"
"bound","entity data-provider boundary","bound_propagator::bound::at","property"
"bound","entity data-provider boundary","context_t<C>::bound::display","wrapper stateless"
"bound","entity data-provider boundary","theory_arith<Ext>::bound::display","property collaborator"
"degree_shift_tactic","boundary degenerate","translate","wrapper stateless"
"degree_shift_tactic","boundary degenerate","~degree_shift_tactic","destructor"
"degree_shift_tactic","boundary degenerate","name","incidental"
"degree_shift_tactic","boundary degenerate","operator()","wrapper stateless"
"degree_shift_tactic","boundary degenerate","cleanup","wrapper"
"check_relation_plugin::join_project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"horn_tactic","entity commander boundary","translate","property wrapper"
"horn_tactic","entity commander boundary","~horn_tactic","destructor"
"horn_tactic","entity commander boundary","name","incidental"
"horn_tactic","entity commander boundary","updt_params","command collaborator"
"horn_tactic","entity commander boundary","collect_param_descrs","command collaborator"
"horn_tactic","entity commander boundary","operator()","wrapper stateless"
"horn_tactic","entity commander boundary","collect_statistics","collaborator"
"horn_tactic","entity commander boundary","reset_statistics","command"
"horn_tactic","entity commander boundary","cleanup","set collaborator"
"eval","entity boundary","get_watch","get collaborator"
"eval","entity boundary","eval::eval","constructor"
"eval","entity boundary","eval::operator()","property non-void-command collaborator"
"eval","entity boundary","eval::operator()","wrapper stateless"
"eval","entity boundary","eval::compare","property non-void-command collaborator"
"eval","entity boundary","eval::compare_rec","property non-void-command collaborator"
"eval","entity boundary","eval::operator()","get property non-void-command collaborator"
"bv_bound_chk_rewriter_cfg","boundary","bv_bound_chk_rewriter_cfg","constructor"
"bv_bound_chk_rewriter_cfg","boundary","~bv_bound_chk_rewriter_cfg","destructor"
"bv_bound_chk_rewriter_cfg","boundary","updt_params","command collaborator"
"bv_bound_chk_rewriter_cfg","boundary","m","get collaborator"
"bv_bound_chk_rewriter_cfg","boundary","rewrite_patterns","incidental"
"bv_bound_chk_rewriter_cfg","boundary","flat_assoc","collaborator incidental"
"bv_bound_chk_rewriter_cfg","boundary","reduce_app","property non-void-command collaborator"
"bv_bound_chk_rewriter_cfg","boundary","reduce_app_core","property non-void-command collaborator"
"bv_bound_chk_rewriter_cfg","boundary","max_steps_exceeded","predicate wrapper"
"bv_bound_chk_rewriter_cfg","boundary","reset_statistics","command"
"bv_bound_chk_rewriter_cfg","boundary","collect_statistics","controller"
"register_engine","boundary small-class","set_context","set collaborator"
"register_engine","boundary small-class","register_engine::register_engine","constructor"
"register_engine","boundary small-class","register_engine::mk_engine","property wrapper"
"dl_declare_var_cmd","entity commander boundary","dl_declare_var_cmd","constructor"
"dl_declare_var_cmd","entity commander boundary","get_usage","incidental"
"dl_declare_var_cmd","entity commander boundary","get_descr","collaborator incidental"
"dl_declare_var_cmd","entity commander boundary","get_arity","incidental"
"dl_declare_var_cmd","entity commander boundary","prepare","set collaborator"
"dl_declare_var_cmd","entity commander boundary","next_arg_kind","property wrapper"
"dl_declare_var_cmd","entity commander boundary","set_next_arg","command collaborator"
"dl_declare_var_cmd","entity commander boundary","set_next_arg","command collaborator"
"dl_declare_var_cmd","entity commander boundary","execute","command collaborator"
"sparse_table_plugin::negated_join_fn","entity commander boundary","operator()","command collaborator"
"sparse_table_plugin::negated_join_fn","entity commander boundary","collect_to_remove","command collaborator"
"sparse_table_plugin::negated_join_fn","entity commander boundary","update_key","predicate non-void-command collaborator"
"sparse_table_plugin::negated_join_fn","entity commander boundary","update_key","collaborator incidental"
"bv_bound_chk_tactic::imp","entity commander boundary","m","property non-void-command collaborator"
"bv_bound_chk_tactic::imp","entity commander boundary","operator()","command collaborator"
"bv_bound_chk_tactic::imp","entity commander boundary","updt_params","command collaborator"
"bv_bound_chk_tactic::imp","entity commander boundary","collect_statistics","collaborator"
"bv_bound_chk_tactic::imp","entity commander boundary","reset_statistics","command"
"dl_rule_cmd","commander boundary","dl_rule_cmd","constructor"
"dl_rule_cmd","commander boundary","get_usage","incidental"
"dl_rule_cmd","commander boundary","get_descr","collaborator incidental"
"dl_rule_cmd","commander boundary","get_arity","incidental"
"dl_rule_cmd","commander boundary","next_arg_kind","property collaborator"
"dl_rule_cmd","commander boundary","set_next_arg","command collaborator"
"dl_rule_cmd","commander boundary","set_next_arg","command collaborator"
"dl_rule_cmd","commander boundary","set_next_arg","command"
"dl_rule_cmd","commander boundary","reset","command collaborator"
"dl_rule_cmd","commander boundary","prepare","command collaborator"
"dl_rule_cmd","commander boundary","finalize","empty"
"dl_rule_cmd","commander boundary","execute","command collaborator"
"nnf_normalizer","commander small-class","nnf_normalizer","constructor"
"nnf_normalizer","commander small-class","operator()","wrapper stateless"
"nnf_normalizer","commander small-class","reset","command"
"parser","commander boundary","m","property collaborator"
"parser","commander boundary","pm","property collaborator"
"parser","commander boundary","sm","property collaborator"
"parser","commander boundary","ignore_user_patterns","get"
"parser","commander boundary","ignore_bad_patterns","get"
"parser","commander boundary","use_vs_format","get"
"parser","commander boundary","reset_stack","command"
"parser","commander boundary","psort_stack","property non-void-command collaborator"
"parser","commander boundary","sort_stack","property non-void-command collaborator"
"parser","commander boundary","expr_stack","property non-void-command collaborator"
"parser","commander boundary","pattern_stack","property non-void-command collaborator"
"parser","commander boundary","nopattern_stack","property non-void-command collaborator"
"parser","commander boundary","symbol_stack","get collaborator"
"parser","commander boundary","sexpr_stack","property non-void-command collaborator"
"parser","commander boundary","autil","property non-void-command collaborator"
"parser","commander boundary","dtutil","property non-void-command collaborator"
"parser","commander boundary","sutil","property non-void-command collaborator"
"parser","commander boundary","butil","property non-void-command collaborator"
"parser","commander boundary","pat_validator","property non-void-command collaborator"
"parser","commander boundary","shifter","property non-void-command collaborator"
"parser","commander boundary","scan_core","command"
"parser","commander boundary","scan","set"
"parser","commander boundary","next","command"
"parser","commander boundary","curr","get collaborator"
"parser","commander boundary","sync_after_error","predicate non-void-command"
"parser","commander boundary","check_next","command collaborator"
"parser","commander boundary","curr_id","property collaborator"
"parser","commander boundary","curr_numeral","property collaborator"
"parser","commander boundary","curr_unsigned","non-void-command collaborator"
"parser","commander boundary","curr_is_identifier","predicate"
"parser","commander boundary","curr_is_keyword","predicate"
"parser","commander boundary","curr_is_string","predicate"
"parser","commander boundary","curr_is_lparen","predicate"
"parser","commander boundary","curr_is_rparen","predicate"
"parser","commander boundary","curr_is_int","predicate"
"parser","commander boundary","curr_is_float","predicate"
"parser","commander boundary","curr_is_bv","predicate"
"parser","commander boundary","curr_id_is_underscore","predicate"
"parser","commander boundary","curr_id_is_as","predicate"
"parser","commander boundary","curr_id_is_reserved","predicate"
"parser","commander boundary","curr_id_is_match","predicate"
"parser","commander boundary","curr_id_is_case","predicate"
"parser","commander boundary","curr_id_is_forall","predicate"
"parser","commander boundary","curr_id_is_exists","predicate"
"parser","commander boundary","curr_id_is_lambda","predicate"
"parser","commander boundary","curr_id_is_bang","predicate"
"parser","commander boundary","curr_id_is_let","predicate"
"parser","commander boundary","curr_id_is_root_obj","predicate"
"parser","commander boundary","check_lparen","command"
"parser","commander boundary","check_lparen_next","command"
"parser","commander boundary","check_rparen_next","command"
"parser","commander boundary","check_rparen","command"
"parser","commander boundary","check_id_next","command"
"parser","commander boundary","check_underscore_next","command"
"parser","commander boundary","check_as_next","command"
"parser","commander boundary","check_identifier","command"
"parser","commander boundary","check_nonreserved_identifier","command"
"parser","commander boundary","check_keyword","command"
"parser","commander boundary","check_string","command"
"parser","commander boundary","check_int","command"
"parser","commander boundary","check_int_or_float","command"
"parser","commander boundary","check_float","command"
"parser","commander boundary","check_identifier_next","property non-void-command collaborator"
"parser","commander boundary","set_current_file","set"
"parser","commander boundary","error","command"
"parser","commander boundary","error","command"
"parser","commander boundary","error_wo_pos","command"
"parser","commander boundary","unknown_sort","controller stateless"
"parser","commander boundary","consume_sexpr","command"
"parser","commander boundary","parse_sexpr","command collaborator"
"parser","commander boundary","parse_sort_name","property non-void-command collaborator"
"parser","commander boundary","parse_psort_name","property non-void-command collaborator"
"parser","commander boundary","parse_indexed_sort","property non-void-command collaborator"
"parser","commander boundary","push_psort_app_frame","command"
"parser","commander boundary","pop_psort_app_frame","command collaborator"
"parser","commander boundary","parse_psort","command"
"parser","commander boundary","push_sort_app_frame","command"
"parser","commander boundary","pop_sort_app_frame","command collaborator"
"parser","commander boundary","parse_sort","command"
"parser","commander boundary","parse_sorts","non-void-command"
"parser","commander boundary","parse_symbols","non-void-command"
"parser","commander boundary","parse_ptype","property non-void-command collaborator"
"parser","commander boundary","parse_accessor_decls","command collaborator"
"parser","commander boundary","parse_constructor_decls","command collaborator"
"parser","commander boundary","parse_declare_type_var","command collaborator"
"parser","commander boundary","parse_declare_datatypes","command collaborator"
"parser","commander boundary","parse_declare_datatype","command collaborator"
"parser","commander boundary","parse_datatype_dec","command collaborator"
"parser","commander boundary","check_missing","controller stateless"
"parser","commander boundary","check_duplicate","controller stateless"
"parser","commander boundary","name_expr","command collaborator"
"parser","commander boundary","in_quant_ctx","collaborator incidental"
"parser","commander boundary","check_in_quant_ctx","command collaborator"
"parser","commander boundary","process_last_symbol","command collaborator"
"parser","commander boundary","store_qid","set collaborator"
"parser","commander boundary","store_skid","set collaborator"
"parser","commander boundary","store_weight","set"
"parser","commander boundary","consume_attributes","property non-void-command collaborator"
"parser","commander boundary","parse_expr_state","property non-void-command collaborator"
"parser","commander boundary","parse_numeral","command"
"parser","commander boundary","parse_bv_numeral","command"
"parser","commander boundary","parse_string_const","command collaborator"
"parser","commander boundary","push_pattern_frame","command collaborator"
"parser","commander boundary","push_let_decl_frame","command"
"parser","commander boundary","parse_sorted_vars","non-void-command collaborator"
"parser","commander boundary","push_let_frame","command"
"parser","commander boundary","push_bang_frame","command collaborator"
"parser","commander boundary","push_quant_frame","command collaborator"
"parser","commander boundary","push_match_frame","command"
"parser","commander boundary","pop_match_frame","set collaborator"
"parser","commander boundary","compile_patterns","property non-void-command collaborator"
"parser","commander boundary","check_patterns","command collaborator"
"parser","commander boundary","bind_match","property non-void-command collaborator"
"parser","commander boundary","parse_match_pattern","command collaborator"
"parser","commander boundary","parse_indexed_identifier_core","property non-void-command collaborator"
"parser","commander boundary","parse_indexed_identifier","property non-void-command collaborator"
"parser","commander boundary","parse_qualified_identifier_core","property non-void-command collaborator"
"parser","commander boundary","parse_qualified_identifier","property non-void-command collaborator"
"parser","commander boundary","unknown_var_const_name","controller stateless"
"parser","commander boundary","is_bv_decimal","predicate wrapper"
"parser","commander boundary","is_bv_binary","predicate wrapper"
"parser","commander boundary","is_bv_hex","predicate wrapper"
"parser","commander boundary","is_bv_num","predicate non-void-command collaborator"
"parser","commander boundary","push_local","command collaborator"
"parser","commander boundary","parse_expr_name","command collaborator"
"parser","commander boundary","check_qualifier","command collaborator"
"parser","commander boundary","parse_qualified_name","command collaborator"
"parser","commander boundary","parse_root_obj","command"
"parser","commander boundary","push_app_frame","command"
"parser","commander boundary","push_expr_frame","command collaborator"
"parser","commander boundary","pop_app_frame","command collaborator"
"parser","commander boundary","pop_let_frame","void-accessor command collaborator"
"parser","commander boundary","pop_quant_frame","void-accessor command collaborator"
"parser","commander boundary","pop_attr_expr_frame","command collaborator"
"parser","commander boundary","pop_pattern_frame","command collaborator"
"parser","commander boundary","pop_expr_frame","command collaborator"
"parser","commander boundary","parse_expr","command collaborator"
"parser","commander boundary","parse_exprs","non-void-command"
"parser","commander boundary","parse_sort_decl_params","command"
"parser","commander boundary","parse_sort_decl_or_params","predicate non-void-command collaborator"
"parser","commander boundary","parse_declare_sort","command collaborator"
"parser","commander boundary","parse_define_sort","command collaborator"
"parser","commander boundary","parse_define","command"
"parser","commander boundary","parse_define_fun","command"
"parser","commander boundary","parse_model_add","command"
"parser","commander boundary","parse_model_del","command collaborator"
"parser","commander boundary","parse_define_fun_rec","command collaborator"
"parser","commander boundary","parse_define_funs_rec","command collaborator"
"parser","commander boundary","parse_rec_fun_decls","command collaborator"
"parser","commander boundary","parse_rec_fun_decl","property non-void-command collaborator"
"parser","commander boundary","parse_rec_fun_bodies","command collaborator"
"parser","commander boundary","parse_rec_fun_body","command collaborator"
"parser","commander boundary","parse_define_const","command collaborator"
"parser","commander boundary","parse_declare_fun","command collaborator"
"parser","commander boundary","parse_declare_const","command collaborator"
"parser","commander boundary","parse_opt_unsigned","non-void-command collaborator"
"parser","commander boundary","parse_push","command"
"parser","commander boundary","parse_pop","command"
"parser","commander boundary","parse_assert","command collaborator"
"parser","commander boundary","parse_assumptions","command"
"parser","commander boundary","parse_check_sat","command"
"parser","commander boundary","parse_check_sat_assuming","command"
"parser","commander boundary","parse_get_value","command collaborator"
"parser","commander boundary","parse_reset","command"
"parser","commander boundary","parse_option_value","command"
"parser","commander boundary","parse_func_decl_ref","property non-void-command collaborator"
"parser","commander boundary","parse_func_decl_refs","command collaborator"
"parser","commander boundary","parse_next_cmd_arg","command collaborator"
"parser","commander boundary","parse_unknown_cmd","command collaborator"
"parser","commander boundary","parse_ext_cmd","command"
"parser","commander boundary","parse_cmd","command collaborator"
"parser","commander boundary","~parser","destructor"
"parser","commander boundary","updt_params","command collaborator"
"parser","commander boundary","reset","command"
"parser","commander boundary","reset_input","command"
"parser","commander boundary","parse_sexpr_ref","property non-void-command collaborator"
"parser","commander boundary","parse_sort_ref","property non-void-command collaborator"
"parser","commander boundary","operator()","predicate non-void-command"
"parser","commander boundary","parser::create","wrapper stateless"
"reserved_symbols","pure-controller degenerate small-class","reserved_symbols","constructor"
"reserved_symbols","pure-controller degenerate small-class","string2dtoken","controller stateless"
"ddnf::imp","entity boundary","~imp","destructor"
"ddnf::imp","entity boundary","query","property non-void-command collaborator"
"ddnf::imp","entity boundary","reset_statistics","command"
"ddnf::imp","entity boundary","collect_statistics","empty"
"ddnf::imp","entity boundary","display_certificate","collaborator"
"ddnf::imp","entity boundary","get_answer","property collaborator"
"ddnf::imp","entity boundary","get_proof","property collaborator"
"ddnf::imp","entity boundary","pre_process_rules","predicate non-void-command collaborator"
"ddnf::imp","entity boundary","pre_process_rule","predicate non-void-command collaborator"
"ddnf::imp","entity boundary","process_todo","predicate non-void-command collaborator"
"ddnf::imp","entity boundary","process_atomic","predicate non-void-command collaborator"
"ddnf::imp","entity boundary","process_eq","predicate non-void-command collaborator"
"ddnf::imp","entity boundary","init_ctx","command collaborator"
"ddnf::imp","entity boundary","dump_rules","command collaborator"
"ddnf::imp","entity boundary","execute_rules","property non-void-command collaborator"
"ddnf::imp","entity boundary","compile_rules1","predicate non-void-command collaborator"
"ddnf::imp","entity boundary","compile_rule1","predicate non-void-command collaborator"
"ddnf::imp","entity boundary","compile_predicate","void-accessor command collaborator"
"ddnf::imp","entity boundary","insert_cache","command collaborator"
"ddnf::imp","entity boundary","compile_var","void-accessor command collaborator"
"ddnf::imp","entity boundary","compile_sort","property non-void-command collaborator"
"ddnf::imp","entity boundary","compile_expr","void-accessor command collaborator"
"ddnf::imp","entity boundary","compile_eq","void-accessor command collaborator"
"SetSort","empty","SetSort","constructor"
"SetSort","empty","SetSort","constructor"
"ddnfs","boundary","ddnfs","constructor"
"ddnfs","boundary","~ddnfs","destructor"
"ddnfs","boundary","allocate","property non-void-command collaborator"
"ddnfs","boundary","insert","command collaborator"
"ddnfs","boundary","get","property non-void-command collaborator"
"ddnfs","boundary","lookup","property collaborator"
"ddnfs","boundary","display","controller"
"ddnfs","boundary","insert","property non-void-command collaborator"
"sort_proc","small-class","sort_proc","constructor"
"sort_proc","small-class","operator()","wrapper"
"sort_proc","small-class","operator()","empty"
"nlsat2goal::imp","entity boundary","operator()","property non-void-command collaborator"
"nlsat2goal::imp","entity boundary","poly2expr","property non-void-command collaborator"
"nlsat2goal::imp","entity boundary","mono2expr","property non-void-command collaborator"
"nlsat2goal::imp","entity boundary","poly_is_int","wrapper stateless"
"nlsat2goal::imp","entity boundary","mono_is_int","predicate non-void-command collaborator"
"bmc","boundary","bmc::bmc","constructor"
"bmc","boundary","bmc::~bmc","destructor"
"bmc","boundary","bmc::query","property non-void-command collaborator"
"bmc","boundary","bmc::assert_expr","command collaborator"
"bmc","boundary","bmc::is_linear","predicate"
"bmc","boundary","bmc::checkpoint","command"
"bmc","boundary","bmc::display_certificate","wrapper"
"bmc","boundary","bmc::collect_statistics","collaborator"
"bmc","boundary","bmc::reset_statistics","empty"
"bmc","boundary","bmc::get_answer","get collaborator"
"bmc","boundary","bmc::get_proof","property wrapper"
"bmc","boundary","bmc::get_rules_along_trace","controller"
"bmc","boundary","bmc::compile","controller"
"bmc","boundary","bmc::compile_query","property controller"
"simple_parser","entity commander boundary","parse_int","wrapper stateless"
"simple_parser","entity commander boundary","parse_float","wrapper stateless"
"simple_parser","entity commander boundary","simple_parser::simple_parser","constructor"
"simple_parser","entity commander boundary","simple_parser::~simple_parser","destructor"
"simple_parser","entity commander boundary","simple_parser::add_builtin_op","command collaborator"
"simple_parser","entity commander boundary","simple_parser::add_builtin_op","command collaborator"
"simple_parser","entity commander boundary","simple_parser::add_var","command collaborator"
"simple_parser","entity commander boundary","simple_parser::add_var","command collaborator"
"simple_parser","entity commander boundary","simple_parser::reset","command"
"simple_parser","entity commander boundary","simple_parser::reset_vars","command"
"simple_parser","entity commander boundary","simple_parser::parse_expr","property non-void-command collaborator"
"simple_parser","entity commander boundary","simple_parser::parse","predicate non-void-command collaborator"
"simple_parser","entity commander boundary","simple_parser::parse_string","predicate non-void-command collaborator"
"simple_parser","entity commander boundary","simple_parser::parse_file","predicate non-void-command collaborator"
"table_signature","unclassified","swap","command"
"table_signature","unclassified","functional_columns","get"
"table_signature","unclassified","set_functional_columns","set"
"table_signature","unclassified","first_functional","wrapper"
"table_signature","unclassified","operator==","predicate"
"table_signature","unclassified","operator!=","predicate"
"table_signature","unclassified","equal_up_to_fn_mark","predicate"
"table_signature","unclassified","table_signature::from_join","controller stateless"
"table_signature","unclassified","table_signature::from_project","command"
"table_signature","unclassified","table_signature::from_project_with_reduce","command"
"table_signature","unclassified","table_signature::from_join_project","command"
"grobner","boundary","display_monomials","collaborator"
"grobner","boundary","get_scope_level","unclassified"
"grobner","boundary","get_weight","controller stateless"
"grobner","boundary","get_num_new_equations","get"
"grobner","boundary","inconsistent","predicate"
"grobner","boundary","display_equation","collaborator"
"grobner","boundary","display_monomial","collaborator"
"grobner","boundary","display","collaborator"
"grobner","boundary","grobner::grobner","constructor"
"grobner","boundary","grobner::~grobner","destructor"
"grobner","boundary","grobner::flush","command"
"grobner","boundary","grobner::del_equations","command collaborator"
"grobner","boundary","grobner::del_equation","command collaborator"
"grobner","boundary","grobner::del_monomials","command collaborator"
"grobner","boundary","grobner::del_monomial","command collaborator"
"grobner","boundary","grobner::unfreeze_equations","command collaborator"
"grobner","boundary","grobner::push_scope","command collaborator"
"grobner","boundary","grobner::pop_scope","command collaborator"
"grobner","boundary","grobner::reset","command"
"grobner","boundary","grobner::display_var","controller stateless"
"grobner","boundary","grobner::display_vars","collaborator"
"grobner","boundary","grobner::display_monomial","collaborator"
"grobner","boundary","grobner::display_monomials","collaborator"
"grobner","boundary","grobner::display_equation","collaborator"
"grobner","boundary","grobner::display_equations","collaborator"
"grobner","boundary","grobner::display","collaborator"
"grobner","boundary","grobner::set_weight","command"
"grobner","boundary","grobner::update_order","predicate controller"
"grobner","boundary","grobner::update_order","command collaborator"
"grobner","boundary","grobner::update_order","command"
"grobner","boundary","grobner::add_var","command collaborator"
"grobner","boundary","grobner::mk_monomial","property non-void-command collaborator"
"grobner","boundary","grobner::mk_monomial","property non-void-command collaborator"
"grobner","boundary","grobner::init_equation","void-accessor command collaborator"
"grobner","boundary","grobner::assert_eq_0","command collaborator"
"grobner","boundary","grobner::assert_eq_0","wrapper stateless"
"grobner","boundary","grobner::assert_eq_0","wrapper stateless"
"grobner","boundary","grobner::extract_monomials","void-accessor command collaborator"
"grobner","boundary","grobner::assert_eq","command collaborator"
"grobner","boundary","grobner::assert_monomial_tautology","command collaborator"
"grobner","boundary","grobner::is_eq_monomial_body","controller stateless"
"grobner","boundary","grobner::merge_monomials","void-accessor command collaborator"
"grobner","boundary","grobner::normalize_coeff","command collaborator"
"grobner","boundary","grobner::simplify","command collaborator"
"grobner","boundary","grobner::is_inconsistent","controller stateless"
"grobner","boundary","grobner::is_trivial","controller stateless"
"grobner","boundary","grobner::simplify","command collaborator"
"grobner","boundary","grobner::is_subset","controller stateless"
"grobner","boundary","grobner::mul_append","command collaborator"
"grobner","boundary","grobner::copy_monomial","property non-void-command collaborator"
"grobner","boundary","grobner::copy_equation","property non-void-command collaborator"
"grobner","boundary","grobner::simplify","property non-void-command collaborator"
"grobner","boundary","grobner::simplify_using_processed","property non-void-command collaborator"
"grobner","boundary","grobner::is_better_choice","controller stateless"
"grobner","boundary","grobner::pick_next","property non-void-command collaborator"
"grobner","boundary","grobner::simplify_processed","predicate non-void-command collaborator"
"grobner","boundary","grobner::simplify_to_process","command collaborator"
"grobner","boundary","grobner::unify","controller stateless"
"grobner","boundary","grobner::superpose","command collaborator"
"grobner","boundary","grobner::superpose","command collaborator"
"grobner","boundary","grobner::compute_basis_init","command"
"grobner","boundary","grobner::compute_basis_step","predicate non-void-command collaborator"
"grobner","boundary","grobner::compute_basis","predicate non-void-command"
"grobner","boundary","grobner::copy_to","controller stateless"
"grobner","boundary","grobner::get_equations","collaborator"
"grobner","boundary","grobner::grobner","constructor"
"grobner","boundary","grobner::lp_settings","property non-void-command collaborator"
"grobner","boundary","grobner::operator()","command"
"grobner","boundary","grobner::core_equations","property non-void-command collaborator"
"grobner","boundary","grobner::is_conflicting","predicate non-void-command collaborator"
"grobner","boundary","grobner::propagate_eqs","predicate non-void-command collaborator"
"grobner","boundary","grobner::propagate_factorization","predicate non-void-command collaborator"
"grobner","boundary","grobner::propagate_fixed","predicate non-void-command collaborator"
"grobner","boundary","grobner::propagate_factorization","predicate non-void-command collaborator"
"grobner","boundary","grobner::explain","controller stateless"
"grobner","boundary","grobner::add_dependencies","void-accessor command collaborator"
"grobner","boundary","grobner::configure","predicate non-void-command collaborator"
"grobner","boundary","grobner::diagnose_pdd_miss","property non-void-command collaborator"
"grobner","boundary","grobner::equation_is_true","predicate non-void-command collaborator"
"grobner","boundary","grobner::val_of_fixed_var_with_deps","property non-void-command collaborator"
"grobner","boundary","grobner::pdd_expr","property non-void-command collaborator"
"grobner","boundary","grobner::is_solved","predicate non-void-command collaborator"
"grobner","boundary","grobner::add_eq","command collaborator"
"grobner","boundary","grobner::add_fixed_monic","command collaborator"
"grobner","boundary","grobner::add_row","command collaborator"
"grobner","boundary","grobner::find_nl_cluster","command collaborator"
"grobner","boundary","grobner::prepare_rows_and_active_vars","command"
"grobner","boundary","grobner::display_matrix_of_m_rows","collaborator"
"grobner","boundary","grobner::set_level2var","command"
"grobner","boundary","grobner::is_nla_conflict","predicate non-void-command collaborator"
"grobner","boundary","grobner::add_horner_conflict","predicate non-void-command collaborator"
"grobner","boundary","grobner::add_nla_conflict","predicate non-void-command collaborator"
"grobner","boundary","grobner::check_missing_propagation","command collaborator"
"bmc::qlinear","entity boundary","check","property non-void-command collaborator"
"bmc::qlinear","entity boundary","mk_index_sort","property non-void-command collaborator"
"bmc::qlinear","entity boundary","mk_index_var","property non-void-command collaborator"
"bmc::qlinear","entity boundary","compile","command"
"bmc::qlinear","entity boundary","setup","command collaborator"
"bmc::qlinear","entity boundary","mk_qrule_vars","void-accessor command collaborator"
"bmc::qlinear","entity boundary","mk_q_var","property non-void-command collaborator"
"bmc::qlinear","entity boundary","mk_q_arg","property non-void-command collaborator"
"bmc::qlinear","entity boundary","mk_q_one","property non-void-command collaborator"
"bmc::qlinear","entity boundary","mk_q_num","property non-void-command collaborator"
"bmc::qlinear","entity boundary","mk_q_func_decl","property non-void-command collaborator"
"bmc::qlinear","entity boundary","mk_q_rule","property non-void-command collaborator"
"bmc::qlinear","entity boundary","eval_q","property non-void-command collaborator"
"bmc::qlinear","entity boundary","eval_q","property non-void-command collaborator"
"bmc::qlinear","entity boundary","get_model","property non-void-command collaborator"
"lp_core_solver_base","unclassified","inc_total_iterations","set"
"lp_core_solver_base","unclassified","current_x_is_feasible","predicate"
"lp_core_solver_base","unclassified","current_x_is_infeasible","predicate"
"lp_core_solver_base","unclassified","inf_heap","get collaborator"
"lp_core_solver_base","unclassified","inf_heap","get collaborator"
"lp_core_solver_base","unclassified","inf_heap_increase_size_by_one","command"
"lp_core_solver_base","unclassified","inf_heap_contains","predicate"
"lp_core_solver_base","unclassified","inf_heap_size","unclassified"
"lp_core_solver_base","unclassified","start_tracing_basis_changes","set"
"lp_core_solver_base","unclassified","stop_tracing_basis_changes","set"
"lp_core_solver_base","unclassified","trace_basis_change","command"
"lp_core_solver_base","unclassified","m_m","unclassified"
"lp_core_solver_base","unclassified","m_n","unclassified"
"lp_core_solver_base","unclassified","~lp_core_solver_base","destructor"
"lp_core_solver_base","unclassified","non_basis","get"
"lp_core_solver_base","unclassified","non_basis","get"
"lp_core_solver_base","unclassified","set_status","set collaborator"
"lp_core_solver_base","unclassified","get_status","get collaborator"
"lp_core_solver_base","unclassified","get_cost","property wrapper"
"lp_core_solver_base","unclassified","get_var_value","get collaborator"
"lp_core_solver_base","unclassified","total_iterations","get"
"lp_core_solver_base","unclassified","set_total_iterations","set"
"lp_core_solver_base","unclassified","at_bound","predicate collaborator"
"lp_core_solver_base","unclassified","need_to_pivot_to_basis_tableau","predicate collaborator"
"lp_core_solver_base","unclassified","reduced_costs_are_correct_tableau","predicate collaborator"
"lp_core_solver_base","unclassified","below_bound","collaborator incidental"
"lp_core_solver_base","unclassified","above_bound","collaborator incidental"
"lp_core_solver_base","unclassified","x_below_low_bound","predicate"
"lp_core_solver_base","unclassified","x_above_lower_bound","predicate"
"lp_core_solver_base","unclassified","x_below_upper_bound","predicate"
"lp_core_solver_base","unclassified","x_above_upper_bound","predicate"
"lp_core_solver_base","unclassified","x_is_at_lower_bound","predicate"
"lp_core_solver_base","unclassified","x_is_at_upper_bound","predicate"
"lp_core_solver_base","unclassified","x_is_at_bound","predicate"
"lp_core_solver_base","unclassified","lower_bounds_are_set","incidental"
"lp_core_solver_base","unclassified","lower_bound_value","get collaborator"
"lp_core_solver_base","unclassified","upper_bound_value","get collaborator"
"lp_core_solver_base","unclassified","get_column_type","get collaborator"
"lp_core_solver_base","unclassified","bound_span","get collaborator"
"lp_core_solver_base","unclassified","make_column_feasible","predicate non-void-command collaborator"
"lp_core_solver_base","unclassified","init_basic_part_of_basis_heading","set"
"lp_core_solver_base","unclassified","init_non_basic_part_of_basis_heading","command"
"lp_core_solver_base","unclassified","init_basis_heading_and_non_basic_columns_vector","command"
"lp_core_solver_base","unclassified","change_basis_unconditionally","command"
"lp_core_solver_base","unclassified","change_basis","command"
"lp_core_solver_base","unclassified","restore_basis_change","command"
"lp_core_solver_base","unclassified","non_basic_columns_are_set_correctly","predicate"
"lp_core_solver_base","unclassified","print_column_bound_info","property collaborator"
"lp_core_solver_base","unclassified","print_column_info","property collaborator"
"lp_core_solver_base","unclassified","column_is_fixed","get"
"lp_core_solver_base","unclassified","column_has_upper_bound","predicate"
"lp_core_solver_base","unclassified","bounds_for_boxed_are_set_correctly","predicate"
"lp_core_solver_base","unclassified","column_has_lower_bound","predicate"
"lp_core_solver_base","unclassified","simplex_strategy","property collaborator"
"lp_core_solver_base","unclassified","transpose_basis","wrapper"
"lp_core_solver_base","unclassified","column_is_in_inf_heap","predicate"
"lp_core_solver_base","unclassified","column_is_base","get"
"lp_core_solver_base","unclassified","add_delta_to_x_and_track_feasibility","set collaborator"
"lp_core_solver_base","unclassified","update_x","set collaborator"
"lp_core_solver_base","unclassified","add_delta_to_x","set collaborator"
"lp_core_solver_base","unclassified","track_column_feasibility","command"
"lp_core_solver_base","unclassified","insert_column_into_inf_heap","command"
"lp_core_solver_base","unclassified","remove_column_from_inf_heap","command"
"lp_core_solver_base","unclassified","clear_inf_heap","command"
"lp_core_solver_base","unclassified","costs_on_nbasis_are_zeros","predicate controller"
"lp_core_solver_base","unclassified","iters_with_no_cost_growing","get"
"lp_core_solver_base","unclassified","iters_with_no_cost_growing","get"
"lp_core_solver_base","unclassified","get_base_column_in_row","get"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::lp_core_solver_base","constructor"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::allocate_basis_heading","command"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::init","command"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::pivot_to_reduced_costs_tableau","set collaborator"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::pretty_print","controller"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::add_delta_to_entering","command collaborator"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::print_statistics","command collaborator"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::column_is_dual_feasible","predicate"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::d_is_not_negative","get wrapper"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::d_is_not_positive","get wrapper"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::rs_minus_Anx","void-accessor command collaborator"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::column_is_feasible","predicate controller"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::calc_current_x_is_feasible_include_non_basis","predicate"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::inf_heap_is_correct","predicate"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::divide_row_by_pivot","predicate non-void-command"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::pivot_column_tableau","predicate non-void-command collaborator"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::basis_has_no_doubles","predicate"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::non_basis_has_no_doubles","predicate collaborator"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::basis_is_correctly_represented_in_heading","predicate"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::non_basis_is_correctly_represented_in_heading","predicate collaborator"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::basis_heading_is_correct","predicate"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::column_name","property"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::transpose_rows_tableau","command"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::pivot_column_general","predicate non-void-command collaborator"
"lp_core_solver_base","unclassified","lp_core_solver_base<T,X>::remove_from_basis_core","predicate non-void-command collaborator"
"dl_context","commander boundary","get_params","property non-void-command collaborator"
"dl_context","commander boundary","dl_context","constructor"
"dl_context","commander boundary","inc_ref","set"
"dl_context","commander boundary","dec_ref","set"
"dl_context","commander boundary","fparams","property set collaborator"
"dl_context","commander boundary","init","command collaborator"
"dl_context","commander boundary","reset","set"
"dl_context","commander boundary","register_predicate","command collaborator"
"dl_context","commander boundary","add_rule","command collaborator"
"dl_context","commander boundary","collect_query","predicate non-void-command collaborator"
"dl_context","commander boundary","push","command"
"dl_context","commander boundary","pop","command"
"dl_context","commander boundary","dlctx","get non-void-command collaborator"
"sub_probe","pure-controller degenerate small-class","sub_probe","constructor"
"sub_probe","pure-controller degenerate small-class","operator()","controller stateless"
"aux__index_comparator","data-provider data-class small-class","aux__index_comparator","constructor"
"aux__index_comparator","data-provider data-class small-class","operator()","get"
"divisions","commander boundary","divisions","constructor"
"divisions","commander boundary","divisions::add_idivision","command collaborator"
"divisions","commander boundary","divisions::add_rdivision","command collaborator"
"divisions","commander boundary","divisions::add_bounded_division","command collaborator"
"divisions","commander boundary","divisions::check","controller"
"divisions","commander boundary","divisions::check_bounded_divisions","command collaborator"
"quantifier_analyzer","entity boundary","neg","collaborator incidental"
"quantifier_analyzer","entity boundary","insert_qinfo","command collaborator"
"quantifier_analyzer","entity boundary","is_var_plus_ground","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_var_plus_ground","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_add","predicate collaborator"
"quantifier_analyzer","entity boundary","is_zero","predicate collaborator"
"quantifier_analyzer","entity boundary","is_times_minus_one","predicate collaborator"
"quantifier_analyzer","entity boundary","is_le","predicate collaborator"
"quantifier_analyzer","entity boundary","is_le_ge","predicate collaborator"
"quantifier_analyzer","entity boundary","is_signed_le","predicate collaborator"
"quantifier_analyzer","entity boundary","mk_one","property non-void-command collaborator"
"quantifier_analyzer","entity boundary","mk_sub","collaborator"
"quantifier_analyzer","entity boundary","mk_add","collaborator"
"quantifier_analyzer","entity boundary","is_var_and_ground","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_var_and_ground","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_x_eq_t_atom","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_var_minus_var","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_var_and_var","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_x_eq_y_atom","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_x_gle_y_atom","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","is_x_gle_t_atom","predicate non-void-command collaborator"
"quantifier_analyzer","entity boundary","reset_cache","command"
"quantifier_analyzer","entity boundary","get_cache","property collaborator"
"quantifier_analyzer","entity boundary","visit_formula","command collaborator"
"quantifier_analyzer","entity boundary","visit_term","command collaborator"
"quantifier_analyzer","entity boundary","process_u_app","command collaborator"
"quantifier_analyzer","entity boundary","is_auf_select","predicate collaborator"
"quantifier_analyzer","entity boundary","process_i_app","command collaborator"
"quantifier_analyzer","entity boundary","process_app","command collaborator"
"quantifier_analyzer","entity boundary","process_terms_on_stack","command collaborator"
"quantifier_analyzer","entity boundary","process_literal","command collaborator"
"quantifier_analyzer","entity boundary","process_literal","command collaborator"
"quantifier_analyzer","entity boundary","process_and_or","command collaborator"
"quantifier_analyzer","entity boundary","process_ite","command collaborator"
"quantifier_analyzer","entity boundary","process_iff","command collaborator"
"quantifier_analyzer","entity boundary","checkpoint","command"
"quantifier_analyzer","entity boundary","process_formulas_on_stack","command collaborator"
"quantifier_analyzer","entity boundary","process_formula","command collaborator"
"quantifier_analyzer","entity boundary","process_clause","command collaborator"
"quantifier_analyzer","entity boundary","quantifier_analyzer","constructor"
"quantifier_analyzer","entity boundary","operator()","command collaborator"
"skip_model_converter","degenerate","skip_model_converter","constructor"
"skip_model_converter","degenerate","translate","wrapper stateless"
"skip_model_converter","degenerate","operator()","empty"
"skip_model_converter","degenerate","display","empty"
"skip_model_converter","degenerate","get_units","empty"
"rule_stratifier","boundary","rule_stratifier","constructor"
"rule_stratifier","boundary","get_strats","get collaborator"
"rule_stratifier","boundary","rule_stratifier::~rule_stratifier","destructor"
"rule_stratifier","boundary","rule_stratifier::get_predicate_strat","collaborator"
"rule_stratifier","boundary","rule_stratifier::traverse","command collaborator"
"rule_stratifier","boundary","rule_stratifier::process","command collaborator"
"rule_stratifier","boundary","rule_stratifier::display","collaborator"
"hash<pair<S,T>>","boundary degenerate small-class","operator()","wrapper stateless"
"uflia_mbi::is_atom_proc","commander small-class","operator()","command collaborator"
"uflia_mbi::is_atom_proc","commander small-class","operator()","empty"
"name_nested_formulas","commander boundary data-class small-class","operator()","set collaborator"
"dt2bv_tactic","unclassified","is_fd","predicate non-void-command collaborator"
"dt2bv_tactic","unclassified","is_fd","predicate non-void-command collaborator"
"dt2bv_tactic","unclassified","name","incidental"
"dt2bv_tactic","unclassified","translate","property wrapper"
"dt2bv_tactic","unclassified","updt_params","empty"
"dt2bv_tactic","unclassified","collect_param_descrs","empty"
"dt2bv_tactic","unclassified","operator()","command collaborator"
"dt2bv_tactic","unclassified","cleanup","command"
"rule","entity data-provider boundary","get_proof","get collaborator"
"rule","entity data-provider boundary","get_head","get collaborator"
"rule","entity data-provider boundary","get_decl","property collaborator"
"rule","entity data-provider boundary","get_tail_size","get"
"rule","entity data-provider boundary","get_positive_tail_size","get"
"rule","entity data-provider boundary","get_uninterpreted_tail_size","get"
"rule","entity data-provider boundary","get_tail","property wrapper"
"rule","entity data-provider boundary","get_decl","property collaborator"
"rule","entity data-provider boundary","is_neg_tail","predicate wrapper"
"rule","entity data-provider boundary","name","get collaborator"
"rule","entity data-provider boundary","rule::deallocate","command collaborator"
"rule","entity data-provider boundary","rule::set_proof","set collaborator"
"rule","entity data-provider boundary","rule::is_in_tail","predicate"
"rule","entity data-provider boundary","rule::has_negation","predicate"
"rule","entity data-provider boundary","rule::get_used_vars","collaborator"
"rule","entity data-provider boundary","rule::get_vars","collaborator"
"rule","entity data-provider boundary","rule::norm_vars","command collaborator"
"rule","entity data-provider boundary","rule::display","collaborator"
"rule","entity data-provider boundary","rule::hash","unclassified"
"table_relation_plugin","boundary","get_table_plugin","get collaborator"
"table_relation_plugin","boundary","table_relation_plugin::create_plugin_name","controller stateless"
"table_relation_plugin","boundary","table_relation_plugin::can_handle_signature","predicate non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_empty","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_full_relation","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_from_table","property controller"
"table_relation_plugin","boundary","table_relation_plugin::mk_join_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_join_project_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_project_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_rename_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_permutation_rename_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_select_equal_and_project_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_union_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_filter_identical_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_filter_equal_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_filter_interpreted_and_project_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_filter_by_intersection_fn","property non-void-command collaborator"
"table_relation_plugin","boundary","table_relation_plugin::mk_filter_by_negation_fn","property non-void-command collaborator"
"fd_finder_proc","commander","fd_finder_proc","constructor"
"fd_finder_proc","commander","is_fd","get"
"fd_finder_proc","commander","is_fd","predicate non-void-command collaborator"
"fd_finder_proc","commander","operator()","set collaborator"
"fd_finder_proc","commander","operator()","set"
"fd_finder_proc","commander","operator()","set collaborator"
"fd_finder_proc","commander","reset","set"
"qe_solver_plugin","data-provider boundary lazy-class degenerate","qe_solver_plugin","constructor"
"qe_solver_plugin","data-provider boundary lazy-class degenerate","get_family_id","get collaborator"
"qe_solver_plugin","data-provider boundary lazy-class degenerate","project","collaborator incidental"
"qe_solver_plugin","data-provider boundary lazy-class degenerate","get_weight","collaborator incidental"
"qe_solver_plugin","data-provider boundary lazy-class degenerate","simplify","collaborator incidental"
"qe_solver_plugin","data-provider boundary lazy-class degenerate","mk_atom","collaborator incidental"
"qe_solver_plugin","data-provider boundary lazy-class degenerate","is_uninterpreted","collaborator incidental"
"pb2bv_model_converter","controller","pb2bv_model_converter::pb2bv_model_converter","constructor"
"pb2bv_model_converter","controller","pb2bv_model_converter::pb2bv_model_converter","constructor"
"pb2bv_model_converter","controller","pb2bv_model_converter::~pb2bv_model_converter","destructor"
"pb2bv_model_converter","controller","pb2bv_model_converter::get_units","controller stateless"
"pb2bv_model_converter","controller","pb2bv_model_converter::operator()","command collaborator"
"pb2bv_model_converter","controller","pb2bv_model_converter::display","controller"
"pb2bv_model_converter","controller","pb2bv_model_converter::translate","property controller"
"check_relation_plugin::filter_proj_fn","controller small-class","operator()","property controller"
"contains_predicate_proc","commander degenerate","operator()","empty"
"contains_predicate_proc","commander degenerate","operator()","empty"
"contains_predicate_proc","commander degenerate","operator()","command collaborator"
"sexpr_numeral","empty","sexpr_numeral","constructor"
"sexpr_numeral","empty","sexpr_numeral","constructor"
"interval_relation_plugin::filter_identical_fn","commander boundary small-class","operator()","command collaborator"
"pob_gt_proc","boundary degenerate small-class","operator()","wrapper stateless"
"user_sort_factory","boundary","is_finite","predicate collaborator"
"user_sort_factory","boundary","get_finite_sorts","get collaborator"
"user_sort_factory","boundary","user_sort_factory::user_sort_factory","constructor"
"user_sort_factory","boundary","user_sort_factory::freeze_universe","command collaborator"
"user_sort_factory","boundary","user_sort_factory::get_known_universe","get controller"
"user_sort_factory","boundary","user_sort_factory::get_some_value","property non-void-command collaborator"
"user_sort_factory","boundary","user_sort_factory::get_some_values","predicate non-void-command collaborator"
"user_sort_factory","boundary","user_sort_factory::get_fresh_value","property non-void-command collaborator"
"user_sort_factory","boundary","user_sort_factory::register_value","command collaborator"
"user_sort_factory","boundary","user_sort_factory::mk_value_core","property non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","~imp","destructor"
"symmetry_reduce_tactic::imp","boundary","operator()","command collaborator"
"symmetry_reduce_tactic::imp","boundary","to_formula","void-accessor command collaborator"
"symmetry_reduce_tactic::imp","boundary","find_candidate_permutations","command collaborator"
"symmetry_reduce_tactic::imp","boundary","merge_colors","controller stateless"
"symmetry_reduce_tactic::imp","boundary","compute_sort_colors","controller stateless"
"symmetry_reduce_tactic::imp","boundary","compute_inv_app","command collaborator"
"symmetry_reduce_tactic::imp","boundary","is_uninterpreted","controller stateless"
"symmetry_reduce_tactic::imp","boundary","compute_max_depth","controller stateless"
"symmetry_reduce_tactic::imp","boundary","compute_parents","empty"
"symmetry_reduce_tactic::imp","boundary","compute_siblings_rec","predicate non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","compute_siblings","command collaborator"
"symmetry_reduce_tactic::imp","boundary","invariant_by_permutations","predicate non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","check_swap","predicate non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","check_cycle","predicate non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","check_substitution","predicate non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","normalize","void-accessor controller"
"symmetry_reduce_tactic::imp","boundary","select_terms","void-accessor command collaborator"
"symmetry_reduce_tactic::imp","boundary","is_range_restriction","predicate non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","compute_occurrences","controller stateless"
"symmetry_reduce_tactic::imp","boundary","select_most_promising_term","property non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","compute_used_in","wrapper stateless"
"symmetry_reduce_tactic::imp","boundary","compute_cts_delta","non-void-command collaborator"
"symmetry_reduce_tactic::imp","boundary","select_const","controller stateless"
"symmetry_reduce_tactic::imp","boundary","mk_member","property non-void-command collaborator"
"_scoped_numeral","boundary","_scoped_numeral","constructor"
"_scoped_numeral","boundary","_scoped_numeral","copy-constructor"
"_scoped_numeral","boundary","_scoped_numeral","copy-constructor"
"_scoped_numeral","boundary","~_scoped_numeral","destructor"
"_scoped_numeral","boundary","m","get collaborator"
"_scoped_numeral","boundary","","get collaborator"
"_scoped_numeral","boundary","operatornumeral&","get"
"_scoped_numeral","boundary","get","get collaborator"
"_scoped_numeral","boundary","get","get collaborator"
"_scoped_numeral","boundary","operator=","get non-void-command"
"_scoped_numeral","boundary","operator=","get non-void-command"
"_scoped_numeral","boundary","operator=","get non-void-command collaborator"
"_scoped_numeral","boundary","reset","command"
"_scoped_numeral","boundary","swap","command"
"_scoped_numeral","boundary","swap","command collaborator"
"_scoped_numeral","boundary","operator+=","get non-void-command collaborator"
"_scoped_numeral","boundary","operator-=","get non-void-command collaborator"
"_scoped_numeral","boundary","operator*=","get non-void-command collaborator"
"_scoped_numeral","boundary","operator/=","get non-void-command collaborator"
"_scoped_numeral","boundary","operator%=","get non-void-command collaborator"
"_scoped_numeral","boundary","operator==","controller stateless"
"_scoped_numeral","boundary","operator!=","controller stateless"
"_scoped_numeral","boundary","operator<","controller stateless"
"_scoped_numeral","boundary","operator>","controller stateless"
"_scoped_numeral","boundary","operator<=","controller stateless"
"_scoped_numeral","boundary","operator>=","controller stateless"
"_scoped_numeral","boundary","is_zero","predicate"
"_scoped_numeral","boundary","is_pos","predicate"
"_scoped_numeral","boundary","is_neg","predicate"
"_scoped_numeral","boundary","is_nonpos","predicate"
"_scoped_numeral","boundary","is_nonneg","predicate"
"_scoped_numeral","boundary","is_zero","predicate non-void-command"
"_scoped_numeral","boundary","is_pos","predicate non-void-command"
"_scoped_numeral","boundary","is_neg","predicate non-void-command"
"_scoped_numeral","boundary","is_nonneg","predicate non-void-command"
"_scoped_numeral","boundary","is_nonpos","predicate non-void-command"
"_scoped_numeral","boundary","abs","property non-void-command"
"_scoped_numeral","boundary","neg","command"
"_scoped_numeral","boundary","operator+","property non-void-command collaborator"
"_scoped_numeral","boundary","operator-","property non-void-command collaborator"
"_scoped_numeral","boundary","operator*","property non-void-command collaborator"
"_scoped_numeral","boundary","operator/","property non-void-command collaborator"
"_scoped_numeral","boundary","operator<<","wrapper stateless"
"simple_factory","entity boundary","get_value_set","property non-void-command collaborator"
"simple_factory","entity boundary","mk_value","property non-void-command factory collaborator"
"simple_factory","entity boundary","~simple_factory","destructor"
"simple_factory","entity boundary","get_some_value","property non-void-command collaborator"
"simple_factory","entity boundary","get_some_values","predicate non-void-command collaborator"
"simple_factory","entity boundary","get_fresh_value","property non-void-command collaborator"
"simple_factory","entity boundary","register_value","command collaborator"
"simple_factory","entity boundary","mk_value","property non-void-command collaborator"
"simple_factory","entity boundary","get_num_sorts","unclassified"
"simple_factory","entity boundary","get_sort","property collaborator"
"seq_factory","entity commander boundary","seq_factory","constructor"
"seq_factory","entity commander boundary","add_trail","command collaborator"
"seq_factory","entity commander boundary","set_prefix","set"
"seq_factory","entity commander boundary","set_prefix","command collaborator"
"seq_factory","entity commander boundary","get_some_value","property non-void-command collaborator"
"seq_factory","entity commander boundary","get_some_values","predicate non-void-command collaborator"
"seq_factory","entity commander boundary","get_fresh_value","property non-void-command collaborator"
"seq_factory","entity commander boundary","register_value","command collaborator"
"seq_factory","entity commander boundary","add_new_delim","set collaborator"
"ptr_buffer","pure-controller degenerate small-class","append","controller stateless"
"tmp_enode","entity boundary","get_enode","property collaborator"
"tmp_enode","entity boundary","tmp_enode::tmp_enode","constructor"
"tmp_enode","entity boundary","tmp_enode::~tmp_enode","destructor"
"tmp_enode","entity boundary","tmp_enode::set_capacity","command collaborator"
"tmp_enode","entity boundary","tmp_enode::set","property non-void-command collaborator"
"tmp_enode","entity boundary","tmp_enode::reset","command"
"arith_factory","entity boundary small-class","arith_factory::mk_value_core","property non-void-command collaborator"
"arith_factory","entity boundary small-class","arith_factory::arith_factory","constructor"
"arith_factory","entity boundary small-class","arith_factory::~arith_factory","destructor"
"arith_factory","entity boundary small-class","arith_factory::mk_num_value","property non-void-command collaborator"
"hint_macro_solver","commander boundary","get_f_defs","get collaborator"
"hint_macro_solver","commander boundary","get_q_f","get collaborator"
"hint_macro_solver","commander boundary","~hint_macro_solver","destructor"
"hint_macro_solver","commander boundary","hint_macro_solver::insert_q_f","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::insert_f2def","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::insert_q_f_def","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::get_q_f_def","property non-void-command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::reset_q_fs","command"
"hint_macro_solver","commander boundary","hint_macro_solver::is_candidate","predicate collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::register_decls_as_forbidden","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::preprocess","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::mk_q_f_defs","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::display_quantifier_set","controller stateless"
"hint_macro_solver","commander boundary","hint_macro_solver::display_qcandidates","collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::display_search_state","controller"
"hint_macro_solver","commander boundary","hint_macro_solver::check_satisfied_residue_invariant","incidental"
"hint_macro_solver","commander boundary","hint_macro_solver::update_satisfied_residue","predicate non-void-command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::get_candidates_from_residue","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::greedy","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::is_cyclic","predicate non-void-command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::is_acyclic","predicate non-void-command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::greedy","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::process","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::copy_non_satisfied","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::set_interp","command collaborator"
"hint_macro_solver","commander boundary","hint_macro_solver::reset","command"
"hint_macro_solver","commander boundary","hint_macro_solver::process","predicate non-void-command collaborator"
"ref_pair_vector_core","boundary","inc_ref","command collaborator"
"ref_pair_vector_core","boundary","dec_ref","command collaborator"
"ref_pair_vector_core","boundary","inc_ref","command collaborator"
"ref_pair_vector_core","boundary","dec_ref","command collaborator"
"ref_pair_vector_core","boundary","dec_range_ref","command collaborator"
"ref_pair_vector_core","boundary","ref_pair_vector_core","constructor"
"ref_pair_vector_core","boundary","~ref_pair_vector_core","destructor"
"ref_pair_vector_core","boundary","reset","command"
"ref_pair_vector_core","boundary","finalize","command"
"ref_pair_vector_core","boundary","resize","command"
"ref_pair_vector_core","boundary","resize","command collaborator"
"ref_pair_vector_core","boundary","reserve","command"
"ref_pair_vector_core","boundary","shrink","command"
"ref_pair_vector_core","boundary","push_back","get non-void-command collaborator"
"ref_pair_vector_core","boundary","push_back","get non-void-command collaborator"
"ref_pair_vector_core","boundary","push_back","get non-void-command collaborator"
"ref_pair_vector_core","boundary","pop_back","command collaborator"
"ref_pair_vector_core","boundary","back","property collaborator"
"ref_pair_vector_core","boundary","size","unclassified"
"ref_pair_vector_core","boundary","empty","predicate"
"ref_pair_vector_core","boundary","get","get collaborator"
"ref_pair_vector_core","boundary","data","property collaborator"
"ref_pair_vector_core","boundary","begin","property collaborator"
"ref_pair_vector_core","boundary","end","property collaborator"
"ref_pair_vector_core","boundary","operator[]","get collaborator"
"ref_pair_vector_core","boundary","append","command"
"ref_pair_vector_core","boundary","swap","command"
"ref_pair_vector_core","boundary","reverse","command"
"bound_relation_helper","pure-controller degenerate small-class","bound_relation_helper::mk_project_t","controller stateless"
"implicant_picker","entity commander boundary","add_literal","command collaborator"
"implicant_picker","entity commander boundary","process_app","command collaborator"
"implicant_picker","entity commander boundary","pick_literals","command collaborator"
"implicant_picker","entity commander boundary","pick_implicant","predicate non-void-command collaborator"
"implicant_picker","entity commander boundary","implicant_picker","constructor"
"implicant_picker","entity commander boundary","operator()","command collaborator"
"base_macro_solver","commander boundary","get_qinfo","wrapper stateless"
"base_macro_solver","commander boundary","base_macro_solver","constructor"
"base_macro_solver","commander boundary","base_macro_solver::set_else_interp","command collaborator"
"base_macro_solver","commander boundary","base_macro_solver::operator()","set collaborator"
"bit_matrix","boundary","begin","property wrapper"
"bit_matrix","boundary","end","property wrapper"
"bit_matrix","boundary","bit_matrix::reset","command"
"bit_matrix","boundary","bit_matrix::add_row","property non-void-command collaborator"
"bit_matrix","boundary","bit_matrix::solve","command"
"bit_matrix","boundary","bit_matrix::basic_solve","controller"
"bit_matrix","boundary","bit_matrix::display","property collaborator"
"bit_matrix","boundary","bit_matrix::gray","property non-void-command collaborator"
"mk_extract_proc","entity boundary","m","property non-void-command collaborator"
"mk_extract_proc","entity boundary","bvutil","get collaborator"
"mk_extract_proc","entity boundary","mk_extract_proc::mk_extract_proc","constructor"
"mk_extract_proc","entity boundary","mk_extract_proc::~mk_extract_proc","destructor"
"mk_extract_proc","entity boundary","mk_extract_proc::operator()","property non-void-command collaborator"
"dummy_del_eh","commander boundary data-class small-class","dummy_del_eh","constructor"
"dummy_del_eh","commander boundary data-class small-class","operator()","set collaborator"
"model_implicant","commander boundary","is_unknown","controller stateless"
"model_implicant","commander boundary","set_unknown","controller stateless"
"model_implicant","commander boundary","is_x","controller stateless"
"model_implicant","commander boundary","is_false","controller stateless"
"model_implicant","commander boundary","is_true","controller stateless"
"model_implicant","commander boundary","set_x","command collaborator"
"model_implicant","commander boundary","set_v","command collaborator"
"model_implicant","commander boundary","set_false","command collaborator"
"model_implicant","commander boundary","set_true","command collaborator"
"model_implicant","commander boundary","set_bool","command"
"model_implicant","commander boundary","get_number","property collaborator"
"model_implicant","commander boundary","set_number","command collaborator"
"model_implicant","commander boundary","get_value","property non-void-command collaborator"
"model_implicant","commander boundary","set_value","command collaborator"
"model_implicant","commander boundary","model_implicant","constructor"
"model_implicant","commander boundary","operator()","empty"
"model_implicant","commander boundary","model_implicant::assign_value","command collaborator"
"model_implicant","commander boundary","model_implicant::setup_model","command collaborator"
"model_implicant","commander boundary","model_implicant::reset","command"
"model_implicant","commander boundary","model_implicant::minimize_model","property non-void-command collaborator"
"model_implicant","commander boundary","model_implicant::minimize_literals","property non-void-command collaborator"
"model_implicant","commander boundary","model_implicant::process_formula","command collaborator"
"model_implicant","commander boundary","model_implicant::collect","command collaborator"
"model_implicant","commander boundary","model_implicant::prune_by_cone_of_influence","property non-void-command collaborator"
"model_implicant","commander boundary","model_implicant::eval_arith","command collaborator"
"model_implicant","commander boundary","model_implicant::inherit_value","command collaborator"
"model_implicant","commander boundary","model_implicant::eval_exprs","void-accessor command collaborator"
"model_implicant","commander boundary","model_implicant::extract_array_func_interp","predicate non-void-command collaborator"
"model_implicant","commander boundary","model_implicant::eval_array_eq","command collaborator"
"model_implicant","commander boundary","model_implicant::eval_eq","command collaborator"
"model_implicant","commander boundary","model_implicant::eval_basic","command collaborator"
"model_implicant","commander boundary","model_implicant::check_model","predicate non-void-command collaborator"
"model_implicant","commander boundary","model_implicant::eval","property non-void-command collaborator"
"model_implicant","commander boundary","model_implicant::eval","property non-void-command collaborator"
"qinfo","degenerate","qinfo","constructor"
"qinfo","degenerate","display","wrapper stateless"
"qinfo","degenerate","populate_inst_sets2","empty"
"qinfo","degenerate","populate_inst_sets","empty"
"model_core","entity boundary","model_core","constructor"
"model_core","entity boundary","get_manager","get collaborator"
"model_core","entity boundary","get_num_decls","unclassified"
"model_core","entity boundary","get_decl","get collaborator"
"model_core","entity boundary","has_interpretation","predicate collaborator"
"model_core","entity boundary","get_const_interp","property collaborator"
"model_core","entity boundary","get_func_interp","property collaborator"
"model_core","entity boundary","is_true_decl","predicate collaborator"
"model_core","entity boundary","is_false_decl","predicate collaborator"
"model_core","entity boundary","get_num_constants","unclassified"
"model_core","entity boundary","get_num_functions","unclassified"
"model_core","entity boundary","get_constant","get collaborator"
"model_core","entity boundary","get_function","get collaborator"
"model_core","entity boundary","get_some_const_interp","property non-void-command collaborator"
"model_core","entity boundary","inc_ref","set"
"model_core","entity boundary","dec_ref","set"
"model_core","entity boundary","model_core::~model_core","destructor"
"model_core","entity boundary","model_core::eval","predicate collaborator"
"model_core","entity boundary","model_core::register_decl","command collaborator"
"model_core","entity boundary","model_core::register_decl","command collaborator"
"model_core","entity boundary","model_core::update_func_interp","property non-void-command collaborator"
"model_core","entity boundary","model_core::unregister_decl","command collaborator"
"model_core","entity boundary","model_core::add_lambda_defs","command collaborator"
"x_neq_t","pure-controller","x_neq_t","constructor"
"x_neq_t","pure-controller","get_kind","incidental"
"x_neq_t","pure-controller","process_auf","controller"
"x_neq_t","pure-controller","populate_inst_sets","controller"
"mk_fresh_name","entity boundary","mk_fresh_name","constructor"
"mk_fresh_name","entity boundary","add","command collaborator"
"mk_fresh_name","entity boundary","contains","predicate collaborator"
"mk_fresh_name","entity boundary","mk_fresh_name::add","wrapper"
"mk_fresh_name","entity boundary","mk_fresh_name::next","property non-void-command collaborator"
"arith_extract_eq","commander boundary","solve_mod","command collaborator"
"arith_extract_eq","commander boundary","solve_to_real","command collaborator"
"arith_extract_eq","commander boundary","solve_add","command collaborator"
"arith_extract_eq","commander boundary","solve_mul","command collaborator"
"arith_extract_eq","commander boundary","mark_nonzero","command collaborator"
"arith_extract_eq","commander boundary","add_pos","command collaborator"
"arith_extract_eq","commander boundary","solve_eq","command collaborator"
"arith_extract_eq","commander boundary","arith_extract_eq","constructor"
"arith_extract_eq","commander boundary","get_eqs","command collaborator"
"arith_extract_eq","commander boundary","pre_process","command collaborator"
"arith_extract_eq","commander boundary","updt_params","command collaborator"
"model::deps_collector","commander small-class","operator()","command collaborator"
"model::deps_collector","commander small-class","operator()","empty"
"psort_app","boundary","finalize","command collaborator"
"psort_app","boundary","obj_size","incidental"
"psort_app","boundary","instantiate","property non-void-command collaborator"
"psort_app","boundary","hcons_kind","incidental"
"psort_app","boundary","hcons_hash","unclassified"
"psort_app","boundary","hcons_eq","predicate collaborator"
"psort_app","boundary","display","property collaborator"
"parametric_cmd","boundary","parametric_cmd","constructor"
"parametric_cmd","boundary","~parametric_cmd","destructor"
"parametric_cmd","boundary","ps","get collaborator"
"parametric_cmd","boundary","reset_params","command"
"parametric_cmd","boundary","get_arity","incidental"
"parametric_cmd","boundary","prepare","set collaborator"
"parametric_cmd","boundary","set_next_arg","set"
"parametric_cmd","boundary","set_next_arg","set"
"parametric_cmd","boundary","set_next_arg","set collaborator"
"parametric_cmd","boundary","set_next_arg","set"
"parametric_cmd","boundary","set_next_arg","wrapper stateless"
"parametric_cmd","boundary","set_next_arg","wrapper stateless"
"parametric_cmd","boundary","set_next_arg","wrapper stateless"
"parametric_cmd","boundary","set_next_arg","wrapper stateless"
"parametric_cmd","boundary","parametric_cmd::get_descr","property collaborator"
"parametric_cmd","boundary","parametric_cmd::next_arg_kind","property collaborator"
"parametric_cmd","boundary","parametric_cmd::set_next_arg","command collaborator"
"parametric_cmd","boundary","parametric_cmd::pdescrs","get controller"
"combined_solver","unclassified","switch_inc_mode","set"
"combined_solver","unclassified","updt_local_params","command collaborator"
"combined_solver","unclassified","get_manager","controller stateless"
"combined_solver","unclassified","has_quantifiers","predicate"
"combined_solver","unclassified","use_solver1_when_undef","predicate"
"combined_solver","unclassified","translate","property controller"
"combined_solver","unclassified","set_phase","controller stateless"
"combined_solver","unclassified","get_phase","controller stateless"
"combined_solver","unclassified","set_phase","controller stateless"
"combined_solver","unclassified","move_to_front","controller stateless"
"combined_solver","unclassified","updt_params","command collaborator"
"combined_solver","unclassified","collect_param_descrs","command collaborator"
"combined_solver","unclassified","set_produce_models","controller stateless"
"combined_solver","unclassified","assert_expr_core","command collaborator"
"combined_solver","unclassified","assert_expr_core2","command collaborator"
"combined_solver","unclassified","push","command"
"combined_solver","unclassified","pop","command"
"combined_solver","unclassified","get_scope_level","controller stateless"
"combined_solver","unclassified","get_consequences","property non-void-command collaborator"
"combined_solver","unclassified","check_sat_core","property non-void-command collaborator"
"combined_solver","unclassified","set_progress_callback","controller stateless"
"combined_solver","unclassified","get_num_assertions","controller stateless"
"combined_solver","unclassified","get_assertion","controller stateless"
"combined_solver","unclassified","get_num_assumptions","controller stateless"
"combined_solver","unclassified","cube","property non-void-command collaborator"
"combined_solver","unclassified","congruence_next","property non-void-command collaborator"
"combined_solver","unclassified","congruence_root","property non-void-command collaborator"
"combined_solver","unclassified","get_assumption","controller stateless"
"combined_solver","unclassified","display","controller stateless"
"combined_solver","unclassified","collect_statistics","controller"
"combined_solver","unclassified","get_unsat_core","controller"
"combined_solver","unclassified","get_model_core","controller"
"combined_solver","unclassified","get_levels","controller"
"combined_solver","unclassified","get_trail","property controller"
"combined_solver","unclassified","get_proof_core","property controller"
"combined_solver","unclassified","reason_unknown","property controller"
"combined_solver","unclassified","set_reason_unknown","controller stateless"
"combined_solver","unclassified","get_labels","controller"
"combined_solver","unclassified","register_on_clause","command collaborator"
"combined_solver","unclassified","user_propagate_init","command collaborator"
"combined_solver","unclassified","user_propagate_register_fixed","controller stateless"
"combined_solver","unclassified","user_propagate_register_final","controller stateless"
"combined_solver","unclassified","user_propagate_register_eq","controller stateless"
"combined_solver","unclassified","user_propagate_register_diseq","controller stateless"
"combined_solver","unclassified","user_propagate_register_expr","controller stateless"
"combined_solver","unclassified","user_propagate_register_created","controller stateless"
"combined_solver","unclassified","user_propagate_register_decide","controller stateless"
"combined_solver","unclassified","user_propagate_clear","controller stateless"
"config_mpfx","data-provider boundary data-class small-class","config_mpfx","constructor"
"config_mpfx","data-provider boundary data-class small-class","m","get collaborator"
"round_robing_var_selector","entity boundary small-class","next","void-accessor collaborator"
"round_robing_var_selector","entity boundary small-class","round_robing_var_selector","constructor"
"round_robing_var_selector","entity boundary small-class","operator()","property non-void-command collaborator"
"rule_counter","commander small-class","rule_counter","constructor"
"rule_counter","commander small-class","rule_counter::count_rule_vars","command"
"rule_counter","commander small-class","rule_counter::get_max_rule_var","non-void-command collaborator"
"config_mpq","data-provider boundary data-class small-class","m","get collaborator"
"justification_proof_wrapper","lazy-class","has_del_eh","incidental"
"justification_proof_wrapper","lazy-class","get_name","incidental"
"justification_proof_wrapper","lazy-class","justification_proof_wrapper::justification_proof_wrapper","constructor"
"justification_proof_wrapper","lazy-class","justification_proof_wrapper::del_eh","set collaborator"
"justification_proof_wrapper","lazy-class","justification_proof_wrapper::mk_proof","get collaborator"
"config_mpff","data-provider boundary data-class small-class","config_mpff","constructor"
"config_mpff","data-provider boundary data-class small-class","m","get collaborator"
"mpn_manager","data-provider boundary","mpn_manager::compare","property collaborator"
"mpn_manager","data-provider boundary","mpn_manager::add","predicate"
"mpn_manager","data-provider boundary","mpn_manager::sub","predicate collaborator"
"mpn_manager","data-provider boundary","mpn_manager::mul","predicate collaborator"
"mpn_manager","data-provider boundary","mpn_manager::div","predicate non-void-command collaborator"
"mpn_manager","data-provider boundary","mpn_manager::div_normalize","controller stateless"
"mpn_manager","data-provider boundary","mpn_manager::div_unnormalize","controller stateless"
"mpn_manager","data-provider boundary","mpn_manager::div_1","controller stateless"
"mpn_manager","data-provider boundary","mpn_manager::div_n","predicate collaborator"
"mpn_manager","data-provider boundary","mpn_manager::to_string","property"
"mpn_manager","data-provider boundary","mpn_manager::display_raw","incidental"
"mpn_manager","data-provider boundary","mpn_manager::trace","incidental"
"mpn_manager","data-provider boundary","mpn_manager::trace","incidental"
"mpn_manager","data-provider boundary","mpn_manager::trace_nl","incidental"
"ar_plugin","commander boundary","update_lambda","command collaborator"
"ar_plugin","commander boundary","get_lambda","get non-void-command collaborator"
"ar_plugin","commander boundary","inc_lambda","command collaborator"
"ar_plugin","commander boundary","insert_select","command collaborator"
"ar_plugin","commander boundary","check_select","command collaborator"
"ar_plugin","commander boundary","check_store0","command collaborator"
"ar_plugin","commander boundary","check_select_store","command collaborator"
"ar_plugin","commander boundary","check_store2","command collaborator"
"ar_plugin","commander boundary","reconcile_stores","command collaborator"
"ar_plugin","commander boundary","add_select_store_axiom","command collaborator"
"ar_plugin","commander boundary","same_array_sort","controller stateless"
"ar_plugin","commander boundary","beta_reduce","command collaborator"
"ar_plugin","commander boundary","eq","predicate non-void-command collaborator"
"ar_plugin","commander boundary","mk_eq_idxs","property non-void-command collaborator"
"ar_plugin","commander boundary","same_table","predicate non-void-command collaborator"
"ar_plugin","commander boundary","same_table","predicate non-void-command collaborator"
"ar_plugin","commander boundary","enforce_extensionality","command collaborator"
"ar_plugin","commander boundary","mk_array_value","property non-void-command collaborator"
"ar_plugin","commander boundary","ar_plugin","constructor"
"ar_plugin","commander boundary","reset","command"
"ar_plugin","commander boundary","check_term","command"
"ar_plugin","commander boundary","term_covered","predicate non-void-command collaborator"
"ar_plugin","commander boundary","sort_covered","predicate non-void-command collaborator"
"ar_plugin","commander boundary","model_value_core","property non-void-command collaborator"
"ar_plugin","commander boundary","model_value_core","property non-void-command collaborator"
"ar_plugin","commander boundary","populate_model","command collaborator"
"ar_plugin","commander boundary","max_rounds","incidental"
"ar_plugin","commander boundary","global_check","command collaborator"
"context_mpq_wrapper","entity boundary","context_mpq_wrapper","constructor"
"context_mpq_wrapper","entity boundary","qm","property collaborator"
"context_mpq_wrapper","entity boundary","mk_sum","property non-void-command collaborator"
"context_mpq_wrapper","entity boundary","mk_ineq","property non-void-command collaborator"
"inf_eps_rational","unclassified","hash","unclassified"
"inf_eps_rational","unclassified","swap","command"
"inf_eps_rational","unclassified","to_string","property"
"inf_eps_rational","unclassified","is_int64","predicate"
"inf_eps_rational","unclassified","is_uint64","predicate"
"inf_eps_rational","unclassified","is_rational","predicate"
"inf_eps_rational","unclassified","get_int64","property"
"inf_eps_rational","unclassified","get_uint64","property"
"inf_eps_rational","unclassified","get_numeral","get collaborator"
"inf_eps_rational","unclassified","get_rational","property collaborator"
"inf_eps_rational","unclassified","get_infinitesimal","property collaborator"
"inf_eps_rational","unclassified","get_infinity","get collaborator"
"inf_eps_rational","unclassified","is_finite","predicate"
"inf_eps_rational","unclassified","operator=","get set collaborator"
"inf_eps_rational","unclassified","operator+=","get non-void-command"
"inf_eps_rational","unclassified","operator-=","get non-void-command"
"inf_eps_rational","unclassified","operator-=","get set collaborator"
"inf_eps_rational","unclassified","operator+=","get set collaborator"
"inf_eps_rational","unclassified","operator+=","get set collaborator"
"inf_eps_rational","unclassified","operator-=","get set collaborator"
"inf_eps_rational","unclassified","operator*=","get non-void-command collaborator"
"inf_eps_rational","unclassified","operator/=","get non-void-command collaborator"
"inf_eps_rational","unclassified","operator++","get set"
"inf_eps_rational","unclassified","operator++","property"
"inf_eps_rational","unclassified","operator--","get set"
"inf_eps_rational","unclassified","operator--","property"
"inf_eps_rational","unclassified","operator==","incidental"
"inf_eps_rational","unclassified","operator==","controller stateless"
"inf_eps_rational","unclassified","operator==","controller stateless"
"inf_eps_rational","unclassified","operator<","incidental"
"inf_eps_rational","unclassified","operator<","controller stateless"
"inf_eps_rational","unclassified","operator<","controller stateless"
"inf_eps_rational","unclassified","neg","command"
"inf_eps_rational","unclassified","is_zero","predicate"
"inf_eps_rational","unclassified","is_one","predicate"
"inf_eps_rational","unclassified","is_minus_one","predicate"
"inf_eps_rational","unclassified","is_neg","predicate"
"inf_eps_rational","unclassified","is_pos","predicate"
"inf_eps_rational","unclassified","is_nonneg","predicate"
"inf_eps_rational","unclassified","is_nonpos","predicate"
"inf_eps_rational","unclassified","floor","get non-void-command collaborator"
"inf_eps_rational","unclassified","ceil","get non-void-command collaborator"
"inf_eps_rational","unclassified","addmul","command"
"inf_eps_rational","unclassified","submul","command"
"user_propagator_internal_maximisation","empty","user_propagator_internal_maximisation","constructor"
"model_based_opt","boundary","objective","get collaborator"
"model_based_opt","boundary","is_int","get"
"model_based_opt","boundary","model_based_opt::model_based_opt","constructor"
"model_based_opt","boundary","model_based_opt::invariant","predicate non-void-command"
"model_based_opt","boundary","model_based_opt::invariant","predicate non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::maximize","property non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::update_value","command collaborator"
"model_based_opt","boundary","model_based_opt::update_values","command collaborator"
"model_based_opt","boundary","model_based_opt::find_bound","predicate non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::retire_row","command"
"model_based_opt","boundary","model_based_opt::eval","get collaborator"
"model_based_opt","boundary","model_based_opt::eval","property collaborator"
"model_based_opt","boundary","model_based_opt::eval","property collaborator"
"model_based_opt","boundary","model_based_opt::eval","property collaborator"
"model_based_opt","boundary","model_based_opt::get_coefficient","get wrapper"
"model_based_opt","boundary","model_based_opt::resolve","command collaborator"
"model_based_opt","boundary","model_based_opt::solve","command collaborator"
"model_based_opt","boundary","model_based_opt::mul_add","command collaborator"
"model_based_opt","boundary","model_based_opt::mk_coeffs_without","controller stateless"
"model_based_opt","boundary","model_based_opt::n_sign","controller stateless"
"model_based_opt","boundary","model_based_opt::mul","controller"
"model_based_opt","boundary","model_based_opt::add","collaborator"
"model_based_opt","boundary","model_based_opt::sub","collaborator"
"model_based_opt","boundary","model_based_opt::normalize","command collaborator"
"model_based_opt","boundary","model_based_opt::mul_add","command"
"model_based_opt","boundary","model_based_opt::display","collaborator"
"model_based_opt","boundary","model_based_opt::display","controller stateless"
"model_based_opt","boundary","model_based_opt::display","property non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::display","property non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::add_var","controller stateless"
"model_based_opt","boundary","model_based_opt::get_value","get collaborator"
"model_based_opt","boundary","model_based_opt::set_row","command collaborator"
"model_based_opt","boundary","model_based_opt::new_row","non-void-command"
"model_based_opt","boundary","model_based_opt::copy_row","non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::add_lower_bound","command collaborator"
"model_based_opt","boundary","model_based_opt::add_upper_bound","command collaborator"
"model_based_opt","boundary","model_based_opt::add_constraint","command collaborator"
"model_based_opt","boundary","model_based_opt::add_divides","command collaborator"
"model_based_opt","boundary","model_based_opt::add_mod","non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::add_div","non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::add_constraint","non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::set_objective","command collaborator"
"model_based_opt","boundary","model_based_opt::get_live_rows","controller"
"model_based_opt","boundary","model_based_opt::project","property non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::solve_mod_div","property non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::solve_divides","property non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::replace_var","command collaborator"
"model_based_opt","boundary","model_based_opt::replace_var","command collaborator"
"model_based_opt","boundary","model_based_opt::replace_var","command collaborator"
"model_based_opt","boundary","model_based_opt::solve_for","property non-void-command collaborator"
"model_based_opt","boundary","model_based_opt::eliminate","controller"
"model_based_opt","boundary","model_based_opt::project","get non-void-command collaborator"
"sls_test","entity commander boundary","sls_test","constructor"
"sls_test","entity commander boundary","check_eval","command collaborator"
"sls_test","entity commander boundary","check_eval","command collaborator"
"sls_test","entity commander boundary","create_exprs","property non-void-command collaborator"
"sls_test","entity commander boundary","check_repair","command collaborator"
"sls_test","entity commander boundary","check_repair_idx","command collaborator"
"sls_test","entity commander boundary","test_fixed","empty"
"rc_interval_pp","empty","rc_interval_pp","constructor"
"rc_interval_pp","empty","rc_interval_pp","constructor"
"contains_mod_proc","commander small-class","contains_mod_proc","constructor"
"contains_mod_proc","commander small-class","operator()","empty"
"contains_mod_proc","commander small-class","operator()","command collaborator"
"save_interval_ctx","empty","save_interval_ctx","constructor"
"save_interval_ctx","empty","~save_interval_ctx","destructor"
"sign_det","data-provider boundary","sign_det","constructor"
"sign_det","data-provider boundary","qs","get collaborator"
"sign_det","data-provider boundary","sc","get collaborator"
"sign_det","data-provider boundary","num_roots","unclassified"
"sign_det","data-provider boundary","taqrs","get"
"sign_det","data-provider boundary","prs","get collaborator"
"sls_valuation","data-provider boundary","set_signed","set"
"sls_valuation","data-provider boundary","num_bytes","unclassified"
"sls_valuation","data-provider boundary","bits","get collaborator"
"sls_valuation","data-provider boundary","bits","get collaborator"
"sls_valuation","data-provider boundary","get_bit","predicate"
"sls_valuation","data-provider boundary","try_set_bit","predicate non-void-command"
"sls_valuation","data-provider boundary","get_value","property collaborator"
"sls_valuation","data-provider boundary","get_eval","property collaborator"
"sls_valuation","data-provider boundary","lo","property collaborator"
"sls_valuation","data-provider boundary","hi","property collaborator"
"sls_valuation","data-provider boundary","has_range","predicate"
"sls_valuation","data-provider boundary","clear_overflow_bits","void-accessor collaborator"
"sls_valuation","data-provider boundary","eq","get"
"sls_valuation","data-provider boundary","eq","predicate collaborator"
"sls_valuation","data-provider boundary","is_zero","predicate"
"sls_valuation","data-provider boundary","is_zero","predicate collaborator"
"sls_valuation","data-provider boundary","is_ones","predicate"
"sls_valuation","data-provider boundary","is_ones","predicate collaborator"
"sls_valuation","data-provider boundary","is_one","predicate"
"sls_valuation","data-provider boundary","is_one","predicate collaborator"
"sls_valuation","data-provider boundary","sign","predicate"
"sls_valuation","data-provider boundary","has_overflow","predicate collaborator"
"sls_valuation","data-provider boundary","parity","controller stateless"
"sls_valuation","data-provider boundary","try_set","predicate non-void-command collaborator"
"sls_valuation","data-provider boundary","set","set collaborator"
"sls_valuation","data-provider boundary","set_zero","void-accessor collaborator"
"sls_valuation","data-provider boundary","set_one","void-accessor collaborator"
"sls_valuation","data-provider boundary","set_zero","command"
"sls_valuation","data-provider boundary","sub1","controller"
"sls_valuation","data-provider boundary","add1","controller"
"sls_valuation","data-provider boundary","set_range","controller stateless"
"sls_valuation","data-provider boundary","try_set_range","predicate non-void-command"
"sls_valuation","data-provider boundary","set","void-accessor"
"sls_valuation","data-provider boundary","set","void-accessor collaborator"
"sls_valuation","data-provider boundary","display","property collaborator"
"sls_valuation","data-provider boundary","well_formed","predicate"
"sls_valuation","data-provider boundary","sls_valuation::sls_valuation","constructor"
"sls_valuation","data-provider boundary","sls_valuation::set_bw","command"
"sls_valuation","data-provider boundary","sls_valuation::commit_eval","predicate non-void-command"
"sls_valuation","data-provider boundary","sls_valuation::in_range","predicate collaborator"
"sls_valuation","data-provider boundary","sls_valuation::get_at_most","predicate collaborator"
"sls_valuation","data-provider boundary","sls_valuation::get_at_least","predicate collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_random_at_most","predicate non-void-command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_random_at_least","predicate non-void-command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_random_in_range","predicate non-void-command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::round_down","command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::round_up","command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_random_above","void-accessor command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_random_below","command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_repair","predicate non-void-command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::min_feasible","void-accessor collaborator"
"sls_valuation","data-provider boundary","sls_valuation::max_feasible","void-accessor collaborator"
"sls_valuation","data-provider boundary","sls_valuation::msb","get collaborator"
"sls_valuation","data-provider boundary","sls_valuation::clz","get collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_value","command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::get","collaborator"
"sls_valuation","data-provider boundary","sls_valuation::random_bits","wrapper stateless"
"sls_valuation","data-provider boundary","sls_valuation::get_variant","void-accessor collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_random","predicate non-void-command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::repair_sign_bits","collaborator"
"sls_valuation","data-provider boundary","sls_valuation::can_set","predicate collaborator"
"sls_valuation","data-provider boundary","sls_valuation::to_nat","collaborator"
"sls_valuation","data-provider boundary","sls_valuation::shift_right","unclassified"
"sls_valuation","data-provider boundary","sls_valuation::add_range","command collaborator"
"sls_valuation","data-provider boundary","sls_valuation::diff_index","wrapper"
"sls_valuation","data-provider boundary","sls_valuation::inf_feasible","collaborator"
"sls_valuation","data-provider boundary","sls_valuation::sup_feasible","collaborator"
"sls_valuation","data-provider boundary","sls_valuation::tighten_range","command"
"sls_valuation","data-provider boundary","sls_valuation::set_sub","collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_add","predicate collaborator"
"sls_valuation","data-provider boundary","sls_valuation::set_mul","predicate"
"sls_valuation","data-provider boundary","sls_valuation::is_power_of2","predicate wrapper"
"rank_lt_proc","boundary degenerate small-class","operator()","wrapper stateless"
"rational_function_value","data-provider boundary data-class","rational_function_value","constructor"
"rational_function_value","data-provider boundary data-class","num","get collaborator"
"rational_function_value","data-provider boundary data-class","num","get collaborator"
"rational_function_value","data-provider boundary data-class","den","get collaborator"
"rational_function_value","data-provider boundary data-class","den","get collaborator"
"rational_function_value","data-provider boundary data-class","ext","get collaborator"
"rational_function_value","data-provider boundary data-class","depends_on_infinitesimals","get"
"rational_function_value","data-provider boundary data-class","set_depends_on_infinitesimals","set"
"lazy_param_descrs","commander boundary","apply","set collaborator"
"lazy_param_descrs","commander boundary","reset_mk","command"
"lazy_param_descrs","commander boundary","lazy_param_descrs","constructor"
"lazy_param_descrs","commander boundary","~lazy_param_descrs","destructor"
"lazy_param_descrs","commander boundary","deref","get non-void-command collaborator"
"lazy_param_descrs","commander boundary","append","command collaborator"
"rational_value","empty","rational_value","constructor"
"rule_transformer::plugin_comparator","pure-controller degenerate small-class","operator()","controller stateless"
"mpbq_config","boundary degenerate","set_rounding","set"
"mpbq_config","boundary degenerate","round_to_minus_inf","command"
"mpbq_config","boundary degenerate","round_to_plus_inf","command"
"mpbq_config","boundary degenerate","lower","collaborator incidental"
"mpbq_config","boundary degenerate","upper","collaborator incidental"
"mpbq_config","boundary degenerate","lower","collaborator incidental"
"mpbq_config","boundary degenerate","upper","collaborator incidental"
"mpbq_config","boundary degenerate","lower_is_open","controller stateless"
"mpbq_config","boundary degenerate","upper_is_open","controller stateless"
"mpbq_config","boundary degenerate","lower_is_inf","controller stateless"
"mpbq_config","boundary degenerate","upper_is_inf","controller stateless"
"mpbq_config","boundary degenerate","set_lower","command collaborator"
"mpbq_config","boundary degenerate","set_upper","command collaborator"
"mpbq_config","boundary degenerate","set_lower_is_open","incidental"
"mpbq_config","boundary degenerate","set_upper_is_open","incidental"
"mpbq_config","boundary degenerate","set_lower_is_inf","incidental"
"mpbq_config","boundary degenerate","set_upper_is_inf","incidental"
"mpbq_config","boundary degenerate","m","get collaborator"
"grobner_stats","boundary small-class","reset","wrapper"
"grobner_stats","boundary small-class","grobner_stats","constructor"
"elim_simplifier","commander small-class","elim_simplifier","constructor"
"elim_simplifier","commander small-class","name","incidental"
"elim_simplifier","commander small-class","reduce","command collaborator"
"product_relation_plugin::aligned_union_fn","entity commander boundary","mk_union_fn","command collaborator"
"product_relation_plugin::aligned_union_fn","entity commander boundary","init","command collaborator"
"product_relation_plugin::aligned_union_fn","entity commander boundary","can_do_inner_union","get"
"product_relation_plugin::aligned_union_fn","entity commander boundary","do_inner_union","wrapper"
"product_relation_plugin::aligned_union_fn","entity commander boundary","do_destructive_intersection","void-accessor command collaborator"
"product_relation_plugin::aligned_union_fn","entity commander boundary","do_intersection","command collaborator"
"product_relation_plugin::aligned_union_fn","entity commander boundary","do_delta_union","command collaborator"
"product_relation_plugin::aligned_union_fn","entity commander boundary","~aligned_union_fn","destructor"
"product_relation_plugin::aligned_union_fn","entity commander boundary","operator()","command collaborator"
"relation_manager::empty_signature_relation_join_fn","pure-controller degenerate small-class","operator()","controller stateless"
"factorization_degree_set","unclassified","factorization_degree_set","constructor"
"factorization_degree_set","unclassified","factorization_degree_set","constructor"
"factorization_degree_set","unclassified","max_degree","unclassified"
"factorization_degree_set","unclassified","swap","command"
"factorization_degree_set","unclassified","is_trivial","predicate"
"factorization_degree_set","unclassified","remove","command"
"factorization_degree_set","unclassified","in_set","predicate"
"factorization_degree_set","unclassified","intersect","set"
"factorization_degree_set","unclassified","display","collaborator"
"instr_mk_total","unclassified","instr_mk_total","constructor"
"instr_mk_total","unclassified","perform","predicate non-void-command collaborator"
"instr_mk_total","unclassified","display_head_impl","property collaborator"
"instr_mk_total","unclassified","make_annotations","controller"
"cost_recorder","commander small-class","finish","command"
"cost_recorder","commander small-class","cost_recorder::cost_recorder","constructor"
"cost_recorder","commander small-class","cost_recorder::~cost_recorder","destructor"
"cost_recorder","commander small-class","cost_recorder::start","command collaborator"
"diff_logic_bounds","boundary","diff_logic_bounds","constructor"
"diff_logic_bounds","boundary","reset","command collaborator"
"diff_logic_bounds","boundary","operator()","command collaborator"
"diff_logic_bounds","boundary","get_inf","get collaborator"
"diff_logic_bounds","boundary","get_sup","get collaborator"
"diff_logic_bounds","boundary","get_eq","get collaborator"
"sls_tracker","entity boundary","~sls_tracker","destructor"
"sls_tracker","entity boundary","updt_params","command collaborator"
"sls_tracker","entity boundary","adapt_top_sum","set"
"sls_tracker","entity boundary","set_top_sum","set"
"sls_tracker","entity boundary","get_top_sum","get"
"sls_tracker","entity boundary","get_top_exprs","get collaborator"
"sls_tracker","entity boundary","is_sat","predicate non-void-command collaborator"
"sls_tracker","entity boundary","set_value","command collaborator"
"sls_tracker","entity boundary","set_value","command collaborator"
"sls_tracker","entity boundary","get_value","property non-void-command collaborator"
"sls_tracker","entity boundary","get_value","property non-void-command collaborator"
"sls_tracker","entity boundary","set_score","command"
"sls_tracker","entity boundary","set_score","command collaborator"
"sls_tracker","entity boundary","get_score","property non-void-command collaborator"
"sls_tracker","entity boundary","get_score","property non-void-command collaborator"
"sls_tracker","entity boundary","set_score_prune","command"
"sls_tracker","entity boundary","get_score_prune","property non-void-command collaborator"
"sls_tracker","entity boundary","has_pos_occ","non-void-command collaborator"
"sls_tracker","entity boundary","has_neg_occ","non-void-command collaborator"
"sls_tracker","entity boundary","get_distance","non-void-command collaborator"
"sls_tracker","entity boundary","set_distance","command"
"sls_tracker","entity boundary","get_entry_point","property non-void-command collaborator"
"sls_tracker","entity boundary","get_entry_points","get collaborator"
"sls_tracker","entity boundary","has_uplinks","predicate non-void-command collaborator"
"sls_tracker","entity boundary","is_top_expr","predicate non-void-command collaborator"
"sls_tracker","entity boundary","get_uplinks","property non-void-command collaborator"
"sls_tracker","entity boundary","ucb_forget","command collaborator"
"sls_tracker","entity boundary","initialize","command collaborator"
"sls_tracker","entity boundary","calculate_expr_distances","command collaborator"
"sls_tracker","entity boundary","initialize","command collaborator"
"sls_tracker","entity boundary","increase_weight","command collaborator"
"sls_tracker","entity boundary","decrease_weight","command collaborator"
"sls_tracker","entity boundary","get_weight","non-void-command collaborator"
"sls_tracker","entity boundary","make_assertion","command collaborator"
"sls_tracker","entity boundary","break_assertion","command collaborator"
"sls_tracker","entity boundary","show_model","command collaborator"
"sls_tracker","entity boundary","set_model","command collaborator"
"sls_tracker","entity boundary","get_model","property non-void-command collaborator"
"sls_tracker","entity boundary","get_num_constants","non-void-command"
"sls_tracker","entity boundary","get_constants","get collaborator"
"sls_tracker","entity boundary","get_constant","get collaborator"
"sls_tracker","entity boundary","set_random_seed","command"
"sls_tracker","entity boundary","get_random_bv","property non-void-command collaborator"
"sls_tracker","entity boundary","get_random_bool","property non-void-command collaborator"
"sls_tracker","entity boundary","get_random_uint","non-void-command"
"sls_tracker","entity boundary","get_random","property non-void-command collaborator"
"sls_tracker","entity boundary","randomize","command collaborator"
"sls_tracker","entity boundary","reset","command collaborator"
"sls_tracker","entity boundary","setup_occs","command collaborator"
"sls_tracker","entity boundary","score_bool","property non-void-command collaborator"
"sls_tracker","entity boundary","score_bv","collaborator incidental"
"sls_tracker","entity boundary","value2mpz","command collaborator"
"sls_tracker","entity boundary","mpz2value","property non-void-command collaborator"
"sls_tracker","entity boundary","score","property non-void-command collaborator"
"sls_tracker","entity boundary","get_constants","get non-void-command collaborator"
"sls_tracker","entity boundary","get_unsat_constants_gsat","get property non-void-command collaborator"
"sls_tracker","entity boundary","get_unsat_constants_walksat","get non-void-command collaborator"
"sls_tracker","entity boundary","get_unsat_constants","get property non-void-command collaborator"
"sls_tracker","entity boundary","get_unsat_assertion","property non-void-command collaborator"
"sls_tracker","entity boundary","get_new_unsat_assertion","property non-void-command collaborator"
"sexpr2upolynomial_exception","empty","sexpr2upolynomial_exception::sexpr2upolynomial_exception","constructor"
"JavaExample","degenerate","injAxiom","controller stateless"
"JavaExample","degenerate","injAxiomAbs","controller stateless"
"JavaExample","degenerate","commAxiom","controller stateless"
"JavaExample","degenerate","simpleExample","controller stateless"
"JavaExample","degenerate","check","controller stateless"
"JavaExample","degenerate","solveTactical","controller stateless"
"JavaExample","degenerate","applyTactic","controller stateless"
"JavaExample","degenerate","prove","command collaborator"
"JavaExample","degenerate","prove","controller stateless"
"JavaExample","degenerate","disprove","command collaborator"
"JavaExample","degenerate","disprove","controller stateless"
"JavaExample","degenerate","modelConverterTest","command collaborator"
"JavaExample","degenerate","arrayExample1","controller stateless"
"JavaExample","degenerate","arrayExample2","command collaborator"
"JavaExample","degenerate","arrayExample3","command collaborator"
"JavaExample","degenerate","sudokuExample","controller stateless"
"JavaExample","degenerate","quantifierExample1","controller stateless"
"JavaExample","degenerate","quantifierExample2","controller stateless"
"JavaExample","degenerate","quantifierExample3","command collaborator"
"JavaExample","degenerate","quantifierExample4","command collaborator"
"JavaExample","degenerate","basicTests","command collaborator"
"JavaExample","degenerate","castingTest","controller stateless"
"JavaExample","degenerate","smt2FileTest","controller stateless"
"JavaExample","degenerate","logicExample","controller stateless"
"JavaExample","degenerate","parOrExample","controller stateless"
"JavaExample","degenerate","bigIntCheck","controller stateless"
"JavaExample","degenerate","findModelExample1","command collaborator"
"JavaExample","degenerate","findModelExample2","command collaborator"
"JavaExample","degenerate","proveExample1","command collaborator"
"JavaExample","degenerate","proveExample2","controller stateless"
"JavaExample","degenerate","pushPopExample1","controller stateless"
"JavaExample","degenerate","tupleExample","command collaborator"
"JavaExample","degenerate","bitvectorExample1","command collaborator"
"JavaExample","degenerate","bitvectorExample2","command collaborator"
"JavaExample","degenerate","parserExample1","command collaborator"
"JavaExample","degenerate","parserExample2","command collaborator"
"JavaExample","degenerate","parserExample3","command collaborator"
"JavaExample","degenerate","parserExample5","controller stateless"
"JavaExample","degenerate","iteExample","controller stateless"
"JavaExample","degenerate","enumExample","command collaborator"
"JavaExample","degenerate","listExample","command collaborator"
"JavaExample","degenerate","treeExample","command collaborator"
"JavaExample","degenerate","forestExample","command collaborator"
"JavaExample","degenerate","evalExample1","controller stateless"
"JavaExample","degenerate","evalExample2","controller stateless"
"JavaExample","degenerate","checkSmall","controller stateless"
"JavaExample","degenerate","findSmallModelExample","controller stateless"
"JavaExample","degenerate","simplifierExample","controller stateless"
"JavaExample","degenerate","unsatCoreAndProofExample","controller stateless"
"JavaExample","degenerate","unsatCoreAndProofExample2","controller stateless"
"JavaExample","degenerate","finiteDomainExample","controller stateless"
"JavaExample","degenerate","floatingPointExample1","command collaborator"
"JavaExample","degenerate","floatingPointExample2","controller stateless"
"JavaExample","degenerate","optimizeExample","controller stateless"
"JavaExample","degenerate","translationExample","controller stateless"
"JavaExample","degenerate","stringExample","controller stateless"
"escaped","data-provider small-class","escaped","constructor"
"escaped","data-provider small-class","escaped","constructor"
"escaped","data-provider small-class","escaped::end","property"
"escaped","data-provider small-class","escaped::display","collaborator"
"simplifier::blocked_clause_elim","entity boundary","insert","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","process_var","predicate non-void-command collaborator"
"simplifier::blocked_clause_elim","entity boundary","reached_max_cost","predicate"
"simplifier::blocked_clause_elim","entity boundary","operator()","command"
"simplifier::blocked_clause_elim","entity boundary","insert_queue","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","reset_intersection","set collaborator"
"simplifier::blocked_clause_elim","entity boundary","add_intersection","set collaborator"
"simplifier::blocked_clause_elim","entity boundary","resolution_intersection","predicate non-void-command collaborator"
"simplifier::blocked_clause_elim","entity boundary","check_abce_tautology","predicate non-void-command collaborator"
"simplifier::blocked_clause_elim","entity boundary","revisit_binary","predicate collaborator"
"simplifier::blocked_clause_elim","entity boundary","revisit_clause","predicate collaborator"
"simplifier::blocked_clause_elim","entity boundary","minimize_covered_clause","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","add_ala","predicate non-void-command collaborator"
"simplifier::blocked_clause_elim","entity boundary","add_cla","predicate non-void-command collaborator"
"simplifier::blocked_clause_elim","entity boundary","above_threshold","predicate"
"simplifier::blocked_clause_elim","entity boundary","reset_mark","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","cce","property non-void-command collaborator"
"simplifier::blocked_clause_elim","entity boundary","cce","property non-void-command collaborator"
"simplifier::blocked_clause_elim","entity boundary","cce","property non-void-command collaborator"
"simplifier::blocked_clause_elim","entity boundary","cce","command"
"simplifier::blocked_clause_elim","entity boundary","cce_binary","command"
"simplifier::blocked_clause_elim","entity boundary","process_cce_binary","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","cce_clauses","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","inc_bc","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","select_clause","predicate non-void-command"
"simplifier::blocked_clause_elim","entity boundary","block_covered_clause","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","block_covered_binary","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","bca","command"
"simplifier::blocked_clause_elim","entity boundary","bca","command collaborator"
"simplifier::blocked_clause_elim","entity boundary","all_tautology","predicate non-void-command collaborator"
"cache::imp","entity commander boundary","~imp","destructor"
"cache::imp","entity commander boundary","del_psc_chain_entry","command collaborator"
"cache::imp","entity commander boundary","del_factor_entry","command collaborator"
"cache::imp","entity commander boundary","reset_psc_chain_cache","command"
"cache::imp","entity commander boundary","reset_factor_cache","command"
"cache::imp","entity commander boundary","pid","collaborator"
"cache::imp","entity commander boundary","mk_unique","property non-void-command collaborator"
"cache::imp","entity commander boundary","psc_chain","void-accessor command collaborator"
"cache::imp","entity commander boundary","factor","void-accessor command collaborator"
"psc_chain_entry","empty","psc_chain_entry","constructor"
"case_split_queue","degenerate","assign_lit_eh","empty"
"case_split_queue","degenerate","internalize_instance_eh","empty"
"case_split_queue","degenerate","add_theory_aware_branching_info","empty"
"polynomial_exception","empty","polynomial_exception","constructor"
"dataflow_engine","entity commander boundary","init_bottom_up","command"
"dataflow_engine","entity commander boundary","init_top_down","command collaborator"
"dataflow_engine","entity commander boundary","step_bottom_up","set"
"dataflow_engine","entity commander boundary","step_top_down","command collaborator"
"dataflow_engine","entity commander boundary","done","get wrapper"
"dataflow_engine","entity commander boundary","dataflow_engine","constructor"
"dataflow_engine","entity commander boundary","~dataflow_engine","destructor"
"dataflow_engine","entity commander boundary","dump","command collaborator"
"dataflow_engine","entity commander boundary","run_bottom_up","command"
"dataflow_engine","entity commander boundary","run_top_down","command"
"dataflow_engine","entity commander boundary","get_fact","property collaborator"
"dataflow_engine","entity commander boundary","begin","property collaborator"
"dataflow_engine","entity commander boundary","end","property collaborator"
"dataflow_engine","entity commander boundary","join","command collaborator"
"dataflow_engine","entity commander boundary","intersect","command collaborator"
"sparse_table","boundary","get_at_offset","property collaborator"
"sparse_table","boundary","get_cell","property collaborator"
"sparse_table","boundary","set_cell","command collaborator"
"sparse_table","boundary","deallocate","command"
"sparse_table","boundary","row_count","unclassified"
"sparse_table","boundary","get_plugin","property collaborator"
"sparse_table","boundary","empty","predicate"
"sparse_table","boundary","get_size_estimate_rows","unclassified"
"sparse_table","boundary","knows_exact_size","incidental"
"sparse_table","boundary","sparse_table::sparse_table","copy-constructor"
"sparse_table","boundary","sparse_table::sparse_table","copy-constructor"
"sparse_table","boundary","sparse_table::clone","property collaborator"
"sparse_table","boundary","sparse_table::~sparse_table","destructor"
"sparse_table","boundary","sparse_table::reset","command"
"sparse_table","boundary","sparse_table::begin","property wrapper"
"sparse_table","boundary","sparse_table::end","property wrapper"
"sparse_table","boundary","sparse_table::get_key_indexer","property collaborator"
"sparse_table","boundary","sparse_table::reset_indexes","command collaborator"
"sparse_table","boundary","sparse_table::write_into_reserve","command collaborator"
"sparse_table","boundary","sparse_table::add_fact","predicate non-void-command collaborator"
"sparse_table","boundary","sparse_table::add_fact","command collaborator"
"sparse_table","boundary","sparse_table::add_reserve_content","predicate non-void-command"
"sparse_table","boundary","sparse_table::contains_fact","predicate controller"
"sparse_table","boundary","sparse_table::fetch_fact","predicate collaborator"
"sparse_table","boundary","sparse_table::ensure_fact","command collaborator"
"sparse_table","boundary","sparse_table::remove_fact","command collaborator"
"sparse_table","boundary","sparse_table::copy_columns","controller stateless"
"sparse_table","boundary","sparse_table::concatenate_rows","command"
"sparse_table","boundary","sparse_table::garbage_collect","command"
"sparse_table","boundary","sparse_table::self_agnostic_join_project","command"
"sparse_table","boundary","sparse_table::get_size_estimate_bytes","unclassified"
"manager","boundary","neq","predicate non-void-command collaborator"
"manager","boundary","neq","predicate non-void-command collaborator"
"manager","boundary","neq","predicate non-void-command collaborator"
"manager","boundary","gt","predicate non-void-command collaborator"
"manager","boundary","le","predicate non-void-command collaborator"
"manager","boundary","le","predicate non-void-command collaborator"
"manager","boundary","le","predicate non-void-command collaborator"
"manager","boundary","ge","predicate non-void-command collaborator"
"manager","boundary","ge","predicate non-void-command collaborator"
"manager","boundary","ge","predicate non-void-command collaborator"
"manager","boundary","display","wrapper stateless"
"manager","boundary","is_valid","predicate collaborator"
"manager","boundary","exact_pseudo_remainder","command collaborator"
"manager","boundary","pseudo_remainder","command collaborator"
"manager","boundary","exact_pseudo_division","command collaborator"
"manager","boundary","pseudo_division","command collaborator"
"manager","boundary","substitute","property non-void-command collaborator"
"manager","boundary","to_polynomial","property non-void-command collaborator"
"manager","boundary","translate","command collaborator"
"manager","boundary","operator<<","property non-void-command collaborator"
"manager","boundary","is_valid","predicate collaborator"
"manager","boundary","operator<<","property non-void-command collaborator"
"manager","boundary","reset","command collaborator"
"manager","boundary","has_zero_roots","predicate non-void-command collaborator"
"manager","boundary","translate","command collaborator"
"manager","boundary","translate_k","command collaborator"
"manager","boundary","translate_z","command collaborator"
"manager","boundary","translate_bq","command collaborator"
"manager","boundary","translate_q","command collaborator"
"manager","boundary","factor","predicate non-void-command collaborator"
"manager","boundary","display","property collaborator"
"manager","boundary","display","property collaborator"
"manager","boundary","neq","predicate non-void-command collaborator"
"manager","boundary","neq","predicate non-void-command collaborator"
"manager","boundary","neq","predicate non-void-command collaborator"
"manager","boundary","gt","predicate non-void-command collaborator"
"manager","boundary","le","predicate non-void-command collaborator"
"manager","boundary","le","predicate non-void-command collaborator"
"manager","boundary","le","predicate non-void-command collaborator"
"manager","boundary","ge","predicate non-void-command collaborator"
"manager","boundary","ge","predicate non-void-command collaborator"
"manager","boundary","ge","predicate non-void-command collaborator"
"manager","boundary","n_index","incidental"
"manager","boundary","o_index","incidental"
"manager","boundary","get_manager","get collaborator"
"manager","boundary","is_n_formula","predicate collaborator"
"manager","boundary","o2n","property collaborator"
"manager","boundary","o2o","property collaborator"
"manager","boundary","n2o","property collaborator"
"manager","boundary","formula_o2n","unclassified"
"manager","boundary","formula_n2o","unclassified"
"manager","boundary","formula_n2o","collaborator"
"manager","boundary","formula_o2o","unclassified"
"manager","boundary","manager::get_param_descrs","wrapper stateless"
"manager","boundary","manager::manager","copy-constructor"
"manager","boundary","manager::~manager","destructor"
"manager","boundary","manager::updt_params","empty"
"manager","boundary","manager::qm","property collaborator"
"manager","boundary","manager::bqm","property collaborator"
"manager","boundary","manager::del","command collaborator"
"manager","boundary","manager::reset","command collaborator"
"manager","boundary","manager::is_zero","predicate non-void-command collaborator"
"manager","boundary","manager::is_pos","predicate non-void-command collaborator"
"manager","boundary","manager::is_neg","predicate non-void-command collaborator"
"manager","boundary","manager::is_rational","predicate non-void-command collaborator"
"manager","boundary","manager::is_int","predicate non-void-command collaborator"
"manager","boundary","manager::degree","non-void-command collaborator"
"manager","boundary","manager::to_rational","command collaborator"
"manager","boundary","manager::to_rational","command collaborator"
"manager","boundary","manager::swap","command collaborator"
"manager","boundary","manager::int_lt","command collaborator"
"manager","boundary","manager::int_gt","command collaborator"
"manager","boundary","manager::select","command collaborator"
"manager","boundary","manager::set","command collaborator"
"manager","boundary","manager::set","command collaborator"
"manager","boundary","manager::set","command collaborator"
"manager","boundary","manager::set","command collaborator"
"manager","boundary","manager::isolate_roots","command collaborator"
"manager","boundary","manager::isolate_roots","command collaborator"
"manager","boundary","manager::isolate_roots","command collaborator"
"manager","boundary","manager::mk_root","command collaborator"
"manager","boundary","manager::mk_root","command collaborator"
"manager","boundary","manager::root","command collaborator"
"manager","boundary","manager::power","command collaborator"
"manager","boundary","manager::add","command collaborator"
"manager","boundary","manager::add","command collaborator"
"manager","boundary","manager::sub","command collaborator"
"manager","boundary","manager::mul","command collaborator"
"manager","boundary","manager::div","command collaborator"
"manager","boundary","manager::neg","command collaborator"
"manager","boundary","manager::inv","command collaborator"
"manager","boundary","manager::compare","property non-void-command collaborator"
"manager","boundary","manager::eq","predicate non-void-command collaborator"
"manager","boundary","manager::eq","predicate non-void-command collaborator"
"manager","boundary","manager::eq","predicate non-void-command collaborator"
"manager","boundary","manager::lt","predicate non-void-command collaborator"
"manager","boundary","manager::lt","predicate non-void-command collaborator"
"manager","boundary","manager::lt","predicate non-void-command collaborator"
"manager","boundary","manager::gt","predicate non-void-command collaborator"
"manager","boundary","manager::gt","predicate non-void-command collaborator"
"manager","boundary","manager::get_polynomial","command collaborator"
"manager","boundary","manager::get_i","non-void-command collaborator"
"manager","boundary","manager::get_lower","command collaborator"
"manager","boundary","manager::get_lower","command collaborator"
"manager","boundary","manager::get_lower","void-accessor command collaborator"
"manager","boundary","manager::get_lower","command"
"manager","boundary","manager::get_lower","void-accessor command collaborator"
"manager","boundary","manager::get_upper","command collaborator"
"manager","boundary","manager::get_upper","command collaborator"
"manager","boundary","manager::get_upper","void-accessor command collaborator"
"manager","boundary","manager::get_upper","command"
"manager","boundary","manager::get_upper","void-accessor command collaborator"
"manager","boundary","manager::eval_sign_at","property non-void-command collaborator"
"manager","boundary","manager::display_interval","property collaborator"
"manager","boundary","manager::display_decimal","property collaborator"
"manager","boundary","manager::display_root","property collaborator"
"manager","boundary","manager::display_mathematica","property collaborator"
"manager","boundary","manager::display_root_smt2","property collaborator"
"manager","boundary","manager::reset_statistics","command"
"manager","boundary","manager::collect_statistics","collaborator"
"manager","boundary","manager::id","controller stateless"
"manager","boundary","manager::id","controller stateless"
"manager","boundary","manager::is_unit","controller stateless"
"manager","boundary","manager::is_zero","controller stateless"
"manager","boundary","manager::is_const","predicate non-void-command collaborator"
"manager","boundary","manager::is_univariate","controller stateless"
"manager","boundary","manager::is_univariate","predicate non-void-command collaborator"
"manager","boundary","manager::size","controller stateless"
"manager","boundary","manager::coeff","controller stateless"
"manager","boundary","manager::univ_coeff","property non-void-command collaborator"
"manager","boundary","manager::get_monomial","controller stateless"
"manager","boundary","manager::total_degree","controller stateless"
"manager","boundary","manager::size","controller stateless"
"manager","boundary","manager::get_var","controller stateless"
"manager","boundary","manager::degree","controller stateless"
"manager","boundary","manager::degree_of","controller stateless"
"manager","boundary","manager::is_linear","controller stateless"
"manager","boundary","manager::is_linear","predicate non-void-command collaborator"
"manager","boundary","manager::degree","controller stateless"
"manager","boundary","manager::max_var","controller stateless"
"manager","boundary","manager::total_degree","non-void-command collaborator"
"manager","boundary","manager::manager","copy-constructor"
"manager","boundary","manager::manager","copy-constructor"
"manager","boundary","manager::~manager","destructor"
"manager","boundary","manager::m","property collaborator"
"manager","boundary","manager::mm","property collaborator"
"manager","boundary","manager::modular","predicate"
"manager","boundary","manager::p","property collaborator"
"manager","boundary","manager::set_z","command"
"manager","boundary","manager::set_zp","command collaborator"
"manager","boundary","manager::set_zp","command"
"manager","boundary","manager::is_var","predicate non-void-command collaborator"
"manager","boundary","manager::is_var","controller stateless"
"manager","boundary","manager::is_var_num","predicate non-void-command collaborator"
"manager","boundary","manager::allocator","property collaborator"
"manager","boundary","manager::add_del_eh","command collaborator"
"manager","boundary","manager::remove_del_eh","command collaborator"
"manager","boundary","manager::mk_var","property non-void-command collaborator"
"manager","boundary","manager::num_vars","unclassified"
"manager","boundary","manager::inc_ref","controller stateless"
"manager","boundary","manager::dec_ref","command collaborator"
"manager","boundary","manager::inc_ref","controller stateless"
"manager","boundary","manager::dec_ref","command collaborator"
"manager","boundary","manager::lex_sort","command collaborator"
"manager","boundary","manager::hash","controller stateless"
"manager","boundary","manager::hash","non-void-command collaborator"
"manager","boundary","manager::gcd_simplify","command collaborator"
"manager","boundary","manager::coeff","property non-void-command collaborator"
"manager","boundary","manager::coeff","property non-void-command collaborator"
"manager","boundary","manager::nonzero_const_coeff","predicate non-void-command"
"manager","boundary","manager::const_coeff","predicate non-void-command collaborator"
"manager","boundary","manager::mk_unit","property non-void-command collaborator"
"manager","boundary","manager::mk_monomial","property non-void-command collaborator"
"manager","boundary","manager::mk_monomial","property non-void-command collaborator"
"manager","boundary","manager::mk_monomial","property non-void-command collaborator"
"manager","boundary","manager::convert","property non-void-command collaborator"
"manager","boundary","manager::mul","property non-void-command collaborator"
"manager","boundary","manager::div","predicate non-void-command collaborator"
"manager","boundary","manager::div","predicate non-void-command collaborator"
"manager","boundary","manager::newton_interpolation","command collaborator"
"manager","boundary","manager::gcd","property non-void-command collaborator"
"manager","boundary","manager::unify","predicate non-void-command collaborator"
"manager","boundary","manager::pw","property non-void-command collaborator"
"manager","boundary","manager::mk_zero","property non-void-command collaborator"
"manager","boundary","manager::mk_const","property non-void-command collaborator"
"manager","boundary","manager::mk_const","property non-void-command collaborator"
"manager","boundary","manager::mk_polynomial","property non-void-command collaborator"
"manager","boundary","manager::mk_polynomial","property non-void-command collaborator"
"manager","boundary","manager::mk_polynomial","property non-void-command collaborator"
"manager","boundary","manager::mk_linear","property non-void-command collaborator"
"manager","boundary","manager::mk_linear","property non-void-command collaborator"
"manager","boundary","manager::mk_univariate","property non-void-command collaborator"
"manager","boundary","manager::neg","property non-void-command collaborator"
"manager","boundary","manager::add","property non-void-command collaborator"
"manager","boundary","manager::sub","property non-void-command collaborator"
"manager","boundary","manager::addmul","property non-void-command collaborator"
"manager","boundary","manager::addmul","property non-void-command collaborator"
"manager","boundary","manager::addmul","property non-void-command collaborator"
"manager","boundary","manager::mul","property non-void-command collaborator"
"manager","boundary","manager::mul","property non-void-command collaborator"
"manager","boundary","manager::mul","property non-void-command collaborator"
"manager","boundary","manager::mul","property non-void-command collaborator"
"manager","boundary","manager::mul","property non-void-command collaborator"
"manager","boundary","manager::pw","command collaborator"
"manager","boundary","manager::int_content","command collaborator"
"manager","boundary","manager::abs_norm","command collaborator"
"manager","boundary","manager::numeral_lc","property non-void-command collaborator"
"manager","boundary","manager::numeral_tc","property non-void-command collaborator"
"manager","boundary","manager::content","command collaborator"
"manager","boundary","manager::content","void-accessor command collaborator"
"manager","boundary","manager::primitive","void-accessor command collaborator"
"manager","boundary","manager::icpp","command collaborator"
"manager","boundary","manager::flip_sign_if_lm_neg","property non-void-command collaborator"
"manager","boundary","manager::gcd","command collaborator"
"manager","boundary","manager::derivative","property non-void-command collaborator"
"manager","boundary","manager::square_free","command collaborator"
"manager","boundary","manager::is_square_free","predicate non-void-command collaborator"
"manager","boundary","manager::square_free","command collaborator"
"manager","boundary","manager::is_square_free","predicate non-void-command collaborator"
"manager","boundary","manager::eq","predicate non-void-command collaborator"
"manager","boundary","manager::compose_y","property non-void-command collaborator"
"manager","boundary","manager::compose_minus_x","property non-void-command collaborator"
"manager","boundary","manager::compose_1_div_x","property non-void-command collaborator"
"manager","boundary","manager::compose_x_div_y","property non-void-command collaborator"
"manager","boundary","manager::compose","command collaborator"
"manager","boundary","manager::compose_x_minus_y","command collaborator"
"manager","boundary","manager::compose_x_plus_y","command collaborator"
"manager","boundary","manager::compose_x_minus_c","command collaborator"
"manager","boundary","manager::sqrt","predicate non-void-command collaborator"
"manager","boundary","manager::normalize","property non-void-command collaborator"
"manager","boundary","manager::exact_pseudo_remainder","command collaborator"
"manager","boundary","manager::pseudo_remainder","command collaborator"
"manager","boundary","manager::exact_pseudo_division","command collaborator"
"manager","boundary","manager::pseudo_division","command collaborator"
"manager","boundary","manager::exact_div","property non-void-command collaborator"
"manager","boundary","manager::exact_div","property non-void-command collaborator"
"manager","boundary","manager::divides","predicate non-void-command collaborator"
"manager","boundary","manager::quasi_resultant","command collaborator"
"manager","boundary","manager::resultant","command collaborator"
"manager","boundary","manager::discriminant","command collaborator"
"manager","boundary","manager::psc_chain","command collaborator"
"manager","boundary","manager::sign","property non-void-command collaborator"
"manager","boundary","manager::is_pos","predicate non-void-command collaborator"
"manager","boundary","manager::is_neg","predicate non-void-command collaborator"
"manager","boundary","manager::is_nonpos","predicate non-void-command collaborator"
"manager","boundary","manager::is_nonneg","predicate non-void-command collaborator"
"manager","boundary","manager::ge","predicate non-void-command collaborator"
"manager","boundary","manager::rename","command collaborator"
"manager","boundary","manager::vars","command collaborator"
"manager","boundary","manager::vars_incremental","command collaborator"
"manager","boundary","manager::begin_vars_incremental","command"
"manager","boundary","manager::end_vars_incremental","command collaborator"
"manager","boundary","manager::substitute","property non-void-command collaborator"
"manager","boundary","manager::substitute","property non-void-command collaborator"
"manager","boundary","manager::substitute","property non-void-command collaborator"
"manager","boundary","manager::substitute","command collaborator"
"manager","boundary","manager::factor","command collaborator"
"manager","boundary","manager::to_polynomial","property non-void-command collaborator"
"manager","boundary","manager::mk_glex_monic","property non-void-command collaborator"
"manager","boundary","manager::translate","property non-void-command collaborator"
"manager","boundary","manager::translate","command collaborator"
"manager","boundary","manager::mod_d","property non-void-command collaborator"
"manager","boundary","manager::exact_pseudo_division_mod_d","command collaborator"
"manager","boundary","manager::eval","command collaborator"
"manager","boundary","manager::eval","command collaborator"
"manager","boundary","manager::eval","command collaborator"
"manager","boundary","manager::display","controller stateless"
"manager","boundary","manager::display","property collaborator"
"manager","boundary","manager::display_smt2","property controller"
"manager","boundary","manager::manager","copy-constructor"
"manager","boundary","manager::~manager","destructor"
"manager","boundary","manager::is_zero","collaborator incidental"
"manager","boundary","manager::~manager","destructor"
"manager","boundary","manager::reset","command collaborator"
"manager","boundary","manager::remove_zero_roots","command collaborator"
"manager","boundary","manager::has_one_half_root","predicate non-void-command collaborator"
"manager","boundary","manager::remove_one_half_root","command collaborator"
"manager","boundary","manager::sign_of","property non-void-command collaborator"
"manager","boundary","manager::sign_changes","non-void-command collaborator"
"manager","boundary","manager::descartes_bound","non-void-command collaborator"
"manager","boundary","manager::descartes_bound_0_1","non-void-command collaborator"
"manager","boundary","manager::descartes_bound_a_b","non-void-command collaborator"
"manager","boundary","manager::translate","command collaborator"
"manager","boundary","manager::translate_k","command"
"manager","boundary","manager::translate_z","command collaborator"
"manager","boundary","manager::translate_bq","command collaborator"
"manager","boundary","manager::translate_q","command collaborator"
"manager","boundary","manager::compose_2n_p_x_div_2","command collaborator"
"manager","boundary","manager::p_minus_x","command collaborator"
"manager","boundary","manager::p_1_div_x","command collaborator"
"manager","boundary","manager::compose_p_2k_x","command"
"manager","boundary","manager::compose_2kn_p_x_div_2k","command"
"manager","boundary","manager::compose_an_p_x_div_a","command collaborator"
"manager","boundary","manager::compose_p_b_x","command collaborator"
"manager","boundary","manager::compose_p_b_x","command collaborator"
"manager","boundary","manager::compose_p_q_x","command collaborator"
"manager","boundary","manager::eval_sign_at","property non-void-command collaborator"
"manager","boundary","manager::eval_sign_at","property non-void-command collaborator"
"manager","boundary","manager::eval_sign_at","property non-void-command collaborator"
"manager","boundary","manager::eval_sign_at_zero","property non-void-command collaborator"
"manager","boundary","manager::eval_sign_at_plus_inf","property non-void-command collaborator"
"manager","boundary","manager::eval_sign_at_minus_inf","property non-void-command collaborator"
"manager","boundary","manager::sign_variations_at_core","non-void-command collaborator"
"manager","boundary","manager::sign_variations_at_minus_inf","wrapper stateless"
"manager","boundary","manager::sign_variations_at_plus_inf","wrapper stateless"
"manager","boundary","manager::sign_variations_at_zero","wrapper stateless"
"manager","boundary","manager::sign_variations_at","wrapper stateless"
"manager","boundary","manager::root_upper_bound","command collaborator"
"manager","boundary","manager::knuth_positive_root_upper_bound","non-void-command collaborator"
"manager","boundary","manager::knuth_negative_root_upper_bound","non-void-command collaborator"
"manager","boundary","manager::nonzero_root_lower_bound","non-void-command collaborator"
"manager","boundary","manager::pop_top_frame","command collaborator"
"manager","boundary","manager::push_child_frames","command collaborator"
"manager","boundary","manager::add_isolating_interval","command collaborator"
"manager","boundary","manager::add_root","command collaborator"
"manager","boundary","manager::drs_isolate_0_1_roots","command collaborator"
"manager","boundary","manager::drs_isolate_roots","command collaborator"
"manager","boundary","manager::drs_isolate_roots","command collaborator"
"manager","boundary","manager::sturm_isolate_roots_core","command collaborator"
"manager","boundary","manager::sturm_isolate_roots","command collaborator"
"manager","boundary","manager::sqf_nz_isolate_roots","command collaborator"
"manager","boundary","manager::sqf_isolate_roots","command collaborator"
"manager","boundary","manager::isolate_roots","command collaborator"
"manager","boundary","manager::sturm_seq_core","command collaborator"
"manager","boundary","manager::sturm_seq","command collaborator"
"manager","boundary","manager::sturm_seq","command collaborator"
"manager","boundary","manager::sturm_tarski_seq","command collaborator"
"manager","boundary","manager::fourier_seq","command collaborator"
"manager","boundary","manager::isolating2refinable","predicate non-void-command collaborator"
"manager","boundary","manager::refine_core","predicate non-void-command collaborator"
"manager","boundary","manager::refine","predicate non-void-command collaborator"
"manager","boundary","manager::refine_core","predicate non-void-command collaborator"
"manager","boundary","manager::refine","predicate non-void-command collaborator"
"manager","boundary","manager::convert_q2bq_interval","predicate non-void-command collaborator"
"manager","boundary","manager::normalize_interval_core","predicate non-void-command collaborator"
"manager","boundary","manager::normalize_interval","predicate non-void-command collaborator"
"manager","boundary","manager::get_root_id","non-void-command collaborator"
"manager","boundary","manager::flip_sign","command collaborator"
"manager","boundary","manager::factor_2_sqf_pp","command collaborator"
"manager","boundary","manager::factor_sqf_pp","predicate non-void-command collaborator"
"manager","boundary","manager::flip_factor_sign_if_lm_neg","command"
"manager","boundary","manager::factor_core","predicate non-void-command collaborator"
"manager","boundary","manager::factor","predicate non-void-command collaborator"
"manager","boundary","manager::display","property collaborator"
"manager","boundary","manager::manager","copy-constructor"
"manager","boundary","manager::~manager","destructor"
"manager","boundary","manager::get_param_descrs","wrapper stateless"
"manager","boundary","manager::updt_params","command collaborator"
"manager","boundary","manager::qm","property collaborator"
"manager","boundary","manager::del","command collaborator"
"manager","boundary","manager::mk_infinitesimal","command collaborator"
"manager","boundary","manager::mk_infinitesimal","command collaborator"
"manager","boundary","manager::mk_transcendental","command collaborator"
"manager","boundary","manager::mk_transcendental","command collaborator"
"manager","boundary","manager::mk_pi","command collaborator"
"manager","boundary","manager::mk_e","command collaborator"
"manager","boundary","manager::isolate_roots","command collaborator"
"manager","boundary","manager::reset","command collaborator"
"manager","boundary","manager::sign","property non-void-command collaborator"
"manager","boundary","manager::is_zero","predicate non-void-command collaborator"
"manager","boundary","manager::is_pos","predicate non-void-command collaborator"
"manager","boundary","manager::is_neg","predicate non-void-command collaborator"
"manager","boundary","manager::is_int","predicate non-void-command collaborator"
"manager","boundary","manager::is_rational","predicate non-void-command collaborator"
"manager","boundary","manager::is_algebraic","predicate non-void-command collaborator"
"manager","boundary","manager::is_infinitesimal","predicate non-void-command collaborator"
"manager","boundary","manager::is_transcendental","predicate non-void-command collaborator"
"manager","boundary","manager::depends_on_infinitesimals","predicate non-void-command collaborator"
"manager","boundary","manager::set","command"
"manager","boundary","manager::set","command collaborator"
"manager","boundary","manager::set","command collaborator"
"manager","boundary","manager::set","command collaborator"
"manager","boundary","manager::swap","command collaborator"
"manager","boundary","manager::root","command collaborator"
"manager","boundary","manager::power","command collaborator"
"manager","boundary","manager::add","command collaborator"
"manager","boundary","manager::add","command collaborator"
"manager","boundary","manager::sub","command collaborator"
"manager","boundary","manager::mul","command collaborator"
"manager","boundary","manager::neg","command collaborator"
"manager","boundary","manager::neg","command collaborator"
"manager","boundary","manager::inv","command collaborator"
"manager","boundary","manager::inv","command collaborator"
"manager","boundary","manager::div","command collaborator"
"manager","boundary","manager::compare","property non-void-command collaborator"
"manager","boundary","manager::eq","predicate non-void-command collaborator"
"manager","boundary","manager::eq","predicate non-void-command collaborator"
"manager","boundary","manager::eq","predicate non-void-command collaborator"
"manager","boundary","manager::lt","predicate non-void-command collaborator"
"manager","boundary","manager::lt","predicate non-void-command collaborator"
"manager","boundary","manager::lt","predicate non-void-command collaborator"
"manager","boundary","manager::gt","predicate non-void-command collaborator"
"manager","boundary","manager::gt","predicate non-void-command collaborator"
"manager","boundary","manager::display","collaborator"
"manager","boundary","manager::display_decimal","collaborator"
"manager","boundary","manager::display_interval","collaborator"
"manager","boundary","manager::clean_denominators","command collaborator"
"manager","boundary","manager::extension_index","non-void-command collaborator"
"manager","boundary","manager::transcendental_name","property non-void-command collaborator"
"manager","boundary","manager::infinitesimal_name","property non-void-command collaborator"
"manager","boundary","manager::num_coefficients","non-void-command collaborator"
"manager","boundary","manager::get_coefficient","property non-void-command collaborator"
"manager","boundary","manager::num_sign_conditions","non-void-command collaborator"
"manager","boundary","manager::get_sign_condition_sign","property non-void-command"
"manager","boundary","manager::get_interval","predicate non-void-command collaborator"
"manager","boundary","manager::num_sign_condition_coefficients","non-void-command"
"manager","boundary","manager::get_sign_condition_coefficient","property non-void-command collaborator"
"manager","boundary","manager::manager","copy-constructor"
"manager","boundary","manager::get_o_pred","property non-void-command collaborator"
"manager","boundary","manager::get_n_pred","property non-void-command collaborator"
"constructors","boundary","~constructors","destructor"
"constructors","boundary","add","command collaborator"
"constructors","boundary","operator[]","get collaborator"
"constructors","boundary","size","unclassified"
"constructors","boundary","query","void-accessor controller"
"manager::imp","boundary","~imp","destructor"
"manager::imp","boundary","acell_inv","predicate non-void-command collaborator"
"manager::imp","boundary","checkpoint","command"
"manager::imp","boundary","reset_statistics","command"
"manager::imp","boundary","collect_statistics","controller"
"manager::imp","boundary","updt_params","command collaborator"
"manager::imp","boundary","qm","get collaborator"
"manager::imp","boundary","bqm","get collaborator"
"manager::imp","boundary","bqim","get collaborator"
"manager::imp","boundary","pm","get collaborator"
"manager::imp","boundary","upm","get collaborator"
"manager::imp","boundary","del_basic","command collaborator"
"manager::imp","boundary","del_poly","void-accessor command collaborator"
"manager::imp","boundary","del_interval","command collaborator"
"manager::imp","boundary","del","command collaborator"
"manager::imp","boundary","del","command collaborator"
"manager::imp","boundary","reset","command collaborator"
"manager::imp","boundary","is_zero","controller stateless"
"manager::imp","boundary","is_pos","predicate non-void-command collaborator"
"manager::imp","boundary","is_neg","predicate non-void-command collaborator"
"manager::imp","boundary","basic_value","get property non-void-command collaborator"
"manager::imp","boundary","is_int","predicate non-void-command collaborator"
"manager::imp","boundary","is_rational","predicate non-void-command collaborator"
"manager::imp","boundary","to_rational","command collaborator"
"manager::imp","boundary","to_rational","void-accessor command collaborator"
"manager::imp","boundary","degree","non-void-command collaborator"
"manager::imp","boundary","swap","controller stateless"
"manager::imp","boundary","mk_basic_cell","property non-void-command factory collaborator"
"manager::imp","boundary","sign_lower","collaborator incidental"
"manager::imp","boundary","lower","controller stateless"
"manager::imp","boundary","upper","controller stateless"
"manager::imp","boundary","lower","controller stateless"
"manager::imp","boundary","upper","controller stateless"
"manager::imp","boundary","update_sign_lower","void-accessor command collaborator"
"manager::imp","boundary","normalize_coeffs","void-accessor command collaborator"
"manager::imp","boundary","mk_algebraic_cell","non-void-command factory collaborator"
"manager::imp","boundary","set","void-accessor command collaborator"
"manager::imp","boundary","set","command collaborator"
"manager::imp","boundary","copy_poly","void-accessor command collaborator"
"manager::imp","boundary","set_interval","command collaborator"
"manager::imp","boundary","set_interval","command collaborator"
"manager::imp","boundary","copy","void-accessor command collaborator"
"manager::imp","boundary","set","void-accessor command collaborator"
"manager::imp","boundary","set","void-accessor command collaborator"
"manager::imp","boundary","factor","predicate non-void-command collaborator"
"manager::imp","boundary","check_transitivity","command collaborator"
"manager::imp","boundary","sort_roots","command collaborator"
"manager::imp","boundary","isolate_roots","command collaborator"
"manager::imp","boundary","isolate_roots","command collaborator"
"manager::imp","boundary","mk_root","command collaborator"
"manager::imp","boundary","mk_root","command collaborator"
"manager::imp","boundary","mk_root","command collaborator"
"manager::imp","boundary","normalize","command collaborator"
"manager::imp","boundary","magnitude","property non-void-command collaborator"
"manager::imp","boundary","magnitude","property non-void-command collaborator"
"manager::imp","boundary","refine_core","predicate non-void-command collaborator"
"manager::imp","boundary","refine","predicate non-void-command collaborator"
"manager::imp","boundary","refine","predicate non-void-command"
"manager::imp","boundary","refine_until_prec","predicate non-void-command collaborator"
"manager::imp","boundary","set_core","command collaborator"
"manager::imp","boundary","mk_binary","command collaborator"
"manager::imp","boundary","mk_unary","command collaborator"
"manager::imp","boundary","root_core","command collaborator"
"manager::imp","boundary","root","command collaborator"
"manager::imp","boundary","power_core","command collaborator"
"manager::imp","boundary","power","command collaborator"
"manager::imp","boundary","add","command collaborator"
"manager::imp","boundary","sub","command collaborator"
"manager::imp","boundary","add","command collaborator"
"manager::imp","boundary","add","command collaborator"
"manager::imp","boundary","sub","command collaborator"
"manager::imp","boundary","mul","command collaborator"
"manager::imp","boundary","mul","command collaborator"
"manager::imp","boundary","mul","command collaborator"
"manager::imp","boundary","neg","command collaborator"
"manager::imp","boundary","refine_nz_bound","command collaborator"
"manager::imp","boundary","inv","command collaborator"
"manager::imp","boundary","div","command collaborator"
"manager::imp","boundary","compare","property non-void-command collaborator"
"manager::imp","boundary","compare","property non-void-command collaborator"
"manager::imp","boundary","compare_p","predicate non-void-command collaborator"
"manager::imp","boundary","compare_core","property non-void-command collaborator"
"manager::imp","boundary","compare","property non-void-command collaborator"
"manager::imp","boundary","eq","predicate non-void-command collaborator"
"manager::imp","boundary","eq","predicate non-void-command collaborator"
"manager::imp","boundary","lt","predicate non-void-command collaborator"
"manager::imp","boundary","lt","predicate non-void-command collaborator"
"manager::imp","boundary","gt","predicate non-void-command collaborator"
"manager::imp","boundary","get_polynomial","command collaborator"
"manager::imp","boundary","get_i","non-void-command collaborator"
"manager::imp","boundary","eval_sign_at","property non-void-command collaborator"
"manager::imp","boundary","filter_roots","command collaborator"
"manager::imp","boundary","ensure_num_vars","command"
"manager::imp","boundary","isolate_roots","command collaborator"
"manager::imp","boundary","eval_at_mpbq","property non-void-command collaborator"
"manager::imp","boundary","separate","command collaborator"
"manager::imp","boundary","int_lt","command collaborator"
"manager::imp","boundary","int_gt","command collaborator"
"manager::imp","boundary","select","command collaborator"
"manager::imp","boundary","isolate_roots","command collaborator"
"manager::imp","boundary","display_root","property non-void-command collaborator"
"manager::imp","boundary","display_mathematica","property non-void-command collaborator"
"manager::imp","boundary","display_root_smt2","property non-void-command collaborator"
"manager::imp","boundary","display_interval","property non-void-command collaborator"
"manager::imp","boundary","get_interval","predicate non-void-command collaborator"
"manager::imp","boundary","display_decimal","property non-void-command collaborator"
"manager::imp","boundary","get_lower","command collaborator"
"manager::imp","boundary","get_upper","command collaborator"
"manager::imp","boundary","consistent_coeffs","predicate non-void-command collaborator"
"manager::imp","boundary","init","command collaborator"
"manager::imp","boundary","~imp","destructor"
"manager::imp","boundary","checkpoint","command"
"manager::imp","boundary","m","property collaborator"
"manager::imp","boundary","pm","get collaborator"
"manager::imp","boundary","upm","get collaborator"
"manager::imp","boundary","mm","get collaborator"
"manager::imp","boundary","mk_var","property non-void-command collaborator"
"manager::imp","boundary","num_vars","unclassified"
"manager::imp","boundary","is_valid","predicate collaborator"
"manager::imp","boundary","add_del_eh","void-accessor set collaborator"
"manager::imp","boundary","remove_del_eh","set collaborator"
"manager::imp","boundary","del","command collaborator"
"manager::imp","boundary","inc_ref","command collaborator"
"manager::imp","boundary","dec_ref","command collaborator"
"manager::imp","boundary","inc_ref","controller stateless"
"manager::imp","boundary","dec_ref","command collaborator"
"manager::imp","boundary","lex_sort","wrapper"
"manager::imp","boundary","hash","non-void-command collaborator"
"manager::imp","boundary","mk_polynomial_core","non-void-command factory collaborator"
"manager::imp","boundary","gcd_simplify","command collaborator"
"manager::imp","boundary","apply_gcd_simplify","void-accessor command collaborator"
"manager::imp","boundary","gcd_simplify_slow","command collaborator"
"manager::imp","boundary","mk_zero","get collaborator"
"manager::imp","boundary","mk_one","get collaborator"
"manager::imp","boundary","mk_unit","property non-void-command collaborator"
"manager::imp","boundary","mk_monomial","property non-void-command collaborator"
"manager::imp","boundary","mk_monomial","property non-void-command collaborator"
"manager::imp","boundary","mk_monomial","property non-void-command collaborator"
"manager::imp","boundary","mk_monomial","property non-void-command collaborator"
"manager::imp","boundary","mk_monomial","property non-void-command collaborator"
"manager::imp","boundary","convert","property non-void-command collaborator"
"manager::imp","boundary","mk_const_core","property non-void-command collaborator"
"manager::imp","boundary","mk_const","property non-void-command collaborator"
"manager::imp","boundary","mk_const","property non-void-command collaborator"
"manager::imp","boundary","mk_polynomial","property non-void-command collaborator"
"manager::imp","boundary","mk_polynomial","property non-void-command collaborator"
"manager::imp","boundary","rational2numeral","command collaborator"
"manager::imp","boundary","reset_tmp_as2","controller stateless"
"manager::imp","boundary","mk_polynomial","property non-void-command collaborator"
"manager::imp","boundary","mk_univariate","property non-void-command collaborator"
"manager::imp","boundary","mk_univariate","property non-void-command collaborator"
"manager::imp","boundary","mk_linear","property non-void-command collaborator"
"manager::imp","boundary","mk_linear","property non-void-command collaborator"
"manager::imp","boundary","mul","property non-void-command collaborator"
"manager::imp","boundary","div","predicate non-void-command collaborator"
"manager::imp","boundary","div","predicate non-void-command collaborator"
"manager::imp","boundary","gcd","property non-void-command collaborator"
"manager::imp","boundary","unify","predicate non-void-command collaborator"
"manager::imp","boundary","pw","property non-void-command collaborator"
"manager::imp","boundary","sqrt","property non-void-command collaborator"
"manager::imp","boundary","addmul","property non-void-command collaborator"
"manager::imp","boundary","addmul","property non-void-command collaborator"
"manager::imp","boundary","addmul","property non-void-command collaborator"
"manager::imp","boundary","add","property non-void-command collaborator"
"manager::imp","boundary","sub","property non-void-command collaborator"
"manager::imp","boundary","muladd","property non-void-command collaborator"
"manager::imp","boundary","mul","property non-void-command collaborator"
"manager::imp","boundary","mul","get property non-void-command collaborator"
"manager::imp","boundary","mul","property non-void-command collaborator"
"manager::imp","boundary","mul","property non-void-command collaborator"
"manager::imp","boundary","mul","property non-void-command collaborator"
"manager::imp","boundary","div","property non-void-command collaborator"
"manager::imp","boundary","mul","property non-void-command factory collaborator"
"manager::imp","boundary","div_x_k","property non-void-command collaborator"
"manager::imp","boundary","div_x","property non-void-command collaborator"
"manager::imp","boundary","is_p_normalized","predicate collaborator"
"manager::imp","boundary","newton_interpolation","command collaborator"
"manager::imp","boundary","begin_vars_incremental","command"
"manager::imp","boundary","end_vars_incremental","set collaborator"
"manager::imp","boundary","vars","set collaborator"
"manager::imp","boundary","var_degrees","command collaborator"
"manager::imp","boundary","var_max_degrees","wrapper stateless"
"manager::imp","boundary","var_min_degrees","wrapper stateless"
"manager::imp","boundary","coeff","property non-void-command collaborator"
"manager::imp","boundary","coeffs","command collaborator"
"manager::imp","boundary","coeff","property non-void-command collaborator"
"manager::imp","boundary","const_coeff","predicate non-void-command collaborator"
"manager::imp","boundary","nonzero_const_coeff","predicate non-void-command collaborator"
"manager::imp","boundary","ic","command collaborator"
"manager::imp","boundary","abs_norm","command collaborator"
"manager::imp","boundary","numeral_lc","get property controller"
"manager::imp","boundary","numeral_tc","get property non-void-command collaborator"
"manager::imp","boundary","ic","void-accessor command collaborator"
"manager::imp","boundary","flip_sign_if_lm_neg_core","property non-void-command collaborator"
"manager::imp","boundary","flip_sign_if_lm_neg","void-accessor command collaborator"
"manager::imp","boundary","iccp","void-accessor command collaborator"
"manager::imp","boundary","iccp","command collaborator"
"manager::imp","boundary","pp","property non-void-command collaborator"
"manager::imp","boundary","is_primitive","predicate non-void-command collaborator"
"manager::imp","boundary","lc","property non-void-command collaborator"
"manager::imp","boundary","gcd_prs","void-accessor command collaborator"
"manager::imp","boundary","gcd_content","command collaborator"
"manager::imp","boundary","euclid_gcd","void-accessor command collaborator"
"manager::imp","boundary","CRA_combine_images","void-accessor command collaborator"
"manager::imp","boundary","uni_mod_gcd","void-accessor command collaborator"
"manager::imp","boundary","iccp_ZpX","void-accessor command collaborator"
"manager::imp","boundary","lc_glex_ZpX","property non-void-command collaborator"
"manager::imp","boundary","primitive_ZpX","command collaborator"
"manager::imp","boundary","peek_fresh","command collaborator"
"manager::imp","boundary","mod_gcd_rec","void-accessor command collaborator"
"manager::imp","boundary","mod_gcd","void-accessor command collaborator"
"manager::imp","boundary","gcd","void-accessor command collaborator"
"manager::imp","boundary","derivative","property non-void-command collaborator"
"manager::imp","boundary","derivative","property non-void-command collaborator"
"manager::imp","boundary","square_free","void-accessor command collaborator"
"manager::imp","boundary","is_square_free","predicate non-void-command collaborator"
"manager::imp","boundary","square_free","void-accessor command collaborator"
"manager::imp","boundary","is_square_free","predicate non-void-command collaborator"
"manager::imp","boundary","pw","void-accessor command collaborator"
"manager::imp","boundary","eq","predicate non-void-command collaborator"
"manager::imp","boundary","compose_1_div_x","property non-void-command collaborator"
"manager::imp","boundary","push_power","controller stateless"
"manager::imp","boundary","compose_x_div_y","property non-void-command collaborator"
"manager::imp","boundary","compose_y","property non-void-command collaborator"
"manager::imp","boundary","compose_minus_x","property non-void-command collaborator"
"manager::imp","boundary","save_degree2pos","set collaborator"
"manager::imp","boundary","reset_degree2pos","set collaborator"
"manager::imp","boundary","compose","void-accessor command collaborator"
"manager::imp","boundary","mk_x_minus_y","property non-void-command collaborator"
"manager::imp","boundary","compose_x_minus_y","void-accessor command collaborator"
"manager::imp","boundary","mk_x_plus_y","property non-void-command collaborator"
"manager::imp","boundary","compose_x_plus_y","command collaborator"
"manager::imp","boundary","mk_x_minus_c","property non-void-command collaborator"
"manager::imp","boundary","compose_x_minus_c","void-accessor command collaborator"
"manager::imp","boundary","pseudo_division_core","void-accessor command collaborator"
"manager::imp","boundary","exact_pseudo_remainder","command collaborator"
"manager::imp","boundary","pseudo_remainder","command collaborator"
"manager::imp","boundary","exact_pseudo_division","wrapper stateless"
"manager::imp","boundary","pseudo_division","wrapper stateless"
"manager::imp","boundary","exact_div","property non-void-command collaborator"
"manager::imp","boundary","exact_div","property non-void-command collaborator"
"manager::imp","boundary","divides","predicate non-void-command collaborator"
"manager::imp","boundary","quasi_resultant","void-accessor command collaborator"
"manager::imp","boundary","resultant","void-accessor command collaborator"
"manager::imp","boundary","discriminant","void-accessor command collaborator"
"manager::imp","boundary","subresultant_chain","command collaborator"
"manager::imp","boundary","Se_Lazard","void-accessor command collaborator"
"manager::imp","boundary","optimized_S_e_1","void-accessor command collaborator"
"manager::imp","boundary","psc_chain_optimized_core","command collaborator"
"manager::imp","boundary","psc_chain_optimized","command collaborator"
"manager::imp","boundary","psc_chain","command collaborator"
"manager::imp","boundary","normalize","property non-void-command collaborator"
"manager::imp","boundary","neg","property non-void-command collaborator"
"manager::imp","boundary","is_perfect_square","predicate non-void-command collaborator"
"manager::imp","boundary","sqrt","predicate non-void-command collaborator"
"manager::imp","boundary","rename","command collaborator"
"manager::imp","boundary","sign","property non-void-command collaborator"
"manager::imp","boundary","sign","property non-void-command collaborator"
"manager::imp","boundary","is_pos","predicate non-void-command collaborator"
"manager::imp","boundary","is_neg","predicate non-void-command collaborator"
"manager::imp","boundary","is_nonpos","predicate non-void-command collaborator"
"manager::imp","boundary","is_nonneg","predicate non-void-command collaborator"
"manager::imp","boundary","ge","predicate non-void-command collaborator"
"manager::imp","boundary","substitute","property non-void-command collaborator"
"manager::imp","boundary","substitute","property non-void-command collaborator"
"manager::imp","boundary","substitute","property non-void-command collaborator"
"manager::imp","boundary","substitute","void-accessor command collaborator"
"manager::imp","boundary","t_eval_core","command collaborator"
"manager::imp","boundary","t_eval","command collaborator"
"manager::imp","boundary","univ_eval","command collaborator"
"manager::imp","boundary","eval","wrapper stateless"
"manager::imp","boundary","eval","wrapper stateless"
"manager::imp","boundary","eval","wrapper stateless"
"manager::imp","boundary","get_min_degree_var","property controller"
"manager::imp","boundary","acc_constant","command collaborator"
"manager::imp","boundary","flip_sign","command collaborator"
"manager::imp","boundary","factor_1_sqf_pp","command"
"manager::imp","boundary","factor_2_sqf_pp","command collaborator"
"manager::imp","boundary","factor_sqf_pp_univ","command collaborator"
"manager::imp","boundary","factor_n_sqf_pp","command"
"manager::imp","boundary","factor_sqf_pp","command collaborator"
"manager::imp","boundary","factor_core","command collaborator"
"manager::imp","boundary","factor","command collaborator"
"manager::imp","boundary","to_polynomial","property non-void-command collaborator"
"manager::imp","boundary","mk_glex_monic","property non-void-command collaborator"
"manager::imp","boundary","translate","property non-void-command collaborator"
"manager::imp","boundary","translate","void-accessor command collaborator"
"manager::imp","boundary","mod_d","property controller"
"manager::imp","boundary","exact_pseudo_division_mod_d","wrapper stateless"
"manager::imp","boundary","~imp","destructor"
"manager::imp","boundary","pm","get collaborator"
"manager::imp","boundary","mk_numeral","property non-void-command factory collaborator"
"manager::imp","boundary","del_numeral","command collaborator"
"manager::imp","boundary","del_poly","void-accessor command collaborator"
"manager::imp","boundary","dec_ref","command collaborator"
"manager::imp","boundary","dec_ref","command collaborator"
"manager::imp","boundary","is_zero","collaborator incidental"
"manager::imp","boundary","is_monomial","predicate non-void-command collaborator"
"manager::imp","boundary","degree","controller stateless"
"manager::imp","boundary","eq","predicate non-void-command collaborator"
"manager::imp","boundary","inc_ref_args","command collaborator"
"manager::imp","boundary","dec_ref_args","command collaborator"
"manager::imp","boundary","trim","wrapper stateless"
"manager::imp","boundary","allocate_poly","non-void-command factory collaborator"
"manager::imp","boundary","mk_poly_core","property non-void-command collaborator"
"manager::imp","boundary","mk_poly","property non-void-command collaborator"
"manager::imp","boundary","mk_const","property non-void-command collaborator"
"manager::imp","boundary","mk_const","property non-void-command collaborator"
"manager::imp","boundary","mk_polynomial","property non-void-command collaborator"
"manager::imp","boundary","unpack","controller stateless"
"manager::imp","boundary","pack","property non-void-command collaborator"
"manager::imp","boundary","mul_core","property non-void-command collaborator"
"manager::imp","boundary","mul","property non-void-command collaborator"
"manager::imp","boundary","neg","property non-void-command collaborator"
"manager::imp","boundary","add_core","property non-void-command collaborator"
"manager::imp","boundary","add","property non-void-command collaborator"
"manager::imp","boundary","display","command"
"manager::imp","boundary","~imp","destructor"
"manager::imp","boundary","qm","get collaborator"
"manager::imp","boundary","bqm","get collaborator"
"manager::imp","boundary","qim","get collaborator"
"manager::imp","boundary","bqim","get collaborator"
"manager::imp","boundary","bqim","get collaborator"
"manager::imp","boundary","mm","get collaborator"
"manager::imp","boundary","allocator","get collaborator"
"manager::imp","boundary","checkpoint","command"
"manager::imp","boundary","one","get collaborator"
"manager::imp","boundary","magnitude","property non-void-command collaborator"
"manager::imp","boundary","magnitude","property non-void-command collaborator"
"manager::imp","boundary","magnitude","property non-void-command collaborator"
"manager::imp","boundary","magnitude","property non-void-command collaborator"
"manager::imp","boundary","too_small","predicate non-void-command collaborator"
"manager::imp","boundary","div","command collaborator"
"manager::imp","boundary","div","command collaborator"
"manager::imp","boundary","save_interval","void-accessor command collaborator"
"manager::imp","boundary","save_interval","command collaborator"
"manager::imp","boundary","save_interval","command collaborator"
"manager::imp","boundary","save_interval_if_too_small","command"
"manager::imp","boundary","save_interval_if_too_small","command"
"manager::imp","boundary","restore_saved_intervals","command collaborator"
"manager::imp","boundary","restore_saved_intervals","command"
"manager::imp","boundary","cleanup","controller"
"manager::imp","boundary","next_transcendental_idx","get non-void-command"
"manager::imp","boundary","next_infinitesimal_idx","get non-void-command"
"manager::imp","boundary","next_algebraic_idx","get non-void-command"
"manager::imp","boundary","updt_params","command collaborator"
"manager::imp","boundary","reset_p","command collaborator"
"manager::imp","boundary","del_rational","command collaborator"
"manager::imp","boundary","del_rational_function","command collaborator"
"manager::imp","boundary","del_value","command collaborator"
"manager::imp","boundary","finalize","command collaborator"
"manager::imp","boundary","del_sign_condition","command collaborator"
"manager::imp","boundary","del_sign_conditions","command collaborator"
"manager::imp","boundary","del_sign_det","command collaborator"
"manager::imp","boundary","inc_ref_sign_det","collaborator incidental"
"manager::imp","boundary","dec_ref_sign_det","void-accessor command collaborator"
"manager::imp","boundary","del_algebraic","command collaborator"
"manager::imp","boundary","del_transcendental","command collaborator"
"manager::imp","boundary","del_infinitesimal","command collaborator"
"manager::imp","boundary","inc_ref","wrapper stateless"
"manager::imp","boundary","dec_ref","void-accessor command collaborator"
"manager::imp","boundary","inc_ref","collaborator incidental"
"manager::imp","boundary","inc_ref","command collaborator"
"manager::imp","boundary","dec_ref","void-accessor command collaborator"
"manager::imp","boundary","dec_ref","command collaborator"
"manager::imp","boundary","del","void-accessor command collaborator"
"manager::imp","boundary","del","command collaborator"
"manager::imp","boundary","check_precision","predicate non-void-command collaborator"
"manager::imp","boundary","is_rational_one","predicate collaborator"
"manager::imp","boundary","is_rational_minus_one","predicate collaborator"
"manager::imp","boundary","is_one","predicate collaborator"
"manager::imp","boundary","is_rational_one","predicate collaborator"
"manager::imp","boundary","is_rational_one","predicate collaborator"
"manager::imp","boundary","is_denominator_one","predicate collaborator"
"manager::imp","boundary","is_one","predicate collaborator"
"manager::imp","boundary","depends_on_infinitesimals","predicate non-void-command collaborator"
"manager::imp","boundary","depends_on_infinitesimals","predicate collaborator"
"manager::imp","boundary","depends_on_infinitesimals","predicate collaborator"
"manager::imp","boundary","set_p","command collaborator"
"manager::imp","boundary","contains_zero","predicate collaborator"
"manager::imp","boundary","set_lower_core","command"
"manager::imp","boundary","set_lower","command"
"manager::imp","boundary","set_lower_inf","command collaborator"
"manager::imp","boundary","set_lower_zero","command collaborator"
"manager::imp","boundary","set_upper_core","command"
"manager::imp","boundary","set_upper","command"
"manager::imp","boundary","set_upper_inf","command collaborator"
"manager::imp","boundary","set_upper_zero","command collaborator"
"manager::imp","boundary","set_interval","command collaborator"
"manager::imp","boundary","set_interval","command collaborator"
"manager::imp","boundary","set_interval","command collaborator"
"manager::imp","boundary","mk_sign_condition","property non-void-command factory collaborator"
"manager::imp","boundary","mk_rational_function_value_core","non-void-command factory collaborator"
"manager::imp","boundary","mk_rational_function_value_core","property non-void-command collaborator"
"manager::imp","boundary","mk_rational_function_value","property non-void-command collaborator"
"manager::imp","boundary","mk_infinitesimal","command collaborator"
"manager::imp","boundary","mk_infinitesimal","command collaborator"
"manager::imp","boundary","mk_infinitesimal","command collaborator"
"manager::imp","boundary","refine_transcendental_interval","void-accessor command collaborator"
"manager::imp","boundary","refine_transcendental_interval","command"
"manager::imp","boundary","mk_transcendental","command collaborator"
"manager::imp","boundary","mk_transcendental","command collaborator"
"manager::imp","boundary","mk_transcendental","command collaborator"
"manager::imp","boundary","mk_pi","command collaborator"
"manager::imp","boundary","mk_e","command collaborator"
"manager::imp","boundary","abs_lower_magnitude","predicate non-void-command collaborator"
"manager::imp","boundary","abs_upper_magnitude","predicate non-void-command collaborator"
"manager::imp","boundary","pos_root_upper_bound","predicate non-void-command"
"manager::imp","boundary","neg_root_adjust","command collaborator"
"manager::imp","boundary","neg_root_lower_bound","predicate non-void-command"
"manager::imp","boundary","reverse","controller stateless"
"manager::imp","boundary","pos_root_lower_bound","predicate non-void-command collaborator"
"manager::imp","boundary","neg_root_upper_bound","predicate non-void-command collaborator"
"manager::imp","boundary","mk_derivatives","void-accessor command collaborator"
"manager::imp","boundary","count_signs_at_zeros_core","void-accessor command collaborator"
"manager::imp","boundary","count_signs_at_zeros","command collaborator"
"manager::imp","boundary","expand_taqrs","command collaborator"
"manager::imp","boundary","keep_new_sc_assignment","wrapper stateless"
"manager::imp","boundary","set_array_p","command collaborator"
"manager::imp","boundary","mk_sign_det","non-void-command factory collaborator"
"manager::imp","boundary","mk_algebraic","non-void-command factory collaborator"
"manager::imp","boundary","add_root","command collaborator"
"manager::imp","boundary","add_root","command collaborator"
"manager::imp","boundary","mk_sign_det_matrix","predicate non-void-command collaborator"
"manager::imp","boundary","sign_det_isolate_roots","command collaborator"
"manager::imp","boundary","is_nz_binomial","predicate non-void-command collaborator"
"manager::imp","boundary","magnitude_to_mpbq","command collaborator"
"manager::imp","boundary","mk_neg_interval","command collaborator"
"manager::imp","boundary","mk_pos_interval","command collaborator"
"manager::imp","boundary","bisect_isolate_roots","command collaborator"
"manager::imp","boundary","bisect_isolate_roots","command collaborator"
"manager::imp","boundary","nl_nz_sqf_isolate_roots","command collaborator"
"manager::imp","boundary","nz_sqf_isolate_roots","command collaborator"
"manager::imp","boundary","nz_cd_isolate_roots","command collaborator"
"manager::imp","boundary","nz_isolate_roots","command collaborator"
"manager::imp","boundary","isolate_roots","command collaborator"
"manager::imp","boundary","reset","command collaborator"
"manager::imp","boundary","sign","property non-void-command collaborator"
"manager::imp","boundary","sign","property non-void-command collaborator"
"manager::imp","boundary","is_algebraic_int","predicate non-void-command collaborator"
"manager::imp","boundary","is_int","predicate non-void-command collaborator"
"manager::imp","boundary","is_algebraic","predicate non-void-command collaborator"
"manager::imp","boundary","is_infinitesimal","predicate non-void-command collaborator"
"manager::imp","boundary","is_transcendental","predicate non-void-command collaborator"
"manager::imp","boundary","is_rational","controller stateless"
"manager::imp","boundary","depends_on_infinitesimals","predicate collaborator"
"manager::imp","boundary","mpq_to_mpbqi","command"
"manager::imp","boundary","initialize_rational_value_interval","command collaborator"
"manager::imp","boundary","interval","property collaborator"
"manager::imp","boundary","mk_rational","property non-void-command factory collaborator"
"manager::imp","boundary","mk_rational","property non-void-command collaborator"
"manager::imp","boundary","mk_rational","property non-void-command collaborator"
"manager::imp","boundary","mk_rational","property non-void-command collaborator"
"manager::imp","boundary","mk_rational","property non-void-command collaborator"
"manager::imp","boundary","reset_interval","command collaborator"
"manager::imp","boundary","update_mpq_value","command collaborator"
"manager::imp","boundary","update_mpq_value","command collaborator"
"manager::imp","boundary","set","void-accessor command"
"manager::imp","boundary","set","void-accessor command collaborator"
"manager::imp","boundary","set","void-accessor command collaborator"
"manager::imp","boundary","set","void-accessor command collaborator"
"manager::imp","boundary","adjust_size","controller stateless"
"manager::imp","boundary","add","command collaborator"
"manager::imp","boundary","add","command collaborator"
"manager::imp","boundary","sub","command collaborator"
"manager::imp","boundary","sub","command collaborator"
"manager::imp","boundary","mul","command collaborator"
"manager::imp","boundary","mul","command collaborator"
"manager::imp","boundary","div","command collaborator"
"manager::imp","boundary","div_rem","command collaborator"
"manager::imp","boundary","div","command collaborator"
"manager::imp","boundary","div","command collaborator"
"manager::imp","boundary","rem","command collaborator"
"manager::imp","boundary","prem","void-accessor command collaborator"
"manager::imp","boundary","prem","command collaborator"
"manager::imp","boundary","neg","command collaborator"
"manager::imp","boundary","neg","command collaborator"
"manager::imp","boundary","neg","void-accessor command collaborator"
"manager::imp","boundary","srem","command collaborator"
"manager::imp","boundary","sprem","command collaborator"
"manager::imp","boundary","struct_eq","predicate collaborator"
"manager::imp","boundary","struct_eq","predicate collaborator"
"manager::imp","boundary","struct_eq","predicate collaborator"
"manager::imp","boundary","has_clean_denominators","predicate collaborator"
"manager::imp","boundary","has_clean_denominators","predicate collaborator"
"manager::imp","boundary","has_clean_denominators","predicate collaborator"
"manager::imp","boundary","clean_denominators_core","void-accessor command collaborator"
"manager::imp","boundary","clean_denominators_core","void-accessor command collaborator"
"manager::imp","boundary","clean_denominators_core","command collaborator"
"manager::imp","boundary","clean_denominators","void-accessor command collaborator"
"manager::imp","boundary","clean_denominators","void-accessor command collaborator"
"manager::imp","boundary","clean_denominators","command collaborator"
"manager::imp","boundary","clean_denominators","command collaborator"
"manager::imp","boundary","extension_index","wrapper stateless"
"manager::imp","boundary","transcendental_name","property non-void-command collaborator"
"manager::imp","boundary","infinitesimal_name","property non-void-command collaborator"
"manager::imp","boundary","num_coefficients","non-void-command collaborator"
"manager::imp","boundary","get_coefficient","property non-void-command collaborator"
"manager::imp","boundary","num_sign_conditions","non-void-command collaborator"
"manager::imp","boundary","get_sign_condition_sign","property non-void-command collaborator"
"manager::imp","boundary","get_interval","predicate non-void-command collaborator"
"manager::imp","boundary","get_sign_condition_size","controller stateless"
"manager::imp","boundary","num_sign_condition_coefficients","property non-void-command collaborator"
"manager::imp","boundary","get_sign_condition_coefficient","property non-void-command collaborator"
"manager::imp","boundary","gcd_int_coeffs","predicate non-void-command collaborator"
"manager::imp","boundary","gcd_int_coeffs","predicate non-void-command collaborator"
"manager::imp","boundary","gcd_int_coeffs","predicate non-void-command collaborator"
"manager::imp","boundary","normalize_int_coeffs","command collaborator"
"manager::imp","boundary","exact_div_z","void-accessor command collaborator"
"manager::imp","boundary","is_monic","predicate non-void-command collaborator"
"manager::imp","boundary","is_monic","predicate non-void-command collaborator"
"manager::imp","boundary","mk_monic","command collaborator"
"manager::imp","boundary","gcd","void-accessor command collaborator"
"manager::imp","boundary","flip_sign_if_lc_neg","command collaborator"
"manager::imp","boundary","prem_gcd","void-accessor command collaborator"
"manager::imp","boundary","derivative","command collaborator"
"manager::imp","boundary","square_free","command collaborator"
"manager::imp","boundary","sturm_seq_core","command collaborator"
"manager::imp","boundary","sturm_seq","command collaborator"
"manager::imp","boundary","sturm_seq","command collaborator"
"manager::imp","boundary","sturm_tarski_seq","command collaborator"
"manager::imp","boundary","eval_sign_at_zero","property non-void-command collaborator"
"manager::imp","boundary","eval_sign_at_plus_inf","property non-void-command collaborator"
"manager::imp","boundary","eval_sign_at_minus_inf","property non-void-command collaborator"
"manager::imp","boundary","eval_sign_at_approx","command collaborator"
"manager::imp","boundary","has_refineable_approx_coeffs","predicate non-void-command collaborator"
"manager::imp","boundary","mk_polynomial_value","void-accessor command collaborator"
"manager::imp","boundary","expensive_eval_sign_at","property non-void-command collaborator"
"manager::imp","boundary","find_biggest_interval_magnitude","property non-void-command collaborator"
"manager::imp","boundary","eval_sign_at","property non-void-command collaborator"
"manager::imp","boundary","sign_variations_at_core","non-void-command collaborator"
"manager::imp","boundary","sign_variations_at_minus_inf","non-void-command collaborator"
"manager::imp","boundary","sign_variations_at_plus_inf","non-void-command collaborator"
"manager::imp","boundary","sign_variations_at_zero","non-void-command collaborator"
"manager::imp","boundary","sign_variations_at","non-void-command collaborator"
"manager::imp","boundary","sign_variations_at_lower","property non-void-command collaborator"
"manager::imp","boundary","sign_variations_at_upper","property non-void-command collaborator"
"manager::imp","boundary","TaQ","property non-void-command collaborator"
"manager::imp","boundary","TaQ","property non-void-command collaborator"
"manager::imp","boundary","TaQ_1","property non-void-command collaborator"
"manager::imp","boundary","refine_rational_interval","command collaborator"
"manager::imp","boundary","refine_coeffs_interval","predicate non-void-command"
"manager::imp","boundary","refine_coeffs_interval","predicate non-void-command"
"manager::imp","boundary","polynomial_interval","command collaborator"
"manager::imp","boundary","update_rf_interval","command collaborator"
"manager::imp","boundary","refine_transcendental_interval","command"
"manager::imp","boundary","refine_infinitesimal_interval","predicate non-void-command"
"manager::imp","boundary","refine_algebraic_interval","predicate non-void-command"
"manager::imp","boundary","refine_algebraic_interval","predicate non-void-command"
"manager::imp","boundary","refine_interval","predicate non-void-command collaborator"
"manager::imp","boundary","sign_of_first_non_zero","property non-void-command"
"manager::imp","boundary","add_infinitesimal","command collaborator"
"manager::imp","boundary","determine_transcendental_sign","command collaborator"
"manager::imp","boundary","determine_infinitesimal_sign","command collaborator"
"manager::imp","boundary","depends_on_infinitesimals","predicate non-void-command collaborator"
"manager::imp","boundary","refine_until_sign_determined","command collaborator"
"manager::imp","boundary","expensive_algebraic_poly_interval","predicate non-void-command collaborator"
"manager::imp","boundary","expensive_determine_algebraic_sign","predicate non-void-command collaborator"
"manager::imp","boundary","determine_algebraic_sign","predicate non-void-command collaborator"
"manager::imp","boundary","determine_sign","predicate non-void-command collaborator"
"manager::imp","boundary","determine_sign","predicate non-void-command collaborator"
"manager::imp","boundary","normalize_fraction","command collaborator"
"manager::imp","boundary","normalize_num_monic_den","command collaborator"
"manager::imp","boundary","normalize_algebraic","command collaborator"
"manager::imp","boundary","mk_add_value","void-accessor command collaborator"
"manager::imp","boundary","add_p_v","command collaborator"
"manager::imp","boundary","add_rf_v","void-accessor command collaborator"
"manager::imp","boundary","add_p_p","void-accessor command collaborator"
"manager::imp","boundary","add_rf_rf","void-accessor command collaborator"
"manager::imp","boundary","add","void-accessor command collaborator"
"manager::imp","boundary","sub","void-accessor command collaborator"
"manager::imp","boundary","neg_rf","void-accessor command collaborator"
"manager::imp","boundary","neg","void-accessor command collaborator"
"manager::imp","boundary","mk_mul_value","void-accessor command collaborator"
"manager::imp","boundary","mul_p_v","command collaborator"
"manager::imp","boundary","mul_rf_v","command collaborator"
"manager::imp","boundary","mul_p_p","command collaborator"
"manager::imp","boundary","mul_rf_rf","command collaborator"
"manager::imp","boundary","mul","void-accessor command collaborator"
"manager::imp","boundary","div","void-accessor command collaborator"
"manager::imp","boundary","inv_algebraic","predicate non-void-command collaborator"
"manager::imp","boundary","inv_algebraic","void-accessor command collaborator"
"manager::imp","boundary","inv_rf","void-accessor command collaborator"
"manager::imp","boundary","inv","void-accessor command collaborator"
"manager::imp","boundary","set","void-accessor command collaborator"
"manager::imp","boundary","set","command collaborator"
"manager::imp","boundary","neg","command collaborator"
"manager::imp","boundary","neg","command collaborator"
"manager::imp","boundary","inv","command collaborator"
"manager::imp","boundary","inv","command collaborator"
"manager::imp","boundary","add","command collaborator"
"manager::imp","boundary","sub","command collaborator"
"manager::imp","boundary","mul","command collaborator"
"manager::imp","boundary","div","command collaborator"
"manager::imp","boundary","root","command collaborator"
"manager::imp","boundary","power","command collaborator"
"manager::imp","boundary","compare","property non-void-command collaborator"
"manager::imp","boundary","compare","property non-void-command collaborator"
"manager::imp","boundary","use_parenthesis","predicate collaborator"
"manager::imp","boundary","display_polynomial","unclassified"
"manager::imp","boundary","display_polynomial","unclassified"
"manager::imp","boundary","display_polynomial_expr","unclassified"
"manager::imp","boundary","display_sign_conditions","controller stateless"
"manager::imp","boundary","display_sign_conditions","void-accessor"
"manager::imp","boundary","display_interval","unclassified"
"manager::imp","boundary","display_algebraic_def","unclassified"
"manager::imp","boundary","display_poly","collaborator"
"manager::imp","boundary","display_ext","unclassified"
"manager::imp","boundary","display","collaborator"
"manager::imp","boundary","display_compact","collaborator"
"manager::imp","boundary","display","unclassified"
"manager::imp","boundary","display_non_rational_in_decimal","command collaborator"
"manager::imp","boundary","display_decimal","unclassified"
"manager::imp","boundary","display_interval","collaborator"
"expr_dependency_translation","entity boundary small-class","expr_dependency_translation","constructor"
"expr_dependency_translation","entity boundary small-class","expr_dependency_translation::operator()","property non-void-command collaborator"
"pob_concretizer","entity boundary","pob_concretizer","constructor"
"pob_concretizer","entity boundary","apply","predicate non-void-command collaborator"
"pob_concretizer","entity boundary","pob_concretizer::mark_pattern_vars","wrapper"
"pob_concretizer","entity boundary","pob_concretizer::push_out","predicate non-void-command collaborator"
"pob_concretizer","entity boundary","pob_concretizer::apply","predicate non-void-command collaborator"
"pob_concretizer","entity boundary","pob_concretizer::is_split_var","predicate non-void-command collaborator"
"pob_concretizer","entity boundary","pob_concretizer::split_lit_le_lt","command collaborator"
"pob_concretizer","entity boundary","pob_concretizer::split_lit_ge_gt","command collaborator"
"factorization","entity data-provider boundary","factorization","constructor"
"factorization","entity data-provider boundary","is_mon","predicate"
"factorization","entity data-provider boundary","is_empty","predicate"
"factorization","entity data-provider boundary","operator[]","get collaborator"
"factorization","entity data-provider boundary","operator[]","get collaborator"
"factorization","entity data-provider boundary","size","property"
"factorization","entity data-provider boundary","begin","property collaborator"
"factorization","entity data-provider boundary","end","property collaborator"
"factorization","entity data-provider boundary","push_back","command collaborator"
"factorization","entity data-provider boundary","mon","get collaborator"
"factorization","entity data-provider boundary","set_mon","set collaborator"
"var_eqs","boundary","push","command"
"var_eqs","boundary","pop","command collaborator"
"var_eqs","boundary","merge","command collaborator"
"var_eqs","boundary","merge_plus","wrapper stateless"
"var_eqs","boundary","merge_minus","wrapper stateless"
"var_eqs","boundary","find","property collaborator"
"var_eqs","boundary","find","wrapper stateless"
"var_eqs","boundary","is_root","controller stateless"
"var_eqs","boundary","is_root","predicate collaborator"
"var_eqs","boundary","vars_are_equiv","controller stateless"
"var_eqs","boundary","explain_dfs","command collaborator"
"var_eqs","boundary","explain_eq","controller stateless"
"var_eqs","boundary","explain_bfs","command collaborator"
"var_eqs","boundary","explain","collaborator"
"var_eqs","boundary","explain","wrapper stateless"
"var_eqs","boundary","explain","collaborator"
"var_eqs","boundary","equiv_class","property wrapper"
"var_eqs","boundary","equiv_class","wrapper stateless"
"var_eqs","boundary","display","property collaborator"
"var_eqs","boundary","set_merge_handler","set collaborator"
"var_eqs","boundary","get_trail_stack","get collaborator"
"var_eqs","boundary","unmerge_eh","command"
"var_eqs","boundary","merge_eh","command"
"var_eqs","boundary","after_merge_eh","command"
"mk_slice","boundary","num_vars","unclassified"
"mk_slice","boundary","get_predicate_slice","property non-void-command collaborator"
"mk_slice","boundary","get_predicate","property non-void-command collaborator"
"mk_slice","boundary","get_predicates","get collaborator"
"mk_slice","boundary","mk_slice::mk_slice","constructor"
"mk_slice","boundary","mk_slice::get_predicate_slice","property non-void-command collaborator"
"mk_slice","boundary","mk_slice::saturate","command collaborator"
"mk_slice","boundary","mk_slice::filter_unique_vars","set collaborator"
"mk_slice","boundary","mk_slice::solve_vars","command collaborator"
"mk_slice","boundary","mk_slice::prune_rule","predicate non-void-command collaborator"
"mk_slice","boundary","mk_slice::is_eq","predicate non-void-command collaborator"
"mk_slice","boundary","mk_slice::is_output","predicate non-void-command"
"mk_slice","boundary","mk_slice::is_output","predicate non-void-command collaborator"
"mk_slice","boundary","mk_slice::init_vars","command collaborator"
"mk_slice","boundary","mk_slice::get_tail_conjs","property controller"
"mk_slice","boundary","mk_slice::add_var","command"
"mk_slice","boundary","mk_slice::init_vars","command"
"mk_slice","boundary","mk_slice::finalize_vars","predicate non-void-command collaborator"
"mk_slice","boundary","mk_slice::add_free_vars","controller stateless"
"mk_slice","boundary","mk_slice::display","controller"
"mk_slice","boundary","mk_slice::reset","command"
"mk_slice","boundary","mk_slice::declare_predicates","command collaborator"
"mk_slice","boundary","mk_slice::rule_updated","predicate non-void-command collaborator"
"mk_slice","boundary","mk_slice::update_predicate","void-accessor command collaborator"
"mk_slice","boundary","mk_slice::update_rule","command collaborator"
"mk_slice","boundary","mk_slice::update_rules","command collaborator"
"mk_slice","boundary","mk_slice::operator()","property non-void-command collaborator"
"Z3_stats_ref","empty","Z3_stats_ref","constructor"
"row_cell","data-provider data-class","row_cell","constructor"
"row_cell","data-provider data-class","row_cell","constructor"
"row_cell","data-provider data-class","coeff","get collaborator"
"row_cell","data-provider data-class","coeff","get collaborator"
"row_cell","data-provider data-class","var","get"
"row_cell","data-provider data-class","var","get"
"row_cell","data-provider data-class","offset","get"
"row_cell","data-provider data-class","offset","get"
"der_rewriter_cfg","entity boundary small-class","der_rewriter_cfg","constructor"
"der_rewriter_cfg","entity boundary small-class","reduce_quantifier","predicate non-void-command collaborator"
"smt_renaming","entity boundary","operator()","property non-void-command collaborator"
"smt_renaming","entity boundary","smt_renaming::fix_symbol","property non-void-command collaborator"
"smt_renaming","entity boundary","smt_renaming::is_legal","wrapper stateless"
"smt_renaming","entity boundary","smt_renaming::is_special","incidental"
"smt_renaming","entity boundary","smt_renaming::is_numerical","wrapper stateless"
"smt_renaming","entity boundary","smt_renaming::all_is_legal","predicate non-void-command"
"smt_renaming","entity boundary","smt_renaming::smt_renaming","constructor"
"smt_renaming","entity boundary","smt_renaming::get_symbol","property non-void-command collaborator"
"pb_sls::imp","boundary","~imp","destructor"
"pb_sls::imp","boundary","reset","command"
"pb_sls::imp","boundary","init_max_flips","set"
"pb_sls::imp","boundary","add","command collaborator"
"pb_sls::imp","boundary","add","command collaborator"
"pb_sls::imp","boundary","set_model","command collaborator"
"pb_sls::imp","boundary","operator()","property non-void-command collaborator"
"pb_sls::imp","boundary","get_value","predicate controller"
"pb_sls::imp","boundary","get_model","void-accessor command collaborator"
"pb_sls::imp","boundary","collect_statistics","controller"
"pb_sls::imp","boundary","updt_params","empty"
"pb_sls::imp","boundary","soft_holds","predicate non-void-command"
"pb_sls::imp","boundary","display","controller"
"pb_sls::imp","boundary","display","command collaborator"
"pb_sls::imp","boundary","eval","predicate non-void-command collaborator"
"pb_sls::imp","boundary","init_occ","controller stateless"
"pb_sls::imp","boundary","init","command"
"pb_sls::imp","boundary","flip","property non-void-command collaborator"
"pb_sls::imp","boundary","flip_hard","property non-void-command collaborator"
"pb_sls::imp","boundary","flip_soft","property non-void-command collaborator"
"pb_sls::imp","boundary","pick_hard_clause","get non-void-command collaborator"
"pb_sls::imp","boundary","pick_soft_clause","get non-void-command collaborator"
"pb_sls::imp","boundary","flip","property non-void-command collaborator"
"pb_sls::imp","boundary","mk_aux_literal","property non-void-command collaborator"
"pb_sls::imp","boundary","pad","controller stateless"
"pb_sls::imp","boundary","mk_literal","property non-void-command collaborator"
"pb_sls::imp","boundary","compile_clause","predicate non-void-command collaborator"
"clause_use_list","boundary","clause_use_list","constructor"
"clause_use_list","boundary","size","get"
"clause_use_list","boundary","num_redundant","get"
"clause_use_list","boundary","num_irredundant","unclassified"
"clause_use_list","boundary","empty","predicate"
"clause_use_list","boundary","insert","command collaborator"
"clause_use_list","boundary","erase_not_removed","command collaborator"
"clause_use_list","boundary","erase","command collaborator"
"clause_use_list","boundary","block","set collaborator"
"clause_use_list","boundary","unblock","set collaborator"
"clause_use_list","boundary","reset","command"
"clause_use_list","boundary","mk_iterator","property wrapper"
"clause_use_list","boundary","display","property collaborator"
"clause_use_list","boundary","clause_use_list::check_invariant","predicate controller"
"check_logic","boundary","check_logic::check_logic","constructor"
"check_logic","boundary","check_logic::~check_logic","destructor"
"check_logic","boundary","check_logic::reset","set"
"check_logic","boundary","check_logic::set_logic","command collaborator"
"check_logic","boundary","check_logic::operator()","predicate non-void-command collaborator"
"check_logic","boundary","check_logic::operator()","predicate non-void-command collaborator"
"check_logic","boundary","check_logic::get_last_error","property"
"search_tree","boundary","invariant","predicate"
"search_tree","boundary","search_tree","copy-constructor"
"search_tree","boundary","~search_tree","destructor"
"search_tree","boundary","fml","get collaborator"
"search_tree","boundary","fml_ref","get collaborator"
"search_tree","boundary","def","get collaborator"
"search_tree","boundary","assignment","get collaborator"
"search_tree","boundary","var","get collaborator"
"search_tree","boundary","has_var","predicate"
"search_tree","boundary","parent","get"
"search_tree","boundary","is_root","predicate"
"search_tree","boundary","get_num_branches","get collaborator"
"search_tree","boundary","get_leaves","command collaborator"
"search_tree","boundary","get_leaves_rec","command collaborator"
"search_tree","boundary","get_leaves","command collaborator"
"search_tree","boundary","reset","command"
"search_tree","boundary","init","set collaborator"
"search_tree","boundary","add_def","command collaborator"
"search_tree","boundary","num_free_vars","unclassified"
"search_tree","boundary","free_vars","get collaborator"
"search_tree","boundary","free_var","get collaborator"
"search_tree","boundary","reset_free_vars","command"
"search_tree","boundary","pos_atoms","get collaborator"
"search_tree","boundary","neg_atoms","get collaborator"
"search_tree","boundary","pos_atoms","get collaborator"
"search_tree","boundary","neg_atoms","get collaborator"
"search_tree","boundary","set_var","command collaborator"
"search_tree","boundary","consume_vars","command collaborator"
"search_tree","boundary","is_pure","predicate controller"
"search_tree","boundary","is_unit","predicate"
"search_tree","boundary","has_branch","predicate collaborator"
"search_tree","boundary","child","get collaborator"
"search_tree","boundary","child","get"
"search_tree","boundary","del_var","command collaborator"
"search_tree","boundary","add_child","property non-void-command collaborator"
"search_tree","boundary","add_child","property non-void-command collaborator"
"search_tree","boundary","display","collaborator"
"search_tree","boundary","display_node","unclassified"
"search_tree","boundary","display","unclassified"
"search_tree","boundary","abstract_variable","property collaborator"
"search_tree","boundary","display_validate","collaborator"
"smt_solver","commander boundary","translate","property non-void-command collaborator"
"smt_solver","commander boundary","~smt_solver","destructor"
"smt_solver","commander boundary","updt_params","command collaborator"
"smt_solver","commander boundary","push_params","command"
"smt_solver","commander boundary","pop_params","set"
"smt_solver","commander boundary","collect_param_descrs","command collaborator"
"smt_solver","commander boundary","collect_statistics","collaborator"
"smt_solver","commander boundary","get_consequences_core","property non-void-command collaborator"
"smt_solver","commander boundary","find_mutexes","property non-void-command collaborator"
"smt_solver","commander boundary","assert_expr_core","command collaborator"
"smt_solver","commander boundary","set_phase","command collaborator"
"smt_solver","commander boundary","get_phase","property non-void-command collaborator"
"smt_solver","commander boundary","set_phase","command collaborator"
"smt_solver","commander boundary","move_to_front","command collaborator"
"smt_solver","commander boundary","assert_expr_core2","command collaborator"
"smt_solver","commander boundary","push_core","command"
"smt_solver","commander boundary","pop_core","command collaborator"
"smt_solver","commander boundary","check_sat_core2","property non-void-command collaborator"
"smt_solver","commander boundary","check_sat_cc_core","property non-void-command collaborator"
"smt_solver","commander boundary","get_levels","command collaborator"
"smt_solver","commander boundary","get_trail","property non-void-command collaborator"
"smt_solver","commander boundary","register_on_clause","command collaborator"
"smt_solver","commander boundary","user_propagate_init","command collaborator"
"smt_solver","commander boundary","user_propagate_register_fixed","command collaborator"
"smt_solver","commander boundary","user_propagate_register_final","command collaborator"
"smt_solver","commander boundary","user_propagate_register_eq","command collaborator"
"smt_solver","commander boundary","user_propagate_register_diseq","command collaborator"
"smt_solver","commander boundary","user_propagate_register_expr","command collaborator"
"smt_solver","commander boundary","user_propagate_register_created","command collaborator"
"smt_solver","commander boundary","user_propagate_register_decide","command collaborator"
"smt_solver","commander boundary","get_unsat_core","command collaborator"
"smt_solver","commander boundary","get_model_core","command collaborator"
"smt_solver","commander boundary","get_proof_core","property non-void-command collaborator"
"smt_solver","commander boundary","reason_unknown","property"
"smt_solver","commander boundary","set_reason_unknown","command"
"smt_solver","commander boundary","get_labels","command collaborator"
"smt_solver","commander boundary","get_manager","property collaborator"
"smt_solver","commander boundary","set_progress_callback","command collaborator"
"smt_solver","commander boundary","get_num_assertions","unclassified"
"smt_solver","commander boundary","get_assertion","property collaborator"
"smt_solver","commander boundary","get_units_core","command collaborator"
"smt_solver","commander boundary","congruence_next","property non-void-command collaborator"
"smt_solver","commander boundary","congruence_root","property non-void-command collaborator"
"smt_solver","commander boundary","cube","property non-void-command collaborator"
"smt_solver","commander boundary","collect_pattern_fds","command collaborator"
"smt_solver","commander boundary","compute_assrtn_fds","controller"
"smt_solver","commander boundary","fds_intersect","controller stateless"
"smt_solver","commander boundary","add_pattern_literals_to_core","command collaborator"
"smt_solver","commander boundary","collect_body_func_decls","command collaborator"
"smt_solver","commander boundary","add_nonlocal_pattern_literals_to_core","command collaborator"
"expr2subpaving","entity data-provider boundary","expr2subpaving::expr2subpaving","constructor"
"expr2subpaving","entity data-provider boundary","expr2subpaving::~expr2subpaving","destructor"
"expr2subpaving","entity data-provider boundary","expr2subpaving::m","property collaborator"
"expr2subpaving","entity data-provider boundary","expr2subpaving::s","property collaborator"
"expr2subpaving","entity data-provider boundary","expr2subpaving::is_var","predicate collaborator"
"expr2subpaving","entity data-provider boundary","expr2subpaving::internalize_term","property non-void-command collaborator"
"udoc_plugin::project_fn","controller small-class","operator()","property controller"
"sign_condition","data-provider data-class","sign_condition","constructor"
"sign_condition","data-provider data-class","sign_condition","copy-constructor"
"sign_condition","data-provider data-class","prev","get"
"sign_condition","data-provider data-class","qidx","get"
"sign_condition","data-provider data-class","sign","get"
"relation_manager","boundary","get_context","get collaborator"
"relation_manager","boundary","get_next_table_fid","property set collaborator"
"relation_manager","boundary","is_saturated","predicate collaborator"
"relation_manager","boundary","mark_saturated","command collaborator"
"relation_manager","boundary","reset_saturated_marks","command"
"relation_manager","boundary","register_plugin","command collaborator"
"relation_manager","boundary","set_favourite_plugin","set collaborator"
"relation_manager","boundary","mk_join_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_project_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_join_project_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_rename_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_permutation_rename_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_union_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_filter_identical_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_filter_by_intersection_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_filter_by_negation_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_join_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_project_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_join_project_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_rename_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_permutation_rename_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_union_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_filter_identical_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_filter_by_intersection_fn","property non-void-command collaborator"
"relation_manager","boundary","mk_filter_by_negation_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::~relation_manager","destructor"
"relation_manager","boundary","relation_manager::reset_relations","command collaborator"
"relation_manager","boundary","relation_manager::reset","command"
"relation_manager","boundary","relation_manager::get_decl_util","property collaborator"
"relation_manager","boundary","relation_manager::get_next_relation_fid","property set collaborator"
"relation_manager","boundary","relation_manager::set_predicate_kind","command collaborator"
"relation_manager","boundary","relation_manager::get_requested_predicate_kind","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::get_relation","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::try_get_relation","property collaborator"
"relation_manager","boundary","relation_manager::store_relation","command collaborator"
"relation_manager","boundary","relation_manager::collect_predicates","property controller"
"relation_manager","boundary","relation_manager::collect_non_empty_predicates","controller"
"relation_manager","boundary","relation_manager::restrict_predicates","command collaborator"
"relation_manager","boundary","relation_manager::register_plugin","command collaborator"
"relation_manager","boundary","relation_manager::register_relation_plugin_impl","command collaborator"
"relation_manager","boundary","relation_manager::try_get_appropriate_plugin","get property non-void-command collaborator"
"relation_manager","boundary","relation_manager::get_appropriate_plugin","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::try_get_appropriate_plugin","get property non-void-command collaborator"
"relation_manager","boundary","relation_manager::get_appropriate_plugin","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::get_relation_plugin","property controller"
"relation_manager","boundary","relation_manager::get_relation_plugin","property controller"
"relation_manager","boundary","relation_manager::get_table_plugin","property controller"
"relation_manager","boundary","relation_manager::get_table_relation_plugin","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::try_get_finite_product_relation_plugin","predicate non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_empty_table","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::is_non_explanation","predicate collaborator"
"relation_manager","boundary","relation_manager::mk_empty_relation","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_empty_relation","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_table_relation","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_empty_table_relation","predicate non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_full_relation","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_full_relation","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::relation_to_table","command collaborator"
"relation_manager","boundary","relation_manager::table_to_relation","void-accessor command collaborator"
"relation_manager","boundary","relation_manager::table_to_relation","void-accessor command collaborator"
"relation_manager","boundary","relation_manager::table_to_relation","void-accessor command collaborator"
"relation_manager","boundary","relation_manager::relation_sort_to_table","predicate non-void-command collaborator"
"relation_manager","boundary","relation_manager::from_predicate","controller stateless"
"relation_manager","boundary","relation_manager::from_predicate","command collaborator"
"relation_manager","boundary","relation_manager::relation_signature_to_table","predicate non-void-command collaborator"
"relation_manager","boundary","relation_manager::relation_fact_to_table","command collaborator"
"relation_manager","boundary","relation_manager::table_fact_to_relation","command collaborator"
"relation_manager","boundary","relation_manager::to_nice_string","property collaborator"
"relation_manager","boundary","relation_manager::to_nice_string","property collaborator"
"relation_manager","boundary","relation_manager::to_nice_string","property collaborator"
"relation_manager","boundary","relation_manager::to_nice_string","property collaborator"
"relation_manager","boundary","relation_manager::display","controller"
"relation_manager","boundary","relation_manager::display_relation_sizes","controller"
"relation_manager","boundary","relation_manager::display_output_tables","collaborator"
"relation_manager","boundary","relation_manager::mk_join_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_project_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_interpreted_and_project_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_apply_sequential_fn","wrapper stateless"
"relation_manager","boundary","relation_manager::mk_join_project_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_rename_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_permutation_rename_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_union_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_widen_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_identical_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_equal_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_interpreted_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_select_equal_and_project_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::try_mk_default_filter_by_intersection_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_by_intersection_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_by_intersection_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_by_negation_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_join_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_project_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_join_project_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_rename_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_permutation_rename_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_union_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_widen_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_identical_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_equal_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_interpreted_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_interpreted_and_project_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_by_intersection_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_by_negation_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_filter_by_negated_join_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_select_equal_and_project_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_map_fn","property non-void-command collaborator"
"relation_manager","boundary","relation_manager::mk_project_with_reduce_fn","property non-void-command collaborator"
"set_bitvector_trail","commander data-class small-class","set_bitvector_trail","constructor"
"set_bitvector_trail","commander data-class small-class","undo","set"
"literal","data-provider","literal","constructor"
"literal","data-provider","literal","constructor"
"literal","data-provider","var","property collaborator"
"literal","data-provider","sign","predicate"
"literal","data-provider","unsign","property"
"literal","data-provider","index","get"
"literal","data-provider","neg","set"
"literal","data-provider","operator~","incidental"
"literal","data-provider","to_uint","get"
"literal","data-provider","hash","unclassified"
"pp_factorization","empty","pp_factorization","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","is_axiom","predicate"
"justification","data-provider","is_external","predicate"
"justification","data-provider","is_congruence","predicate"
"justification","data-provider","is_commutative","get"
"justification","data-provider","is_dependent","predicate"
"justification","data-provider","is_equality","predicate"
"justification","data-provider","get_dependency","get collaborator"
"justification","data-provider","lhs","get collaborator"
"justification","data-provider","rhs","get collaborator"
"justification","data-provider","timestamp","get"
"justification","data-provider","get_theory_id","get collaborator"
"justification","data-provider","ext","property collaborator"
"justification","data-provider","copy","property wrapper"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","copy-constructor"
"justification","data-provider","get_kind","property wrapper"
"justification","data-provider","is_null","predicate"
"justification","data-provider","is_decision","predicate"
"justification","data-provider","is_clause","predicate"
"justification","data-provider","is_lazy","predicate"
"justification","data-provider","get_clause","property wrapper"
"justification","data-provider","get_lazy","property wrapper"
"justification","data-provider","operator==","predicate"
"justification","data-provider","operator!=","predicate"
"justification","data-provider","justification","copy-constructor"
"justification","data-provider","val1","unclassified"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","justification","constructor"
"justification","data-provider","level","get"
"justification","data-provider","get_kind","property collaborator"
"justification","data-provider","is_none","predicate"
"justification","data-provider","is_binary_clause","predicate"
"justification","data-provider","get_literal","property collaborator"
"justification","data-provider","is_clause","predicate"
"justification","data-provider","get_clause_offset","get collaborator"
"justification","data-provider","is_ext_justification","predicate"
"justification","data-provider","get_ext_justification_idx","get collaborator"
"justification","data-provider","justification","constructor"
"justification","data-provider","to_index","property wrapper"
"justification","data-provider","justification","constructor"
"justification","data-provider","has_del_eh","incidental"
"justification","data-provider","del_eh","empty"
"justification","data-provider","get_antecedents","empty"
"justification","data-provider","get_from_theory","collaborator incidental"
"justification","data-provider","set_mark","set"
"justification","data-provider","unset_mark","set"
"justification","data-provider","is_marked","get"
"justification","data-provider","hash","wrapper"
"justification","data-provider","in_region","get"
"justification","data-provider","get_name","incidental"
"justification","data-provider","display_debug_info","empty"
"justification","data-provider","justification::display","property controller"
"pp_fac","empty","pp_fac","constructor"
"new_lemma","entity boundary","operator()","property non-void-command collaborator"
"new_lemma","entity boundary","expl","property non-void-command collaborator"
"new_lemma","entity boundary","num_ineqs","unclassified"
"new_lemma","entity boundary","new_lemma::new_lemma","constructor"
"new_lemma","entity boundary","new_lemma::operator|=","get non-void-command collaborator"
"new_lemma","entity boundary","new_lemma::~new_lemma","destructor"
"new_lemma","entity boundary","new_lemma::current","property collaborator"
"new_lemma","entity boundary","new_lemma::operator&=","get non-void-command collaborator"
"new_lemma","entity boundary","new_lemma::operator&=","get set collaborator"
"new_lemma","entity boundary","new_lemma::operator&=","get set collaborator"
"new_lemma","entity boundary","new_lemma::operator&=","get set collaborator"
"new_lemma","entity boundary","new_lemma::operator&=","get non-void-command collaborator"
"new_lemma","entity boundary","new_lemma::explain_fixed","get non-void-command collaborator"
"new_lemma","entity boundary","new_lemma::explain_equiv","get non-void-command collaborator"
"new_lemma","entity boundary","new_lemma::explain_var_separated_from_zero","get non-void-command collaborator"
"new_lemma","entity boundary","new_lemma::explain_existing_lower_bound","get non-void-command collaborator"
"new_lemma","entity boundary","new_lemma::explain_existing_upper_bound","get non-void-command collaborator"
"new_lemma","entity boundary","new_lemma::display","property collaborator"
"lemma","unclassified","push_back","command collaborator"
"lemma","unclassified","size","property"
"lemma","unclassified","ineqs","get collaborator"
"lemma","unclassified","ineqs","get collaborator"
"lemma","unclassified","expl","get collaborator"
"lemma","unclassified","expl","get collaborator"
"lemma","unclassified","is_conflict","predicate"
"lemma","unclassified","get_ast_manager","get collaborator"
"lemma","unclassified","get_ctp","get collaborator"
"lemma","unclassified","has_ctp","predicate non-void-command"
"lemma","unclassified","set_ctp","set collaborator"
"lemma","unclassified","reset_ctp","command"
"lemma","unclassified","bump","set"
"lemma","unclassified","get_bumped","get"
"lemma","unclassified","has_pob","predicate"
"lemma","unclassified","get_pob","get collaborator"
"lemma","unclassified","weakness","get"
"lemma","unclassified","set_external","set"
"lemma","unclassified","external","get"
"lemma","unclassified","set_background","set"
"lemma","unclassified","is_background","get"
"lemma","unclassified","is_blocked","get"
"lemma","unclassified","set_blocked","set"
"lemma","unclassified","is_inductive","predicate wrapper"
"lemma","unclassified","level","get"
"lemma","unclassified","init_level","get"
"lemma","unclassified","get_bindings","get collaborator"
"lemma","unclassified","is_ground","predicate non-void-command"
"lemma","unclassified","inc_ref","set"
"lemma","unclassified","dec_ref","set"
"lemma","unclassified","lemma::lemma","constructor"
"lemma","unclassified","lemma::lemma","constructor"
"lemma","unclassified","lemma::lemma","constructor"
"lemma","unclassified","lemma::add_skolem","command collaborator"
"lemma","unclassified","lemma::mk_expr_core","command collaborator"
"lemma","unclassified","lemma::mk_cube_core","command collaborator"
"lemma","unclassified","lemma::is_false","predicate non-void-command"
"lemma","unclassified","lemma::get_expr","get non-void-command collaborator"
"lemma","unclassified","lemma::get_cube","get non-void-command collaborator"
"lemma","unclassified","lemma::update_cube","command collaborator"
"lemma","unclassified","lemma::has_binding","predicate non-void-command collaborator"
"lemma","unclassified","lemma::add_binding","command collaborator"
"lemma","unclassified","lemma::instantiate","void-accessor command collaborator"
"lemma","unclassified","lemma::set_level","set"
"lemma","unclassified","lemma::mk_insts","command collaborator"
"ineq","boundary","ineq","constructor"
"ineq","boundary","ineq","constructor"
"ineq","boundary","ineq","constructor"
"ineq","boundary","ineq","constructor"
"ineq","boundary","ineq","constructor"
"ineq","boundary","operator==","predicate"
"ineq","boundary","term","get collaborator"
"ineq","boundary","cmp","get collaborator"
"ineq","boundary","rs","get collaborator"
"ineq","boundary","context_t<C>::ineq::display","wrapper stateless"
"ineq","boundary","solver::ineq::bv_coeff","wrapper stateless"
"ineq","boundary","solver::ineq::divide","wrapper stateless"
"ineq","boundary","solver::ineq::weaken","controller stateless"
"ineq","boundary","theory_pb::ineq::reset","command"
"ineq","boundary","theory_pb::ineq::unique","controller stateless"
"ineq","boundary","theory_pb::ineq::post_prune","command"
"ineq","boundary","theory_pb::ineq::negate","controller stateless"
"ineq","boundary","theory_pb::ineq::prune","command"
"ineq","boundary","theory_pb::ineq::normalize","property non-void-command collaborator"
"ineq","boundary","theory_pb::ineq::to_expr","wrapper stateless"
"arith_qe_util","boundary","arith_qe_util","constructor"
"arith_qe_util","boundary","get_manager","get collaborator"
"arith_qe_util","boundary","get_coeff","predicate non-void-command collaborator"
"arith_qe_util","boundary","get_const","void-accessor command collaborator"
"arith_qe_util","boundary","is_neg","predicate non-void-command collaborator"
"arith_qe_util","boundary","is_le","wrapper stateless"
"arith_qe_util","boundary","is_ge","wrapper stateless"
"arith_qe_util","boundary","is_lt","predicate non-void-command collaborator"
"arith_qe_util","boundary","is_divides","predicate wrapper"
"arith_qe_util","boundary","is_not_divides","predicate non-void-command collaborator"
"arith_qe_util","boundary","is_real","predicate collaborator"
"arith_qe_util","boundary","mk_bound_aux","command collaborator"
"arith_qe_util","boundary","mk_bound","wrapper stateless"
"arith_qe_util","boundary","mk_strict_bound","wrapper stateless"
"arith_qe_util","boundary","mk_divides","command collaborator"
"arith_qe_util","boundary","mk_div","void-accessor command collaborator"
"arith_qe_util","boundary","mk_numeral","property non-void-command collaborator"
"arith_qe_util","boundary","mk_numeral","property non-void-command collaborator"
"arith_qe_util","boundary","mk_uminus","property non-void-command collaborator"
"arith_qe_util","boundary","mk_abs","property non-void-command collaborator"
"arith_qe_util","boundary","mk_min_max","property non-void-command collaborator"
"arith_qe_util","boundary","mk_max","wrapper stateless"
"arith_qe_util","boundary","mk_min","wrapper stateless"
"arith_qe_util","boundary","mk_mul","property non-void-command collaborator"
"arith_qe_util","boundary","mk_add","property non-void-command collaborator"
"arith_qe_util","boundary","mk_sub","property non-void-command collaborator"
"arith_qe_util","boundary","mk_mul","property non-void-command collaborator"
"arith_qe_util","boundary","mk_zero","property non-void-command collaborator"
"arith_qe_util","boundary","mk_zero","property non-void-command collaborator"
"arith_qe_util","boundary","mk_one","property non-void-command collaborator"
"arith_qe_util","boundary","mk_one","property non-void-command collaborator"
"arith_qe_util","boundary","mk_le","command collaborator"
"arith_qe_util","boundary","mk_lt","void-accessor command collaborator"
"arith_qe_util","boundary","mk_eq","void-accessor command collaborator"
"arith_qe_util","boundary","mk_and","command collaborator"
"arith_qe_util","boundary","mk_and","command collaborator"
"arith_qe_util","boundary","add_and","command collaborator"
"arith_qe_util","boundary","mk_flat_and","command collaborator"
"arith_qe_util","boundary","mk_or","command collaborator"
"arith_qe_util","boundary","mk_or","command collaborator"
"arith_qe_util","boundary","mk_resolve","command collaborator"
"arith_qe_util","boundary","normalize_sum","void-accessor command collaborator"
"arith_qe_util","boundary","pp_div","controller"
"arith_qe_util","boundary","pp_divs","command collaborator"
"arith_qe_util","boundary","mk_atom","predicate non-void-command collaborator"
"arith_qe_util","boundary","mk_bounded_var","void-accessor command collaborator"
"arith_qe_util","boundary","solve","predicate non-void-command collaborator"
"arith_qe_util","boundary","extract_equalities","command collaborator"
"arith_qe_util","boundary","add_var","command"
"arith_qe_util","boundary","is_le_ge_core","predicate non-void-command collaborator"
"arith_qe_util","boundary","is_arith","predicate non-void-command collaborator"
"arith_qe_util","boundary","mk_big_or","command collaborator"
"arith_qe_util","boundary","mk_big_or_blast","void-accessor command collaborator"
"arith_qe_util","boundary","mk_big_or_symbolic","command collaborator"
"arith_qe_util","boundary","mk_big_or_symbolic_blast","command collaborator"
"arith_qe_util","boundary","mk_big_or_symbolic","command collaborator"
"arith_qe_util","boundary","isolate_x","predicate non-void-command collaborator"
"arith_qe_util","boundary","reduce_equations","predicate non-void-command collaborator"
"arith_qe_util","boundary","solve_singular","predicate non-void-command collaborator"
"arith_qe_util","boundary","solve_singular","predicate non-void-command collaborator"
"arith_qe_util","boundary","solve_linear","predicate non-void-command collaborator"
"arith_qe_util","boundary","reduce_equation","predicate non-void-command collaborator"
"arith_qe_util","boundary","find_variable","wrapper stateless"
"arith_qe_util","boundary","is_linear","predicate non-void-command collaborator"
"xor_finder","boundary","get_combination","predicate"
"xor_finder","boundary","set","set collaborator"
"xor_finder","boundary","parity","get"
"xor_finder","boundary","max_xor_size","get"
"xor_finder","boundary","removed_clauses","get collaborator"
"xor_finder","boundary","xor_finder::operator()","command collaborator"
"xor_finder","boundary","xor_finder::extract_xor","command collaborator"
"xor_finder","boundary","xor_finder::set_combination","set"
"xor_finder","boundary","xor_finder::add_xor","command collaborator"
"xor_finder","boundary","xor_finder::extract_xor","predicate non-void-command collaborator"
"xor_finder","boundary","xor_finder::extract_xor","predicate non-void-command collaborator"
"xor_finder","boundary","xor_finder::update_combinations","predicate non-void-command"
"xor_finder","boundary","xor_finder::init_parity","command"
"xor_finder","boundary","xor_finder::init_clause_filter","command"
"xor_finder","boundary","xor_finder::init_clause_filter","command collaborator"
"xor_finder","boundary","xor_finder::get_clause_filter","controller stateless"
"point","unclassified","point","constructor"
"point","unclassified","point","constructor"
"point","unclassified","operator*=","get non-void-command collaborator"
"point","unclassified","operator/=","get non-void-command collaborator"
"point","unclassified","operator+","property"
"point","unclassified","operator-","property"
"lock_guard","empty","lock_guard","constructor"
"npn3_finder","entity commander boundary","set_on_mux","set collaborator"
"npn3_finder","entity commander boundary","set_on_maj","set collaborator"
"npn3_finder","entity commander boundary","set_on_orand","set collaborator"
"npn3_finder","entity commander boundary","set_on_and","set collaborator"
"npn3_finder","entity commander boundary","set_on_xor","set collaborator"
"npn3_finder","entity commander boundary","set_on_andxor","set collaborator"
"npn3_finder","entity commander boundary","set_on_xorand","set collaborator"
"npn3_finder","entity commander boundary","set_on_gamble","set collaborator"
"npn3_finder","entity commander boundary","set_on_onehot","set collaborator"
"npn3_finder","entity commander boundary","set_on_dot","set collaborator"
"npn3_finder","entity commander boundary","npn3_finder::npn3_finder","constructor"
"npn3_finder","entity commander boundary","npn3_finder::operator()","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::implies","predicate collaborator"
"npn3_finder","entity commander boundary","npn3_finder::process_clauses","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::process_more_clauses","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::has_ternary","predicate collaborator"
"npn3_finder","entity commander boundary","npn3_finder::has_quaternary","predicate collaborator"
"npn3_finder","entity commander boundary","npn3_finder::filter","empty"
"npn3_finder","entity commander boundary","npn3_finder::find_npn3","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_mux","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_maj","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_orand","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_xor","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_and","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_andxor","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_xorand","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_gamble","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_onehot","command collaborator"
"npn3_finder","entity commander boundary","npn3_finder::find_dot","command collaborator"
"limit_denominator_rewriter_cfg","entity boundary","limit_denominator_rewriter_cfg","constructor"
"limit_denominator_rewriter_cfg","entity boundary","is_numeral","predicate non-void-command"
"limit_denominator_rewriter_cfg","entity boundary","limit_denominator","predicate wrapper"
"limit_denominator_rewriter_cfg","entity boundary","reduce_app","property non-void-command collaborator"
"order","entity commander boundary","order","constructor"
"order","entity commander boundary","order::order_lemma","command collaborator"
"order","entity commander boundary","order::order_lemma_on_monic","command collaborator"
"order","entity commander boundary","order::order_lemma_on_binomial","command collaborator"
"order","entity commander boundary","order::order_lemma_on_binomial_sign","command collaborator"
"order","entity commander boundary","order::order_lemma_on_factor_binomial_explore","command collaborator"
"order","entity commander boundary","order::order_lemma_on_factor_binomial_rm","command collaborator"
"order","entity commander boundary","order::order_lemma_on_binomial_ac_bd","command collaborator"
"order","entity commander boundary","order::generate_mon_ol","command collaborator"
"order","entity commander boundary","order::order_lemma_on_ac_and_bc","predicate non-void-command collaborator"
"order","entity commander boundary","order::order_lemma_on_factorization","command collaborator"
"order","entity commander boundary","order::order_lemma_on_ac_explore","command collaborator"
"order","entity commander boundary","order::generate_ol_eq","command collaborator"
"order","entity commander boundary","order::generate_ol","command collaborator"
"order","entity commander boundary","order::order_lemma_on_ac_and_bc_and_factors","predicate non-void-command collaborator"
"order","entity commander boundary","order::order_lemma_on_ab_gt","void-accessor command collaborator"
"order","entity commander boundary","order::order_lemma_on_ab_lt","void-accessor command collaborator"
"order","entity commander boundary","order::order_lemma_on_ab","command"
"intervals","boundary","get_dep_intervals","get collaborator"
"intervals","boundary","mk_join","property non-void-command collaborator"
"intervals","boundary","mk_leaf","property non-void-command collaborator"
"intervals","boundary","set_lower","collaborator"
"intervals","boundary","set_upper","collaborator"
"intervals","boundary","set_lower_is_open","command"
"intervals","boundary","set_lower_is_inf","command"
"intervals","boundary","set_upper_is_open","command"
"intervals","boundary","set_upper_is_inf","command"
"intervals","boundary","is_zero","predicate collaborator"
"intervals","boundary","upper_is_inf","predicate collaborator"
"intervals","boundary","lower_is_inf","predicate collaborator"
"intervals","boundary","is_inf","predicate collaborator"
"intervals","boundary","intervals::intervals","constructor"
"intervals","boundary","intervals::get_inf_interval_child","property collaborator"
"intervals","boundary","intervals::mul_has_inf_interval","predicate collaborator"
"intervals","boundary","intervals::has_inf_interval","predicate collaborator"
"intervals","boundary","intervals::has_zero_interval","predicate collaborator"
"intervals","boundary","intervals::get_zero_interval_child","property collaborator"
"intervals","boundary","intervals::print_dependencies","property collaborator"
"intervals","boundary","intervals::display_separating_interval","property non-void-command collaborator"
"intervals","boundary","intervals::check_nex","predicate non-void-command collaborator"
"intervals","boundary","intervals::add_mul_of_degree_one_to_vector","controller stateless"
"intervals","boundary","intervals::add_linear_to_vector","command collaborator"
"intervals","boundary","intervals::expression_to_normalized_term","property non-void-command collaborator"
"intervals","boundary","intervals::find_term_column","property collaborator"
"intervals","boundary","intervals::set_zero_interval_with_explanation","void-accessor command collaborator"
"intervals","boundary","intervals::set_zero_interval","command collaborator"
"intervals","boundary","intervals::set_zero_interval_deps_for_mult","void-accessor command collaborator"
"intervals","boundary","intervals::mk_dep","property non-void-command collaborator"
"intervals","boundary","intervals::display","property collaborator"
"intervals","boundary","intervals::set_var_interval","void-accessor command collaborator"
"intervals","boundary","intervals::interval_from_term","predicate non-void-command collaborator"
"intervals","boundary","intervals::interval_of_sum_no_term","predicate non-void-command collaborator"
"intervals","boundary","intervals::conflict_u_l","predicate collaborator"
"intervals","boundary","intervals::interval_of_sum","predicate non-void-command collaborator"
"intervals","boundary","intervals::interval_of_mul","predicate non-void-command collaborator"
"intervals","boundary","intervals::to_power","command collaborator"
"intervals","boundary","intervals::interval_of_expr","predicate non-void-command collaborator"
"intervals","boundary","intervals::ls","property collaborator"
"intervals","boundary","intervals::ls","property collaborator"
"macro_decls","data-provider boundary","macro_decls","constructor"
"macro_decls","data-provider boundary","empty","predicate"
"macro_decls","data-provider boundary","last","property collaborator"
"macro_decls","data-provider boundary","begin","property collaborator"
"macro_decls","data-provider boundary","end","property collaborator"
"macro_decls","data-provider boundary","macro_decls::finalize","controller"
"macro_decls","data-provider boundary","macro_decls::insert","predicate non-void-command collaborator"
"macro_decls","data-provider boundary","macro_decls::find","property controller"
"macro_decls","data-provider boundary","macro_decls::erase_last","command collaborator"
"timeit::imp","empty","~imp","destructor"
"monic_coeff","data-provider boundary data-class small-class","monic_coeff","constructor"
"monic_coeff","data-provider boundary data-class small-class","coeff","get collaborator"
"monic_coeff","data-provider boundary data-class small-class","vars","get collaborator"
"constructor_list","data-provider data-class small-class","~constructor_list","destructor"
"constructor_list","data-provider data-class small-class","operatorZ3_constructor_list","get"
"constructor_list","data-provider data-class small-class","constructor_list::constructor_list","constructor"
"numeral_buffer","entity boundary","numeral_buffer","constructor"
"numeral_buffer","entity boundary","~numeral_buffer","destructor"
"numeral_buffer","entity boundary","m","get collaborator"
"numeral_buffer","entity boundary","size","unclassified"
"numeral_buffer","entity boundary","empty","predicate"
"numeral_buffer","entity boundary","push_back","command collaborator"
"numeral_buffer","entity boundary","pop_back","command"
"numeral_buffer","entity boundary","back","property non-void-command collaborator"
"numeral_buffer","entity boundary","back","property collaborator"
"numeral_buffer","entity boundary","operator[]","get collaborator"
"numeral_buffer","entity boundary","operator[]","get collaborator"
"numeral_buffer","entity boundary","reset","command collaborator"
"numeral_buffer","entity boundary","data","property non-void-command collaborator"
"numeral_buffer","entity boundary","reserve","command"
"numeral_buffer","entity boundary","swap","command collaborator"
"tactic_cmd","data-provider boundary lazy-class","tactic_cmd","constructor"
"tactic_cmd","data-provider boundary lazy-class","get_name","get collaborator"
"tactic_cmd","data-provider boundary lazy-class","get_descr","get"
"tactic_cmd","data-provider boundary lazy-class","mk","wrapper stateless"
"push_app_ite_rw","commander small-class","push_app_ite_rw","constructor"
"push_app_ite_rw","commander small-class","set_conservative","command"
"pp_mon","empty","pp_mon","constructor"
"pp_mon","empty","pp_mon","constructor"
"nex_creator","boundary","set_number_of_vars","command"
"nex_creator","boundary","get_number_of_vars","unclassified"
"nex_creator","boundary","set_var_weight","set"
"nex_creator","boundary","active_vars_weights","get collaborator"
"nex_creator","boundary","active_vars_weights","get collaborator"
"nex_creator","boundary","mk_mul","property non-void-command collaborator"
"nex_creator","boundary","mul_args","empty"
"nex_creator","boundary","mul_args","set collaborator"
"nex_creator","boundary","mul_args","set collaborator"
"nex_creator","boundary","add_sum","empty"
"nex_creator","boundary","add_sum","wrapper stateless"
"nex_creator","boundary","gt","predicate collaborator"
"nex_creator","boundary","clone","property non-void-command collaborator"
"nex_creator","boundary","occurences_map","get collaborator"
"nex_creator","boundary","occurences_map","get collaborator"
"nex_creator","boundary","powers","get collaborator"
"nex_creator","boundary","powers","get collaborator"
"nex_creator","boundary","add_to_allocated","command collaborator"
"nex_creator","boundary","pop","command"
"nex_creator","boundary","clear","command collaborator"
"nex_creator","boundary","nex_creator","constructor"
"nex_creator","boundary","~nex_creator","destructor"
"nex_creator","boundary","size","unclassified"
"nex_creator","boundary","mk_sum","property non-void-command collaborator"
"nex_creator","boundary","mk_sum","property non-void-command collaborator"
"nex_creator","boundary","mk_sum","property controller"
"nex_creator","boundary","mk_var","property non-void-command collaborator"
"nex_creator","boundary","mk_mul","property non-void-command collaborator"
"nex_creator","boundary","mk_mul","property non-void-command collaborator"
"nex_creator","boundary","mk_scalar","property non-void-command collaborator"
"nex_creator","boundary","gt","predicate collaborator"
"nex_creator","boundary","gt_on_nex_pow","predicate collaborator"
"nex_creator","boundary","nex_creator::mk_div","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::eat_scalar_pow","predicate non-void-command collaborator"
"nex_creator","boundary","nex_creator::simplify_children_of_mul","void-accessor command collaborator"
"nex_creator","boundary","nex_creator::gt_on_powers_mul_same_degree","predicate collaborator"
"nex_creator","boundary","nex_creator::gt_on_mul_mul","predicate collaborator"
"nex_creator","boundary","nex_creator::gt_on_var_nex","predicate collaborator"
"nex_creator","boundary","nex_creator::gt_on_mul_nex","predicate collaborator"
"nex_creator","boundary","nex_creator::gt_on_sum_sum","predicate collaborator"
"nex_creator","boundary","nex_creator::gt_for_sort_join_sum","predicate collaborator"
"nex_creator","boundary","nex_creator::gt","predicate collaborator"
"nex_creator","boundary","nex_creator::is_sorted","predicate collaborator"
"nex_creator","boundary","nex_creator::mul_is_simplified","predicate collaborator"
"nex_creator","boundary","nex_creator::simplify_mul","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::simplify_sum","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::sum_is_simplified","predicate collaborator"
"nex_creator","boundary","nex_creator::mul_to_powers","command collaborator"
"nex_creator","boundary","nex_creator::register_in_join_map","controller stateless"
"nex_creator","boundary","nex_creator::fill_join_map_for_sum","predicate non-void-command collaborator"
"nex_creator","boundary","nex_creator::sort_join_sum","command collaborator"
"nex_creator","boundary","nex_creator::simplify_children_of_sum","void-accessor command collaborator"
"nex_creator","boundary","nex_creator::mk_div_sum_by_mul","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::mk_div_mul_by_mul","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::mk_div_by_mul","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::mk_div","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::simplify","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::process_map_pair","command collaborator"
"nex_creator","boundary","nex_creator::is_simplified","predicate collaborator"
"nex_creator","boundary","nex_creator::find_sum_in_mul","controller stateless"
"nex_creator","boundary","nex_creator::canonize_mul","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::canonize","property non-void-command collaborator"
"nex_creator","boundary","nex_creator::equal","controller stateless"
"factorization_combination_iterator_base","data-provider","find","property"
"factorization_combination_iterator_base","data-provider","factorization_combination_iterator_base","constructor"
"factorization_combination_iterator_base","data-provider","get_factors","get collaborator"
"factorization_combination_iterator_base","data-provider","next","predicate non-void-command"
"factorization_combination_iterator_base","data-provider","left_size","get"
"factorization_combination_iterator_base","data-provider","right_size","unclassified"
"factorization_combination_iterator_base","data-provider","display","collaborator"
"array_map","entity boundary","is_current","predicate collaborator"
"array_map","entity boundary","get_core","property collaborator"
"array_map","entity boundary","really_flush","command collaborator"
"array_map","entity boundary","~array_map","destructor"
"array_map","entity boundary","contains","predicate collaborator"
"array_map","entity boundary","get","property collaborator"
"array_map","entity boundary","reset","set"
"array_map","entity boundary","insert","command collaborator"
"array_map","entity boundary","erase","command collaborator"
"array_map","entity boundary","flush","command"
"array_map","entity boundary","finalize","command"
"nex_scalar","data-provider boundary lazy-class degenerate","nex_scalar","constructor"
"nex_scalar","data-provider boundary lazy-class degenerate","value","get collaborator"
"nex_scalar","data-provider boundary lazy-class degenerate","print","property collaborator"
"nex_scalar","data-provider boundary lazy-class degenerate","type","collaborator incidental"
"nex_scalar","data-provider boundary lazy-class degenerate","get_degree","incidental"
"nex_scalar","data-provider boundary lazy-class degenerate","is_linear","incidental"
"int_branch","entity boundary","int_branch::int_branch","constructor"
"int_branch","entity boundary","int_branch::operator()","property non-void-command collaborator"
"int_branch","entity boundary","int_branch::create_branch_on_column","property non-void-command collaborator"
"int_branch","entity boundary","int_branch::find_inf_int_base_column","property non-void-command"
"array_util","entity boundary","get_manager","get collaborator"
"array_util","entity boundary","mk_store","property collaborator"
"array_util","entity boundary","mk_store","property collaborator"
"array_util","entity boundary","mk_store","property collaborator"
"array_util","entity boundary","mk_store","property collaborator"
"array_util","entity boundary","mk_select","property collaborator"
"array_util","entity boundary","mk_select","property collaborator"
"array_util","entity boundary","mk_select","property collaborator"
"array_util","entity boundary","mk_select","property collaborator"
"array_util","entity boundary","mk_select","property collaborator"
"array_util","entity boundary","mk_map","property non-void-command collaborator"
"array_util","entity boundary","mk_map_assoc","property non-void-command collaborator"
"array_util","entity boundary","mk_default","property non-void-command collaborator"
"array_util","entity boundary","mk_const_array","property non-void-command collaborator"
"array_util","entity boundary","mk_empty_set","property non-void-command collaborator"
"array_util","entity boundary","mk_full_set","property non-void-command collaborator"
"array_util","entity boundary","mk_setminus","property non-void-command collaborator"
"array_util","entity boundary","mk_intersection","property non-void-command collaborator"
"array_util","entity boundary","mk_union","property non-void-command collaborator"
"array_util","entity boundary","mk_has_size","property non-void-command collaborator"
"array_util","entity boundary","mk_card","property non-void-command collaborator"
"array_util","entity boundary","mk_array_sort","property non-void-command collaborator"
"array_util","entity boundary","mk_array_sort","property non-void-command collaborator"
"array_util","entity boundary","mk_array_sort","property non-void-command collaborator"
"array_util","entity boundary","mk_as_array","property non-void-command collaborator"
"array_util","entity boundary","get_array_range_rec","property non-void-command collaborator"
"array_util","entity boundary","array_util::array_util","constructor"
"array_util","entity boundary","array_util::is_as_array_tree","predicate non-void-command collaborator"
"array_util","entity boundary","array_util::mk_array_sort","property non-void-command collaborator"
"array_util","entity boundary","array_util::mk_array_ext","property non-void-command collaborator"
"monic","unclassified","monic","constructor"
"monic","unclassified","monic","constructor"
"monic","unclassified","visited","get"
"monic","unclassified","set_visited","set"
"monic","unclassified","rvars","get collaborator"
"monic","unclassified","rsign","get"
"monic","unclassified","reset_rfields","command"
"monic","unclassified","push_rvar","set collaborator"
"monic","unclassified","sort_rvars","command"
"monic","unclassified","set_propagated","set"
"monic","unclassified","is_propagated","get"
"monic","unclassified","set_bound_propagated","set"
"monic","unclassified","is_bound_propagated","get"
"monic","unclassified","begin","property collaborator"
"monic","unclassified","end","property collaborator"
"monic","unclassified","rat_sign","property wrapper"
"check_table_plugin::filter_identical_fn","boundary degenerate small-class","operator()","wrapper stateless"
"cofactor_term_ite_tactic","commander boundary","process","controller stateless"
"cofactor_term_ite_tactic","commander boundary","cofactor_term_ite_tactic","constructor"
"cofactor_term_ite_tactic","commander boundary","translate","property wrapper"
"cofactor_term_ite_tactic","commander boundary","name","incidental"
"cofactor_term_ite_tactic","commander boundary","updt_params","command collaborator"
"cofactor_term_ite_tactic","commander boundary","collect_param_descrs","command collaborator"
"cofactor_term_ite_tactic","commander boundary","operator()","command collaborator"
"cofactor_term_ite_tactic","commander boundary","cleanup","command"
"mon_eq","data-provider","mon_eq","constructor"
"mon_eq","data-provider","mon_eq","constructor"
"mon_eq","data-provider","mon_eq","constructor"
"mon_eq","data-provider","var","get"
"mon_eq","data-provider","size","unclassified"
"mon_eq","data-provider","vars","get collaborator"
"mon_eq","data-provider","empty","predicate"
"mon_eq","data-provider","is_sorted","predicate"
"mon_eq","data-provider","contains_var","predicate collaborator"
"mon_eq","data-provider","vars1","get collaborator"
"network_flow","entity boundary","network_flow<Ext>::network_flow","constructor"
"network_flow","entity boundary","network_flow<Ext>::initialize","command collaborator"
"network_flow","entity boundary","network_flow<Ext>::update_potentials","command collaborator"
"network_flow","entity boundary","network_flow<Ext>::update_flows","command collaborator"
"network_flow","entity boundary","network_flow<Ext>::choose_leaving_edge","get non-void-command collaborator"
"network_flow","entity boundary","network_flow<Ext>::update_spanning_tree","command"
"network_flow","entity boundary","network_flow<Ext>::choose_entering_edge","predicate non-void-command collaborator"
"network_flow","entity boundary","network_flow<Ext>::min_cost","property non-void-command collaborator"
"network_flow","entity boundary","network_flow<Ext>::is_infeasible","predicate non-void-command"
"network_flow","entity boundary","network_flow<Ext>::get_optimal_solution","property non-void-command collaborator"
"network_flow","entity boundary","network_flow<Ext>::get_cost","property collaborator"
"network_flow","entity boundary","network_flow<Ext>::edge_in_tree","get collaborator"
"network_flow","entity boundary","network_flow<Ext>::check_well_formed","predicate non-void-command collaborator"
"network_flow","entity boundary","network_flow<Ext>::check_optimal","predicate non-void-command"
"network_flow","entity boundary","network_flow<Ext>::display_primal","command collaborator"
"network_flow","entity boundary","network_flow<Ext>::display_dual","command collaborator"
"network_flow","entity boundary","network_flow<Ext>::display_spanning_tree","command collaborator"
"hash<lp::numeric_pair<lp::mpq>>","boundary degenerate small-class","operator()","wrapper stateless"
"maxsmt","boundary","size","unclassified"
"maxsmt","boundary","operator[]","get collaborator"
"maxsmt","boundary","weight","get collaborator"
"maxsmt","boundary","maxsmt::maxsmt","constructor"
"maxsmt","boundary","maxsmt::operator()","property non-void-command collaborator"
"maxsmt","boundary","maxsmt::reset_upper","command"
"maxsmt","boundary","maxsmt::verify_assignment","incidental"
"maxsmt","boundary","maxsmt::get_assignment","predicate"
"maxsmt","boundary","maxsmt::get_lower","property collaborator"
"maxsmt","boundary","maxsmt::get_upper","property collaborator"
"maxsmt","boundary","maxsmt::update_lower","set collaborator"
"maxsmt","boundary","maxsmt::update_upper","set collaborator"
"maxsmt","boundary","maxsmt::get_model","void-accessor command collaborator"
"maxsmt","boundary","maxsmt::commit_assignment","command"
"maxsmt","boundary","maxsmt::add","command collaborator"
"maxsmt","boundary","maxsmt::display_answer","collaborator"
"maxsmt","boundary","maxsmt::is_maxsat_problem","controller stateless"
"maxsmt","boundary","maxsmt::updt_params","command collaborator"
"maxsmt","boundary","maxsmt::collect_statistics","collaborator"
"maxsmt","boundary","maxsmt::s","property non-void-command collaborator"
"maxsmt","boundary","maxsmt::model_updated","command collaborator"
"lp_settings","data-provider","enable_hnf","get"
"lp_settings","data-provider","nlsat_delay","get"
"lp_settings","data-provider","int_run_gcd_test","get"
"lp_settings","data-provider","int_run_gcd_test","get"
"lp_settings","data-provider","print_external_var_name","get"
"lp_settings","data-provider","propagate_eqs","get"
"lp_settings","data-provider","hnf_cut_period","get"
"lp_settings","data-provider","set_hnf_cut_period","set"
"lp_settings","data-provider","random_next","wrapper stateless"
"lp_settings","data-provider","random_next","wrapper stateless"
"lp_settings","data-provider","set_random_seed","command"
"lp_settings","data-provider","bound_progation","get"
"lp_settings","data-provider","bound_propagation","get"
"lp_settings","data-provider","set_resource_limit","set collaborator"
"lp_settings","data-provider","get_cancel_flag","predicate"
"lp_settings","data-provider","set_debug_ostream","set collaborator"
"lp_settings","data-provider","set_message_ostream","set collaborator"
"lp_settings","data-provider","get_debug_ostream","get collaborator"
"lp_settings","data-provider","get_message_ostream","get collaborator"
"lp_settings","data-provider","stats","get collaborator"
"lp_settings","data-provider","stats","get collaborator"
"lp_settings","data-provider","simplex_strategy","get collaborator"
"lp_settings","data-provider","simplex_strategy","get collaborator"
"lp_settings","data-provider","use_tableau_rows","predicate"
"lp_settings","data-provider","lp::lp_settings::updt_params","command collaborator"
"lemma_lt_proc","pure-controller degenerate small-class","operator()","controller stateless"
"solver2tactic","commander boundary","solver2tactic","constructor"
"solver2tactic","commander boundary","updt_params","command collaborator"
"solver2tactic","commander boundary","collect_param_descrs","command collaborator"
"solver2tactic","commander boundary","operator()","command collaborator"
"solver2tactic","commander boundary","collect_statistics","controller"
"solver2tactic","commander boundary","reset_statistics","command"
"solver2tactic","commander boundary","cleanup","empty"
"solver2tactic","commander boundary","reset","command"
"solver2tactic","commander boundary","set_logic","empty"
"solver2tactic","commander boundary","set_progress_callback","command collaborator"
"solver2tactic","commander boundary","translate","property non-void-command collaborator"
"solver2tactic","commander boundary","name","incidental"
"lar_term","data-provider boundary","j","get collaborator"
"lar_term","data-provider boundary","j","get collaborator"
"lar_term","data-provider boundary","add_monomial","command"
"lar_term","data-provider boundary","add_var","command collaborator"
"lar_term","data-provider boundary","is_empty","predicate"
"lar_term","data-provider boundary","size","unclassified"
"lar_term","data-provider boundary","coeffs","get collaborator"
"lar_term","data-provider boundary","subst_by_term","command collaborator"
"lar_term","data-provider boundary","lar_term","constructor"
"lar_term","data-provider boundary","lar_term","constructor"
"lar_term","data-provider boundary","lar_term","constructor"
"lar_term","data-provider boundary","lar_term","constructor"
"lar_term","data-provider boundary","lar_term","constructor"
"lar_term","data-provider boundary","lar_term","constructor"
"lar_term","data-provider boundary","lar_term","constructor"
"lar_term","data-provider boundary","operator==","incidental"
"lar_term","data-provider boundary","operator!=","predicate"
"lar_term","data-provider boundary","coeffs_as_vector","property controller"
"lar_term","data-provider boundary","subst_in_row","command collaborator"
"lar_term","data-provider boundary","subst_index","command collaborator"
"lar_term","data-provider boundary","contains","predicate"
"lar_term","data-provider boundary","negate","controller"
"lar_term","data-provider boundary","apply","property collaborator"
"lar_term","data-provider boundary","operator*=","get collaborator"
"lar_term","data-provider boundary","clear","command"
"lar_term","data-provider boundary","is_normalized","predicate controller"
"lar_term","data-provider boundary","get_normalized_by_min_var","get property collaborator"
"lar_term","data-provider boundary","begin","property collaborator"
"lar_term","data-provider boundary","end","property collaborator"
"is_mip_probe","boundary degenerate small-class","operator()","wrapper stateless"
"fpa2bv_rewriter_cfg","entity boundary","m","get collaborator"
"fpa2bv_rewriter_cfg","entity boundary","~fpa2bv_rewriter_cfg","destructor"
"fpa2bv_rewriter_cfg","entity boundary","cleanup_buffers","command"
"fpa2bv_rewriter_cfg","entity boundary","reset","empty"
"fpa2bv_rewriter_cfg","entity boundary","fpa2bv_rewriter_cfg::fpa2bv_rewriter_cfg","constructor"
"fpa2bv_rewriter_cfg","entity boundary","fpa2bv_rewriter_cfg::updt_local_params","command collaborator"
"fpa2bv_rewriter_cfg","entity boundary","fpa2bv_rewriter_cfg::updt_params","command collaborator"
"fpa2bv_rewriter_cfg","entity boundary","fpa2bv_rewriter_cfg::max_steps_exceeded","predicate"
"fpa2bv_rewriter_cfg","entity boundary","fpa2bv_rewriter_cfg::reduce_app","property non-void-command collaborator"
"fpa2bv_rewriter_cfg","entity boundary","fpa2bv_rewriter_cfg::pre_visit","predicate non-void-command collaborator"
"fpa2bv_rewriter_cfg","entity boundary","fpa2bv_rewriter_cfg::reduce_quantifier","predicate non-void-command collaborator"
"fpa2bv_rewriter_cfg","entity boundary","fpa2bv_rewriter_cfg::reduce_var","predicate non-void-command collaborator"
"lar_solver","boundary","clear_columns_with_changed_bounds","command"
"lar_solver","boundary","columns_with_changed_bounds","get collaborator"
"lar_solver","boundary","crossed_bounds_deps","get collaborator"
"lar_solver","boundary","crossed_bounds_deps","get collaborator"
"lar_solver","boundary","crossed_bounds_column","get collaborator"
"lar_solver","boundary","crossed_bounds_column","get collaborator"
"lar_solver","boundary","validate_blocker","get"
"lar_solver","boundary","validate_blocker","get"
"lar_solver","boundary","require_nbasis_sort","set"
"lar_solver","boundary","calculate_implied_bounds_for_row","non-void-command collaborator"
"lar_solver","boundary","column_value_is_integer","predicate"
"lar_solver","boundary","get_core_solver","get collaborator"
"lar_solver","boundary","fixed_var_table_int","get collaborator"
"lar_solver","boundary","fixed_var_table_real","get collaborator"
"lar_solver","boundary","fixed_var_table_real","get collaborator"
"lar_solver","boundary","find_in_fixed_tables","predicate"
"lar_solver","boundary","set_column_value","command collaborator"
"lar_solver","boundary","set_column_value_test","command collaborator"
"lar_solver","boundary","pp","property wrapper"
"lar_solver","boundary","backup_x","set"
"lar_solver","boundary","restore_x","set"
"lar_solver","boundary","explain_implied_bound","command collaborator"
"lar_solver","boundary","get_base_column_in_row","unclassified"
"lar_solver","boundary","propagate_bounds_for_touched_rows","command collaborator"
"lar_solver","boundary","check_missed_propagations","command collaborator"
"lar_solver","boundary","num_scopes","unclassified"
"lar_solver","boundary","trail","get collaborator"
"lar_solver","boundary","column_count","unclassified"
"lar_solver","boundary","local_to_external","property collaborator"
"lar_solver","boundary","column_associated_with_row","get wrapper"
"lar_solver","boundary","row_count","unclassified"
"lar_solver","boundary","clear_inf_heap","command"
"lar_solver","boundary","pivot","command"
"lar_solver","boundary","change_basic_columns_dependend_on_a_given_nb_column_report","command collaborator"
"lar_solver","boundary","set_value_for_nbasic_column_report","command collaborator"
"lar_solver","boundary","try_to_patch","predicate non-void-command collaborator"
"lar_solver","boundary","column_has_upper_bound","predicate"
"lar_solver","boundary","column_has_lower_bound","predicate"
"lar_solver","boundary","flatten","get non-void-command collaborator"
"lar_solver","boundary","push_explanation","command collaborator"
"lar_solver","boundary","dep_manager","get collaborator"
"lar_solver","boundary","get_column_upper_bound_witness","get wrapper"
"lar_solver","boundary","get_upper_bound","property collaborator"
"lar_solver","boundary","get_lower_bound","property collaborator"
"lar_solver","boundary","bound_span_x","property collaborator"
"lar_solver","boundary","column_is_feasible","predicate"
"lar_solver","boundary","get_column_type","property collaborator"
"lar_solver","boundary","get_column_types","property collaborator"
"lar_solver","boundary","display_constraint","property collaborator"
"lar_solver","boundary","from_model_in_impq_to_mpq","property collaborator"
"lar_solver","boundary","number_of_vars","unclassified"
"lar_solver","boundary","is_base","predicate"
"lar_solver","boundary","column_lower_bound","property collaborator"
"lar_solver","boundary","column_upper_bound","property collaborator"
"lar_solver","boundary","column_is_bounded","predicate"
"lar_solver","boundary","check_feasible","predicate"
"lar_solver","boundary","get_bound_constraint_witnesses_for_column","property non-void-command collaborator"
"lar_solver","boundary","get_bound_constraint_witnesses_for_columns","property non-void-command collaborator"
"lar_solver","boundary","join_deps","property non-void-command collaborator"
"lar_solver","boundary","constraints","get collaborator"
"lar_solver","boundary","get_column_lower_bound_witness","get wrapper"
"lar_solver","boundary","column_has_term","get wrapper"
"lar_solver","boundary","print_column_info","property collaborator"
"lar_solver","boundary","print_column_bound_info","property collaborator"
"lar_solver","boundary","has_inf_int","predicate"
"lar_solver","boundary","terms","get collaborator"
"lar_solver","boundary","set_int_solver","set collaborator"
"lar_solver","boundary","get_int_solver","get collaborator"
"lar_solver","boundary","get_int_solver","get collaborator"
"lar_solver","boundary","get_term","get wrapper"
"lar_solver","boundary","r_basis_has_inf_int","predicate"
"lar_solver","boundary","get_row","property collaborator"
"lar_solver","boundary","basic2row","property collaborator"
"lar_solver","boundary","get_column","get collaborator"
"lar_solver","boundary","r_heading","property"
"lar_solver","boundary","r_basis","unclassified"
"lar_solver","boundary","r_nbasis","unclassified"
"lar_solver","boundary","column_is_real","predicate"
"lar_solver","boundary","has_changed_columns","predicate"
"lar_solver","boundary","r_x","property collaborator"
"lar_solver","boundary","column_value_is_int","predicate wrapper"
"lar_solver","boundary","A_r","property collaborator"
"lar_solver","boundary","A_r","property collaborator"
"lar_solver","boundary","get_column_value","property collaborator"
"lar_solver","boundary","external_to_local","property collaborator"
"lar_solver","boundary","usage_in_terms","get collaborator"
"lar_solver","boundary","lar_solver::settings","get collaborator"
"lar_solver","boundary","lar_solver::settings","get collaborator"
"lar_solver","boundary","lar_solver::stats","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::updt_params","command collaborator"
"lar_solver","boundary","lar_solver::lar_solver","constructor"
"lar_solver","boundary","lar_solver::track_touched_rows","set"
"lar_solver","boundary","lar_solver::touched_rows_are_tracked","predicate"
"lar_solver","boundary","lar_solver::~lar_solver","destructor"
"lar_solver","boundary","lar_solver::sizes_are_correct","predicate"
"lar_solver","boundary","lar_solver::print_implied_bound","property collaborator"
"lar_solver","boundary","lar_solver::print_values","property collaborator"
"lar_solver","boundary","lar_solver::implied_bound_is_correctly_explained","predicate collaborator"
"lar_solver","boundary","lar_solver::row_has_a_big_num","predicate collaborator"
"lar_solver","boundary","lar_solver::get_status","get collaborator"
"lar_solver","boundary","lar_solver::set_status","set collaborator"
"lar_solver","boundary","lar_solver::find_feasible_solution","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::solve","get non-void-command collaborator"
"lar_solver","boundary","lar_solver::fill_explanation_from_crossed_bounds_column","collaborator"
"lar_solver","boundary","lar_solver::push","command"
"lar_solver","boundary","lar_solver::clean_popped_elements","controller stateless"
"lar_solver","boundary","lar_solver::clean_popped_elements_for_heap","controller stateless"
"lar_solver","boundary","lar_solver::pop","command"
"lar_solver","boundary","lar_solver::maximize_term_on_tableau","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::get_dependencies_of_maximum","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::find_improved_bound","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::costs_are_zeros_for_r_solver","predicate"
"lar_solver","boundary","lar_solver::reduced_costs_are_zeroes_for_r_solver","predicate"
"lar_solver","boundary","lar_solver::set_costs_to_zero","command collaborator"
"lar_solver","boundary","lar_solver::prepare_costs_for_r_solver","command collaborator"
"lar_solver","boundary","lar_solver::move_non_basic_columns_to_bounds","command"
"lar_solver","boundary","lar_solver::move_non_basic_column_to_bounds","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::set_value_for_nbasic_column","command collaborator"
"lar_solver","boundary","lar_solver::maximize_term_on_feasible_r_solver","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::remove_from_basis","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::get_term_to_maximize","get property collaborator"
"lar_solver","boundary","lar_solver::maximize_term","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::pop_core_solver_params","command"
"lar_solver","boundary","lar_solver::pop_core_solver_params","command"
"lar_solver","boundary","lar_solver::set_upper_bound_witness","command collaborator"
"lar_solver","boundary","lar_solver::set_lower_bound_witness","command collaborator"
"lar_solver","boundary","lar_solver::register_monoid_in_map","controller stateless"
"lar_solver","boundary","lar_solver::substitute_terms_in_linear_expression","collaborator"
"lar_solver","boundary","lar_solver::add_touched_row","command"
"lar_solver","boundary","lar_solver::remove_fixed_vars_from_base","command"
"lar_solver","boundary","lar_solver::fixed_base_removed_correctly","predicate collaborator"
"lar_solver","boundary","lar_solver::use_tableau_costs","predicate"
"lar_solver","boundary","lar_solver::row_is_correct","predicate collaborator"
"lar_solver","boundary","lar_solver::row_of_basic_column","unclassified"
"lar_solver","boundary","lar_solver::ax_is_correct","predicate"
"lar_solver","boundary","lar_solver::tableau_with_costs","predicate"
"lar_solver","boundary","lar_solver::costs_are_used","predicate"
"lar_solver","boundary","lar_solver::change_basic_columns_dependend_on_a_given_nb_column","command collaborator"
"lar_solver","boundary","lar_solver::update_x_and_inf_costs_for_column_with_changed_bounds","command collaborator"
"lar_solver","boundary","lar_solver::detect_rows_with_changed_bounds_for_column","command"
"lar_solver","boundary","lar_solver::detect_rows_with_changed_bounds","command collaborator"
"lar_solver","boundary","lar_solver::update_x_and_inf_costs_for_columns_with_changed_bounds_tableau","command collaborator"
"lar_solver","boundary","lar_solver::solve_with_core_solver","command"
"lar_solver","boundary","lar_solver::is_feasible","predicate"
"lar_solver","boundary","lar_solver::get_basic_var_value_from_row","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::var_is_registered","predicate collaborator"
"lar_solver","boundary","lar_solver::all_constrained_variables_are_registered","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::all_constraints_hold","predicate collaborator"
"lar_solver","boundary","lar_solver::constraint_holds","predicate collaborator"
"lar_solver","boundary","lar_solver::register_in_map","controller stateless"
"lar_solver","boundary","lar_solver::the_left_sides_sum_to_zero","predicate collaborator"
"lar_solver","boundary","lar_solver::explanation_is_correct","collaborator incidental"
"lar_solver","boundary","lar_solver::inf_explanation_is_correct","predicate collaborator"
"lar_solver","boundary","lar_solver::sum_of_right_sides_of_explanation","property collaborator"
"lar_solver","boundary","lar_solver::has_lower_bound","predicate collaborator"
"lar_solver","boundary","lar_solver::has_upper_bound","predicate collaborator"
"lar_solver","boundary","lar_solver::has_value","predicate collaborator"
"lar_solver","boundary","lar_solver::get_infeasibility_explanation","collaborator"
"lar_solver","boundary","lar_solver::get_infeasibility_explanation_for_inf_sign","collaborator"
"lar_solver","boundary","lar_solver::get_model","void-accessor collaborator"
"lar_solver","boundary","lar_solver::init_model","predicate collaborator"
"lar_solver","boundary","lar_solver::get_model_do_not_care_about_diff_vars","void-accessor collaborator"
"lar_solver","boundary","lar_solver::get_value","property collaborator"
"lar_solver","boundary","lar_solver::get_rid_of_inf_eps","command"
"lar_solver","boundary","lar_solver::set_variable_name","command"
"lar_solver","boundary","lar_solver::get_variable_name","property collaborator"
"lar_solver","boundary","lar_solver::display","property collaborator"
"lar_solver","boundary","lar_solver::print_terms","property collaborator"
"lar_solver","boundary","lar_solver::print_term","controller stateless"
"lar_solver","boundary","lar_solver::print_term_as_indices","controller stateless"
"lar_solver","boundary","lar_solver::get_left_side_val","controller stateless"
"lar_solver","boundary","lar_solver::fill_var_set_for_random_update","command collaborator"
"lar_solver","boundary","lar_solver::random_update","command collaborator"
"lar_solver","boundary","lar_solver::add_column_rows_to_touched_rows","command collaborator"
"lar_solver","boundary","lar_solver::pop","command"
"lar_solver","boundary","lar_solver::column_represents_row_in_tableau","get wrapper"
"lar_solver","boundary","lar_solver::make_sure_that_the_bottom_right_elem_not_zero_in_tableau","command"
"lar_solver","boundary","lar_solver::remove_last_row_and_column_from_tableau","command"
"lar_solver","boundary","lar_solver::remove_last_column_from_A","command"
"lar_solver","boundary","lar_solver::remove_last_column_from_basis_tableau","command"
"lar_solver","boundary","lar_solver::remove_last_column_from_tableau","command"
"lar_solver","boundary","lar_solver::clean_inf_heap_of_r_solver_after_pop","command"
"lar_solver","boundary","lar_solver::model_is_int_feasible","predicate"
"lar_solver","boundary","lar_solver::term_is_int","predicate collaborator"
"lar_solver","boundary","lar_solver::term_is_int","predicate collaborator"
"lar_solver","boundary","lar_solver::var_is_int","predicate collaborator"
"lar_solver","boundary","lar_solver::column_is_int","predicate"
"lar_solver","boundary","lar_solver::column_is_fixed","predicate"
"lar_solver","boundary","lar_solver::column_is_free","predicate"
"lar_solver","boundary","lar_solver::add_named_var","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::add_var","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::has_int_var","predicate"
"lar_solver","boundary","lar_solver::register_new_external_var","command"
"lar_solver","boundary","lar_solver::external_is_used","predicate"
"lar_solver","boundary","lar_solver::add_non_basic_var_to_core_fields","command"
"lar_solver","boundary","lar_solver::add_new_var_to_core_fields_for_mpq","command"
"lar_solver","boundary","lar_solver::term_coeffs_are_ok","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::all_vars_are_registered","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::subst_known_terms","controller stateless"
"lar_solver","boundary","lar_solver::add_term","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::add_row_from_term_no_constraint","command"
"lar_solver","boundary","lar_solver::add_basic_var_to_core_fields","command"
"lar_solver","boundary","lar_solver::bound_is_integer_for_integer_column","predicate collaborator"
"lar_solver","boundary","lar_solver::add_var_bound_check_on_equal","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::add_var_bound","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::remove_non_fixed_from_table","command collaborator"
"lar_solver","boundary","lar_solver::remove_non_fixed_from_fixed_var_table","command"
"lar_solver","boundary","lar_solver::register_in_fixed_var_table","void-accessor command"
"lar_solver","boundary","lar_solver::activate_check_on_equal","command collaborator"
"lar_solver","boundary","lar_solver::activate","command collaborator"
"lar_solver","boundary","lar_solver::adjust_bound_for_int","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::mk_var_bound","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::compare_values","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::compare_values","wrapper stateless"
"lar_solver","boundary","lar_solver::update_column_type_and_bound","command collaborator"
"lar_solver","boundary","lar_solver::validate_bound","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::add_dep_constraints_to_solver","command collaborator"
"lar_solver","boundary","lar_solver::add_bound_negation_to_solver","controller stateless"
"lar_solver","boundary","lar_solver::add_constraint_to_validate","command collaborator"
"lar_solver","boundary","lar_solver::update_column_type_and_bound","command collaborator"
"lar_solver","boundary","lar_solver::insert_to_columns_with_changed_bounds","command"
"lar_solver","boundary","lar_solver::update_column_type_and_bound_check_on_equal","void-accessor command"
"lar_solver","boundary","lar_solver::add_var_bound_on_constraint_for_term","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::update_column_type_and_bound_with_ub","command collaborator"
"lar_solver","boundary","lar_solver::update_column_type_and_bound_with_no_ub","command collaborator"
"lar_solver","boundary","lar_solver::update_bound_with_ub_lb","command collaborator"
"lar_solver","boundary","lar_solver::update_bound_with_no_ub_lb","command collaborator"
"lar_solver","boundary","lar_solver::update_bound_with_ub_no_lb","command collaborator"
"lar_solver","boundary","lar_solver::update_bound_with_no_ub_no_lb","command collaborator"
"lar_solver","boundary","lar_solver::to_column","property collaborator"
"lar_solver","boundary","lar_solver::tighten_term_bounds_by_delta","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::round_to_integer_solution","command collaborator"
"lar_solver","boundary","lar_solver::fix_terms_with_rounded_columns","command collaborator"
"lar_solver","boundary","lar_solver::sum_first_coords","predicate controller"
"lar_solver","boundary","lar_solver::get_equality_and_right_side_for_term_on_current_x","predicate collaborator"
"lar_solver","boundary","lar_solver::set_cut_strategy","command"
"lar_solver","boundary","lar_solver::register_normalized_term","command collaborator"
"lar_solver","boundary","lar_solver::deregister_normalized_term","command collaborator"
"lar_solver","boundary","lar_solver::register_existing_terms","set collaborator"
"lar_solver","boundary","lar_solver::fetch_normalized_term_column","predicate collaborator"
"lar_solver","boundary","lar_solver::are_equal","predicate non-void-command collaborator"
"lar_solver","boundary","lar_solver::add_equality","property non-void-command collaborator"
"lar_solver","boundary","lar_solver::inside_bounds","predicate collaborator"
"lar_solver","boundary","lar_solver::set_crossed_bounds_column_and_deps","command collaborator"
"lar_solver","boundary","lar_solver::collect_more_rows_for_lp_propagation","command collaborator"
"lar_solver","boundary","lar_solver::print_explanation","property collaborator"
"set_info_cmd","boundary lazy-class degenerate","set_info_cmd","constructor"
"set_info_cmd","boundary lazy-class degenerate","get_usage","incidental"
"set_info_cmd","boundary lazy-class degenerate","get_descr","collaborator incidental"
"set_info_cmd","boundary lazy-class degenerate","get_arity","incidental"
"set_info_cmd","boundary lazy-class degenerate","prepare","set collaborator"
"set_info_cmd","boundary lazy-class degenerate","next_arg_kind","property collaborator"
"set_info_cmd","boundary lazy-class degenerate","set_next_arg","empty"
"set_info_cmd","boundary lazy-class degenerate","set_next_arg","empty"
"set_info_cmd","boundary lazy-class degenerate","set_next_arg","set collaborator"
"set_info_cmd","boundary lazy-class degenerate","execute","controller stateless"
"blast_term_ite_tactic","boundary","translate","property wrapper"
"blast_term_ite_tactic","boundary","~blast_term_ite_tactic","destructor"
"blast_term_ite_tactic","boundary","name","incidental"
"blast_term_ite_tactic","boundary","updt_params","command collaborator"
"blast_term_ite_tactic","boundary","collect_param_descrs","controller stateless"
"blast_term_ite_tactic","boundary","operator()","wrapper stateless"
"blast_term_ite_tactic","boundary","cleanup","set collaborator"
"lar_solver::undo_add_column","commander small-class","undo","command"
"is_pure_expr_proc","commander degenerate","operator()","command collaborator"
"is_pure_expr_proc","commander degenerate","operator()","empty"
"is_pure_expr_proc","commander degenerate","operator()","empty"
"is_pure_expr_proc","commander degenerate","operator()","command collaborator"
"is_pure_expr_proc","commander degenerate","operator()","empty"
"is_pure_expr_proc","commander degenerate","operator()","empty"
"lar_core_solver","boundary","settings","property collaborator"
"lar_core_solver","boundary","get_infeasible_sum_sign","get"
"lar_core_solver","boundary","get_infeasibility_info","get collaborator"
"lar_core_solver","boundary","get_column_type","get collaborator"
"lar_core_solver","boundary","print_pivot_row","unclassified"
"lar_core_solver","boundary","m_m","unclassified"
"lar_core_solver","boundary","m_n","unclassified"
"lar_core_solver","boundary","is_tiny","controller stateless"
"lar_core_solver","boundary","is_empty","controller stateless"
"lar_core_solver","boundary","get_sign","wrapper stateless"
"lar_core_solver","boundary","pivot","command"
"lar_core_solver","boundary","lower_bounds_are_set","incidental"
"lar_core_solver","boundary","get_pivot_row","property collaborator"
"lar_core_solver","boundary","push","command"
"lar_core_solver","boundary","pop","command"
"lar_core_solver","boundary","r_basis_is_OK","predicate"
"lar_core_solver","boundary","lower_bound_is_set","predicate wrapper"
"lar_core_solver","boundary","upper_bound_is_set","predicate wrapper"
"lar_core_solver","boundary","update_delta","wrapper stateless"
"lar_core_solver","boundary","find_delta_for_strict_boxed_bounds","property collaborator"
"lar_core_solver","boundary","find_delta_for_strict_bounds","property collaborator"
"lar_core_solver","boundary","column_is_fixed","wrapper stateless"
"lar_core_solver","boundary","column_is_free","wrapper stateless"
"lar_core_solver","boundary","lower_bound","get wrapper"
"lar_core_solver","boundary","upper_bound","get wrapper"
"lar_core_solver","boundary","column_is_bounded","wrapper stateless"
"lar_core_solver","boundary","r_basis","get"
"lar_core_solver","boundary","r_nbasis","get"
"lar_core_solver","boundary","lar_core_solver::lar_core_solver","constructor"
"lar_core_solver","boundary","lar_core_solver::prefix_r","command"
"lar_core_solver","boundary","lar_core_solver::fill_not_improvable_zero_sum_from_inf_row","command"
"lar_core_solver","boundary","lar_core_solver::fill_not_improvable_zero_sum","command collaborator"
"lar_core_solver","boundary","lar_core_solver::get_number_of_non_ints","controller"
"lar_core_solver","boundary","lar_core_solver::solve","command"
"constraint_set","boundary","add","property non-void-command collaborator"
"constraint_set","boundary","print_left_side_of_constraint","property collaborator"
"constraint_set","boundary","print_left_side_of_constraint_indices_only","controller stateless"
"constraint_set","boundary","print_left_side_of_constraint","controller stateless"
"constraint_set","boundary","out_of_bounds","wrapper stateless"
"constraint_set","boundary","mk_dep","property non-void-command collaborator"
"constraint_set","boundary","constraint_set","constructor"
"constraint_set","boundary","~constraint_set","destructor"
"constraint_set","boundary","push","command"
"constraint_set","boundary","pop","command"
"constraint_set","boundary","add_var_constraint","property non-void-command collaborator"
"constraint_set","boundary","add_term_constraint","property non-void-command collaborator"
"constraint_set","boundary","is_active","get collaborator"
"constraint_set","boundary","activate","command collaborator"
"constraint_set","boundary","operator[]","get collaborator"
"constraint_set","boundary","valid_index","predicate collaborator"
"constraint_set","boundary","active","property wrapper"
"constraint_set","boundary","indices","property wrapper"
"constraint_set","boundary","display","property collaborator"
"constraint_set","boundary","display","property collaborator"
"constraint_set","boundary","display","property collaborator"
"constraint_set","boundary","display_indices_only","property collaborator"
"constraint_set","boundary","display_indices_only","property collaborator"
"constraint_set","boundary","display","property collaborator"
"constraint_set","boundary","display","property collaborator"
"constraint_set","boundary","contains","get predicate controller"
"constraint_set","boundary","empty","predicate"
"constraint_set","boundary","size","unclassified"
"constraint_set","boundary","insert","command collaborator"
"constraint_set","boundary","erase","command collaborator"
"constraint_set","boundary","erase","property non-void-command collaborator"
"constraint_set","boundary","reset","command"
"constraint_set","boundary","finalize","command"
"constraint_set","boundary","begin","property collaborator"
"constraint_set","boundary","end","property collaborator"
"collect_dependencies_proc","commander degenerate","collect_dependencies_proc","constructor"
"collect_dependencies_proc","commander degenerate","operator()","empty"
"collect_dependencies_proc","commander degenerate","operator()","empty"
"collect_dependencies_proc","commander degenerate","operator()","command collaborator"
"sorting_network_config","empty","sorting_network_config","constructor"
"lar_var_constraint","data-provider small-class","lar_var_constraint","constructor"
"lar_var_constraint","data-provider small-class","coeffs","property collaborator"
"lar_var_constraint","data-provider small-class","size","incidental"
"lar_base_constraint","data-provider","lar_base_constraint","constructor"
"lar_base_constraint","data-provider","kind","get collaborator"
"lar_base_constraint","data-provider","rhs","get collaborator"
"lar_base_constraint","data-provider","column","get"
"lar_base_constraint","data-provider","dep","get collaborator"
"lar_base_constraint","data-provider","activate","set"
"lar_base_constraint","data-provider","deactivate","set"
"lar_base_constraint","data-provider","is_active","get"
"lar_base_constraint","data-provider","get_free_coeff_of_left_side","wrapper stateless"
"karr_relation_plugin::filter_interpreted_fn","boundary small-class","operator()","wrapper"
"relation_signature","data-provider small-class","operator!=","predicate"
"relation_signature","data-provider small-class","relation_signature::output","wrapper"
"adhoc_rewriter_rpp","entity data-provider boundary","adhoc_rewriter_rpp","constructor"
"adhoc_rewriter_rpp","entity data-provider boundary","is_le","predicate collaborator"
"adhoc_rewriter_rpp","entity data-provider boundary","is_ge","predicate collaborator"
"adhoc_rewriter_rpp","entity data-provider boundary","is_lt","predicate collaborator"
"adhoc_rewriter_rpp","entity data-provider boundary","is_gt","predicate collaborator"
"adhoc_rewriter_rpp","entity data-provider boundary","is_zero","predicate collaborator"
"adhoc_rewriter_rpp","entity data-provider boundary","reduce_app","property non-void-command collaborator"
"maxsmt_compare_soft","data-provider boundary small-class","maxsmt_compare_soft","constructor"
"maxsmt_compare_soft","data-provider boundary small-class","operator()","predicate collaborator"
"hnf_cutter","boundary","terms_count","unclassified"
"hnf_cutter","boundary","abs_max","get collaborator"
"hnf_cutter","boundary","terms","get collaborator"
"hnf_cutter","boundary","constraints_for_explanation","get collaborator"
"hnf_cutter","boundary","right_sides","get collaborator"
"hnf_cutter","boundary","hnf_cutter::hnf_cutter","constructor"
"hnf_cutter","boundary","hnf_cutter::is_full","predicate"
"hnf_cutter","boundary","hnf_cutter::clear","command"
"hnf_cutter","boundary","hnf_cutter::add_term","command collaborator"
"hnf_cutter","boundary","hnf_cutter::print","command collaborator"
"hnf_cutter","boundary","hnf_cutter::initialize_row","command collaborator"
"hnf_cutter","boundary","hnf_cutter::init_matrix_A","command"
"hnf_cutter","boundary","hnf_cutter::find_h_minus_1_b","controller stateless"
"hnf_cutter","boundary","hnf_cutter::create_b","get property non-void-command collaborator"
"hnf_cutter","boundary","hnf_cutter::find_cut_row_index","property non-void-command collaborator"
"hnf_cutter","boundary","hnf_cutter::get_ei_H_minus_1","controller stateless"
"hnf_cutter","boundary","hnf_cutter::fill_term","command collaborator"
"hnf_cutter","boundary","hnf_cutter::transform_to_local_columns","property collaborator"
"hnf_cutter","boundary","hnf_cutter::shrink_explanation","set collaborator"
"hnf_cutter","boundary","hnf_cutter::overflow","get"
"hnf_cutter","boundary","hnf_cutter::create_cut","property non-void-command collaborator"
"hnf_cutter","boundary","hnf_cutter::vars","property collaborator"
"hnf_cutter","boundary","hnf_cutter::try_add_term_to_A_for_hnf","command collaborator"
"hnf_cutter","boundary","hnf_cutter::hnf_has_var_with_non_integral_value","predicate"
"hnf_cutter","boundary","hnf_cutter::init_terms_for_hnf_cut","predicate non-void-command collaborator"
"hnf_cutter","boundary","hnf_cutter::make_hnf_cut","property non-void-command collaborator"
"create_cut","data-provider boundary","get_value","property collaborator"
"create_cut","data-provider boundary","is_int","predicate"
"create_cut","data-provider boundary","is_real","predicate"
"create_cut","data-provider boundary","at_lower","predicate"
"create_cut","data-provider boundary","at_upper","predicate"
"create_cut","data-provider boundary","lower_bound","property collaborator"
"create_cut","data-provider boundary","upper_bound","property collaborator"
"create_cut","data-provider boundary","column_lower_bound_constraint","property collaborator"
"create_cut","data-provider boundary","column_upper_bound_constraint","property collaborator"
"create_cut","data-provider boundary","column_is_fixed","predicate"
"create_cut","data-provider boundary","push_explanation","command collaborator"
"create_cut","data-provider boundary","int_case_in_gomory_cut","command collaborator"
"create_cut","data-provider boundary","set_polarity","set collaborator"
"create_cut","data-provider boundary","real_case_in_gomory_cut","command collaborator"
"create_cut","data-provider boundary","report_conflict_from_gomory_cut","property non-void-command collaborator"
"create_cut","data-provider boundary","var_name","wrapper stateless"
"create_cut","data-provider boundary","dump_coeff_val","controller stateless"
"create_cut","data-provider boundary","dump_coeff","collaborator"
"create_cut","data-provider boundary","dump_row_coefficients","property collaborator"
"create_cut","data-provider boundary","dump_the_row","collaborator"
"create_cut","data-provider boundary","dump_declaration","unclassified"
"create_cut","data-provider boundary","dump_declarations","collaborator"
"create_cut","data-provider boundary","dump_lower_bound_expl","unclassified"
"create_cut","data-provider boundary","dump_upper_bound_expl","unclassified"
"create_cut","data-provider boundary","dump_explanations","collaborator"
"create_cut","data-provider boundary","dump_term_coefficients","property collaborator"
"create_cut","data-provider boundary","dump_term_sum","property collaborator"
"create_cut","data-provider boundary","dump_term_ge_k","property collaborator"
"create_cut","data-provider boundary","dump_the_cut_assert","collaborator"
"create_cut","data-provider boundary","dump_cut_and_constraints_as_smt_lemma","collaborator"
"create_cut","data-provider boundary","dump","command collaborator"
"create_cut","data-provider boundary","cut","property non-void-command collaborator"
"create_cut","data-provider boundary","create_cut","constructor"
"elim_bounds_rw","empty","elim_bounds_rw","constructor"
"bv_expr_inverter","entity boundary","process_add","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","process_bv_mul","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","process_extract","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","process_bv_div","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","process_concat","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","process_bv_le","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","process_bvnot","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","process_shift","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","bv_expr_inverter","constructor"
"bv_expr_inverter","entity boundary","get_fid","property collaborator"
"bv_expr_inverter","entity boundary","operator()","predicate non-void-command collaborator"
"bv_expr_inverter","entity boundary","mk_diff","predicate non-void-command collaborator"
"relevancy","commander boundary","push_core","command"
"relevancy","commander boundary","flush","set"
"relevancy","commander boundary","occurs","get non-void-command collaborator"
"relevancy","commander boundary","relevancy","constructor"
"relevancy","commander boundary","push","set"
"relevancy","commander boundary","can_propagate","predicate"
"relevancy","commander boundary","is_relevant","predicate collaborator"
"relevancy","commander boundary","is_relevant","predicate collaborator"
"relevancy","commander boundary","is_relevant","predicate controller"
"relevancy","commander boundary","enabled","get"
"relevancy","commander boundary","relevancy::pop","command collaborator"
"relevancy","commander boundary","relevancy::add_root","command collaborator"
"relevancy","commander boundary","relevancy::add_def","command collaborator"
"relevancy","commander boundary","relevancy::add_to_propagation_queue","command collaborator"
"relevancy","commander boundary","relevancy::set_relevant","command collaborator"
"relevancy","commander boundary","relevancy::set_asserted","command collaborator"
"relevancy","commander boundary","relevancy::relevant_eh","command collaborator"
"relevancy","commander boundary","relevancy::asserted","command collaborator"
"relevancy","commander boundary","relevancy::propagate","command"
"relevancy","commander boundary","relevancy::merge","command collaborator"
"relevancy","commander boundary","relevancy::mark_relevant","command collaborator"
"relevancy","commander boundary","relevancy::mark_relevant","command collaborator"
"relevancy","commander boundary","relevancy::propagate_relevant","command collaborator"
"relevancy","commander boundary","relevancy::propagate_relevant","void-accessor command collaborator"
"relevancy","commander boundary","relevancy::set_enabled","set"
"const_iterator_mon","boundary","const_iterator_mon::init_vars_by_the_mask","collaborator"
"const_iterator_mon","boundary","const_iterator_mon::get_factors","predicate non-void-command collaborator"
"const_iterator_mon","boundary","const_iterator_mon::operator*","property collaborator"
"const_iterator_mon","boundary","const_iterator_mon::advance_mask","set"
"const_iterator_mon","boundary","const_iterator_mon::operator++","property non-void-command collaborator"
"const_iterator_mon","boundary","const_iterator_mon::operator++","get non-void-command collaborator"
"const_iterator_mon","boundary","const_iterator_mon::const_iterator_mon","constructor"
"const_iterator_mon","boundary","const_iterator_mon::operator==","predicate collaborator"
"const_iterator_mon","boundary","const_iterator_mon::operator!=","predicate collaborator"
"const_iterator_mon","boundary","const_iterator_mon::create_binary_factorization","property collaborator"
"const_iterator_mon","boundary","const_iterator_mon::create_full_factorization","property controller"
"factor","data-provider boundary","factor","constructor"
"factor","data-provider boundary","factor","copy-constructor"
"factor","data-provider boundary","var","get"
"factor","data-provider boundary","type","get collaborator"
"factor","data-provider boundary","set","command collaborator"
"factor","data-provider boundary","is_var","predicate"
"factor","data-provider boundary","operator==","predicate controller"
"factor","data-provider boundary","operator!=","predicate controller"
"factor","data-provider boundary","sign","get"
"factor","data-provider boundary","sign","get"
"factor","data-provider boundary","rat_sign","property wrapper"
"equality","empty","equality","constructor"
"scoped_mpz_matrix","entity data-provider boundary","~scoped_mpz_matrix","destructor"
"scoped_mpz_matrix","entity data-provider boundary","mm","get collaborator"
"scoped_mpz_matrix","entity data-provider boundary","nm","property collaborator"
"scoped_mpz_matrix","entity data-provider boundary","m","unclassified"
"scoped_mpz_matrix","entity data-provider boundary","n","unclassified"
"scoped_mpz_matrix","entity data-provider boundary","row","property collaborator"
"scoped_mpz_matrix","entity data-provider boundary","","get collaborator"
"scoped_mpz_matrix","entity data-provider boundary","operatormpz_matrix&","get"
"scoped_mpz_matrix","entity data-provider boundary","get","get collaborator"
"scoped_mpz_matrix","entity data-provider boundary","get","get collaborator"
"scoped_mpz_matrix","entity data-provider boundary","swap","command collaborator"
"scoped_mpz_matrix","entity data-provider boundary","set","command collaborator"
"scoped_mpz_matrix","entity data-provider boundary","set","command"
"scoped_mpz_matrix","entity data-provider boundary","operator()","wrapper stateless"
"scoped_mpz_matrix","entity data-provider boundary","operator()","wrapper stateless"
"scoped_mpz_matrix","entity data-provider boundary","get_int","property"
"ackr_bound_probe","pure-controller degenerate small-class","operator()","controller stateless"
"explanation","entity boundary","explanation","constructor"
"explanation","entity boundary","explanation","constructor"
"explanation","entity boundary","clear","command"
"explanation","entity boundary","add_pair","command collaborator"
"explanation","entity boundary","push_back","command collaborator"
"explanation","entity boundary","remove","command collaborator"
"explanation","entity boundary","add_expl","command collaborator"
"explanation","entity boundary","empty","predicate"
"explanation","entity boundary","size","property"
"explanation","entity boundary","begin","property collaborator"
"explanation","entity boundary","end","property collaborator"
"lookahead","boundary","is_fixed_at","get controller"
"lookahead","boundary","is_fixed","predicate collaborator"
"lookahead","boundary","is_undef","predicate collaborator"
"lookahead","boundary","is_undef","get collaborator"
"lookahead","boundary","is_false_at","predicate"
"lookahead","boundary","is_false","predicate collaborator"
"lookahead","boundary","is_true_at","predicate"
"lookahead","boundary","is_true","predicate collaborator"
"lookahead","boundary","set_true","set collaborator"
"lookahead","boundary","set_undef","set collaborator"
"lookahead","boundary","get_level","get controller"
"lookahead","boundary","set_level","set collaborator"
"lookahead","boundary","value","property collaborator"
"lookahead","boundary","set_bstamp","set collaborator"
"lookahead","boundary","is_stamped","get controller"
"lookahead","boundary","get_rating","get collaborator"
"lookahead","boundary","get_rating","property collaborator"
"lookahead","boundary","has_arc","get controller"
"lookahead","boundary","get_arcs","get controller"
"lookahead","boundary","pop_arc","get controller"
"lookahead","boundary","num_next","get controller"
"lookahead","boundary","get_next","get controller"
"lookahead","boundary","get_min","get controller"
"lookahead","boundary","get_rank","get controller"
"lookahead","boundary","maxed_rank","predicate collaborator"
"lookahead","boundary","get_height","get controller"
"lookahead","boundary","get_parent","get controller"
"lookahead","boundary","get_link","get controller"
"lookahead","boundary","get_vcomp","get controller"
"lookahead","boundary","set_link","controller"
"lookahead","boundary","set_min","controller"
"lookahead","boundary","set_rank","set"
"lookahead","boundary","set_height","controller"
"lookahead","boundary","set_parent","controller"
"lookahead","boundary","set_vcomp","controller"
"lookahead","boundary","set_offset","unclassified"
"lookahead","boundary","set_lookahead","command collaborator"
"lookahead","boundary","get_wlist","get controller"
"lookahead","boundary","get_wlist","get controller"
"lookahead","boundary","set_lookahead_reward","set"
"lookahead","boundary","inc_lookahead_reward","set"
"lookahead","boundary","get_lookahead_reward","get controller"
"lookahead","boundary","dl_enabled","get controller"
"lookahead","boundary","dl_disable","controller"
"lookahead","boundary","dl_no_overflow","predicate"
"lookahead","boundary","set_conflict","set"
"lookahead","boundary","inconsistent","get"
"lookahead","boundary","scope_lvl","unclassified"
"lookahead","boundary","~lookahead","destructor"
"lookahead","boundary","check","property non-void-command collaborator"
"lookahead","boundary","get_config","property collaborator"
"lookahead","boundary","lookahead::flip_prefix","command"
"lookahead","boundary","lookahead::prune_prefix","command"
"lookahead","boundary","lookahead::update_prefix","command collaborator"
"lookahead","boundary","lookahead::active_prefix","predicate non-void-command collaborator"
"lookahead","boundary","lookahead::add_binary","command collaborator"
"lookahead","boundary","lookahead::del_binary","set collaborator"
"lookahead","boundary","lookahead::validate_binary","command collaborator"
"lookahead","boundary","lookahead::inc_bstamp","set"
"lookahead","boundary","lookahead::inc_istamp","set"
"lookahead","boundary","lookahead::set_bstamps","command collaborator"
"lookahead","boundary","lookahead::add_tc1","predicate non-void-command collaborator"
"lookahead","boundary","lookahead::try_add_binary","command collaborator"
"lookahead","boundary","lookahead::pre_select","command collaborator"
"lookahead","boundary","lookahead::select","predicate non-void-command"
"lookahead","boundary","lookahead::heap_sort","command collaborator"
"lookahead","boundary","lookahead::heapify","command"
"lookahead","boundary","lookahead::sift_down","set"
"lookahead","boundary","lookahead::validate_heap_sort","predicate non-void-command"
"lookahead","boundary","lookahead::init_candidates","property non-void-command collaborator"
"lookahead","boundary","lookahead::display_candidates","property collaborator"
"lookahead","boundary","lookahead::is_unsat","predicate collaborator"
"lookahead","boundary","lookahead::is_sat","predicate collaborator"
"lookahead","boundary","lookahead::missed_propagation","predicate collaborator"
"lookahead","boundary","lookahead::missed_conflict","predicate collaborator"
"lookahead","boundary","lookahead::init_pre_selection","command"
"lookahead","boundary","lookahead::heule_schur_scores","command collaborator"
"lookahead","boundary","lookahead::heule_schur_score","property non-void-command collaborator"
"lookahead","boundary","lookahead::heule_unit_scores","command collaborator"
"lookahead","boundary","lookahead::heule_unit_score","property non-void-command collaborator"
"lookahead","boundary","lookahead::march_cu_scores","command"
"lookahead","boundary","lookahead::march_cu_score","property non-void-command collaborator"
"lookahead","boundary","lookahead::ensure_H","command"
"lookahead","boundary","lookahead::h_scores","void-accessor command collaborator"
"lookahead","boundary","lookahead::l_score","property non-void-command collaborator"
"lookahead","boundary","lookahead::get_scc","command collaborator"
"lookahead","boundary","lookahead::init_scc","command collaborator"
"lookahead","boundary","lookahead::init_dfs_info","command collaborator"
"lookahead","boundary","lookahead::init_arcs","command collaborator"
"lookahead","boundary","lookahead::add_arc","controller"
"lookahead","boundary","lookahead::get_scc","command collaborator"
"lookahead","boundary","lookahead::activate_scc","command collaborator"
"lookahead","boundary","lookahead::found_scc","command collaborator"
"lookahead","boundary","lookahead::display_dfs","property collaborator"
"lookahead","boundary","lookahead::display_dfs","property collaborator"
"lookahead","boundary","lookahead::display_scc","property collaborator"
"lookahead","boundary","lookahead::display_scc","property collaborator"
"lookahead","boundary","lookahead::get_child","get controller"
"lookahead","boundary","lookahead::set_child","set collaborator"
"lookahead","boundary","lookahead::find_heights","command collaborator"
"lookahead","boundary","lookahead::display_forest","property non-void-command collaborator"
"lookahead","boundary","lookahead::display_search_string","set"
"lookahead","boundary","lookahead::construct_lookahead_table","command"
"lookahead","boundary","lookahead::init_var","command collaborator"
"lookahead","boundary","lookahead::init","command collaborator"
"lookahead","boundary","lookahead::copy_clauses","command"
"lookahead","boundary","lookahead::push","command collaborator"
"lookahead","boundary","lookahead::pop","command"
"lookahead","boundary","lookahead::push_lookahead2","predicate non-void-command"
"lookahead","boundary","lookahead::push_lookahead1","non-void-command"
"lookahead","boundary","lookahead::pop_lookahead1","command collaborator"
"lookahead","boundary","lookahead::lookahead_backtrack","command collaborator"
"lookahead","boundary","lookahead::add_ternary","command collaborator"
"lookahead","boundary","lookahead::propagate_ternary","property non-void-command collaborator"
"lookahead","boundary","lookahead::propagate_ternary","command collaborator"
"lookahead","boundary","lookahead::remove_ternary","set collaborator"
"lookahead","boundary","lookahead::restore_ternary","command collaborator"
"lookahead","boundary","lookahead::propagate_external","command collaborator"
"lookahead","boundary","lookahead::add_clause","command collaborator"
"lookahead","boundary","lookahead::propagate_clauses_searching","command collaborator"
"lookahead","boundary","lookahead::propagate_clauses_lookahead","command collaborator"
"lookahead","boundary","lookahead::remove_clause_at","command collaborator"
"lookahead","boundary","lookahead::remove_clause","set collaborator"
"lookahead","boundary","lookahead::restore_clauses","set collaborator"
"lookahead","boundary","lookahead::propagate_clauses","command collaborator"
"lookahead","boundary","lookahead::update_binary_clause_reward","command collaborator"
"lookahead","boundary","lookahead::update_nary_clause_reward","command collaborator"
"lookahead","boundary","lookahead::literal_occs","property non-void-command collaborator"
"lookahead","boundary","lookahead::literal_big_occs","property wrapper"
"lookahead","boundary","lookahead::get_clauses","command collaborator"
"lookahead","boundary","lookahead::propagate_binary","command collaborator"
"lookahead","boundary","lookahead::propagate","command collaborator"
"lookahead","boundary","lookahead::compute_lookahead_reward","command collaborator"
"lookahead","boundary","lookahead::select_literal","property non-void-command collaborator"
"lookahead","boundary","lookahead::mix_diff","property wrapper"
"lookahead","boundary","lookahead::reset_lookahead_reward","command collaborator"
"lookahead","boundary","lookahead::update_lookahead_reward","command"
"lookahead","boundary","lookahead::do_double","non-void-command"
"lookahead","boundary","lookahead::double_look","non-void-command"
"lookahead","boundary","lookahead::in_reduced_clause","wrapper stateless"
"lookahead","boundary","lookahead::in_reduced_clause","predicate non-void-command collaborator"
"lookahead","boundary","lookahead::validate_assign","command collaborator"
"lookahead","boundary","lookahead::assign","command collaborator"
"lookahead","boundary","lookahead::propagated","command collaborator"
"lookahead","boundary","lookahead::backtrack","predicate non-void-command collaborator"
"lookahead","boundary","lookahead::search","property non-void-command collaborator"
"lookahead","boundary","lookahead::backtrack","predicate non-void-command collaborator"
"lookahead","boundary","lookahead::update_cube_statistics","controller"
"lookahead","boundary","lookahead::psat_heur","property non-void-command collaborator"
"lookahead","boundary","lookahead::should_cutoff","predicate non-void-command"
"lookahead","boundary","lookahead::cube","property non-void-command collaborator"
"lookahead","boundary","lookahead::display_lookahead_scores","command collaborator"
"lookahead","boundary","lookahead::init_model","command collaborator"
"lookahead","boundary","lookahead::display_cube","collaborator incidental"
"lookahead","boundary","lookahead::display_binary","property collaborator"
"lookahead","boundary","lookahead::display_clauses","property collaborator"
"lookahead","boundary","lookahead::display_values","property collaborator"
"lookahead","boundary","lookahead::display_lookahead","property collaborator"
"lookahead","boundary","lookahead::init_search","set collaborator"
"lookahead","boundary","lookahead::checkpoint","command"
"lookahead","boundary","lookahead::choose","property non-void-command collaborator"
"lookahead","boundary","lookahead::choose_base","property non-void-command collaborator"
"lookahead","boundary","lookahead::simplify","command collaborator"
"lookahead","boundary","lookahead::add_hyper_binary","command collaborator"
"lookahead","boundary","lookahead::normalize_parents","command collaborator"
"lookahead","boundary","lookahead::display_summary","property collaborator"
"lookahead","boundary","lookahead::display","property collaborator"
"lookahead","boundary","lookahead::get_model","get non-void-command collaborator"
"lookahead","boundary","lookahead::init_config","command"
"lookahead","boundary","lookahead::collect_statistics","collaborator"
"lookahead","boundary","lookahead::lookahead","constructor"
"lookahead","boundary","lookahead::get_score","property non-void-command collaborator"
"lookahead","boundary","lookahead::choose","property non-void-command collaborator"
"lookahead","boundary","lookahead::choose_rec","property non-void-command collaborator"
"lookahead","boundary","lookahead::choose_rec","command collaborator"
"set_unpropagated","boundary small-class","set_unpropagated","constructor"
"set_unpropagated","boundary small-class","undo","wrapper"
"dense_matrix","entity minimal-entity boundary","operator[]","property wrapper"
"dense_matrix","entity minimal-entity boundary","operator*=","get non-void-command collaborator"
"dense_matrix","entity minimal-entity boundary","apply_from_left","command collaborator"
"dense_matrix","entity minimal-entity boundary","set_number_of_rows","empty"
"dense_matrix","entity minimal-entity boundary","set_number_of_columns","empty"
"dense_matrix","entity minimal-entity boundary","get_elem","get collaborator"
"dense_matrix","entity minimal-entity boundary","row_count","get"
"dense_matrix","entity minimal-entity boundary","column_count","get"
"dense_matrix","entity minimal-entity boundary","set_elem","set collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::dense_matrix","constructor"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::operator=","get non-void-command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::operator=","get non-void-command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::dense_matrix","constructor"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::apply_from_right","void-accessor command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::apply_from_right","void-accessor command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::apply_from_left_with_different_dims","non-void-command factory collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::apply_from_left","void-accessor command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::apply_from_left","void-accessor command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::apply_from_left_to_X","void-accessor command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::swap_columns","command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::swap_rows","command collaborator"
"dense_matrix","entity minimal-entity boundary","dense_matrix<T,X>::multiply_row_by_constant","command collaborator"
"ineq_atom","data-provider","size","get"
"ineq_atom","data-provider","p","property collaborator"
"ineq_atom","data-provider","is_odd","predicate"
"ineq_atom","data-provider","is_even","predicate"
"ineq_atom","data-provider","ineq_atom::ineq_atom","constructor"
"core_solver_pretty_printer","commander","ncols","non-void-command"
"core_solver_pretty_printer","commander","nrows","non-void-command"
"core_solver_pretty_printer","commander","adjust_width_with_basis_heading","void-accessor wrapper"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::core_solver_pretty_printer","constructor"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::init_costs","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::~core_solver_pretty_printer","destructor"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::init_rs_width","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::init_m_A_and_signs","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::init_column_widths","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::adjust_width_with_lower_bound","void-accessor command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::adjust_width_with_upper_bound","void-accessor command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::adjust_width_with_bounds","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::get_column_width","non-void-command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::set_coeff","wrapper stateless"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_blanks_local","collaborator"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_x","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::get_lower_bound_string","property non-void-command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::get_upp_bound_string","property non-void-command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_lows","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_upps","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_approx_norms","incidental"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_basis_heading","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_cost","command"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_given_row","command collaborator"
"core_solver_pretty_printer","commander","core_solver_pretty_printer<T,X>::print_row","command collaborator"
"is_nia_probe","boundary degenerate small-class","operator()","wrapper stateless"
"column","lazy-class degenerate","term","get collaborator"
"column","lazy-class degenerate","lower_bound_witness","get collaborator"
"column","lazy-class degenerate","lower_bound_witness","get collaborator"
"column","lazy-class degenerate","upper_bound_witness","get collaborator"
"column","lazy-class degenerate","upper_bound_witness","get collaborator"
"column","lazy-class degenerate","operator!=","predicate"
"column","lazy-class degenerate","operator==","predicate"
"column","lazy-class degenerate","column","constructor"
"column","lazy-class degenerate","associated_with_row","get"
"column","lazy-class degenerate","sparse_matrix<Ext>::column::reset","controller stateless"
"column","lazy-class degenerate","sparse_matrix<Ext>::column::compress","controller stateless"
"column","lazy-class degenerate","sparse_matrix<Ext>::column::compress_if_needed","command collaborator"
"column","lazy-class degenerate","sparse_matrix<Ext>::column::get_first_col_entry","controller stateless"
"column","lazy-class degenerate","sparse_matrix<Ext>::column::add_col_entry","controller stateless"
"column","lazy-class degenerate","sparse_matrix<Ext>::column::del_col_entry","controller stateless"
"column","lazy-class degenerate","theory_arith<Ext>::column::reset","controller stateless"
"column","lazy-class degenerate","theory_arith<Ext>::column::compress","controller stateless"
"column","lazy-class degenerate","theory_arith<Ext>::column::compress_if_needed","command collaborator"
"column","lazy-class degenerate","theory_arith<Ext>::column::compress_singleton","controller stateless"
"column","lazy-class degenerate","theory_arith<Ext>::column::get_first_col_entry","controller stateless"
"column","lazy-class degenerate","theory_arith<Ext>::column::add_col_entry","controller stateless"
"column","lazy-class degenerate","theory_arith<Ext>::column::del_col_entry","controller stateless"
"interval","data-provider","interval","constructor"
"interval","data-provider","interval","constructor"
"interval","data-provider","size","unclassified"
"interval","data-provider","negate","predicate"
"interval","data-provider","intersect","predicate"
"interval","data-provider","operator==","predicate wrapper"
"interval","data-provider","operator!=","predicate"
"interval","data-provider","is_singleton","predicate"
"interval","data-provider","is_full","predicate"
"interval","data-provider","tight","predicate"
"interval","data-provider","implies","predicate"
"interval","data-provider","lo","property wrapper"
"interval","data-provider","hi","property wrapper"
"interval","data-provider","interval::interval","constructor"
"interval","data-provider","interval::interval","constructor"
"interval","data-provider","interval::interval","constructor"
"interval","data-provider","interval::interval","constructor"
"interval","data-provider","interval::interval","constructor"
"interval","data-provider","interval::operator=","get non-void-command"
"interval","data-provider","interval::operator=","get non-void-command"
"interval","data-provider","interval::operator+=","get non-void-command"
"interval","data-provider","interval::neg","command"
"interval","data-provider","interval::operator-=","property non-void-command"
"interval","data-provider","interval::join","controller stateless"
"interval","data-provider","interval::join_opt","wrapper stateless"
"interval","data-provider","interval::operator*=","get non-void-command collaborator"
"interval","data-provider","interval::empty","predicate"
"interval","data-provider","interval::contains_zero","predicate"
"interval","data-provider","interval::contains","predicate wrapper"
"interval","data-provider","interval::inv","get non-void-command collaborator"
"interval","data-provider","interval::operator/=","get property non-void-command"
"interval","data-provider","interval::expt","command"
"interval","data-provider","interval::display","collaborator"
"interval","data-provider","interval::display_with_dependencies","collaborator"
"indexed_value","boundary data-class small-class","indexed_value","constructor"
"indexed_value","boundary data-class small-class","indexed_value","constructor"
"indexed_value","boundary data-class small-class","value","get collaborator"
"indexed_value","boundary data-class small-class","set_value","set collaborator"
"rinterval","empty","rinterval","constructor"
"rinterval","empty","rinterval","constructor"
"case_state","entity boundary","case_state","constructor"
"case_state","entity boundary","empty","predicate"
"case_state","entity boundary","pop_branch","property non-void-command collaborator"
"case_state","entity boundary","push_branch","command collaborator"
"case_state","entity boundary","cons_unfold","property factory wrapper"
"case_state","entity boundary","cons_unfold","property non-void-command collaborator"
"case_state","entity boundary","mk_unfold_lst","property non-void-command collaborator"
"case_state","entity boundary","cons_ite","property factory wrapper"
"case_state","entity boundary","cons_choice","property factory wrapper"
"external_relation_plugin::join_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"interval_tpl","data-provider","interval_tpl","constructor"
"interval_tpl","data-provider","interval_tpl","constructor"
"interval_tpl","data-provider","invariant","predicate"
"interval_tpl","data-provider","is_full","predicate wrapper"
"interval_tpl","data-provider","is_wrapped","predicate"
"interval_tpl","data-provider","is_singleton","predicate"
"interval_tpl","data-provider","operator==","predicate wrapper"
"interval_tpl","data-provider","operator!=","predicate"
"interval_tpl","data-provider","implies","predicate collaborator"
"interval_tpl","data-provider","intersect","predicate"
"interval_tpl","data-provider","negate","predicate collaborator"
"kernel","boundary","kernel","constructor"
"kernel","boundary","s","get collaborator"
"kernel","boundary","s","get collaborator"
"kernel","boundary","init","command"
"kernel","boundary","collect_statistics","collaborator"
"kernel","boundary","reset_statistics","command"
"kernel","boundary","collect_statistics","command collaborator"
"kernel","boundary","clear","set"
"kernel","boundary","assert_expr","command collaborator"
"kernel","boundary","assert_blocking_fml","command collaborator"
"kernel","boundary","get_core","command collaborator"
"kernel","boundary","check","property non-void-command collaborator"
"kernel","boundary","check","property non-void-command collaborator"
"kernel","boundary","set_phase","empty"
"kernel","boundary","get_phase","collaborator incidental"
"kernel","boundary","set_phase","empty"
"kernel","boundary","move_to_front","empty"
"kernel","boundary","kernel::kernel","constructor"
"kernel","boundary","kernel::~kernel","destructor"
"kernel","boundary","kernel::m","property collaborator"
"kernel","boundary","kernel::copy","command"
"kernel","boundary","kernel::set_logic","predicate non-void-command collaborator"
"kernel","boundary","kernel::set_progress_callback","command collaborator"
"kernel","boundary","kernel::assert_expr","command collaborator"
"kernel","boundary","kernel::assert_expr","command collaborator"
"kernel","boundary","kernel::assert_expr","command collaborator"
"kernel","boundary","kernel::size","unclassified"
"kernel","boundary","kernel::get_formula","property collaborator"
"kernel","boundary","kernel::push","command"
"kernel","boundary","kernel::pop","command"
"kernel","boundary","kernel::get_scope_level","unclassified"
"kernel","boundary","kernel::reset","command collaborator"
"kernel","boundary","kernel::inconsistent","predicate non-void-command"
"kernel","boundary","kernel::setup_and_check","property non-void-command collaborator"
"kernel","boundary","kernel::check","property non-void-command collaborator"
"kernel","boundary","kernel::check","property non-void-command collaborator"
"kernel","boundary","kernel::get_consequences","property non-void-command collaborator"
"kernel","boundary","kernel::preferred_sat","property non-void-command collaborator"
"kernel","boundary","kernel::find_mutexes","property non-void-command collaborator"
"kernel","boundary","kernel::get_model","command collaborator"
"kernel","boundary","kernel::get_proof","property non-void-command collaborator"
"kernel","boundary","kernel::get_unsat_core_size","unclassified"
"kernel","boundary","kernel::get_unsat_core_expr","property collaborator"
"kernel","boundary","kernel::last_failure","property collaborator"
"kernel","boundary","kernel::last_failure_as_string","property"
"kernel","boundary","kernel::set_reason_unknown","command"
"kernel","boundary","kernel::get_assignments","command collaborator"
"kernel","boundary","kernel::get_units","command collaborator"
"kernel","boundary","kernel::get_relevant_labels","command collaborator"
"kernel","boundary","kernel::get_relevant_labeled_literals","command collaborator"
"kernel","boundary","kernel::get_relevant_literals","command collaborator"
"kernel","boundary","kernel::get_guessed_literals","command collaborator"
"kernel","boundary","kernel::next_cube","property controller"
"kernel","boundary","kernel::cubes","property controller"
"kernel","boundary","kernel::display","property collaborator"
"kernel","boundary","kernel::congruence_root","property non-void-command collaborator"
"kernel","boundary","kernel::congruence_next","property non-void-command collaborator"
"kernel","boundary","kernel::collect_statistics","collaborator"
"kernel","boundary","kernel::reset_statistics","empty"
"kernel","boundary","kernel::display_statistics","collaborator"
"kernel","boundary","kernel::display_istatistics","collaborator"
"kernel","boundary","kernel::canceled","predicate"
"kernel","boundary","kernel::updt_params","command collaborator"
"kernel","boundary","kernel::collect_param_descrs","command collaborator"
"kernel","boundary","kernel::get_context","property collaborator"
"kernel","boundary","kernel::get_levels","command collaborator"
"kernel","boundary","kernel::get_trail","property non-void-command collaborator"
"kernel","boundary","kernel::user_propagate_init","command collaborator"
"kernel","boundary","kernel::register_on_clause","command collaborator"
"kernel","boundary","kernel::user_propagate_register_fixed","command collaborator"
"kernel","boundary","kernel::user_propagate_register_final","command collaborator"
"kernel","boundary","kernel::user_propagate_register_eq","command collaborator"
"kernel","boundary","kernel::user_propagate_register_diseq","command collaborator"
"kernel","boundary","kernel::user_propagate_register_expr","command collaborator"
"kernel","boundary","kernel::user_propagate_register_created","command collaborator"
"kernel","boundary","kernel::user_propagate_register_decide","command collaborator"
"scoped_timer","degenerate","scoped_timer::scoped_timer","constructor"
"scoped_timer","degenerate","scoped_timer::~scoped_timer","destructor"
"scoped_timer","degenerate","scoped_timer::initialize","wrapper stateless"
"scoped_timer","degenerate","scoped_timer::finalize","controller stateless"
"scoped_timer","degenerate","scoped_timer::init_state","command collaborator"
"wpa_parser","boundary degenerate small-class","wpa_parser::create","wrapper stateless"
"interval_deps_combine_rule","commander small-class","reset","command"
"context::engine_type_proc","boundary","is_large_bv","collaborator incidental"
"context::engine_type_proc","boundary","get_engine","get collaborator"
"context::engine_type_proc","boundary","operator()","command collaborator"
"hilbert_basis","boundary","begin","property wrapper"
"hilbert_basis","boundary","end","property collaborator"
"hilbert_basis","boundary","set_use_support","set"
"hilbert_basis","boundary","set_use_ordered_support","set"
"hilbert_basis","boundary","set_use_ordered_subsumption","set"
"hilbert_basis","boundary","get_basis_size","unclassified"
"hilbert_basis","boundary","get_num_ineqs","unclassified"
"hilbert_basis","boundary","hilbert_basis::hilbert_basis","constructor"
"hilbert_basis","boundary","hilbert_basis::~hilbert_basis","destructor"
"hilbert_basis","boundary","hilbert_basis::mk_invalid_offset","wrapper stateless"
"hilbert_basis","boundary","hilbert_basis::is_invalid_offset","collaborator incidental"
"hilbert_basis","boundary","hilbert_basis::reset","command"
"hilbert_basis","boundary","hilbert_basis::collect_statistics","collaborator"
"hilbert_basis","boundary","hilbert_basis::reset_statistics","command"
"hilbert_basis","boundary","hilbert_basis::add_ge","command collaborator"
"hilbert_basis","boundary","hilbert_basis::add_le","command collaborator"
"hilbert_basis","boundary","hilbert_basis::add_eq","command collaborator"
"hilbert_basis","boundary","hilbert_basis::add_ge","command collaborator"
"hilbert_basis","boundary","hilbert_basis::add_le","command collaborator"
"hilbert_basis","boundary","hilbert_basis::add_eq","command collaborator"
"hilbert_basis","boundary","hilbert_basis::set_is_int","command"
"hilbert_basis","boundary","hilbert_basis::get_is_int","predicate"
"hilbert_basis","boundary","hilbert_basis::get_num_vars","unclassified"
"hilbert_basis","boundary","hilbert_basis::vec","property collaborator"
"hilbert_basis","boundary","hilbert_basis::init_basis","command"
"hilbert_basis","boundary","hilbert_basis::add_unit_vector","command collaborator"
"hilbert_basis","boundary","hilbert_basis::saturate","property non-void-command collaborator"
"hilbert_basis","boundary","hilbert_basis::saturate_orig","property non-void-command collaborator"
"hilbert_basis","boundary","hilbert_basis::vector_lt","predicate collaborator"
"hilbert_basis","boundary","hilbert_basis::saturate","property non-void-command collaborator"
"hilbert_basis","boundary","hilbert_basis::get_basis_solution","void-accessor command"
"hilbert_basis","boundary","hilbert_basis::get_ge","void-accessor controller"
"hilbert_basis","boundary","hilbert_basis::select_inequality","command"
"hilbert_basis","boundary","hilbert_basis::get_num_nonzeros","controller stateless"
"hilbert_basis","boundary","hilbert_basis::get_ineq_product","non-void-command collaborator"
"hilbert_basis","boundary","hilbert_basis::get_ineq_diff","property non-void-command collaborator"
"hilbert_basis","boundary","hilbert_basis::recycle","command collaborator"
"hilbert_basis","boundary","hilbert_basis::resolve","command collaborator"
"hilbert_basis","boundary","hilbert_basis::alloc_vector","property non-void-command collaborator"
"hilbert_basis","boundary","hilbert_basis::checkpoint","predicate non-void-command"
"hilbert_basis","boundary","hilbert_basis::add_goal","predicate non-void-command collaborator"
"hilbert_basis","boundary","hilbert_basis::is_subsumed","predicate non-void-command collaborator"
"hilbert_basis","boundary","hilbert_basis::can_resolve","predicate"
"hilbert_basis","boundary","hilbert_basis::get_sign","property collaborator"
"hilbert_basis","boundary","hilbert_basis::get_weight","property collaborator"
"hilbert_basis","boundary","hilbert_basis::display","collaborator"
"hilbert_basis","boundary","hilbert_basis::display","collaborator"
"hilbert_basis","boundary","hilbert_basis::display","collaborator"
"hilbert_basis","boundary","hilbert_basis::display_ineq","controller stateless"
"hilbert_basis","boundary","hilbert_basis::is_subsumed","predicate collaborator"
"hilbert_basis","boundary","hilbert_basis::is_geq","predicate collaborator"
"hilbert_basis","boundary","hilbert_basis::is_abs_geq","controller stateless"
"Z3_simplifier_ref","empty","Z3_simplifier_ref","constructor"
"hilbert_basis::value_index2","commander boundary","get_keys","property wrapper"
"hilbert_basis::value_index2","commander boundary","insert","command collaborator"
"hilbert_basis::value_index2","commander boundary","remove","command collaborator"
"hilbert_basis::value_index2","commander boundary","reset","command"
"hilbert_basis::value_index2","commander boundary","find","predicate non-void-command collaborator"
"hilbert_basis::value_index2","commander boundary","collect_statistics","collaborator"
"hilbert_basis::value_index2","commander boundary","reset_statistics","command"
"hilbert_basis::value_index2","commander boundary","size","unclassified"
"hilbert_basis::value_index2","commander boundary","display","empty"
"hilbert_basis::value_index1","commander boundary","insert","command collaborator"
"hilbert_basis::value_index1","commander boundary","remove","command collaborator"
"hilbert_basis::value_index1","commander boundary","reset","command"
"hilbert_basis::value_index1","commander boundary","find","predicate non-void-command collaborator"
"hilbert_basis::value_index1","commander boundary","collect_statistics","controller"
"hilbert_basis::value_index1","commander boundary","reset_statistics","command"
"hilbert_basis::value_index1","commander boundary","size","unclassified"
"hilbert_basis::value_index1","commander boundary","display","collaborator"
"hilbert_basis::value_index1","commander boundary","display_profile","collaborator"
"hilbert_basis::value_index1","commander boundary","display_profile","command collaborator"
"signed_var","data-provider","signed_var","constructor"
"signed_var","data-provider","signed_var","constructor"
"signed_var","data-provider","sign","predicate"
"signed_var","data-provider","var","property collaborator"
"signed_var","data-provider","index","get"
"signed_var","data-provider","neg","set"
"signed_var","data-provider","operator~","property non-void-command"
"signed_var","data-provider","operator==","predicate"
"signed_var","data-provider","operator!=","predicate"
"signed_var","data-provider","rsign","property collaborator"
"signed_var","data-provider","display","property collaborator"
"simplifier::compare_top_var","pure-controller degenerate small-class","operator()","controller stateless"
"vector_relation","unclassified","vector_relation","constructor"
"vector_relation","unclassified","~vector_relation","destructor"
"vector_relation","unclassified","swap","wrapper"
"vector_relation","unclassified","copy","command"
"vector_relation","unclassified","empty","get"
"vector_relation","unclassified","operator[]","get non-void-command collaborator"
"vector_relation","unclassified","operator[]","get collaborator"
"vector_relation","unclassified","display","collaborator"
"vector_relation","unclassified","is_subset_of","predicate"
"vector_relation","unclassified","set_empty","command"
"vector_relation","unclassified","mk_eq","collaborator incidental"
"vector_relation","unclassified","equate","command collaborator"
"vector_relation","unclassified","is_full","predicate"
"vector_relation","unclassified","mk_join","command"
"vector_relation","unclassified","mk_project","command"
"vector_relation","unclassified","mk_rename","command"
"vector_relation","unclassified","mk_union","command collaborator"
"vector_relation","unclassified","find","unclassified"
"vector_relation","unclassified","merge","command"
"pdd_eval","lazy-class","var2val","get collaborator"
"pdd_eval","lazy-class","var2val","get collaborator"
"pdd_eval","lazy-class","operator()","controller stateless"
"pdd_linear_iterator","unclassified","operator*","get collaborator"
"pdd_linear_iterator","unclassified","operator->","property collaborator"
"pdd_linear_iterator","unclassified","operator++","get non-void-command"
"pdd_linear_iterator","unclassified","operator++","property non-void-command collaborator"
"pdd_linear_iterator","unclassified","operator==","predicate"
"pdd_linear_iterator","unclassified","operator!=","predicate"
"pdd_linear_iterator","unclassified","pdd_linear_iterator::first","set"
"pdd_linear_iterator","unclassified","pdd_linear_iterator::next","command collaborator"
"theory_lra","boundary","get_name","incidental"
"theory_lra","boundary","theory_lra::theory_lra","constructor"
"theory_lra","boundary","theory_lra::~theory_lra","destructor"
"theory_lra","boundary","theory_lra::mk_fresh","wrapper stateless"
"theory_lra","boundary","theory_lra::init","command"
"theory_lra","boundary","theory_lra::internalize_atom","predicate non-void-command"
"theory_lra","boundary","theory_lra::internalize_term","predicate non-void-command collaborator"
"theory_lra","boundary","theory_lra::internalize_eq_eh","command collaborator"
"theory_lra","boundary","theory_lra::assign_eh","command"
"theory_lra","boundary","theory_lra::get_phase","property non-void-command collaborator"
"theory_lra","boundary","theory_lra::new_eq_eh","command collaborator"
"theory_lra","boundary","theory_lra::use_diseqs","predicate"
"theory_lra","boundary","theory_lra::new_diseq_eh","command collaborator"
"theory_lra","boundary","theory_lra::apply_sort_cnstr","command collaborator"
"theory_lra","boundary","theory_lra::push_scope_eh","command"
"theory_lra","boundary","theory_lra::pop_scope_eh","command"
"theory_lra","boundary","theory_lra::restart_eh","command"
"theory_lra","boundary","theory_lra::relevant_eh","command collaborator"
"theory_lra","boundary","theory_lra::init_search_eh","command"
"theory_lra","boundary","theory_lra::final_check_eh","property non-void-command collaborator"
"theory_lra","boundary","theory_lra::is_shared","predicate collaborator"
"theory_lra","boundary","theory_lra::can_propagate","predicate non-void-command"
"theory_lra","boundary","theory_lra::propagate","command"
"theory_lra","boundary","theory_lra::why_is_diseq","property non-void-command collaborator"
"theory_lra","boundary","theory_lra::reset_eh","command"
"theory_lra","boundary","theory_lra::init_model","command collaborator"
"theory_lra","boundary","theory_lra::mk_value","property non-void-command collaborator"
"theory_lra","boundary","theory_lra::get_value","predicate non-void-command collaborator"
"theory_lra","boundary","theory_lra::get_value","predicate non-void-command collaborator"
"theory_lra","boundary","theory_lra::include_func_interp","predicate non-void-command collaborator"
"theory_lra","boundary","theory_lra::get_lower","predicate non-void-command collaborator"
"theory_lra","boundary","theory_lra::get_upper","predicate non-void-command collaborator"
"theory_lra","boundary","theory_lra::get_lower","predicate non-void-command"
"theory_lra","boundary","theory_lra::get_upper","predicate non-void-command"
"theory_lra","boundary","theory_lra::display","collaborator"
"theory_lra","boundary","theory_lra::collect_statistics","collaborator"
"theory_lra","boundary","theory_lra::value","property non-void-command collaborator"
"theory_lra","boundary","theory_lra::maximize","property non-void-command collaborator"
"theory_lra","boundary","theory_lra::add_objective","property non-void-command collaborator"
"theory_lra","boundary","theory_lra::mk_ge","property non-void-command collaborator"
"theory_lra","boundary","theory_lra::setup","command"
"theory_lra","boundary","theory_lra::validate_model","command collaborator"
"inv_var_shifter","entity boundary small-class","inv_var_shifter","constructor"
"inv_var_shifter","entity boundary small-class","inv_var_shifter::operator()","void-accessor command collaborator"
"inv_var_shifter","entity boundary small-class","inv_var_shifter::process_var","command collaborator"
"pdd_iterator","unclassified","operator*","get collaborator"
"pdd_iterator","unclassified","operator->","property collaborator"
"pdd_iterator","unclassified","operator++","get non-void-command"
"pdd_iterator","unclassified","operator++","property non-void-command collaborator"
"pdd_iterator","unclassified","operator==","predicate"
"pdd_iterator","unclassified","operator!=","predicate"
"pdd_iterator","unclassified","pdd_iterator::next","command"
"pdd_iterator","unclassified","pdd_iterator::first","command"
"sparse_table::our_iterator_core","unclassified","is_finished","predicate"
"sparse_table::our_iterator_core","unclassified","operator*","get non-void-command collaborator"
"sparse_table::our_iterator_core","unclassified","operator++","set"
"pdd","data-provider","~pdd","destructor"
"pdd","data-provider","lo","property"
"pdd","data-provider","hi","property"
"pdd","data-provider","index","get"
"pdd","data-provider","var","unclassified"
"pdd","data-provider","val","property collaborator"
"pdd","data-provider","get_signed_val","property collaborator"
"pdd","data-provider","offset","property collaborator"
"pdd","data-provider","is_val","predicate"
"pdd","data-provider","is_one","predicate"
"pdd","data-provider","is_zero","predicate"
"pdd","data-provider","is_linear","predicate"
"pdd","data-provider","is_var","predicate"
"pdd","data-provider","is_max","predicate"
"pdd","data-provider","is_unilinear","predicate"
"pdd","data-provider","is_unary","predicate"
"pdd","data-provider","is_offset","predicate"
"pdd","data-provider","is_binary","predicate"
"pdd","data-provider","is_monomial","predicate"
"pdd","data-provider","is_univariate","predicate"
"pdd","data-provider","is_univariate_in","predicate"
"pdd","data-provider","get_univariate_coefficients","collaborator"
"pdd","data-provider","get_univariate_coefficients","property collaborator"
"pdd","data-provider","is_never_zero","predicate"
"pdd","data-provider","min_parity","unclassified"
"pdd","data-provider","var_is_leaf","predicate"
"pdd","data-provider","operator-","property"
"pdd","data-provider","operator+","property"
"pdd","data-provider","operator-","property"
"pdd","data-provider","operator*","property"
"pdd","data-provider","operator&","property"
"pdd","data-provider","operator|","property"
"pdd","data-provider","operator^","property"
"pdd","data-provider","operator^","property"
"pdd","data-provider","operator*","property collaborator"
"pdd","data-provider","operator+","property collaborator"
"pdd","data-provider","operator~","property"
"pdd","data-provider","rev_sub","property collaborator"
"pdd","data-provider","div","property collaborator"
"pdd","data-provider","try_div","predicate"
"pdd","data-provider","pow","property"
"pdd","data-provider","reduce","property"
"pdd","data-provider","different_leading_term","predicate"
"pdd","data-provider","factor","unclassified"
"pdd","data-provider","factor","predicate"
"pdd","data-provider","resolve","predicate non-void-command"
"pdd","data-provider","reduce","property"
"pdd","data-provider","subst_val0","property collaborator"
"pdd","data-provider","subst_val","property"
"pdd","data-provider","subst_val","property collaborator"
"pdd","data-provider","subst_add","property collaborator"
"pdd","data-provider","subst_get","predicate collaborator"
"pdd","data-provider","display","property collaborator"
"pdd","data-provider","operator==","predicate"
"pdd","data-provider","operator!=","predicate"
"pdd","data-provider","hash","get"
"pdd","data-provider","power_of_2","unclassified"
"pdd","data-provider","dag_size","unclassified"
"pdd","data-provider","tree_size","property"
"pdd","data-provider","degree","unclassified"
"pdd","data-provider","degree","unclassified"
"pdd","data-provider","max_pow2_divisor","unclassified"
"pdd","data-provider","free_vars","property collaborator"
"pdd","data-provider","swap","wrapper"
"pdd","data-provider","linear_monomials","property wrapper"
"pdd","data-provider","manager","get collaborator"
"pdd","data-provider","pdd::operator=","get non-void-command"
"pdd","data-provider","pdd::operator=","get non-void-command"
"pdd","data-provider","pdd::operator=","get non-void-command collaborator"
"pdd","data-provider","pdd::reset","command collaborator"
"pdd","data-provider","pdd::leading_coefficient","property controller"
"pdd","data-provider","pdd::shl","property wrapper"
"pdd","data-provider","pdd::subst_pdd","get property"
"pdd","data-provider","pdd::var_factors","property collaborator"
"pdd","data-provider","pdd::begin","property wrapper"
"pdd","data-provider","pdd::end","property wrapper"
"skip_proof_converter","boundary degenerate","operator()","wrapper stateless"
"skip_proof_converter","boundary degenerate","translate","wrapper stateless"
"skip_proof_converter","boundary degenerate","display","collaborator incidental"
"pb2bv_tactic","entity boundary","translate","property wrapper"
"pb2bv_tactic","entity boundary","~pb2bv_tactic","destructor"
"pb2bv_tactic","entity boundary","name","incidental"
"pb2bv_tactic","entity boundary","updt_params","command collaborator"
"pb2bv_tactic","entity boundary","collect_param_descrs","command collaborator"
"pb2bv_tactic","entity boundary","operator()","wrapper stateless"
"pb2bv_tactic","entity boundary","cleanup","wrapper"
"fpa_value_factory","entity boundary","mk_value_core","property non-void-command collaborator"
"fpa_value_factory","entity boundary","fpa_value_factory","constructor"
"fpa_value_factory","entity boundary","get_some_value","property non-void-command collaborator"
"fpa_value_factory","entity boundary","get_some_values","predicate non-void-command collaborator"
"fpa_value_factory","entity boundary","get_fresh_value","property non-void-command collaborator"
"fpa_value_factory","entity boundary","register_value","empty"
"fpa_value_factory","entity boundary","mk_value","property non-void-command collaborator"
"probe_info","data-provider boundary","get_name","get collaborator"
"probe_info","data-provider boundary","get_descr","get"
"probe_info","data-provider boundary","get","property collaborator"
"probe_info","data-provider boundary","probe_info::probe_info","constructor"
"probe_info","data-provider boundary","probe_info::~probe_info","destructor"
"elim_vars::compare_occ","data-provider boundary small-class","operator()","predicate collaborator"
"flatten_clauses","boundary","is_literal","predicate non-void-command collaborator"
"flatten_clauses","boundary","is_reducible","predicate non-void-command collaborator"
"flatten_clauses","boundary","flatten_clauses","constructor"
"flatten_clauses","boundary","name","incidental"
"flatten_clauses","boundary","reset_statistics","set"
"flatten_clauses","boundary","collect_statistics","controller"
"flatten_clauses","boundary","reduce","command collaborator"
"exec_given_tactic_cmd","lazy-class","exec_given_tactic_cmd","constructor"
"exec_given_tactic_cmd","lazy-class","get_usage","incidental"
"exec_given_tactic_cmd","lazy-class","prepare","set collaborator"
"exec_given_tactic_cmd","lazy-class","next_arg_kind","property collaborator"
"exec_given_tactic_cmd","lazy-class","set_next_arg","set collaborator"
"exec_given_tactic_cmd","lazy-class","init_pdescrs","controller stateless"
"exec_given_tactic_cmd","lazy-class","display_statistics","controller stateless"
"svector","empty","svector","constructor"
"svector","empty","svector","constructor"
"svector","empty","svector","constructor"
"svector","empty","svector","constructor"
"simplify_cmd","commander boundary","simplify_cmd","constructor"
"simplify_cmd","commander boundary","get_usage","incidental"
"simplify_cmd","commander boundary","get_main_descr","incidental"
"simplify_cmd","commander boundary","init_pdescrs","controller stateless"
"simplify_cmd","commander boundary","prepare","set collaborator"
"simplify_cmd","commander boundary","next_arg_kind","property collaborator"
"simplify_cmd","commander boundary","set_next_arg","set collaborator"
"simplify_cmd","commander boundary","execute","command collaborator"
"rule_subsumption_index","entity boundary","rule_subsumption_index","constructor"
"rule_subsumption_index","entity boundary","~rule_subsumption_index","destructor"
"rule_subsumption_index","entity boundary","rule_subsumption_index::handle_unconditioned_rule","command collaborator"
"rule_subsumption_index","entity boundary","rule_subsumption_index::add","command collaborator"
"rule_subsumption_index","entity boundary","rule_subsumption_index::is_subsumed","predicate non-void-command collaborator"
"rule_subsumption_index","entity boundary","rule_subsumption_index::is_subsumed","predicate non-void-command collaborator"
"mpq","data-provider boundary data-class small-class","numerator","get collaborator"
"mpq","data-provider boundary data-class small-class","denominator","get collaborator"
"set_simplifier_cmd","boundary","set_simplifier_cmd","constructor"
"set_simplifier_cmd","boundary","get_usage","incidental"
"set_simplifier_cmd","boundary","prepare","set collaborator"
"set_simplifier_cmd","boundary","next_arg_kind","property collaborator"
"set_simplifier_cmd","boundary","set_next_arg","set collaborator"
"set_simplifier_cmd","boundary","get_main_descr","incidental"
"set_simplifier_cmd","boundary","init_pdescrs","empty"
"set_simplifier_cmd","boundary","execute","controller"
"get_consequences_cmd","commander boundary degenerate","get_consequences_cmd","constructor"
"get_consequences_cmd","commander boundary degenerate","get_usage","incidental"
"get_consequences_cmd","commander boundary degenerate","get_descr","collaborator incidental"
"get_consequences_cmd","commander boundary degenerate","get_arity","incidental"
"get_consequences_cmd","commander boundary degenerate","next_arg_kind","collaborator incidental"
"get_consequences_cmd","commander boundary degenerate","set_next_arg","command collaborator"
"get_consequences_cmd","commander boundary degenerate","failure_cleanup","empty"
"get_consequences_cmd","commander boundary degenerate","execute","command collaborator"
"get_consequences_cmd","commander boundary degenerate","prepare","command collaborator"
"get_consequences_cmd","commander boundary degenerate","reset","command collaborator"
"get_consequences_cmd","commander boundary degenerate","finalize","empty"
"pdatatype_decl","unclassified","obj_size","incidental"
"pdatatype_decl","unclassified","pdatatype_decl::pdatatype_decl","constructor"
"pdatatype_decl","unclassified","pdatatype_decl::finalize","command collaborator"
"pdatatype_decl","unclassified","pdatatype_decl::has_missing_refs","predicate controller"
"pdatatype_decl","unclassified","pdatatype_decl::has_duplicate_accessors","predicate controller"
"pdatatype_decl","unclassified","pdatatype_decl::fix_missing_refs","predicate controller"
"pdatatype_decl","unclassified","pdatatype_decl::instantiate_decl","property controller"
"pdatatype_decl","unclassified","pdatatype_decl::instantiate","property controller"
"pdatatype_decl","unclassified","pdatatype_decl::display","property collaborator"
"pdatatype_decl","unclassified","pdatatype_decl::commit","predicate non-void-command collaborator"
"pconstructor_decl","unclassified","obj_size","incidental"
"pconstructor_decl","unclassified","get_name","get collaborator"
"pconstructor_decl","unclassified","get_recognizer_name","get collaborator"
"pconstructor_decl","unclassified","display","property collaborator"
"pconstructor_decl","unclassified","pconstructor_decl::pconstructor_decl","constructor"
"pconstructor_decl","unclassified","pconstructor_decl::finalize","command collaborator"
"pconstructor_decl","unclassified","pconstructor_decl::has_missing_refs","predicate controller"
"pconstructor_decl","unclassified","pconstructor_decl::fix_missing_refs","predicate controller"
"pconstructor_decl","unclassified","pconstructor_decl::instantiate_decl","property controller"
"pconstructor_decl","unclassified","pconstructor_decl::display","controller"
"double_manager","data-provider","double_manager","constructor"
"double_manager","data-provider","updt_params","set collaborator"
"double_manager","data-provider","eq","predicate"
"double_manager","data-provider","neq","predicate"
"double_manager","data-provider","is_pos","predicate"
"double_manager","data-provider","is_neg","predicate"
"double_manager","data-provider","is_zero","predicate"
"double_manager","data-provider","is_nonpos","predicate"
"double_manager","data-provider","is_nonneg","predicate"
"expr_safe_replace","commander boundary","expr_safe_replace","constructor"
"expr_safe_replace","commander boundary","operator()","controller stateless"
"expr_safe_replace","commander boundary","empty","predicate"
"expr_safe_replace","commander boundary","expr_safe_replace::insert","command collaborator"
"expr_safe_replace","commander boundary","expr_safe_replace::operator()","void-accessor command collaborator"
"expr_safe_replace","commander boundary","expr_safe_replace::operator()","void-accessor command collaborator"
"expr_safe_replace","commander boundary","expr_safe_replace::reset","command"
"expr_safe_replace","commander boundary","expr_safe_replace::apply_substitution","command collaborator"
"expr_safe_replace","commander boundary","expr_safe_replace::push_scope","command"
"expr_safe_replace","commander boundary","expr_safe_replace::pop_scope","command"
"theory_wmaxsat","commander boundary","use_diseqs","incidental"
"theory_wmaxsat","commander boundary","build_models","incidental"
"theory_wmaxsat","commander boundary","mk_fresh","collaborator incidental"
"theory_wmaxsat","commander boundary","internalize_atom","incidental"
"theory_wmaxsat","commander boundary","internalize_term","collaborator incidental"
"theory_wmaxsat","commander boundary","new_eq_eh","empty"
"theory_wmaxsat","commander boundary","new_diseq_eh","empty"
"theory_wmaxsat","commander boundary","display","empty"
"theory_wmaxsat","commander boundary","collect_statistics","controller"
"theory_wmaxsat","commander boundary","can_propagate","predicate"
"theory_wmaxsat","commander boundary","theory_wmaxsat::theory_wmaxsat","constructor"
"theory_wmaxsat","commander boundary","theory_wmaxsat::~theory_wmaxsat","destructor"
"theory_wmaxsat","commander boundary","theory_wmaxsat::get_assignment","command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::init_search_eh","set"
"theory_wmaxsat","commander boundary","theory_wmaxsat::assert_weighted","property non-void-command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::disable_var","command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::register_var","property non-void-command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::get_cost","property non-void-command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::init_min_cost","command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::assign_eh","command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::final_check_eh","property non-void-command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::reset_eh","command"
"theory_wmaxsat","commander boundary","theory_wmaxsat::reset_local","command"
"theory_wmaxsat","commander boundary","theory_wmaxsat::propagate","command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::is_optimal","predicate"
"theory_wmaxsat","commander boundary","theory_wmaxsat::mk_block","property non-void-command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::restart_eh","empty"
"theory_wmaxsat","commander boundary","theory_wmaxsat::block","command"
"theory_wmaxsat","commander boundary","theory_wmaxsat::max_unassigned_is_blocked","predicate non-void-command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::propagate","command collaborator"
"theory_wmaxsat","commander boundary","theory_wmaxsat::normalize","command collaborator"
"mpz_matrix_manager","entity boundary","nm","get collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::mpz_matrix_manager","constructor"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::~mpz_matrix_manager","destructor"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::mk","void-accessor command collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::del","void-accessor command collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::set","command collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::tensor_product","command collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::swap_rows","wrapper stateless"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::normalize_row","predicate non-void-command"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::eliminate","predicate non-void-command"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::solve_core","predicate non-void-command"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::solve","predicate non-void-command collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::solve","predicate non-void-command"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::filter_cols","command collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::permute_rows","command collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::linear_independent_rows","non-void-command collaborator"
"mpz_matrix_manager","entity boundary","mpz_matrix_manager::display","unclassified"
"ematch::scoped_mark_reset","empty","~scoped_mark_reset","destructor"
"instantiate_nested_cmd","commander boundary small-class","instantiate_nested_cmd","constructor"
"instantiate_nested_cmd","commander boundary small-class","get_descr","collaborator incidental"
"instantiate_nested_cmd","commander boundary small-class","set_next_arg","command collaborator"
"psort_dt_decl","unclassified","obj_size","incidental"
"psort_dt_decl","unclassified","psort_dt_decl::psort_dt_decl","constructor"
"psort_dt_decl","unclassified","psort_dt_decl::instantiate","property controller"
"psort_dt_decl","unclassified","psort_dt_decl::display","property collaborator"
"psort_builtin_decl","unclassified","obj_size","incidental"
"psort_builtin_decl","unclassified","psort_builtin_decl::psort_builtin_decl","constructor"
"psort_builtin_decl","unclassified","psort_builtin_decl::instantiate","property controller"
"psort_builtin_decl","unclassified","psort_builtin_decl::instantiate","property controller"
"psort_builtin_decl","unclassified","psort_builtin_decl::display","property collaborator"
"extract_eq","degenerate","~extract_eq","destructor"
"extract_eq","degenerate","pre_process","empty"
"extract_eq","degenerate","updt_params","empty"
"extract_eq","degenerate","set_allow_booleans","empty"
"interval_manager","entity boundary","round_to_minus_inf","command"
"interval_manager","entity boundary","round_to_plus_inf","command"
"interval_manager","entity boundary","set_rounding","command"
"interval_manager","entity boundary","lower_kind","property collaborator"
"interval_manager","entity boundary","upper_kind","property collaborator"
"interval_manager","entity boundary","set_lower","command collaborator"
"interval_manager","entity boundary","set_upper","command collaborator"
"interval_manager","entity boundary","set_lower_is_open","command"
"interval_manager","entity boundary","set_upper_is_open","command"
"interval_manager","entity boundary","set_lower_is_inf","command"
"interval_manager","entity boundary","set_upper_is_inf","command"
"interval_manager","entity boundary","m","property collaborator"
"interval_manager","entity boundary","lower","property collaborator"
"interval_manager","entity boundary","upper","property collaborator"
"interval_manager","entity boundary","lower","property non-void-command collaborator"
"interval_manager","entity boundary","upper","property non-void-command collaborator"
"interval_manager","entity boundary","lower_is_open","predicate collaborator"
"interval_manager","entity boundary","upper_is_open","predicate collaborator"
"interval_manager","entity boundary","lower_is_inf","predicate collaborator"
"interval_manager","entity boundary","upper_is_inf","predicate collaborator"
"interval_manager","entity boundary","is_empty","predicate collaborator"
"interval_manager","entity boundary","lower_is_neg","predicate collaborator"
"interval_manager","entity boundary","lower_is_pos","predicate collaborator"
"interval_manager","entity boundary","lower_is_zero","predicate collaborator"
"interval_manager","entity boundary","upper_is_neg","predicate collaborator"
"interval_manager","entity boundary","upper_is_pos","predicate collaborator"
"interval_manager","entity boundary","upper_is_zero","predicate collaborator"
"interval_manager","entity boundary","is_P","predicate collaborator"
"interval_manager","entity boundary","is_P0","predicate collaborator"
"interval_manager","entity boundary","is_P1","predicate collaborator"
"interval_manager","entity boundary","is_N","predicate collaborator"
"interval_manager","entity boundary","is_N0","predicate collaborator"
"interval_manager","entity boundary","is_N1","predicate collaborator"
"interval_manager","entity boundary","is_M","predicate collaborator"
"interval_manager","entity boundary","is_zero","predicate collaborator"
"interval_manager","entity boundary","mul","command collaborator"
"interval_manager","entity boundary","div","command collaborator"
"interval_manager","entity boundary","div_jst","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::interval_manager","constructor"
"interval_manager","entity boundary","interval_manager<C>::~interval_manager","destructor"
"interval_manager","entity boundary","interval_manager<C>::del","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::checkpoint","command"
"interval_manager","entity boundary","interval_manager<C>::nth_root_slow","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::rough_approx_nth_root","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::nth_root","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::A_div_x_n","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::approx_nth_root","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::nth_root_pos","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::fact","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::sine_series","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::sine","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::cosine_series","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::cosine","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::reset_lower","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::reset_upper","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::reset","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::contains_zero","predicate collaborator"
"interval_manager","entity boundary","interval_manager<C>::contains","predicate collaborator"
"interval_manager","entity boundary","interval_manager<C>::display","collaborator"
"interval_manager","entity boundary","interval_manager<C>::display_pp","collaborator"
"interval_manager","entity boundary","interval_manager<C>::check_invariant","predicate collaborator"
"interval_manager","entity boundary","interval_manager<C>::set","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::set","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::eq","predicate collaborator"
"interval_manager","entity boundary","interval_manager<C>::before","predicate collaborator"
"interval_manager","entity boundary","interval_manager<C>::neg_jst","void-accessor command collaborator"
"interval_manager","entity boundary","interval_manager<C>::neg","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::neg","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::add_jst","collaborator incidental"
"interval_manager","entity boundary","interval_manager<C>::add","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::add","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::sub_jst","collaborator incidental"
"interval_manager","entity boundary","interval_manager<C>::sub","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::sub","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::mul_jst","void-accessor command collaborator"
"interval_manager","entity boundary","interval_manager<C>::div_mul","command"
"interval_manager","entity boundary","interval_manager<C>::mul","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::mul","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::div","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::mul_jst","void-accessor command collaborator"
"interval_manager","entity boundary","interval_manager<C>::mul","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::mul","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::power_jst","void-accessor command collaborator"
"interval_manager","entity boundary","interval_manager<C>::power","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::power","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::nth_root","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::nth_root","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::nth_root_jst","collaborator incidental"
"interval_manager","entity boundary","interval_manager<C>::xn_eq_y","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::xn_eq_y","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::xn_eq_y_jst","collaborator incidental"
"interval_manager","entity boundary","interval_manager<C>::inv_jst","void-accessor command collaborator"
"interval_manager","entity boundary","interval_manager<C>::inv","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::inv","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::div_jst","void-accessor command collaborator"
"interval_manager","entity boundary","interval_manager<C>::div","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::div","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::pi_series","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::pi","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::set_pi_prec","command"
"interval_manager","entity boundary","interval_manager<C>::set_pi_at_least_prec","command"
"interval_manager","entity boundary","interval_manager<C>::e_series","command collaborator"
"interval_manager","entity boundary","interval_manager<C>::e","command collaborator"
"act_cache","commander","insert","command collaborator"
"act_cache","commander","find","property non-void-command collaborator"
"act_cache","commander","size","unclassified"
"act_cache","commander","capacity","unclassified"
"act_cache","commander","empty","predicate"
"act_cache","commander","act_cache::compress_queue","command"
"act_cache","commander","act_cache::init","command"
"act_cache","commander","act_cache::dec_refs","command"
"act_cache","commander","act_cache::act_cache","constructor"
"act_cache","commander","act_cache::act_cache","constructor"
"act_cache","commander","act_cache::~act_cache","destructor"
"act_cache","commander","act_cache::del_unused","command collaborator"
"act_cache","commander","act_cache::insert","command collaborator"
"act_cache","commander","act_cache::find","property set collaborator"
"act_cache","commander","act_cache::reset","command"
"act_cache","commander","act_cache::cleanup","command"
"act_cache","commander","act_cache::check_invariant","incidental"
"psort_type_var_decl","boundary","obj_size","incidental"
"psort_type_var_decl","boundary","psort_type_var_decl::psort_type_var_decl","constructor"
"psort_type_var_decl","boundary","psort_type_var_decl::finalize","command collaborator"
"psort_type_var_decl","boundary","psort_type_var_decl::instantiate","property controller"
"psort_type_var_decl","boundary","psort_type_var_decl::display","property collaborator"
"check_relation_plugin::filter_identical_fn","commander boundary small-class","operator()","command collaborator"
"theory_array","commander boundary","init_search_eh","set"
"theory_array","commander boundary","find","property collaborator"
"theory_array","commander boundary","is_root","predicate collaborator"
"theory_array","commander boundary","mk_fresh","wrapper stateless"
"theory_array","commander boundary","get_name","incidental"
"theory_array","commander boundary","get_trail_stack","get collaborator"
"theory_array","commander boundary","parent_selects","get non-void-command collaborator"
"theory_array","commander boundary","theory_array::theory_array","constructor"
"theory_array","commander boundary","theory_array::~theory_array","destructor"
"theory_array","commander boundary","theory_array::merge_eh","command collaborator"
"theory_array","commander boundary","theory_array::unmerge_eh","empty"
"theory_array","commander boundary","theory_array::mk_var","property non-void-command collaborator"
"theory_array","commander boundary","theory_array::add_parent_select","command collaborator"
"theory_array","commander boundary","theory_array::add_parent_store","command collaborator"
"theory_array","commander boundary","theory_array::instantiate_axiom2b_for","predicate non-void-command collaborator"
"theory_array","commander boundary","theory_array::set_prop_upward","command collaborator"
"theory_array","commander boundary","theory_array::set_prop_upward","command collaborator"
"theory_array","commander boundary","theory_array::set_prop_upward","command collaborator"
"theory_array","commander boundary","theory_array::get_lambda_equiv_size","controller stateless"
"theory_array","commander boundary","theory_array::add_store","command collaborator"
"theory_array","commander boundary","theory_array::instantiate_axiom1","command collaborator"
"theory_array","commander boundary","theory_array::instantiate_axiom2a","command collaborator"
"theory_array","commander boundary","theory_array::instantiate_axiom2b","predicate non-void-command collaborator"
"theory_array","commander boundary","theory_array::instantiate_extensionality","command collaborator"
"theory_array","commander boundary","theory_array::internalize_atom","predicate non-void-command collaborator"
"theory_array","commander boundary","theory_array::internalize_term_core","predicate non-void-command collaborator"
"theory_array","commander boundary","theory_array::internalize_term","predicate non-void-command collaborator"
"theory_array","commander boundary","theory_array::apply_sort_cnstr","command collaborator"
"theory_array","commander boundary","theory_array::new_eq_eh","command collaborator"
"theory_array","commander boundary","theory_array::new_diseq_eh","command collaborator"
"theory_array","commander boundary","theory_array::relevant_eh","command collaborator"
"theory_array","commander boundary","theory_array::push_scope_eh","command"
"theory_array","commander boundary","theory_array::pop_scope_eh","command"
"theory_array","commander boundary","theory_array::final_check_eh","property non-void-command collaborator"
"theory_array","commander boundary","theory_array::assert_delayed_axioms","property non-void-command collaborator"
"theory_array","commander boundary","theory_array::mk_interface_eqs_at_final_check","property set collaborator"
"theory_array","commander boundary","theory_array::reset_eh","command"
"theory_array","commander boundary","theory_array::display","collaborator"
"theory_array","commander boundary","theory_array::display_ids","wrapper stateless"
"theory_array","commander boundary","theory_array::display_var","collaborator"
"theory_array","commander boundary","theory_array::collect_statistics","controller"
"psort_hash_proc","pure-controller degenerate small-class","operator()","controller stateless"
"psort","entity commander boundary lazy-class degenerate","is_psort","incidental"
"psort","entity commander boundary lazy-class degenerate","is_sort_wrapper","incidental"
"psort","entity commander boundary lazy-class degenerate","instantiate","collaborator incidental"
"psort","entity commander boundary lazy-class degenerate","hcons_kind","wrapper stateless"
"psort","entity commander boundary lazy-class degenerate","hcons_hash","wrapper stateless"
"psort","entity commander boundary lazy-class degenerate","hcons_eq","wrapper stateless"
"psort","entity commander boundary lazy-class degenerate","psort::cache","set collaborator"
"psort","entity commander boundary lazy-class degenerate","psort::find","property collaborator"
"psort","entity commander boundary lazy-class degenerate","psort::finalize","command collaborator"
"psort","entity commander boundary lazy-class degenerate","psort::reset_cache","set collaborator"
"smt2_pp_environment_dbg","data-provider boundary","smt2_pp_environment_dbg","constructor"
"smt2_pp_environment_dbg","data-provider boundary","get_manager","get collaborator"
"smt2_pp_environment_dbg","data-provider boundary","get_autil","get collaborator"
"smt2_pp_environment_dbg","data-provider boundary","get_bvutil","get collaborator"
"smt2_pp_environment_dbg","data-provider boundary","get_sutil","get collaborator"
"smt2_pp_environment_dbg","data-provider boundary","get_arutil","get collaborator"
"smt2_pp_environment_dbg","data-provider boundary","get_futil","get collaborator"
"smt2_pp_environment_dbg","data-provider boundary","get_dlutil","get collaborator"
"smt2_pp_environment_dbg","data-provider boundary","get_dtutil","get collaborator"
"smt2_pp_environment_dbg","data-provider boundary","uses","collaborator incidental"
"pdecl_manager::sort_info","pure-controller small-class","obj_size","incidental"
"pdecl_manager::sort_info","pure-controller small-class","finalize","controller"
"reachability_info","boundary","reachability_info","constructor"
"reachability_info","boundary","reachability_info","constructor"
"reachability_info","boundary","init_down","set collaborator"
"reachability_info","boundary","init_up","predicate set collaborator"
"reachability_info","boundary","propagate_down","controller"
"reachability_info","boundary","propagate_up","predicate set collaborator"
"reachability_info","boundary","join","set"
"reachability_info","boundary","dump","collaborator"
"reachability_info","boundary","is_reachable","get"
"datatype_decl_buffer","empty","~datatype_decl_buffer","destructor"
"mul_probe","pure-controller degenerate small-class","mul_probe","constructor"
"mul_probe","pure-controller degenerate small-class","operator()","controller stateless"
"infer_cmd","degenerate","infer_cmd","constructor"
"infer_cmd","degenerate","get_usage","incidental"
"infer_cmd","degenerate","get_descr","collaborator incidental"
"infer_cmd","degenerate","get_arity","incidental"
"infer_cmd","degenerate","prepare","empty"
"infer_cmd","degenerate","finalize","empty"
"infer_cmd","degenerate","failure_cleanup","empty"
"infer_cmd","degenerate","next_arg_kind","collaborator incidental"
"infer_cmd","degenerate","set_next_arg","wrapper stateless"
"infer_cmd","degenerate","execute","wrapper stateless"
"del_cmd","degenerate","del_cmd","constructor"
"del_cmd","degenerate","get_usage","incidental"
"del_cmd","degenerate","get_descr","collaborator incidental"
"del_cmd","degenerate","get_arity","incidental"
"del_cmd","degenerate","prepare","empty"
"del_cmd","degenerate","finalize","empty"
"del_cmd","degenerate","failure_cleanup","empty"
"del_cmd","degenerate","next_arg_kind","collaborator incidental"
"del_cmd","degenerate","set_next_arg","wrapper stateless"
"del_cmd","degenerate","execute","wrapper stateless"
"arith_solve_plugin","entity boundary","arith_solve_plugin","constructor"
"arith_solve_plugin","entity boundary","mk_term","property non-void-command collaborator"
"arith_solve_plugin","entity boundary","solve","predicate non-void-command collaborator"
"arith_solve_plugin","entity boundary","is_invertible_const","predicate non-void-command collaborator"
"arith_solve_plugin","entity boundary","is_invertible_mul","predicate non-void-command collaborator"
"arith_solve_plugin","entity boundary","mk_eq_core","property non-void-command collaborator"
"arith_solve_plugin","entity boundary","mk_le_zero","property non-void-command collaborator"
"arith_solve_plugin","entity boundary","mk_ge_zero","property non-void-command collaborator"
"arith_solve_plugin","entity boundary","mk_le_core","predicate non-void-command collaborator"
"arith_solve_plugin","entity boundary","mk_zero","property non-void-command collaborator"
"arith_solve_plugin","entity boundary","is_one","predicate collaborator"
"arith_solve_plugin","entity boundary","mk_ge_core","predicate non-void-command collaborator"
"arith_solve_plugin","entity boundary","try_int_mul_solve","predicate non-void-command collaborator"
"arith_solve_plugin","entity boundary","solve","property non-void-command collaborator"
"check_relation_plugin::join_fn","pure-controller degenerate small-class","operator()","controller stateless"
"algebraic","data-provider","algebraic","constructor"
"algebraic","data-provider","p","get collaborator"
"algebraic","data-provider","depends_on_infinitesimals","get"
"algebraic","data-provider","sdt","get collaborator"
"algebraic","data-provider","sc_idx","get"
"algebraic","data-provider","num_roots_inside_interval","unclassified"
"algebraic","data-provider","iso_interval","get collaborator"
"big::pframe","data-provider boundary data-class small-class","child","get collaborator"
"big::pframe","data-provider boundary data-class small-class","parent","get collaborator"
"user_callback","data-provider","user_callback","constructor"
"user_callback","data-provider","new_lemma","predicate"
"user_callback","data-provider","predecessor","predicate"
"user_callback","data-provider","unfold","predicate"
"user_callback","data-provider","user_callback::new_lemma_eh","wrapper"
"user_callback","data-provider","user_callback::predecessor_eh","wrapper"
"user_callback","data-provider","user_callback::unfold_eh","wrapper"
"proof_saver","commander boundary","proof_saver","constructor"
"proof_saver","commander boundary","assume","command collaborator"
"proof_saver","commander boundary","del","command collaborator"
"proof_saver","commander boundary","infer","command collaborator"
"user_propagator_base","commander boundary","~user_propagator_base","destructor"
"user_propagator_base","commander boundary","ctx","property non-void-command collaborator"
"user_propagator_base","commander boundary","register_fixed","set collaborator"
"user_propagator_base","commander boundary","register_fixed","command"
"user_propagator_base","commander boundary","register_eq","set collaborator"
"user_propagator_base","commander boundary","register_eq","command"
"user_propagator_base","commander boundary","register_final","set collaborator"
"user_propagator_base","commander boundary","register_final","set"
"user_propagator_base","commander boundary","register_created","set collaborator"
"user_propagator_base","commander boundary","register_created","command"
"user_propagator_base","commander boundary","register_decide","set collaborator"
"user_propagator_base","commander boundary","register_decide","command"
"user_propagator_base","commander boundary","fixed","empty"
"user_propagator_base","commander boundary","eq","empty"
"user_propagator_base","commander boundary","created","empty"
"user_propagator_base","commander boundary","decide","empty"
"user_propagator_base","commander boundary","next_split","predicate non-void-command collaborator"
"user_propagator_base","commander boundary","add","command collaborator"
"user_propagator_base","commander boundary","conflict","command collaborator"
"user_propagator_base","commander boundary","conflict","command collaborator"
"user_propagator_base","commander boundary","propagate","predicate non-void-command collaborator"
"user_propagator_base","commander boundary","propagate","predicate non-void-command collaborator"
"pbc","data-provider boundary","lit","get collaborator"
"pbc","data-provider boundary","operator[]","get collaborator"
"pbc","data-provider boundary","operator[]","get collaborator"
"pbc","data-provider boundary","begin","get collaborator"
"pbc","data-provider boundary","end","property collaborator"
"pbc","data-provider boundary","slack","get"
"pbc","data-provider boundary","set_slack","set"
"pbc","data-provider boundary","num_watch","get"
"pbc","data-provider boundary","max_sum","get"
"pbc","data-provider boundary","set_num_watch","set"
"pbc","data-provider boundary","set_k","set"
"pbc","data-provider boundary","swap","command"
"pbc","data-provider boundary","literals","property controller"
"pbc","data-provider boundary","get_lit","get collaborator"
"pbc","data-provider boundary","set_lit","collaborator"
"pbc","data-provider boundary","get_coeff","get"
"pbc","data-provider boundary","pbc::pbc","constructor"
"pbc","data-provider boundary","pbc::update_max_sum","command"
"pbc","data-provider boundary","pbc::negate","set"
"pbc","data-provider boundary","pbc::is_watching","predicate collaborator"
"pbc","data-provider boundary","pbc::is_cardinality","predicate collaborator"
"pbc","data-provider boundary","pbc::get_reward","property controller"
"pbc","data-provider boundary","pbc::clear_watch","command collaborator"
"pbc","data-provider boundary","pbc::init_watch","predicate non-void-command collaborator"
"pbc","data-provider boundary","pbc::display","property collaborator"
"pbc","data-provider boundary","pbc::display","property controller"
"pbc","data-provider boundary","pbc::validate_unit_propagation","predicate collaborator"
"pbc","data-provider boundary","pbc::eval","property controller"
"pbc","data-provider boundary","pbc::eval","property controller"
"pbc","data-provider boundary","pbc::init_use_list","collaborator"
"pbc","data-provider boundary","pbc::is_blocked","predicate collaborator"
"default_exception","data-provider small-class","default_exception::default_exception","constructor"
"default_exception","data-provider small-class","default_exception::msg","property"
"poly_isolate_roots_cmd","commander boundary lazy-class","get_usage","incidental"
"poly_isolate_roots_cmd","commander boundary lazy-class","get_descr","collaborator incidental"
"poly_isolate_roots_cmd","commander boundary lazy-class","get_arity","incidental"
"poly_isolate_roots_cmd","commander boundary lazy-class","prepare","set collaborator"
"poly_isolate_roots_cmd","commander boundary lazy-class","finalize","set collaborator"
"poly_isolate_roots_cmd","commander boundary lazy-class","failure_cleanup","set collaborator"
"poly_isolate_roots_cmd","commander boundary lazy-class","next_arg_kind","collaborator incidental"
"poly_isolate_roots_cmd","commander boundary lazy-class","set_next_arg","command collaborator"
"poly_isolate_roots_cmd","commander boundary lazy-class","execute","set collaborator"
"mbp_qel_cmd","commander boundary degenerate","mbp_qel_cmd","constructor"
"mbp_qel_cmd","commander boundary degenerate","get_usage","incidental"
"mbp_qel_cmd","commander boundary degenerate","get_descr","collaborator incidental"
"mbp_qel_cmd","commander boundary degenerate","get_arity","incidental"
"mbp_qel_cmd","commander boundary degenerate","next_arg_kind","collaborator incidental"
"mbp_qel_cmd","commander boundary degenerate","set_next_arg","command collaborator"
"mbp_qel_cmd","commander boundary degenerate","prepare","command collaborator"
"mbp_qel_cmd","commander boundary degenerate","execute","command collaborator"
"model_evaluator","commander boundary","is_unknown","controller stateless"
"model_evaluator","commander boundary","set_unknown","controller stateless"
"model_evaluator","commander boundary","is_x","controller stateless"
"model_evaluator","commander boundary","is_false","controller stateless"
"model_evaluator","commander boundary","is_true","controller stateless"
"model_evaluator","commander boundary","set_x","command collaborator"
"model_evaluator","commander boundary","set_v","command collaborator"
"model_evaluator","commander boundary","set_false","command collaborator"
"model_evaluator","commander boundary","set_true","command collaborator"
"model_evaluator","commander boundary","set_bool","command"
"model_evaluator","commander boundary","get_number","property collaborator"
"model_evaluator","commander boundary","set_number","command collaborator"
"model_evaluator","commander boundary","get_value","property non-void-command collaborator"
"model_evaluator","commander boundary","set_value","command collaborator"
"model_evaluator","commander boundary","model_evaluator","constructor"
"model_evaluator","commander boundary","model_evaluator::model_evaluator","constructor"
"model_evaluator","commander boundary","model_evaluator::m","property collaborator"
"model_evaluator","commander boundary","model_evaluator::~model_evaluator","destructor"
"model_evaluator","commander boundary","model_evaluator::updt_params","command collaborator"
"model_evaluator","commander boundary","model_evaluator::get_param_descrs","wrapper stateless"
"model_evaluator","commander boundary","model_evaluator::set_model_completion","command"
"model_evaluator","commander boundary","model_evaluator::get_model_completion","predicate"
"model_evaluator","commander boundary","model_evaluator::set_expand_array_equalities","command"
"model_evaluator","commander boundary","model_evaluator::get_num_steps","unclassified"
"model_evaluator","commander boundary","model_evaluator::cleanup","command collaborator"
"model_evaluator","commander boundary","model_evaluator::reset","command collaborator"
"model_evaluator","commander boundary","model_evaluator::reset","command collaborator"
"model_evaluator","commander boundary","model_evaluator::operator()","command collaborator"
"model_evaluator","commander boundary","model_evaluator::operator()","property non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::operator()","property non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::is_true","predicate non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::is_false","predicate non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::is_true","predicate non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::are_equal","predicate non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval","predicate non-void-command"
"model_evaluator","commander boundary","model_evaluator::eval","predicate non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::set_solver","command collaborator"
"model_evaluator","commander boundary","model_evaluator::has_solver","predicate non-void-command"
"model_evaluator","commander boundary","model_evaluator::get_model","property collaborator"
"model_evaluator","commander boundary","model_evaluator::assign_value","command collaborator"
"model_evaluator","commander boundary","model_evaluator::setup_model","command collaborator"
"model_evaluator","commander boundary","model_evaluator::reset","command"
"model_evaluator","commander boundary","model_evaluator::minimize_literals","command collaborator"
"model_evaluator","commander boundary","model_evaluator::process_formula","command collaborator"
"model_evaluator","commander boundary","model_evaluator::collect","command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval_arith","command collaborator"
"model_evaluator","commander boundary","model_evaluator::inherit_value","command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval_exprs","void-accessor command collaborator"
"model_evaluator","commander boundary","model_evaluator::extract_array_func_interp","predicate non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval_array_eq","command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval_eq","command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval_basic","command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval_fmls","command collaborator"
"model_evaluator","commander boundary","model_evaluator::check_model","predicate non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval_heavy","property non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval","property non-void-command collaborator"
"model_evaluator","commander boundary","model_evaluator::eval","property non-void-command collaborator"
"expr_sparse_mark","commander","is_marked","predicate collaborator"
"expr_sparse_mark","commander","mark","command collaborator"
"expr_sparse_mark","commander","mark","command"
"expr_sparse_mark","commander","reset","command"
"instr_filter_identical","unclassified","instr_filter_identical","constructor"
"instr_filter_identical","unclassified","perform","predicate non-void-command collaborator"
"instr_filter_identical","unclassified","display_head_impl","property wrapper"
"instr_filter_identical","unclassified","make_annotations","controller"
"core_manager","commander boundary","zm","property collaborator"
"core_manager","commander boundary","m","property collaborator"
"core_manager","commander boundary","lim","get collaborator"
"core_manager","commander boundary","modular","predicate"
"core_manager","commander boundary","field","predicate"
"core_manager","commander boundary","p","property collaborator"
"core_manager","commander boundary","set_z","command"
"core_manager","commander boundary","set_zp","command collaborator"
"core_manager","commander boundary","set_zp","command"
"core_manager","commander boundary","degree","controller stateless"
"core_manager","commander boundary","is_zero","predicate non-void-command collaborator"
"core_manager","commander boundary","is_const","predicate non-void-command collaborator"
"core_manager","commander boundary","set","command collaborator"
"core_manager","commander boundary","get_primitive_and_content","command collaborator"
"core_manager","commander boundary","get_primitive","command collaborator"
"core_manager","commander boundary","neg","command collaborator"
"core_manager","commander boundary","neg","command collaborator"
"core_manager","commander boundary","add","command collaborator"
"core_manager","commander boundary","sub","command collaborator"
"core_manager","commander boundary","mul","command collaborator"
"core_manager","commander boundary","derivative","command collaborator"
"core_manager","commander boundary","div","command collaborator"
"core_manager","commander boundary","div_rem","command collaborator"
"core_manager","commander boundary","div_rem","command collaborator"
"core_manager","commander boundary","rem","command collaborator"
"core_manager","commander boundary","divides","predicate non-void-command collaborator"
"core_manager","commander boundary","exact_div","predicate non-void-command collaborator"
"core_manager","commander boundary","mk_monic","command collaborator"
"core_manager","commander boundary","mk_monic","command collaborator"
"core_manager","commander boundary","mk_monic","command collaborator"
"core_manager","commander boundary","gcd","command collaborator"
"core_manager","commander boundary","subresultant_gcd","command collaborator"
"core_manager","commander boundary","is_square_free","predicate non-void-command collaborator"
"core_manager","commander boundary","to_numeral_vector","command collaborator"
"core_manager","commander boundary","to_numeral_vector","command collaborator"
"core_manager","commander boundary","ext_gcd","command collaborator"
"core_manager","commander boundary","eq","predicate non-void-command collaborator"
"core_manager","commander boundary","display","controller stateless"
"core_manager","commander boundary","display_star","property non-void-command collaborator"
"core_manager","commander boundary","display_star","property non-void-command collaborator"
"core_manager","commander boundary","display_smt2","property collaborator"
"core_manager","commander boundary","core_manager::core_manager","constructor"
"core_manager","commander boundary","core_manager::~core_manager","destructor"
"core_manager","commander boundary","core_manager::checkpoint","command"
"core_manager","commander boundary","core_manager::trim","command collaborator"
"core_manager","commander boundary","core_manager::set_size","command collaborator"
"core_manager","commander boundary","core_manager::reset","command collaborator"
"core_manager","commander boundary","core_manager::set","command collaborator"
"core_manager","commander boundary","core_manager::set","command collaborator"
"core_manager","commander boundary","core_manager::get_primitive_and_content","command collaborator"
"core_manager","commander boundary","core_manager::neg","command collaborator"
"core_manager","commander boundary","core_manager::neg_core","command collaborator"
"core_manager","commander boundary","core_manager::neg","command collaborator"
"core_manager","commander boundary","core_manager::add_core","command collaborator"
"core_manager","commander boundary","core_manager::add","command collaborator"
"core_manager","commander boundary","core_manager::sub_core","command collaborator"
"core_manager","commander boundary","core_manager::sub","command collaborator"
"core_manager","commander boundary","core_manager::mul_core","command collaborator"
"core_manager","commander boundary","core_manager::mul","command collaborator"
"core_manager","commander boundary","core_manager::derivative","command collaborator"
"core_manager","commander boundary","core_manager::normalize","command collaborator"
"core_manager","commander boundary","core_manager::normalize","command collaborator"
"core_manager","commander boundary","core_manager::div","command collaborator"
"core_manager","commander boundary","core_manager::mul","command collaborator"
"core_manager","commander boundary","core_manager::mul","command collaborator"
"core_manager","commander boundary","core_manager::div_rem_core","void-accessor command collaborator"
"core_manager","commander boundary","core_manager::div_rem","command collaborator"
"core_manager","commander boundary","core_manager::div","command collaborator"
"core_manager","commander boundary","core_manager::rem","void-accessor command collaborator"
"core_manager","commander boundary","core_manager::srem","command collaborator"
"core_manager","commander boundary","core_manager::divides","predicate non-void-command collaborator"
"core_manager","commander boundary","core_manager::exact_div","predicate non-void-command collaborator"
"core_manager","commander boundary","core_manager::flip_sign_if_lm_neg","command collaborator"
"core_manager","commander boundary","core_manager::CRA_combine_images","command collaborator"
"core_manager","commander boundary","core_manager::mod_gcd","command collaborator"
"core_manager","commander boundary","core_manager::euclid_gcd","command collaborator"
"core_manager","commander boundary","core_manager::gcd","command collaborator"
"core_manager","commander boundary","core_manager::subresultant_gcd","command collaborator"
"core_manager","commander boundary","core_manager::square_free","command collaborator"
"core_manager","commander boundary","core_manager::is_square_free","predicate non-void-command collaborator"
"core_manager","commander boundary","core_manager::pw","command collaborator"
"core_manager","commander boundary","core_manager::mk_monic","command collaborator"
"core_manager","commander boundary","core_manager::ext_gcd","command collaborator"
"core_manager","commander boundary","core_manager::display","property collaborator"
"core_manager","commander boundary","core_manager::display_smt2","property collaborator"
"core_manager","commander boundary","core_manager::eq","predicate non-void-command collaborator"
"print_dimacs_cmd","degenerate","print_dimacs_cmd","constructor"
"print_dimacs_cmd","degenerate","get_usage","incidental"
"print_dimacs_cmd","degenerate","get_descr","collaborator incidental"
"print_dimacs_cmd","degenerate","get_arity","incidental"
"print_dimacs_cmd","degenerate","prepare","empty"
"print_dimacs_cmd","degenerate","execute","controller stateless"
"code_tree","data-provider boundary","spaces","incidental"
"code_tree","data-provider boundary","display_seq","collaborator"
"code_tree","data-provider boundary","display_children","collaborator"
"code_tree","data-provider boundary","get_enode","controller stateless"
"code_tree","data-provider boundary","display_label_hashes_core","collaborator"
"code_tree","data-provider boundary","display_label_hashes","collaborator"
"code_tree","data-provider boundary","~code_tree","destructor"
"code_tree","data-provider boundary","get_watch","get collaborator"
"code_tree","data-provider boundary","inc_counter","set"
"code_tree","data-provider boundary","get_counter","get"
"code_tree","data-provider boundary","expected_num_args","get"
"code_tree","data-provider boundary","get_num_regs","get"
"code_tree","data-provider boundary","get_num_choices","get"
"code_tree","data-provider boundary","get_root_lbl","get collaborator"
"code_tree","data-provider boundary","filter_candidates","get"
"code_tree","data-provider boundary","get_root","get collaborator"
"code_tree","data-provider boundary","add_candidate","command collaborator"
"code_tree","data-provider boundary","unmark","command collaborator"
"code_tree","data-provider boundary","has_candidates","predicate"
"code_tree","data-provider boundary","save_qhead","controller"
"code_tree","data-provider boundary","next_candidate","get property set collaborator"
"code_tree","data-provider boundary","get_candidates","get collaborator"
"code_tree","data-provider boundary","set_egraph","set collaborator"
"code_tree","data-provider boundary","get_patterns","get collaborator"
"code_tree","data-provider boundary","display","collaborator"
"code_tree","data-provider boundary","display_seq","collaborator"
"code_tree","data-provider boundary","display_children","collaborator"
"code_tree","data-provider boundary","get_enode","controller stateless"
"code_tree","data-provider boundary","display_label_hashes_core","collaborator"
"code_tree","data-provider boundary","display_label_hashes","collaborator"
"code_tree","data-provider boundary","~code_tree","destructor"
"code_tree","data-provider boundary","get_watch","get collaborator"
"code_tree","data-provider boundary","inc_counter","set"
"code_tree","data-provider boundary","get_counter","get"
"code_tree","data-provider boundary","expected_num_args","get"
"code_tree","data-provider boundary","get_num_regs","get"
"code_tree","data-provider boundary","get_num_choices","get"
"code_tree","data-provider boundary","get_root_lbl","get collaborator"
"code_tree","data-provider boundary","filter_candidates","get"
"code_tree","data-provider boundary","get_root","get collaborator"
"code_tree","data-provider boundary","add_candidate","command collaborator"
"code_tree","data-provider boundary","has_candidates","predicate"
"code_tree","data-provider boundary","reset_candidates","command"
"code_tree","data-provider boundary","get_candidates","get collaborator"
"code_tree","data-provider boundary","set_context","set collaborator"
"code_tree","data-provider boundary","get_patterns","get collaborator"
"code_tree","data-provider boundary","display","collaborator"
"dl_edge","data-provider","dl_edge","constructor"
"dl_edge","data-provider","get_source","get collaborator"
"dl_edge","data-provider","get_target","get collaborator"
"dl_edge","data-provider","get_weight","get collaborator"
"dl_edge","data-provider","get_explanation","get collaborator"
"dl_edge","data-provider","get_timestamp","get"
"dl_edge","data-provider","is_enabled","get"
"dl_edge","data-provider","enable","command"
"dl_edge","data-provider","disable","set"
"fail_if_branching_tactical","unclassified","fail_if_branching_tactical","constructor"
"fail_if_branching_tactical","unclassified","name","incidental"
"fail_if_branching_tactical","unclassified","operator()","controller"
"fail_if_branching_tactical","unclassified","translate","property non-void-command collaborator"
"subst_cmd","entity commander boundary","subst_cmd","constructor"
"subst_cmd","entity commander boundary","get_usage","incidental"
"subst_cmd","entity commander boundary","get_descr","collaborator incidental"
"subst_cmd","entity commander boundary","get_arity","incidental"
"subst_cmd","entity commander boundary","prepare","command collaborator"
"subst_cmd","entity commander boundary","next_arg_kind","property collaborator"
"subst_cmd","entity commander boundary","set_next_arg","command collaborator"
"subst_cmd","entity commander boundary","set_next_arg","command collaborator"
"subst_cmd","entity commander boundary","execute","command collaborator"
"_scoped_numeral_buffer","commander boundary","_scoped_numeral_buffer","constructor"
"_scoped_numeral_buffer","commander boundary","~_scoped_numeral_buffer","destructor"
"_scoped_numeral_buffer","commander boundary","reset","command"
"_scoped_numeral_buffer","commander boundary","m","get collaborator"
"_scoped_numeral_buffer","commander boundary","push_back","command collaborator"
"_scoped_numeral_buffer","commander boundary","shrink","command"
"_scoped_numeral_buffer","commander boundary","resize","command collaborator"
"eval_cmd","commander boundary","eval_cmd","constructor"
"eval_cmd","commander boundary","get_usage","incidental"
"eval_cmd","commander boundary","get_main_descr","incidental"
"eval_cmd","commander boundary","init_pdescrs","controller stateless"
"eval_cmd","commander boundary","prepare","set collaborator"
"eval_cmd","commander boundary","next_arg_kind","property collaborator"
"eval_cmd","commander boundary","set_next_arg","set collaborator"
"eval_cmd","commander boundary","execute","command collaborator"
"arith_degree_probe","controller small-class","operator()","property controller"
"echo_tactic","commander boundary small-class","echo_tactic","constructor"
"echo_tactic","commander boundary small-class","operator()","command collaborator"
"clause","unclassified","clause","constructor"
"clause","unclassified","set_seqno","set"
"clause","unclassified","get_seqno","get"
"clause","unclassified","get_next_rule","get"
"clause","unclassified","inc_next_rule","set"
"clause","unclassified","get_predicate_index","get"
"clause","unclassified","set_predicate_index","set"
"clause","unclassified","get_num_predicates","unclassified"
"clause","unclassified","get_predicate","get collaborator"
"clause","unclassified","get_constraint","get collaborator"
"clause","unclassified","get_num_vars","get"
"clause","unclassified","get_index","get"
"clause","unclassified","set_index","set"
"clause","unclassified","get_head","get collaborator"
"clause","unclassified","get_decl","property collaborator"
"clause","unclassified","set_head","set collaborator"
"clause","unclassified","get_parent_index","get"
"clause","unclassified","get_parent_rule","get"
"clause","unclassified","set_parent","command"
"clause","unclassified","get_body","property collaborator"
"clause","unclassified","get_free_vars","collaborator"
"clause","unclassified","to_formula","property collaborator"
"clause","unclassified","init","command collaborator"
"clause","unclassified","init","command collaborator"
"clause","unclassified","inc_ref","set"
"clause","unclassified","dec_ref","set"
"clause","unclassified","display","collaborator"
"clause","unclassified","get_manager","property collaborator"
"clause","unclassified","init_from_rule","command collaborator"
"clause","unclassified","reduce_equalities","command"
"clause","unclassified","get_subst","predicate non-void-command collaborator"
"clause","unclassified","can_be_substituted","wrapper stateless"
"clause","unclassified","get_size","property wrapper"
"clause","unclassified","size","get"
"clause","unclassified","id","get"
"clause","unclassified","operator[]","get wrapper"
"clause","unclassified","operator[]","get wrapper"
"clause","unclassified","is_learned","get"
"clause","unclassified","begin","get collaborator"
"clause","unclassified","end","property collaborator"
"clause","unclassified","begin","get collaborator"
"clause","unclassified","end","property collaborator"
"clause","unclassified","data","get collaborator"
"clause","unclassified","set_active","set"
"clause","unclassified","is_active","get"
"clause","unclassified","set_removed","set"
"clause","unclassified","is_removed","get"
"clause","unclassified","var_hash","get"
"clause","unclassified","set_var_hash","set"
"clause","unclassified","is_marked","get"
"clause","unclassified","mark","set"
"clause","unclassified","unmark","set"
"clause","unclassified","shrink","set"
"clause","unclassified","assumptions","get collaborator"
"clause","unclassified","get_size","property wrapper"
"clause","unclassified","id","get"
"clause","unclassified","size","get"
"clause","unclassified","capacity","get"
"clause","unclassified","operator[]","get wrapper"
"clause","unclassified","operator[]","get wrapper"
"clause","unclassified","is_learned","get"
"clause","unclassified","set_learned","set"
"clause","unclassified","strengthened","get"
"clause","unclassified","mark_strengthened","set"
"clause","unclassified","unmark_strengthened","set"
"clause","unclassified","was_removed","get"
"clause","unclassified","set_removed","set"
"clause","unclassified","approx","get collaborator"
"clause","unclassified","begin","get collaborator"
"clause","unclassified","end","property collaborator"
"clause","unclassified","begin","get collaborator"
"clause","unclassified","end","property collaborator"
"clause","unclassified","mark_used","set"
"clause","unclassified","unmark_used","set"
"clause","unclassified","was_used","get"
"clause","unclassified","inc_inact_rounds","set"
"clause","unclassified","reset_inact_rounds","set"
"clause","unclassified","inact_rounds","get"
"clause","unclassified","frozen","get"
"clause","unclassified","freeze","command"
"clause","unclassified","unfreeze","command"
"clause","unclassified","set_glue","set"
"clause","unclassified","glue","get"
"clause","unclassified","set_psm","set"
"clause","unclassified","psm","get"
"clause","unclassified","on_reinit_stack","get"
"clause","unclassified","set_reinit_stack","set"
"clause","unclassified","clause","constructor"
"clause","unclassified","operator[]","get collaborator"
"clause","unclassified","operator[]","get collaborator"
"clause","unclassified","size","unclassified"
"clause","unclassified","num_decls","unclassified"
"clause","unclassified","index","get"
"clause","unclassified","q","get collaborator"
"clause","unclassified","get_activity_addr","unclassified"
"clause","unclassified","get_activity_addr","unclassified"
"clause","unclassified","get_del_eh_addr","property collaborator"
"clause","unclassified","get_justification_addr","property collaborator"
"clause","unclassified","get_atoms_addr","property collaborator"
"clause","unclassified","swap_lits","wrapper"
"clause","unclassified","is_watch","get collaborator"
"clause","unclassified","set_literal","set collaborator"
"clause","unclassified","set_num_literals","set"
"clause","unclassified","set_justification","command collaborator"
"clause","unclassified","get_kind","property collaborator"
"clause","unclassified","is_lemma","predicate"
"clause","unclassified","is_learned","predicate"
"clause","unclassified","is_th_lemma","predicate"
"clause","unclassified","in_reinit_stack","get"
"clause","unclassified","reinternalize_atoms","get"
"clause","unclassified","get_num_literals","get"
"clause","unclassified","operator[]","get wrapper"
"clause","unclassified","operator[]","get wrapper"
"clause","unclassified","get_literal","get collaborator"
"clause","unclassified","get_literal","get collaborator"
"clause","unclassified","begin","get collaborator"
"clause","unclassified","end","property collaborator"
"clause","unclassified","begin","get collaborator"
"clause","unclassified","end","property collaborator"
"clause","unclassified","get_activity","unclassified"
"clause","unclassified","set_activity","command"
"clause","unclassified","get_del_eh","property collaborator"
"clause","unclassified","get_justification","property collaborator"
"clause","unclassified","get_num_atoms","unclassified"
"clause","unclassified","get_atom","property collaborator"
"clause","unclassified","get_atom_sign","predicate"
"clause","unclassified","inc_clause_activity","command"
"clause","unclassified","hash","wrapper"
"clause","unclassified","mark_as_deleted","command collaborator"
"clause","unclassified","deleted","get"
"clause","unclassified","eliminate_predicates::clause::display","controller stateless"
"clause","unclassified","context_t<C>::clause::display","command collaborator"
"clause","unclassified","clause::clause","constructor"
"clause","unclassified","clause::contains","predicate collaborator"
"clause","unclassified","clause::contains","predicate wrapper"
"clause","unclassified","clause::clause","constructor"
"clause","unclassified","clause::approx","controller stateless"
"clause","unclassified","clause::update_approx","set"
"clause","unclassified","clause::check_approx","predicate collaborator"
"clause","unclassified","clause::contains","predicate collaborator"
"clause","unclassified","clause::contains","predicate controller"
"clause","unclassified","clause::elim","command collaborator"
"clause","unclassified","clause::shrink","set"
"clause","unclassified","clause::restore","set"
"clause","unclassified","clause::satisfied_by","predicate controller"
"clause","unclassified","clause::get_new_offset","property collaborator"
"clause","unclassified","clause::set_new_offset","command collaborator"
"clause","unclassified","clause::display","property controller"
"clause","unclassified","clause::mk","non-void-command factory collaborator"
"clause","unclassified","clause::deallocate","command collaborator"
"clause","unclassified","clause::release_atoms","command collaborator"
"clause","unclassified","clause::display","property wrapper"
"clause","unclassified","clause::display_compact","property collaborator"
"clause","unclassified","clause::display_smt2","property controller"
"opt_wrapper","empty","opt_wrapper","constructor"
"builtin_decl","empty","builtin_decl","constructor"
"builtin_decl","empty","builtin_decl","copy-constructor"
"stream_ref","unclassified","stream_ref","constructor"
"stream_ref","unclassified","~stream_ref","destructor"
"stream_ref","unclassified","operator*","get collaborator"
"stream_ref","unclassified","name","property"
"stream_ref","unclassified","stream_ref::set","command collaborator"
"stream_ref","unclassified","stream_ref::set","command"
"stream_ref","unclassified","stream_ref::reset","command"
"value_factory","data-provider boundary data-class small-class","get_family_id","get collaborator"
"value_factory","data-provider boundary data-class small-class","value_factory::value_factory","constructor"
"value_factory","data-provider boundary data-class small-class","value_factory::~value_factory","destructor"
"Z3_goal_ref","empty","Z3_goal_ref","constructor"
"context_wrapper","entity commander boundary","context_wrapper","constructor"
"context_wrapper","entity commander boundary","num_vars","unclassified"
"context_wrapper","entity commander boundary","mk_var","property non-void-command collaborator"
"context_wrapper","entity commander boundary","is_int","predicate collaborator"
"context_wrapper","entity commander boundary","mk_monomial","property non-void-command collaborator"
"context_wrapper","entity commander boundary","inc_ref","command collaborator"
"context_wrapper","entity commander boundary","dec_ref","command collaborator"
"context_wrapper","entity commander boundary","add_clause","command collaborator"
"context_wrapper","entity commander boundary","display_constraints","unclassified"
"context_wrapper","entity commander boundary","set_display_proc","command collaborator"
"context_wrapper","entity commander boundary","reset_statistics","command"
"context_wrapper","entity commander boundary","collect_statistics","collaborator"
"context_wrapper","entity commander boundary","collect_param_descrs","command collaborator"
"context_wrapper","entity commander boundary","updt_params","command collaborator"
"context_wrapper","entity commander boundary","operator()","wrapper stateless"
"context_wrapper","entity commander boundary","display_bounds","collaborator"
"macro_decl","pure-controller small-class","macro_decl","constructor"
"macro_decl","pure-controller small-class","dec_ref","controller"
"permutation_matrix","unclassified","get_rev","get"
"permutation_matrix","unclassified","operator[]","property wrapper"
"permutation_matrix","unclassified","operator[]","get"
"permutation_matrix","unclassified","set_val","command"
"permutation_matrix","unclassified","apply_reverse","get"
"permutation_matrix","unclassified","get_elem","get wrapper"
"permutation_matrix","unclassified","row_count","unclassified"
"permutation_matrix","unclassified","column_count","unclassified"
"permutation_matrix","unclassified","set_number_of_rows","empty"
"permutation_matrix","unclassified","set_number_of_columns","empty"
"permutation_matrix","unclassified","size","unclassified"
"permutation_matrix","unclassified","resize","command"
"permutation_matrix","unclassified","permutation_matrix<T,X>::permutation_matrix","constructor"
"permutation_matrix","unclassified","permutation_matrix<T,X>::permutation_matrix","constructor"
"permutation_matrix","unclassified","permutation_matrix<T,X>::init","command"
"permutation_matrix","unclassified","permutation_matrix<T,X>::print","collaborator"
"permutation_matrix","unclassified","permutation_matrix<T,X>::transpose_from_left","command collaborator"
"permutation_matrix","unclassified","permutation_matrix<T,X>::transpose_from_right","command collaborator"
"check_relation","entity data-provider boundary","is_precise","predicate"
"check_relation","entity data-provider boundary","get_size_estimate_rows","unclassified"
"check_relation","entity data-provider boundary","rb","get collaborator"
"check_relation","entity data-provider boundary","rb","get collaborator"
"check_relation","entity data-provider boundary","check_relation::check_relation","copy-constructor"
"check_relation","entity data-provider boundary","check_relation::~check_relation","destructor"
"check_relation","entity data-provider boundary","check_relation::check_equiv","collaborator"
"check_relation","entity data-provider boundary","check_relation::consistent_formula","command collaborator"
"check_relation","entity data-provider boundary","check_relation::mk_eq","property collaborator"
"check_relation","entity data-provider boundary","check_relation::ground","property collaborator"
"check_relation","entity data-provider boundary","check_relation::add_fact","command collaborator"
"check_relation","entity data-provider boundary","check_relation::add_new_fact","command collaborator"
"check_relation","entity data-provider boundary","check_relation::empty","predicate"
"check_relation","entity data-provider boundary","check_relation::fast_empty","predicate"
"check_relation","entity data-provider boundary","check_relation::reset","command"
"check_relation","entity data-provider boundary","check_relation::contains_fact","predicate collaborator"
"check_relation","entity data-provider boundary","check_relation::clone","property"
"check_relation","entity data-provider boundary","check_relation::complement","property collaborator"
"check_relation","entity data-provider boundary","check_relation::to_formula","void-accessor collaborator"
"check_relation","entity data-provider boundary","check_relation::get_plugin","property collaborator"
"check_relation","entity data-provider boundary","check_relation::display","collaborator"
"check_relation_plugin::filter_interpreted_fn","pure-controller small-class","operator()","controller"
"is_qfnia_probe","boundary degenerate small-class","operator()","wrapper stateless"
"get_option_cmd","boundary degenerate","get_option_cmd","constructor"
"get_option_cmd","boundary degenerate","get_usage","incidental"
"get_option_cmd","boundary degenerate","get_descr","collaborator incidental"
"get_option_cmd","boundary degenerate","get_arity","incidental"
"get_option_cmd","boundary degenerate","next_arg_kind","collaborator incidental"
"get_option_cmd","boundary degenerate","set_next_arg","controller"
"lia2card_tactic","boundary","~lia2card_tactic","destructor"
"lia2card_tactic","boundary","name","incidental"
"lia2card_tactic","boundary","updt_params","command collaborator"
"lia2card_tactic","boundary","mk_bounded","property non-void-command collaborator"
"lia2card_tactic","boundary","checkpoint","command"
"lia2card_tactic","boundary","operator()","command collaborator"
"lia2card_tactic","boundary","mk_le","property non-void-command collaborator"
"lia2card_tactic","boundary","mk_eq","property non-void-command collaborator"
"lia2card_tactic","boundary","mk_ge","property non-void-command collaborator"
"lia2card_tactic","boundary","get_pb_sum","predicate non-void-command collaborator"
"lia2card_tactic","boundary","get_sum","predicate non-void-command collaborator"
"lia2card_tactic","boundary","add_conds","property non-void-command collaborator"
"lia2card_tactic","boundary","is_numeral","predicate non-void-command collaborator"
"lia2card_tactic","boundary","insert_arg","void-accessor command collaborator"
"lia2card_tactic","boundary","translate","property wrapper"
"lia2card_tactic","boundary","collect_param_descrs","controller stateless"
"lia2card_tactic","boundary","cleanup","command collaborator"
"lt_cmd","boundary degenerate","lt_cmd","constructor"
"lt_cmd","boundary degenerate","get_usage","incidental"
"lt_cmd","boundary degenerate","get_descr","collaborator incidental"
"lt_cmd","boundary degenerate","get_arity","incidental"
"lt_cmd","boundary degenerate","prepare","set collaborator"
"lt_cmd","boundary degenerate","next_arg_kind","collaborator incidental"
"lt_cmd","boundary degenerate","set_next_arg","command collaborator"
"lt_cmd","boundary degenerate","execute","controller"
"set_get_option_cmd","data-provider boundary small-class","is_builtin_option","predicate collaborator"
"set_get_option_cmd","data-provider boundary small-class","set_get_option_cmd","constructor"
"collect_array_proc","commander degenerate","collect_array_proc","constructor"
"collect_array_proc","commander degenerate","operator()","command collaborator"
"collect_array_proc","commander degenerate","operator()","empty"
"collect_array_proc","commander degenerate","operator()","empty"
"bv_value_generator","entity boundary small-class","bv_value_generator","constructor"
"bv_value_generator","entity boundary small-class","get_fid","property collaborator"
"bv_value_generator","entity boundary small-class","get_value","property non-void-command collaborator"
"seq_value_generator","entity boundary small-class","seq_value_generator","constructor"
"seq_value_generator","entity boundary small-class","get_fid","property collaborator"
"seq_value_generator","entity boundary small-class","get_value","property non-void-command collaborator"
"arith_value_generator","unclassified","u2i","incidental"
"arith_value_generator","unclassified","calkin_wilf","incidental"
"arith_value_generator","unclassified","arith_value_generator","constructor"
"arith_value_generator","unclassified","get_fid","property collaborator"
"arith_value_generator","unclassified","get_value","property non-void-command collaborator"
"theory_dl","boundary","m","property non-void-command collaborator"
"theory_dl","boundary","u","get collaborator"
"theory_dl","boundary","b","get collaborator"
"theory_dl","boundary","get_name","incidental"
"theory_dl","boundary","internalize_atom","predicate non-void-command collaborator"
"theory_dl","boundary","internalize_term","predicate non-void-command collaborator"
"theory_dl","boundary","new_eq_eh","empty"
"theory_dl","boundary","new_diseq_eh","empty"
"theory_dl","boundary","mk_fresh","wrapper stateless"
"theory_dl","boundary","init_model","controller"
"theory_dl","boundary","mk_value","property wrapper"
"theory_dl","boundary","apply_sort_cnstr","command collaborator"
"theory_dl","boundary","relevant_eh","command collaborator"
"theory_dl","boundary","display","empty"
"theory_dl","boundary","get_rep","void-accessor command collaborator"
"theory_dl","boundary","mk_rep","predicate non-void-command collaborator"
"theory_dl","boundary","mk_bv_constant","property non-void-command collaborator"
"theory_dl","boundary","max_value","property non-void-command collaborator"
"theory_dl","boundary","mk_lt","command collaborator"
"theory_dl","boundary","assert_cnstr","command collaborator"
"theory_dl","boundary","add_trail","command collaborator"
"var_offset_map","unclassified","reset","command collaborator"
"var_offset_map","unclassified","offsets_capacity","get"
"var_offset_map","unclassified","vars_capacity","get"
"var_offset_map","unclassified","reserve","command"
"var_offset_map","unclassified","reserve_offsets","command"
"var_offset_map","unclassified","reserve_vars","command"
"var_offset_map","unclassified","insert","command collaborator"
"var_offset_map","unclassified","insert","command collaborator"
"var_offset_map","unclassified","find","predicate wrapper"
"var_offset_map","unclassified","find","predicate collaborator"
"var_offset_map","unclassified","erase","set"
"defined_names::impl","data-provider small-class","get_num_names","unclassified"
"defined_names::impl","data-provider small-class","get_name_decl","property collaborator"
"poly_nf","data-provider boundary","poly_nf","constructor"
"poly_nf","data-provider boundary","coefficient","get collaborator"
"poly_nf","data-provider boundary","coefficients","get collaborator"
"poly_nf","data-provider boundary","factors","get collaborator"
"poly_nf","data-provider boundary","reset","command"
"unifier","boundary","unifier","constructor"
"unifier","boundary","unifier","constructor"
"unifier","boundary","operator()","predicate non-void-command collaborator"
"unifier","boundary","get_rule_subst","get collaborator"
"unifier","boundary","unify","predicate non-void-command collaborator"
"unifier","boundary","reset","command"
"unifier","boundary","extract_subst","command"
"unifier","boundary","insert_subst","controller stateless"
"unifier","boundary","unifier::reset","command"
"unifier","boundary","unifier::find","property non-void-command collaborator"
"unifier","boundary","unifier::save_var","command collaborator"
"unifier","boundary","unifier::union1","command collaborator"
"unifier","boundary","unifier::union2","command collaborator"
"unifier","boundary","unifier::unify_core","predicate non-void-command collaborator"
"unifier","boundary","unifier::operator()","get non-void-command"
"unifier","boundary","unifier::operator()","predicate non-void-command collaborator"
"st_visitor","data-provider boundary lazy-class small-class","st_visitor","constructor"
"st_visitor","data-provider boundary lazy-class small-class","get_substitution","get collaborator"
"st_visitor","data-provider boundary lazy-class small-class","operator()","collaborator incidental"
"bmc::linear","entity boundary","check","property non-void-command collaborator"
"bmc::linear","entity boundary","get_model","command collaborator"
"bmc::linear","entity boundary","setup","command collaborator"
"bmc::linear","entity boundary","check","property non-void-command collaborator"
"bmc::linear","entity boundary","mk_level_predicate","property non-void-command collaborator"
"bmc::linear","entity boundary","mk_level_predicate","property non-void-command collaborator"
"bmc::linear","entity boundary","mk_level_arg","property non-void-command collaborator"
"bmc::linear","entity boundary","mk_level_var","property non-void-command collaborator"
"bmc::linear","entity boundary","mk_level_rule","property non-void-command collaborator"
"bmc::linear","entity boundary","mk_rule_vars","void-accessor command collaborator"
"bmc::linear","entity boundary","compile","command"
"bv_plugin","boundary","is_concat","predicate collaborator"
"bv_plugin","boundary","is_concat","predicate non-void-command collaborator"
"bv_plugin","boundary","is_extract","predicate non-void-command collaborator"
"bv_plugin","boundary","is_extract","predicate collaborator"
"bv_plugin","boundary","width","collaborator"
"bv_plugin","boundary","width","non-void-command collaborator"
"bv_plugin","boundary","is_value","controller stateless"
"bv_plugin","boundary","get_value","property non-void-command collaborator"
"bv_plugin","boundary","info","get non-void-command collaborator"
"bv_plugin","boundary","has_sub","predicate non-void-command collaborator"
"bv_plugin","boundary","sub_lo","property non-void-command collaborator"
"bv_plugin","boundary","sub_hi","property non-void-command collaborator"
"bv_plugin","boundary","~bv_plugin","destructor"
"bv_plugin","boundary","get_id","property collaborator"
"bv_plugin","boundary","diseq_eh","empty"
"bv_plugin","boundary","set_ensure_th_var","set collaborator"
"bv_plugin","boundary","bv_plugin","constructor"
"bv_plugin","boundary","assign","empty"
"bv_plugin","boundary","get_num_branches","predicate non-void-command collaborator"
"bv_plugin","boundary","subst","void-accessor command collaborator"
"bv_plugin","boundary","project","predicate non-void-command collaborator"
"bv_plugin","boundary","get_weight","collaborator incidental"
"bv_plugin","boundary","solve","collaborator incidental"
"bv_plugin","boundary","is_uninterpreted","controller stateless"
"bv_plugin","boundary","bv_plugin","constructor"
"bv_plugin","boundary","check_term","empty"
"bv_plugin","boundary","term_covered","predicate non-void-command collaborator"
"bv_plugin","boundary","sort_covered","predicate non-void-command collaborator"
"bv_plugin","boundary","max_rounds","incidental"
"bv_plugin","boundary","populate_model","empty"
"bv_plugin","boundary","model_value_core","property non-void-command collaborator"
"bv_plugin","boundary","model_value_core","property non-void-command collaborator"
"bv_plugin","boundary","bv_plugin::bv_plugin","constructor"
"bv_plugin","boundary","bv_plugin::mk_value_concat","property non-void-command collaborator"
"bv_plugin","boundary","bv_plugin::mk_value","property non-void-command collaborator"
"bv_plugin","boundary","bv_plugin::propagate_merge","command collaborator"
"bv_plugin","boundary","bv_plugin::register_node","command collaborator"
"bv_plugin","boundary","bv_plugin::merge_eh","command collaborator"
"bv_plugin","boundary","bv_plugin::propagate","command collaborator"
"bv_plugin","boundary","bv_plugin::propagate_values","command collaborator"
"bv_plugin","boundary","bv_plugin::propagate_extract","command collaborator"
"bv_plugin","boundary","bv_plugin::push_undo_split","command collaborator"
"bv_plugin","boundary","bv_plugin::undo","command"
"bv_plugin","boundary","bv_plugin::propagate_register_node","command collaborator"
"bv_plugin","boundary","bv_plugin::mk_extract","property non-void-command collaborator"
"bv_plugin","boundary","bv_plugin::mk_concat","property non-void-command collaborator"
"bv_plugin","boundary","bv_plugin::merge","command collaborator"
"bv_plugin","boundary","bv_plugin::unfold_sub","predicate non-void-command collaborator"
"bv_plugin","boundary","bv_plugin::unfold_width","predicate non-void-command collaborator"
"bv_plugin","boundary","bv_plugin::split","command collaborator"
"bv_plugin","boundary","bv_plugin::sub_slices","command collaborator"
"bv_plugin","boundary","bv_plugin::super_slices","command collaborator"
"bv_plugin","boundary","bv_plugin::explain_slice","command collaborator"
"bv_plugin","boundary","bv_plugin::clear_offsets","command"
"bv_plugin","boundary","bv_plugin::display","property collaborator"
"push_back_trail","commander small-class","push_back_trail","constructor"
"push_back_trail","commander small-class","undo","command"
"rc_decimal_pp","empty","rc_decimal_pp","constructor"
"rc_decimal_pp","empty","rc_decimal_pp","constructor"
"match_args_aux_proc","commander boundary degenerate","operator()","command collaborator"
"match_args_aux_proc","commander boundary degenerate","operator()","wrapper stateless"
"match_args_aux_proc","commander boundary degenerate","operator()","empty"
"binspr","commander boundary","init_g","set"
"binspr","commander boundary","g_is_sat","predicate"
"binspr","commander boundary","updt_params","empty"
"binspr","commander boundary","collect_statistics","empty"
"binspr","commander boundary","binspr::operator()","command collaborator"
"binspr","commander boundary","binspr::algorithm2","command collaborator"
"binspr","commander boundary","binspr::is_used","predicate collaborator"
"binspr","commander boundary","binspr::check_spr","predicate non-void-command collaborator"
"binspr","commander boundary","binspr::binary_are_unit_implied","command collaborator"
"binspr","commander boundary","binspr::clauses_are_unit_implied","command collaborator"
"binspr","commander boundary","binspr::clause_is_unit_implied","command collaborator"
"binspr","commander boundary","binspr::block_binary","set"
"binspr","commander boundary","binspr::g_add_unit","set collaborator"
"binspr","commander boundary","binspr::g_add_binary","set"
"binspr","commander boundary","binspr::mk_mask","incidental"
"binspr","commander boundary","binspr::mk_masks","command"
"binspr","commander boundary","binspr::add_touched","set"
"binspr","commander boundary","binspr::init_g","command collaborator"
"binspr","commander boundary","binspr::clear_alpha","command"
"binspr","commander boundary","binspr::touch","predicate non-void-command collaborator"
"binspr","commander boundary","binspr::display_mask","property collaborator"
"simple_macro_solver","entity boundary","simple_macro_solver","constructor"
"simple_macro_solver","entity boundary","simple_macro_solver::contains","predicate non-void-command collaborator"
"simple_macro_solver","entity boundary","simple_macro_solver::process","predicate non-void-command collaborator"
"simple_macro_solver","entity boundary","simple_macro_solver::process","predicate non-void-command collaborator"
"demodulator_rewriter::add_back_idx_proc","commander degenerate","operator()","empty"
"demodulator_rewriter::add_back_idx_proc","commander degenerate","operator()","empty"
"demodulator_rewriter::add_back_idx_proc","commander degenerate","operator()","command collaborator"
"nex","data-provider boundary degenerate","size","incidental"
"nex","data-provider boundary degenerate","is_elementary","wrapper stateless"
"nex","data-provider boundary degenerate","number_of_child_powers","incidental"
"nex","data-provider boundary degenerate","get_child_exp","get"
"nex","data-provider boundary degenerate","get_child_pow","incidental"
"nex","data-provider boundary degenerate","all_factors_are_elementary","incidental"
"nex","data-provider boundary degenerate","is_sum","wrapper stateless"
"nex","data-provider boundary degenerate","is_mul","wrapper stateless"
"nex","data-provider boundary degenerate","is_var","wrapper stateless"
"nex","data-provider boundary degenerate","is_scalar","wrapper stateless"
"nex","data-provider boundary degenerate","is_pure_monomial","incidental"
"nex","data-provider boundary degenerate","str","controller stateless"
"nex","data-provider boundary degenerate","contains","collaborator incidental"
"nex","data-provider boundary degenerate","coeff","wrapper stateless"
"nex","data-provider boundary degenerate","sort","empty"
"nex","data-provider boundary degenerate","nex::to_sum","property non-void-command collaborator"
"nex","data-provider boundary degenerate","nex::to_sum","property collaborator"
"nex","data-provider boundary degenerate","nex::to_var","property non-void-command collaborator"
"nex","data-provider boundary degenerate","nex::to_var","property collaborator"
"nex","data-provider boundary degenerate","nex::to_mul","property non-void-command collaborator"
"nex","data-provider boundary degenerate","nex::to_mul","property collaborator"
"nex","data-provider boundary degenerate","nex::to_scalar","property non-void-command collaborator"
"nex","data-provider boundary degenerate","nex::to_scalar","property collaborator"
"no_drat_params","empty","no_drat_params","constructor"
"max_var_id_proc","lazy-class","max_var_id_proc","constructor"
"max_var_id_proc","lazy-class","operator()","set collaborator"
"max_var_id_proc","lazy-class","operator()","empty"
"max_var_id_proc","lazy-class","operator()","empty"
"max_var_id_proc","lazy-class","get_max","get"
"assignment","entity boundary","assignment","constructor"
"assignment","entity boundary","am","property collaborator"
"assignment","entity boundary","swap","command"
"assignment","entity boundary","copy","command"
"assignment","entity boundary","set_core","command collaborator"
"assignment","entity boundary","set","command collaborator"
"assignment","entity boundary","reset","set collaborator"
"assignment","entity boundary","reset","command"
"assignment","entity boundary","is_assigned","predicate collaborator"
"assignment","entity boundary","value","get collaborator"
"assignment","entity boundary","m","property collaborator"
"assignment","entity boundary","contains","predicate collaborator"
"assignment","entity boundary","operator()","property collaborator"
"assignment","entity boundary","swap","command collaborator"
"assignment","entity boundary","display","collaborator"
"nex_pow","data-provider boundary","ee","property collaborator"
"nex_pow","data-provider boundary","e","property collaborator"
"nex_pow","data-provider boundary","pow","get"
"nex_pow","data-provider boundary","print","property collaborator"
"nex_pow","data-provider boundary","to_string","property collaborator"
"nex_pow","data-provider boundary","operator<<","controller stateless"
"ast_eq_proc","pure-controller degenerate small-class","operator()","controller stateless"
"var_set_proc","commander degenerate","var_set_proc","constructor"
"var_set_proc","commander degenerate","operator()","command collaborator"
"var_set_proc","commander degenerate","operator()","empty"
"var_set_proc","commander degenerate","operator()","empty"
"anum","boundary","anum","constructor"
"anum","boundary","anum","constructor"
"anum","boundary","anum","constructor"
"anum","boundary","is_basic","predicate wrapper"
"anum","boundary","to_basic","property collaborator"
"anum","boundary","to_algebraic","property collaborator"
"anum","boundary","is_null","predicate"
"anum","boundary","clear","set"
"anum","boundary","swap","wrapper"
"anum","boundary","operator=","get set collaborator"
"anum","boundary","operator=","get set collaborator"
"static_features","boundary","is_marked_pre","predicate collaborator"
"static_features","boundary","mark_pre","command collaborator"
"static_features","boundary","is_marked_post","predicate collaborator"
"static_features","boundary","mark_post","command collaborator"
"static_features","boundary","is_bool","predicate collaborator"
"static_features","boundary","is_basic_expr","predicate wrapper"
"static_features","boundary","is_arith_expr","predicate wrapper"
"static_features","boundary","is_numeral","predicate collaborator"
"static_features","boundary","is_numeral","predicate collaborator"
"static_features","boundary","is_minus_one","predicate collaborator"
"static_features","boundary","mark_theory","command collaborator"
"static_features","boundary","acc_num","set collaborator"
"static_features","boundary","acc_num","command collaborator"
"static_features","boundary","arith_k_sum_is_small","predicate wrapper"
"static_features","boundary","inc_num_apps","set collaborator"
"static_features","boundary","inc_theory_terms","set collaborator"
"static_features","boundary","inc_theory_atoms","set collaborator"
"static_features","boundary","inc_theory_constants","set collaborator"
"static_features","boundary","inc_theory_eqs","set collaborator"
"static_features","boundary","inc_num_aliens","set collaborator"
"static_features","boundary","add_process","command"
"static_features","boundary","get_depth","controller stateless"
"static_features","boundary","set_depth","controller stateless"
"static_features","boundary","get_ite_depth","controller stateless"
"static_features","boundary","set_ite_depth","controller stateless"
"static_features","boundary","collect","command collaborator"
"static_features","boundary","static_features::static_features","constructor"
"static_features","boundary","static_features::reset","command"
"static_features","boundary","static_features::flush_cache","controller stateless"
"static_features","boundary","static_features::is_diff_term","predicate collaborator"
"static_features","boundary","static_features::is_diff_atom","predicate collaborator"
"static_features","boundary","static_features::is_gate","predicate collaborator"
"static_features","boundary","static_features::update_core","command collaborator"
"static_features","boundary","static_features::check_array","command collaborator"
"static_features","boundary","static_features::update_core","command collaborator"
"static_features","boundary","static_features::pre_process","predicate non-void-command collaborator"
"static_features","boundary","static_features::post_process","command collaborator"
"static_features","boundary","static_features::new_ctx","property non-void-command collaborator"
"static_features","boundary","static_features::process_all","command"
"static_features","boundary","static_features::process_root","command collaborator"
"static_features","boundary","static_features::collect","command collaborator"
"static_features","boundary","static_features::internal_family","predicate collaborator"
"static_features","boundary","static_features::display_family_data","collaborator"
"static_features","boundary","static_features::has_uf","predicate"
"static_features","boundary","static_features::num_non_uf_theories","get"
"static_features","boundary","static_features::num_theories","unclassified"
"static_features","boundary","static_features::display_primitive","collaborator"
"static_features","boundary","static_features::display","collaborator"
"static_features","boundary","static_features::get_feature_vector","empty"
"static_features","boundary","static_features::is_dense","predicate"
"incremental_vector","unclassified","operator[]","get collaborator"
"incremental_vector","unclassified","size","unclassified"
"incremental_vector","unclassified","push_scope","command"
"incremental_vector","unclassified","pop_scope","command"
"incremental_vector","unclassified","pop_tail","controller stateless"
"incremental_vector","unclassified","resize","controller stateless"
"incremental_vector","unclassified","pop_scope","command"
"incremental_vector","unclassified","push_back","command collaborator"
"incremental_vector","unclassified","peek_size","get"
"bound_manager","entity boundary","m","property collaborator"
"bound_manager","entity boundary","has_lower","predicate collaborator"
"bound_manager","entity boundary","has_upper","predicate collaborator"
"bound_manager","entity boundary","lower_dep","property collaborator"
"bound_manager","entity boundary","upper_dep","property collaborator"
"bound_manager","entity boundary","has_lower","predicate collaborator"
"bound_manager","entity boundary","has_upper","predicate collaborator"
"bound_manager","entity boundary","begin","property collaborator"
"bound_manager","entity boundary","end","property collaborator"
"bound_manager","entity boundary","bound_manager::bound_manager","constructor"
"bound_manager","entity boundary","bound_manager::~bound_manager","destructor"
"bound_manager","entity boundary","bound_manager::translate","property non-void-command collaborator"
"bound_manager","entity boundary","bound_manager::neg","wrapper stateless"
"bound_manager","entity boundary","bound_manager::norm","collaborator incidental"
"bound_manager","entity boundary","bound_manager::is_numeral","predicate non-void-command collaborator"
"bound_manager","entity boundary","bound_manager::operator()","command collaborator"
"bound_manager","entity boundary","bound_manager::insert_upper","command collaborator"
"bound_manager","entity boundary","bound_manager::insert_lower","command collaborator"
"bound_manager","entity boundary","bound_manager::is_equality_bound","predicate non-void-command collaborator"
"bound_manager","entity boundary","bound_manager::is_disjunctive_bound","predicate non-void-command collaborator"
"bound_manager","entity boundary","bound_manager::reset","command"
"bound_manager","entity boundary","bound_manager::inconsistent","predicate collaborator"
"bound_manager","entity boundary","bound_manager::display","collaborator"
"special_relations_util","data-provider boundary","mk_rel_decl","property non-void-command collaborator"
"special_relations_util","data-provider boundary","fid","get set collaborator"
"special_relations_util","data-provider boundary","special_relations_util","constructor"
"special_relations_util","data-provider boundary","get_family_id","property collaborator"
"special_relations_util","data-provider boundary","has_special_relation","predicate"
"special_relations_util","data-provider boundary","is_special_relation","predicate collaborator"
"special_relations_util","data-provider boundary","is_special_relation","predicate collaborator"
"special_relations_util","data-provider boundary","get_property","property collaborator"
"special_relations_util","data-provider boundary","get_relation","property collaborator"
"special_relations_util","data-provider boundary","get_relation","property collaborator"
"special_relations_util","data-provider boundary","mk_to_decl","property non-void-command collaborator"
"special_relations_util","data-provider boundary","mk_po_decl","property non-void-command collaborator"
"special_relations_util","data-provider boundary","mk_plo_decl","property non-void-command collaborator"
"special_relations_util","data-provider boundary","mk_lo_decl","property non-void-command collaborator"
"special_relations_util","data-provider boundary","mk_tc_decl","property non-void-command collaborator"
"special_relations_util","data-provider boundary","is_lo","predicate collaborator"
"special_relations_util","data-provider boundary","is_po","predicate collaborator"
"special_relations_util","data-provider boundary","is_plo","predicate collaborator"
"special_relations_util","data-provider boundary","is_to","predicate collaborator"
"special_relations_util","data-provider boundary","is_tc","predicate collaborator"
"special_relations_util","data-provider boundary","is_ac","predicate collaborator"
"special_relations_util","data-provider boundary","is_lo","predicate collaborator"
"special_relations_util","data-provider boundary","is_po","predicate collaborator"
"special_relations_util","data-provider boundary","is_plo","predicate collaborator"
"special_relations_util","data-provider boundary","is_to","predicate collaborator"
"special_relations_util","data-provider boundary","is_tc","predicate collaborator"
"special_relations_util","data-provider boundary","is_ac","predicate collaborator"
"special_relations_util","data-provider boundary","mk_lo","property non-void-command collaborator"
"special_relations_util","data-provider boundary","mk_po","property non-void-command collaborator"
"special_relations_util","data-provider boundary","mk_plo","property non-void-command collaborator"
"special_relations_util","data-provider boundary","mk_to","property non-void-command collaborator"
"special_relations_util","data-provider boundary","special_relations_util::get_property","controller stateless"
"pdecl_manager::indexed_sort_info","data-provider boundary","obj_size","incidental"
"pdecl_manager::indexed_sort_info","data-provider boundary","display","collaborator"
"pdecl_manager::indexed_sort_info","data-provider boundary","pp","property collaborator"
"cache","entity boundary","pm","property collaborator"
"cache","entity boundary","cache::cache","constructor"
"cache","entity boundary","cache::~cache","destructor"
"cache","entity boundary","cache::m","property collaborator"
"cache","entity boundary","cache::mk_unique","property non-void-command collaborator"
"cache","entity boundary","cache::psc_chain","command collaborator"
"cache","entity boundary","cache::factor","command collaborator"
"cache","entity boundary","cache::reset","set collaborator"
"powers","small-class","powers","constructor"
"powers","small-class","~powers","destructor"
"powers","small-class","operator()","property non-void-command collaborator"
"powers","small-class","powers","constructor"
"powers","small-class","powers::check","property controller"
"factor_rewriter_star","empty","factor_rewriter_star","constructor"
"sls_fixed","entity boundary","sls_fixed::sls_fixed","constructor"
"sls_fixed","entity boundary","sls_fixed::init","command collaborator"
"sls_fixed","entity boundary","sls_fixed::init_ranges","command collaborator"
"sls_fixed","entity boundary","sls_fixed::propagate_range_up","command collaborator"
"sls_fixed","entity boundary","sls_fixed::init_range","predicate non-void-command collaborator"
"sls_fixed","entity boundary","sls_fixed::init_eq","predicate non-void-command collaborator"
"sls_fixed","entity boundary","sls_fixed::init_range","predicate non-void-command"
"sls_fixed","entity boundary","sls_fixed::add_range","predicate non-void-command collaborator"
"sls_fixed","entity boundary","sls_fixed::get_offset","void-accessor command collaborator"
"sls_fixed","entity boundary","sls_fixed::wval","property non-void-command collaborator"
"sls_fixed","entity boundary","sls_fixed::init_fixed_basic","command collaborator"
"sls_fixed","entity boundary","sls_fixed::init_fixed_bv","command collaborator"
"sls_fixed","entity boundary","sls_fixed::is_fixed1","predicate collaborator"
"sls_fixed","entity boundary","sls_fixed::is_fixed1_basic","predicate collaborator"
"sls_fixed","entity boundary","sls_fixed::set_fixed_bw","command collaborator"
"lt_proc2","boundary degenerate small-class","operator()","wrapper stateless"
"sls","boundary","set_repair_down","set collaborator"
"sls","boundary","assert_expr","command collaborator"
"sls","boundary","init_unit","set collaborator"
"sls","boundary","set_model","set collaborator"
"sls","boundary","collect_statistics","collaborator"
"sls","boundary","reset_statistics","command"
"sls","boundary","get_num_moves","non-void-command"
"sls","boundary","wval","property collaborator"
"sls","boundary","cancel","command"
"sls","boundary","unsat","property non-void-command collaborator"
"sls","boundary","num_clauses","unclassified"
"sls","boundary","get_clause","property non-void-command collaborator"
"sls","boundary","get_clause","property collaborator"
"sls","boundary","get_clause_info","property non-void-command collaborator"
"sls","boundary","get_clause_info","property collaborator"
"sls","boundary","is_true","predicate non-void-command collaborator"
"sls","boundary","sign","predicate collaborator"
"sls","boundary","atom","get collaborator"
"sls","boundary","dtt","property collaborator"
"sls","boundary","value","get collaborator"
"sls","boundary","~sls","destructor"
"sls","boundary","sls::sls","constructor"
"sls","boundary","sls::init","command"
"sls","boundary","sls::init_eval","command collaborator"
"sls","boundary","sls::init_repair","command"
"sls","boundary","sls::set_model","command"
"sls","boundary","sls::init_repair_goal","command collaborator"
"sls","boundary","sls::init_repair_candidates","command collaborator"
"sls","boundary","sls::reinit_eval","command collaborator"
"sls","boundary","sls::next_to_repair","property non-void-command collaborator"
"sls","boundary","sls::search1","property non-void-command collaborator"
"sls","boundary","sls::search2","property non-void-command collaborator"
"sls","boundary","sls::operator()","property non-void-command collaborator"
"sls","boundary","sls::try_repair_down","command collaborator"
"sls","boundary","sls::try_repair_up","command collaborator"
"sls","boundary","sls::get_model","property non-void-command collaborator"
"sls","boundary","sls::display","property non-void-command collaborator"
"sls","boundary","sls::updt_params","command collaborator"
"sls","boundary","sls::trace_repair","property non-void-command collaborator"
"sls","boundary","sls::trace","command"
"sls","boundary","sls::sls","constructor"
"sls","boundary","sls::reset","command"
"sls","boundary","sls::save_best_values","command collaborator"
"sls","boundary","sls::store_best_values","command collaborator"
"sls","boundary","sls::set","command collaborator"
"sls","boundary","sls::dtt","wrapper stateless"
"sls","boundary","sls::dtt","property"
"sls","boundary","sls::dtt","property"
"sls","boundary","sls::cm","predicate non-void-command"
"sls","boundary","sls::cm","predicate non-void-command collaborator"
"sls","boundary","sls::flip","predicate non-void-command collaborator"
"sls","boundary","sls::dscore","property collaborator"
"sls","boundary","sls::cm_score","property non-void-command collaborator"
"sls","boundary","sls::compute_dts","property collaborator"
"sls","boundary","sls::dts","property collaborator"
"sls","boundary","sls::update","command"
"sls","boundary","sls::add_vars","command collaborator"
"sls","boundary","sls::new_ineq","wrapper stateless"
"sls","boundary","sls::add_arg","void-accessor command collaborator"
"sls","boundary","sls::to_numeral","controller stateless"
"sls","boundary","sls::add_args","command collaborator"
"sls","boundary","sls::init_bool_var","command collaborator"
"sls","boundary","sls::init_bool_var_assignment","command collaborator"
"sls","boundary","sls::init_search","command"
"sls","boundary","sls::finish_search","command"
"sls","boundary","sls::flip","command collaborator"
"sls","boundary","sls::reward","property non-void-command collaborator"
"sls","boundary","sls::dtt_reward","property non-void-command collaborator"
"sls","boundary","sls::dscore_reward","property non-void-command collaborator"
"sls","boundary","sls::on_rescale","set"
"sls","boundary","sls::on_save_model","command"
"sls","boundary","sls::on_restart","command"
"sls","boundary","sls::check_ineqs","command"
"sls","boundary","sls::display","property collaborator"
"emonics","boundary","rehash_cg","command collaborator"
"emonics","boundary","number_of_monics","unclassified"
"emonics","boundary","unmerge_eh","incidental"
"emonics","boundary","merge_eh","empty"
"emonics","boundary","after_merge_eh","empty"
"emonics","boundary","get_trail_stack","get collaborator"
"emonics","boundary","add","command collaborator"
"emonics","boundary","add","command collaborator"
"emonics","boundary","add","command collaborator"
"emonics","boundary","operator[]","get collaborator"
"emonics","boundary","operator[]","get collaborator"
"emonics","boundary","rep","get controller"
"emonics","boundary","begin","property collaborator"
"emonics","boundary","end","property collaborator"
"emonics","boundary","get_use_list","property wrapper"
"emonics","boundary","get_products_of","property collaborator"
"emonics","boundary","get_products_of","property collaborator"
"emonics","boundary","is_canonical_monic","predicate collaborator"
"emonics","boundary","enum_sign_equiv_monics","property wrapper"
"emonics","boundary","enum_sign_equiv_monics","property non-void-command collaborator"
"emonics","boundary","is_monic_var","controller stateless"
"emonics","boundary","is_used_in_monic","predicate collaborator"
"emonics","boundary","emonics::inc_visited","set"
"emonics","boundary","emonics::push","command"
"emonics","boundary","emonics::pop_monic","command collaborator"
"emonics","boundary","emonics::pop","command"
"emonics","boundary","emonics::remove_cell","collaborator incidental"
"emonics","boundary","emonics::insert_cell","command collaborator"
"emonics","boundary","emonics::merge_cells","collaborator incidental"
"emonics","boundary","emonics::unmerge_cells","collaborator incidental"
"emonics","boundary","emonics::head","get collaborator"
"emonics","boundary","emonics::find_canonical","property collaborator"
"emonics","boundary","emonics::remove_cg","command collaborator"
"emonics","boundary","emonics::remove_cg_mon","command collaborator"
"emonics","boundary","emonics::insert_cg","command collaborator"
"emonics","boundary","emonics::elists_are_consistent","predicate collaborator"
"emonics","boundary","emonics::insert_cg_mon","command collaborator"
"emonics","boundary","emonics::set_visited","collaborator"
"emonics","boundary","emonics::is_visited","predicate controller"
"emonics","boundary","emonics::add","command collaborator"
"emonics","boundary","emonics::do_canonize","collaborator"
"emonics","boundary","emonics::is_canonized","predicate collaborator"
"emonics","boundary","emonics::ensure_canonized","command"
"emonics","boundary","emonics::monics_are_canonized","predicate"
"emonics","boundary","emonics::canonize_divides","controller stateless"
"emonics","boundary","emonics::merge_eh","empty"
"emonics","boundary","emonics::after_merge_eh","command collaborator"
"emonics","boundary","emonics::unmerge_eh","command collaborator"
"emonics","boundary","emonics::display","property collaborator"
"emonics","boundary","emonics::display","property collaborator"
"emonics","boundary","emonics::display_use","property collaborator"
"emonics","boundary","emonics::display_uf","property collaborator"
"emonics","boundary","emonics::display","collaborator incidental"
"emonics","boundary","emonics::invariant","predicate collaborator"
"emonics","boundary","emonics::set_propagated","command collaborator"
"emonics","boundary","emonics::set_bound_propagated","command collaborator"
"reduce_args_rw","empty","reduce_args_rw","constructor"
"drat","commander boundary","set_clause_eh","set collaborator"
"drat","commander boundary","out","get collaborator"
"drat","commander boundary","verify","command collaborator"
"drat","commander boundary","verify","command collaborator"
"drat","commander boundary","verify","command collaborator"
"drat","commander boundary","contains","predicate non-void-command collaborator"
"drat","commander boundary","contains","predicate non-void-command collaborator"
"drat","commander boundary","contains","predicate non-void-command collaborator"
"drat","commander boundary","inconsistent","get"
"drat","commander boundary","units","get collaborator"
"drat","commander boundary","get_solver","get collaborator"
"drat","commander boundary","drat::drat","constructor"
"drat","commander boundary","drat::~drat","destructor"
"drat","commander boundary","drat::updt_config","command"
"drat","commander boundary","drat::pp","controller stateless"
"drat","commander boundary","drat::dump","command collaborator"
"drat","commander boundary","drat::dump_activity","command"
"drat","commander boundary","drat::bdump","command collaborator"
"drat","commander boundary","drat::is_cleaned","controller stateless"
"drat","commander boundary","drat::trace","command collaborator"
"drat","commander boundary","drat::append","command collaborator"
"drat","commander boundary","drat::append","command collaborator"
"drat","commander boundary","drat::append","command collaborator"
"drat","commander boundary","drat::del_watch","controller"
"drat","commander boundary","drat::declare","command collaborator"
"drat","commander boundary","drat::is_drup","predicate non-void-command collaborator"
"drat","commander boundary","drat::is_drup","predicate non-void-command collaborator"
"drat","commander boundary","drat::is_drat","predicate non-void-command collaborator"
"drat","commander boundary","drat::validate_propagation","unclassified"
"drat","commander boundary","drat::is_drat","predicate non-void-command"
"drat","commander boundary","drat::verify","command collaborator"
"drat","commander boundary","drat::contains","predicate non-void-command collaborator"
"drat","commander boundary","drat::contains","predicate non-void-command collaborator"
"drat","commander boundary","drat::match","controller stateless"
"drat","commander boundary","drat::display","collaborator"
"drat","commander boundary","drat::value","property collaborator"
"drat","commander boundary","drat::assign","command collaborator"
"drat","commander boundary","drat::assign_propagate","command collaborator"
"drat","commander boundary","drat::propagate","command collaborator"
"drat","commander boundary","drat::get_status","property wrapper"
"drat","commander boundary","drat::add","command"
"drat","commander boundary","drat::add","command collaborator"
"drat","commander boundary","drat::add","command collaborator"
"drat","commander boundary","drat::add","command collaborator"
"drat","commander boundary","drat::add","command collaborator"
"drat","commander boundary","drat::add","command collaborator"
"drat","commander boundary","drat::add","command collaborator"
"drat","commander boundary","drat::del","command collaborator"
"drat","commander boundary","drat::del","command collaborator"
"drat","commander boundary","drat::del","command collaborator"
"drat","commander boundary","drat::mk_clause","property non-void-command collaborator"
"drat","commander boundary","drat::mk_clause","property non-void-command collaborator"
"drat","commander boundary","drat::del","command collaborator"
"drat","commander boundary","drat::check_model","empty"
"drat","commander boundary","drat::collect_statistics","controller"
"reduce_args_rw_cfg","entity boundary small-class","reduce_args_rw_cfg","constructor"
"reduce_args_rw_cfg","entity boundary small-class","reduce_app","property non-void-command collaborator"
"arg2func_eq_proc","data-provider boundary small-class","arg2func_eq_proc","constructor"
"arg2func_eq_proc","data-provider boundary small-class","operator()","predicate collaborator"
"scoped_mpf","boundary","significand","property non-void-command collaborator"
"scoped_mpf","boundary","significand","property collaborator"
"scoped_mpf","boundary","sign","predicate"
"scoped_mpf","boundary","exponent","property collaborator"
"scoped_mpf","boundary","sbits","unclassified"
"scoped_mpf","boundary","set","command"
"scoped_mpf","boundary","set","command collaborator"
"scoped_mpf","boundary","set","command collaborator"
"bool_var_act_lt","data-provider boundary data-class small-class","bool_var_act_lt","constructor"
"bool_var_act_lt","data-provider boundary data-class small-class","operator()","get collaborator"
"ng_push_ite_simplifier","commander small-class","ng_push_ite_simplifier","constructor"
"ng_push_ite_simplifier","commander small-class","name","incidental"
"ng_push_ite_simplifier","commander small-class","reduce","command collaborator"
"pull_nested_quantifiers_simplifier","commander degenerate","pull_nested_quantifiers_simplifier","constructor"
"pull_nested_quantifiers_simplifier","commander degenerate","name","incidental"
"pull_nested_quantifiers_simplifier","commander degenerate","reduce","command collaborator"
"pull_nested_quantifiers_simplifier","commander degenerate","supports_proofs","incidental"
"TreeNode","data-provider data-class","TreeNode","copy-constructor"
"TreeNode","data-provider data-class","symbol","get"
"TreeNode","data-provider data-class","children","get"
"TreeNode","data-provider data-class","child","get"
"TreeNode","data-provider data-class","index","get"
"TreeNode","data-provider data-class","set_index","set"
"eq_theory_checker","commander boundary","merge","command collaborator"
"eq_theory_checker","commander boundary","merge_numeral","command collaborator"
"eq_theory_checker","commander boundary","are_equal","predicate non-void-command collaborator"
"eq_theory_checker","commander boundary","congruence","predicate non-void-command collaborator"
"eq_theory_checker","commander boundary","reset","command"
"eq_theory_checker","commander boundary","expr2id","controller stateless"
"model_reconstruction_trail","boundary","add_model_var","command collaborator"
"model_reconstruction_trail","boundary","add_vars","set collaborator"
"model_reconstruction_trail","boundary","add_vars","command collaborator"
"model_reconstruction_trail","boundary","intersects","predicate controller"
"model_reconstruction_trail","boundary","intersects","predicate non-void-command collaborator"
"model_reconstruction_trail","boundary","push","command collaborator"
"model_reconstruction_trail","boundary","hide","command collaborator"
"model_reconstruction_trail","boundary","push","command collaborator"
"model_reconstruction_trail","boundary","push","command collaborator"
"model_reconstruction_trail","boundary","model_reconstruction_trail::replay","void-accessor command collaborator"
"model_reconstruction_trail","boundary","model_reconstruction_trail::get_model_converter","property non-void-command collaborator"
"model_reconstruction_trail","boundary","model_reconstruction_trail::append","controller"
"model_reconstruction_trail","boundary","model_reconstruction_trail::display","property controller"
"annotate_tactical","entity boundary","operator()","collaborator"
"annotate_tactical","entity boundary","translate","property non-void-command collaborator"
"annotate_tactical","entity boundary","name","incidental"
"proof_cmds","empty","~proof_cmds","destructor"
"linear_equation_manager","entity boundary","linear_equation_manager","constructor"
"linear_equation_manager","entity boundary","linear_equation_manager::display","collaborator"
"linear_equation_manager","entity boundary","linear_equation_manager::mk","property non-void-command factory collaborator"
"linear_equation_manager","entity boundary","linear_equation_manager::mk_core","non-void-command factory collaborator"
"linear_equation_manager","entity boundary","linear_equation_manager::mk","property non-void-command collaborator"
"linear_equation_manager","entity boundary","linear_equation_manager::mk","property non-void-command collaborator"
"linear_equation_manager","entity boundary","linear_equation_manager::del","command collaborator"
"unsat_core_generalizer","commander boundary","reset_statistics","command"
"unsat_core_generalizer","commander boundary","unsat_core_generalizer::operator()","set collaborator"
"unsat_core_generalizer","commander boundary","unsat_core_generalizer::collect_statistics","collaborator"
"obj_pair_hashtable","empty","obj_pair_hashtable","constructor"
"linear_equation","data-provider boundary","size","get"
"linear_equation","data-provider boundary","a","get wrapper"
"linear_equation","data-provider boundary","approx_a","get wrapper"
"linear_equation","data-provider boundary","x","get wrapper"
"linear_equation","data-provider boundary","get_a","void-accessor"
"linear_equation","data-provider boundary","get_a","controller"
"linear_equation","data-provider boundary","get_a","controller"
"linear_equation","data-provider boundary","linear_equation::pos","collaborator"
"plugin","boundary","plugin","constructor"
"plugin","boundary","mk_fresh","wrapper stateless"
"plugin","boundary","is_value","predicate collaborator"
"plugin","boundary","is_unique_value","predicate collaborator"
"plugin","boundary","begin_def_block","set"
"plugin","boundary","get_def","property collaborator"
"plugin","boundary","get_def","property collaborator"
"plugin","boundary","is_declared","predicate collaborator"
"plugin","boundary","is_declared","predicate collaborator"
"plugin","boundary","get_axiom_base_id","get collaborator"
"plugin","boundary","has_nested_rec","get"
"plugin","boundary","datatype_name","controller stateless"
"plugin","boundary","plugin","constructor"
"plugin","boundary","~plugin","destructor"
"plugin","boundary","diseq_eh","empty"
"plugin","boundary","m","get collaborator"
"plugin","boundary","is_fully_interp","collaborator incidental"
"plugin","boundary","mk_fresh","wrapper stateless"
"plugin","boundary","mk_sort","wrapper stateless"
"plugin","boundary","has_def","predicate collaborator"
"plugin","boundary","has_rec_defs","get"
"plugin","boundary","get_def","property collaborator"
"plugin","boundary","get_promise_def","property collaborator"
"plugin","boundary","get_def","property collaborator"
"plugin","boundary","has_case_def","predicate collaborator"
"plugin","boundary","get_case_def","property non-void-command collaborator"
"plugin","boundary","is_defined","predicate non-void-command collaborator"
"plugin","boundary","get_rec_funs","property non-void-command collaborator"
"plugin","boundary","mk_fresh","wrapper stateless"
"plugin","boundary","mk_sort","wrapper stateless"
"plugin","boundary","mk_func_decl","wrapper stateless"
"plugin","boundary","plugin::~plugin","destructor"
"plugin","boundary","plugin::finalize","set"
"plugin","boundary","plugin::u","property collaborator"
"plugin","boundary","plugin::inherit","command collaborator"
"plugin","boundary","plugin::mk_sort","property non-void-command collaborator"
"plugin","boundary","plugin::mk_update_field","property non-void-command collaborator"
"plugin","boundary","decl::plugin::mk_constructor","property non-void-command collaborator"
"plugin","boundary","plugin::get_constructors","property controller"
"plugin","boundary","plugin::get_accessors","property controller"
"plugin","boundary","decl::plugin::mk_recognizer","property non-void-command collaborator"
"plugin","boundary","decl::plugin::mk_is","property non-void-command collaborator"
"plugin","boundary","decl::plugin::mk_accessor","property non-void-command collaborator"
"plugin","boundary","decl::plugin::mk_func_decl","property non-void-command collaborator"
"plugin","boundary","plugin::mk","property non-void-command collaborator"
"plugin","boundary","plugin::end_def_block","command collaborator"
"plugin","boundary","plugin::log_axiom_definitions","command collaborator"
"plugin","boundary","plugin::mk_datatypes","predicate non-void-command collaborator"
"plugin","boundary","plugin::remove","command collaborator"
"plugin","boundary","plugin::is_value_visit","predicate collaborator"
"plugin","boundary","plugin::is_value_aux","predicate collaborator"
"plugin","boundary","plugin::get_op_names","controller stateless"
"plugin","boundary","plugin::are_distinct","predicate collaborator"
"plugin","boundary","plugin::get_some_value","property non-void-command collaborator"
"plugin","boundary","plugin::is_fully_interp","predicate collaborator"
"plugin","boundary","plugin::push_plugin_undo","command"
"plugin","boundary","plugin::push_merge","command collaborator"
"plugin","boundary","plugin::push_merge","command collaborator"
"plugin","boundary","plugin::mk","property non-void-command collaborator"
"plugin","boundary","plugin::get_region","property collaborator"
"plugin","boundary","plugin::plugin","constructor"
"plugin","boundary","plugin::~plugin","destructor"
"plugin","boundary","plugin::finalize","command"
"plugin","boundary","plugin::u","property collaborator"
"plugin","boundary","plugin::get_op_names","controller stateless"
"plugin","boundary","plugin::mk_def","property non-void-command collaborator"
"plugin","boundary","plugin::inherit","command collaborator"
"plugin","boundary","plugin::ensure_def","property non-void-command collaborator"
"plugin","boundary","plugin::erase_def","command collaborator"
"plugin","boundary","plugin::set_definition","command collaborator"
"plugin","boundary","plugin::has_defs","predicate"
"plugin","boundary","plugin::mk_def","property non-void-command collaborator"
"plugin","boundary","plugin::mk_func_decl","property non-void-command collaborator"
"plugin","boundary","plugin::compute_scores","command collaborator"
"plugin","boundary","plugin::redirect_ite","property non-void-command collaborator"
"plugin","boundary","rule_transformer::plugin::remove_duplicate_tails","controller stateless"
"th_rewriter::imp","entity boundary small-class","mk_eq","property non-void-command collaborator"
"th_rewriter::imp","entity boundary small-class","set_solver","command collaborator"
"completion","boundary","name","incidental"
"completion","boundary","push","command"
"completion","boundary","pop","command"
"completion","boundary","reset_statistics","command"
"completion","boundary","completion::completion","constructor"
"completion","boundary","completion::reduce","command"
"completion","boundary","completion::add_egraph","command collaborator"
"completion","boundary","completion::read_egraph","command collaborator"
"completion","boundary","completion::is_new_eq","predicate non-void-command collaborator"
"completion","boundary","completion::update_has_new_eq","command collaborator"
"completion","boundary","completion::mk_enode","property non-void-command collaborator"
"completion","boundary","completion::canonize_fml","property non-void-command collaborator"
"completion","boundary","completion::mk_and","property non-void-command collaborator"
"completion","boundary","completion::canonize","property non-void-command collaborator"
"completion","boundary","completion::get_canonical","property non-void-command collaborator"
"completion","boundary","completion::get_canonical","property non-void-command collaborator"
"completion","boundary","completion::set_canonical","command collaborator"
"completion","boundary","completion::explain_eq","property non-void-command collaborator"
"completion","boundary","completion::explain_conflict","property non-void-command collaborator"
"completion","boundary","completion::collect_statistics","controller"
"completion","boundary","completion::map_canonical","command collaborator"
"mk_ismt2_pp","empty","mk_ismt2_pp::mk_ismt2_pp","constructor"
"mk_ismt2_pp","empty","mk_ismt2_pp::mk_ismt2_pp","constructor"
"check_table_plugin::filter_equal_fn","boundary degenerate small-class","operator()","wrapper stateless"
"core","data-provider boundary","monics_with_changed_bounds","get collaborator"
"core","data-provider boundary","active_var_set","get collaborator"
"core","data-provider boundary","active_var_set_contains","predicate"
"core","data-provider boundary","insert_to_active_var_set","unclassified"
"core","data-provider boundary","clear_active_var_set","unclassified"
"core","data-provider boundary","reslim","get collaborator"
"core","data-provider boundary","emons","get collaborator"
"core","data-provider boundary","emons","get collaborator"
"core","data-provider boundary","emon","get collaborator"
"core","data-provider boundary","emon","get collaborator"
"core","data-provider boundary","is_monic_var","predicate collaborator"
"core","data-provider boundary","val","property collaborator"
"core","data-provider boundary","var_val","property collaborator"
"core","data-provider boundary","mul_val","property collaborator"
"core","data-provider boundary","var","controller stateless"
"core","data-provider boundary","val_rooted","property collaborator"
"core","data-provider boundary","val","property collaborator"
"core","data-provider boundary","var","controller stateless"
"core","data-provider boundary","params","get collaborator"
"core","data-provider boundary","need_run_horner","predicate"
"core","data-provider boundary","need_run_grobner","predicate"
"core","data-provider boundary","add_idivision","command collaborator"
"core","data-provider boundary","add_rdivision","command collaborator"
"core","data-provider boundary","add_bounded_division","command collaborator"
"core","data-provider boundary","set_relevant","set collaborator"
"core","data-provider boundary","is_relevant","predicate wrapper"
"core","data-provider boundary","trail","property non-void-command collaborator"
"core","data-provider boundary","print_factor_with_vars","property collaborator"
"core","data-provider boundary","pp","property wrapper"
"core","data-provider boundary","pp","property wrapper"
"core","data-provider boundary","pp","property wrapper"
"core","data-provider boundary","no_bounds","predicate collaborator"
"core","data-provider boundary","has_lower_bound","predicate"
"core","data-provider boundary","has_upper_bound","predicate"
"core","data-provider boundary","var_is_int","predicate collaborator"
"core","data-provider boundary","rat_sign","property collaborator"
"core","data-provider boundary","print_row","property collaborator"
"core","data-provider boundary","use_nra_model","get"
"core","data-provider boundary","lemmas","get collaborator"
"core","data-provider boundary","literals","get collaborator"
"core","data-provider boundary","equalities","get collaborator"
"core","data-provider boundary","fixed_equalities","get collaborator"
"core","data-provider boundary","should_check_feasible","get"
"core","data-provider boundary","add_fixed_equality","command collaborator"
"core","data-provider boundary","add_equality","command collaborator"
"core","data-provider boundary","user_propagate_init","wrapper stateless"
"core","data-provider boundary","user_propagate_register_fixed","wrapper stateless"
"core","data-provider boundary","user_propagate_register_final","wrapper stateless"
"core","data-provider boundary","user_propagate_register_eq","wrapper stateless"
"core","data-provider boundary","user_propagate_register_diseq","wrapper stateless"
"core","data-provider boundary","user_propagate_register_expr","wrapper stateless"
"core","data-provider boundary","user_propagate_register_created","wrapper stateless"
"core","data-provider boundary","user_propagate_register_decide","wrapper stateless"
"core","data-provider boundary","user_propagate_clear","empty"
"core","data-provider boundary","register_on_clause","wrapper stateless"
"core","data-provider boundary","core::core","constructor"
"core","data-provider boundary","core::compare_holds","wrapper stateless"
"core","data-provider boundary","core::value","property collaborator"
"core","data-provider boundary","core::ineq_holds","predicate collaborator"
"core","data-provider boundary","core::lemma_holds","predicate collaborator"
"core","data-provider boundary","core::map_to_root","property collaborator"
"core","data-provider boundary","core::sorted_rvars","get property collaborator"
"core","data-provider boundary","core::canonize_sign","predicate collaborator"
"core","data-provider boundary","core::canonize_sign","predicate collaborator"
"core","data-provider boundary","core::canonize_sign_is_correct","predicate collaborator"
"core","data-provider boundary","core::canonize_sign","predicate collaborator"
"core","data-provider boundary","core::canonize_sign","predicate collaborator"
"core","data-provider boundary","core::add_monic","command collaborator"
"core","data-provider boundary","core::push","command"
"core","data-provider boundary","core::pop","command"
"core","data-provider boundary","core::product_value","property collaborator"
"core","data-provider boundary","core::check_monic","predicate collaborator"
"core","data-provider boundary","core::print_product","property collaborator"
"core","data-provider boundary","core::product_indices_str","controller stateless"
"core","data-provider boundary","core::print_factor","property collaborator"
"core","data-provider boundary","core::print_factor_with_vars","property collaborator"
"core","data-provider boundary","core::print_monic","property collaborator"
"core","data-provider boundary","core::print_bfc","property collaborator"
"core","data-provider boundary","core::print_monic_with_vars","property collaborator"
"core","data-provider boundary","core::print_product_with_vars","property collaborator"
"core","data-provider boundary","core::print_monic_with_vars","property collaborator"
"core","data-provider boundary","core::print_explanation","property collaborator"
"core","data-provider boundary","core::explain_upper_bound","predicate collaborator"
"core","data-provider boundary","core::explain_lower_bound","predicate collaborator"
"core","data-provider boundary","core::explain_coeff_lower_bound","predicate collaborator"
"core","data-provider boundary","core::explain_coeff_upper_bound","predicate collaborator"
"core","data-provider boundary","core::explain_ineq","predicate non-void-command collaborator"
"core","data-provider boundary","core::explain_by_equiv","predicate collaborator"
"core","data-provider boundary","core::mk_ineq_no_expl_check","wrapper stateless"
"core","data-provider boundary","core::fill_explanation_and_lemma_sign","controller stateless"
"core","data-provider boundary","core::reduce_monic_to_rooted","property collaborator"
"core","data-provider boundary","core::canonize_monic","property collaborator"
"core","data-provider boundary","core::vars_sign","property non-void-command collaborator"
"core","data-provider boundary","core::has_upper_bound","predicate collaborator"
"core","data-provider boundary","core::has_lower_bound","predicate collaborator"
"core","data-provider boundary","core::get_upper_bound","property collaborator"
"core","data-provider boundary","core::get_lower_bound","property collaborator"
"core","data-provider boundary","core::zero_is_an_inner_point_of_bounds","predicate collaborator"
"core","data-provider boundary","core::rat_sign","property collaborator"
"core","data-provider boundary","core::sign_contradiction","predicate collaborator"
"core","data-provider boundary","core::var_is_fixed_to_zero","predicate collaborator"
"core","data-provider boundary","core::var_is_fixed_to_val","predicate collaborator"
"core","data-provider boundary","core::var_is_fixed","predicate collaborator"
"core","data-provider boundary","core::var_is_free","predicate collaborator"
"core","data-provider boundary","core::print_ineq","property collaborator"
"core","data-provider boundary","core::print_var","property collaborator"
"core","data-provider boundary","core::print_monics","property collaborator"
"core","data-provider boundary","core::print_ineqs","property collaborator"
"core","data-provider boundary","core::print_factorization","property collaborator"
"core","data-provider boundary","core::find_canonical_monic_of_vars","predicate collaborator"
"core","data-provider boundary","core::is_canonical_monic","predicate collaborator"
"core","data-provider boundary","core::trace_print_monic_and_factorization","collaborator"
"core","data-provider boundary","core::var_has_positive_lower_bound","predicate collaborator"
"core","data-provider boundary","core::var_has_negative_upper_bound","predicate collaborator"
"core","data-provider boundary","core::var_is_separated_from_zero","predicate collaborator"
"core","data-provider boundary","core::vars_are_equiv","predicate collaborator"
"core","data-provider boundary","core::has_zero_factor","predicate collaborator"
"core","data-provider boundary","core::mon_has_zero","predicate collaborator"
"core","data-provider boundary","core::lp_settings","property non-void-command collaborator"
"core","data-provider boundary","core::lp_settings","property collaborator"
"core","data-provider boundary","core::random","non-void-command"
"core","data-provider boundary","core::collect_equivs","command collaborator"
"core","data-provider boundary","core::is_octagon_term","controller stateless"
"core","data-provider boundary","core::add_equivalence_maybe","command collaborator"
"core","data-provider boundary","core::init_vars_equivalence","command"
"core","data-provider boundary","core::vars_table_is_ok","incidental"
"core","data-provider boundary","core::rm_table_is_ok","incidental"
"core","data-provider boundary","core::tables_are_ok","predicate"
"core","data-provider boundary","core::var_is_a_root","predicate collaborator"
"core","data-provider boundary","core::vars_are_roots","predicate collaborator"
"core","data-provider boundary","core::trace_print_rms","collaborator"
"core","data-provider boundary","core::print_monic_stats","command collaborator"
"core","data-provider boundary","core::print_stats","empty"
"core","data-provider boundary","core::clear","command"
"core","data-provider boundary","core::init_search","command"
"core","data-provider boundary","core::insert_to_refine","command collaborator"
"core","data-provider boundary","core::erase_from_to_refine","command collaborator"
"core","data-provider boundary","core::init_to_refine","command collaborator"
"core","data-provider boundary","core::collect_vars","property collaborator"
"core","data-provider boundary","core::divide","predicate collaborator"
"core","data-provider boundary","core::negate_factor_equality","void-accessor command collaborator"
"core","data-provider boundary","core::negate_factor_relation","void-accessor command collaborator"
"core","data-provider boundary","core::print_lemma","property collaborator"
"core","data-provider boundary","core::trace_print_ol","command collaborator"
"core","data-provider boundary","core::maybe_add_a_factor","collaborator"
"core","data-provider boundary","core::get_rm_by_arity","property controller"
"core","data-provider boundary","core::rm_check","predicate collaborator"
"core","data-provider boundary","core::has_relevant_monomial","predicate"
"core","data-provider boundary","core::find_bfc_to_refine_on_monic","predicate non-void-command collaborator"
"core","data-provider boundary","core::find_bfc_to_refine","predicate non-void-command collaborator"
"core","data-provider boundary","core::val","property collaborator"
"core","data-provider boundary","core::negate_relation","void-accessor command collaborator"
"core","data-provider boundary","core::conflict_found","predicate controller"
"core","data-provider boundary","core::done","predicate"
"core","data-provider boundary","core::elist_is_consistent","predicate collaborator"
"core","data-provider boundary","core::elists_are_consistent","predicate collaborator"
"core","data-provider boundary","core::var_breaks_correct_monic_as_factor","predicate collaborator"
"core","data-provider boundary","core::var_breaks_correct_monic","predicate collaborator"
"core","data-provider boundary","core::update_to_refine_of_var","command collaborator"
"core","data-provider boundary","core::var_is_big","predicate collaborator"
"core","data-provider boundary","core::has_big_num","predicate collaborator"
"core","data-provider boundary","core::has_real","predicate collaborator"
"core","data-provider boundary","core::has_real","predicate collaborator"
"core","data-provider boundary","core::is_patch_blocked","predicate collaborator"
"core","data-provider boundary","core::try_to_patch","predicate non-void-command collaborator"
"core","data-provider boundary","core::to_refine_is_correct","predicate"
"core","data-provider boundary","core::patch_monomial","command collaborator"
"core","data-provider boundary","core::patch_monomials_on_to_refine","command"
"core","data-provider boundary","core::patch_monomials","set"
"core","data-provider boundary","core::check_weighted","command collaborator"
"core","data-provider boundary","core::check_power","property non-void-command collaborator"
"core","data-provider boundary","core::check_bounded_divisions","command"
"core","data-provider boundary","core::add_bounds","command collaborator"
"core","data-provider boundary","core::check","property non-void-command collaborator"
"core","data-provider boundary","core::should_run_bounded_nlsat","predicate set"
"core","data-provider boundary","core::bounded_nlsat","property non-void-command collaborator"
"core","data-provider boundary","core::no_lemmas_hold","predicate"
"core","data-provider boundary","core::test_check","property non-void-command collaborator"
"core","data-provider boundary","core::print_terms","property collaborator"
"core","data-provider boundary","core::var_str","property collaborator"
"core","data-provider boundary","core::print_term","property collaborator"
"core","data-provider boundary","core::get_vars_of_expr_with_opening_terms","property non-void-command collaborator"
"core","data-provider boundary","core::is_nl_var","predicate collaborator"
"core","data-provider boundary","core::get_var_weight","collaborator"
"core","data-provider boundary","core::set_active_vars_weights","command collaborator"
"core","data-provider boundary","core::influences_nl_var","predicate collaborator"
"core","data-provider boundary","core::set_use_nra_model","command"
"core","data-provider boundary","core::propagate","command collaborator"
"core","data-provider boundary","core::simplify","empty"
"var2degree","degenerate","set_degree","controller stateless"
"var2degree","degenerate","degree","controller stateless"
"var2degree","degenerate","operator<<","collaborator incidental"
"var2degree","degenerate","var2degree::display","controller"
"remove_set","commander small-class","remove_set","constructor"
"remove_set","commander small-class","undo","command"
"karr_relation_plugin::project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"algebraic_cell","data-provider small-class","algebraic_cell","constructor"
"algebraic_cell","data-provider small-class","is_minimal","predicate"
"mus::imp","boundary","reset","command"
"mus::imp","boundary","is_literal","predicate collaborator"
"mus::imp","boundary","add_soft","controller stateless"
"mus::imp","boundary","add_assumption","command collaborator"
"mus::imp","boundary","get_mus","property non-void-command collaborator"
"mus::imp","boundary","get_mus1","property non-void-command collaborator"
"mus::imp","boundary","get_mus2","property non-void-command collaborator"
"mus::imp","boundary","get_next_mcs","property non-void-command collaborator"
"mus::imp","boundary","get_core","command collaborator"
"mus::imp","boundary","have_intersection","controller stateless"
"mus::imp","boundary","is_core","predicate non-void-command collaborator"
"mus::imp","boundary","display_vec","controller stateless"
"mus::imp","boundary","display_vec","controller"
"mus::imp","boundary","display_vec","controller"
"mus::imp","boundary","set_soft","command collaborator"
"mus::imp","boundary","update_model","command"
"mus::imp","boundary","get_best_model","get collaborator"
"theory_array_bapa::imp","boundary","ctx","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","reset","wrapper"
"theory_array_bapa::imp","boundary","is_true","predicate non-void-command collaborator"
"theory_array_bapa::imp","boundary","is_true","predicate non-void-command collaborator"
"theory_array_bapa::imp","boundary","is_true","predicate non-void-command collaborator"
"theory_array_bapa::imp","boundary","is_leaf","collaborator incidental"
"theory_array_bapa::imp","boundary","is_leaf","predicate collaborator"
"theory_array_bapa::imp","boundary","get_root","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","is_select","predicate non-void-command collaborator"
"theory_array_bapa::imp","boundary","mk_select","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","get_literal","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","mk_literal","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","mk_eq","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","mk_th_axiom","command collaborator"
"theory_array_bapa::imp","boundary","mk_th_axiom","command collaborator"
"theory_array_bapa::imp","boundary","mk_th_axiom","command collaborator"
"theory_array_bapa::imp","boundary","update_indices","command collaborator"
"theory_array_bapa::imp","boundary","ensure_functional","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","ensure_disjoint","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","ensure_disjoint","predicate non-void-command collaborator"
"theory_array_bapa::imp","boundary","do_intersect","predicate collaborator"
"theory_array_bapa::imp","boundary","add_disjoint","command collaborator"
"theory_array_bapa::imp","boundary","mk_subtract","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","mk_intersect","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","propagate","command collaborator"
"theory_array_bapa::imp","boundary","propagate","command collaborator"
"theory_array_bapa::imp","boundary","ensure_values_assigned","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","ensure_non_empty","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","mk_index_skolem","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","ensure_no_overflow","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","ensure_no_overflow","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","display","property wrapper"
"theory_array_bapa::imp","boundary","display","controller stateless"
"theory_array_bapa::imp","boundary","~imp","destructor"
"theory_array_bapa::imp","boundary","internalize_term","command collaborator"
"theory_array_bapa::imp","boundary","internalize_size","command collaborator"
"theory_array_bapa::imp","boundary","internalize_card","command collaborator"
"theory_array_bapa::imp","boundary","trace_call","wrapper stateless"
"theory_array_bapa::imp","boundary","final_check","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","init_model","command collaborator"
"theory_array_bapa::imp","boundary","should_research","predicate non-void-command collaborator"
"theory_array_bapa::imp","boundary","inc_size_limit","set collaborator"
"theory_array_bapa::imp","boundary","is_size_limit","controller stateless"
"theory_array_bapa::imp","boundary","mk_size_limit","property non-void-command collaborator"
"theory_array_bapa::imp","boundary","assert_size_limit","command collaborator"
"theory_array_bapa::imp","boundary","add_theory_assumptions","command collaborator"
"pdecl_manager","boundary","m","get collaborator"
"pdecl_manager","boundary","a","get collaborator"
"pdecl_manager","boundary","get_datatype_fid","get collaborator"
"pdecl_manager","boundary","set_new_datatype_eh","set collaborator"
"pdecl_manager","boundary","mk_plist_decl","get non-void-command collaborator"
"pdecl_manager","boundary","fix_missing_refs","controller stateless"
"pdecl_manager","boundary","lazy_dec_ref","command collaborator"
"pdecl_manager","boundary","lazy_dec_ref","command collaborator"
"pdecl_manager","boundary","inc_ref","controller stateless"
"pdecl_manager","boundary","dec_ref","command collaborator"
"pdecl_manager","boundary","inc_ref","command collaborator"
"pdecl_manager","boundary","dec_ref","command collaborator"
"pdecl_manager","boundary","notify_new_dt","wrapper"
"pdecl_manager","boundary","pdecl_manager::instantiate_datatype","property non-void-command collaborator"
"pdecl_manager","boundary","pdecl_manager::notify_datatype","command collaborator"
"pdecl_manager","boundary","pdecl_manager::push","command"
"pdecl_manager","boundary","pdecl_manager::pop","command"
"pdecl_manager","boundary","pdecl_manager::notify_mk_datatype","command collaborator"
"pdecl_manager","boundary","pdecl_manager::init_list","command collaborator"
"pdecl_manager","boundary","pdecl_manager::pdecl_manager","constructor"
"pdecl_manager","boundary","pdecl_manager::~pdecl_manager","destructor"
"pdecl_manager","boundary","pdecl_manager::mk_psort_cnst","non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::register_psort","property non-void-command collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_psort_var","property non-void-command collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_paccessor_decl","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_pconstructor_decl","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_pdatatype_decl","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_pdatatypes_decl","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_psort_app","property non-void-command collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_psort_app","property non-void-command collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_psort_user_decl","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_psort_dt_decl","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_psort_type_var_decl","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_psort_builtin_decl","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::instantiate","property controller"
"pdecl_manager","boundary","pdecl_manager::del_decl_core","command collaborator"
"pdecl_manager","boundary","pdecl_manager::del_decl","command collaborator"
"pdecl_manager","boundary","pdecl_manager::del_decls","command collaborator"
"pdecl_manager","boundary","pdecl_manager::mk_inst_cache","property non-void-command factory collaborator"
"pdecl_manager","boundary","pdecl_manager::del_inst_cache","command collaborator"
"pdecl_manager","boundary","pdecl_manager::get_dt_plugin","property collaborator"
"pdecl_manager","boundary","pdecl_manager::save_info","command collaborator"
"pdecl_manager","boundary","pdecl_manager::save_info","command collaborator"
"pdecl_manager","boundary","pdecl_manager::reset_sort_info","command"
"pdecl_manager","boundary","pdecl_manager::display","controller"
"pdecl_manager","boundary","pdecl_manager::pp","property controller"
"relation_manager::default_relation_intersection_filter_fn","pure-controller small-class","operator()","controller"
"smt_reader","commander boundary","set_error","set"
"smt_reader","commander boundary","is_ok","get"
"smt_reader","commander boundary","prefix","predicate non-void-command"
"smt_reader","commander boundary","first_separator","property non-void-command"
"smt_reader","commander boundary","fill_lisp_elem","command collaborator"
"smt_reader","commander boundary","fill_simple_elem","void-accessor command collaborator"
"smt_reader","commander boundary","fill_nested_elem","void-accessor command collaborator"
"smt_reader","commander boundary","eat_blanks","command"
"smt_reader","commander boundary","fill_formula_elem","command"
"smt_reader","commander boundary","parse_line","command"
"smt_reader","commander boundary","set_constraint_kind","void-accessor command collaborator"
"smt_reader","commander boundary","adjust_right_side","empty"
"smt_reader","commander boundary","set_constraint_coeffs","command collaborator"
"smt_reader","commander boundary","is_integer","controller stateless"
"smt_reader","commander boundary","add_complex_sum_elem","void-accessor command collaborator"
"smt_reader","commander boundary","get_name","property non-void-command collaborator"
"smt_reader","commander boundary","add_mult_elem","command collaborator"
"smt_reader","commander boundary","get_coeff","property non-void-command collaborator"
"smt_reader","commander boundary","str_to_int","property non-void-command"
"smt_reader","commander boundary","add_sum_elem","void-accessor command collaborator"
"smt_reader","commander boundary","add_sum","command collaborator"
"smt_reader","commander boundary","set_constraint_coeffs_on_coeff_element","command collaborator"
"smt_reader","commander boundary","create_constraint","command collaborator"
"smt_reader","commander boundary","fill_constraints","command"
"smt_reader","commander boundary","read","command"
"smt_reader","commander boundary","register_name","non-void-command"
"smt_reader","commander boundary","add_constraint_to_solver","command"
"smt_reader","commander boundary","fill_lar_solver","command collaborator"
"smt_reader","commander boundary","create_lar_solver","non-void-command factory collaborator"
"dependent_expr_state","commander boundary","~dependent_expr_state","destructor"
"dependent_expr_state","commander boundary","qhead","get"
"dependent_expr_state","commander boundary","flatten_suffix","empty"
"dependent_expr_state","commander boundary","push","command"
"dependent_expr_state","commander boundary","pop","command"
"dependent_expr_state","commander boundary","advance_qhead","command"
"dependent_expr_state","commander boundary","freeze","command collaborator"
"dependent_expr_state","commander boundary","frozen","predicate collaborator"
"dependent_expr_state","commander boundary","frozen","predicate collaborator"
"dependent_expr_state","commander boundary","display","collaborator incidental"
"dependent_expr_state","commander boundary","dependent_expr_state::num_exprs","wrapper"
"dependent_expr_state","commander boundary","dependent_expr_state::freeze","command collaborator"
"dependent_expr_state","commander boundary","dependent_expr_state::freeze","command collaborator"
"dependent_expr_state","commander boundary","dependent_expr_state::freeze_terms","command collaborator"
"dependent_expr_state","commander boundary","dependent_expr_state::freeze_recfun","command collaborator"
"dependent_expr_state","commander boundary","dependent_expr_state::freeze_lambda","command collaborator"
"dependent_expr_state","commander boundary","dependent_expr_state::freeze_prefix","command"
"dependent_expr_state","commander boundary","dependent_expr_state::freeze_suffix","command collaborator"
"dependent_expr_state","commander boundary","dependent_expr_state::has_quantifiers","predicate non-void-command"
"qfufbv_ackr_tactic","boundary","qfufbv_ackr_tactic","constructor"
"qfufbv_ackr_tactic","boundary","name","incidental"
"qfufbv_ackr_tactic","boundary","operator()","command collaborator"
"qfufbv_ackr_tactic","boundary","updt_params","command collaborator"
"qfufbv_ackr_tactic","boundary","collect_statistics","controller"
"qfufbv_ackr_tactic","boundary","reset_statistics","command"
"qfufbv_ackr_tactic","boundary","cleanup","empty"
"qfufbv_ackr_tactic","boundary","translate","property wrapper"
"qfufbv_ackr_tactic","boundary","setup_sat","property controller"
"do_nothing_rename_proc","boundary degenerate small-class","operator()","collaborator incidental"
"dependent_expr","entity data-provider boundary","dependent_expr","constructor"
"dependent_expr","entity data-provider boundary","dependent_expr","copy-constructor"
"dependent_expr","entity data-provider boundary","operator=","get non-void-command"
"dependent_expr","entity data-provider boundary","dependent_expr","copy-constructor"
"dependent_expr","entity data-provider boundary","dependent_expr","copy-constructor"
"dependent_expr","entity data-provider boundary","~dependent_expr","destructor"
"dependent_expr","entity data-provider boundary","get_manager","get collaborator"
"dependent_expr","entity data-provider boundary","fml","get collaborator"
"dependent_expr","entity data-provider boundary","dep","get collaborator"
"dependent_expr","entity data-provider boundary","pr","get collaborator"
"dependent_expr","entity data-provider boundary","operator()","property collaborator"
"dependent_expr","entity data-provider boundary","display","property collaborator"
"mbc","pure-controller small-class","mbc::mbc","constructor"
"mbc","pure-controller small-class","mbc::operator()","controller"
"distribute_forall","entity boundary","is_cached","predicate collaborator"
"distribute_forall","entity boundary","reset_cache","command"
"distribute_forall","entity boundary","flush_cache","command"
"distribute_forall","entity boundary","distribute_forall::distribute_forall","constructor"
"distribute_forall","entity boundary","distribute_forall::visit","void-accessor command"
"distribute_forall","entity boundary","distribute_forall::visit_children","predicate non-void-command collaborator"
"distribute_forall","entity boundary","distribute_forall::reduce1","command collaborator"
"distribute_forall","entity boundary","distribute_forall::reduce1_app","command collaborator"
"distribute_forall","entity boundary","distribute_forall::reduce1_quantifier","command collaborator"
"distribute_forall","entity boundary","distribute_forall::operator()","void-accessor command collaborator"
"distribute_forall","entity boundary","distribute_forall::get_cached","property collaborator"
"distribute_forall","entity boundary","distribute_forall::cache_result","command collaborator"
"table_base","boundary","table_base","constructor"
"table_base","boundary","remove_fact","command collaborator"
"table_base","boundary","table_base::empty","wrapper stateless"
"table_base","boundary","table_base::remove_facts","command collaborator"
"table_base","boundary","table_base::remove_facts","command collaborator"
"table_base","boundary","table_base::reset","command collaborator"
"table_base","boundary","table_base::contains_fact","predicate controller"
"table_base","boundary","table_base::fetch_fact","predicate collaborator"
"table_base","boundary","table_base::suggest_fact","predicate non-void-command collaborator"
"table_base","boundary","table_base::ensure_fact","command collaborator"
"table_base","boundary","table_base::clone","property controller"
"table_base","boundary","table_base::complement","property collaborator"
"table_base","boundary","table_base::display","controller"
"table_base","boundary","table_base::to_formula","controller"
"datatype_value_proc","entity commander boundary","datatype_value_proc","constructor"
"datatype_value_proc","entity commander boundary","add_dependency","command collaborator"
"datatype_value_proc","entity commander boundary","get_dependencies","command collaborator"
"datatype_value_proc","entity commander boundary","mk_value","property non-void-command collaborator"
"watched_lt","pure-controller degenerate small-class","operator()","controller stateless"
"dom_bv_bounds_simplifier","boundary","dom_bv_bounds_simplifier","constructor"
"dom_bv_bounds_simplifier","boundary","~dom_bv_bounds_simplifier","destructor"
"dom_bv_bounds_simplifier","boundary","updt_params","set collaborator"
"dom_bv_bounds_simplifier","boundary","collect_param_descrs","controller stateless"
"dom_bv_bounds_simplifier","boundary","assert_expr","predicate non-void-command"
"dom_bv_bounds_simplifier","boundary","operator()","void-accessor command collaborator"
"dom_bv_bounds_simplifier","boundary","pop","command"
"dom_bv_bounds_simplifier","boundary","translate","property wrapper"
"dom_bv_bounds_simplifier","boundary","scope_level","unclassified"
"external_relation_plugin::negation_filter_fn","commander boundary small-class","operator()","command collaborator"
"obj_ptr_pair_hash","pure-controller degenerate small-class","operator()","controller stateless"
"eq_justification","data-provider boundary","eq_justification","constructor"
"eq_justification","data-provider boundary","begin","get collaborator"
"eq_justification","data-provider boundary","end","property collaborator"
"eq_justification","data-provider boundary","eq_justification","constructor"
"eq_justification","data-provider boundary","eq_justification","constructor"
"eq_justification","data-provider boundary","eq_justification","constructor"
"eq_justification","data-provider boundary","eq_justification","constructor"
"eq_justification","data-provider boundary","get_kind","property wrapper"
"eq_justification","data-provider boundary","get_literal","property collaborator"
"eq_justification","data-provider boundary","get_justification","property collaborator"
"eq_justification","data-provider boundary","used_commutativity","predicate"
"relevancy_propagator_imp","entity boundary","~relevancy_propagator_imp","destructor"
"relevancy_propagator_imp","entity boundary","get_handlers","property non-void-command collaborator"
"relevancy_propagator_imp","entity boundary","set_handlers","command collaborator"
"relevancy_propagator_imp","entity boundary","get_watches","property wrapper"
"relevancy_propagator_imp","entity boundary","set_watches","wrapper"
"relevancy_propagator_imp","entity boundary","push_trail","command collaborator"
"relevancy_propagator_imp","entity boundary","add_handler","command collaborator"
"relevancy_propagator_imp","entity boundary","add_watch","command collaborator"
"relevancy_propagator_imp","entity boundary","add_watch","command collaborator"
"relevancy_propagator_imp","entity boundary","is_relevant_core","predicate collaborator"
"relevancy_propagator_imp","entity boundary","is_relevant","predicate collaborator"
"relevancy_propagator_imp","entity boundary","push","command collaborator"
"relevancy_propagator_imp","entity boundary","pop","command collaborator"
"relevancy_propagator_imp","entity boundary","unmark_relevant_exprs","command collaborator"
"relevancy_propagator_imp","entity boundary","undo_trail","command collaborator"
"relevancy_propagator_imp","entity boundary","set_relevant","command collaborator"
"relevancy_propagator_imp","entity boundary","mark_and_propagate","command collaborator"
"relevancy_propagator_imp","entity boundary","mark_as_relevant","command collaborator"
"relevancy_propagator_imp","entity boundary","propagate_relevant_app","command collaborator"
"relevancy_propagator_imp","entity boundary","propagate_relevant_or","command collaborator"
"relevancy_propagator_imp","entity boundary","propagate_relevant_and","command collaborator"
"relevancy_propagator_imp","entity boundary","propagate_relevant_ite","command collaborator"
"relevancy_propagator_imp","entity boundary","propagate","command collaborator"
"relevancy_propagator_imp","entity boundary","can_propagate","predicate"
"relevancy_propagator_imp","entity boundary","assign_eh","command collaborator"
"relevancy_propagator_imp","entity boundary","display","collaborator"
"relevancy_propagator_imp","entity boundary","check_relevancy_app","predicate collaborator"
"relevancy_propagator_imp","entity boundary","check_relevancy_or","predicate collaborator"
"relevancy_propagator_imp","entity boundary","check_relevancy_and","predicate collaborator"
"relevancy_propagator_imp","entity boundary","check_relevancy_ite","predicate collaborator"
"relevancy_propagator_imp","entity boundary","check_relevancy","predicate collaborator"
"subgoal_proof_converter","unclassified","subgoal_proof_converter","constructor"
"subgoal_proof_converter","unclassified","operator()","property controller"
"subgoal_proof_converter","unclassified","translate","property non-void-command collaborator"
"subgoal_proof_converter","unclassified","display","empty"
"bit_blaster_simplifier","boundary","bit_blaster_simplifier","constructor"
"bit_blaster_simplifier","boundary","name","incidental"
"bit_blaster_simplifier","boundary","rewriter","get collaborator"
"bit_blaster_simplifier","boundary","bit_blaster_simplifier::updt_params","command collaborator"
"bit_blaster_simplifier","boundary","bit_blaster_simplifier::collect_param_descrs","controller stateless"
"bit_blaster_simplifier","boundary","bit_blaster_simplifier::reduce","command collaborator"
"shared_occs","entity commander boundary","shared_occs","constructor"
"shared_occs","entity commander boundary","is_shared","predicate collaborator"
"shared_occs","entity commander boundary","shared_occs::insert","set collaborator"
"shared_occs","entity commander boundary","shared_occs::reset","command"
"shared_occs","entity commander boundary","shared_occs::cleanup","command"
"shared_occs","entity commander boundary","shared_occs::~shared_occs","destructor"
"shared_occs","entity commander boundary","shared_occs::process","predicate non-void-command collaborator"
"shared_occs","entity commander boundary","shared_occs::operator()","command collaborator"
"shared_occs","entity commander boundary","shared_occs::operator()","command collaborator"
"shared_occs","entity commander boundary","shared_occs::display","wrapper"
"shared_occs","entity commander boundary","shared_occs::num_shared","collaborator"
"rule_manager","boundary","get_manager","get collaborator"
"rule_manager","boundary","reset_used","get non-void-command collaborator"
"rule_manager","boundary","get_var_idx","get collaborator"
"rule_manager","boundary","get_counter","get collaborator"
"rule_manager","boundary","rule_manager::rule_manager","constructor"
"rule_manager","boundary","rule_manager::inc_ref","wrapper stateless"
"rule_manager","boundary","rule_manager::dec_ref","void-accessor controller"
"rule_manager","boundary","rule_manager::remove_labels","command collaborator"
"rule_manager","boundary","rule_manager::collect_vars","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::collect_vars","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::reset_collect_vars","command"
"rule_manager","boundary","rule_manager::finalize_collect_vars","get non-void-command collaborator"
"rule_manager","boundary","rule_manager::collect_tail_vars","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::collect_rule_vars_ex","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::collect_rule_vars","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::accumulate_vars","command collaborator"
"rule_manager","boundary","rule_manager::mk_rule","command collaborator"
"rule_manager","boundary","rule_manager::mk_negations","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::mk_rule_core","command collaborator"
"rule_manager","boundary","rule_manager::mk_horn_rule","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::extract_horn","non-void-command collaborator"
"rule_manager","boundary","rule_manager::hoist_compound_predicates","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::mk_query","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::bind_variables","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::flatten_body","command collaborator"
"rule_manager","boundary","rule_manager::hoist_compound","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::contains_predicate","predicate wrapper"
"rule_manager","boundary","rule_manager::is_forall","controller stateless"
"rule_manager","boundary","rule_manager::ensure_app","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::check_app","controller"
"rule_manager","boundary","rule_manager::mk","non-void-command factory collaborator"
"rule_manager","boundary","rule_manager::mk","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::mk","non-void-command factory collaborator"
"rule_manager","boundary","rule_manager::to_formula","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::display_smt2","property non-void-command collaborator"
"rule_manager","boundary","rule_manager::reduce_unbound_vars","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::fix_unbound_vars","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::mk_rule_rewrite_proof","command collaborator"
"rule_manager","boundary","rule_manager::mk_rule_asserted_proof","command collaborator"
"rule_manager","boundary","rule_manager::substitute","void-accessor command collaborator"
"rule_manager","boundary","rule_manager::check_valid_rule","collaborator"
"rule_manager","boundary","rule_manager::check_valid_head","collaborator"
"rule_manager","boundary","rule_manager::is_fact","predicate collaborator"
"rule_manager","boundary","rule_manager::has_uninterpreted_non_predicates","predicate collaborator"
"rule_manager","boundary","rule_manager::has_quantifiers","void-accessor"
"rule_manager","boundary","rule_manager::has_quantifiers","predicate collaborator"
"rule_manager","boundary","rule_manager::is_finite_domain","predicate collaborator"
"Z3_parser_context_ref","empty","Z3_parser_context_ref","constructor"
"pattern_inference_params","commander boundary small-class","pattern_inference_params","constructor"
"pattern_inference_params","commander boundary small-class","pattern_inference_params::updt_params","command collaborator"
"pattern_inference_params","commander boundary small-class","pattern_inference_params::display","wrapper"
"scoped_upolynomial_sequence","empty","scoped_upolynomial_sequence","constructor"
"scoped_upolynomial_sequence","empty","scoped_upolynomial_sequence::~scoped_upolynomial_sequence","destructor"
"smt2_printer","entity boundary","next_name","property non-void-command collaborator"
"smt2_printer","entity boundary","next_alias","property non-void-command collaborator"
"smt2_printer","entity boundary","register_alias","command collaborator"
"smt2_printer","entity boundary","push_frame","command"
"smt2_printer","entity boundary","pop_frame","command"
"smt2_printer","entity boundary","m","get collaborator"
"smt2_printer","entity boundary","fm","property collaborator"
"smt2_printer","entity boundary","ensure_quote_sym","wrapper stateless"
"smt2_printer","entity boundary","pp_var","command collaborator"
"smt2_printer","entity boundary","pp_attribute","property non-void-command collaborator"
"smt2_printer","entity boundary","pp_simple_attribute","property non-void-command collaborator"
"smt2_printer","entity boundary","pp_simple_attribute","property non-void-command collaborator"
"smt2_printer","entity boundary","pp_labels","property non-void-command collaborator"
"smt2_printer","entity boundary","pp_const","command collaborator"
"smt2_printer","entity boundary","pp_aliased","predicate non-void-command collaborator"
"smt2_printer","entity boundary","process_var","command collaborator"
"smt2_printer","entity boundary","process_args","predicate non-void-command collaborator"
"smt2_printer","entity boundary","store_result","command collaborator"
"smt2_printer","entity boundary","flat_assoc","predicate non-void-command collaborator"
"smt2_printer","entity boundary","process_app","command collaborator"
"smt2_printer","entity boundary","pp_let","property non-void-command collaborator"
"smt2_printer","entity boundary","pp_let","property non-void-command collaborator"
"smt2_printer","entity boundary","begin_scope","command"
"smt2_printer","entity boundary","end_scope","command"
"smt2_printer","entity boundary","register_var_names","command collaborator"
"smt2_printer","entity boundary","register_var_names","command collaborator"
"smt2_printer","entity boundary","unregister_var_names","command collaborator"
"smt2_printer","entity boundary","unregister_var_names","command collaborator"
"smt2_printer","entity boundary","pp_var_args","property non-void-command collaborator"
"smt2_printer","entity boundary","pp_var_decls","property non-void-command collaborator"
"smt2_printer","entity boundary","process_quantifier","void-accessor command collaborator"
"smt2_printer","entity boundary","init_expr2alias_stack","set collaborator"
"smt2_printer","entity boundary","del_expr2alias_stack","set"
"smt2_printer","entity boundary","reset_expr2alias_stack","set collaborator"
"smt2_printer","entity boundary","reset_stacks","command"
"smt2_printer","entity boundary","process","void-accessor command collaborator"
"smt2_printer","entity boundary","reset_var_names","command"
"smt2_printer","entity boundary","~smt2_printer","destructor"
"smt2_printer","entity boundary","operator()","command collaborator"
"smt2_printer","entity boundary","operator()","void-accessor command collaborator"
"smt2_printer","entity boundary","operator()","void-accessor command collaborator"
"smt2_printer","entity boundary","operator()","void-accessor command"
"smt2_printer","entity boundary","operator()","void-accessor command collaborator"
"smt2_printer","entity boundary","operator()","void-accessor command collaborator"
"ite_lst","empty","ite_lst","copy-constructor"
"bv_elim_cfg","entity boundary small-class","bv_elim_cfg","constructor"
"bv_elim_cfg","entity boundary small-class","bv_elim_cfg::reduce_quantifier","predicate non-void-command collaborator"
"mk_pp_vec","boundary small-class","mk_pp_vec","constructor"
"mk_pp_vec","boundary small-class","display","wrapper"
"mk_ll_pp","empty","mk_ll_pp","constructor"
"bv_rewriter_core","entity data-provider boundary","get_fid","property collaborator"
"bv_rewriter_core","entity data-provider boundary","is_numeral","predicate collaborator"
"bv_rewriter_core","entity data-provider boundary","is_numeral","predicate collaborator"
"bv_rewriter_core","entity data-provider boundary","is_zero","predicate collaborator"
"bv_rewriter_core","entity data-provider boundary","is_minus_one","predicate collaborator"
"bv_rewriter_core","entity data-provider boundary","normalize","void-accessor command collaborator"
"bv_rewriter_core","entity data-provider boundary","mk_numeral","property non-void-command collaborator"
"bv_rewriter_core","entity data-provider boundary","add_decl_kind","collaborator incidental"
"bv_rewriter_core","entity data-provider boundary","mul_decl_kind","collaborator incidental"
"bv_rewriter_core","entity data-provider boundary","use_power","incidental"
"bv_rewriter_core","entity data-provider boundary","mk_power","wrapper stateless"
"bv_rewriter_core","entity data-provider boundary","coerce","wrapper stateless"
"bv_rewriter_core","entity data-provider boundary","power_decl_kind","wrapper stateless"
"bv_rewriter_core","entity data-provider boundary","bv_rewriter_core","constructor"
"obj_ptr_triple_hash","pure-controller degenerate small-class","operator()","controller stateless"
"ddnf_mgr","boundary","~ddnf_mgr","destructor"
"ddnf_mgr","boundary","inc_ref","controller stateless"
"ddnf_mgr","boundary","dec_ref","controller stateless"
"ddnf_mgr","boundary","reset_accumulate","command"
"ddnf_mgr","boundary","accumulate","set collaborator"
"ddnf_mgr","boundary","insert","property non-void-command collaborator"
"ddnf_mgr","boundary","allocate","property non-void-command collaborator"
"ddnf_mgr","boundary","get_tbv_manager","get collaborator"
"ddnf_mgr","boundary","size","unclassified"
"ddnf_mgr","boundary","lookup","property non-void-command collaborator"
"ddnf_mgr","boundary","display_statistics","collaborator"
"ddnf_mgr","boundary","display","collaborator"
"ddnf_mgr","boundary","contains","predicate non-void-command collaborator"
"ddnf_mgr","boundary","well_formed","predicate non-void-command collaborator"
"ddnf_mgr","boundary","find","property non-void-command collaborator"
"ddnf_mgr","boundary","insert","command collaborator"
"ddnf_mgr","boundary","internalize","command collaborator"
"ddnf_mgr","boundary","add_table","controller stateless"
"pb_sls","entity commander boundary","pb_sls::pb_sls","constructor"
"pb_sls","entity commander boundary","pb_sls::~pb_sls","destructor"
"pb_sls","entity commander boundary","pb_sls::add","command collaborator"
"pb_sls","entity commander boundary","pb_sls::add","command collaborator"
"pb_sls","entity commander boundary","pb_sls::set_model","command collaborator"
"pb_sls","entity commander boundary","pb_sls::operator()","wrapper stateless"
"pb_sls","entity commander boundary","pb_sls::collect_statistics","collaborator"
"pb_sls","entity commander boundary","pb_sls::get_model","command collaborator"
"pb_sls","entity commander boundary","pb_sls::reset","command"
"pb_sls","entity commander boundary","pb_sls::soft_holds","predicate non-void-command"
"pb_sls","entity commander boundary","pb_sls::updt_params","command collaborator"
"ast_lt","pure-controller degenerate small-class","operator()","controller stateless"
"declare_map_cmd","entity commander boundary","declare_map_cmd","constructor"
"declare_map_cmd","entity commander boundary","get_array_fid","get set collaborator"
"declare_map_cmd","entity commander boundary","get_usage","incidental"
"declare_map_cmd","entity commander boundary","get_descr","collaborator incidental"
"declare_map_cmd","entity commander boundary","get_arity","incidental"
"declare_map_cmd","entity commander boundary","prepare","set collaborator"
"declare_map_cmd","entity commander boundary","next_arg_kind","property collaborator"
"declare_map_cmd","entity commander boundary","set_next_arg","set collaborator"
"declare_map_cmd","entity commander boundary","set_next_arg","command collaborator"
"declare_map_cmd","entity commander boundary","set_next_arg","set collaborator"
"declare_map_cmd","entity commander boundary","reset","set collaborator"
"declare_map_cmd","entity commander boundary","execute","command collaborator"
"peq","boundary","lhs","get collaborator"
"peq","boundary","rhs","get collaborator"
"peq","boundary","get_diff_indices","controller"
"peq","boundary","peq::mk_eq","get non-void-command collaborator"
"peq","boundary","peq::mk_peq","get set collaborator"
"peq","boundary","peq::peq","constructor"
"peq","boundary","peq::peq","constructor"
"peq","boundary","peq::peq","constructor"
"peq","boundary","peq::peq","constructor"
"peq","boundary","peq::lhs","void-accessor collaborator"
"peq","boundary","peq::rhs","void-accessor collaborator"
"peq","boundary","peq::get_diff_indices","command collaborator"
"peq","boundary","peq::mk_peq","void-accessor command collaborator"
"peq","boundary","peq::mk_eq","void-accessor command collaborator"
"pattern_inference_rw","empty","pattern_inference_rw::pattern_inference_rw","constructor"
"rewriter_core","commander boundary","must_cache","predicate controller"
"rewriter_core","commander boundary","push_frame_core","command"
"rewriter_core","commander boundary","push_frame","command"
"rewriter_core","commander boundary","cache_result","command collaborator"
"rewriter_core","commander boundary","get_cached","property collaborator"
"rewriter_core","commander boundary","get_cached","property collaborator"
"rewriter_core","commander boundary","get_cached_pr","property collaborator"
"rewriter_core","commander boundary","set_new_child_flag","command collaborator"
"rewriter_core","commander boundary","set_new_child_flag","command collaborator"
"rewriter_core","commander boundary","block","command collaborator"
"rewriter_core","commander boundary","is_blocked","predicate collaborator"
"rewriter_core","commander boundary","m","get collaborator"
"rewriter_core","commander boundary","set_cancel_check","set"
"rewriter_core","commander boundary","rewriter_core::init_cache_stack","command"
"rewriter_core","commander boundary","rewriter_core::del_cache_stack","command"
"rewriter_core","commander boundary","rewriter_core::rewrites_from","predicate non-void-command collaborator"
"rewriter_core","commander boundary","rewriter_core::rewrites_to","predicate non-void-command collaborator"
"rewriter_core","commander boundary","rewriter_core::cache_shifted_result","command collaborator"
"rewriter_core","commander boundary","rewriter_core::cache_result","command collaborator"
"rewriter_core","commander boundary","rewriter_core::get_cache_size","unclassified"
"rewriter_core","commander boundary","rewriter_core::reset_cache","command"
"rewriter_core","commander boundary","rewriter_core::free_memory","command"
"rewriter_core","commander boundary","rewriter_core::begin_scope","command"
"rewriter_core","commander boundary","rewriter_core::end_scope","command"
"rewriter_core","commander boundary","rewriter_core::is_child_of_top_frame","predicate collaborator"
"rewriter_core","commander boundary","rewriter_core::elim_reflex_prs","command collaborator"
"rewriter_core","commander boundary","rewriter_core::rewriter_core","constructor"
"rewriter_core","commander boundary","rewriter_core::~rewriter_core","destructor"
"rewriter_core","commander boundary","rewriter_core::reset","command"
"rewriter_core","commander boundary","rewriter_core::cleanup","command"
"rewriter_core","commander boundary","rewriter_core::display_stack","command collaborator"
"param_descrs","unclassified","param_descrs","copy-constructor"
"param_descrs","unclassified","param_descrs","copy-constructor"
"param_descrs","unclassified","operator=","get set"
"param_descrs","unclassified","~param_descrs","destructor"
"param_descrs","unclassified","size","non-void-command"
"param_descrs","unclassified","name","property non-void-command collaborator"
"param_descrs","unclassified","kind","property non-void-command collaborator"
"param_descrs","unclassified","documentation","property non-void-command collaborator"
"param_descrs","unclassified","to_string","property"
"param_descrs","unclassified","param_descrs::param_descrs","constructor"
"param_descrs","unclassified","param_descrs::~param_descrs","destructor"
"param_descrs","unclassified","param_descrs::copy","command"
"param_descrs","unclassified","param_descrs::insert","command"
"param_descrs","unclassified","param_descrs::insert","command"
"param_descrs","unclassified","param_descrs::contains","predicate"
"param_descrs","unclassified","param_descrs::contains","predicate collaborator"
"param_descrs","unclassified","param_descrs::get_descr","property"
"param_descrs","unclassified","param_descrs::get_descr","property collaborator"
"param_descrs","unclassified","param_descrs::get_default","property"
"param_descrs","unclassified","param_descrs::get_default","property collaborator"
"param_descrs","unclassified","param_descrs::erase","command collaborator"
"param_descrs","unclassified","param_descrs::erase","command"
"param_descrs","unclassified","param_descrs::get_kind_in_module","property collaborator"
"param_descrs","unclassified","param_descrs::get_kind","property collaborator"
"param_descrs","unclassified","param_descrs::get_kind","property collaborator"
"param_descrs","unclassified","param_descrs::size","unclassified"
"param_descrs","unclassified","param_descrs::get_param_name","property collaborator"
"param_descrs","unclassified","param_descrs::get_module","property collaborator"
"param_descrs","unclassified","param_descrs::display","unclassified"
"param_descrs","unclassified","param_descrs::display_markdown","unclassified"
"lackr_stats","commander small-class","lackr_stats","constructor"
"lackr_stats","commander small-class","reset","command"
"lackr_model_constructor","boundary","get_conflicts","get wrapper"
"lackr_model_constructor","boundary","inc_ref","set"
"lackr_model_constructor","boundary","dec_ref","set"
"lackr_model_constructor","boundary","lackr_model_constructor::lackr_model_constructor","constructor"
"lackr_model_constructor","boundary","lackr_model_constructor::~lackr_model_constructor","destructor"
"lackr_model_constructor","boundary","lackr_model_constructor::check","predicate non-void-command collaborator"
"lackr_model_constructor","boundary","lackr_model_constructor::make_model","command collaborator"
"value","data-provider boundary data-class","value","constructor"
"value","data-provider boundary data-class","is_rational","get"
"value","data-provider boundary data-class","interval","get collaborator"
"value","data-provider boundary data-class","interval","get collaborator"
"scoped_mark","commander","scoped_mark","constructor"
"scoped_mark","commander","scoped_mark::mark","command"
"scoped_mark","commander","scoped_mark::mark","command collaborator"
"scoped_mark","commander","scoped_mark::reset","command"
"scoped_mark","commander","scoped_mark::push_scope","command"
"scoped_mark","commander","scoped_mark::pop_scope","command"
"scoped_mark","commander","scoped_mark::pop_scope","command"
"ll_printer","commander boundary","display_def_header","controller"
"ll_printer","commander boundary","display_child_ref","controller"
"ll_printer","commander boundary","display_name","controller"
"ll_printer","commander boundary","process_numeral","predicate non-void-command collaborator"
"ll_printer","commander boundary","display_sort","command collaborator"
"ll_printer","commander boundary","display_child","command collaborator"
"ll_printer","commander boundary","display_children","command collaborator"
"ll_printer","commander boundary","display_params","command collaborator"
"ll_printer","commander boundary","ll_printer","constructor"
"ll_printer","commander boundary","pp","command collaborator"
"ll_printer","commander boundary","pp","command collaborator"
"ll_printer","commander boundary","operator()","empty"
"ll_printer","commander boundary","operator()","command collaborator"
"ll_printer","commander boundary","operator()","command collaborator"
"ll_printer","commander boundary","operator()","command collaborator"
"ll_printer","commander boundary","display_quantifier_header","command collaborator"
"ll_printer","commander boundary","operator()","command collaborator"
"ll_printer","commander boundary","display","command"
"ll_printer","commander boundary","display_bounded","command"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_fdecl_name","controller stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_fdecl_name","property collaborator"
"smt2_pp_environment","degenerate","smt2_pp_environment::is_indexed_fdecl","controller stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::is_sort_param","controller stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_as","wrapper stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_fdecl_params","property non-void-command collaborator"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_fdecl","property non-void-command collaborator"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_signature","property non-void-command collaborator"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_fdecl_ref","property non-void-command collaborator"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_bv_literal","controller stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_float_literal","property non-void-command collaborator"
"smt2_pp_environment","degenerate","smt2_pp_environment::mk_neg","wrapper stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::mk_float","controller stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_arith_literal","property non-void-command collaborator"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_string_literal","controller stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_datalog_literal","wrapper stateless"
"smt2_pp_environment","degenerate","smt2_pp_environment::pp_sort","property non-void-command collaborator"
"util","boundary","get_def","property non-void-command collaborator"
"util","boundary","datatype_name","controller stateless"
"util","boundary","get_manager","get collaborator"
"util","boundary","is_datatype","predicate collaborator"
"util","boundary","is_constructor","predicate collaborator"
"util","boundary","is_recognizer","predicate collaborator"
"util","boundary","is_recognizer0","predicate collaborator"
"util","boundary","is_is","predicate collaborator"
"util","boundary","is_accessor","predicate collaborator"
"util","boundary","is_update_field","predicate collaborator"
"util","boundary","is_constructor","predicate collaborator"
"util","boundary","is_constructor","predicate collaborator"
"util","boundary","is_recognizer0","predicate collaborator"
"util","boundary","is_is","predicate collaborator"
"util","boundary","is_is","predicate collaborator"
"util","boundary","is_recognizer","predicate collaborator"
"util","boundary","is_accessor","predicate collaborator"
"util","boundary","is_update_field","predicate collaborator"
"util","boundary","has_nested_rec","predicate"
"util","boundary","get_family_id","property collaborator"
"util","boundary","util","constructor"
"util","boundary","m","get collaborator"
"util","boundary","get_family_id","get collaborator"
"util","boundary","get_plugin","get collaborator"
"util","boundary","is_case_pred","predicate wrapper"
"util","boundary","is_defined","predicate wrapper"
"util","boundary","is_defined","predicate wrapper"
"util","boundary","is_generated","predicate collaborator"
"util","boundary","is_macro","predicate non-void-command collaborator"
"util","boundary","is_num_rounds","predicate wrapper"
"util","boundary","owns_app","predicate controller"
"util","boundary","has_defs","predicate"
"util","boundary","has_rec_defs","predicate"
"util","boundary","has_def","predicate collaborator"
"util","boundary","get_def","property non-void-command collaborator"
"util","boundary","get_case_def","property non-void-command collaborator"
"util","boundary","mk_fun_defined","property non-void-command collaborator"
"util","boundary","mk_fun_defined","property non-void-command collaborator"
"util","boundary","mk_fun_defined","property non-void-command collaborator"
"util","boundary","get_rec_funs","property non-void-command collaborator"
"util","boundary","util::datatype_params","property collaborator"
"util","boundary","util::is_considered_uninterpreted","predicate non-void-command collaborator"
"util","boundary","util::is_fully_interp","predicate collaborator"
"util","boundary","util::is_recursive_core","predicate collaborator"
"util","boundary","util::get_datatype_num_parameter_sorts","controller stateless"
"util","boundary","util::get_datatype_parameter_sort","property non-void-command collaborator"
"util","boundary","util::get_sort_size","property non-void-command collaborator"
"util","boundary","util::is_declared","predicate collaborator"
"util","boundary","util::is_declared","predicate collaborator"
"util","boundary","util::compute_datatype_size_functions","command collaborator"
"util","boundary","util::is_well_founded","predicate non-void-command collaborator"
"util","boundary","util::is_covariant","predicate collaborator"
"util","boundary","util::is_covariant","predicate collaborator"
"util","boundary","util::get_def","property collaborator"
"util","boundary","util::get_subsorts","collaborator"
"util","boundary","util::util","constructor"
"util","boundary","util::plugin","get collaborator"
"util","boundary","util::fid","get set collaborator"
"util","boundary","util::~util","destructor"
"util","boundary","util::get_datatype_constructors","property non-void-command collaborator"
"util","boundary","util::get_constructor_accessors","property non-void-command collaborator"
"util","boundary","util::get_constructor_is","property non-void-command collaborator"
"util","boundary","util::get_constructor_recognizer","property non-void-command collaborator"
"util","boundary","util::mk_is","property non-void-command collaborator"
"util","boundary","util::get_recognizer_constructor","property collaborator"
"util","boundary","util::get_update_accessor","property collaborator"
"util","boundary","util::is_recursive","predicate non-void-command collaborator"
"util","boundary","util::is_recursive_nested","predicate non-void-command collaborator"
"util","boundary","util::is_enum_sort","predicate non-void-command collaborator"
"util","boundary","util::get_accessor_constructor","property non-void-command collaborator"
"util","boundary","util::reset","command"
"util","boundary","util::get_non_rec_constructor","property non-void-command collaborator"
"util","boundary","util::get_non_rec_constructor_core","property non-void-command collaborator"
"util","boundary","util::get_constructor_idx","collaborator"
"util","boundary","util::get_recognizer_constructor_idx","collaborator"
"util","boundary","util::are_siblings","predicate non-void-command collaborator"
"util","boundary","util::get_datatype_num_constructors","non-void-command collaborator"
"util","boundary","util::get_defs","command collaborator"
"util","boundary","util::display_datatype","command collaborator"
"util","boundary","util::mk_list_datatype","property non-void-command collaborator"
"util","boundary","util::mk_pair_datatype","property non-void-command collaborator"
"util","boundary","util::mk_tuple_datatype","property non-void-command collaborator"
"util","boundary","util::unify","controller stateless"
"util","boundary","util::unify","predicate non-void-command collaborator"
"util","boundary","util::unify","controller stateless"
"util","boundary","util::match","controller stateless"
"util","boundary","util::fresh","property non-void-command collaborator"
"util","boundary","util::fresh","property non-void-command collaborator"
"util","boundary","util::collect_poly_instances","command collaborator"
"util","boundary","util::has_type_vars","predicate non-void-command collaborator"
"util","boundary","util::collect_type_vars","command collaborator"
"util","boundary","util::contains_def","predicate non-void-command collaborator"
"util","boundary","util::util","constructor"
"util","boundary","util::~util","destructor"
"util","boundary","util::decl_fun","property non-void-command collaborator"
"util","boundary","util::set_definition","command collaborator"
"util","boundary","util::mk_num_rounds_pred","property non-void-command collaborator"
"util","boundary","util::util","constructor"
"util","boundary","util::~util","destructor"
"util","boundary","util::create_branches","predicate non-void-command collaborator"
"util","boundary","util::set_enable_linear","command"
"util","boundary","util::extract_non_linear","command collaborator"
"util","boundary","util::deallocate","wrapper stateless"
"util","boundary","util::get_sign_literals","predicate non-void-command collaborator"
"util","boundary","util::get_sign_branches","command collaborator"
"ast_mark","unclassified","ast_mark::is_marked","predicate collaborator"
"ast_mark","unclassified","ast_mark::mark","command"
"ast_mark","unclassified","ast_mark::reset","command"
"value_sweep","entity boundary","set_rounds","set"
"value_sweep","entity boundary","set_range","set"
"value_sweep","entity boundary","value_sweep::value_sweep","constructor"
"value_sweep","entity boundary","value_sweep::set_value_core","set collaborator"
"value_sweep","entity boundary","value_sweep::set_value","command collaborator"
"value_sweep","entity boundary","value_sweep::reset_values","command"
"value_sweep","entity boundary","value_sweep::get_value","get property collaborator"
"value_sweep","entity boundary","value_sweep::unassign","command collaborator"
"value_sweep","entity boundary","value_sweep::assign_next_value","predicate non-void-command collaborator"
"value_sweep","entity boundary","value_sweep::is_reducible","predicate collaborator"
"value_sweep","entity boundary","value_sweep::all_args_have_values","predicate collaborator"
"value_sweep","entity boundary","value_sweep::propagate_values","command collaborator"
"value_sweep","entity boundary","value_sweep::init","command collaborator"
"value_sweep","entity boundary","value_sweep::operator()","command collaborator"
"breadth_first_node_selector","boundary degenerate small-class","breadth_first_node_selector","constructor"
"breadth_first_node_selector","boundary degenerate small-class","operator()","collaborator incidental"
"solver_exception","empty","solver_exception","constructor"
"ast_ref_fast_mark","entity commander boundary","ast_ref_fast_mark","constructor"
"ast_ref_fast_mark","entity commander boundary","~ast_ref_fast_mark","destructor"
"ast_ref_fast_mark","entity commander boundary","is_marked","predicate wrapper"
"ast_ref_fast_mark","entity commander boundary","reset_mark","wrapper"
"ast_ref_fast_mark","entity commander boundary","mark","command collaborator"
"ast_ref_fast_mark","entity commander boundary","reset","command collaborator"
"ast_ref_fast_mark","entity commander boundary","mark","command"
"model_value_decl_plugin","entity data-provider boundary","mk_fresh","wrapper stateless"
"model_value_decl_plugin","entity data-provider boundary","model_value_decl_plugin::mk_sort","wrapper stateless"
"model_value_decl_plugin","entity data-provider boundary","model_value_decl_plugin::mk_func_decl","property non-void-command collaborator"
"model_value_decl_plugin","entity data-provider boundary","model_value_decl_plugin::is_value","predicate wrapper"
"model_value_decl_plugin","entity data-provider boundary","model_value_decl_plugin::is_unique_value","predicate collaborator"
"eq_conflict_justification","unclassified","eq_conflict_justification","constructor"
"eq_conflict_justification","unclassified","get_name","incidental"
"eq_conflict_justification","unclassified","eq_conflict_justification::get_antecedents","controller"
"eq_conflict_justification","unclassified","eq_conflict_justification::mk_proof","property controller"
"pattern_decl_plugin","entity boundary degenerate","mk_fresh","wrapper stateless"
"pattern_decl_plugin","entity boundary degenerate","pattern_decl_plugin::mk_sort","wrapper stateless"
"pattern_decl_plugin","entity boundary degenerate","pattern_decl_plugin::mk_func_decl","property non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::monomial_bounds","constructor"
"monomial_bounds","entity boundary","monomial_bounds::propagate","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::is_too_big","wrapper stateless"
"monomial_bounds","entity boundary","monomial_bounds::compute_product","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::propagate_value","predicate non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::should_propagate_lower","predicate non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::should_propagate_upper","predicate non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::propagate_bound","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::propagate_value","predicate non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::var2interval","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::propagate","predicate non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::propagate_down","predicate non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::is_free","predicate collaborator"
"monomial_bounds","entity boundary","monomial_bounds::is_zero","predicate collaborator"
"monomial_bounds","entity boundary","monomial_bounds::analyze_monomial","void-accessor collaborator"
"monomial_bounds","entity boundary","monomial_bounds::unit_propagate","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::add_lemma","predicate non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::unit_propagate","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::get_explanation","property non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::propagate_fixed_to_zero","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::propagate_fixed","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::propagate_nonfixed","command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::explain_fixed","property non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::is_linear","predicate non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::fixed_var_product","property non-void-command collaborator"
"monomial_bounds","entity boundary","monomial_bounds::non_fixed_var","property non-void-command collaborator"
"dl_rewriter","entity boundary small-class","dl_rewriter","constructor"
"dl_rewriter","entity boundary small-class","get_fid","property collaborator"
"dl_rewriter","entity boundary small-class","dl_rewriter::mk_app_core","property non-void-command collaborator"
"ref_manager_wrapper","commander boundary small-class","ref_manager_wrapper","constructor"
"ref_manager_wrapper","commander boundary small-class","inc_ref","command collaborator"
"ref_manager_wrapper","commander boundary small-class","dec_ref","command collaborator"
"largest_interval_var_selector","entity boundary small-class","largest_interval_var_selector","constructor"
"largest_interval_var_selector","entity boundary small-class","operator()","property non-void-command collaborator"
"dt_solve_plugin","entity boundary small-class","dt_solve_plugin","constructor"
"dt_solve_plugin","entity boundary small-class","solve","property non-void-command collaborator"
"cmd_is_declared","data-provider boundary small-class","cmd_is_declared","constructor"
"cmd_is_declared","data-provider boundary small-class","operator()","predicate collaborator"
"cmd_is_declared","data-provider boundary small-class","operator()","predicate collaborator"
"RealExpr","empty","RealExpr","constructor"
"ast_table","entity boundary data-class small-class","ast_table","constructor"
"ast_table","entity boundary data-class small-class","ast_table::push_erase","command collaborator"
"ast_table","entity boundary data-class small-class","ast_table::pop_erase","get property set collaborator"
"svector_hash_proc","boundary degenerate small-class","operator()","wrapper stateless"
"upolynomial_exception","empty","upolynomial_exception","constructor"
"demodulator_simplifier","entity commander boundary","fml","get non-void-command collaborator"
"demodulator_simplifier","entity commander boundary","dep","get non-void-command collaborator"
"demodulator_simplifier","entity commander boundary","name","incidental"
"demodulator_simplifier","entity commander boundary","demodulator_simplifier::demodulator_simplifier","constructor"
"demodulator_simplifier","entity commander boundary","demodulator_simplifier::rewrite","command"
"demodulator_simplifier","entity commander boundary","demodulator_simplifier::rewrite1","predicate non-void-command collaborator"
"demodulator_simplifier","entity commander boundary","demodulator_simplifier::reschedule_processed","command collaborator"
"demodulator_simplifier","entity commander boundary","demodulator_simplifier::reschedule_demodulators","command collaborator"
"demodulator_simplifier","entity commander boundary","demodulator_simplifier::reset","command"
"demodulator_simplifier","entity commander boundary","demodulator_simplifier::reduce","command collaborator"
"name_exprs_core","commander small-class","operator()","command collaborator"
"name_exprs_core","commander small-class","reset","command"
"interval_relation_plugin::union_fn","pure-controller small-class","operator()","controller"
"set_option_cmd","commander boundary","to_bool","predicate wrapper"
"set_option_cmd","commander boundary","set_param","controller"
"set_option_cmd","commander boundary","set_symbol","command collaborator"
"set_option_cmd","commander boundary","set_option_cmd","constructor"
"set_option_cmd","commander boundary","get_usage","incidental"
"set_option_cmd","commander boundary","get_descr","collaborator incidental"
"set_option_cmd","commander boundary","get_arity","incidental"
"set_option_cmd","commander boundary","prepare","command collaborator"
"set_option_cmd","commander boundary","next_arg_kind","property collaborator"
"set_option_cmd","commander boundary","set_next_arg","set collaborator"
"set_option_cmd","commander boundary","set_next_arg","command collaborator"
"set_option_cmd","commander boundary","set_next_arg","command"
"set_option_cmd","commander boundary","execute","controller"
"pp_emons","data-provider boundary small-class","pp_emons","constructor"
"pp_emons","data-provider boundary small-class","display","property collaborator"
"mk_backwards","entity boundary small-class","mk_backwards::mk_backwards","constructor"
"mk_backwards","entity boundary small-class","mk_backwards::~mk_backwards","destructor"
"mk_backwards","entity boundary small-class","mk_backwards::operator()","property non-void-command collaborator"
"fail_if_tactic","lazy-class degenerate","fail_if_tactic","constructor"
"fail_if_tactic","lazy-class degenerate","name","incidental"
"fail_if_tactic","lazy-class degenerate","cleanup","empty"
"fail_if_tactic","lazy-class degenerate","operator()","command collaborator"
"fail_if_tactic","lazy-class degenerate","translate","get collaborator"
"fail_if_tactic","lazy-class degenerate","collect_statistics","empty"
"concat_dependency_converter","pure-controller degenerate","concat_dependency_converter","constructor"
"concat_dependency_converter","pure-controller degenerate","operator()","controller stateless"
"concat_dependency_converter","pure-controller degenerate","translate","controller stateless"
"concat_dependency_converter","pure-controller degenerate","display","controller stateless"
"decl_info","data-provider boundary","get_family_id","get collaborator"
"decl_info","data-provider boundary","get_decl_kind","get collaborator"
"decl_info","data-provider boundary","is_decl_of","predicate collaborator"
"decl_info","data-provider boundary","get_num_parameters","unclassified"
"decl_info","data-provider boundary","get_parameter","get collaborator"
"decl_info","data-provider boundary","get_parameters","property collaborator"
"decl_info","data-provider boundary","private_parameters","get"
"decl_info","data-provider boundary","parameters","property wrapper"
"decl_info","data-provider boundary","decl_info::decl_info","constructor"
"decl_info","data-provider boundary","decl_info::init_eh","controller"
"decl_info","data-provider boundary","decl_info::del_eh","controller"
"decl_info","data-provider boundary","decl_info::hash","unclassified"
"decl_info","data-provider boundary","decl_info::operator==","predicate"
"stacked_vector","unclassified","now","unclassified"
"stacked_vector","unclassified","emplace_replace","command collaborator"
"stacked_vector","unclassified","operator[]","property wrapper"
"stacked_vector","unclassified","operator[]","property wrapper"
"stacked_vector","unclassified","size","unclassified"
"stacked_vector","unclassified","push","command"
"stacked_vector","unclassified","pop","command"
"stacked_vector","unclassified","pop_tail","controller stateless"
"stacked_vector","unclassified","resize","controller stateless"
"stacked_vector","unclassified","pop","command"
"stacked_vector","unclassified","push_back","command collaborator"
"stacked_vector","unclassified","increase_size_by_one","command"
"stacked_vector","unclassified","peek_size","get"
"stacked_vector","unclassified","operator()","get collaborator"
"join_planner","boundary","~join_planner","destructor"
"join_planner","boundary","get_normalizer","void-accessor collaborator"
"join_planner","boundary","get_normalizer","property collaborator"
"join_planner","boundary","get_key","property non-void-command collaborator"
"join_planner","boundary","register_pair","command collaborator"
"join_planner","boundary","remove_rule_from_pair","command collaborator"
"join_planner","boundary","register_rule","command collaborator"
"join_planner","boundary","extract_argument_info","controller stateless"
"join_planner","boundary","join_pair","command collaborator"
"join_planner","boundary","replace_edges","command collaborator"
"join_planner","boundary","apply_binary_rule","command collaborator"
"join_planner","boundary","get_domain_size","property collaborator"
"join_planner","boundary","get_domain_size","property collaborator"
"join_planner","boundary","get_stratum","collaborator"
"join_planner","boundary","estimate_size","property collaborator"
"join_planner","boundary","compute_cost","property collaborator"
"join_planner","boundary","pick_best_pair","predicate controller"
"join_planner","boundary","run","property non-void-command collaborator"
"product_relation_plugin::filter_interpreted_fn","commander boundary small-class","~filter_interpreted_fn","destructor"
"product_relation_plugin::filter_interpreted_fn","commander boundary small-class","operator()","command collaborator"
"cross_nested","entity boundary","get_nex_creator","get collaborator"
"cross_nested","entity boundary","cross_nested","constructor"
"cross_nested","entity boundary","run","command collaborator"
"cross_nested","entity boundary","extract_common_factor","property non-void-command collaborator"
"cross_nested","entity boundary","proceed_with_common_factor","predicate non-void-command collaborator"
"cross_nested","entity boundary","pop_allocated","command"
"cross_nested","entity boundary","explore_expr_on_front_elem_vars","void-accessor command collaborator"
"cross_nested","entity boundary","calc_occurences","command collaborator"
"cross_nested","entity boundary","fill_vars_from_occurences_map","command collaborator"
"ast_exception","empty","ast_exception","constructor"
"obj_pair_map","entity data-provider boundary","find_core","property collaborator"
"obj_pair_map","entity data-provider boundary","reset","command"
"obj_pair_map","entity data-provider boundary","empty","predicate"
"obj_pair_map","entity data-provider boundary","size","unclassified"
"obj_pair_map","entity data-provider boundary","capacity","unclassified"
"obj_pair_map","entity data-provider boundary","begin","property collaborator"
"obj_pair_map","entity data-provider boundary","end","property collaborator"
"obj_pair_map","entity data-provider boundary","insert","command collaborator"
"obj_pair_map","entity data-provider boundary","insert_if_not_there","property non-void-command collaborator"
"obj_pair_map","entity data-provider boundary","find","predicate collaborator"
"obj_pair_map","entity data-provider boundary","find","property collaborator"
"obj_pair_map","entity data-provider boundary","operator[]","property collaborator"
"obj_pair_map","entity data-provider boundary","contains","predicate collaborator"
"obj_pair_map","entity data-provider boundary","contains","predicate collaborator"
"obj_pair_map","entity data-provider boundary","erase","command collaborator"
"pb_factory","entity boundary","pb_factory","constructor"
"pb_factory","entity boundary","get_some_value","property non-void-command collaborator"
"pb_factory","entity boundary","get_some_values","predicate non-void-command collaborator"
"pb_factory","entity boundary","get_fresh_value","collaborator incidental"
"pb_factory","entity boundary","register_value","empty"
"var_shifter","entity commander boundary","var_shifter","constructor"
"var_shifter","entity commander boundary","operator()","command collaborator"
"var_shifter","entity commander boundary","var_shifter::operator()","void-accessor command collaborator"
"var_shifter","entity commander boundary","var_shifter::process_var","command collaborator"
"RealSort","empty","RealSort","constructor"
"RealSort","empty","RealSort","constructor"
"display_var_proc","boundary degenerate small-class","operator()","collaborator incidental"
"display_var_proc","boundary degenerate small-class","operator()","collaborator incidental"
"nex_var","data-provider boundary degenerate","nex_var","constructor"
"nex_var","data-provider boundary degenerate","var","get collaborator"
"nex_var","data-provider boundary degenerate","print","property collaborator"
"nex_var","data-provider boundary degenerate","type","collaborator incidental"
"nex_var","data-provider boundary degenerate","number_of_child_powers","incidental"
"nex_var","data-provider boundary degenerate","contains","predicate collaborator"
"nex_var","data-provider boundary degenerate","get_degree","incidental"
"nex_var","data-provider boundary degenerate","is_linear","incidental"
"arith_util","entity boundary","get_manager","get collaborator"
"arith_util","entity boundary","plugin","get collaborator"
"arith_util","entity boundary","am","property collaborator"
"arith_util","entity boundary","is_zero","predicate collaborator"
"arith_util","entity boundary","is_one","predicate collaborator"
"arith_util","entity boundary","is_minus_one","predicate collaborator"
"arith_util","entity boundary","is_times_minus_one","predicate collaborator"
"arith_util","entity boundary","is_unsigned","predicate"
"arith_util","entity boundary","is_numeral","predicate collaborator"
"arith_util","entity boundary","is_numeral","predicate collaborator"
"arith_util","entity boundary","convert_int_numerals_to_real","predicate"
"arith_util","entity boundary","mk_int","property non-void-command collaborator"
"arith_util","entity boundary","mk_real","property non-void-command collaborator"
"arith_util","entity boundary","mk_numeral","property collaborator"
"arith_util","entity boundary","mk_numeral","property collaborator"
"arith_util","entity boundary","mk_numeral","property non-void-command collaborator"
"arith_util","entity boundary","mk_numeral","property non-void-command collaborator"
"arith_util","entity boundary","mk_int","property non-void-command collaborator"
"arith_util","entity boundary","mk_int","property non-void-command collaborator"
"arith_util","entity boundary","mk_int","property non-void-command collaborator"
"arith_util","entity boundary","mk_real","property non-void-command collaborator"
"arith_util","entity boundary","mk_real","property non-void-command collaborator"
"arith_util","entity boundary","mk_le","property collaborator"
"arith_util","entity boundary","mk_ge","property collaborator"
"arith_util","entity boundary","mk_lt","property collaborator"
"arith_util","entity boundary","mk_gt","property collaborator"
"arith_util","entity boundary","mk_divides","property non-void-command collaborator"
"arith_util","entity boundary","mk_add","property collaborator"
"arith_util","entity boundary","mk_add","property collaborator"
"arith_util","entity boundary","mk_add","property collaborator"
"arith_util","entity boundary","mk_add","property collaborator"
"arith_util","entity boundary","mk_add","property collaborator"
"arith_util","entity boundary","mk_add","property collaborator"
"arith_util","entity boundary","mk_add","property collaborator"
"arith_util","entity boundary","mk_sub","property collaborator"
"arith_util","entity boundary","mk_sub","property collaborator"
"arith_util","entity boundary","mk_mul","property collaborator"
"arith_util","entity boundary","mk_mul","property collaborator"
"arith_util","entity boundary","mk_mul","property collaborator"
"arith_util","entity boundary","mk_mul","property collaborator"
"arith_util","entity boundary","mk_mul","property collaborator"
"arith_util","entity boundary","mk_mul","property collaborator"
"arith_util","entity boundary","mk_uminus","property collaborator"
"arith_util","entity boundary","mk_div","property non-void-command collaborator"
"arith_util","entity boundary","mk_idiv","property non-void-command collaborator"
"arith_util","entity boundary","mk_rem","property non-void-command collaborator"
"arith_util","entity boundary","mk_mod","property non-void-command collaborator"
"arith_util","entity boundary","mk_div0","property non-void-command collaborator"
"arith_util","entity boundary","mk_idiv0","property non-void-command collaborator"
"arith_util","entity boundary","mk_rem0","property non-void-command collaborator"
"arith_util","entity boundary","mk_mod0","property non-void-command collaborator"
"arith_util","entity boundary","mk_to_real","property non-void-command collaborator"
"arith_util","entity boundary","mk_to_int","property non-void-command collaborator"
"arith_util","entity boundary","mk_is_int","property non-void-command collaborator"
"arith_util","entity boundary","mk_power","property non-void-command collaborator"
"arith_util","entity boundary","mk_power0","property non-void-command collaborator"
"arith_util","entity boundary","mk_band","property non-void-command collaborator"
"arith_util","entity boundary","mk_shl","property non-void-command collaborator"
"arith_util","entity boundary","mk_ashr","property non-void-command collaborator"
"arith_util","entity boundary","mk_lshr","property non-void-command collaborator"
"arith_util","entity boundary","mk_sin","property non-void-command collaborator"
"arith_util","entity boundary","mk_cos","property non-void-command collaborator"
"arith_util","entity boundary","mk_tan","property non-void-command collaborator"
"arith_util","entity boundary","mk_asin","property non-void-command collaborator"
"arith_util","entity boundary","mk_acos","property non-void-command collaborator"
"arith_util","entity boundary","mk_atan","property non-void-command collaborator"
"arith_util","entity boundary","mk_sinh","property non-void-command collaborator"
"arith_util","entity boundary","mk_cosh","property non-void-command collaborator"
"arith_util","entity boundary","mk_tanh","property non-void-command collaborator"
"arith_util","entity boundary","mk_asinh","property non-void-command collaborator"
"arith_util","entity boundary","mk_acosh","property non-void-command collaborator"
"arith_util","entity boundary","mk_atanh","property non-void-command collaborator"
"arith_util","entity boundary","mk_pi","property non-void-command collaborator"
"arith_util","entity boundary","mk_e","property non-void-command collaborator"
"arith_util","entity boundary","mk_neg_root","property non-void-command collaborator"
"arith_util","entity boundary","mk_u_asin","property non-void-command collaborator"
"arith_util","entity boundary","mk_u_acos","property non-void-command collaborator"
"arith_util","entity boundary","mk_eq","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::is_numeral","predicate collaborator"
"arith_util","entity boundary","arith_util::arith_util","constructor"
"arith_util","entity boundary","arith_util::init_plugin","set"
"arith_util","entity boundary","arith_util::is_irrational_algebraic_numeral2","predicate collaborator"
"arith_util","entity boundary","arith_util::to_irrational_algebraic_numeral","property collaborator"
"arith_util","entity boundary","arith_util::mk_mul_simplify","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_mul_simplify","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_add_simplify","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_add_simplify","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::is_considered_partially_interpreted","predicate non-void-command collaborator"
"arith_util","entity boundary","arith_util::is_considered_uninterpreted","predicate non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_ipower0","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_rpower0","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_div0","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_idiv0","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_rem0","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::mk_mod0","property non-void-command collaborator"
"arith_util","entity boundary","arith_util::is_bounded","predicate collaborator"
"arith_util","entity boundary","arith_util::is_extended_numeral","predicate collaborator"
"arith_util","entity boundary","arith_util::is_underspecified","predicate collaborator"
"bdd_manager","boundary","is_new_node","get"
"bdd_manager","boundary","set_mark","set"
"bdd_manager","boundary","is_marked","get"
"bdd_manager","boundary","is_true","predicate collaborator"
"bdd_manager","boundary","is_false","predicate collaborator"
"bdd_manager","boundary","is_const","collaborator incidental"
"bdd_manager","boundary","level","get collaborator"
"bdd_manager","boundary","var","get collaborator"
"bdd_manager","boundary","lo","get collaborator"
"bdd_manager","boundary","hi","get collaborator"
"bdd_manager","boundary","inc_ref","command collaborator"
"bdd_manager","boundary","dec_ref","command collaborator"
"bdd_manager","boundary","level2bdd","get collaborator"
"bdd_manager","boundary","dnf_size","property non-void-command collaborator"
"bdd_manager","boundary","cnf_size","property non-void-command collaborator"
"bdd_manager","boundary","set_max_num_nodes","set"
"bdd_manager","boundary","bdd_manager::bdd_manager","constructor"
"bdd_manager","boundary","bdd_manager::~bdd_manager","destructor"
"bdd_manager","boundary","bdd_manager::apply_const","get property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::apply","get property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_true","property wrapper"
"bdd_manager","boundary","bdd_manager::mk_false","property wrapper"
"bdd_manager","boundary","bdd_manager::mk_and","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_or","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_xor","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_exists","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_forall","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::check_result","predicate non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::apply_rec","get property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::push","command collaborator"
"bdd_manager","boundary","bdd_manager::pop","command"
"bdd_manager","boundary","bdd_manager::read","get non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::pop_entry","set factory collaborator"
"bdd_manager","boundary","bdd_manager::push_entry","set collaborator"
"bdd_manager","boundary","bdd_manager::make_node","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::try_cnf_reorder","command collaborator"
"bdd_manager","boundary","bdd_manager::try_reorder","command"
"bdd_manager","boundary","bdd_manager::current_cost","property non-void-command"
"bdd_manager","boundary","bdd_manager::is_bad_cost","incidental"
"bdd_manager","boundary","bdd_manager::sift_var","command"
"bdd_manager","boundary","bdd_manager::sift_up","command collaborator"
"bdd_manager","boundary","bdd_manager::init_reorder","command"
"bdd_manager","boundary","bdd_manager::reorder_incref","set"
"bdd_manager","boundary","bdd_manager::reorder_decref","set"
"bdd_manager","boundary","bdd_manager::reserve_var","command"
"bdd_manager","boundary","bdd_manager::mk_var","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_nvar","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_not","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_not_rec","get property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_cofactor","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_cofactor_rec","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_ite","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_ite_rec","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_exists","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_forall","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_quant","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_quant_rec","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::count","get non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::bdd_size","non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::alloc_free_nodes","command"
"bdd_manager","boundary","bdd_manager::gc","command"
"bdd_manager","boundary","bdd_manager::init_mark","command"
"bdd_manager","boundary","bdd_manager::display","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::well_formed","predicate non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::display","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_eq","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_eq","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_eq","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_ule","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_uge","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_ult","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_ugt","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_sle","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_sge","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_slt","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_sgt","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_add","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_add","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_sub","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_usub","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_usub","controller stateless"
"bdd_manager","boundary","bdd_manager::mk_mul","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_mul","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_mul","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_concat","controller stateless"
"bdd_manager","boundary","bdd_manager::mk_quot_rem","void-accessor command collaborator"
"bdd_manager","boundary","bdd_manager::mk_num","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_ones","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_zero","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_var","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::mk_var","property non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::is_constv","predicate non-void-command collaborator"
"bdd_manager","boundary","bdd_manager::to_val","property non-void-command collaborator"
"used_vars","unclassified","operator()","command collaborator"
"used_vars","unclassified","reset","command"
"used_vars","unclassified","set_num_decls","set"
"used_vars","unclassified","process","command collaborator"
"used_vars","unclassified","get_max_found_var_idx_plus_1","unclassified"
"used_vars","unclassified","get","get collaborator"
"used_vars","unclassified","contains","property collaborator"
"used_vars","unclassified","used_vars::process","void-accessor command collaborator"
"used_vars","unclassified","used_vars::uses_all_vars","predicate"
"used_vars","unclassified","used_vars::uses_a_var","predicate"
"used_vars","unclassified","used_vars::get_num_vars","unclassified"
"instantiate_cmd_core","entity commander boundary","instantiate_cmd_core","constructor"
"instantiate_cmd_core","entity commander boundary","get_usage","incidental"
"instantiate_cmd_core","entity commander boundary","get_descr","collaborator incidental"
"instantiate_cmd_core","entity commander boundary","get_arity","incidental"
"instantiate_cmd_core","entity commander boundary","prepare","set collaborator"
"instantiate_cmd_core","entity commander boundary","next_arg_kind","property collaborator"
"instantiate_cmd_core","entity commander boundary","set_next_arg","set collaborator"
"instantiate_cmd_core","entity commander boundary","set_next_arg","command collaborator"
"instantiate_cmd_core","entity commander boundary","execute","command collaborator"
"tactic_report::imp","empty","~imp","destructor"
"arith_recognizers","data-provider boundary degenerate","is_arith_op","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","get_family_id","collaborator incidental"
"arith_recognizers","data-provider boundary degenerate","is_arith_expr","predicate collaborator"
"arith_recognizers","data-provider boundary degenerate","is_numeral","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_le","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_ge","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_lt","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_gt","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_le","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_ge","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_lt","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_gt","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_div0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_idiv0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_rem0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_mod0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_power0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_power","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_add","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_mul","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_sub","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_uminus","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_div","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_rem","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_mod","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_to_real","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_to_int","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_is_int","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_add","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_sub","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_uminus","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_mul","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_div","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_div0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_idiv","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_idiv0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_mod","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_rem","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_mod0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_rem0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_to_real","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_to_int","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_is_int","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_power","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_power0","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_abs","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_int","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_int","predicate collaborator"
"arith_recognizers","data-provider boundary degenerate","is_real","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_real","predicate collaborator"
"arith_recognizers","data-provider boundary degenerate","is_int_real","controller stateless"
"arith_recognizers","data-provider boundary degenerate","is_int_real","predicate collaborator"
"arith_recognizers","data-provider boundary degenerate","is_band","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_band","predicate non-void-command collaborator"
"arith_recognizers","data-provider boundary degenerate","is_shl","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_shl","predicate non-void-command collaborator"
"arith_recognizers","data-provider boundary degenerate","is_lshr","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_lshr","predicate non-void-command collaborator"
"arith_recognizers","data-provider boundary degenerate","is_ashr","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_ashr","predicate non-void-command collaborator"
"arith_recognizers","data-provider boundary degenerate","is_sin","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_cos","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_tan","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_tanh","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_asin","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_acos","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_atan","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_asinh","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_acosh","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_atanh","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_pi","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_e","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","is_non_algebraic","predicate collaborator"
"arith_recognizers","data-provider boundary degenerate","arith_recognizers::is_irrational_algebraic_numeral","wrapper stateless"
"arith_recognizers","data-provider boundary degenerate","arith_recognizers::is_int_expr","predicate collaborator"
"declare_tactic_cmd","commander boundary","declare_tactic_cmd","constructor"
"declare_tactic_cmd","commander boundary","get_usage","incidental"
"declare_tactic_cmd","commander boundary","get_descr","collaborator incidental"
"declare_tactic_cmd","commander boundary","get_arity","incidental"
"declare_tactic_cmd","commander boundary","prepare","command collaborator"
"declare_tactic_cmd","commander boundary","next_arg_kind","property collaborator"
"declare_tactic_cmd","commander boundary","set_next_arg","set collaborator"
"declare_tactic_cmd","commander boundary","set_next_arg","set collaborator"
"declare_tactic_cmd","commander boundary","execute","controller"
"app","data-provider boundary","get_decl","get collaborator"
"app","data-provider boundary","get_family_id","property collaborator"
"app","data-provider boundary","get_decl_kind","property collaborator"
"app","data-provider boundary","get_name","property collaborator"
"app","data-provider boundary","get_num_parameters","unclassified"
"app","data-provider boundary","get_parameter","property collaborator"
"app","data-provider boundary","get_parameters","property collaborator"
"app","data-provider boundary","is_app_of","predicate collaborator"
"app","data-provider boundary","get_num_args","get"
"app","data-provider boundary","get_arg","get wrapper"
"app","data-provider boundary","get_args","get collaborator"
"app","data-provider boundary","args2","property collaborator"
"app","data-provider boundary","args3","property collaborator"
"app","data-provider boundary","get_size","unclassified"
"app","data-provider boundary","begin","get collaborator"
"app","data-provider boundary","end","property collaborator"
"app","data-provider boundary","_get_sort","property collaborator"
"app","data-provider boundary","get_depth","unclassified"
"app","data-provider boundary","is_ground","predicate"
"app","data-provider boundary","has_quantifiers","predicate"
"app","data-provider boundary","has_labels","predicate"
"app","data-provider boundary","app::app","constructor"
"collect_relevant_label_lits","commander boundary small-class","collect_relevant_label_lits","constructor"
"collect_relevant_label_lits","commander boundary small-class","collect_relevant_label_lits::operator()","command collaborator"
"ast_pp_dot_st","entity commander boundary","ast_pp_dot_st","constructor"
"ast_pp_dot_st","entity commander boundary","~ast_pp_dot_st","destructor"
"ast_pp_dot_st","entity commander boundary","push_term","command collaborator"
"ast_pp_dot_st","entity commander boundary","pp_loop","command collaborator"
"ast_pp_dot_st","entity commander boundary","m","get collaborator"
"ast_pp_dot_st","entity commander boundary","label_of_expr","property collaborator"
"ast_pp_dot_st","entity commander boundary","pp_atomic_step","command collaborator"
"ast_pp_dot_st","entity commander boundary","pp_step","command collaborator"
"ast_pp_dot_st","entity commander boundary","get_id","non-void-command collaborator"
"cnf_nnf_simplifier","commander","cnf_nnf_simplifier","constructor"
"cnf_nnf_simplifier","commander","name","incidental"
"cnf_nnf_simplifier","commander","reduce","command collaborator"
"cnf_nnf_simplifier","commander","push","command"
"cnf_nnf_simplifier","commander","pop","command"
"seq_util","data-provider boundary","get_manager","get collaborator"
"seq_util","data-provider boundary","mk_char_sort","property collaborator"
"seq_util","data-provider boundary","mk_string_sort","property collaborator"
"seq_util","data-provider boundary","is_char","predicate collaborator"
"seq_util","data-provider boundary","is_char","predicate collaborator"
"seq_util","data-provider boundary","is_string","predicate collaborator"
"seq_util","data-provider boundary","is_seq","predicate wrapper"
"seq_util","data-provider boundary","is_re","predicate wrapper"
"seq_util","data-provider boundary","is_re","predicate controller"
"seq_util","data-provider boundary","is_seq","predicate collaborator"
"seq_util","data-provider boundary","is_seq","predicate collaborator"
"seq_util","data-provider boundary","is_re","predicate collaborator"
"seq_util","data-provider boundary","is_re","predicate collaborator"
"seq_util","data-provider boundary","is_const_char","predicate collaborator"
"seq_util","data-provider boundary","is_char_is_digit","predicate collaborator"
"seq_util","data-provider boundary","is_char_is_digit","predicate collaborator"
"seq_util","data-provider boundary","mk_char_is_digit","property non-void-command collaborator"
"seq_util","data-provider boundary","mk_char2int","property non-void-command collaborator"
"seq_util","data-provider boundary","max_char","unclassified"
"seq_util","data-provider boundary","num_bits","unclassified"
"seq_util","data-provider boundary","is_skolem","predicate wrapper"
"seq_util","data-provider boundary","has_re","predicate"
"seq_util","data-provider boundary","has_seq","predicate"
"seq_util","data-provider boundary","get_family_id","get collaborator"
"seq_util","data-provider boundary","seq_util::mk_skolem","property non-void-command collaborator"
"seq_util","data-provider boundary","seq_util::mk_char_bit","property non-void-command collaborator"
"seq_util","data-provider boundary","seq_util::max_plus","incidental"
"seq_util","data-provider boundary","seq_util::max_mul","incidental"
"seq_util","data-provider boundary","seq_util::is_const_char","predicate"
"seq_util","data-provider boundary","seq_util::is_char_le","predicate collaborator"
"seq_util","data-provider boundary","seq_util::is_char2int","predicate collaborator"
"seq_util","data-provider boundary","seq_util::is_bv2char","predicate collaborator"
"seq_util","data-provider boundary","seq_util::is_char2bv","predicate collaborator"
"seq_util","data-provider boundary","seq_util::mk_char","property collaborator"
"seq_util","data-provider boundary","seq_util::mk_le","property collaborator"
"seq_util","data-provider boundary","seq_util::mk_lt","property collaborator"
"seq_util","data-provider boundary","seq_util::is_char_const_range","predicate"
"pdecl","data-provider lazy-class","inc_ref","set"
"pdecl","data-provider lazy-class","dec_ref","set"
"pdecl","data-provider lazy-class","is_psort","incidental"
"pdecl","data-provider lazy-class","obj_size","property wrapper"
"pdecl","data-provider lazy-class","finalize","empty"
"pdecl","data-provider lazy-class","check_num_params","predicate"
"pdecl","data-provider lazy-class","get_num_params","get"
"pdecl","data-provider lazy-class","get_id","get"
"pdecl","data-provider lazy-class","get_ref_count","get"
"pdecl","data-provider lazy-class","hash","get"
"pdecl","data-provider lazy-class","display","collaborator incidental"
"pdecl","data-provider lazy-class","reset_cache","empty"
"arith_decl_plugin::algebraic_numbers_wrapper","entity boundary","~algebraic_numbers_wrapper","destructor"
"arith_decl_plugin::algebraic_numbers_wrapper","entity boundary","mk_id","non-void-command collaborator"
"arith_decl_plugin::algebraic_numbers_wrapper","entity boundary","recycle_id","command"
"arith_decl_plugin::algebraic_numbers_wrapper","entity boundary","idx2anum","get collaborator"
"arith_decl_plugin::algebraic_numbers_wrapper","entity boundary","to_anum","property non-void-command collaborator"
"relation_manager::default_table_join_project_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"rule_transformer::plugin","unclassified","attach","set collaborator"
"rule_transformer::plugin","unclassified","get_priority","get"
"rule_transformer::plugin","unclassified","can_destratify_negation","get"
"rule_transformer::plugin","unclassified","cancel","empty"
"opb","entity boundary","parse_id","property non-void-command collaborator"
"opb","entity boundary","parse_ids","property non-void-command collaborator"
"opb","entity boundary","parse_coeff_r","property non-void-command collaborator"
"opb","entity boundary","parse_coeff","property non-void-command collaborator"
"opb","entity boundary","parse_term","property non-void-command collaborator"
"opb","entity boundary","parse_objective","command collaborator"
"opb","entity boundary","parse_constraint","command collaborator"
"opb","entity boundary","opb","constructor"
"opb","entity boundary","parse","command"
"pattern_validator","unclassified","pattern_validator","constructor"
"pattern_validator","unclassified","operator()","predicate non-void-command"
"pattern_validator","unclassified","pattern_validator::process","predicate controller"
"pattern_validator","unclassified","pattern_validator::operator()","predicate non-void-command"
"UninterpretedSort","empty","UninterpretedSort","constructor"
"UninterpretedSort","empty","UninterpretedSort","constructor"
"var_register","data-provider boundary","set_name","wrapper"
"var_register","data-provider boundary","get_name","get"
"var_register","data-provider boundary","add_var","non-void-command"
"var_register","data-provider boundary","vars","property controller"
"var_register","data-provider boundary","local_to_external","get"
"var_register","data-provider boundary","size","unclassified"
"var_register","data-provider boundary","clear","command"
"var_register","data-provider boundary","external_to_local","collaborator"
"var_register","data-provider boundary","external_is_used","predicate collaborator"
"var_register","data-provider boundary","external_is_used","predicate collaborator"
"var_register","data-provider boundary","external_is_used","predicate collaborator"
"var_register","data-provider boundary","has_int_var","predicate controller"
"var_register","data-provider boundary","local_is_int","get wrapper"
"var_register","data-provider boundary","shrink","command"
"default_value_manager","degenerate small-class","inc_ref","empty"
"default_value_manager","degenerate small-class","dec_ref","empty"
"z3_replayer","unclassified","z3_replayer::z3_replayer","constructor"
"z3_replayer","unclassified","z3_replayer::~z3_replayer","destructor"
"z3_replayer","unclassified","z3_replayer::get_line","unclassified"
"z3_replayer","unclassified","z3_replayer::get_bool","predicate"
"z3_replayer","unclassified","z3_replayer::get_int","property"
"z3_replayer","unclassified","z3_replayer::get_uint","unclassified"
"z3_replayer","unclassified","z3_replayer::get_int64","property"
"z3_replayer","unclassified","z3_replayer::get_uint64","property"
"z3_replayer","unclassified","z3_replayer::get_float","property"
"z3_replayer","unclassified","z3_replayer::get_double","property"
"z3_replayer","unclassified","z3_replayer::get_str","property collaborator"
"z3_replayer","unclassified","z3_replayer::get_symbol","property collaborator"
"z3_replayer","unclassified","z3_replayer::get_obj","property collaborator"
"z3_replayer","unclassified","z3_replayer::get_uint_array","unclassified"
"z3_replayer","unclassified","z3_replayer::get_int_array","property"
"z3_replayer","unclassified","z3_replayer::get_bool_array","predicate"
"z3_replayer","unclassified","z3_replayer::get_symbol_array","property collaborator"
"z3_replayer","unclassified","z3_replayer::get_obj_array","property collaborator"
"z3_replayer","unclassified","z3_replayer::get_int_addr","property non-void-command"
"z3_replayer","unclassified","z3_replayer::get_int64_addr","property non-void-command"
"z3_replayer","unclassified","z3_replayer::get_uint_addr","non-void-command"
"z3_replayer","unclassified","z3_replayer::get_uint64_addr","property non-void-command"
"z3_replayer","unclassified","z3_replayer::get_str_addr","property non-void-command collaborator"
"z3_replayer","unclassified","z3_replayer::get_obj_addr","property command collaborator"
"z3_replayer","unclassified","z3_replayer::store_result","command"
"z3_replayer","unclassified","z3_replayer::register_cmd","command"
"z3_replayer","unclassified","z3_replayer::parse","command"
"has_pattern_probe","pure-controller degenerate small-class","operator()","controller stateless"
"pp_mon_with_vars","empty","pp_mon_with_vars","constructor"
"pp_mon_with_vars","empty","pp_mon_with_vars","constructor"
"table_plugin","degenerate","can_handle_signature","controller stateless"
"table_plugin","degenerate","mk_map_fn","collaborator incidental"
"table_plugin","degenerate","mk_project_with_reduce_fn","collaborator incidental"
"qe_tactic","commander boundary","translate","property wrapper"
"qe_tactic","commander boundary","~qe_tactic","destructor"
"qe_tactic","commander boundary","name","incidental"
"qe_tactic","commander boundary","updt_params","command collaborator"
"qe_tactic","commander boundary","collect_param_descrs","command collaborator"
"qe_tactic","commander boundary","operator()","command collaborator"
"qe_tactic","commander boundary","collect_statistics","controller"
"qe_tactic","commander boundary","reset_statistics","command"
"qe_tactic","commander boundary","cleanup","set collaborator"
"ng_push_app_ite_cfg","entity boundary small-class","ng_push_app_ite_cfg","constructor"
"ng_push_app_ite_cfg","entity boundary small-class","ng_push_app_ite_cfg::is_target","predicate non-void-command collaborator"
"monomial2pos","minimal-entity commander boundary","get","get controller"
"monomial2pos","minimal-entity commander boundary","reset","set collaborator"
"monomial2pos","minimal-entity commander boundary","set","set"
"monomial2pos","minimal-entity commander boundary","set","command collaborator"
"monomial2pos","minimal-entity commander boundary","reset","command collaborator"
"ddfw","boundary","score","incidental"
"ddfw","boundary","num_vars","unclassified"
"ddfw","boundary","make_count","get collaborator"
"ddfw","boundary","value","get collaborator"
"ddfw","boundary","value","get collaborator"
"ddfw","boundary","reward","get collaborator"
"ddfw","boundary","reward","get collaborator"
"ddfw","boundary","plugin_reward","property non-void-command collaborator"
"ddfw","boundary","set_external","collaborator"
"ddfw","boundary","is_external","get collaborator"
"ddfw","boundary","bias","get collaborator"
"ddfw","boundary","is_true","predicate collaborator"
"ddfw","boundary","get_clause","get collaborator"
"ddfw","boundary","get_weight","get"
"ddfw","boundary","is_true","get"
"ddfw","boundary","update_reward_avg","command collaborator"
"ddfw","boundary","inc_make","command collaborator"
"ddfw","boundary","dec_make","command collaborator"
"ddfw","boundary","inc_reward","command"
"ddfw","boundary","dec_reward","command"
"ddfw","boundary","set","set collaborator"
"ddfw","boundary","get_model","get collaborator"
"ddfw","boundary","rlimit","get collaborator"
"ddfw","boundary","set_seed","command"
"ddfw","boundary","get_value","predicate collaborator"
"ddfw","boundary","num_non_binary_clauses","get"
"ddfw","boundary","collect_statistics","empty"
"ddfw","boundary","get_priority","get collaborator"
"ddfw","boundary","unsat_set","get collaborator"
"ddfw","boundary","num_clauses","unclassified"
"ddfw","boundary","get_clause_info","get collaborator"
"ddfw","boundary","get_use_list","property wrapper"
"ddfw","boundary","ddfw::~ddfw","destructor"
"ddfw","boundary","ddfw::check","property non-void-command collaborator"
"ddfw","boundary","ddfw::check_without_plugin","command"
"ddfw","boundary","ddfw::check_with_plugin","command"
"ddfw","boundary","ddfw::log","command"
"ddfw","boundary","ddfw::do_flip","wrapper stateless"
"ddfw","boundary","ddfw::apply_flip","predicate non-void-command"
"ddfw","boundary","ddfw::pick_var","property non-void-command collaborator"
"ddfw","boundary","ddfw::do_literal_flip","wrapper stateless"
"ddfw","boundary","ddfw::pick_literal_var","property non-void-command collaborator"
"ddfw","boundary","ddfw::add","command collaborator"
"ddfw","boundary","ddfw::del","command collaborator"
"ddfw","boundary","ddfw::add","command collaborator"
"ddfw","boundary","ddfw::add_assumptions","command"
"ddfw","boundary","ddfw::remove_assumptions","command"
"ddfw","boundary","ddfw::init","command collaborator"
"ddfw","boundary","ddfw::reinit","command collaborator"
"ddfw","boundary","ddfw::flatten_use_list","command collaborator"
"ddfw","boundary","ddfw::flip","command collaborator"
"ddfw","boundary","ddfw::should_reinit_weights","predicate"
"ddfw","boundary","ddfw::do_reinit_weights","command"
"ddfw","boundary","ddfw::init_clause_data","command collaborator"
"ddfw","boundary","ddfw::should_restart","predicate"
"ddfw","boundary","ddfw::do_restart","command"
"ddfw","boundary","ddfw::reinit_values","command"
"ddfw","boundary","ddfw::should_parallel_sync","predicate"
"ddfw","boundary","ddfw::save_priorities","command"
"ddfw","boundary","ddfw::do_parallel_sync","command"
"ddfw","boundary","ddfw::save_model","command"
"ddfw","boundary","ddfw::save_best_values","command"
"ddfw","boundary","ddfw::value_hash","collaborator"
"ddfw","boundary","ddfw::select_clause","wrapper stateless"
"ddfw","boundary","ddfw::select_max_same_sign","non-void-command"
"ddfw","boundary","ddfw::transfer_weight","command collaborator"
"ddfw","boundary","ddfw::select_random_true_clause","non-void-command"
"ddfw","boundary","ddfw::disregard_neighbor","incidental"
"ddfw","boundary","ddfw::calculate_transfer_weight","property"
"ddfw","boundary","ddfw::shift_weights","command"
"ddfw","boundary","ddfw::display","property collaborator"
"ddfw","boundary","ddfw::invariant","command collaborator"
"ddfw","boundary","ddfw::updt_params","command collaborator"
"x_leq_y","pure-controller small-class","x_leq_y","constructor"
"x_leq_y","pure-controller small-class","get_kind","incidental"
"x_leq_y","pure-controller small-class","process_auf","controller"
"if_change_simplifier","degenerate small-class","if_change_simplifier","constructor"
"if_change_simplifier","degenerate small-class","name","incidental"
"seq_expr_inverter","entity boundary","seq_expr_inverter","constructor"
"seq_expr_inverter","entity boundary","get_fid","property collaborator"
"seq_expr_inverter","entity boundary","operator()","predicate non-void-command collaborator"
"seq_expr_inverter","entity boundary","mk_diff","collaborator incidental"
"solve_context_eqs","entity boundary","contains_v","predicate collaborator"
"solve_context_eqs","entity boundary","is_safe_eq","predicate non-void-command collaborator"
"solve_context_eqs","entity boundary","solve_context_eqs::solve_context_eqs","constructor"
"solve_context_eqs","entity boundary","solve_context_eqs::is_safe_eq","predicate non-void-command collaborator"
"solve_context_eqs","entity boundary","solve_context_eqs::is_safe_eq","predicate non-void-command collaborator"
"solve_context_eqs","entity boundary","solve_context_eqs::is_disjunctively_safe","predicate non-void-command collaborator"
"solve_context_eqs","entity boundary","solve_context_eqs::is_conjunction","predicate collaborator"
"solve_context_eqs","entity boundary","solve_context_eqs::contains_conjunctively","predicate non-void-command collaborator"
"solve_context_eqs","entity boundary","solve_context_eqs::collect_nested_equalities","void-accessor command collaborator"
"solve_context_eqs","entity boundary","solve_context_eqs::collect_nested_equalities","void-accessor command collaborator"
"solve_context_eqs","entity boundary","solve_context_eqs::is_safe_var","predicate non-void-command collaborator"
"f_var","unclassified","f_var","constructor"
"f_var","unclassified","get_kind","incidental"
"f_var","unclassified","is_equal","predicate collaborator"
"f_var","unclassified","display","collaborator"
"f_var","unclassified","process_auf","controller"
"f_var","unclassified","populate_inst_sets","controller"
"f_var","unclassified","populate_inst_sets","void-accessor controller"
"smi_ext","empty","smi_ext","constructor"
"equiv_proof_converter","entity boundary","equiv_proof_converter","constructor"
"equiv_proof_converter","entity boundary","operator()","wrapper stateless"
"equiv_proof_converter","entity boundary","translate","property non-void-command collaborator"
"equiv_proof_converter","entity boundary","get_manager","get collaborator"
"equiv_proof_converter","entity boundary","display","empty"
"equiv_proof_converter","entity boundary","equiv_proof_converter::insert","command collaborator"
"algebraic_exception","empty","algebraic_exception","constructor"
"distribute_forall_simplifier::rw_cfg","entity boundary small-class","reduce_quantifier","predicate non-void-command collaborator"
"psort_sort","data-provider boundary","finalize","command collaborator"
"psort_sort","data-provider boundary","check_num_params","collaborator incidental"
"psort_sort","data-provider boundary","obj_size","incidental"
"psort_sort","data-provider boundary","get_sort","get collaborator"
"psort_sort","data-provider boundary","instantiate","get collaborator"
"psort_sort","data-provider boundary","is_sort_wrapper","incidental"
"psort_sort","data-provider boundary","hcons_kind","incidental"
"psort_sort","data-provider boundary","hcons_hash","unclassified"
"psort_sort","data-provider boundary","hcons_eq","predicate collaborator"
"psort_sort","data-provider boundary","display","property collaborator"
"gomory","entity boundary","gomory::is_gomory_cut_target","predicate non-void-command collaborator"
"gomory","entity boundary","gomory::gomory_select_int_infeasible_vars","property non-void-command collaborator"
"gomory","entity boundary","gomory::add_deps","property non-void-command collaborator"
"gomory","entity boundary","gomory::get_gomory_cuts","property non-void-command collaborator"
"gomory","entity boundary","gomory::gomory","constructor"
"column_namer","data-provider boundary small-class","print_row","property collaborator"
"column_namer","data-provider boundary small-class","print_linear_combination_of_column_indices","wrapper stateless"
"non_parallel_tactic","degenerate","non_parallel_tactic","constructor"
"non_parallel_tactic","degenerate","name","incidental"
"non_parallel_tactic","degenerate","operator()","wrapper stateless"
"non_parallel_tactic","degenerate","translate","collaborator incidental"
"non_parallel_tactic","degenerate","cleanup","empty"
"scoped_set_zp","empty","scoped_set_zp","constructor"
"scoped_set_zp","empty","scoped_set_zp","constructor"
"scoped_set_zp","empty","~scoped_set_zp","destructor"
"scoped_set_zp","empty","scoped_set_zp","constructor"
"scoped_set_zp","empty","scoped_set_zp","constructor"
"scoped_set_zp","empty","~scoped_set_zp","destructor"
"bool_rewriter_cfg","entity boundary","flat_assoc","predicate collaborator"
"bool_rewriter_cfg","entity boundary","rewrite_patterns","incidental"
"bool_rewriter_cfg","entity boundary","reduce_app","property non-void-command collaborator"
"bool_rewriter_cfg","entity boundary","bool_rewriter_cfg","constructor"
"extension","data-provider lazy-class degenerate","extension","constructor"
"extension","data-provider lazy-class degenerate","idx","get"
"extension","data-provider lazy-class degenerate","knd","property collaborator"
"extension","data-provider lazy-class degenerate","is_algebraic","predicate"
"extension","data-provider lazy-class degenerate","is_infinitesimal","predicate"
"extension","data-provider lazy-class degenerate","is_transcendental","predicate"
"extension","data-provider lazy-class degenerate","interval","get collaborator"
"extension","data-provider lazy-class degenerate","interval","get collaborator"
"extension","data-provider lazy-class degenerate","extension","constructor"
"extension","data-provider lazy-class degenerate","get_id","get"
"extension","data-provider lazy-class degenerate","set_solver","set collaborator"
"extension","data-provider lazy-class degenerate","s","get collaborator"
"extension","data-provider lazy-class degenerate","s","get collaborator"
"extension","data-provider lazy-class degenerate","name","get collaborator"
"extension","data-provider lazy-class degenerate","set_lookahead","empty"
"extension","data-provider lazy-class degenerate","init_search","empty"
"extension","data-provider lazy-class degenerate","propagated","wrapper stateless"
"extension","data-provider lazy-class degenerate","can_propagate","incidental"
"extension","data-provider lazy-class degenerate","is_external","collaborator incidental"
"extension","data-provider lazy-class degenerate","get_reward","collaborator incidental"
"extension","data-provider lazy-class degenerate","is_extended_binary","collaborator incidental"
"extension","data-provider lazy-class degenerate","decide","collaborator incidental"
"extension","data-provider lazy-class degenerate","get_case_split","collaborator incidental"
"extension","data-provider lazy-class degenerate","asserted","empty"
"extension","data-provider lazy-class degenerate","set_eliminated","empty"
"extension","data-provider lazy-class degenerate","resolve_conflict","collaborator incidental"
"extension","data-provider lazy-class degenerate","push_scopes","wrapper stateless"
"extension","data-provider lazy-class degenerate","user_push","wrapper stateless"
"extension","data-provider lazy-class degenerate","user_pop","wrapper stateless"
"extension","data-provider lazy-class degenerate","pre_simplify","empty"
"extension","data-provider lazy-class degenerate","simplify","empty"
"extension","data-provider lazy-class degenerate","set_root","collaborator incidental"
"extension","data-provider lazy-class degenerate","flush_roots","empty"
"extension","data-provider lazy-class degenerate","clauses_modifed","empty"
"extension","data-provider lazy-class degenerate","get_phase","collaborator incidental"
"extension","data-provider lazy-class degenerate","collect_statistics","empty"
"extension","data-provider lazy-class degenerate","copy","wrapper stateless"
"extension","data-provider lazy-class degenerate","find_mutexes","empty"
"extension","data-provider lazy-class degenerate","gc","empty"
"extension","data-provider lazy-class degenerate","pop_reinit","empty"
"extension","data-provider lazy-class degenerate","validate","incidental"
"extension","data-provider lazy-class degenerate","init_use_list","empty"
"extension","data-provider lazy-class degenerate","is_blocked","collaborator incidental"
"extension","data-provider lazy-class degenerate","check_model","collaborator incidental"
"extension","data-provider lazy-class degenerate","gc_vars","empty"
"extension","data-provider lazy-class degenerate","should_research","collaborator incidental"
"extension","data-provider lazy-class degenerate","add_assumptions","empty"
"extension","data-provider lazy-class degenerate","tracking_assumptions","incidental"
"extension","data-provider lazy-class degenerate","enable_self_propagate","incidental"
"extension","data-provider lazy-class degenerate","local_search","collaborator incidental"
"extension","data-provider lazy-class degenerate","extract_pb","collaborator incidental"
"extension","data-provider lazy-class degenerate","is_pb","incidental"
"extension","data-provider lazy-class degenerate","reason_unknown","incidental"
"kernel::imp","data-provider boundary small-class","m","property collaborator"
"kernel::imp","data-provider boundary small-class","display","collaborator"
"char_rewriter","entity boundary","mk_app","property non-void-command collaborator"
"char_rewriter","entity boundary","mk_app","property non-void-command collaborator"
"char_rewriter","entity boundary","char_rewriter::char_rewriter","constructor"
"char_rewriter","entity boundary","char_rewriter::get_fid","property non-void-command collaborator"
"char_rewriter","entity boundary","char_rewriter::mk_app_core","property non-void-command collaborator"
"char_rewriter","entity boundary","char_rewriter::mk_char_is_digit","property non-void-command collaborator"
"char_rewriter","entity boundary","char_rewriter::mk_char_to_bv","collaborator incidental"
"char_rewriter","entity boundary","char_rewriter::mk_char_le","property non-void-command collaborator"
"char_rewriter","entity boundary","char_rewriter::mk_char_from_bv","property non-void-command collaborator"
"char_rewriter","entity boundary","char_rewriter::mk_char_to_int","property non-void-command collaborator"
"lazy_mul","empty","lazy_mul","constructor"
"cond_macro","data-provider","cond_macro","constructor"
"cond_macro","data-provider","~cond_macro","destructor"
"cond_macro","data-provider","get_f","get collaborator"
"cond_macro","data-provider","get_def","get collaborator"
"cond_macro","data-provider","get_cond","get collaborator"
"cond_macro","data-provider","is_unconditional","predicate"
"cond_macro","data-provider","satisfy_atom","get"
"cond_macro","data-provider","is_hint","get"
"cond_macro","data-provider","is_equal","predicate"
"cond_macro","data-provider","display","property collaborator"
"cond_macro","data-provider","get_weight","get"
"theory_array_params","commander boundary small-class","theory_array_params","constructor"
"theory_array_params","commander boundary small-class","theory_array_params::updt_params","command collaborator"
"theory_array_params","commander boundary small-class","theory_array_params::display","wrapper"
"s_integer","data-provider","hash","get"
"s_integer","data-provider","swap","wrapper"
"s_integer","data-provider","get_int","get"
"s_integer","data-provider","get_int64","get"
"s_integer","data-provider","get_uint64","get"
"s_integer","data-provider","get_unsigned","unclassified"
"s_integer","data-provider","get_s_integer","get"
"s_integer","data-provider","get_infinitesimal","wrapper stateless"
"s_integer","data-provider","get_rational","get"
"s_integer","data-provider","numerator","incidental"
"s_integer","data-provider","denominator","wrapper stateless"
"s_integer","data-provider","operator+=","get set"
"s_integer","data-provider","operator-=","get set"
"s_integer","data-provider","operator*=","get set"
"s_integer","data-provider","operator/=","get set"
"s_integer","data-provider","operator%=","get set"
"s_integer","data-provider","div","property non-void-command"
"s_integer","data-provider","mod","controller stateless"
"s_integer","data-provider","operator++","get set"
"s_integer","data-provider","operator++","property"
"s_integer","data-provider","operator--","get set"
"s_integer","data-provider","operator--","property"
"s_integer","data-provider","operator==","incidental"
"s_integer","data-provider","operator<","incidental"
"s_integer","data-provider","neg","set"
"s_integer","data-provider","is_zero","predicate"
"s_integer","data-provider","is_one","predicate"
"s_integer","data-provider","is_minus_one","predicate"
"s_integer","data-provider","is_neg","predicate"
"s_integer","data-provider","is_pos","predicate"
"s_integer","data-provider","is_nonneg","predicate"
"s_integer","data-provider","is_nonpos","predicate"
"s_integer","data-provider","is_even","predicate"
"s_integer","data-provider","floor","incidental"
"s_integer","data-provider","ceil","incidental"
"s_integer","data-provider","expt","property"
"s_integer","data-provider","addmul","set"
"s_integer","data-provider","submul","set"
"s_integer","data-provider","operator<<","collaborator incidental"
"s_integer","data-provider","to_rational","property wrapper"
"s_integer","data-provider","s_integer::s_integer","constructor"
"contains_underspecified_op_proc","commander degenerate","operator()","empty"
"contains_underspecified_op_proc","commander degenerate","operator()","command collaborator"
"contains_underspecified_op_proc","commander degenerate","operator()","empty"
"user_propagator_with_theory","commander boundary data-class small-class","user_propagator_with_theory","constructor"
"user_propagator_with_theory","commander boundary data-class small-class","user_propagator_with_theory","constructor"
"user_propagator_with_theory","commander boundary data-class small-class","fixed","set collaborator"
"pdd_interval","boundary","get_interval_distributed","command collaborator"
"pdd_interval","boundary","pdd_interval","constructor"
"pdd_interval","boundary","m","get collaborator"
"pdd_interval","boundary","var2interval","get collaborator"
"pdd_interval","boundary","var2interval","get collaborator"
"pdd_interval","boundary","get_interval","command collaborator"
"pdd_interval","boundary","get_interval_distributed","command collaborator"
"th_rewriter_cfg","boundary","m","property collaborator"
"th_rewriter_cfg","boundary","updt_local_params","command collaborator"
"th_rewriter_cfg","boundary","updt_params","command collaborator"
"th_rewriter_cfg","boundary","flat_assoc","predicate collaborator"
"th_rewriter_cfg","boundary","rewrite_patterns","get"
"th_rewriter_cfg","boundary","cache_all_results","get"
"th_rewriter_cfg","boundary","max_steps_exceeded","predicate wrapper"
"th_rewriter_cfg","boundary","apply_tamagotchi","property non-void-command collaborator"
"th_rewriter_cfg","boundary","reduce_app_core","property non-void-command collaborator"
"th_rewriter_cfg","boundary","mk_eq_value","property non-void-command collaborator"
"th_rewriter_cfg","boundary","pull_ite_core","property non-void-command collaborator"
"th_rewriter_cfg","boundary","is_ite_value_tree","predicate non-void-command collaborator"
"th_rewriter_cfg","boundary","pull_ite","property non-void-command collaborator"
"th_rewriter_cfg","boundary","pull_ite","property non-void-command collaborator"
"th_rewriter_cfg","boundary","is_arith_bv_app","predicate collaborator"
"th_rewriter_cfg","boundary","get_neutral_elem","predicate non-void-command collaborator"
"th_rewriter_cfg","boundary","unify_core","predicate non-void-command collaborator"
"th_rewriter_cfg","boundary","unify_add","predicate non-void-command collaborator"
"th_rewriter_cfg","boundary","unify","predicate non-void-command"
"th_rewriter_cfg","boundary","push_ite","property non-void-command collaborator"
"th_rewriter_cfg","boundary","push_ite","property non-void-command collaborator"
"th_rewriter_cfg","boundary","count_down_subterm_references","controller stateless"
"th_rewriter_cfg","boundary","log_rewrite_axiom_instantiation","command collaborator"
"th_rewriter_cfg","boundary","reduce_app","property non-void-command collaborator"
"th_rewriter_cfg","boundary","mk_app","property non-void-command collaborator"
"th_rewriter_cfg","boundary","reduce_eq","property non-void-command collaborator"
"th_rewriter_cfg","boundary","mk_eq","property non-void-command collaborator"
"th_rewriter_cfg","boundary","apply_subst","void-accessor command collaborator"
"th_rewriter_cfg","boundary","reduce_quantifier","predicate non-void-command collaborator"
"th_rewriter_cfg","boundary","set_substitution","command collaborator"
"th_rewriter_cfg","boundary","reset","set"
"th_rewriter_cfg","boundary","get_subst","predicate non-void-command collaborator"
"theory_fpa","commander boundary","get_name","incidental"
"theory_fpa","commander boundary","get_root","property non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::theory_fpa","constructor"
"theory_fpa","commander boundary","theory_fpa::~theory_fpa","destructor"
"theory_fpa","commander boundary","theory_fpa::convert","property non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::mk_side_conditions","property non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::assert_cnstr","command collaborator"
"theory_fpa","commander boundary","theory_fpa::attach_new_th_var","command collaborator"
"theory_fpa","commander boundary","theory_fpa::internalize_atom","predicate non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::internalize_term","predicate non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::apply_sort_cnstr","command collaborator"
"theory_fpa","commander boundary","theory_fpa::new_eq_eh","command collaborator"
"theory_fpa","commander boundary","theory_fpa::new_diseq_eh","command collaborator"
"theory_fpa","commander boundary","theory_fpa::mk_fresh","wrapper stateless"
"theory_fpa","commander boundary","theory_fpa::push_scope_eh","command"
"theory_fpa","commander boundary","theory_fpa::pop_scope_eh","command"
"theory_fpa","commander boundary","theory_fpa::assign_eh","command collaborator"
"theory_fpa","commander boundary","theory_fpa::relevant_eh","command collaborator"
"theory_fpa","commander boundary","theory_fpa::reset_eh","command"
"theory_fpa","commander boundary","theory_fpa::final_check_eh","property non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::init_model","set collaborator"
"theory_fpa","commander boundary","theory_fpa::ensure_enode","property non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::get_ite_value","property non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::mk_value","property non-void-command collaborator"
"theory_fpa","commander boundary","theory_fpa::finalize_model","controller"
"theory_fpa","commander boundary","theory_fpa::display","collaborator"
"tangents","commander boundary small-class","tangents::tangents","constructor"
"tangents","commander boundary small-class","tangents::tangent_lemma","command collaborator"
"pred_transformer","boundary","get_bg_invs","property collaborator"
"pred_transformer","boundary","get_rf","property controller"
"pred_transformer","boundary","add_rule","command collaborator"
"pred_transformer","boundary","add_use","command"
"pred_transformer","boundary","head","get collaborator"
"pred_transformer","boundary","rules","get collaborator"
"pred_transformer","boundary","sig","get collaborator"
"pred_transformer","boundary","sig","property non-void-command collaborator"
"pred_transformer","boundary","sig_size","unclassified"
"pred_transformer","boundary","transition","get collaborator"
"pred_transformer","boundary","init","get collaborator"
"pred_transformer","boundary","rule2tag","property non-void-command collaborator"
"pred_transformer","boundary","get_num_levels","unclassified"
"pred_transformer","boundary","get_transition","property non-void-command collaborator"
"pred_transformer","boundary","get_aux_vars","property non-void-command collaborator"
"pred_transformer","boundary","add_lemma","predicate non-void-command collaborator"
"pred_transformer","boundary","has_rfs","predicate"
"pred_transformer","boundary","get_last_rf","property collaborator"
"pred_transformer","boundary","mk_pob","property non-void-command collaborator"
"pred_transformer","boundary","find_pob","property non-void-command collaborator"
"pred_transformer","boundary","mk_pob","property non-void-command collaborator"
"pred_transformer","boundary","is_invariant","wrapper stateless"
"pred_transformer","boundary","get_context","get collaborator"
"pred_transformer","boundary","get_manager","get collaborator"
"pred_transformer","boundary","get_ast_manager","get collaborator"
"pred_transformer","boundary","get_all_lemmas","unclassified"
"pred_transformer","boundary","mk_cluster","property non-void-command collaborator"
"pred_transformer","boundary","clstr_contains","predicate non-void-command collaborator"
"pred_transformer","boundary","clstr_count","non-void-command collaborator"
"pred_transformer","boundary","clstr_match","property non-void-command collaborator"
"pred_transformer","boundary","get_cluster","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::pred_transformer","constructor"
"pred_transformer","boundary","pred_transformer::mk_extend_lit","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::display","property collaborator"
"pred_transformer","boundary","pred_transformer::collect_statistics","collaborator"
"pred_transformer","boundary","pred_transformer::reset_statistics","command"
"pred_transformer","boundary","pred_transformer::init_sig","command collaborator"
"pred_transformer","boundary","pred_transformer::ensure_level","command"
"pred_transformer","boundary","pred_transformer::is_must_reachable","predicate non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::get_used_rf","property controller"
"pred_transformer","boundary","pred_transformer::get_used_origin_rf","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::get_all_used_rf","command collaborator"
"pred_transformer","boundary","pred_transformer::get_all_used_rf","controller"
"pred_transformer","boundary","pred_transformer::find_rule","property controller"
"pred_transformer","boundary","pred_transformer::find_rule","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::find_predecessors","controller stateless"
"pred_transformer","boundary","pred_transformer::simplify_formulas","command"
"pred_transformer","boundary","pred_transformer::get_formulas","property collaborator"
"pred_transformer","boundary","pred_transformer::propagate_to_next_level","predicate non-void-command"
"pred_transformer","boundary","pred_transformer::add_lemma_core","command"
"pred_transformer","boundary","pred_transformer::add_lemma","predicate non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::add_lemma_from_child","command"
"pred_transformer","boundary","pred_transformer::mk_fresh_rf_tag","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::add_rf","command collaborator"
"pred_transformer","boundary","pred_transformer::get_reachable","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::get_last_rf_tag","property collaborator"
"pred_transformer","boundary","pred_transformer::get_cover_delta","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::get_origin_summary","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::add_cover","command collaborator"
"pred_transformer","boundary","pred_transformer::propagate_to_infinity","command"
"pred_transformer","boundary","pred_transformer::get_pred_bg_invs","command collaborator"
"pred_transformer","boundary","pred_transformer::is_blocked","predicate non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::is_qblocked","predicate non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::mbp","command collaborator"
"pred_transformer","boundary","pred_transformer::is_reachable","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::is_ctp_blocked","predicate non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::is_invariant","predicate non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::check_inductive","predicate non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::mk_assumptions","command collaborator"
"pred_transformer","boundary","pred_transformer::initialize","command collaborator"
"pred_transformer","boundary","pred_transformer::init_rfs","controller"
"pred_transformer","boundary","pred_transformer::init_rules","command collaborator"
"pred_transformer","boundary","pred_transformer::init_rule","command collaborator"
"pred_transformer","boundary","pred_transformer::ground_free_vars","void-accessor command collaborator"
"pred_transformer","boundary","pred_transformer::init_atom","void-accessor command collaborator"
"pred_transformer","boundary","pred_transformer::add_premises","command collaborator"
"pred_transformer","boundary","pred_transformer::add_premises","command collaborator"
"pred_transformer","boundary","pred_transformer::inherit_lemmas","command"
"pred_transformer","boundary","pred_transformer::extend_initial","get non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::updt_solver","command collaborator"
"pred_transformer","boundary","pred_transformer::updt_solver_with_lemmas","command"
"pred_transformer","boundary","pred_transformer::update_solver_with_rfs","command collaborator"
"pred_transformer","boundary","pred_transformer::mk_mdl_rf_consistent","predicate non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::mk_rf","property non-void-command collaborator"
"pred_transformer","boundary","pred_transformer::use_native_mbp","predicate non-void-command"
"context_t","boundary","dec_ref","empty"
"context_t","boundary","inc_ref","empty"
"context_t","boundary","is_definition","get collaborator"
"context_t","boundary","set_arith_failed","set"
"context_t","boundary","bm","get collaborator"
"context_t","boundary","im","get collaborator"
"context_t","boundary","allocator","get collaborator"
"context_t","boundary","is_monomial","get wrapper"
"context_t","boundary","get_monomial","property collaborator"
"context_t","boundary","is_polynomial","get wrapper"
"context_t","boundary","get_polynomial","property collaborator"
"context_t","boundary","inconsistent","controller stateless"
"context_t","boundary","is_unbounded","controller stateless"
"context_t","boundary","arith_failed","get"
"context_t","boundary","nm","property collaborator"
"context_t","boundary","num_vars","unclassified"
"context_t","boundary","is_int","get collaborator"
"context_t","boundary","add_clause","command collaborator"
"context_t","boundary","set_display_proc","set collaborator"
"context_t","boundary","context_t<C>::display","controller stateless"
"context_t","boundary","context_t<C>::splitting_var","property controller"
"context_t","boundary","context_t<C>::context_t","constructor"
"context_t","boundary","context_t<C>::~context_t","destructor"
"context_t","boundary","context_t<C>::checkpoint","command"
"context_t","boundary","context_t<C>::del","command collaborator"
"context_t","boundary","context_t<C>::updt_params","command collaborator"
"context_t","boundary","context_t<C>::collect_param_descrs","controller stateless"
"context_t","boundary","context_t<C>::display_params","collaborator"
"context_t","boundary","context_t<C>::mk_bound","non-void-command factory collaborator"
"context_t","boundary","context_t<C>::propagate_bound","command collaborator"
"context_t","boundary","context_t<C>::del_bound","command collaborator"
"context_t","boundary","context_t<C>::display","wrapper stateless"
"context_t","boundary","context_t<C>::display","collaborator"
"context_t","boundary","context_t<C>::display","collaborator"
"context_t","boundary","context_t<C>::display_definition","unclassified"
"context_t","boundary","context_t<C>::display","unclassified"
"context_t","boundary","context_t<C>::display_bounds","collaborator"
"context_t","boundary","context_t<C>::is_int","predicate collaborator"
"context_t","boundary","context_t<C>::is_int","predicate collaborator"
"context_t","boundary","context_t<C>::mk_var","property non-void-command collaborator"
"context_t","boundary","context_t<C>::del_monomial","command collaborator"
"context_t","boundary","context_t<C>::mk_monomial","property non-void-command factory collaborator"
"context_t","boundary","context_t<C>::del_sum","command collaborator"
"context_t","boundary","context_t<C>::mk_sum","property non-void-command factory collaborator"
"context_t","boundary","context_t<C>::mk_ineq","non-void-command factory collaborator"
"context_t","boundary","context_t<C>::inc_ref","collaborator incidental"
"context_t","boundary","context_t<C>::dec_ref","void-accessor command collaborator"
"context_t","boundary","context_t<C>::add_clause_core","command collaborator"
"context_t","boundary","context_t<C>::del_clause","command collaborator"
"context_t","boundary","context_t<C>::add_unit_clause","command"
"context_t","boundary","context_t<C>::add_ineq","command collaborator"
"context_t","boundary","context_t<C>::mk_node","non-void-command factory collaborator"
"context_t","boundary","context_t<C>::del_node","command collaborator"
"context_t","boundary","context_t<C>::del_nodes","command collaborator"
"context_t","boundary","context_t<C>::push_front","command collaborator"
"context_t","boundary","context_t<C>::push_back","command collaborator"
"context_t","boundary","context_t<C>::reset_leaf_dlist","command collaborator"
"context_t","boundary","context_t<C>::rebuild_leaf_dlist","command collaborator"
"context_t","boundary","context_t<C>::remove_from_leaf_dlist","command collaborator"
"context_t","boundary","context_t<C>::collect_leaves","controller"
"context_t","boundary","context_t<C>::del_unit_clauses","command"
"context_t","boundary","context_t<C>::del_clauses","command collaborator"
"context_t","boundary","context_t<C>::del_clauses","command"
"context_t","boundary","context_t<C>::del_definitions","command collaborator"
"context_t","boundary","context_t<C>::display_constraints","unclassified"
"context_t","boundary","context_t<C>::set_conflict","set collaborator"
"context_t","boundary","context_t<C>::may_propagate","controller stateless"
"context_t","boundary","context_t<C>::normalize_bound","void-accessor command"
"context_t","boundary","context_t<C>::relevant_new_bound","predicate non-void-command collaborator"
"context_t","boundary","context_t<C>::is_zero","predicate collaborator"
"context_t","boundary","context_t<C>::is_upper_zero","predicate collaborator"
"context_t","boundary","context_t<C>::conflicting_bounds","predicate collaborator"
"context_t","boundary","context_t<C>::value","property non-void-command collaborator"
"context_t","boundary","context_t<C>::propagate_clause","command collaborator"
"context_t","boundary","context_t<C>::propagate_polynomial","command collaborator"
"context_t","boundary","context_t<C>::propagate_polynomial","command collaborator"
"context_t","boundary","context_t<C>::propagate_monomial","command collaborator"
"context_t","boundary","context_t<C>::propagate_monomial_upward","command collaborator"
"context_t","boundary","context_t<C>::propagate_monomial_downward","command collaborator"
"context_t","boundary","context_t<C>::most_recent","controller stateless"
"context_t","boundary","context_t<C>::add_recent_bounds","command collaborator"
"context_t","boundary","context_t<C>::propagate_def","command collaborator"
"context_t","boundary","context_t<C>::propagate","command collaborator"
"context_t","boundary","context_t<C>::propagate","command collaborator"
"context_t","boundary","context_t<C>::propagate_all_definitions","command collaborator"
"context_t","boundary","context_t<C>::assert_units","command collaborator"
"context_t","boundary","context_t<C>::init","command"
"context_t","boundary","context_t<C>::operator()","command collaborator"
"context_t","boundary","context_t<C>::display_bounds","collaborator"
"context_t","boundary","context_t<C>::reset_statistics","command"
"context_t","boundary","context_t<C>::collect_statistics","controller"
"context_t","boundary","context_t<C>::is_bound_of","controller stateless"
"context_t","boundary","context_t<C>::check_leaf_dlist","predicate controller"
"context_t","boundary","context_t<C>::check_tree","predicate controller"
"context_t","boundary","context_t<C>::check_invariant","predicate"
"der_rewriter","commander boundary","der_rewriter::der_rewriter","constructor"
"der_rewriter","commander boundary","der_rewriter::~der_rewriter","destructor"
"der_rewriter","commander boundary","der_rewriter::operator()","collaborator incidental"
"der_rewriter","commander boundary","der_rewriter::cleanup","set collaborator"
"der_rewriter","commander boundary","der_rewriter::reset","command"
"simplify_rewriter_star","commander boundary small-class","simplify_rewriter_star","constructor"
"simplify_rewriter_star","commander boundary small-class","updt_params","command collaborator"
"simplify_rewriter_star","commander boundary small-class","collect_statistics","collaborator"
"goal_shared_occs","commander","goal_shared_occs","constructor"
"goal_shared_occs","commander","is_shared","predicate non-void-command collaborator"
"goal_shared_occs","commander","num_shared","unclassified"
"goal_shared_occs","commander","reset","command"
"goal_shared_occs","commander","cleanup","command"
"goal_shared_occs","commander","display","collaborator"
"goal_shared_occs","commander","goal_shared_occs::operator()","command collaborator"
"decl_info_child_hash_proc","pure-controller degenerate small-class","operator()","controller stateless"
"hilbert_basis_validate","degenerate","eval_ineq","controller stateless"
"hilbert_basis_validate","degenerate","hilbert_basis_validate::hilbert_basis_validate","constructor"
"hilbert_basis_validate","degenerate","hilbert_basis_validate::validate_solution","controller stateless"
"hilbert_basis_validate","degenerate","hilbert_basis_validate::mk_validate","property non-void-command collaborator"
"fpa_decl_plugin","boundary","is_float_sort","predicate wrapper"
"fpa_decl_plugin","boundary","is_rm_sort","predicate wrapper"
"fpa_decl_plugin","boundary","fm","get collaborator"
"fpa_decl_plugin","boundary","get_value","get collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::fpa_decl_plugin","constructor"
"fpa_decl_plugin","boundary","fpa_decl_plugin::set_manager","command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::~fpa_decl_plugin","destructor"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_id","non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::recycled_id","command"
"fpa_decl_plugin","boundary","fpa_decl_plugin::is_considered_uninterpreted","collaborator incidental"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_numeral_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_numeral","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::is_numeral","predicate non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::is_numeral","predicate non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::is_rm_numeral","predicate wrapper"
"fpa_decl_plugin","boundary","fpa_decl_plugin::is_rm_numeral","predicate non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::del","command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::translate","property controller"
"fpa_decl_plugin","boundary","fpa_decl_plugin::finalize","command"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_fresh","wrapper stateless"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_float_sort","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_rm_sort","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_sort","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_rm_const_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_float_const_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_bin_rel_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_unary_rel_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_unary_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_binary_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_rm_binary_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_rm_unary_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_fma","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_to_fp","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_to_fp_unsigned","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_fp","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_to_ubv","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_to_sbv","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_to_real","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_to_ieee_bv","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_bv2rm","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_bv_wrap","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::mk_func_decl","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::get_op_names","controller stateless"
"fpa_decl_plugin","boundary","fpa_decl_plugin::get_sort_names","controller stateless"
"fpa_decl_plugin","boundary","fpa_decl_plugin::get_some_value","property non-void-command collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::is_value","predicate collaborator"
"fpa_decl_plugin","boundary","fpa_decl_plugin::is_unique_value","predicate collaborator"
"theory_pb::negate_ineq","commander small-class","undo","command"
"tbv_manager","boundary","get_size_estimate_bytes","unclassified"
"tbv_manager","boundary","num_tbits","unclassified"
"tbv_manager","boundary","reset","property collaborator"
"tbv_manager","boundary","tbv_manager::debug_alloc","incidental"
"tbv_manager","boundary","tbv_manager::~tbv_manager","destructor"
"tbv_manager","boundary","tbv_manager::reset","command"
"tbv_manager","boundary","tbv_manager::allocate","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::allocate1","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::allocate0","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::allocateX","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::allocate","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::allocate","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::allocate","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::allocate","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::allocate","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::project","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::set","command collaborator"
"tbv_manager","boundary","tbv_manager::set","command"
"tbv_manager","boundary","tbv_manager::set","command"
"tbv_manager","boundary","tbv_manager::set","controller stateless"
"tbv_manager","boundary","tbv_manager::allocate","property non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::deallocate","command collaborator"
"tbv_manager","boundary","tbv_manager::copy","collaborator"
"tbv_manager","boundary","tbv_manager::fill0","property collaborator"
"tbv_manager","boundary","tbv_manager::fill1","property collaborator"
"tbv_manager","boundary","tbv_manager::fillX","property collaborator"
"tbv_manager","boundary","tbv_manager::set_or","property collaborator"
"tbv_manager","boundary","tbv_manager::set_and","predicate collaborator"
"tbv_manager","boundary","tbv_manager::is_well_formed","predicate collaborator"
"tbv_manager","boundary","tbv_manager::complement","command collaborator"
"tbv_manager","boundary","tbv_manager::equals","predicate collaborator"
"tbv_manager","boundary","tbv_manager::hash","collaborator"
"tbv_manager","boundary","tbv_manager::contains","predicate collaborator"
"tbv_manager","boundary","tbv_manager::contains","controller stateless"
"tbv_manager","boundary","tbv_manager::intersect","predicate non-void-command collaborator"
"tbv_manager","boundary","tbv_manager::display","property collaborator"
"tbv_manager","boundary","tbv_manager::display","property collaborator"
"apply_result","unclassified","init","set collaborator"
"apply_result","unclassified","apply_result","copy-constructor"
"apply_result","unclassified","apply_result","copy-constructor"
"apply_result","unclassified","~apply_result","destructor"
"apply_result","unclassified","operatorZ3_apply_result","get"
"apply_result","unclassified","operator=","get set"
"apply_result","unclassified","size","unclassified"
"apply_result","unclassified","operator[]","property collaborator"
"std_string_hash_proc","pure-controller degenerate small-class","operator()","controller stateless"
"SeqExpr","empty","SeqExpr","constructor"
"Z3_probe_ref","empty","Z3_probe_ref","constructor"
"scoped_backup","empty","scoped_backup","constructor"
"scoped_backup","empty","~scoped_backup","destructor"
"qe_lite_cmd","commander boundary","qe_lite_cmd","constructor"
"qe_lite_cmd","commander boundary","get_usage","incidental"
"qe_lite_cmd","commander boundary","get_descr","collaborator incidental"
"qe_lite_cmd","commander boundary","get_arity","incidental"
"qe_lite_cmd","commander boundary","next_arg_kind","property collaborator"
"qe_lite_cmd","commander boundary","set_next_arg","set collaborator"
"qe_lite_cmd","commander boundary","set_next_arg","command collaborator"
"qe_lite_cmd","commander boundary","prepare","command collaborator"
"qe_lite_cmd","commander boundary","execute","controller"
"costs","unclassified","costs::costs","constructor"
"costs","unclassified","costs::empty","predicate"
"costs","unclassified","costs::reset","command"
"costs","unclassified","costs::operator-","property wrapper"
"costs","unclassified","costs::operator+=","command"
"costs","unclassified","costs::passes_thresholds","predicate controller"
"costs","unclassified","costs::output","collaborator"
"pred_abs","commander boundary","dec_keys","command collaborator"
"pred_abs","commander boundary","pred_abs::pred_abs","constructor"
"pred_abs","commander boundary","pred_abs::fmc","property non-void-command collaborator"
"pred_abs","commander boundary","pred_abs::reset","command"
"pred_abs","commander boundary","pred_abs::compute_level","property non-void-command collaborator"
"pred_abs","commander boundary","pred_abs::add_pred","command collaborator"
"pred_abs","commander boundary","pred_abs::add_lit","command collaborator"
"pred_abs","commander boundary","pred_abs::add_asm","command collaborator"
"pred_abs","commander boundary","pred_abs::push","command"
"pred_abs","commander boundary","pred_abs::pop","command"
"pred_abs","commander boundary","pred_abs::insert","command collaborator"
"pred_abs","commander boundary","pred_abs::is_predicate","predicate non-void-command collaborator"
"pred_abs","commander boundary","pred_abs::get_assumptions","command collaborator"
"pred_abs","commander boundary","pred_abs::ensure_expr_level","command collaborator"
"pred_abs","commander boundary","pred_abs::set_expr_level","command collaborator"
"pred_abs","commander boundary","pred_abs::set_decl_level","command collaborator"
"pred_abs","commander boundary","pred_abs::abstract_atoms","command collaborator"
"pred_abs","commander boundary","pred_abs::abstract_atoms","command collaborator"
"pred_abs","commander boundary","pred_abs::fresh_bool","property non-void-command collaborator"
"pred_abs","commander boundary","pred_abs::mk_abstract","property non-void-command collaborator"
"pred_abs","commander boundary","pred_abs::mk_assumption_literal","property non-void-command collaborator"
"pred_abs","commander boundary","pred_abs::mk_concrete","void-accessor command collaborator"
"pred_abs","commander boundary","pred_abs::pred2lit","command collaborator"
"pred_abs","commander boundary","pred_abs::pred2asm","property non-void-command collaborator"
"pred_abs","commander boundary","pred_abs::collect_statistics","controller stateless"
"pred_abs","commander boundary","pred_abs::display","collaborator"
"pred_abs","commander boundary","pred_abs::display","collaborator"
"pred_abs","commander boundary","pred_abs::get_free_vars","command collaborator"
"pred_abs","commander boundary","pred_abs::validate_defs","predicate collaborator"
"mbp_cmd","commander boundary","mbp_cmd","constructor"
"mbp_cmd","commander boundary","get_usage","incidental"
"mbp_cmd","commander boundary","get_descr","collaborator incidental"
"mbp_cmd","commander boundary","get_arity","incidental"
"mbp_cmd","commander boundary","next_arg_kind","property collaborator"
"mbp_cmd","commander boundary","set_next_arg","set collaborator"
"mbp_cmd","commander boundary","set_next_arg","command collaborator"
"mbp_cmd","commander boundary","prepare","set collaborator"
"mbp_cmd","commander boundary","execute","controller"
"term_graph::projector","boundary","mk_pure","property non-void-command collaborator"
"term_graph::projector","boundary","is_better_rep","predicate non-void-command collaborator"
"term_graph::projector","boundary","solve_core","command collaborator"
"term_graph::projector","boundary","find_app","predicate non-void-command collaborator"
"term_graph::projector","boundary","find_app","predicate non-void-command collaborator"
"term_graph::projector","boundary","mk_lits","command collaborator"
"term_graph::projector","boundary","lits2pure","command collaborator"
"term_graph::projector","boundary","remove_duplicates","controller stateless"
"term_graph::projector","boundary","collect_decl2terms","command"
"term_graph::projector","boundary","args_are_distinct","command collaborator"
"term_graph::projector","boundary","mk_distinct","command collaborator"
"term_graph::projector","boundary","mk_pure_equalities","command collaborator"
"term_graph::projector","boundary","is_projected","predicate non-void-command collaborator"
"term_graph::projector","boundary","mk_unpure_equalities","command collaborator"
"term_graph::projector","boundary","mk_equalities","command collaborator"
"term_graph::projector","boundary","mk_pure_equalities","wrapper stateless"
"term_graph::projector","boundary","mk_unpure_equalities","wrapper stateless"
"term_graph::projector","boundary","is_solved_eq","wrapper stateless"
"term_graph::projector","boundary","model_complete","command collaborator"
"term_graph::projector","boundary","display","property collaborator"
"term_graph::projector","boundary","add_term2app","controller stateless"
"term_graph::projector","boundary","del_term2app","controller stateless"
"term_graph::projector","boundary","find_term2app","controller stateless"
"term_graph::projector","boundary","find_term2app","property non-void-command collaborator"
"term_graph::projector","boundary","in_term2app","controller stateless"
"term_graph::projector","boundary","set_model","set collaborator"
"term_graph::projector","boundary","reset","command"
"term_graph::projector","boundary","project","property non-void-command collaborator"
"term_graph::projector","boundary","get_ackerman_disequalities","property non-void-command collaborator"
"term_graph::projector","boundary","solve","property non-void-command collaborator"
"term_graph::projector","boundary","get_partition","property non-void-command collaborator"
"term_graph::projector","boundary","shared_occurrences","property non-void-command collaborator"
"term_graph::projector","boundary","purify","command collaborator"
"mk_simplified_app","entity boundary small-class","mk_simplified_app::mk_simplified_app","constructor"
"mk_simplified_app","entity boundary small-class","mk_simplified_app::~mk_simplified_app","destructor"
"mk_simplified_app","entity boundary small-class","mk_simplified_app::mk_core","property non-void-command collaborator"
"mk_simplified_app","entity boundary small-class","mk_simplified_app::operator()","void-accessor command collaborator"
"expr_substitution","boundary","m","get collaborator"
"expr_substitution","boundary","proofs_enabled","get"
"expr_substitution","boundary","unsat_core_enabled","get"
"expr_substitution","boundary","empty","predicate"
"expr_substitution","boundary","size","unclassified"
"expr_substitution","boundary","insert","command collaborator"
"expr_substitution","boundary","find","get collaborator"
"expr_substitution","boundary","dep","get collaborator"
"expr_substitution","boundary","sub","get collaborator"
"expr_substitution","boundary","expr_substitution::init","command"
"expr_substitution","boundary","expr_substitution::expr_substitution","constructor"
"expr_substitution","boundary","expr_substitution::expr_substitution","constructor"
"expr_substitution","boundary","expr_substitution::expr_substitution","constructor"
"expr_substitution","boundary","expr_substitution::~expr_substitution","destructor"
"expr_substitution","boundary","expr_substitution::display","property non-void-command collaborator"
"expr_substitution","boundary","expr_substitution::insert","command collaborator"
"expr_substitution","boundary","expr_substitution::erase","command collaborator"
"expr_substitution","boundary","expr_substitution::find","predicate non-void-command collaborator"
"expr_substitution","boundary","expr_substitution::find","predicate non-void-command collaborator"
"expr_substitution","boundary","expr_substitution::contains","predicate non-void-command collaborator"
"expr_substitution","boundary","expr_substitution::reset","command"
"expr_substitution","boundary","expr_substitution::cleanup","command"
"rule_eq_proc","pure-controller degenerate small-class","rule_eq_proc::operator()","controller stateless"
"concat_model_converter","degenerate","concat_model_converter","constructor"
"concat_model_converter","degenerate","operator()","collaborator incidental"
"concat_model_converter","degenerate","operator()","collaborator incidental"
"concat_model_converter","degenerate","operator()","collaborator incidental"
"concat_model_converter","degenerate","get_units","controller stateless"
"concat_model_converter","degenerate","get_name","incidental"
"concat_model_converter","degenerate","translate","controller stateless"
"concat_model_converter","degenerate","set_env","controller stateless"
"poly_eq_proc","data-provider boundary small-class","poly_eq_proc","constructor"
"poly_eq_proc","data-provider boundary small-class","operator()","predicate collaborator"
"NativeModel","controller small-class","ConstFuncInterp","controller stateless"
"NativeModel","controller small-class","FuncInterp","property factory controller"
"flet","empty","flet","constructor"
"flet","empty","~flet","destructor"
"flet","empty","flet","constructor"
"flet","empty","~flet","destructor"
"default_rewriter_cfg","degenerate","cache_all_results","incidental"
"default_rewriter_cfg","degenerate","cache_results","incidental"
"default_rewriter_cfg","degenerate","flat_assoc","collaborator incidental"
"default_rewriter_cfg","degenerate","rewrite_patterns","incidental"
"default_rewriter_cfg","degenerate","max_scopes_exceeded","incidental"
"default_rewriter_cfg","degenerate","max_frames_exceeded","incidental"
"default_rewriter_cfg","degenerate","max_steps_exceeded","incidental"
"default_rewriter_cfg","degenerate","pre_visit","collaborator incidental"
"default_rewriter_cfg","degenerate","reduce_app","collaborator incidental"
"default_rewriter_cfg","degenerate","reduce_quantifier","collaborator incidental"
"default_rewriter_cfg","degenerate","reduce_var","collaborator incidental"
"default_rewriter_cfg","degenerate","get_macro","collaborator incidental"
"default_rewriter_cfg","degenerate","reduce_macro","incidental"
"default_rewriter_cfg","degenerate","get_subst","collaborator incidental"
"default_rewriter_cfg","degenerate","reset","empty"
"default_rewriter_cfg","degenerate","cleanup","empty"
"elim_aux_assertions","unclassified","elim_aux_assertions","constructor"
"elim_aux_assertions","unclassified","mk_or_core","controller stateless"
"elim_aux_assertions","unclassified","mk_app","void-accessor command collaborator"
"elim_aux_assertions","unclassified","operator()","void-accessor command collaborator"
"rule_hash_proc","pure-controller degenerate small-class","rule_hash_proc::operator()","controller stateless"
"obj_vector_hash_proc","boundary degenerate small-class","operator()","wrapper stateless"
"theory_str_params","commander boundary small-class","theory_str_params","constructor"
"theory_str_params","commander boundary small-class","theory_str_params::updt_params","command collaborator"
"theory_str_params","commander boundary small-class","theory_str_params::display","wrapper"
"add_var_pos_trail","commander data-class small-class","add_var_pos_trail","constructor"
"add_var_pos_trail","commander data-class small-class","undo","set"
"solver::reset_new","boundary small-class","undo","wrapper"
"relation_manager::default_table_union_fn","pure-controller small-class","operator()","controller"
"cost_evaluator","data-provider small-class","cost_evaluator::cost_evaluator","constructor"
"cost_evaluator","data-provider small-class","cost_evaluator::eval","get property collaborator"
"cost_evaluator","data-provider small-class","cost_evaluator::operator()","property non-void-command"
"mk_pp","empty","mk_pp","constructor"
"mk_pp","empty","mk_pp","constructor"
"substitution","boundary","substitution","constructor"
"substitution","boundary","begin","property collaborator"
"substitution","boundary","end","property collaborator"
"substitution","boundary","insert","command collaborator"
"substitution","boundary","find","predicate collaborator"
"substitution","boundary","size","unclassified"
"substitution","boundary","get_manager","get collaborator"
"substitution","boundary","reserve","command"
"substitution","boundary","reserve_offsets","command"
"substitution","boundary","reserve_vars","command"
"substitution","boundary","push_scope","command"
"substitution","boundary","get_scope_lvl","non-void-command"
"substitution","boundary","top_scope_has_bindings","predicate"
"substitution","boundary","get_num_bindings","unclassified"
"substitution","boundary","insert","command collaborator"
"substitution","boundary","insert","command collaborator"
"substitution","boundary","insert","command collaborator"
"substitution","boundary","find","predicate collaborator"
"substitution","boundary","find","predicate collaborator"
"substitution","boundary","find","predicate collaborator"
"substitution","boundary","get_binding","void-accessor collaborator"
"substitution","boundary","contains","predicate non-void-command collaborator"
"substitution","boundary","apply","wrapper stateless"
"substitution","boundary","apply","wrapper stateless"
"substitution","boundary","substitution::operator()","property controller"
"substitution","boundary","substitution::operator()","property non-void-command collaborator"
"substitution","boundary","substitution::operator()","property non-void-command collaborator"
"substitution","boundary","substitution::unify","predicate non-void-command collaborator"
"substitution","boundary","substitution::match","predicate non-void-command collaborator"
"substitution","boundary","substitution::substitution","constructor"
"substitution","boundary","substitution::reset","command"
"substitution","boundary","substitution::reset_cache","command"
"substitution","boundary","substitution::pop_scope","command collaborator"
"substitution","boundary","substitution::apply_visit","void-accessor command"
"substitution","boundary","substitution::apply","void-accessor command collaborator"
"substitution","boundary","substitution::get_color","property collaborator"
"substitution","boundary","substitution::set_color","command collaborator"
"substitution","boundary","substitution::visit","void-accessor command"
"substitution","boundary","substitution::visit_children","predicate non-void-command collaborator"
"substitution","boundary","substitution::acyclic","predicate non-void-command collaborator"
"substitution","boundary","substitution::acyclic","predicate non-void-command collaborator"
"substitution","boundary","substitution::display","command collaborator"
"substitution","boundary","substitution::display","command collaborator"
"family_manager","entity data-provider boundary","get_dom","collaborator"
"family_manager","entity data-provider boundary","get_range","collaborator"
"family_manager","entity data-provider boundary","get_name","property collaborator"
"family_manager","entity data-provider boundary","has_family","predicate collaborator"
"family_manager","entity data-provider boundary","family_manager::mk_family_id","property non-void-command collaborator"
"family_manager","entity data-provider boundary","family_manager::get_family_id","property collaborator"
"family_manager","entity data-provider boundary","family_manager::has_family","predicate collaborator"
"scoped_no_proof","empty","scoped_no_proof","constructor"
"nnf::imp","entity boundary","proofs_enabled","predicate"
"nnf::imp","entity boundary","~imp","destructor"
"nnf::imp","entity boundary","updt_params","command collaborator"
"nnf::imp","entity boundary","reset","command"
"nnf::imp","entity boundary","reset_cache","command"
"nnf::imp","entity boundary","push_frame","command"
"nnf::imp","entity boundary","cache_result","command collaborator"
"nnf::imp","entity boundary","get_cached","get wrapper"
"nnf::imp","entity boundary","get_cached_pr","property collaborator"
"nnf::imp","entity boundary","process_cached","predicate non-void-command collaborator"
"nnf::imp","entity boundary","checkpoint","command"
"nnf::imp","entity boundary","set_new_child_flag","command"
"nnf::imp","entity boundary","set_new_child_flag","command collaborator"
"nnf::imp","entity boundary","skip","command collaborator"
"nnf::imp","entity boundary","visit","predicate non-void-command collaborator"
"nnf::imp","entity boundary","mk_proof","property non-void-command collaborator"
"nnf::imp","entity boundary","process_and_or","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_not","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_implies","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_ite","predicate non-void-command collaborator"
"nnf::imp","entity boundary","is_eq","predicate collaborator"
"nnf::imp","entity boundary","process_iff_xor","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_eq","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_default","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_label","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_app","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_var","predicate non-void-command collaborator"
"nnf::imp","entity boundary","process_quantifier","predicate non-void-command collaborator"
"nnf::imp","entity boundary","recover_result","void-accessor command collaborator"
"nnf::imp","entity boundary","process","command collaborator"
"nnf::imp","entity boundary","operator()","command collaborator"
"bmc::nonlinear","boundary","check","property non-void-command collaborator"
"bmc::nonlinear","boundary","compile_query","property non-void-command collaborator"
"bmc::nonlinear","boundary","compile","command"
"bmc::nonlinear","boundary","assert_fmls","command collaborator"
"bmc::nonlinear","boundary","setup","command collaborator"
"bmc::nonlinear","boundary","check","property non-void-command collaborator"
"bmc::nonlinear","boundary","get_proof","property non-void-command collaborator"
"bmc::nonlinear","boundary","get_model","command collaborator"
"bmc::nonlinear","boundary","mk_level_predicate","property non-void-command collaborator"
"bmc::nonlinear","boundary","mk_level_rule","property non-void-command collaborator"
"bmc::nonlinear","boundary","apply_vars","property non-void-command collaborator"
"bmc::nonlinear","boundary","subtract_vars","controller stateless"
"bmc::nonlinear","boundary","mk_skolem_binding","property non-void-command collaborator"
"bmc::nonlinear","boundary","skolemize_vars","property non-void-command collaborator"
"bmc::nonlinear","boundary","mk_body_func","property non-void-command collaborator"
"bmc::nonlinear","boundary","bind_vars","property non-void-command collaborator"
"bmc::nonlinear","boundary","replace_by_level_predicates","void-accessor wrapper"
"distribute_forall_simplifier","commander degenerate","name","incidental"
"distribute_forall_simplifier","commander degenerate","supports_proofs","incidental"
"distribute_forall_simplifier","commander degenerate","distribute_forall_simplifier::reduce","command collaborator"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::mk_unbound_compressor","constructor"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::reset","command"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::is_unbound_argument","predicate non-void-command"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::add_task","command collaborator"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::detect_tasks","command"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::try_compress","property non-void-command collaborator"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::mk_decompression_rule","property non-void-command collaborator"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::add_decompression_rule","command"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::replace_by_decompression_rule","command collaborator"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::add_in_progress_indices","command collaborator"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::decompress_rule","predicate non-void-command"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::add_decompression_rules","command collaborator"
"mk_unbound_compressor","commander boundary","mk_unbound_compressor::operator()","property non-void-command collaborator"
"expr_substitution_simplifier","boundary","compute_depth","controller stateless"
"expr_substitution_simplifier","boundary","is_gt","predicate non-void-command collaborator"
"expr_substitution_simplifier","boundary","depth","get collaborator"
"expr_substitution_simplifier","boundary","expr_substitution_simplifier","constructor"
"expr_substitution_simplifier","boundary","updt_params","empty"
"expr_substitution_simplifier","boundary","collect_param_descrs","empty"
"expr_substitution_simplifier","boundary","assert_expr","predicate non-void-command collaborator"
"expr_substitution_simplifier","boundary","update_substitution","command collaborator"
"expr_substitution_simplifier","boundary","operator()","void-accessor command collaborator"
"expr_substitution_simplifier","boundary","pop","command"
"expr_substitution_simplifier","boundary","scope_level","unclassified"
"expr_substitution_simplifier","boundary","translate","property non-void-command collaborator"
"expr_quant_elim","boundary","expr_quant_elim::expr_quant_elim","constructor"
"expr_quant_elim","boundary","expr_quant_elim::~expr_quant_elim","destructor"
"expr_quant_elim","boundary","expr_quant_elim::operator()","void-accessor command collaborator"
"expr_quant_elim","boundary","expr_quant_elim::updt_params","command collaborator"
"expr_quant_elim","boundary","expr_quant_elim::collect_param_descrs","controller stateless"
"expr_quant_elim","boundary","expr_quant_elim::init_qe","set"
"expr_quant_elim","boundary","expr_quant_elim::instantiate_expr","void-accessor command collaborator"
"expr_quant_elim","boundary","expr_quant_elim::abstract_expr","void-accessor wrapper"
"expr_quant_elim","boundary","expr_quant_elim::elim","void-accessor command collaborator"
"expr_quant_elim","boundary","expr_quant_elim::collect_statistics","collaborator"
"expr_quant_elim","boundary","expr_quant_elim::first_elim","property non-void-command collaborator"
"expr_quant_elim","boundary","expr_quant_elim::solve_for_var","predicate non-void-command collaborator"
"expr_quant_elim","boundary","expr_quant_elim::solve_for_vars","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","mpq_inf_manager","constructor"
"mpq_inf_manager","entity boundary","set_inf","set"
"mpq_inf_manager","entity boundary","reset","command collaborator"
"mpq_inf_manager","entity boundary","hash","collaborator"
"mpq_inf_manager","entity boundary","del","command collaborator"
"mpq_inf_manager","entity boundary","swap","command collaborator"
"mpq_inf_manager","entity boundary","set","command collaborator"
"mpq_inf_manager","entity boundary","set","command collaborator"
"mpq_inf_manager","entity boundary","set","command collaborator"
"mpq_inf_manager","entity boundary","set","command collaborator"
"mpq_inf_manager","entity boundary","is_int","predicate collaborator"
"mpq_inf_manager","entity boundary","is_pos","predicate collaborator"
"mpq_inf_manager","entity boundary","is_neg","predicate collaborator"
"mpq_inf_manager","entity boundary","is_rational","predicate collaborator"
"mpq_inf_manager","entity boundary","get_rational","command collaborator"
"mpq_inf_manager","entity boundary","get_infinitesimal","command collaborator"
"mpq_inf_manager","entity boundary","get_double","property non-void-command collaborator"
"mpq_inf_manager","entity boundary","is_zero","predicate collaborator"
"mpq_inf_manager","entity boundary","eq","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","eq","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","eq","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","lt","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","lt","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","lt","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","gt","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","gt","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","gt","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","le","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","le","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","le","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","ge","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","ge","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","ge","predicate non-void-command collaborator"
"mpq_inf_manager","entity boundary","add","command collaborator"
"mpq_inf_manager","entity boundary","sub","command collaborator"
"mpq_inf_manager","entity boundary","add","command collaborator"
"mpq_inf_manager","entity boundary","sub","command collaborator"
"mpq_inf_manager","entity boundary","mul","command collaborator"
"mpq_inf_manager","entity boundary","mul","command collaborator"
"mpq_inf_manager","entity boundary","div","command collaborator"
"mpq_inf_manager","entity boundary","div","command collaborator"
"mpq_inf_manager","entity boundary","inc","command collaborator"
"mpq_inf_manager","entity boundary","dec","command collaborator"
"mpq_inf_manager","entity boundary","neg","command collaborator"
"mpq_inf_manager","entity boundary","abs","command collaborator"
"mpq_inf_manager","entity boundary","ceil","command collaborator"
"mpq_inf_manager","entity boundary","floor","command collaborator"
"mpq_inf_manager","entity boundary","display","command collaborator"
"mpq_inf_manager","entity boundary","get_mpq_manager","get collaborator"
"mpq_inf_manager","entity boundary","mpq_inf_manager<SYNCH>::to_string","property non-void-command collaborator"
"config_mpf","data-provider boundary small-class","config_mpf","constructor"
"config_mpf","data-provider boundary small-class","m","property collaborator"
"context_mpf_wrapper","entity boundary","int2mpf","command collaborator"
"context_mpf_wrapper","entity boundary","context_mpf_wrapper","constructor"
"context_mpf_wrapper","entity boundary","qm","get collaborator"
"context_mpf_wrapper","entity boundary","mk_sum","property non-void-command collaborator"
"context_mpf_wrapper","entity boundary","mk_ineq","property non-void-command collaborator"
"on_clause","empty","on_clause","copy-constructor"
"expr2polynomial::imp","entity commander boundary","~imp","destructor"
"expr2polynomial::imp","entity commander boundary","m","get collaborator"
"expr2polynomial::imp","entity commander boundary","pm","get collaborator"
"expr2polynomial::imp","entity commander boundary","nm","property non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","reset","command"
"expr2polynomial::imp","entity commander boundary","reset_cache","command"
"expr2polynomial::imp","entity commander boundary","checkpoint","wrapper"
"expr2polynomial::imp","entity commander boundary","throw_not_polynomial","wrapper stateless"
"expr2polynomial::imp","entity commander boundary","throw_no_int_var","wrapper stateless"
"expr2polynomial::imp","entity commander boundary","push_frame","command collaborator"
"expr2polynomial::imp","entity commander boundary","cache_result","command collaborator"
"expr2polynomial::imp","entity commander boundary","is_cached","predicate non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","is_int_real","predicate non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","store_result","command collaborator"
"expr2polynomial::imp","entity commander boundary","store_var_poly","command collaborator"
"expr2polynomial::imp","entity commander boundary","store_const_poly","command collaborator"
"expr2polynomial::imp","entity commander boundary","visit_arith_app","predicate non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","visit","predicate non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","pop","command"
"expr2polynomial::imp","entity commander boundary","polynomial_args","property non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","denominator_args","property non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","process_add_sub","command collaborator"
"expr2polynomial::imp","entity commander boundary","process_add","wrapper stateless"
"expr2polynomial::imp","entity commander boundary","process_sub","wrapper stateless"
"expr2polynomial::imp","entity commander boundary","process_mul","command collaborator"
"expr2polynomial::imp","entity commander boundary","process_uminus","command collaborator"
"expr2polynomial::imp","entity commander boundary","process_power","command collaborator"
"expr2polynomial::imp","entity commander boundary","process_to_real","command collaborator"
"expr2polynomial::imp","entity commander boundary","process_app","command collaborator"
"expr2polynomial::imp","entity commander boundary","to_polynomial","predicate non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","is_int_poly","predicate non-void-command collaborator"
"expr2polynomial::imp","entity commander boundary","to_expr","void-accessor command collaborator"
"expr2polynomial::imp","entity commander boundary","set_cancel","set"
"quantifier_finder_proc","commander","quantifier_finder_proc","constructor"
"quantifier_finder_proc","commander","operator()","empty"
"quantifier_finder_proc","commander","operator()","command collaborator"
"quantifier_finder_proc","commander","operator()","empty"
"quantifier_finder_proc","commander","reset","command"
"scoped_ast_vector","empty","scoped_ast_vector","constructor"
"scoped_ast_vector","empty","~scoped_ast_vector","destructor"
"cmd_context::pp_env","entity data-provider boundary","pp_fdecl_name","property non-void-command collaborator"
"cmd_context::pp_env","entity data-provider boundary","pp_fdecl_ref_core","property non-void-command collaborator"
"cmd_context::pp_env","entity data-provider boundary","get_manager","property collaborator"
"cmd_context::pp_env","entity data-provider boundary","get_autil","get collaborator"
"cmd_context::pp_env","entity data-provider boundary","get_bvutil","get collaborator"
"cmd_context::pp_env","entity data-provider boundary","get_arutil","get collaborator"
"cmd_context::pp_env","entity data-provider boundary","get_futil","get collaborator"
"cmd_context::pp_env","entity data-provider boundary","get_sutil","get collaborator"
"cmd_context::pp_env","entity data-provider boundary","get_dtutil","get collaborator"
"cmd_context::pp_env","entity data-provider boundary","get_dlutil","get collaborator"
"cmd_context::pp_env","entity data-provider boundary","uses","predicate collaborator"
"cmd_context::pp_env","entity data-provider boundary","pp_sort","property non-void-command collaborator"
"cmd_context::pp_env","entity data-provider boundary","pp_fdecl","property non-void-command collaborator"
"cmd_context::pp_env","entity data-provider boundary","pp_fdecl_ref","property non-void-command collaborator"
"ast_to_lt","boundary degenerate small-class","operator()","wrapper stateless"
"bound_constraint","empty","bound_constraint","constructor"
"context::is_propositional_fn","commander boundary degenerate","operator()","wrapper stateless"
"context::is_propositional_fn","commander boundary degenerate","operator()","wrapper stateless"
"context::is_propositional_fn","commander boundary degenerate","operator()","command collaborator"
"enode","data-provider","add_th_var","command collaborator"
"enode","data-provider","replace_th_var","command collaborator"
"enode","data-provider","del_th_var","command collaborator"
"enode","data-provider","set_cgc_enabled","set"
"enode","data-provider","set_merge_tf","set"
"enode","data-provider","set_value","set collaborator"
"enode","data-provider","set_justification","set collaborator"
"enode","data-provider","set_is_equality","set"
"enode","data-provider","set_bool_var","set collaborator"
"enode","data-provider","~enode","destructor"
"enode","data-provider","args","get"
"enode","data-provider","num_args","get"
"enode","data-provider","num_parents","unclassified"
"enode","data-provider","interpreted","get"
"enode","data-provider","is_equality","get"
"enode","data-provider","is_relevant","get"
"enode","data-provider","set_relevant","set"
"enode","data-provider","value","get collaborator"
"enode","data-provider","bool_var","get collaborator"
"enode","data-provider","is_cgr","predicate"
"enode","data-provider","get_cg","get"
"enode","data-provider","commutative","get"
"enode","data-provider","mark_interpreted","set"
"enode","data-provider","cgc_enabled","get"
"enode","data-provider","merge_tf","predicate"
"enode","data-provider","get_arg","get"
"enode","data-provider","hash","unclassified"
"enode","data-provider","get_table_id","get"
"enode","data-provider","set_table_id","set"
"enode","data-provider","generation","get"
"enode","data-provider","mark1","set"
"enode","data-provider","unmark1","set"
"enode","data-provider","is_marked1","get"
"enode","data-provider","mark2","set"
"enode","data-provider","unmark2","set"
"enode","data-provider","is_marked2","get"
"enode","data-provider","mark3","set"
"enode","data-provider","unmark3","set"
"enode","data-provider","is_marked3","get"
"enode","data-provider","is_shared","get collaborator"
"enode","data-provider","set_is_shared","set collaborator"
"enode","data-provider","mark1_targets","controller"
"enode","data-provider","mark2_targets","controller"
"enode","data-provider","add_parent","command"
"enode","data-provider","class_size","get"
"enode","data-provider","is_root","predicate"
"enode","data-provider","get_root","get"
"enode","data-provider","get_expr","get collaborator"
"enode","data-provider","get_sort","property collaborator"
"enode","data-provider","get_interpreted","property"
"enode","data-provider","get_app","property wrapper"
"enode","data-provider","get_decl","property collaborator"
"enode","data-provider","get_expr_id","unclassified"
"enode","data-provider","get_id","unclassified"
"enode","data-provider","get_small_id","unclassified"
"enode","data-provider","get_root_id","unclassified"
"enode","data-provider","get_next","get"
"enode","data-provider","get_target","get"
"enode","data-provider","get_justification","get collaborator"
"enode","data-provider","get_lit_justification","get collaborator"
"enode","data-provider","has_lbl_hash","predicate"
"enode","data-provider","get_lbl_hash","property"
"enode","data-provider","get_lbls","get collaborator"
"enode","data-provider","get_plbls","get collaborator"
"enode","data-provider","get_lbls","get collaborator"
"enode","data-provider","get_plbls","get collaborator"
"enode","data-provider","get_th_var","property collaborator"
"enode","data-provider","is_attached_to","predicate collaborator"
"enode","data-provider","has_th_vars","predicate"
"enode","data-provider","has_one_th_var","predicate"
"enode","data-provider","get_first_th_id","property collaborator"
"enode","data-provider","inc_class_size","set"
"enode","data-provider","dec_class_size","set"
"enode","data-provider","begin_parents","property"
"enode","data-provider","end_parents","property"
"enode","data-provider","get_th_var_list","property non-void-command collaborator"
"enode","data-provider","merge_tf","get"
"enode","data-provider","get_func_decl_id","get"
"enode","data-provider","set_func_decl_id","set"
"enode","data-provider","mark_as_interpreted","set"
"enode","data-provider","get_expr","get collaborator"
"enode","data-provider","get_owner_id","unclassified"
"enode","data-provider","get_expr_id","unclassified"
"enode","data-provider","get_decl","property collaborator"
"enode","data-provider","get_decl_id","unclassified"
"enode","data-provider","get_sort","property collaborator"
"enode","data-provider","hash","unclassified"
"enode","data-provider","is_shared","property collaborator"
"enode","data-provider","set_is_shared","set collaborator"
"enode","data-provider","get_root","get"
"enode","data-provider","is_root","predicate"
"enode","data-provider","set_root","set"
"enode","data-provider","get_next","get"
"enode","data-provider","get_num_args","unclassified"
"enode","data-provider","get_arg","get"
"enode","data-provider","get_args","get"
"enode","data-provider","get_const_args","property wrapper"
"enode","data-provider","get_class_size","get"
"enode","data-provider","is_bool","get"
"enode","data-provider","is_eq","get"
"enode","data-provider","is_true_eq","predicate"
"enode","data-provider","is_marked","get"
"enode","data-provider","set_mark","set"
"enode","data-provider","unset_mark","set"
"enode","data-provider","is_marked2","get"
"enode","data-provider","set_mark2","set"
"enode","data-provider","unset_mark2","set"
"enode","data-provider","is_interpreted","get"
"enode","data-provider","is_cgr","predicate"
"enode","data-provider","get_cg","get"
"enode","data-provider","is_cgc_enabled","get"
"enode","data-provider","is_commutative","get"
"enode","data-provider","get_parents","property wrapper"
"enode","data-provider","get_const_parents","property wrapper"
"enode","data-provider","get_num_parents","unclassified"
"enode","data-provider","begin_parents","property non-void-command collaborator"
"enode","data-provider","end_parents","property non-void-command collaborator"
"enode","data-provider","begin_parents","property collaborator"
"enode","data-provider","end_parents","property collaborator"
"enode","data-provider","begin","property wrapper"
"enode","data-provider","end","property wrapper"
"enode","data-provider","get_th_var_list","property collaborator"
"enode","data-provider","has_th_vars","predicate"
"enode","data-provider","get_trans_justification","get collaborator"
"enode","data-provider","get_generation","get"
"enode","data-provider","get_iscope_lvl","get"
"enode","data-provider","has_lbl_hash","predicate"
"enode","data-provider","get_lbl_hash","property"
"enode","data-provider","get_lbls","get collaborator"
"enode","data-provider","get_plbls","get collaborator"
"enode","data-provider","get_lbls","get collaborator"
"enode","data-provider","get_plbls","get collaborator"
"enode","data-provider","enode::invariant","command collaborator"
"enode","data-provider","enode::congruent","predicate"
"enode","data-provider","enode::get_closest_th_var","property controller"
"enode","data-provider","enode::get_closest_th_node","property controller"
"enode","data-provider","enode::acyclic","predicate"
"enode","data-provider","enode::reaches","predicate"
"enode","data-provider","enode::reverse_justification","wrapper"
"enode","data-provider","enode::children_are_roots","predicate controller"
"enode","data-provider","enode::class_generation","controller"
"enode","data-provider","enode::init","non-void-command factory"
"enode","data-provider","enode::mk","property non-void-command"
"enode","data-provider","enode::mk_dummy","property non-void-command collaborator"
"enode","data-provider","enode::del_eh","command"
"enode","data-provider","enode::get_num_th_vars","unclassified"
"enode","data-provider","enode::get_th_var","property collaborator"
"enode","data-provider","enode::add_th_var","command collaborator"
"enode","data-provider","enode::replace_th_var","command collaborator"
"enode","data-provider","enode::del_th_var","command collaborator"
"enode","data-provider","enode::set_generation","set"
"enode","data-provider","enode::set_lbl_hash","set collaborator"
"enode","data-provider","enode::get_eq_enode_with_min_gen","get property"
"enode","data-provider","enode::check_invariant","predicate"
"enode","data-provider","enode::trans_reaches","predicate"
"enode","data-provider","enode::check_parent_invariant","predicate"
"enode","data-provider","enode::contains_parent_congruent_to","predicate wrapper"
"enode","data-provider","enode::display_lbls","collaborator"
"elim_bounds_cfg","entity boundary","elim_bounds_cfg::elim_bounds_cfg","constructor"
"elim_bounds_cfg","entity boundary","elim_bounds_cfg::is_bound","predicate non-void-command collaborator"
"elim_bounds_cfg","entity boundary","elim_bounds_cfg::is_bound","predicate non-void-command collaborator"
"elim_bounds_cfg","entity boundary","elim_bounds_cfg::reduce_quantifier","predicate non-void-command collaborator"
"char_decl_plugin","data-provider boundary","finalize","empty"
"char_decl_plugin","data-provider boundary","mk_fresh","wrapper stateless"
"char_decl_plugin","data-provider boundary","mk_sort","get collaborator"
"char_decl_plugin","data-provider boundary","char_sort","get collaborator"
"char_decl_plugin","data-provider boundary","mk_to_int","property non-void-command collaborator"
"char_decl_plugin","data-provider boundary","mk_is_digit","property non-void-command collaborator"
"char_decl_plugin","data-provider boundary","is_le","predicate wrapper"
"char_decl_plugin","data-provider boundary","is_const_char","predicate wrapper"
"char_decl_plugin","data-provider boundary","is_to_int","predicate wrapper"
"char_decl_plugin","data-provider boundary","is_is_digit","predicate wrapper"
"char_decl_plugin","data-provider boundary","is_char2bv","predicate wrapper"
"char_decl_plugin","data-provider boundary","is_bv2char","predicate wrapper"
"char_decl_plugin","data-provider boundary","char_decl_plugin::char_decl_plugin","constructor"
"char_decl_plugin","data-provider boundary","char_decl_plugin::~char_decl_plugin","destructor"
"char_decl_plugin","data-provider boundary","char_decl_plugin::mk_func_decl","property controller"
"char_decl_plugin","data-provider boundary","char_decl_plugin::set_manager","set collaborator"
"char_decl_plugin","data-provider boundary","char_decl_plugin::get_op_names","controller stateless"
"char_decl_plugin","data-provider boundary","char_decl_plugin::get_sort_names","controller stateless"
"char_decl_plugin","data-provider boundary","char_decl_plugin::is_value","predicate wrapper"
"char_decl_plugin","data-provider boundary","char_decl_plugin::is_unique_value","predicate collaborator"
"char_decl_plugin","data-provider boundary","char_decl_plugin::are_equal","collaborator incidental"
"char_decl_plugin","data-provider boundary","char_decl_plugin::are_distinct","predicate wrapper"
"char_decl_plugin","data-provider boundary","char_decl_plugin::mk_char","property non-void-command collaborator"
"char_decl_plugin","data-provider boundary","char_decl_plugin::get_some_value","property non-void-command collaborator"
"char_decl_plugin","data-provider boundary","char_decl_plugin::mk_le","property non-void-command collaborator"
"lookahead_literal_occs_fun","entity boundary small-class","lookahead_literal_occs_fun","constructor"
"lookahead_literal_occs_fun","entity boundary small-class","operator()","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","m","get collaborator"
"bv2real_rewriter","entity boundary","a","get collaborator"
"bv2real_rewriter","entity boundary","u","get collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::bv2real_rewriter","constructor"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_app_core","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_le","predicate non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_le_pos","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_lt_pos","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_le","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_lt","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_ge","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_gt","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_ite","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_eq","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_uminus","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_add","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_add","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_mul","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_div","collaborator incidental"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_mul","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_sub","property non-void-command collaborator"
"bv2real_rewriter","entity boundary","bv2real_rewriter::mk_sub","property non-void-command collaborator"
"eq_der","boundary","is_sub_extract","predicate non-void-command collaborator"
"eq_der","boundary","strict_occurs_var","predicate non-void-command collaborator"
"eq_der","boundary","der_sort_vars","void-accessor command collaborator"
"eq_der","boundary","is_variable","wrapper stateless"
"eq_der","boundary","is_neg_var","predicate non-void-command collaborator"
"eq_der","boundary","is_var_diseq","predicate non-void-command collaborator"
"eq_der","boundary","trivial_solve","predicate non-void-command collaborator"
"eq_der","boundary","same_vars","controller stateless"
"eq_der","boundary","is_var_eq","predicate non-void-command collaborator"
"eq_der","boundary","is_var_def","predicate non-void-command collaborator"
"eq_der","boundary","get_elimination_order","command"
"eq_der","boundary","create_substitution","command"
"eq_der","boundary","flatten_args","void-accessor command collaborator"
"eq_der","boundary","apply_substitution","void-accessor command collaborator"
"eq_der","boundary","reduce_quantifier1","void-accessor command collaborator"
"eq_der","boundary","elim_unused_vars","void-accessor command collaborator"
"eq_der","boundary","find_definitions","void-accessor command collaborator"
"eq_der","boundary","flatten_definitions","void-accessor command collaborator"
"eq_der","boundary","flatten_constructor","command collaborator"
"eq_der","boundary","is_unconstrained","predicate non-void-command collaborator"
"eq_der","boundary","remove_unconstrained","predicate non-void-command collaborator"
"eq_der","boundary","reduce_var_set","predicate non-void-command collaborator"
"eq_der","boundary","checkpoint","command"
"eq_der","boundary","eq_der","constructor"
"eq_der","boundary","set_is_variable_proc","command collaborator"
"eq_der","boundary","operator()","void-accessor command collaborator"
"eq_der","boundary","reduce_quantifier","void-accessor command collaborator"
"eq_der","boundary","operator()","command collaborator"
"eq_der","boundary","get_manager","get collaborator"
"occf_tactic","degenerate","translate","wrapper stateless"
"occf_tactic","degenerate","~occf_tactic","destructor"
"occf_tactic","degenerate","name","incidental"
"occf_tactic","degenerate","updt_params","empty"
"occf_tactic","degenerate","collect_param_descrs","empty"
"occf_tactic","degenerate","operator()","wrapper stateless"
"occf_tactic","degenerate","cleanup","wrapper"
"poly_hash_proc","boundary small-class","poly_hash_proc","constructor"
"poly_hash_proc","boundary small-class","operator()","collaborator"
"val_pp","data-provider","lparen","property"
"val_pp","data-provider","rparen","property"
"val_pp","data-provider","val_pp","constructor"
"val_pp","data-provider","val_pp::display","property collaborator"
"ctx_simplify_tactic::imp","boundary","~imp","destructor"
"ctx_simplify_tactic::imp","boundary","updt_params","command collaborator"
"ctx_simplify_tactic::imp","boundary","checkpoint","command"
"ctx_simplify_tactic::imp","boundary","shared","predicate collaborator"
"ctx_simplify_tactic::imp","boundary","check_cache","predicate non-void-command collaborator"
"ctx_simplify_tactic::imp","boundary","cache_core","command collaborator"
"ctx_simplify_tactic::imp","boundary","cache","command collaborator"
"ctx_simplify_tactic::imp","boundary","scope_level","unclassified"
"ctx_simplify_tactic::imp","boundary","restore_cache","command collaborator"
"ctx_simplify_tactic::imp","boundary","pop","command"
"ctx_simplify_tactic::imp","boundary","assert_expr","predicate non-void-command"
"ctx_simplify_tactic::imp","boundary","is_cached","predicate non-void-command collaborator"
"ctx_simplify_tactic::imp","boundary","simplify","void-accessor command collaborator"
"ctx_simplify_tactic::imp","boundary","simplify_or_and","void-accessor command collaborator"
"ctx_simplify_tactic::imp","boundary","simplify_ite","void-accessor command collaborator"
"ctx_simplify_tactic::imp","boundary","simplify_app","void-accessor command collaborator"
"ctx_simplify_tactic::imp","boundary","expr_size","controller stateless"
"ctx_simplify_tactic::imp","boundary","process_goal","command collaborator"
"ctx_simplify_tactic::imp","boundary","process","void-accessor command collaborator"
"ctx_simplify_tactic::imp","boundary","operator()","command collaborator"
"internal_symbol_table","small-class","internal_symbol_table","constructor"
"internal_symbol_table","small-class","~internal_symbol_table","destructor"
"internal_symbol_table","small-class","get_str","property non-void-command"
"prime_iterator","lazy-class degenerate","prime_iterator::prime_iterator","constructor"
"prime_iterator","lazy-class degenerate","prime_iterator::next","property set collaborator"
"prime_iterator","lazy-class degenerate","prime_iterator::initialize","controller stateless"
"prime_iterator","lazy-class degenerate","prime_iterator::finalize","controller stateless"
"equal_to<z3::expr>","boundary degenerate small-class","operator()","wrapper stateless"
"concat_converter","pure-controller degenerate","translate_core","controller stateless"
"concat_converter","pure-controller degenerate","concat_converter","constructor"
"concat_converter","pure-controller degenerate","cancel","controller stateless"
"concat_converter","pure-controller degenerate","display","controller stateless"
"IntSort","empty","IntSort","constructor"
"IntSort","empty","IntSort","constructor"
"nex_sum","unclassified","operator[]","get collaborator"
"nex_sum","unclassified","type","collaborator incidental"
"nex_sum","unclassified","size","unclassified"
"nex_sum","unclassified","is_linear","predicate controller"
"nex_sum","unclassified","is_a_linear_term","predicate controller"
"nex_sum","unclassified","print","property controller"
"nex_sum","unclassified","get_degree","controller"
"nex_sum","unclassified","operator[]","get collaborator"
"nex_sum","unclassified","begin","property collaborator"
"nex_sum","unclassified","end","property collaborator"
"nex_sum","unclassified","sort","wrapper stateless"
"basic_expr_inverter","entity boundary","process_eq","predicate non-void-command collaborator"
"basic_expr_inverter","entity boundary","basic_expr_inverter","constructor"
"basic_expr_inverter","entity boundary","get_fid","property collaborator"
"basic_expr_inverter","entity boundary","operator()","predicate non-void-command collaborator"
"basic_expr_inverter","entity boundary","mk_diff","predicate non-void-command collaborator"
"undef_var_assignment","data-provider boundary","undef_var_assignment","constructor"
"undef_var_assignment","data-provider boundary","m","property collaborator"
"undef_var_assignment","data-provider boundary","contains","predicate collaborator"
"undef_var_assignment","data-provider boundary","operator()","property collaborator"
"binary_tactical","pure-controller degenerate","binary_tactical","constructor"
"binary_tactical","pure-controller degenerate","updt_params","controller stateless"
"binary_tactical","pure-controller degenerate","collect_param_descrs","controller stateless"
"binary_tactical","pure-controller degenerate","collect_statistics","controller stateless"
"binary_tactical","pure-controller degenerate","reset_statistics","controller stateless"
"binary_tactical","pure-controller degenerate","cleanup","controller stateless"
"binary_tactical","pure-controller degenerate","reset","controller stateless"
"binary_tactical","pure-controller degenerate","set_logic","controller stateless"
"binary_tactical","pure-controller degenerate","set_progress_callback","controller stateless"
"binary_tactical","pure-controller degenerate","translate_core","controller stateless"
"bound_relation_plugin::filter_identical_fn","commander boundary small-class","operator()","command collaborator"
"sieve_relation_plugin::transformer_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"z3_replayer::imp","unclassified","kind2string","wrapper stateless"
"z3_replayer::imp","unclassified","check_arg","collaborator"
"z3_replayer::imp","unclassified","display_arg","wrapper stateless"
"z3_replayer::imp","unclassified","display_args","collaborator"
"z3_replayer::imp","unclassified","curr","get"
"z3_replayer::imp","unclassified","new_line","set"
"z3_replayer::imp","unclassified","next","set"
"z3_replayer::imp","unclassified","read_string_core","command"
"z3_replayer::imp","unclassified","read_string","command"
"z3_replayer::imp","unclassified","read_quoted_symbol","command"
"z3_replayer::imp","unclassified","read_int64","command"
"z3_replayer::imp","unclassified","read_uint64","command"
"z3_replayer::imp","unclassified","is_double_char","predicate"
"z3_replayer::imp","unclassified","strtof","wrapper stateless"
"z3_replayer::imp","unclassified","read_float","command"
"z3_replayer::imp","unclassified","read_double","command"
"z3_replayer::imp","unclassified","read_ptr","command"
"z3_replayer::imp","unclassified","skip_blank","command"
"z3_replayer::imp","unclassified","push_array","command collaborator"
"z3_replayer::imp","unclassified","parse","command"
"z3_replayer::imp","unclassified","get_int","property"
"z3_replayer::imp","unclassified","get_int64","get"
"z3_replayer::imp","unclassified","get_uint","unclassified"
"z3_replayer::imp","unclassified","get_uint64","get"
"z3_replayer::imp","unclassified","get_float","get"
"z3_replayer::imp","unclassified","get_double","get"
"z3_replayer::imp","unclassified","get_str","get collaborator"
"z3_replayer::imp","unclassified","get_symbol","property collaborator"
"z3_replayer::imp","unclassified","get_obj","get collaborator"
"z3_replayer::imp","unclassified","get_uint_array","get"
"z3_replayer::imp","unclassified","get_int_array","get"
"z3_replayer::imp","unclassified","get_bool_array","predicate"
"z3_replayer::imp","unclassified","get_symbol_array","get collaborator"
"z3_replayer::imp","unclassified","get_obj_array","property collaborator"
"z3_replayer::imp","unclassified","get_int_addr","property non-void-command"
"z3_replayer::imp","unclassified","get_int64_addr","property non-void-command"
"z3_replayer::imp","unclassified","get_uint_addr","non-void-command"
"z3_replayer::imp","unclassified","get_uint64_addr","property non-void-command"
"z3_replayer::imp","unclassified","get_str_addr","property non-void-command collaborator"
"z3_replayer::imp","unclassified","get_obj_addr","property command collaborator"
"z3_replayer::imp","unclassified","store_result","set"
"z3_replayer::imp","unclassified","register_cmd","command"
"z3_replayer::imp","unclassified","reset","command"
"probe","unclassified","init","set collaborator"
"probe","unclassified","probe","constructor"
"probe","unclassified","probe","constructor"
"probe","unclassified","probe","copy-constructor"
"probe","unclassified","probe","copy-constructor"
"probe","unclassified","~probe","destructor"
"probe","unclassified","operatorZ3_probe","get"
"probe","unclassified","operator=","get set"
"probe","unclassified","apply","property collaborator"
"probe","unclassified","operator()","property collaborator"
"probe","unclassified","inc_ref","set"
"probe","unclassified","dec_ref","set"
"is_non_qffplra_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qffplra_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qffplra_predicate","commander boundary degenerate","operator()","command collaborator"
"mk_lits_pp","empty","mk_lits_pp","constructor"
"mk_coalesce","boundary","mk_coalesce::mk_coalesce","constructor"
"mk_coalesce","boundary","mk_coalesce::mk_pred","void-accessor command collaborator"
"mk_coalesce","boundary","mk_coalesce::extract_conjs","void-accessor command collaborator"
"mk_coalesce","boundary","mk_coalesce::merge_rules","void-accessor command collaborator"
"mk_coalesce","boundary","mk_coalesce::same_body","controller stateless"
"mk_coalesce","boundary","mk_coalesce::operator()","property non-void-command collaborator"
"tmp_monomial","commander boundary","allocate","property non-void-command factory collaborator"
"tmp_monomial","commander boundary","deallocate","wrapper stateless"
"tmp_monomial","commander boundary","increase_capacity","command"
"tmp_monomial","commander boundary","expand_capacity","command collaborator"
"tmp_monomial","commander boundary","tmp_monomial","constructor"
"tmp_monomial","commander boundary","~tmp_monomial","destructor"
"tmp_monomial","commander boundary","init","set collaborator"
"tmp_monomial","commander boundary","reset","set"
"tmp_monomial","commander boundary","size","unclassified"
"tmp_monomial","commander boundary","push_back","command collaborator"
"tmp_monomial","commander boundary","get_ptr","get set collaborator"
"tmp_monomial","commander boundary","reserve","command"
"tmp_monomial","commander boundary","set_size","set"
"tmp_monomial","commander boundary","set_power","set collaborator"
"tmp_monomial","commander boundary","get_power","property collaborator"
"tmp_monomial","commander boundary","get_powers","property collaborator"
"user_propagator_subquery_maximisation","empty","user_propagator_subquery_maximisation","constructor"
"decl_collector","entity boundary","reset","command"
"decl_collector","entity boundary","get_num_sorts","unclassified"
"decl_collector","entity boundary","get_num_decls","unclassified"
"decl_collector","entity boundary","get_sorts","get collaborator"
"decl_collector","entity boundary","get_func_decls","get collaborator"
"decl_collector","entity boundary","get_rec_decls","get collaborator"
"decl_collector","entity boundary","decl_collector::visit_sort","command collaborator"
"decl_collector","entity boundary","decl_collector::is_bool","predicate non-void-command collaborator"
"decl_collector","entity boundary","decl_collector::visit_func","command collaborator"
"decl_collector","entity boundary","decl_collector::should_declare","predicate collaborator"
"decl_collector","entity boundary","decl_collector::decl_collector","constructor"
"decl_collector","entity boundary","decl_collector::visit","void-accessor command collaborator"
"decl_collector","entity boundary","decl_collector::order_deps","command collaborator"
"decl_collector","entity boundary","decl_collector::collect_deps","property non-void-command collaborator"
"decl_collector","entity boundary","decl_collector::collect_deps","command collaborator"
"decl_collector","entity boundary","decl_collector::push","command"
"decl_collector","entity boundary","decl_collector::pop","command"
"theory_diff_logic_statistics","boundary small-class","reset","wrapper"
"theory_diff_logic_statistics","boundary small-class","theory_diff_logic_statistics","constructor"
"sat_smt_solver","boundary","is_internalized","predicate"
"sat_smt_solver","boundary","translate","property non-void-command collaborator"
"sat_smt_solver","boundary","set_progress_callback","empty"
"sat_smt_solver","boundary","init_check_sat","command"
"sat_smt_solver","boundary","check_sat_core","property non-void-command collaborator"
"sat_smt_solver","boundary","push","command collaborator"
"sat_smt_solver","boundary","push_internal","command"
"sat_smt_solver","boundary","pop","command"
"sat_smt_solver","boundary","set_phase","command collaborator"
"sat_smt_solver","boundary","get_phase","property non-void-command collaborator"
"sat_smt_solver","boundary","set_phase","command collaborator"
"sat_smt_solver","boundary","move_to_front","command collaborator"
"sat_smt_solver","boundary","get_scope_level","unclassified"
"sat_smt_solver","boundary","is_literal","predicate collaborator"
"sat_smt_solver","boundary","ensure_literal","property non-void-command factory collaborator"
"sat_smt_solver","boundary","assert_expr_core2","void-accessor command collaborator"
"sat_smt_solver","boundary","assert_expr_core","command collaborator"
"sat_smt_solver","boundary","get_manager","get collaborator"
"sat_smt_solver","boundary","set_produce_models","empty"
"sat_smt_solver","boundary","collect_param_descrs","command collaborator"
"sat_smt_solver","boundary","updt_params","command collaborator"
"sat_smt_solver","boundary","collect_statistics","collaborator"
"sat_smt_solver","boundary","get_unsat_core","command collaborator"
"sat_smt_solver","boundary","get_levels","void-accessor command collaborator"
"sat_smt_solver","boundary","get_trail","property non-void-command collaborator"
"sat_smt_solver","boundary","get_proof_core","collaborator incidental"
"sat_smt_solver","boundary","last_cube","property non-void-command collaborator"
"sat_smt_solver","boundary","cube","property non-void-command collaborator"
"sat_smt_solver","boundary","congruence_next","collaborator incidental"
"sat_smt_solver","boundary","congruence_root","collaborator incidental"
"sat_smt_solver","boundary","find_mutexes","property non-void-command collaborator"
"sat_smt_solver","boundary","init_reason_unknown","set"
"sat_smt_solver","boundary","reason_unknown","get"
"sat_smt_solver","boundary","set_reason_unknown","set"
"sat_smt_solver","boundary","set_reason_unknown","set"
"sat_smt_solver","boundary","get_labels","empty"
"sat_smt_solver","boundary","get_num_assertions","unclassified"
"sat_smt_solver","boundary","get_assertion","get property collaborator"
"sat_smt_solver","boundary","get_num_assumptions","unclassified"
"sat_smt_solver","boundary","get_assumption","get collaborator"
"sat_smt_solver","boundary","get_model_converter","get property collaborator"
"sat_smt_solver","boundary","convert_internalized","command collaborator"
"sat_smt_solver","boundary","get_euf","property non-void-command collaborator"
"sat_smt_solver","boundary","init_goal2sat","controller"
"sat_smt_solver","boundary","ensure_euf","property non-void-command collaborator"
"sat_smt_solver","boundary","register_on_clause","command collaborator"
"sat_smt_solver","boundary","user_propagate_init","command collaborator"
"sat_smt_solver","boundary","user_propagate_register_fixed","command collaborator"
"sat_smt_solver","boundary","user_propagate_register_final","command collaborator"
"sat_smt_solver","boundary","user_propagate_register_eq","command collaborator"
"sat_smt_solver","boundary","user_propagate_register_diseq","command collaborator"
"sat_smt_solver","boundary","user_propagate_register_expr","command collaborator"
"sat_smt_solver","boundary","user_propagate_register_created","command collaborator"
"sat_smt_solver","boundary","user_propagate_register_decide","command collaborator"
"sat_smt_solver","boundary","add_assumption","command collaborator"
"sat_smt_solver","boundary","internalize_assumptions","command collaborator"
"sat_smt_solver","boundary","internalize_formulas","property non-void-command collaborator"
"sat_smt_solver","boundary","extract_core","command collaborator"
"sat_smt_solver","boundary","check_assumptions","command collaborator"
"sat_smt_solver","boundary","get_model_core","void-accessor command collaborator"
"model","boundary","init","set collaborator"
"model","boundary","~model","destructor"
"model","boundary","operatorZ3_model","get"
"model","boundary","operator=","get set"
"model","boundary","eval","property collaborator"
"model","boundary","num_consts","unclassified"
"model","boundary","num_funcs","unclassified"
"model","boundary","get_const_decl","property collaborator"
"model","boundary","get_func_decl","property collaborator"
"model","boundary","size","unclassified"
"model","boundary","operator[]","property collaborator"
"model","boundary","get_const_interp","property collaborator"
"model","boundary","get_func_interp","property collaborator"
"model","boundary","has_interp","predicate collaborator"
"model","boundary","add_func_interp","property non-void-command collaborator"
"model","boundary","add_const_interp","command collaborator"
"model","boundary","to_string","property"
"model","boundary","set_inline","set"
"model","boundary","set_model_completion","command"
"model","boundary","model::model","constructor"
"model","boundary","model::~model","destructor"
"model","boundary","model::updt_params","set collaborator"
"model","boundary","model::copy_const_interps","command collaborator"
"model","boundary","model::copy_func_interps","command collaborator"
"model","boundary","model::copy_usort_interps","command collaborator"
"model","boundary","model::copy","property controller"
"model","boundary","model::eval_expr","predicate wrapper"
"model","boundary","model::get_factory","property non-void-command collaborator"
"model","boundary","model::get_some_value","property non-void-command collaborator"
"model","boundary","model::get_fresh_value","property non-void-command collaborator"
"model","boundary","model::register_value","command collaborator"
"model","boundary","model::get_some_values","predicate non-void-command collaborator"
"model","boundary","model::get_universe","get collaborator"
"model","boundary","model::has_uninterpreted_sort","controller stateless"
"model","boundary","model::get_num_uninterpreted_sorts","unclassified"
"model","boundary","model::get_uninterpreted_sort","get collaborator"
"model","boundary","model::register_usort","command collaborator"
"model","boundary","model::translate","property controller"
"model","boundary","model::evaluate_constants","command collaborator"
"model","boundary","model::compress","command collaborator"
"model","boundary","model::collect_deps","command collaborator"
"model","boundary","model::collect_deps","property wrapper"
"model","boundary","model::collect_deps","property controller"
"model","boundary","model::cleanup_interp","command collaborator"
"model","boundary","model::collect_occs","command collaborator"
"model","boundary","model::collect_occs","wrapper stateless"
"model","boundary","model::can_inline_def","predicate non-void-command collaborator"
"model","boundary","model::cleanup_expr","property non-void-command factory collaborator"
"model","boundary","model::remove_decls","controller stateless"
"model","boundary","model::unfold_as_array","property non-void-command collaborator"
"model","boundary","model::get_inlined_const_interp","property non-void-command collaborator"
"model","boundary","model::operator()","wrapper stateless"
"model","boundary","model::set_solver","command collaborator"
"model","boundary","model::has_solver","predicate non-void-command"
"model","boundary","model::operator()","property controller"
"model","boundary","model::is_true","predicate non-void-command collaborator"
"model","boundary","model::is_false","predicate non-void-command collaborator"
"model","boundary","model::is_true","predicate non-void-command collaborator"
"model","boundary","model::is_false","predicate non-void-command collaborator"
"model","boundary","model::are_equal","predicate non-void-command collaborator"
"model","boundary","model::reset_eval_cache","command"
"model","boundary","model::add_rec_funs","command collaborator"
"pb_rewriter_util","unclassified","pb_rewriter_util","constructor"
"pb_rewriter_util","unclassified","pb_rewriter_util<PBU>::display","command"
"pb_rewriter_util","unclassified","pb_rewriter_util<PBU>::unique","void-accessor command"
"pb_rewriter_util","unclassified","pb_rewriter_util<PBU>::normalize","property non-void-command collaborator"
"pb_rewriter_util","unclassified","pb_rewriter_util<PBU>::prune","void-accessor command"
"ddnf_node","unclassified","~ddnf_node","destructor"
"ddnf_node","unclassified","inc_ref","set"
"ddnf_node","unclassified","dec_ref","set"
"ddnf_node","unclassified","descendants","get collaborator"
"ddnf_node","unclassified","get_id","get"
"ddnf_node","unclassified","num_children","unclassified"
"ddnf_node","unclassified","operator[]","get wrapper"
"ddnf_node","unclassified","get_tbv","get collaborator"
"ddnf_node","unclassified","display","collaborator"
"ddnf_node","unclassified","ddnf_node::add_child","command"
"ddnf_node","unclassified","ddnf_node::remove_child","command"
"ddnf_node","unclassified","ddnf_node::contains_child","predicate"
"lackr_model_constructor::imp","boundary","~imp","destructor"
"lackr_model_constructor::imp","boundary","check","predicate non-void-command collaborator"
"lackr_model_constructor::imp","boundary","make_model","command collaborator"
"lackr_model_constructor::imp","boundary","add_entry","controller"
"lackr_model_constructor::imp","boundary","check_term","predicate non-void-command collaborator"
"lackr_model_constructor::imp","boundary","_check_stack","predicate non-void-command collaborator"
"lackr_model_constructor::imp","boundary","is_val","predicate non-void-command collaborator"
"lackr_model_constructor::imp","boundary","eval_cached","predicate non-void-command collaborator"
"lackr_model_constructor::imp","boundary","evaluate","predicate non-void-command collaborator"
"lackr_model_constructor::imp","boundary","mk_value","predicate non-void-command collaborator"
"lackr_model_constructor::imp","boundary","make_value_constant","void-accessor command collaborator"
"lackr_model_constructor::imp","boundary","make_value_uninterpreted_function","predicate non-void-command collaborator"
"lackr_model_constructor::imp","boundary","make_value_interpreted_function","command collaborator"
"projection_function","entity boundary small-class","projection_function","constructor"
"projection_function","entity boundary small-class","mk_le","property non-void-command collaborator"
"mk_bounded_pp","empty","mk_bounded_pp","constructor"
"api_context_obj","empty","api_context_obj","constructor"
"api_context_obj","empty","~api_context_obj","destructor"
"explanation_relation_plugin","unclassified","mk_union","property wrapper"
"explanation_relation_plugin","unclassified","~explanation_relation_plugin","destructor"
"explanation_relation_plugin","unclassified","can_handle_signature","controller stateless"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::mk_empty","property non-void-command collaborator"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::recycle","command collaborator"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::mk_join_fn","property controller"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::mk_project_fn","property controller"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::mk_rename_fn","controller stateless"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::mk_union_fn","wrapper stateless"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::mk_filter_interpreted_fn","property controller"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::mk_filter_by_negation_fn","property controller"
"explanation_relation_plugin","unclassified","explanation_relation_plugin::mk_filter_by_intersection_fn","property controller"
"bv2real_rewriter_star","empty","bv2real_rewriter_star","constructor"
"monomial_manager","minimal-entity boundary","monomial_manager","constructor"
"monomial_manager","minimal-entity boundary","~monomial_manager","destructor"
"monomial_manager","minimal-entity boundary","inc_ref","set"
"monomial_manager","minimal-entity boundary","dec_ref","set"
"monomial_manager","minimal-entity boundary","allocator","get collaborator"
"monomial_manager","minimal-entity boundary","mk_var","property set collaborator"
"monomial_manager","minimal-entity boundary","num_vars","get"
"monomial_manager","minimal-entity boundary","is_valid","predicate collaborator"
"monomial_manager","minimal-entity boundary","del","command collaborator"
"monomial_manager","minimal-entity boundary","inc_ref","controller stateless"
"monomial_manager","minimal-entity boundary","dec_ref","command collaborator"
"monomial_manager","minimal-entity boundary","mk_unit","get collaborator"
"monomial_manager","minimal-entity boundary","mk_monomial","property non-void-command factory collaborator"
"monomial_manager","minimal-entity boundary","mk_monomial","property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","convert","property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","mk_monomial","property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","mk_monomial","get property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","mk_monomial","get property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","mul","property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","mul","property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","div_core","controller stateless"
"monomial_manager","minimal-entity boundary","div","predicate controller"
"monomial_manager","minimal-entity boundary","div","predicate non-void-command collaborator"
"monomial_manager","minimal-entity boundary","gcd_core","controller stateless"
"monomial_manager","minimal-entity boundary","gcd","get property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","unify","predicate non-void-command collaborator"
"monomial_manager","minimal-entity boundary","pw","get property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","sqrt","get property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","div_x_k","property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","div_x","property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","derivative","property non-void-command collaborator"
"monomial_manager","minimal-entity boundary","rename","command collaborator"
"produce_proofs_probe","pure-controller degenerate small-class","operator()","controller stateless"
"constructor","data-provider boundary","constructor","constructor"
"constructor","data-provider boundary","constructor","constructor"
"constructor","data-provider boundary","add","command collaborator"
"constructor","data-provider boundary","name","get collaborator"
"constructor","data-provider boundary","recognizer","get collaborator"
"constructor","data-provider boundary","accessors","get collaborator"
"constructor","data-provider boundary","begin","property collaborator"
"constructor","data-provider boundary","end","property collaborator"
"constructor","data-provider boundary","begin","property non-void-command collaborator"
"constructor","data-provider boundary","end","property non-void-command collaborator"
"constructor","data-provider boundary","attach","set collaborator"
"constructor","data-provider boundary","get_def","get collaborator"
"constructor","data-provider boundary","constructor::~constructor","destructor"
"constructor","data-provider boundary","constructor::u","property collaborator"
"constructor","data-provider boundary","constructor::instantiate","property collaborator"
"constructor","data-provider boundary","constructor::instantiate","property collaborator"
"constructor","data-provider boundary","constructor::translate","property controller"
"solve_eqs","boundary","is_var","predicate controller"
"solve_eqs","boundary","var2id","get controller"
"solve_eqs","boundary","can_be_var","predicate collaborator"
"solve_eqs","boundary","name","incidental"
"solve_eqs","boundary","reset_statistics","command"
"solve_eqs","boundary","solve_eqs::get_eqs","command collaborator"
"solve_eqs","boundary","solve_eqs::extract_dep_graph","command collaborator"
"solve_eqs","boundary","solve_eqs::extract_subst","get command collaborator"
"solve_eqs","boundary","solve_eqs::normalize","get command"
"solve_eqs","boundary","solve_eqs::apply_subst","command collaborator"
"solve_eqs","boundary","solve_eqs::reduce","command collaborator"
"solve_eqs","boundary","solve_eqs::collect_num_occs","command collaborator"
"solve_eqs","boundary","solve_eqs::collect_num_occs","command"
"solve_eqs","boundary","solve_eqs::check_occs","predicate collaborator"
"solve_eqs","boundary","solve_eqs::save_subst","command collaborator"
"solve_eqs","boundary","solve_eqs::filter_unsafe_vars","command collaborator"
"solve_eqs","boundary","solve_eqs::solve_eqs","constructor"
"solve_eqs","boundary","solve_eqs::updt_params","command collaborator"
"solve_eqs","boundary","solve_eqs::collect_param_descrs","controller stateless"
"solve_eqs","boundary","solve_eqs::collect_statistics","controller"
"ast_smt_pp","commander boundary","set_benchmark_name","set"
"ast_smt_pp","commander boundary","set_source_info","set"
"ast_smt_pp","commander boundary","set_status","set"
"ast_smt_pp","commander boundary","set_category","set"
"ast_smt_pp","commander boundary","set_logic","set collaborator"
"ast_smt_pp","commander boundary","add_attributes","set"
"ast_smt_pp","commander boundary","add_assumption","command collaborator"
"ast_smt_pp","commander boundary","add_assumption_star","command collaborator"
"ast_smt_pp","commander boundary","set_simplify_implies","set"
"ast_smt_pp","commander boundary","set_is_declared","set collaborator"
"ast_smt_pp","commander boundary","ast_smt_pp::ast_smt_pp","constructor"
"ast_smt_pp","commander boundary","ast_smt_pp::display_expr_smt2","controller"
"ast_smt_pp","commander boundary","ast_smt_pp::display_ast_smt2","wrapper"
"ast_smt_pp","commander boundary","ast_smt_pp::display_sort_decl","controller"
"ast_smt_pp","commander boundary","ast_smt_pp::display_smt2","command collaborator"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::enum2bv_rewriter","constructor"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::~enum2bv_rewriter","destructor"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::updt_params","command collaborator"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::m","property collaborator"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::get_num_steps","unclassified"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::cleanup","set collaborator"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::enum2bv","property collaborator"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::bv2enum","property collaborator"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::enum2def","property collaborator"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::operator()","wrapper stateless"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::push","command"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::pop","command"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::flush_side_constraints","command collaborator"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::num_translated","unclassified"
"enum2bv_rewriter","entity boundary","enum2bv_rewriter::set_is_fd","collaborator"
"basic_spanning_tree","commander boundary small-class","basic_spanning_tree<Ext>::basic_spanning_tree","constructor"
"basic_spanning_tree","commander boundary small-class","basic_spanning_tree<Ext>::initialize","command collaborator"
"basic_spanning_tree","commander boundary small-class","basic_spanning_tree<Ext>::update","command collaborator"
"accessor","entity data-provider boundary","accessor","constructor"
"accessor","entity data-provider boundary","accessor","constructor"
"accessor","entity data-provider boundary","range","get collaborator"
"accessor","entity data-provider boundary","name","get collaborator"
"accessor","entity data-provider boundary","attach","set collaborator"
"accessor","entity data-provider boundary","get_constructor","get collaborator"
"accessor","entity data-provider boundary","accessor::fix_range","set collaborator"
"accessor","entity data-provider boundary","accessor::instantiate","property collaborator"
"accessor","entity data-provider boundary","accessor::instantiate","property collaborator"
"accessor","entity data-provider boundary","accessor::get_def","property collaborator"
"accessor","entity data-provider boundary","accessor::u","property collaborator"
"accessor","entity data-provider boundary","accessor::translate","property non-void-command collaborator"
"env_params","pure-controller degenerate small-class","env_params::updt_params","controller stateless"
"env_params","pure-controller degenerate small-class","env_params::collect_param_descrs","controller stateless"
"theory_datatype","boundary","is_constructor","predicate collaborator"
"theory_datatype","boundary","is_recognizer","predicate collaborator"
"theory_datatype","boundary","is_accessor","predicate collaborator"
"theory_datatype","boundary","is_update_field","predicate collaborator"
"theory_datatype","boundary","is_constructor","predicate collaborator"
"theory_datatype","boundary","is_recognizer","predicate collaborator"
"theory_datatype","boundary","is_accessor","predicate collaborator"
"theory_datatype","boundary","is_update_field","predicate collaborator"
"theory_datatype","boundary","oc_on_stack","controller stateless"
"theory_datatype","boundary","oc_cycle_free","controller stateless"
"theory_datatype","boundary","restart_eh","command"
"theory_datatype","boundary","get_trail_stack","get collaborator"
"theory_datatype","boundary","get_name","incidental"
"theory_datatype","boundary","theory_datatype::clear_mark","command"
"theory_datatype","boundary","theory_datatype::oc_mark_on_stack","void-accessor command collaborator"
"theory_datatype","boundary","theory_datatype::oc_mark_cycle_free","controller stateless"
"theory_datatype","boundary","theory_datatype::oc_push_stack","command collaborator"
"theory_datatype","boundary","theory_datatype::mk_fresh","wrapper stateless"
"theory_datatype","boundary","theory_datatype::assert_eq_axiom","command collaborator"
"theory_datatype","boundary","theory_datatype::assert_is_constructor_axiom","command collaborator"
"theory_datatype","boundary","theory_datatype::assert_accessor_axioms","command collaborator"
"theory_datatype","boundary","theory_datatype::sign_recognizer_conflict","command collaborator"
"theory_datatype","boundary","theory_datatype::assert_update_field_axioms","command collaborator"
"theory_datatype","boundary","theory_datatype::mk_var","property non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::internalize_atom","predicate non-void-command"
"theory_datatype","boundary","theory_datatype::internalize_term","predicate non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::apply_sort_cnstr","command collaborator"
"theory_datatype","boundary","theory_datatype::new_eq_eh","command collaborator"
"theory_datatype","boundary","theory_datatype::use_diseqs","incidental"
"theory_datatype","boundary","theory_datatype::new_diseq_eh","wrapper stateless"
"theory_datatype","boundary","theory_datatype::assign_eh","command collaborator"
"theory_datatype","boundary","theory_datatype::relevant_eh","command collaborator"
"theory_datatype","boundary","theory_datatype::push_scope_eh","command"
"theory_datatype","boundary","theory_datatype::pop_scope_eh","command"
"theory_datatype","boundary","theory_datatype::final_check_eh","property non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::oc_get_cstor","property non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::explain_is_child","command collaborator"
"theory_datatype","boundary","theory_datatype::occurs_check_explain","void-accessor command collaborator"
"theory_datatype","boundary","theory_datatype::occurs_check_enter","predicate non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::get_seq_args","get non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::get_array_args","get non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::occurs_check","predicate non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::reset_eh","command"
"theory_datatype","boundary","theory_datatype::is_shared","collaborator incidental"
"theory_datatype","boundary","theory_datatype::params","property collaborator"
"theory_datatype","boundary","theory_datatype::theory_datatype","constructor"
"theory_datatype","boundary","theory_datatype::~theory_datatype","destructor"
"theory_datatype","boundary","theory_datatype::display","collaborator"
"theory_datatype","boundary","theory_datatype::collect_statistics","controller"
"theory_datatype","boundary","theory_datatype::display_var","collaborator"
"theory_datatype","boundary","theory_datatype::include_func_interp","predicate non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::init_model","set collaborator"
"theory_datatype","boundary","theory_datatype::mk_value","property non-void-command collaborator"
"theory_datatype","boundary","theory_datatype::merge_eh","command collaborator"
"theory_datatype","boundary","theory_datatype::unmerge_eh","empty"
"theory_datatype","boundary","theory_datatype::add_recognizer","command collaborator"
"theory_datatype","boundary","theory_datatype::propagate_recognizer","command collaborator"
"theory_datatype","boundary","theory_datatype::mk_split","command collaborator"
"instantiation","empty","instantiation","constructor"
"aig_exporter","commander boundary","aig_exporter::aig_exporter","constructor"
"aig_exporter","commander boundary","aig_exporter::mk_latch_vars","command"
"aig_exporter","commander boundary","aig_exporter::get_latch_var","property non-void-command collaborator"
"aig_exporter","commander boundary","aig_exporter::assert_pred_id","command collaborator"
"aig_exporter","commander boundary","aig_exporter::collect_var_substs","command collaborator"
"aig_exporter","commander boundary","aig_exporter::operator()","command collaborator"
"aig_exporter","commander boundary","aig_exporter::expr_to_aig","non-void-command collaborator"
"aig_exporter","commander boundary","aig_exporter::neg","incidental"
"aig_exporter","commander boundary","aig_exporter::mk_and","non-void-command"
"aig_exporter","commander boundary","aig_exporter::mk_or","non-void-command"
"aig_exporter","commander boundary","aig_exporter::get_var","non-void-command collaborator"
"aig_exporter","commander boundary","aig_exporter::mk_var","non-void-command collaborator"
"aig_exporter","commander boundary","aig_exporter::mk_input_var","non-void-command collaborator"
"aig_exporter","commander boundary","aig_exporter::mk_expr_id","set"
"hilbert_basis::passive2","boundary","sum_abs","property collaborator"
"hilbert_basis::passive2","boundary","init","command collaborator"
"hilbert_basis::passive2","boundary","reset","command"
"hilbert_basis::passive2","boundary","insert","command"
"hilbert_basis::passive2","boundary","empty","predicate"
"hilbert_basis::passive2","boundary","pop","non-void-command collaborator"
"hilbert_basis::passive2","boundary","operator()","get"
"hilbert_basis::passive2","boundary","begin","property wrapper"
"hilbert_basis::passive2","boundary","end","property non-void-command collaborator"
"hilbert_basis::passive2","boundary","next_resolvable","command collaborator"
"pob_queue","boundary","pob_queue","constructor"
"pob_queue","boundary","inc_level","command"
"pob_queue","boundary","get_root","property collaborator"
"pob_queue","boundary","is_root","predicate collaborator"
"pob_queue","boundary","max_level","get"
"pob_queue","boundary","min_depth","get"
"pob_queue","boundary","size","property"
"pob_queue","boundary","pob_queue::top","property non-void-command collaborator"
"pob_queue","boundary","pob_queue::pop","command collaborator"
"pob_queue","boundary","pob_queue::set_root","command collaborator"
"pob_queue","boundary","pob_queue::reset","command collaborator"
"pob_queue","boundary","pob_queue::push","command collaborator"
"array_factory","entity boundary","array_factory::array_factory","constructor"
"array_factory","entity boundary","array_factory::mk_array_interp","property non-void-command collaborator"
"array_factory","entity boundary","array_factory::get_some_args_for","command collaborator"
"array_factory","entity boundary","array_factory::get_some_value","property non-void-command collaborator"
"array_factory","entity boundary","array_factory::mk_two_diff_values_for","predicate non-void-command collaborator"
"array_factory","entity boundary","array_factory::get_some_values","predicate non-void-command collaborator"
"array_factory","entity boundary","array_factory::get_fresh_value","property non-void-command collaborator"
"bitvector_table","boundary","bitvector_table::bitvector_table","copy-constructor"
"bitvector_table","boundary","bitvector_table::fact2offset","wrapper"
"bitvector_table","boundary","bitvector_table::offset2fact","void-accessor controller"
"bitvector_table","boundary","bitvector_table::add_fact","command collaborator"
"bitvector_table","boundary","bitvector_table::remove_fact","command collaborator"
"bitvector_table","boundary","bitvector_table::contains_fact","predicate collaborator"
"bitvector_table","boundary","bitvector_table::begin","property wrapper"
"bitvector_table","boundary","bitvector_table::end","property wrapper"
"hash<rational>","pure-controller degenerate small-class","operator()","controller stateless"
"Parameter","boundary data-class","getInt","get non-void-command"
"Parameter","boundary data-class","getDouble","get non-void-command"
"Parameter","boundary data-class","getSymbol","get non-void-command collaborator"
"Parameter","boundary data-class","getSort","get non-void-command collaborator"
"Parameter","boundary data-class","getAST","get non-void-command collaborator"
"Parameter","boundary data-class","getFuncDecl","get non-void-command collaborator"
"Parameter","boundary data-class","getRational","get non-void-command collaborator"
"Parameter","boundary data-class","getParameterKind","get collaborator"
"Parameter","boundary data-class","Parameter","constructor"
"Parameter","boundary data-class","Parameter","constructor"
"Parameter","boundary data-class","Parameter","constructor"
"Parameter","boundary data-class","Parameter","constructor"
"Parameter","boundary data-class","Parameter","constructor"
"Parameter","boundary data-class","Parameter","constructor"
"Parameter","boundary data-class","Parameter","constructor"
"insert_obj_map","commander small-class","insert_obj_map","constructor"
"insert_obj_map","commander small-class","undo","command"
"get_model_cmd","boundary lazy-class degenerate","get_model_cmd","constructor"
"get_model_cmd","boundary lazy-class degenerate","get_usage","incidental"
"get_model_cmd","boundary lazy-class degenerate","get_descr","collaborator incidental"
"get_model_cmd","boundary lazy-class degenerate","get_arity","incidental"
"get_model_cmd","boundary lazy-class degenerate","next_arg_kind","collaborator incidental"
"get_model_cmd","boundary lazy-class degenerate","set_next_arg","set"
"get_model_cmd","boundary lazy-class degenerate","execute","controller"
"get_model_cmd","boundary lazy-class degenerate","reset","set collaborator"
"lar_term_constraint","data-provider small-class","lar_term_constraint","constructor"
"lar_term_constraint","data-provider small-class","coeffs","property collaborator"
"lar_term_constraint","data-provider small-class","size","unclassified"
"theory_arith<Ext>::scoped_row_vars","empty","~scoped_row_vars","destructor"
"Z3_fixedpoint_ref","empty","Z3_fixedpoint_ref","constructor"
"Z3_fixedpoint_ref","empty","~Z3_fixedpoint_ref","destructor"
"root_obj_pp","empty","root_obj_pp","constructor"
"root_obj_pp","empty","root_obj_pp","constructor"
"times","small-class","times","constructor"
"times","small-class","~times","destructor"
"times","small-class","times::eval","controller stateless"
"times","small-class","times::subst","property non-void-command collaborator"
"decl_plugin","entity boundary degenerate","set_manager","command collaborator"
"decl_plugin","entity boundary degenerate","inherit","empty"
"decl_plugin","entity boundary degenerate","finalize","empty"
"decl_plugin","entity boundary degenerate","get_family_id","get collaborator"
"decl_plugin","entity boundary degenerate","is_value","collaborator incidental"
"decl_plugin","entity boundary degenerate","is_model_value","predicate collaborator"
"decl_plugin","entity boundary degenerate","is_unique_value","collaborator incidental"
"decl_plugin","entity boundary degenerate","are_equal","collaborator incidental"
"decl_plugin","entity boundary degenerate","are_distinct","predicate collaborator"
"decl_plugin","entity boundary degenerate","get_op_names","empty"
"decl_plugin","entity boundary degenerate","get_sort_names","empty"
"decl_plugin","entity boundary degenerate","get_some_value","collaborator incidental"
"decl_plugin","entity boundary degenerate","is_fully_interp","collaborator incidental"
"decl_plugin","entity boundary degenerate","del","empty"
"decl_plugin","entity boundary degenerate","translate","wrapper stateless"
"decl_plugin","entity boundary degenerate","is_considered_uninterpreted","collaborator incidental"
"decl_plugin","entity boundary degenerate","decl_plugin::log_constant_meaning_prelude","predicate non-void-command collaborator"
"decl_plugin","entity boundary degenerate","decl_plugin::mk_func_decl","property non-void-command collaborator"
"rd_over_wr_rewriter","entity boundary small-class","rd_over_wr_rewriter","constructor"
"rd_over_wr_rewriter","entity boundary small-class","reduce_app","property non-void-command collaborator"
"theory_str","boundary","get_name","incidental"
"theory_str","boundary","overlapping_variables_detected","get"
"theory_str","boundary","get_trail_stack","get collaborator"
"theory_str","boundary","merge_eh","empty"
"theory_str","boundary","after_merge_eh","empty"
"theory_str","boundary","unmerge_eh","empty"
"theory_str","boundary","mk_fresh","property controller"
"theory_str","boundary","theory_str::theory_str","copy-constructor"
"theory_str","boundary","theory_str::~theory_str","destructor"
"theory_str","boundary","theory_str::init","command"
"theory_str","boundary","theory_str::reset_internal_data_structures","command"
"theory_str","boundary","theory_str::mk_string","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_string","property non-void-command collaborator"
"theory_str","boundary","theory_str::collect_statistics","controller"
"theory_str","boundary","theory_str::assert_axiom","command collaborator"
"theory_str","boundary","theory_str::assert_axiom_rw","command collaborator"
"theory_str","boundary","theory_str::rewrite_implication","property non-void-command collaborator"
"theory_str","boundary","theory_str::assert_implication","command collaborator"
"theory_str","boundary","theory_str::internalize_atom","predicate non-void-command"
"theory_str","boundary","theory_str::internalize_term","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::ensure_enode","property non-void-command collaborator"
"theory_str","boundary","theory_str::refresh_theory_var","command collaborator"
"theory_str","boundary","theory_str::mk_var","property non-void-command collaborator"
"theory_str","boundary","theory_str::has_self_cut","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::add_cut_info_one_node","command collaborator"
"theory_str","boundary","theory_str::add_cut_info_merge","command collaborator"
"theory_str","boundary","theory_str::check_and_init_cut_var","command collaborator"
"theory_str","boundary","theory_str::mk_literal","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_int","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_int","property non-void-command collaborator"
"theory_str","boundary","theory_str::track_variable_scope","command collaborator"
"theory_str","boundary","theory_str::mk_internal_xor_var","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_fresh_const","property set collaborator"
"theory_str","boundary","theory_str::mk_int_var","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_str_var","property non-void-command collaborator"
"theory_str","boundary","theory_str::add_nonempty_constraint","command collaborator"
"theory_str","boundary","theory_str::mk_nonempty_str_var","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_contains","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_indexof","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_strlen","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_concat_const_str","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_concat","property non-void-command collaborator"
"theory_str","boundary","theory_str::can_propagate","predicate non-void-command"
"theory_str","boundary","theory_str::propagate","command collaborator"
"theory_str","boundary","theory_str::try_eval_concat","command collaborator"
"theory_str","boundary","theory_str::instantiate_concat_axiom","command collaborator"
"theory_str","boundary","theory_str::instantiate_basic_string_axioms","command collaborator"
"theory_str","boundary","theory_str::instantiate_str_eq_length_axiom","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_CharAt","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_prefixof","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_suffixof","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_Contains","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_Indexof","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_Indexof_extended","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_LastIndexof","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_Substr","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_Replace","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_str_to_int","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_int_to_str","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_is_digit","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_str_from_code","command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_str_to_code","command collaborator"
"theory_str","boundary","theory_str::mk_RegexIn","property non-void-command collaborator"
"theory_str","boundary","theory_str::instantiate_axiom_RegexIn","command collaborator"
"theory_str","boundary","theory_str::attach_new_th_var","command collaborator"
"theory_str","boundary","theory_str::reset_eh","command"
"theory_str","boundary","theory_str::new_eq_check","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::get_ast","property non-void-command collaborator"
"theory_str","boundary","theory_str::get_var","property collaborator"
"theory_str","boundary","theory_str::get_eqc_next","property non-void-command collaborator"
"theory_str","boundary","theory_str::group_terms_by_eqc","command collaborator"
"theory_str","boundary","theory_str::get_nodes_in_concat","command collaborator"
"theory_str","boundary","theory_str::eval_concat","property non-void-command collaborator"
"theory_str","boundary","theory_str::simplify_parent","command collaborator"
"theory_str","boundary","theory_str::simplify_concat","property non-void-command collaborator"
"theory_str","boundary","theory_str::infer_len_concat","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::infer_len_concat_arg","command collaborator"
"theory_str","boundary","theory_str::infer_len_concat_equality","command collaborator"
"theory_str","boundary","theory_str::add_theory_aware_branching_info","command collaborator"
"theory_str","boundary","theory_str::generate_mutual_exclusion","command collaborator"
"theory_str","boundary","theory_str::print_cut_var","command collaborator"
"theory_str","boundary","theory_str::simplify_concat_equality","command collaborator"
"theory_str","boundary","theory_str::will_result_in_overlap","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::is_concat_eq_type1","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::process_concat_eq_type1","command collaborator"
"theory_str","boundary","theory_str::is_concat_eq_type2","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::process_concat_eq_type2","command collaborator"
"theory_str","boundary","theory_str::is_concat_eq_type3","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::process_concat_eq_type3","command collaborator"
"theory_str","boundary","theory_str::is_concat_eq_type4","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::process_concat_eq_type4","command collaborator"
"theory_str","boundary","theory_str::is_concat_eq_type5","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::process_concat_eq_type5","command collaborator"
"theory_str","boundary","theory_str::is_concat_eq_type6","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::process_concat_eq_type6","command collaborator"
"theory_str","boundary","theory_str::get_string_constant_eqc","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::get_eqc_value","property non-void-command collaborator"
"theory_str","boundary","theory_str::z3str2_get_eqc_value","property non-void-command collaborator"
"theory_str","boundary","theory_str::get_arith_value","predicate collaborator"
"theory_str","boundary","theory_str::lower_bound","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::upper_bound","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::get_len_value","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::in_same_eqc","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::collect_eq_nodes","property non-void-command collaborator"
"theory_str","boundary","theory_str::get_const_str_asts_in_node","command collaborator"
"theory_str","boundary","theory_str::check_contain_by_eqc_val","command collaborator"
"theory_str","boundary","theory_str::check_contain_by_substr","command collaborator"
"theory_str","boundary","theory_str::in_contain_idx_map","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_contain_by_eq_nodes","command collaborator"
"theory_str","boundary","theory_str::check_contain_in_new_eq","command collaborator"
"theory_str","boundary","theory_str::dealias_node","property non-void-command collaborator"
"theory_str","boundary","theory_str::get_grounded_concats","void-accessor command collaborator"
"theory_str","boundary","theory_str::print_grounded_concat","controller stateless"
"theory_str","boundary","theory_str::is_partial_in_grounded_concat","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_subsequence","command collaborator"
"theory_str","boundary","theory_str::compute_contains","command collaborator"
"theory_str","boundary","theory_str::can_concat_eq_str","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::can_concat_eq_concat","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::can_two_nodes_eq","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_length_const_string","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_length_concat_concat","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_length_concat_var","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_length_var_var","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_length_eq_var_concat","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_length_consistency","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_concat_len_in_eqc","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::solve_concat_eq_str","command collaborator"
"theory_str","boundary","theory_str::handle_equality","command collaborator"
"theory_str","boundary","theory_str::check_eqc_empty_string","command collaborator"
"theory_str","boundary","theory_str::check_eqc_concat_concat","command collaborator"
"theory_str","boundary","theory_str::is_var","predicate collaborator"
"theory_str","boundary","theory_str::set_up_axioms","command collaborator"
"theory_str","boundary","theory_str::add_theory_assumptions","command collaborator"
"theory_str","boundary","theory_str::validate_unsat_core","property non-void-command collaborator"
"theory_str","boundary","theory_str::init_search_eh","command collaborator"
"theory_str","boundary","theory_str::new_eq_eh","command collaborator"
"theory_str","boundary","theory_str::new_diseq_eh","command collaborator"
"theory_str","boundary","theory_str::relevant_eh","collaborator incidental"
"theory_str","boundary","theory_str::assign_eh","command collaborator"
"theory_str","boundary","theory_str::check_consistency_prefix","command collaborator"
"theory_str","boundary","theory_str::check_consistency_suffix","command collaborator"
"theory_str","boundary","theory_str::check_consistency_contains","command collaborator"
"theory_str","boundary","theory_str::push_scope_eh","command"
"theory_str","boundary","theory_str::recursive_check_variable_scope","command collaborator"
"theory_str","boundary","theory_str::check_variable_scope","command collaborator"
"theory_str","boundary","theory_str::add_persisted_axiom","command collaborator"
"theory_str","boundary","theory_str::pop_scope_eh","command collaborator"
"theory_str","boundary","theory_str::dump_assignments","incidental"
"theory_str","boundary","theory_str::term_appears_as_subterm","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::classify_ast_by_type","void-accessor command collaborator"
"theory_str","boundary","theory_str::classify_ast_by_type_in_positive_context","command collaborator"
"theory_str","boundary","theory_str::get_alias_index_ast","controller stateless"
"theory_str","boundary","theory_str::getMostLeftNodeInConcat","property non-void-command collaborator"
"theory_str","boundary","theory_str::getMostRightNodeInConcat","property non-void-command collaborator"
"theory_str","boundary","theory_str::trace_ctx_dep","command collaborator"
"theory_str","boundary","theory_str::ctx_dep_analysis","property non-void-command collaborator"
"theory_str","boundary","theory_str::string_integer_conversion_valid","controller stateless"
"theory_str","boundary","theory_str::finalcheck_str2int","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::finalcheck_int2str","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::collect_var_concat","command collaborator"
"theory_str","boundary","theory_str::propagate_length_within_eqc","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::propagate_length","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::get_unique_non_concat_nodes","command collaborator"
"theory_str","boundary","theory_str::final_check_eh","property non-void-command collaborator"
"theory_str","boundary","theory_str::get_concats_in_eqc","command collaborator"
"theory_str","boundary","theory_str::get_var_in_eqc","command collaborator"
"theory_str","boundary","theory_str::init_model","command collaborator"
"theory_str","boundary","theory_str::mk_value_helper","property non-void-command collaborator"
"theory_str","boundary","theory_str::mk_value","property non-void-command collaborator"
"theory_str","boundary","theory_str::finalize_model","empty"
"theory_str","boundary","theory_str::display","collaborator incidental"
"theory_str","boundary","theory_str::get_refine_length","property non-void-command collaborator"
"theory_str","boundary","theory_str::refine","property non-void-command collaborator"
"theory_str","boundary","theory_str::refine_eq","property non-void-command collaborator"
"theory_str","boundary","theory_str::refine_dis","property non-void-command collaborator"
"theory_str","boundary","theory_str::refine_function","collaborator incidental"
"theory_str","boundary","theory_str::flatten","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_get_len_value","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_suffix","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_negative_suffix","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_prefix","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_negative_prefix","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_contains","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_negative_contains","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_regex_membership","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_string_term","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_eq","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_reduce_diseq","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::fixed_length_model_construction","property non-void-command collaborator"
"theory_str","boundary","theory_str::solve_regex_automata","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::estimate_regex_complexity","non-void-command collaborator"
"theory_str","boundary","theory_str::estimate_regex_complexity_under_complement","non-void-command collaborator"
"theory_str","boundary","theory_str::estimate_automata_intersection_difficulty","controller stateless"
"theory_str","boundary","theory_str::check_regex_length_linearity","predicate non-void-command collaborator"
"theory_str","boundary","theory_str::check_regex_length_linearity_helper","predicate non-void-command"
"theory_str","boundary","theory_str::check_subterm_lengths","command collaborator"
"theory_str","boundary","theory_str::infer_all_regex_lengths","property non-void-command collaborator"
"theory_str","boundary","theory_str::find_automaton_initial_bounds","command collaborator"
"theory_str","boundary","theory_str::refine_automaton_lower_bound","controller stateless"
"theory_str","boundary","theory_str::refine_automaton_upper_bound","controller stateless"
"theory_str","boundary","theory_str::aut_path_add_next","void-accessor command collaborator"
"theory_str","boundary","theory_str::aut_path_rewrite_constraint","property non-void-command collaborator"
"theory_str","boundary","theory_str::generate_regex_path_constraints","property non-void-command collaborator"
"theory_str","boundary","theory_str::regex_inc_counter","controller stateless"
"theory_str","boundary","theory_str::regex_get_counter","controller stateless"
"dep_intervals","entity boundary","num_manager","get collaborator"
"dep_intervals","entity boundary","num_manager","get collaborator"
"dep_intervals","entity boundary","mk_leaf","property non-void-command collaborator"
"dep_intervals","entity boundary","mk_join","property non-void-command collaborator"
"dep_intervals","entity boundary","dep_manager","get collaborator"
"dep_intervals","entity boundary","set_lower","collaborator"
"dep_intervals","entity boundary","set_upper","collaborator"
"dep_intervals","entity boundary","set_lower_is_open","unclassified"
"dep_intervals","entity boundary","set_lower_is_inf","unclassified"
"dep_intervals","entity boundary","set_upper_is_open","unclassified"
"dep_intervals","entity boundary","set_upper_is_inf","unclassified"
"dep_intervals","entity boundary","set_lower_dep","collaborator"
"dep_intervals","entity boundary","set_upper_dep","collaborator"
"dep_intervals","entity boundary","get_lower_dep","collaborator incidental"
"dep_intervals","entity boundary","get_upper_dep","collaborator incidental"
"dep_intervals","entity boundary","reset","collaborator"
"dep_intervals","entity boundary","set_value","collaborator"
"dep_intervals","entity boundary","is_zero","predicate collaborator"
"dep_intervals","entity boundary","upper_is_inf","predicate collaborator"
"dep_intervals","entity boundary","lower_is_inf","predicate collaborator"
"dep_intervals","entity boundary","lower_is_open","predicate collaborator"
"dep_intervals","entity boundary","upper_is_open","predicate collaborator"
"dep_intervals","entity boundary","get_upper_dep","command collaborator"
"dep_intervals","entity boundary","get_lower_dep","command collaborator"
"dep_intervals","entity boundary","mul","command collaborator"
"dep_intervals","entity boundary","add","command collaborator"
"dep_intervals","entity boundary","set","void-accessor collaborator"
"dep_intervals","entity boundary","power","command collaborator"
"dep_intervals","entity boundary","mul","void-accessor collaborator"
"dep_intervals","entity boundary","mul","command collaborator"
"dep_intervals","entity boundary","div","command collaborator"
"dep_intervals","entity boundary","add","command collaborator"
"dep_intervals","entity boundary","copy_upper_bound","void-accessor collaborator"
"dep_intervals","entity boundary","copy_lower_bound","void-accessor collaborator"
"dep_intervals","entity boundary","is_inf","predicate collaborator"
"dep_intervals","entity boundary","separated_from_zero","predicate collaborator"
"dep_intervals","entity boundary","check_interval_for_conflict_on_zero","predicate non-void-command collaborator"
"dep_intervals","entity boundary","check_interval_for_conflict_on_zero_lower","predicate non-void-command collaborator"
"dep_intervals","entity boundary","check_interval_for_conflict_on_zero_upper","predicate non-void-command collaborator"
"dep_intervals","entity boundary","lower","property collaborator"
"dep_intervals","entity boundary","upper","property collaborator"
"dep_intervals","entity boundary","linearize","collaborator"
"dep_intervals","entity boundary","reset","empty"
"dep_intervals","entity boundary","del","command collaborator"
"dep_intervals","entity boundary","intersect","wrapper stateless"
"dep_intervals","entity boundary","update_lower_for_intersection","collaborator"
"dep_intervals","entity boundary","update_upper_for_intersection","collaborator"
"dep_intervals","entity boundary","mul","command collaborator"
"dep_intervals","entity boundary","add","command collaborator"
"dep_intervals","entity boundary","combine_deps","collaborator"
"dep_intervals","entity boundary","combine_deps","collaborator"
"dep_intervals","entity boundary","dep_intervals::set_interval_for_scalar","command collaborator"
"dep_intervals","entity boundary","dep_intervals::set_zero_interval","void-accessor collaborator"
"dep_intervals","entity boundary","dep_intervals::set_zero_interval_deps_for_mult","void-accessor command collaborator"
"dep_intervals","entity boundary","dep_intervals::add","collaborator"
"dep_intervals","entity boundary","dep_intervals::separated_from_zero_on_lower","predicate collaborator"
"dep_intervals","entity boundary","dep_intervals::separated_from_zero_on_upper","predicate collaborator"
"dep_intervals","entity boundary","dep_intervals::display","property collaborator"
"dep_intervals","entity boundary","dep_intervals::is_empty","predicate collaborator"
"dep_intervals","entity boundary","dep_intervals::is_above","predicate collaborator"
"dep_intervals","entity boundary","dep_intervals::is_below","predicate collaborator"
"body_expansion","data-provider boundary small-class","body_expansion","constructor"
"body_expansion","data-provider boundary small-class","body_expansion","constructor"
"body_expansion","data-provider boundary small-class","body_expansion::display","property collaborator"
"sls_terms","boundary","parents","get controller"
"sls_terms","boundary","assertions","get collaborator"
"sls_terms","boundary","term","property collaborator"
"sls_terms","boundary","terms","get collaborator"
"sls_terms","boundary","is_assertion","predicate collaborator"
"sls_terms","boundary","sls_terms::sls_terms","constructor"
"sls_terms","boundary","sls_terms::assert_expr","command collaborator"
"sls_terms","boundary","sls_terms::ensure_binary","property non-void-command collaborator"
"sls_terms","boundary","sls_terms::ensure_binary_core","command collaborator"
"sls_terms","boundary","sls_terms::mk_sdiv","property non-void-command collaborator"
"sls_terms","boundary","sls_terms::mk_smod","property non-void-command collaborator"
"sls_terms","boundary","sls_terms::mk_srem","property non-void-command collaborator"
"sls_terms","boundary","sls_terms::init","command collaborator"
"sls_terms","boundary","sls_terms::updt_params","command collaborator"
"case_expansion","data-provider boundary small-class","case_expansion::case_expansion","constructor"
"case_expansion","data-provider boundary small-class","case_expansion::display","property collaborator"
"statistics","unclassified","statistics","constructor"
"statistics","unclassified","reset","command"
"statistics","unclassified","collect_statistics","controller"
"statistics","unclassified","statistics","constructor"
"statistics","unclassified","statistics::reset","wrapper"
"statistics","unclassified","statistics::update","command"
"statistics","unclassified","statistics::update","command"
"statistics","unclassified","statistics::copy","command"
"statistics","unclassified","statistics::reset","command"
"statistics","unclassified","statistics::display_smt2","controller stateless"
"statistics","unclassified","statistics::display","controller stateless"
"statistics","unclassified","statistics::display_internal","wrapper"
"statistics","unclassified","statistics::size","unclassified"
"statistics","unclassified","statistics::is_uint","predicate"
"statistics","unclassified","statistics::get_key","get"
"statistics","unclassified","statistics::get_uint_value","get"
"statistics","unclassified","statistics::get_double_value","get"
"rel_context","entity boundary","get_manager","get collaborator"
"rel_context","entity boundary","get_context","get collaborator"
"rel_context","entity boundary","get_answer","get collaborator"
"rel_context","entity boundary","collect_non_empty_predicates","command collaborator"
"rel_context","entity boundary","rel_context::rel_context","constructor"
"rel_context","entity boundary","rel_context::~rel_context","destructor"
"rel_context","entity boundary","rel_context::saturate","property non-void-command collaborator"
"rel_context","entity boundary","rel_context::saturate","property non-void-command collaborator"
"rel_context","entity boundary","rel_context::query","property non-void-command collaborator"
"rel_context","entity boundary","rel_context::get_model","property non-void-command collaborator"
"rel_context","entity boundary","rel_context::transform_rules","command collaborator"
"rel_context","entity boundary","rel_context::try_get_size","predicate collaborator"
"rel_context","entity boundary","rel_context::query","property non-void-command collaborator"
"rel_context","entity boundary","rel_context::reset_negated_tables","command collaborator"
"rel_context","entity boundary","rel_context::restrict_predicates","command collaborator"
"rel_context","entity boundary","rel_context::get_relation","property non-void-command collaborator"
"rel_context","entity boundary","rel_context::try_get_relation","property collaborator"
"rel_context","entity boundary","rel_context::try_get_formula","property collaborator"
"rel_context","entity boundary","rel_context::is_empty_relation","predicate collaborator"
"rel_context","entity boundary","rel_context::get_rmanager","get collaborator"
"rel_context","entity boundary","rel_context::get_rmanager","get collaborator"
"rel_context","entity boundary","rel_context::output_profile","predicate"
"rel_context","entity boundary","rel_context::set_predicate_representation","command collaborator"
"rel_context","entity boundary","rel_context::setup_default_relation","command"
"rel_context","entity boundary","rel_context::get_ordinary_relation_plugin","property non-void-command collaborator"
"rel_context","entity boundary","rel_context::result_contains_fact","predicate non-void-command collaborator"
"rel_context","entity boundary","rel_context::add_fact","command collaborator"
"rel_context","entity boundary","rel_context::add_fact","command collaborator"
"rel_context","entity boundary","rel_context::has_facts","predicate collaborator"
"rel_context","entity boundary","rel_context::store_relation","command collaborator"
"rel_context","entity boundary","rel_context::collect_statistics","collaborator"
"rel_context","entity boundary","rel_context::updt_params","command collaborator"
"rel_context","entity boundary","rel_context::inherit_predicate_kind","command collaborator"
"rel_context","entity boundary","rel_context::display_output_facts","collaborator"
"rel_context","entity boundary","rel_context::display_facts","collaborator"
"rel_context","entity boundary","rel_context::display_profile","command collaborator"
"factor_rewriter_cfg","entity boundary degenerate","rewrite_patterns","incidental"
"factor_rewriter_cfg","entity boundary degenerate","flat_assoc","collaborator incidental"
"factor_rewriter_cfg","entity boundary degenerate","reduce_app","property non-void-command collaborator"
"factor_rewriter_cfg","entity boundary degenerate","factor_rewriter_cfg","constructor"
"solve_plugin","entity boundary","is_variable","wrapper stateless"
"solve_plugin","entity boundary","solve_plugin","constructor"
"solve_plugin","entity boundary","get_family_id","get collaborator"
"solve_plugin","entity boundary","solve_plugin::operator()","property non-void-command collaborator"
"or_else_tactical","commander boundary degenerate","or_else_tactical","constructor"
"or_else_tactical","commander boundary degenerate","name","incidental"
"or_else_tactical","commander boundary degenerate","operator()","command collaborator"
"or_else_tactical","commander boundary degenerate","translate","wrapper stateless"
"fixedpoint_context","entity commander boundary","fixedpoint_context","constructor"
"fixedpoint_context","entity commander boundary","get_family_id","property collaborator"
"fixedpoint_context","entity commander boundary","set_state","command collaborator"
"fixedpoint_context","entity commander boundary","set_reduce_app","set collaborator"
"fixedpoint_context","entity commander boundary","set_reduce_assign","set collaborator"
"fixedpoint_context","entity commander boundary","reduce","void-accessor command collaborator"
"fixedpoint_context","entity commander boundary","reduce_assign","command collaborator"
"fixedpoint_context","entity commander boundary","ctx","get collaborator"
"fixedpoint_context","entity commander boundary","add_rule","command collaborator"
"fixedpoint_context","entity commander boundary","update_rule","command collaborator"
"fixedpoint_context","entity commander boundary","add_table_fact","command"
"fixedpoint_context","entity commander boundary","get_last_status","property non-void-command collaborator"
"fixedpoint_context","entity commander boundary","to_string","property non-void-command collaborator"
"fixedpoint_context","entity commander boundary","get_num_levels","non-void-command collaborator"
"fixedpoint_context","entity commander boundary","get_cover_delta","property non-void-command collaborator"
"fixedpoint_context","entity commander boundary","add_cover","command collaborator"
"fixedpoint_context","entity commander boundary","collect_param_descrs","command collaborator"
"fixedpoint_context","entity commander boundary","updt_params","command collaborator"
"goal","boundary","init","set collaborator"
"goal","boundary","goal","constructor"
"goal","boundary","goal","copy-constructor"
"goal","boundary","goal","copy-constructor"
"goal","boundary","~goal","destructor"
"goal","boundary","operatorZ3_goal","get"
"goal","boundary","operator=","get set"
"goal","boundary","add","command collaborator"
"goal","boundary","add","command collaborator"
"goal","boundary","size","unclassified"
"goal","boundary","operator[]","property collaborator"
"goal","boundary","precision","property collaborator"
"goal","boundary","inconsistent","predicate"
"goal","boundary","depth","unclassified"
"goal","boundary","reset","command"
"goal","boundary","num_exprs","unclassified"
"goal","boundary","is_decided_sat","predicate"
"goal","boundary","is_decided_unsat","predicate"
"goal","boundary","convert_model","property collaborator"
"goal","boundary","get_model","property collaborator"
"goal","boundary","as_expr","property collaborator"
"goal","boundary","dimacs","property"
"goal","boundary","inc_ref","set"
"goal","boundary","dec_ref","set"
"goal","boundary","m","get collaborator"
"goal","boundary","depth","get"
"goal","boundary","models_enabled","get"
"goal","boundary","proofs_enabled","get"
"goal","boundary","unsat_core_enabled","get"
"goal","boundary","inconsistent","get"
"goal","boundary","prec","property collaborator"
"goal","boundary","set_depth","set"
"goal","boundary","inc_depth","set"
"goal","boundary","set_prec","set collaborator"
"goal","boundary","updt_prec","command collaborator"
"goal","boundary","copy_from","controller"
"goal","boundary","assert_expr","command collaborator"
"goal","boundary","assert_expr","command collaborator"
"goal","boundary","size","unclassified"
"goal","boundary","form","property collaborator"
"goal","boundary","pr","property collaborator"
"goal","boundary","dep","property collaborator"
"goal","boundary","dc","property non-void-command collaborator"
"goal","boundary","mc","property collaborator"
"goal","boundary","pc","property collaborator"
"goal","boundary","add","set collaborator"
"goal","boundary","add","set collaborator"
"goal","boundary","add","set collaborator"
"goal","boundary","set","set collaborator"
"goal","boundary","set","set collaborator"
"goal","boundary","set","set collaborator"
"goal","boundary","set_reason_unknown","set"
"goal","boundary","get_reason_unknown","get"
"goal","boundary","goal::mk_union","collaborator incidental"
"goal","boundary","goal::goal","constructor"
"goal","boundary","goal::goal","constructor"
"goal","boundary","goal::goal","copy-constructor"
"goal","boundary","goal::goal","copy-constructor"
"goal","boundary","goal::~goal","destructor"
"goal","boundary","goal::copy_to","void-accessor"
"goal","boundary","goal::push_back","command collaborator"
"goal","boundary","goal::quick_process","void-accessor command collaborator"
"goal","boundary","goal::process_and","command collaborator"
"goal","boundary","goal::process_not_or","command collaborator"
"goal","boundary","goal::slow_process","void-accessor command collaborator"
"goal","boundary","goal::slow_process","command collaborator"
"goal","boundary","goal::assert_expr","command collaborator"
"goal","boundary","goal::assert_expr","command collaborator"
"goal","boundary","goal::get_formulas","collaborator"
"goal","boundary","goal::get_formulas","collaborator"
"goal","boundary","goal::update","command collaborator"
"goal","boundary","goal::reset_core","command"
"goal","boundary","goal::reset_all","command"
"goal","boundary","goal::reset","set"
"goal","boundary","goal::display","collaborator"
"goal","boundary","goal::display_with_dependencies","collaborator"
"goal","boundary","goal::display_with_dependencies","collaborator"
"goal","boundary","goal::display_with_proofs","collaborator"
"goal","boundary","goal::display","collaborator"
"goal","boundary","goal::display_with_dependencies","collaborator"
"goal","boundary","goal::display","collaborator"
"goal","boundary","goal::display_as_and","collaborator"
"goal","boundary","goal::display_ll","collaborator"
"goal","boundary","goal::display_dimacs","collaborator"
"goal","boundary","goal::num_exprs","unclassified"
"goal","boundary","goal::shrink","command"
"goal","boundary","goal::elim_true","command collaborator"
"goal","boundary","goal::get_idx","collaborator"
"goal","boundary","goal::get_not_idx","collaborator"
"goal","boundary","goal::elim_redundancies","command collaborator"
"goal","boundary","goal::is_well_formed","predicate collaborator"
"goal","boundary","goal::translate","property collaborator"
"goal","boundary","goal::sat_preserved","predicate"
"goal","boundary","goal::unsat_preserved","predicate"
"goal","boundary","goal::is_decided_sat","predicate"
"goal","boundary","goal::is_decided_unsat","predicate"
"goal","boundary","goal::is_decided","predicate"
"goal","boundary","goal::is_cnf","predicate collaborator"
"goal","boundary","goal::is_literal","predicate collaborator"
"recurse_expr","entity boundary","is_cached","predicate collaborator"
"recurse_expr","entity boundary","get_cached","property collaborator"
"recurse_expr","entity boundary","cache_result","command collaborator"
"recurse_expr","entity boundary","recurse_expr","constructor"
"recurse_expr","entity boundary","reset","command"
"recurse_expr","entity boundary","finalize","command"
"recurse_expr","entity boundary","recurse_expr<T,Visitor,IgnorePatterns,CallDestructors>::visit","void-accessor command"
"recurse_expr","entity boundary","recurse_expr<T,Visitor,IgnorePatterns,CallDestructors>::visit_children","predicate non-void-command collaborator"
"recurse_expr","entity boundary","recurse_expr<T,Visitor,IgnorePatterns,CallDestructors>::process","command collaborator"
"recurse_expr","entity boundary","recurse_expr<T,Visitor,IgnorePatterns,CallDestructors>::operator()","property non-void-command collaborator"
"eqr","empty","eqr","constructor"
"inf_ext","pure-controller degenerate small-class","fractional_part","controller stateless"
"inf_ext","pure-controller degenerate small-class","inf_ext","constructor"
"enode_args","data-provider boundary small-class","enode_args","constructor"
"enode_args","data-provider boundary small-class","enode_args","constructor"
"enode_args","data-provider boundary small-class","begin","property collaborator"
"enode_args","data-provider boundary small-class","end","property collaborator"
"seq_expr_solver","entity boundary small-class","seq_expr_solver","constructor"
"seq_expr_solver","entity boundary small-class","check_sat","property non-void-command collaborator"
"seq_expr_solver","entity boundary small-class","seq_expr_solver","constructor"
"seq_expr_solver","entity boundary small-class","check_sat","property non-void-command collaborator"
"rc_sym_pp","empty","rc_sym_pp","constructor"
"rc_sym_pp","empty","rc_sym_pp","constructor"
"Z3_ast_map_ref","empty","Z3_ast_map_ref","constructor"
"Z3_ast_map_ref","empty","Z3_ast_map_ref::~Z3_ast_map_ref","destructor"
"card","boundary","operator[]","get collaborator"
"card","boundary","operator[]","get collaborator"
"card","boundary","begin","get collaborator"
"card","boundary","end","property collaborator"
"card","boundary","swap","command"
"card","boundary","literals","property wrapper"
"card","boundary","get_lit","get collaborator"
"card","boundary","set_lit","set collaborator"
"card","boundary","get_coeff","incidental"
"card","boundary","card::card","constructor"
"card","boundary","card::negate","set"
"card","boundary","card::is_watching","predicate collaborator"
"card","boundary","card::get_reward","property controller"
"card","boundary","card::display","property collaborator"
"card","boundary","card::display","property collaborator"
"card","boundary","card::clear_watch","command collaborator"
"card","boundary","card::init_watch","predicate non-void-command collaborator"
"card","boundary","card::is_extended_binary","predicate controller"
"card","boundary","card::validate_unit_propagation","predicate collaborator"
"card","boundary","card::eval","property collaborator"
"card","boundary","card::eval","property collaborator"
"card","boundary","card::init_use_list","collaborator"
"card","boundary","card::is_blocked","predicate collaborator"
"card","boundary","theory_pb::card::negate","command"
"card","boundary","theory_pb::card::to_expr","property non-void-command collaborator"
"card","boundary","theory_pb::card::assign","property non-void-command collaborator"
"card","boundary","theory_pb::card::set_conflict","command collaborator"
"card","boundary","theory_pb::card::validate_conflict","predicate non-void-command collaborator"
"card","boundary","theory_pb::card::validate_assign","predicate non-void-command collaborator"
"card","boundary","theory_pb::card::init_watch","command"
"card","boundary","theory_pb::card::add_arg","controller stateless"
"card","boundary","theory_pb::card::inc_propagations","collaborator incidental"
"named_formulas","unclassified","named_formulas","constructor"
"named_formulas","unclassified","push_back","command"
"named_formulas","unclassified","set_has_conjecture","set"
"named_formulas","unclassified","has_conjecture","get"
"explanation_relation_plugin::assignment_filter_fn","commander boundary small-class","not_handled","wrapper stateless"
"explanation_relation_plugin::assignment_filter_fn","commander boundary small-class","operator()","command collaborator"
"expr_wrapper_proc","data-provider boundary data-class small-class","expr_wrapper_proc","constructor"
"expr_wrapper_proc","data-provider boundary data-class small-class","mk_value","get collaborator"
"elim_unconstrained","boundary","is_node","predicate"
"elim_unconstrained","boundary","is_node","predicate collaborator"
"elim_unconstrained","boundary","get_node","get collaborator"
"elim_unconstrained","boundary","get_node","get collaborator"
"elim_unconstrained","boundary","get_node","get non-void-command collaborator"
"elim_unconstrained","boundary","root","get controller"
"elim_unconstrained","boundary","get_node","get collaborator"
"elim_unconstrained","boundary","get_refcount","collaborator"
"elim_unconstrained","boundary","inc_ref","command collaborator"
"elim_unconstrained","boundary","dec_ref","command collaborator"
"elim_unconstrained","boundary","name","incidental"
"elim_unconstrained","boundary","collect_statistics","controller"
"elim_unconstrained","boundary","reset_statistics","command"
"elim_unconstrained","boundary","elim_unconstrained::elim_unconstrained","constructor"
"elim_unconstrained","boundary","elim_unconstrained::is_var_lt","predicate collaborator"
"elim_unconstrained","boundary","elim_unconstrained::eliminate","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::get_parent","property collaborator"
"elim_unconstrained","boundary","elim_unconstrained::invalidate_parents","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::init_nodes","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::init_terms","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::freeze_rec","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::freeze","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::gc","void-accessor command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::reconstruct_term","property non-void-command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::reconstruct_terms","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::assert_normalized","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::update_model_trail","command collaborator"
"elim_unconstrained","boundary","elim_unconstrained::reduce","command collaborator"
"Z3_model_ref","empty","Z3_model_ref","constructor"
"hnf::imp","boundary","is_horn","predicate non-void-command collaborator"
"hnf::imp","boundary","operator()","command collaborator"
"hnf::imp","boundary","checkpoint","predicate non-void-command"
"hnf::imp","boundary","set_name","set collaborator"
"hnf::imp","boundary","get_fresh_predicates","get collaborator"
"hnf::imp","boundary","reset","command"
"hnf::imp","boundary","get_manager","get collaborator"
"hnf::imp","boundary","produce_proofs","get"
"hnf::imp","boundary","is_predicate","predicate collaborator"
"hnf::imp","boundary","is_predicate","predicate collaborator"
"hnf::imp","boundary","contains_predicate","predicate controller"
"hnf::imp","boundary","mk_horn","void-accessor command collaborator"
"hnf::imp","boundary","mk_quant_intro","property non-void-command collaborator"
"hnf::imp","boundary","eliminate_disjunctions","void-accessor command collaborator"
"hnf::imp","boundary","mk_fresh_head","property non-void-command collaborator"
"hnf::imp","boundary","eliminate_disjunctions","command collaborator"
"hnf::imp","boundary","eliminate_quantifier_body","void-accessor command collaborator"
"hnf::imp","boundary","eliminate_quantifier_body","command collaborator"
"hnf::imp","boundary","mk_implies","property non-void-command collaborator"
"hnf::imp","boundary","mk_congruence","property non-void-command collaborator"
"hnf::imp","boundary","mk_modus_ponens","property non-void-command collaborator"
"hnf::imp","boundary","mk_transitivity","property non-void-command collaborator"
"hnf::imp","boundary","bind_variables","property non-void-command collaborator"
"instr_union","unclassified","instr_union","constructor"
"instr_union","unclassified","perform","predicate non-void-command collaborator"
"instr_union","unclassified","make_annotations","controller"
"instr_union","unclassified","display_head_impl","property collaborator"
"occ","boundary degenerate small-class","occ","constructor"
"occ","boundary degenerate small-class","occ","constructor"
"occ","boundary degenerate small-class","operator<<","collaborator incidental"
"res_checker","unclassified","res_checker","constructor"
"res_checker","unclassified","check","predicate non-void-command collaborator"
"res_checker","unclassified","clause","property non-void-command collaborator"
"res_checker","unclassified","register_plugins","controller"
"qe_lite::impl","unclassified","has_unique_non_ground","controller stateless"
"qe_lite::impl","unclassified","operator()","void-accessor command collaborator"
"qe_lite::impl","unclassified","operator()","void-accessor command collaborator"
"qe_lite::impl","unclassified","operator()","controller"
"qe_lite::impl","unclassified","operator()","void-accessor command collaborator"
"theory_checker_plugin","pure-controller degenerate small-class","~theory_checker_plugin","destructor"
"theory_checker_plugin","pure-controller degenerate small-class","vc","controller stateless"
"test_doc_cls","entity commander boundary","choose_tbit","wrapper stateless"
"test_doc_cls","entity commander boundary","mk_rand_tbv","property non-void-command collaborator"
"test_doc_cls","entity commander boundary","mk_rand_tbv","property non-void-command collaborator"
"test_doc_cls","entity commander boundary","mk_rand_doc","property non-void-command collaborator"
"test_doc_cls","entity commander boundary","mk_rand_udoc","command collaborator"
"test_doc_cls","entity commander boundary","mk_conj","property non-void-command collaborator"
"test_doc_cls","entity commander boundary","to_formula","property non-void-command collaborator"
"test_doc_cls","entity commander boundary","to_formula","property non-void-command collaborator"
"test_doc_cls","entity commander boundary","to_formula","property non-void-command collaborator"
"test_doc_cls","entity commander boundary","project","void-accessor command collaborator"
"test_doc_cls","entity commander boundary","test_project","command collaborator"
"test_doc_cls","entity commander boundary","project_expand","void-accessor command collaborator"
"test_doc_cls","entity commander boundary","project_rename","command collaborator"
"test_doc_cls","entity commander boundary","test_merge","command"
"test_doc_cls","entity commander boundary","check_equiv","command collaborator"
"test_doc_cls","entity commander boundary","test_doc_cls","constructor"
"test_doc_cls","entity commander boundary","test_project","command"
"test_doc_cls","entity commander boundary","test_merge","command"
"test_doc_cls","entity commander boundary","test_project1","command collaborator"
"test_doc_cls","entity commander boundary","test_subtract","command collaborator"
"test_doc_cls","entity commander boundary","test_intersect","command collaborator"
"exception","data-provider small-class","exception","constructor"
"exception","data-provider small-class","msg","property"
"exception","data-provider small-class","what","property"
"bv_rewriter","boundary","mk_bv_add","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_sub","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_mul","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_sdiv","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_udiv","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_srem","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_urem","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_smod","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_sdiv_i","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_udiv_i","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_srem_i","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_urem_i","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv_smod_i","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter","constructor"
"bv_rewriter","boundary","set_mkbv2num","set"
"bv_rewriter","boundary","get_bv_size","controller stateless"
"bv_rewriter","boundary","is_numeral","controller stateless"
"bv_rewriter","boundary","is_numeral","controller stateless"
"bv_rewriter","boundary","is_bv","controller stateless"
"bv_rewriter","boundary","mk_numeral","controller stateless"
"bv_rewriter","boundary","mk_numeral","controller stateless"
"bv_rewriter","boundary","mk_zero","controller stateless"
"bv_rewriter","boundary","mk_one","controller stateless"
"bv_rewriter","boundary","mk_zero","controller stateless"
"bv_rewriter","boundary","mk_one","controller stateless"
"bv_rewriter","boundary","mk_app","void-accessor command collaborator"
"bv_rewriter","boundary","hi_div0","get"
"bv_rewriter","boundary","get_util","collaborator incidental"
"bv_rewriter","boundary","mk_zero_extend","property non-void-command collaborator"
"bv_rewriter","boundary","mk_bv2int","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::updt_local_params","command collaborator"
"bv_rewriter","boundary","bv_rewriter::updt_params","command collaborator"
"bv_rewriter","boundary","bv_rewriter::get_param_descrs","command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_app_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_ule","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_uge","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_ult","controller stateless"
"bv_rewriter","boundary","bv_rewriter::mk_sle","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_sge","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_slt","controller stateless"
"bv_rewriter","boundary","bv_rewriter::concat","controller stateless"
"bv_rewriter","boundary","bv_rewriter::are_eq_upto_num","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::rw_leq_overflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::rw_leq_concats","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_leq_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::propagate_extract","non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_extract","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_shl","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_lshr","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_ashr","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_sdiv_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_udiv_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_srem_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_minus_one_core","predicate collaborator"
"bv_rewriter","boundary","bv_rewriter::is_negatable","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_x_minus_one","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_urem_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_smod_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_int2bv","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv2int","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_mul_no_overflow","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_add_no_overflow","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::num_leading_zero_bits","non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_concat","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_zero_extend","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_sign_extend","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_repeat","controller stateless"
"bv_rewriter","boundary","bv_rewriter::mk_bv_or","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_xor","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::distribute_concat","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_not","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_and","controller stateless"
"bv_rewriter","boundary","bv_rewriter::mk_bv_nand","controller stateless"
"bv_rewriter","boundary","bv_rewriter::mk_bv_nor","controller stateless"
"bv_rewriter","boundary","bv_rewriter::mk_bv_xnor","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_rotate_left","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_rotate_right","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_ext_rotate_left","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_ext_rotate_right","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_redor","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_redand","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_comp","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_add","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_zero_bit","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_mul_hoist","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bv_mul","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bit2bool","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bit2bool","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_blast_eq_value","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_eq_concat","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_concat_split_target","predicate controller"
"bv_rewriter","boundary","bv_rewriter::is_minus_one_times_t","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_t1_add_t2_eq_c","void-accessor command collaborator"
"bv_rewriter","boundary","bv_rewriter::isolate_term","predicate non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_add_mul_const","controller stateless"
"bv_rewriter","boundary","bv_rewriter::is_concat_target","predicate collaborator"
"bv_rewriter","boundary","bv_rewriter::has_numeral","predicate collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_mul_eq","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_urem_any","controller stateless"
"bv_rewriter","boundary","bv_rewriter::mk_eq_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_mkbv","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::is_bit","predicate non-void-command"
"bv_rewriter","boundary","bv_rewriter::is_eq_bit","predicate non-void-command"
"bv_rewriter","boundary","bv_rewriter::mk_ite_core","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_distinct","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvsmul_overflow","controller stateless"
"bv_rewriter","boundary","bv_rewriter::mk_bvumul_overflow","controller stateless"
"bv_rewriter","boundary","bv_rewriter::mk_bvsmul_no_overflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvumul_no_overflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvneg_overflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvuadd_overflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvsadd_overflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvsadd_underflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvsadd_over_underflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvusub_underflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvssub_under_overflow","property non-void-command collaborator"
"bv_rewriter","boundary","bv_rewriter::mk_bvsdiv_overflow","property non-void-command collaborator"
"ast_context_params","entity minimal-entity boundary","set_foreign_manager","set collaborator"
"ast_context_params","entity minimal-entity boundary","owns_manager","predicate"
"ast_context_params","entity minimal-entity boundary","ast_context_params::mk_ast_manager","get property non-void-command collaborator"
"mk_ismt2_func","empty","mk_ismt2_func","constructor"
"on_scope_exit","empty","on_scope_exit","constructor"
"on_scope_exit","empty","~on_scope_exit","destructor"
"scoped_numeral_vector","empty","scoped_numeral_vector","constructor"
"scoped_numeral_vector","empty","scoped_numeral_vector::scoped_numeral_vector","constructor"
"adjust_value","boundary","adjust_value","constructor"
"adjust_value","boundary","adjust_value","constructor"
"adjust_value","boundary","set_offset","set collaborator"
"adjust_value","boundary","set_negate","set"
"adjust_value","boundary","get_offset","get collaborator"
"adjust_value","boundary","add_offset","set collaborator"
"adjust_value","boundary","get_negate","get"
"adjust_value","boundary","operator()","property controller"
"adjust_value","boundary","operator()","property controller"
"func_decl_info","unclassified","is_associative","predicate"
"func_decl_info","unclassified","is_left_associative","get"
"func_decl_info","unclassified","is_right_associative","get"
"func_decl_info","unclassified","is_flat_associative","get"
"func_decl_info","unclassified","is_commutative","get"
"func_decl_info","unclassified","is_chainable","get"
"func_decl_info","unclassified","is_pairwise","get"
"func_decl_info","unclassified","is_injective","get"
"func_decl_info","unclassified","is_idempotent","get"
"func_decl_info","unclassified","is_skolem","get"
"func_decl_info","unclassified","is_lambda","get"
"func_decl_info","unclassified","is_polymorphic","get"
"func_decl_info","unclassified","set_associative","command"
"func_decl_info","unclassified","set_left_associative","set"
"func_decl_info","unclassified","set_right_associative","set"
"func_decl_info","unclassified","set_flat_associative","set"
"func_decl_info","unclassified","set_commutative","set"
"func_decl_info","unclassified","set_chainable","set"
"func_decl_info","unclassified","set_pairwise","set"
"func_decl_info","unclassified","set_injective","set"
"func_decl_info","unclassified","set_idempotent","set"
"func_decl_info","unclassified","set_skolem","set"
"func_decl_info","unclassified","set_lambda","set"
"func_decl_info","unclassified","set_polymorphic","set"
"func_decl_info","unclassified","is_null","predicate"
"func_decl_info","unclassified","func_decl_info::func_decl_info","constructor"
"func_decl_info","unclassified","func_decl_info::operator==","predicate"
"parallel","commander boundary","reserve","command"
"parallel","commander boundary","get_solver","get collaborator"
"parallel","commander boundary","cancel_solver","wrapper"
"parallel","commander boundary","parallel","constructor"
"parallel","commander boundary","parallel::parallel","constructor"
"parallel","commander boundary","parallel::~parallel","destructor"
"parallel","commander boundary","parallel::init_solvers","command"
"parallel","commander boundary","parallel::push_child","command collaborator"
"parallel","commander boundary","parallel::exchange","void-accessor command collaborator"
"parallel","commander boundary","parallel::share_clause","command collaborator"
"parallel","commander boundary","parallel::share_clause","command collaborator"
"parallel","commander boundary","parallel::get_clauses","command collaborator"
"parallel","commander boundary","parallel::_get_clauses","command collaborator"
"parallel","commander boundary","parallel::enable_add","controller stateless"
"parallel","commander boundary","parallel::_from_solver","command collaborator"
"parallel","commander boundary","parallel::_to_solver","collaborator incidental"
"parallel","commander boundary","parallel::from_solver","command collaborator"
"parallel","commander boundary","parallel::to_solver","command collaborator"
"parallel","commander boundary","parallel::_to_solver","collaborator incidental"
"parallel","commander boundary","parallel::_from_solver","predicate set collaborator"
"parallel","commander boundary","parallel::from_solver","predicate non-void-command collaborator"
"parallel","commander boundary","parallel::to_solver","command collaborator"
"parallel","commander boundary","parallel::copy_solver","predicate non-void-command collaborator"
"parallel","commander boundary","parallel::operator()","collaborator incidental"
"parallel","commander boundary","parallel::operator()","property non-void-command collaborator"
"hash","controller degenerate","hash","constructor"
"hash","controller degenerate","operator()","predicate controller"
"hash","controller degenerate","npn3_finder::binary::hash::operator()","controller stateless"
"hash","controller degenerate","npn3_finder::ternary::hash::operator()","controller stateless"
"hash","controller degenerate","npn3_finder::quaternary::hash::operator()","controller stateless"
"psort_user_decl","entity boundary","obj_size","incidental"
"psort_user_decl","entity boundary","psort_user_decl::psort_user_decl","constructor"
"psort_user_decl","entity boundary","psort_user_decl::finalize","set collaborator"
"psort_user_decl","entity boundary","psort_user_decl::instantiate","property non-void-command collaborator"
"psort_user_decl","entity boundary","psort_user_decl::display","property collaborator"
"func_decl_replace","unclassified","func_decl_replace","constructor"
"func_decl_replace","unclassified","insert","command collaborator"
"func_decl_replace","unclassified","empty","predicate"
"func_decl_replace","unclassified","func_decl_replace::operator()","property non-void-command collaborator"
"func_decl_replace","unclassified","func_decl_replace::reset","command"
"karr_relation_plugin::union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"wpa_parser_impl","boundary","ensure_sort_content","property non-void-command collaborator"
"wpa_parser_impl","boundary","wpa_parser_impl","constructor"
"wpa_parser_impl","boundary","~wpa_parser_impl","destructor"
"wpa_parser_impl","boundary","reset","empty"
"wpa_parser_impl","boundary","parse_directory","predicate non-void-command"
"wpa_parser_impl","boundary","parse_directory_core","predicate non-void-command"
"wpa_parser_impl","boundary","inp_num_to_element","predicate non-void-command collaborator"
"wpa_parser_impl","boundary","parse_rules_file","command collaborator"
"wpa_parser_impl","boundary","parse_rel_line","predicate non-void-command collaborator"
"wpa_parser_impl","boundary","parse_rel_file","command collaborator"
"wpa_parser_impl","boundary","finish_map_files","command"
"wpa_parser_impl","boundary","cut_off_comment","incidental"
"wpa_parser_impl","boundary","parse_map_line","predicate non-void-command collaborator"
"wpa_parser_impl","boundary","parse_map_file","command collaborator"
"symbol_table","commander boundary","insert","command collaborator"
"symbol_table","commander boundary","find","predicate non-void-command collaborator"
"symbol_table","commander boundary","reset","command"
"symbol_table","commander boundary","find","predicate collaborator"
"symbol_table","commander boundary","contains","predicate collaborator"
"symbol_table","commander boundary","get_scope_level","unclassified"
"symbol_table","commander boundary","insert","command collaborator"
"symbol_table","commander boundary","begin_scope","command"
"symbol_table","commander boundary","end_scope","command collaborator"
"symbol_table","commander boundary","append","command collaborator"
"symbol_table","commander boundary","get_range","controller"
"symbol_table","commander boundary","get_dom","controller"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::bit_blaster_rewriter","constructor"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::~bit_blaster_rewriter","destructor"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::updt_params","command collaborator"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::push","command"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::pop","command"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::m","property collaborator"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::get_num_steps","unclassified"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::cleanup","command"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::const2bits","property collaborator"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::operator()","collaborator incidental"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::get_num_scopes","unclassified"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::start_rewrite","command"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::end_rewrite","command collaborator"
"bit_blaster_rewriter","commander","bit_blaster_rewriter::get_translation","command collaborator"
"mpfx","small-class","swap","void-accessor command"
"dl_query_cmd","entity commander boundary","dl_query_cmd","constructor"
"dl_query_cmd","entity commander boundary","get_usage","incidental"
"dl_query_cmd","entity commander boundary","get_main_descr","incidental"
"dl_query_cmd","entity commander boundary","next_arg_kind","property collaborator"
"dl_query_cmd","entity commander boundary","set_next_arg","set collaborator"
"dl_query_cmd","entity commander boundary","prepare","set collaborator"
"dl_query_cmd","entity commander boundary","execute","command collaborator"
"dl_query_cmd","entity commander boundary","init_pdescrs","command collaborator"
"dl_query_cmd","entity commander boundary","set_background","command collaborator"
"dl_query_cmd","entity commander boundary","print_answer","command collaborator"
"dl_query_cmd","entity commander boundary","print_statistics","command collaborator"
"dl_query_cmd","entity commander boundary","print_certificate","command collaborator"
"scoped_restore_proof","empty","scoped_restore_proof","constructor"
"scoped_rel","data-provider boundary data-class","scoped_rel","constructor"
"scoped_rel","data-provider boundary data-class","~scoped_rel","destructor"
"scoped_rel","data-provider boundary data-class","scoped_rel","constructor"
"scoped_rel","data-provider boundary data-class","operator=","get set collaborator"
"scoped_rel","data-provider boundary data-class","operator->","get collaborator"
"scoped_rel","data-provider boundary data-class","operator->","get collaborator"
"scoped_rel","data-provider boundary data-class","operator*","get collaborator"
"scoped_rel","data-provider boundary data-class","operator*","get collaborator"
"scoped_rel","data-provider boundary data-class","operatorbool","unclassified"
"scoped_rel","data-provider boundary data-class","get","get collaborator"
"scoped_rel","data-provider boundary data-class","release","property set collaborator"
"lemma_cluster_finder","unclassified","reset_statistics","command"
"lemma_cluster_finder","unclassified","lemma_cluster_finder::lemma_cluster_finder","constructor"
"lemma_cluster_finder","unclassified","lemma_cluster_finder::are_neighbours","predicate controller"
"lemma_cluster_finder","unclassified","lemma_cluster_finder::anti_unify_n_intrp","controller"
"dparser","boundary","dparser","constructor"
"dparser","boundary","parse_file","predicate non-void-command collaborator"
"dparser","boundary","parse_string","predicate non-void-command collaborator"
"dparser","boundary","reset","command"
"dparser","boundary","set_path","command"
"dparser","boundary","get_err","collaborator incidental"
"dparser","boundary","parse_stream","predicate non-void-command collaborator"
"dparser","boundary","parse_domains","property non-void-command collaborator"
"dparser","boundary","extract_domain_name","controller stateless"
"dparser","boundary","parse_domain","property non-void-command collaborator"
"dparser","boundary","parse_decls","property non-void-command collaborator"
"dparser","boundary","unexpected","property non-void-command collaborator"
"dparser","boundary","parse_rule","property non-void-command collaborator"
"dparser","boundary","parse_body","property non-void-command collaborator"
"dparser","boundary","parse_infix","property non-void-command collaborator"
"dparser","boundary","parse_pred","property non-void-command collaborator"
"dparser","boundary","parse_args","property non-void-command collaborator"
"dparser","boundary","parse_arg","property non-void-command collaborator"
"dparser","boundary","is_var","incidental"
"dparser","boundary","parse_decl","collaborator incidental"
"dparser","boundary","parse_include","property non-void-command collaborator"
"dparser","boundary","parse_mapfile","property non-void-command collaborator"
"dparser","boundary","read_line","controller stateless"
"dparser","boundary","add_rule","command collaborator"
"dparser","boundary","register_finite_sort","property non-void-command collaborator"
"dparser","boundary","register_int_sort","property non-void-command collaborator"
"dparser","boundary","get_sort","property non-void-command collaborator"
"dparser","boundary","mk_const","property non-void-command collaborator"
"dparser","boundary","mk_symbol_const","property non-void-command collaborator"
"dparser","boundary","mk_const","property non-void-command collaborator"
"dparser","boundary","mk_table_const","property non-void-command collaborator"
"dparser","boundary","mk_table_const","property non-void-command collaborator"
"wcnf","unclassified","read_clause","property non-void-command collaborator"
"wcnf","unclassified","parse_spec","void-accessor command"
"wcnf","unclassified","wcnf","constructor"
"wcnf","unclassified","parse","command"
"psort_nw","boundary","is_power_of2","incidental"
"psort_nw","boundary","cfg","get collaborator"
"psort_nw","boundary","ge","property non-void-command collaborator"
"psort_nw","boundary","le","property non-void-command collaborator"
"psort_nw","boundary","eq","property non-void-command collaborator"
"psort_nw","boundary","le","property non-void-command collaborator"
"psort_nw","boundary","ge","property set collaborator"
"psort_nw","boundary","eq","property non-void-command collaborator"
"psort_nw","boundary","cmp","property non-void-command collaborator"
"psort_nw","boundary","unate_cmp","property non-void-command collaborator"
"psort_nw","boundary","unate_ge","property non-void-command collaborator"
"psort_nw","boundary","unate_le","property non-void-command collaborator"
"psort_nw","boundary","unate_eq","property non-void-command collaborator"
"psort_nw","boundary","mk_unit_circuit","command collaborator"
"psort_nw","boundary","mk_add_circuit","property non-void-command collaborator"
"psort_nw","boundary","circuit_add","property non-void-command collaborator"
"psort_nw","boundary","circuit_cmp","property non-void-command collaborator"
"psort_nw","boundary","mk_ge","property non-void-command collaborator"
"psort_nw","boundary","circuit_ge","property non-void-command collaborator"
"psort_nw","boundary","circuit_le","property non-void-command collaborator"
"psort_nw","boundary","circuit_eq","property non-void-command collaborator"
"psort_nw","boundary","add_implies_or","command collaborator"
"psort_nw","boundary","mk_or","property non-void-command collaborator"
"psort_nw","boundary","mk_or","property non-void-command collaborator"
"psort_nw","boundary","mk_or","property non-void-command collaborator"
"psort_nw","boundary","mk_or","property non-void-command collaborator"
"psort_nw","boundary","mk_not","property non-void-command collaborator"
"psort_nw","boundary","mk_and","property non-void-command collaborator"
"psort_nw","boundary","mk_and","property non-void-command collaborator"
"psort_nw","boundary","is_true","predicate non-void-command collaborator"
"psort_nw","boundary","is_false","predicate non-void-command collaborator"
"psort_nw","boundary","mk_and","property non-void-command collaborator"
"psort_nw","boundary","mk_exactly_1","property non-void-command collaborator"
"psort_nw","boundary","mk_at_most_1","property non-void-command collaborator"
"psort_nw","boundary","mk_at_most_1_small","command collaborator"
"psort_nw","boundary","mk_at_most_1_small","property non-void-command collaborator"
"psort_nw","boundary","mk_ordered_exactly_1","property non-void-command collaborator"
"psort_nw","boundary","mk_ordered_atmost_1","property non-void-command collaborator"
"psort_nw","boundary","mk_ordered_1","property non-void-command collaborator"
"psort_nw","boundary","mk_at_most_1_bimander","property non-void-command collaborator"
"psort_nw","boundary","pp","property non-void-command collaborator"
"psort_nw","boundary","pp","property non-void-command collaborator"
"psort_nw","boundary","dualize","predicate non-void-command collaborator"
"psort_nw","boundary","even","incidental"
"psort_nw","boundary","odd","predicate"
"psort_nw","boundary","ceil2","unclassified"
"psort_nw","boundary","floor2","incidental"
"psort_nw","boundary","power2","wrapper stateless"
"psort_nw","boundary","mk_max","property set collaborator"
"psort_nw","boundary","mk_min","property set collaborator"
"psort_nw","boundary","fresh","property set collaborator"
"psort_nw","boundary","add_clause","command collaborator"
"psort_nw","boundary","add_clause","command collaborator"
"psort_nw","boundary","add_clause","command collaborator"
"psort_nw","boundary","add_clause","command collaborator"
"psort_nw","boundary","cmp_ge","command collaborator"
"psort_nw","boundary","cmp_le","command collaborator"
"psort_nw","boundary","cmp_eq","command collaborator"
"psort_nw","boundary","cmp","command collaborator"
"psort_nw","boundary","vc_cmp","property wrapper"
"psort_nw","boundary","card","command collaborator"
"psort_nw","boundary","vc_card","property non-void-command collaborator"
"psort_nw","boundary","vc_card_rec","property non-void-command collaborator"
"psort_nw","boundary","use_dcard","predicate non-void-command"
"psort_nw","boundary","merge","command collaborator"
"psort_nw","boundary","vc_merge","property non-void-command collaborator"
"psort_nw","boundary","vc_merge_rec","property non-void-command collaborator"
"psort_nw","boundary","split","controller stateless"
"psort_nw","boundary","interleave","command collaborator"
"psort_nw","boundary","vc_interleave","property non-void-command collaborator"
"psort_nw","boundary","sorting","command collaborator"
"psort_nw","boundary","vc_sorting","property non-void-command collaborator"
"psort_nw","boundary","vc_sorting_rec","property non-void-command collaborator"
"psort_nw","boundary","use_dsorting","predicate non-void-command"
"psort_nw","boundary","smerge","command collaborator"
"psort_nw","boundary","vc_smerge","property non-void-command collaborator"
"psort_nw","boundary","vc_smerge_rec","property non-void-command collaborator"
"psort_nw","boundary","use_dsmerge","predicate non-void-command"
"psort_nw","boundary","dsmerge","command collaborator"
"psort_nw","boundary","vc_dsmerge","property wrapper"
"psort_nw","boundary","dsorting","command collaborator"
"psort_nw","boundary","vc_dsorting","property non-void-command collaborator"
"psort_nw","boundary","add_subset","command collaborator"
"IntNum","empty","IntNum","constructor"
"hilbert_basis::vector_lt_t","data-provider boundary small-class","operator()","predicate collaborator"
"lackr","entity minimal-entity boundary","get_info","get collaborator"
"lackr","entity minimal-entity boundary","get_model","get collaborator"
"lackr","entity minimal-entity boundary","checkpoint","command"
"lackr","entity minimal-entity boundary","lackr::lackr","copy-constructor"
"lackr","entity minimal-entity boundary","lackr::updt_params","set collaborator"
"lackr","entity minimal-entity boundary","lackr::~lackr","destructor"
"lackr","entity minimal-entity boundary","lackr::operator()","property non-void-command collaborator"
"lackr","entity minimal-entity boundary","lackr::mk_ackermann","predicate non-void-command collaborator"
"lackr","entity minimal-entity boundary","lackr::init","predicate non-void-command collaborator"
"lackr","entity minimal-entity boundary","lackr::ackr","predicate non-void-command collaborator"
"lackr","entity minimal-entity boundary","lackr::eager_enc","command collaborator"
"lackr","entity minimal-entity boundary","lackr::ackr","command collaborator"
"lackr","entity minimal-entity boundary","lackr::abstract_fun","command collaborator"
"lackr","entity minimal-entity boundary","lackr::abstract_sel","command collaborator"
"lackr","entity minimal-entity boundary","lackr::abstract","command collaborator"
"lackr","entity minimal-entity boundary","lackr::add_term","command collaborator"
"lackr","entity minimal-entity boundary","lackr::push_abstraction","command collaborator"
"lackr","entity minimal-entity boundary","lackr::eager","property non-void-command collaborator"
"lackr","entity minimal-entity boundary","lackr::lazy","property non-void-command collaborator"
"lackr","entity minimal-entity boundary","lackr::collect_terms","predicate non-void-command collaborator"
"dl_collected_cmds","empty","dl_collected_cmds","constructor"
"common","entity data-provider boundary","common","constructor"
"common","entity data-provider boundary","c","get collaborator"
"common","entity data-provider boundary","c","get collaborator"
"common","entity data-provider boundary","_","get collaborator"
"common","entity data-provider boundary","_","get collaborator"
"common","entity data-provider boundary","var","collaborator incidental"
"common","entity data-provider boundary","common::done","predicate"
"common","entity data-provider boundary","common::val","property collaborator"
"common","entity data-provider boundary","common::val","property collaborator"
"common","entity data-provider boundary","common::var_val","property collaborator"
"common","entity data-provider boundary","common::mul_val","property collaborator"
"common","entity data-provider boundary","common::var","property collaborator"
"common","entity data-provider boundary","common::canonize_sign","predicate collaborator"
"common","entity data-provider boundary","common::print_product","property collaborator"
"common","entity data-provider boundary","common::print_monic","property collaborator"
"common","entity data-provider boundary","common::print_factor","property collaborator"
"common","entity data-provider boundary","common::print_var","property collaborator"
"common","entity data-provider boundary","common::check_monic","predicate collaborator"
"common","entity data-provider boundary","common::random","non-void-command"
"common","entity data-provider boundary","common::add_deps_of_fixed","void-accessor command collaborator"
"common","entity data-provider boundary","common::nexvar","property non-void-command collaborator"
"common","entity data-provider boundary","common::create_sum_from_row","void-accessor command collaborator"
"ConstructorList","empty","~ConstructorList","destructor"
"ConstructorList","empty","ConstructorList","constructor"
"ConstructorList","empty","ConstructorList","constructor"
"size_t_hash","degenerate small-class","operator()","incidental"
"expr_stat","empty","expr_stat","constructor"
"mk_array_instantiation","entity boundary","~mk_array_instantiation","destructor"
"mk_array_instantiation","entity boundary","mk_array_instantiation::mk_array_instantiation","constructor"
"mk_array_instantiation","entity boundary","mk_array_instantiation::operator()","property non-void-command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::instantiate_rule","command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::create_head","property non-void-command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::retrieve_selects","command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::getId","property non-void-command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::create_pred","property non-void-command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::mk_select_var","property non-void-command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::rewrite_select","property non-void-command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::retrieve_all_selects","property non-void-command collaborator"
"mk_array_instantiation","entity boundary","mk_array_instantiation::instantiate_pred","property non-void-command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::ensure_validator","set collaborator"
"cut_simplifier","commander boundary","cut_simplifier::cut_simplifier","constructor"
"cut_simplifier","commander boundary","cut_simplifier::~cut_simplifier","destructor"
"cut_simplifier","commander boundary","cut_simplifier::add_and","set collaborator"
"cut_simplifier","commander boundary","cut_simplifier::add_or","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::add_xor","set collaborator"
"cut_simplifier","commander boundary","cut_simplifier::add_ite","set collaborator"
"cut_simplifier","commander boundary","cut_simplifier::add_iff","set collaborator"
"cut_simplifier","commander boundary","cut_simplifier::set_root","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::operator()","command"
"cut_simplifier","commander boundary","cut_simplifier::clauses2aig","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::aig2clauses","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::cuts2equiv","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::assign_unit","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::assign_equiv","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::uf2equiv","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::cuts2implies","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::learn_implies","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::simulate_eqs","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::track_binary","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::untrack_binary","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::track_binary","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::untrack_binary","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::certify_unit","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::certify_equivalence","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::certify_implies","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::add_dont_cares","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::cuts2bins","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::bins2dont_cares","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::dont_cares2cuts","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::op2dont_care","wrapper stateless"
"cut_simplifier","commander boundary","cut_simplifier::add_dont_care","predicate non-void-command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::collect_statistics","controller"
"cut_simplifier","commander boundary","cut_simplifier::validate_unit","command collaborator"
"cut_simplifier","commander boundary","cut_simplifier::validate_eq","command collaborator"
"Z3_func_entry_ref","empty","Z3_func_entry_ref","constructor"
"monotone","commander boundary","monotone::monotone","constructor"
"monotone","commander boundary","monotone::monotonicity_lemma","command collaborator"
"monotone","commander boundary","monotone::monotonicity_lemma","command collaborator"
"monotone","commander boundary","monotone::monotonicity_lemma_gt","command collaborator"
"monotone","commander boundary","monotone::monotonicity_lemma_lt","command collaborator"
"symbol","data-provider","symbol","copy-constructor"
"symbol","data-provider","operatorZ3_symbol","get"
"symbol","data-provider","kind","property collaborator"
"symbol","data-provider","str","property"
"symbol","data-provider","to_int","property"
"symbol","data-provider","operator==","incidental"
"symbol","data-provider","operator!=","incidental"
"symbol","data-provider","is_numerical","predicate wrapper"
"symbol","data-provider","is_null","predicate"
"symbol","data-provider","is_non_empty_string","predicate"
"symbol","data-provider","get_num","property"
"symbol","data-provider","operator==","controller stateless"
"symbol","data-provider","operator!=","predicate non-void-command"
"symbol","data-provider","c_api_symbol2ext","property collaborator"
"symbol","data-provider","hash","unclassified"
"symbol","data-provider","bare_str","get"
"symbol","data-provider","operator<<","controller stateless"
"symbol","data-provider","operator<<","controller stateless"
"symbol","data-provider","symbol::symbol","constructor"
"symbol","data-provider","symbol::operator=","get set"
"symbol","data-provider","symbol::str","property controller"
"symbol","data-provider","symbol::contains","predicate wrapper"
"symbol","data-provider","symbol::display_size","wrapper"
"bool_value_generator","entity boundary small-class","bool_value_generator","constructor"
"bool_value_generator","entity boundary small-class","get_fid","property collaborator"
"bool_value_generator","entity boundary small-class","get_value","property non-void-command collaborator"
"context","boundary","m","property collaborator"
"context","boundary","params","get non-void-command collaborator"
"context","boundary","cmd","get collaborator"
"context","boundary","produce_proofs","predicate"
"context","boundary","produce_models","get"
"context","boundary","produce_unsat_cores","get"
"context","boundary","use_auto_config","predicate"
"context","boundary","get_timeout","unclassified"
"context","boundary","get_rlimit","unclassified"
"context","boundary","autil","get collaborator"
"context","boundary","bvutil","get collaborator"
"context","boundary","datalog_util","get collaborator"
"context","boundary","fpautil","get collaborator"
"context","boundary","dtutil","property non-void-command collaborator"
"context","boundary","sutil","get collaborator"
"context","boundary","recfun","get collaborator"
"context","boundary","get_basic_fid","collaborator incidental"
"context","boundary","get_array_fid","get collaborator"
"context","boundary","get_arith_fid","collaborator incidental"
"context","boundary","get_bv_fid","get collaborator"
"context","boundary","get_dt_fid","get collaborator"
"context","boundary","get_datalog_fid","get collaborator"
"context","boundary","get_pb_fid","get collaborator"
"context","boundary","get_fpa_fid","get collaborator"
"context","boundary","get_seq_fid","get collaborator"
"context","boundary","get_char_fid","get collaborator"
"context","boundary","get_dt_plugin","get collaborator"
"context","boundary","get_special_relations_fid","get collaborator"
"context","boundary","get_error_code","get collaborator"
"context","boundary","reset_error_code","set"
"context","boundary","set_error_handler","set collaborator"
"context","boundary","enable_concurrent_dec_ref","set"
"context","boundary","get_print_mode","get collaborator"
"context","boundary","set_print_mode","set collaborator"
"context","boundary","get_exception_msg","property"
"context","boundary","pm","property non-void-command collaborator"
"context","boundary","poly_limit","get collaborator"
"context","boundary","fparams","get collaborator"
"context","boundary","init","command collaborator"
"context","boundary","set_context","command collaborator"
"context","boundary","detach","set"
"context","boundary","~context","destructor"
"context","boundary","operatorZ3_context","get"
"context","boundary","check_error","property collaborator"
"context","boundary","check_parser_error","unclassified"
"context","boundary","set_enable_exceptions","set"
"context","boundary","enable_exceptions","get"
"context","boundary","set","wrapper"
"context","boundary","set","wrapper"
"context","boundary","set","command collaborator"
"context","boundary","interrupt","wrapper"
"context","boundary","saturation_was_run","get"
"context","boundary","notify_saturation_was_run","set"
"context","boundary","get_manager","get collaborator"
"context","boundary","get_rule_manager","get collaborator"
"context","boundary","get_fparams","get collaborator"
"context","boundary","get_params","get collaborator"
"context","boundary","get_engine","get non-void-command collaborator"
"context","boundary","get_register_engine","get collaborator"
"context","boundary","get_rewriter","get collaborator"
"context","boundary","get_var_subst","get collaborator"
"context","boundary","get_decl_util","get collaborator"
"context","boundary","bind_vars_enabled","get"
"context","boundary","get_predicates","get collaborator"
"context","boundary","get_pinned","get collaborator"
"context","boundary","is_predicate","predicate collaborator"
"context","boundary","is_predicate","predicate collaborator"
"context","boundary","try_get_predicate_decl","property collaborator"
"context","boundary","set_output_predicate","command collaborator"
"context","boundary","get_rules","get non-void-command collaborator"
"context","boundary","get_num_assertions","non-void-command"
"context","boundary","get_assertion","get collaborator"
"context","boundary","is_closed","get"
"context","boundary","get_model_converter","get collaborator"
"context","boundary","add_model_converter","set collaborator"
"context","boundary","get_proof_converter","get collaborator"
"context","boundary","add_proof_converter","set collaborator"
"context","boundary","display_rules","collaborator"
"context","boundary","canceled","predicate set"
"context","boundary","set_status","set collaborator"
"context","boundary","get_rel_context","get non-void-command collaborator"
"context","boundary","add_callback","command collaborator"
"context","boundary","add_constraint","command"
"context","boundary","mk_sat_answer","property collaborator"
"context","boundary","get_params","get collaborator"
"context","boundary","use_eq_prop","get"
"context","boundary","use_native_mbp","get"
"context","boundary","use_ground_pob","get"
"context","boundary","use_instantiate","get"
"context","boundary","weak_abs","get"
"context","boundary","use_qlemmas","get"
"context","boundary","use_euf_gen","get"
"context","boundary","use_lim_num_gen","get"
"context","boundary","simplify_pob","get"
"context","boundary","use_ctp","get"
"context","boundary","use_inc_clause","get"
"context","boundary","blast_term_ite_inflation","get"
"context","boundary","elim_aux","get"
"context","boundary","reach_dnf","get"
"context","boundary","use_bg_invs","get"
"context","boundary","do_subsume","get"
"context","boundary","get_ast_manager","get collaborator"
"context","boundary","get_manager","get collaborator"
"context","boundary","get_manager","get collaborator"
"context","boundary","get_pred_transformers","get collaborator"
"context","boundary","get_pred_transformer","property collaborator"
"context","boundary","get_datalog_context","get wrapper"
"context","boundary","get_root","property collaborator"
"context","boundary","set_query","set collaborator"
"context","boundary","set_unsat","set"
"context","boundary","set_model_converter","set collaborator"
"context","boundary","get_model_converter","get collaborator"
"context","boundary","set_proof_converter","set collaborator"
"context","boundary","callbacks","get collaborator"
"context","boundary","get_proof","property collaborator"
"context","boundary","mk_solver0","controller stateless"
"context","boundary","mk_solver1","controller stateless"
"context","boundary","mk_solver2","controller stateless"
"context","boundary","get_hard_constraints","property non-void-command collaborator"
"context","boundary","empty","predicate non-void-command"
"context","boundary","get_proof_core","collaborator incidental"
"context","boundary","set_reason_unknown","set"
"context","boundary","is_pareto","predicate non-void-command"
"context","boundary","set_logic","set collaborator"
"context","boundary","set_clausal","set"
"context","boundary","get_params","get collaborator"
"context","boundary","get_lower","command collaborator"
"context","boundary","get_upper","command collaborator"
"context","boundary","num_objectives","non-void-command"
"context","boundary","fm","get collaborator"
"context","boundary","smt_context","property non-void-command"
"context","boundary","sat_enabled","predicate"
"context","boundary","get_manager","get collaborator"
"context","boundary","params","get collaborator"
"context","boundary","maxsat_engine","get collaborator"
"context","boundary","register_on_model","command collaborator"
"context","boundary","collect_timer_stats","controller"
"context","boundary","update_lower","command"
"context","boundary","set_reason_unknown","set"
"context","boundary","reset_model","command"
"context","boundary","get_manager","get collaborator"
"context","boundary","get_rewriter","get collaborator"
"context","boundary","get_fparams","get collaborator"
"context","boundary","get_params","get collaborator"
"context","boundary","get_region","get collaborator"
"context","boundary","relevancy","predicate"
"context","boundary","get_enode","get collaborator"
"context","boundary","find_enode","controller stateless"
"context","boundary","reset_bool_vars","controller stateless"
"context","boundary","get_bool_var","get controller"
"context","boundary","get_bool_var","property collaborator"
"context","boundary","get_bool_var_of_id","get collaborator"
"context","boundary","get_bool_var_of_id_option","controller stateless"
"context","boundary","set_bool_var","controller stateless"
"context","boundary","set_bool_var","controller stateless"
"context","boundary","get_lemmas","get collaborator"
"context","boundary","has_enode","get wrapper"
"context","boundary","bool_var2enode","get wrapper"
"context","boundary","enode2bool_var","property collaborator"
"context","boundary","enode2literal","property collaborator"
"context","boundary","get_num_bool_vars","unclassified"
"context","boundary","get_bdata","get collaborator"
"context","boundary","get_bdata","get collaborator"
"context","boundary","get_lit_assignment","property collaborator"
"context","boundary","get_assignment","property collaborator"
"context","boundary","get_assignment","property collaborator"
"context","boundary","assigned_literals","get collaborator"
"context","boundary","get_watch","get controller"
"context","boundary","get_justification","property collaborator"
"context","boundary","has_th_justification","predicate collaborator"
"context","boundary","set_random_seed","command"
"context","boundary","get_random_value","wrapper stateless"
"context","boundary","is_searching","get"
"context","boundary","get_activity_vector","get collaborator"
"context","boundary","get_activity","get collaborator"
"context","boundary","set_activity","set"
"context","boundary","activity_changed","command"
"context","boundary","is_assumption","predicate collaborator"
"context","boundary","is_assumption","predicate collaborator"
"context","boundary","is_marked","predicate collaborator"
"context","boundary","set_mark","command collaborator"
"context","boundary","unset_mark","command collaborator"
"context","boundary","get_assign_level","get collaborator"
"context","boundary","get_assign_level","collaborator"
"context","boundary","get_intern_level","collaborator"
"context","boundary","get_theory","property collaborator"
"context","boundary","theories","property collaborator"
"context","boundary","begin_theories","property collaborator"
"context","boundary","end_theories","property collaborator"
"context","boundary","get_scope_level","get"
"context","boundary","get_base_level","get"
"context","boundary","at_base_level","predicate"
"context","boundary","get_search_level","get"
"context","boundary","at_search_level","predicate"
"context","boundary","tracking_assumptions","predicate"
"context","boundary","bool_var2expr","get collaborator"
"context","boundary","literal2expr","void-accessor collaborator"
"context","boundary","literal2expr","property collaborator"
"context","boundary","is_true","predicate collaborator"
"context","boundary","is_false","predicate collaborator"
"context","boundary","get_num_enodes_of","controller"
"context","boundary","enodes_of","property controller"
"context","boundary","begin_enodes_of","property controller"
"context","boundary","end_enodes_of","property controller"
"context","boundary","enodes","get collaborator"
"context","boundary","begin_enodes","property collaborator"
"context","boundary","end_enodes","property collaborator"
"context","boundary","get_generation","collaborator"
"context","boundary","internalized_quantifiers","predicate"
"context","boundary","has_quantifiers","predicate"
"context","boundary","add_fingerprint","property non-void-command collaborator"
"context","boundary","get_var_theory","property collaborator"
"context","boundary","push_trail","command collaborator"
"context","boundary","push_trail_ptr","command collaborator"
"context","boundary","b_internalized","predicate collaborator"
"context","boundary","lit_internalized","predicate collaborator"
"context","boundary","e_internalized","controller stateless"
"context","boundary","get_num_b_internalized","unclassified"
"context","boundary","get_b_internalized","property collaborator"
"context","boundary","get_num_e_internalized","unclassified"
"context","boundary","get_e_internalized","property collaborator"
"context","boundary","get_decision_literal_pos","get wrapper"
"context","boundary","binary_clause_opt_enabled","predicate"
"context","boundary","get_bdata","property non-void-command collaborator"
"context","boundary","get_bdata","property collaborator"
"context","boundary","track_occs","predicate"
"context","boundary","mk_th_axiom","command collaborator"
"context","boundary","mk_th_axiom","command collaborator"
"context","boundary","mk_th_lemma","command collaborator"
"context","boundary","mk_th_lemma","command collaborator"
"context","boundary","mk_th_lemma","command collaborator"
"context","boundary","mk_th_lemma","command collaborator"
"context","boundary","mk_justification","non-void-command factory collaborator"
"context","boundary","assign","command"
"context","boundary","assign","command"
"context","boundary","try_true_first","predicate collaborator"
"context","boundary","assign_eq","command collaborator"
"context","boundary","force_phase","command collaborator"
"context","boundary","force_phase","command collaborator"
"context","boundary","set_global_generation","set"
"context","boundary","slow_contains_instance","predicate collaborator"
"context","boundary","push_eq","command collaborator"
"context","boundary","push_new_congruence","command"
"context","boundary","set_conflict","command collaborator"
"context","boundary","set_conflict","command collaborator"
"context","boundary","inconsistent","predicate"
"context","boundary","get_num_conflicts","get"
"context","boundary","inc_bvar_activity","command collaborator"
"context","boundary","decay_bvar_activity","set"
"context","boundary","is_justifying","predicate collaborator"
"context","boundary","can_delete","predicate collaborator"
"context","boundary","is_relevant_core","predicate collaborator"
"context","boundary","is_relevant","predicate collaborator"
"context","boundary","is_relevant","predicate collaborator"
"context","boundary","is_relevant","predicate collaborator"
"context","boundary","is_relevant","predicate collaborator"
"context","boundary","is_relevant_core","predicate collaborator"
"context","boundary","mark_as_relevant","command collaborator"
"context","boundary","mark_as_relevant","command collaborator"
"context","boundary","mark_as_relevant","command collaborator"
"context","boundary","mark_as_relevant","command collaborator"
"context","boundary","mk_relevancy_eh","property non-void-command collaborator"
"context","boundary","add_relevancy_eh","command collaborator"
"context","boundary","add_relevancy_dependency","command collaborator"
"context","boundary","add_rel_watch","command collaborator"
"context","boundary","add_rel_watch","command collaborator"
"context","boundary","get_pp_visited","property collaborator"
"context","boundary","pp","property wrapper"
"context","boundary","display_detailed_literal","property controller"
"context","boundary","display_literals","property collaborator"
"context","boundary","display_literals_smt2","property collaborator"
"context","boundary","display_literals_smt2","property collaborator"
"context","boundary","display_literals_verbose","property collaborator"
"context","boundary","set_logic","predicate non-void-command collaborator"
"context","boundary","get_cr","property non-void-command collaborator"
"context","boundary","internalize_instance","command"
"context","boundary","get_unsat_core_size","unclassified"
"context","boundary","get_unsat_core_expr","property collaborator"
"context","boundary","unsat_core","get collaborator"
"context","boundary","set_model","set collaborator"
"context","boundary","get_num_asserted_formulas","unclassified"
"context","boundary","get_asserted_formulas_last_level","unclassified"
"context","boundary","get_asserted_formula","property collaborator"
"context","boundary","get_asserted_formula_proof","property collaborator"
"context","boundary","get_asserted_formulas","collaborator"
"context","boundary","get_assertions","command collaborator"
"context","boundary","clause_proof_active","predicate"
"context","boundary","get_clause_proof","get collaborator"
"context","boundary","register_on_clause","command collaborator"
"context","boundary","user_propagate_register_final","command collaborator"
"context","boundary","user_propagate_register_fixed","command collaborator"
"context","boundary","user_propagate_register_eq","command collaborator"
"context","boundary","user_propagate_register_diseq","command collaborator"
"context","boundary","user_propagate_register_expr","command collaborator"
"context","boundary","user_propagate_register_created","command collaborator"
"context","boundary","user_propagate_register_decide","command collaborator"
"context","boundary","assign_fixed","command collaborator"
"context","boundary","assign_fixed","command collaborator"
"context","boundary","get_num_macros","unclassified"
"context","boundary","get_first_macro_last_level","unclassified"
"context","boundary","get_macro_func_decl","property collaborator"
"context","boundary","get_macro_interpretation","property collaborator"
"context","boundary","get_macro_quantifier","property collaborator"
"context","boundary","insert_macro","command collaborator"
"context","boundary","context::add_object","non-void-command collaborator"
"context","boundary","context::del_object","command collaborator"
"context","boundary","context::dec_ref","command collaborator"
"context","boundary","context::flush_objects","command collaborator"
"context","boundary","context::context","copy-constructor"
"context","boundary","context::~context","destructor"
"context","boundary","context::interrupt","command collaborator"
"context","boundary","context::set_error_code","command"
"context","boundary","context::set_error_code","command"
"context","boundary","context::mk_external_string","property set"
"context","boundary","context::mk_external_string","property non-void-command"
"context","boundary","context::mk_external_string","property set"
"context","boundary","context::mk_numeral_core","property non-void-command collaborator"
"context","boundary","context::mk_and","property non-void-command collaborator"
"context","boundary","context::save_ast_trail","command collaborator"
"context","boundary","context::save_multiple_ast_trail","command collaborator"
"context","boundary","context::reset_last_result","set"
"context","boundary","context::save_object","set collaborator"
"context","boundary","context::handle_exception","command collaborator"
"context","boundary","context::invoke_error_handler","wrapper"
"context","boundary","context::check_sorts","command collaborator"
"context","boundary","context::rcfm","property non-void-command collaborator"
"context","boundary","context::str_symbol","property non-void-command collaborator"
"context","boundary","context::int_symbol","property non-void-command collaborator"
"context","boundary","context::bool_sort","property non-void-command collaborator"
"context","boundary","context::int_sort","property non-void-command collaborator"
"context","boundary","context::real_sort","property non-void-command collaborator"
"context","boundary","context::bv_sort","property non-void-command collaborator"
"context","boundary","context::string_sort","property non-void-command collaborator"
"context","boundary","context::char_sort","property non-void-command collaborator"
"context","boundary","context::seq_sort","property non-void-command collaborator"
"context","boundary","context::re_sort","property non-void-command collaborator"
"context","boundary","context::fpa_sort","property non-void-command collaborator"
"context","boundary","context::fpa_sort<16>","property non-void-command collaborator"
"context","boundary","context::fpa_sort<32>","property non-void-command collaborator"
"context","boundary","context::fpa_sort<64>","property non-void-command collaborator"
"context","boundary","context::fpa_sort<128>","property non-void-command collaborator"
"context","boundary","context::fpa_rounding_mode_sort","property non-void-command collaborator"
"context","boundary","context::array_sort","property non-void-command collaborator"
"context","boundary","context::array_sort","property non-void-command collaborator"
"context","boundary","context::enumeration_sort","property non-void-command collaborator"
"context","boundary","context::tuple_sort","property non-void-command collaborator"
"context","boundary","context::datatype","property non-void-command collaborator"
"context","boundary","context::datatypes","property controller"
"context","boundary","context::datatype_sort","property non-void-command collaborator"
"context","boundary","context::uninterpreted_sort","property wrapper"
"context","boundary","context::uninterpreted_sort","property wrapper"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::function","property non-void-command collaborator"
"context","boundary","context::recfun","property non-void-command collaborator"
"context","boundary","context::recfun","property non-void-command collaborator"
"context","boundary","context::recfun","property non-void-command collaborator"
"context","boundary","context::recfun","property non-void-command collaborator"
"context","boundary","context::recfun","property non-void-command collaborator"
"context","boundary","context::recfun","property non-void-command collaborator"
"context","boundary","context::recdef","controller stateless"
"context","boundary","context::user_propagate_function","property non-void-command collaborator"
"context","boundary","context::constant","property non-void-command collaborator"
"context","boundary","context::constant","property non-void-command collaborator"
"context","boundary","context::variable","property non-void-command collaborator"
"context","boundary","context::bool_const","property non-void-command collaborator"
"context","boundary","context::int_const","property non-void-command collaborator"
"context","boundary","context::real_const","property non-void-command collaborator"
"context","boundary","context::string_const","property non-void-command collaborator"
"context","boundary","context::bv_const","property non-void-command collaborator"
"context","boundary","context::fpa_const","property non-void-command collaborator"
"context","boundary","context::fpa_const","property non-void-command collaborator"
"context","boundary","context::set_rounding_mode","set collaborator"
"context","boundary","context::fpa_rounding_mode","property wrapper"
"context","boundary","context::bool_val","property wrapper"
"context","boundary","context::int_val","property non-void-command collaborator"
"context","boundary","context::int_val","property non-void-command collaborator"
"context","boundary","context::int_val","property non-void-command collaborator"
"context","boundary","context::int_val","property non-void-command collaborator"
"context","boundary","context::int_val","property non-void-command collaborator"
"context","boundary","context::real_val","property non-void-command collaborator"
"context","boundary","context::real_val","property non-void-command collaborator"
"context","boundary","context::real_val","property non-void-command collaborator"
"context","boundary","context::real_val","property non-void-command collaborator"
"context","boundary","context::real_val","property non-void-command collaborator"
"context","boundary","context::real_val","property non-void-command collaborator"
"context","boundary","context::bv_val","property non-void-command collaborator"
"context","boundary","context::bv_val","property non-void-command collaborator"
"context","boundary","context::bv_val","property non-void-command collaborator"
"context","boundary","context::bv_val","property non-void-command collaborator"
"context","boundary","context::bv_val","property non-void-command collaborator"
"context","boundary","context::bv_val","property non-void-command collaborator"
"context","boundary","context::fpa_val","property non-void-command collaborator"
"context","boundary","context::fpa_val","property non-void-command collaborator"
"context","boundary","context::fpa_nan","property non-void-command collaborator"
"context","boundary","context::fpa_inf","property non-void-command collaborator"
"context","boundary","context::string_val","property non-void-command collaborator"
"context","boundary","context::string_val","property non-void-command collaborator"
"context","boundary","context::string_val","property non-void-command collaborator"
"context","boundary","context::string_val","property non-void-command collaborator"
"context","boundary","context::num_val","property non-void-command collaborator"
"context","boundary","context::parse_string","property non-void-command collaborator"
"context","boundary","context::parse_file","property non-void-command collaborator"
"context","boundary","context::parse_string","property non-void-command collaborator"
"context","boundary","context::parse_file","property non-void-command collaborator"
"context","boundary","context::push","command"
"context","boundary","context::pop","command"
"context","boundary","context::context","constructor"
"context","boundary","context::~context","destructor"
"context","boundary","context::reset","command"
"context","boundary","context::is_fact","predicate collaborator"
"context","boundary","context::has_sort_domain","predicate collaborator"
"context","boundary","context::get_sort_domain","property non-void-command collaborator"
"context","boundary","context::get_sort_domain","property collaborator"
"context","boundary","context::generate_proof_trace","get"
"context","boundary","context::output_profile","predicate"
"context","boundary","context::output_tuples","predicate"
"context","boundary","context::use_map_names","predicate"
"context","boundary","context::fix_unbound_vars","predicate"
"context","boundary","context::default_table","property collaborator"
"context","boundary","context::default_relation","get collaborator"
"context","boundary","context::set_default_relation","set collaborator"
"context","boundary","context::print_aig","property collaborator"
"context","boundary","context::check_relation","property collaborator"
"context","boundary","context::default_table_checker","property collaborator"
"context","boundary","context::default_table_checked","predicate"
"context","boundary","context::dbg_fpr_nonempty_relation_signature","predicate"
"context","boundary","context::dl_profile_milliseconds_threshold","unclassified"
"context","boundary","context::all_or_nothing_deltas","predicate"
"context","boundary","context::compile_with_widening","predicate"
"context","boundary","context::unbound_compressor","get"
"context","boundary","context::set_unbound_compressor","set"
"context","boundary","context::soft_timeout","unclassified"
"context","boundary","context::similarity_compressor","predicate"
"context","boundary","context::similarity_compressor_threshold","unclassified"
"context","boundary","context::initial_restart_timeout","unclassified"
"context","boundary","context::generate_explanations","predicate"
"context","boundary","context::explanations_on_relation_level","predicate"
"context","boundary","context::magic_sets_for_queries","predicate"
"context","boundary","context::tab_selection","property collaborator"
"context","boundary","context::xform_coi","predicate"
"context","boundary","context::xform_slice","predicate"
"context","boundary","context::xform_bit_blast","predicate"
"context","boundary","context::karr","incidental"
"context","boundary","context::scale","predicate"
"context","boundary","context::magic","predicate"
"context","boundary","context::compress_unbound","predicate"
"context","boundary","context::quantify_arrays","predicate"
"context","boundary","context::instantiate_quantifiers","predicate"
"context","boundary","context::array_blast","predicate"
"context","boundary","context::array_blast_full","predicate"
"context","boundary","context::elim_term_ite","predicate"
"context","boundary","context::blast_term_ite_inflation","unclassified"
"context","boundary","context::register_finite_sort","command collaborator"
"context","boundary","context::register_variable","command collaborator"
"context","boundary","context::bind_vars","property wrapper"
"context","boundary","context::register_predicate","command"
"context","boundary","context::restrict_predicates","command collaborator"
"context","boundary","context::get_constant_number","property non-void-command collaborator"
"context","boundary","context::get_constant_number","property non-void-command collaborator"
"context","boundary","context::print_constant_name","command collaborator"
"context","boundary","context::try_get_sort_constant_count","predicate non-void-command"
"context","boundary","context::get_sort_size_estimate","property non-void-command collaborator"
"context","boundary","context::set_argument_names","command collaborator"
"context","boundary","context::get_argument_name","property non-void-command collaborator"
"context","boundary","context::set_predicate_representation","command collaborator"
"context","boundary","context::mk_fresh_head_predicate","property non-void-command factory collaborator"
"context","boundary","context::add_rule","command"
"context","boundary","context::flush_add_rules","command collaborator"
"context","boundary","context::update_rule","command collaborator"
"context","boundary","context::check_subsumes","controller stateless"
"context","boundary","context::get_num_levels","non-void-command collaborator"
"context","boundary","context::get_cover_delta","property non-void-command collaborator"
"context","boundary","context::get_reachable","property non-void-command collaborator"
"context","boundary","context::add_cover","command collaborator"
"context","boundary","context::add_invariant","command collaborator"
"context","boundary","context::check_rules","command collaborator"
"context","boundary","context::add_rule","command collaborator"
"context","boundary","context::add_fact","command collaborator"
"context","boundary","context::add_fact","command collaborator"
"context","boundary","context::has_facts","predicate collaborator"
"context","boundary","context::add_table_fact","command collaborator"
"context","boundary","context::add_table_fact","command"
"context","boundary","context::close","set"
"context","boundary","context::ensure_closed","command"
"context","boundary","context::ensure_opened","command"
"context","boundary","context::reopen","set"
"context","boundary","context::transform_rules","command collaborator"
"context","boundary","context::transform_rules","command collaborator"
"context","boundary","context::replace_rules","command collaborator"
"context","boundary","context::record_transformed_rules","command"
"context","boundary","context::apply_default_transformation","empty"
"context","boundary","context::collect_params","command collaborator"
"context","boundary","context::updt_params","command collaborator"
"context","boundary","context::get_background_assertion","property wrapper"
"context","boundary","context::assert_expr","command collaborator"
"context","boundary","context::cleanup","set"
"context","boundary","context::configure_engine","command collaborator"
"context","boundary","context::query","property non-void-command collaborator"
"context","boundary","context::is_monotone","predicate non-void-command"
"context","boundary","context::query_from_lvl","property non-void-command collaborator"
"context","boundary","context::get_model","property non-void-command collaborator"
"context","boundary","context::get_proof","property non-void-command collaborator"
"context","boundary","context::ensure_engine","command collaborator"
"context","boundary","context::rel_query","property non-void-command collaborator"
"context","boundary","context::get_answer_as_formula","property non-void-command collaborator"
"context","boundary","context::get_ground_sat_answer","get non-void-command collaborator"
"context","boundary","context::get_rules_along_trace","command collaborator"
"context","boundary","context::get_rules_along_trace_as_formulas","command collaborator"
"context","boundary","context::display_certificate","property non-void-command collaborator"
"context","boundary","context::display","collaborator"
"context","boundary","context::display_profile","collaborator"
"context","boundary","context::reset_statistics","command"
"context","boundary","context::collect_statistics","collaborator"
"context","boundary","context::get_status","get collaborator"
"context","boundary","context::result_contains_fact","predicate non-void-command collaborator"
"context","boundary","context::get_raw_rule_formulas","command collaborator"
"context","boundary","context::get_rules_as_formulas","command collaborator"
"context","boundary","context::display_smt2","command collaborator"
"context","boundary","context::display_rel_decl","controller"
"context","boundary","context::is_query","predicate non-void-command collaborator"
"context","boundary","context::declare_vars","void-accessor command collaborator"
"context","boundary","context::context","constructor"
"context","boundary","context::~context","destructor"
"context","boundary","context::updt_params","command"
"context","boundary","context::reset","command"
"context","boundary","context::init_rules","command collaborator"
"context","boundary","context::inherit_lemmas","command collaborator"
"context","boundary","context::update_rules","command collaborator"
"context","boundary","context::init","command collaborator"
"context","boundary","context::get_num_levels","non-void-command collaborator"
"context","boundary","context::get_cover_delta","property non-void-command collaborator"
"context","boundary","context::add_cover","command"
"context","boundary","context::add_invariant","command collaborator"
"context","boundary","context::get_reachable","property non-void-command collaborator"
"context","boundary","context::validate","predicate non-void-command collaborator"
"context","boundary","context::reset_lemma_generalizers","command"
"context","boundary","context::init_global_smt_params","command collaborator"
"context","boundary","context::init_lemma_generalizers","command"
"context","boundary","context::get_level_property","collaborator"
"context","boundary","context::simplify_formulas","controller"
"context","boundary","context::solve","get non-void-command collaborator"
"context","boundary","context::checkpoint","command"
"context","boundary","context::get_cex_depth","non-void-command"
"context","boundary","context::get_rules_along_trace","command collaborator"
"context","boundary","context::get_model","property non-void-command collaborator"
"context","boundary","context::get_answer","property non-void-command collaborator"
"context","boundary","context::mk_unsat_answer","property collaborator"
"context","boundary","context::get_ground_refutation","property wrapper"
"context","boundary","context::get_ground_sat_answer","property collaborator"
"context","boundary","context::display_certificate","collaborator"
"context","boundary","context::solve_core","property non-void-command collaborator"
"context","boundary","context::log_enter_level","unclassified"
"context","boundary","context::log_propagate","unclassified"
"context","boundary","context::log_expand_pob","command collaborator"
"context","boundary","context::log_add_lemma","command collaborator"
"context","boundary","context::check_reachability","predicate non-void-command collaborator"
"context","boundary","context::is_requeue","predicate non-void-command collaborator"
"context","boundary","context::is_reachable","predicate non-void-command collaborator"
"context","boundary","context::predecessor_eh","command"
"context","boundary","context::mk_mdl_rf_consistent","predicate controller"
"context","boundary","context::handle_unknown","property non-void-command collaborator"
"context","boundary","context::expand_pob","property non-void-command collaborator"
"context","boundary","context::propagate","predicate non-void-command collaborator"
"context","boundary","context::create_children","predicate non-void-command collaborator"
"context","boundary","context::collect_statistics","collaborator"
"context","boundary","context::reset_statistics","command"
"context","boundary","context::check_invariant","predicate non-void-command"
"context","boundary","context::check_invariant","predicate non-void-command collaborator"
"context","boundary","context::get_constraints","property non-void-command collaborator"
"context","boundary","context::add_constraint","command collaborator"
"context","boundary","context::new_lemma_eh","command collaborator"
"context","boundary","context::new_pob_eh","empty"
"context","boundary","context::is_inductive","incidental"
"context","boundary","context::close_all_may_parents","controller stateless"
"context","boundary","context::gpdr_solve_core","property non-void-command collaborator"
"context","boundary","context::gpdr_check_reachability","predicate non-void-command collaborator"
"context","boundary","context::gpdr_create_split_children","predicate non-void-command collaborator"
"context","boundary","context::context","constructor"
"context","boundary","context::~context","destructor"
"context","boundary","context::reset_maxsmts","command"
"context","boundary","context::push","command"
"context","boundary","context::pop","command"
"context","boundary","context::get_labels","controller"
"context","boundary","context::get_unsat_core","controller"
"context","boundary","context::set_hard_constraints","command collaborator"
"context","boundary","context::add_hard_constraint","command collaborator"
"context","boundary","context::add_hard_constraint","command collaborator"
"context","boundary","context::get_hard_constraints","controller"
"context","boundary","context::get_objective","property non-void-command collaborator"
"context","boundary","context::add_soft_constraint","non-void-command collaborator"
"context","boundary","context::add_objective","non-void-command"
"context","boundary","context::import_scoped_state","command collaborator"
"context","boundary","context::optimize","property non-void-command collaborator"
"context","boundary","context::adjust_unknown","property non-void-command collaborator"
"context","boundary","context::get_base_model","void-accessor collaborator"
"context","boundary","context::fix_model","command collaborator"
"context","boundary","context::set_model","command collaborator"
"context","boundary","context::get_model_core","void-accessor command collaborator"
"context","boundary","context::get_box_model","void-accessor command"
"context","boundary","context::contains_quantifiers","predicate collaborator"
"context","boundary","context::execute_min_max","property non-void-command collaborator"
"context","boundary","context::execute_maxsat","property non-void-command collaborator"
"context","boundary","context::execute","property non-void-command collaborator"
"context","boundary","context::scoped_lex","predicate wrapper"
"context","boundary","context::execute_lex","property non-void-command collaborator"
"context","boundary","context::execute_box","property non-void-command collaborator"
"context","boundary","context::mk_le","property non-void-command collaborator"
"context","boundary","context::mk_ge","property non-void-command collaborator"
"context","boundary","context::mk_gt","property non-void-command collaborator"
"context","boundary","context::mk_cmp","property non-void-command collaborator"
"context","boundary","context::mk_ge","property non-void-command collaborator"
"context","boundary","context::yield","command"
"context","boundary","context::execute_pareto","property non-void-command collaborator"
"context","boundary","context::reason_unknown","get property"
"context","boundary","context::display_bounds","collaborator"
"context","boundary","context::get_solver","property non-void-command collaborator"
"context","boundary","context::init_solver","command"
"context","boundary","context::setup_arith_solver","command collaborator"
"context","boundary","context::update_solver","command collaborator"
"context","boundary","context::enable_sls","command"
"context","boundary","context::is_maxsat_query","predicate collaborator"
"context","boundary","context::probe_fd","predicate non-void-command collaborator"
"context","boundary","context::is_propositional","predicate non-void-command collaborator"
"context","boundary","context::add_maxsmt","command collaborator"
"context","boundary","context::is_numeral","predicate collaborator"
"context","boundary","context::normalize","command collaborator"
"context","boundary","context::simplify_fmls","command collaborator"
"context","boundary","context::is_objective","predicate non-void-command collaborator"
"context","boundary","context::is_maximize","predicate non-void-command"
"context","boundary","context::is_minimize","predicate non-void-command"
"context","boundary","context::is_maxsat","predicate non-void-command collaborator"
"context","boundary","context::mk_objective_fn","property non-void-command collaborator"
"context","boundary","context::mk_maximize","property non-void-command collaborator"
"context","boundary","context::mk_minimize","property non-void-command collaborator"
"context","boundary","context::mk_maxsat","property non-void-command collaborator"
"context","boundary","context::from_fmls","command collaborator"
"context","boundary","context::model_updated","command collaborator"
"context","boundary","context::adjust","get wrapper"
"context","boundary","context::add_offset","controller"
"context","boundary","context::verify_model","predicate non-void-command collaborator"
"context","boundary","context::purify","void-accessor command collaborator"
"context","boundary","context::is_mul_const","predicate non-void-command collaborator"
"context","boundary","context::purify","property non-void-command collaborator"
"context","boundary","context::mk_atomic","void-accessor command collaborator"
"context","boundary","context::to_fmls","command collaborator"
"context","boundary","context::internalize","command"
"context","boundary","context::update_bound","command collaborator"
"context","boundary","context::display_benchmark","command"
"context","boundary","context::display","command collaborator"
"context","boundary","context::display_assignment","command collaborator"
"context","boundary","context::display_objective","collaborator incidental"
"context","boundary","context::get_lower_as_num","property non-void-command collaborator"
"context","boundary","context::get_upper_as_num","property non-void-command collaborator"
"context","boundary","context::get_lower","property non-void-command collaborator"
"context","boundary","context::get_upper","property non-void-command collaborator"
"context","boundary","context::to_exprs","command collaborator"
"context","boundary","context::to_expr","property non-void-command collaborator"
"context","boundary","context::set_simplify","set collaborator"
"context","boundary","context::clear_state","command"
"context","boundary","context::set_pareto","command collaborator"
"context","boundary","context::collect_statistics","collaborator"
"context","boundary","context::collect_param_descrs","command collaborator"
"context","boundary","context::updt_params","command collaborator"
"context","boundary","context::to_string","property non-void-command"
"context","boundary","context::to_string_internal","property"
"context","boundary","context::to_wcnf","property non-void-command collaborator"
"context","boundary","context::to_string","property collaborator"
"context","boundary","context::validate_model","command collaborator"
"context","boundary","context::validate_maxsat","command collaborator"
"context","boundary","context::validate_lex","command collaborator"
"context","boundary","context::is_qsat_opt","predicate non-void-command collaborator"
"context","boundary","context::run_qsat_opt","property non-void-command collaborator"
"context","boundary","context::antecedent2fml","property non-void-command collaborator"
"context","boundary","context::extract_fixed_consequences","command collaborator"
"context","boundary","context::justify","void-accessor command collaborator"
"context","boundary","context::extract_fixed_consequences","void-accessor command collaborator"
"context","boundary","context::delete_unfixed","non-void-command collaborator"
"context","boundary","context::extract_fixed_eqs","non-void-command collaborator"
"context","boundary","context::mk_diseq","property non-void-command collaborator"
"context","boundary","context::get_consequences","property non-void-command collaborator"
"context","boundary","context::display_consequence_progress","incidental"
"context","boundary","context::extract_cores","void-accessor command collaborator"
"context","boundary","context::preferred_sat","void-accessor command collaborator"
"context","boundary","context::display_partial_assignment","command collaborator"
"context","boundary","context::preferred_sat","property non-void-command collaborator"
"context","boundary","context::find_mutexes","property non-void-command collaborator"
"context","boundary","context::validate_consequences","command collaborator"
"context","boundary","context::context","constructor"
"context","boundary","context::get_cancel_flag","predicate non-void-command"
"context","boundary","context::updt_params","command collaborator"
"context","boundary","context::relevancy_lvl","wrapper"
"context","boundary","context::copy","controller stateless"
"context","boundary","context::~context","destructor"
"context","boundary","context::copy_plugins","controller stateless"
"context","boundary","context::copy_user_propagator","command collaborator"
"context","boundary","context::mk_fresh","property non-void-command factory collaborator"
"context","boundary","context::init","command collaborator"
"context","boundary","context::set_progress_callback","set collaborator"
"context","boundary","context::mk_eq_atom","property non-void-command collaborator"
"context","boundary","context::set_justification","command collaborator"
"context","boundary","context::assign_core","command collaborator"
"context","boundary","context::bcp","predicate non-void-command collaborator"
"context","boundary","context::push_new_th_eq","command collaborator"
"context","boundary","context::push_new_th_diseq","command collaborator"
"context","boundary","context::add_eq","command collaborator"
"context","boundary","context::remove_parents_from_cg_table","command collaborator"
"context","boundary","context::reinsert_parents_into_cg_table","command collaborator"
"context","boundary","context::invert_trans","controller stateless"
"context","boundary","context::get_closest_var","controller stateless"
"context","boundary","context::merge_theory_vars","command collaborator"
"context","boundary","context::propagate_bool_enode_assignment","command collaborator"
"context","boundary","context::propagate_bool_enode_assignment_core","void-accessor command collaborator"
"context","boundary","context::undo_add_eq","command collaborator"
"context","boundary","context::restore_theory_vars","command collaborator"
"context","boundary","context::add_diseq","predicate non-void-command collaborator"
"context","boundary","context::is_diseq","predicate non-void-command collaborator"
"context","boundary","context::is_diseq_slow","predicate collaborator"
"context","boundary","context::is_ext_diseq","predicate non-void-command collaborator"
"context","boundary","context::get_enode_eq_to","property non-void-command collaborator"
"context","boundary","context::propagate_eqs","predicate non-void-command collaborator"
"context","boundary","context::propagate_atoms","predicate non-void-command collaborator"
"context","boundary","context::set_var_theory","command collaborator"
"context","boundary","context::propagate_bool_var_enode","command collaborator"
"context","boundary","context::push_new_th_diseqs","command collaborator"
"context","boundary","context::get_assignment_core","property collaborator"
"context","boundary","context::get_assignment","property collaborator"
"context","boundary","context::find_assignment","property collaborator"
"context","boundary","context::get_assignment","property collaborator"
"context","boundary","context::get_assignments","command collaborator"
"context","boundary","context::get_specrels","collaborator"
"context","boundary","context::relevant_eh","command collaborator"
"context","boundary","context::propagate_relevancy","command collaborator"
"context","boundary","context::propagate_theories","predicate non-void-command collaborator"
"context","boundary","context::propagate_th_eqs","command collaborator"
"context","boundary","context::propagate_th_diseqs","command collaborator"
"context","boundary","context::can_theories_propagate","predicate controller"
"context","boundary","context::can_propagate","predicate"
"context","boundary","context::propagate","predicate non-void-command collaborator"
"context","boundary","context::set_conflict","command collaborator"
"context","boundary","context::assign_quantifier","command collaborator"
"context","boundary","context::contains_instance","predicate non-void-command collaborator"
"context","boundary","context::add_instance","predicate non-void-command collaborator"
"context","boundary","context::rescale_bool_var_activity","command collaborator"
"context","boundary","context::guess","get predicate non-void-command collaborator"
"context","boundary","context::decide","predicate non-void-command collaborator"
"context","boundary","context::update_phase_cache_counter","command"
"context","boundary","context::push_scope","command collaborator"
"context","boundary","context::undo_trail_stack","wrapper"
"context","boundary","context::remove_watch_literal","controller"
"context","boundary","context::remove_watch","command collaborator"
"context","boundary","context::remove_cls_occs","command collaborator"
"context","boundary","context::add_lit_occs","command collaborator"
"context","boundary","context::remove_lit_occs","command collaborator"
"context","boundary","context::dec_ref","set collaborator"
"context","boundary","context::inc_ref","set collaborator"
"context","boundary","context::del_clause","command collaborator"
"context","boundary","context::del_clauses","command collaborator"
"context","boundary","context::unassign_vars","command collaborator"
"context","boundary","context::del_justifications","controller"
"context","boundary","context::is_empty_clause","predicate collaborator"
"context","boundary","context::is_unit_clause","predicate collaborator"
"context","boundary","context::cache_generation","command collaborator"
"context","boundary","context::cache_generation","command"
"context","boundary","context::cache_generation","command"
"context","boundary","context::cache_generation","command collaborator"
"context","boundary","context::reset_cache_generation","command"
"context","boundary","context::reinit_clauses","command collaborator"
"context","boundary","context::reassert_units","command collaborator"
"context","boundary","context::pop_scope_core","non-void-command"
"context","boundary","context::pop_scope","command"
"context","boundary","context::pop_to_base_lvl","command"
"context","boundary","context::pop_to_search_lvl","command"
"context","boundary","context::simplify_clause","predicate non-void-command collaborator"
"context","boundary","context::simplify_clauses","non-void-command collaborator"
"context","boundary","context::simplify_clauses","command collaborator"
"context","boundary","context::del_inactive_lemmas","command"
"context","boundary","context::del_inactive_lemmas1","command collaborator"
"context","boundary","context::del_inactive_lemmas2","command"
"context","boundary","context::more_than_k_unassigned_literals","predicate non-void-command collaborator"
"context","boundary","context::already_internalized_theory","predicate collaborator"
"context","boundary","context::already_internalized_theory_core","controller stateless"
"context","boundary","context::register_plugin","command collaborator"
"context","boundary","context::user_propagate_init","command collaborator"
"context","boundary","context::watches_fixed","predicate collaborator"
"context","boundary","context::has_split_candidate","predicate non-void-command"
"context","boundary","context::decide_user_interference","predicate non-void-command collaborator"
"context","boundary","context::assign_fixed","command collaborator"
"context","boundary","context::is_fixed","predicate non-void-command collaborator"
"context","boundary","context::push","command collaborator"
"context","boundary","context::pop","command"
"context","boundary","context::flush","command collaborator"
"context","boundary","context::assert_expr_core","command collaborator"
"context","boundary","context::add_asserted","command collaborator"
"context","boundary","context::assert_expr","command collaborator"
"context","boundary","context::assert_expr","command collaborator"
"context","boundary","context::mk_th_case_split","command collaborator"
"context","boundary","context::add_theory_aware_branching_info","command collaborator"
"context","boundary","context::undo_th_case_split","command collaborator"
"context","boundary","context::propagate_th_case_split","predicate non-void-command collaborator"
"context","boundary","context::reduce_assertions","command"
"context","boundary","context::internalize_proxies","command collaborator"
"context","boundary","context::internalize_assertions","command collaborator"
"context","boundary","context::asserted_inconsistent","command collaborator"
"context","boundary","context::validate_assumptions","predicate wrapper"
"context","boundary","context::init_clause","command collaborator"
"context","boundary","context::reset_tmp_clauses","command"
"context","boundary","context::decide_clause","property non-void-command collaborator"
"context","boundary","context::init_assumptions","command collaborator"
"context","boundary","context::reset_assumptions","command collaborator"
"context","boundary","context::should_research","predicate non-void-command collaborator"
"context","boundary","context::mk_unsat_core","property non-void-command collaborator"
"context","boundary","context::check_preamble","predicate non-void-command"
"context","boundary","context::check_finalize","property non-void-command collaborator"
"context","boundary","context::setup_and_check","property non-void-command collaborator"
"context","boundary","context::get_config_mode","property collaborator"
"context","boundary","context::setup_context","command"
"context","boundary","context::setup_components","command collaborator"
"context","boundary","context::add_theory_assumptions","controller"
"context","boundary","context::check","property non-void-command collaborator"
"context","boundary","context::check","property non-void-command collaborator"
"context","boundary","context::init_search","command collaborator"
"context","boundary","context::end_search","command"
"context","boundary","context::inc_limits","command"
"context","boundary","context::search","property non-void-command collaborator"
"context","boundary","context::restart","predicate non-void-command collaborator"
"context","boundary","context::tick","void-accessor"
"context","boundary","context::bounded_search","property non-void-command collaborator"
"context","boundary","context::resource_limits_exceeded","predicate non-void-command"
"context","boundary","context::final_check","property non-void-command collaborator"
"context","boundary","context::check_proof","command collaborator"
"context","boundary","context::forget_phase_of_vars_in_current_level","command collaborator"
"context","boundary","context::resolve_conflict","predicate non-void-command"
"context","boundary","context::record_relevancy","command collaborator"
"context","boundary","context::restore_relevancy","command collaborator"
"context","boundary","context::get_relevant_labels","command collaborator"
"context","boundary","context::get_relevant_labeled_literals","command collaborator"
"context","boundary","context::get_relevant_literals","command collaborator"
"context","boundary","context::get_guessed_literals","command collaborator"
"context","boundary","context::set_true_first_flag","controller"
"context","boundary","context::assume_eq","predicate non-void-command collaborator"
"context","boundary","context::is_shared","predicate collaborator"
"context","boundary","context::is_beta_redex","predicate collaborator"
"context","boundary","context::get_value","predicate non-void-command collaborator"
"context","boundary","context::update_model","predicate non-void-command collaborator"
"context","boundary","context::mk_proto_model","command collaborator"
"context","boundary","context::get_proof","get non-void-command collaborator"
"context","boundary","context::has_case_splits","predicate non-void-command"
"context","boundary","context::get_model","void-accessor command collaborator"
"context","boundary","context::get_levels","void-accessor command collaborator"
"context","boundary","context::get_trail","property non-void-command collaborator"
"context","boundary","context::get_units","command collaborator"
"context","boundary","context::get_last_search_failure","get collaborator"
"context","boundary","context::add_rec_funs_to_model","command collaborator"
"context","boundary","context::is_watching_clause","predicate controller"
"context","boundary","context::check_clause","predicate collaborator"
"context","boundary","context::check_clauses","predicate collaborator"
"context","boundary","context::check_watch_list","predicate controller"
"context","boundary","context::check_watch_list","predicate"
"context","boundary","context::check_bin_watch_lists","predicate collaborator"
"context","boundary","context::check_enode","predicate collaborator"
"context","boundary","context::check_enodes","predicate collaborator"
"context","boundary","context::check_invariant","predicate"
"context","boundary","context::check_missing_clause_propagation","predicate collaborator"
"context","boundary","context::check_missing_bin_clause_propagation","predicate collaborator"
"context","boundary","context::check_missing_eq_propagation","predicate collaborator"
"context","boundary","context::check_missing_congruence","predicate controller"
"context","boundary","context::check_missing_bool_enode_propagation","predicate collaborator"
"context","boundary","context::check_missing_propagation","predicate"
"context","boundary","context::check_relevancy","predicate collaborator"
"context","boundary","context::check_relevancy","predicate collaborator"
"context","boundary","context::check_eqc_bool_assignment","predicate collaborator"
"context","boundary","context::check_bool_var_vector_sizes","predicate"
"context","boundary","context::check_th_diseq_propagation","predicate collaborator"
"context","boundary","context::check_missing_diseq_conflict","predicate controller"
"context","boundary","context::validate_justification","predicate controller"
"context","boundary","context::validate_model","predicate non-void-command collaborator"
"context","boundary","context::validate_unsat_core","command collaborator"
"context","boundary","context::display_last_failure","property collaborator"
"context","boundary","context::last_failure_as_string","property controller"
"context","boundary","context::display_asserted_formulas","collaborator"
"context","boundary","context::display_literal","controller stateless"
"context","boundary","context::display_literals","controller stateless"
"context","boundary","context::display_literal_verbose","property collaborator"
"context","boundary","context::display_literals_verbose","property controller"
"context","boundary","context::display_literal_smt2","property collaborator"
"context","boundary","context::display_literals_smt2","property collaborator"
"context","boundary","context::display_literal_info","collaborator"
"context","boundary","context::display_watch_list","collaborator"
"context","boundary","context::display_watch_lists","collaborator"
"context","boundary","context::display_enode_defs","collaborator"
"context","boundary","context::display_bool_var_defs","collaborator"
"context","boundary","context::display_clause_detail","property collaborator"
"context","boundary","context::display_clause","property controller"
"context","boundary","context::display_clause_smt2","property collaborator"
"context","boundary","context::display_clauses","collaborator incidental"
"context","boundary","context::display_binary_clauses","property controller"
"context","boundary","context::display_assignment","collaborator"
"context","boundary","context::display_assignment_as_smtlib2","collaborator"
"context","boundary","context::display_eqc","collaborator"
"context","boundary","context::display_app_enode_map","collaborator"
"context","boundary","context::display_expr_bool_var_map","collaborator"
"context","boundary","context::display_hot_bool_vars","collaborator"
"context","boundary","context::display_relevant_exprs","collaborator"
"context","boundary","context::display_theories","controller"
"context","boundary","context::display","collaborator"
"context","boundary","context::display_eq_detail","collaborator"
"context","boundary","context::display_parent_eqs","collaborator"
"context","boundary","context::display_unsat_core","wrapper"
"context","boundary","context::collect_statistics","collaborator"
"context","boundary","context::display_statistics","collaborator"
"context","boundary","context::display_istatistics","collaborator"
"context","boundary","context::display_lemma_as_smt_problem","collaborator"
"context","boundary","context::display_lemma_as_smt_problem","get collaborator"
"context","boundary","context::display_lemma_as_smt_problem","collaborator"
"context","boundary","context::mk_lemma_name","property set collaborator"
"context","boundary","context::display_lemma_as_smt_problem","get collaborator"
"context","boundary","context::display_normalized_enodes","collaborator"
"context","boundary","context::display_enodes_lbls","controller"
"context","boundary","context::display_decl2enodes","controller"
"context","boundary","context::display_subexprs_info","collaborator"
"context","boundary","context::display","property collaborator"
"context","boundary","context::display_compact_j","property controller"
"context","boundary","context::trace_assign","collaborator"
"context","boundary","context::log_stats","get command"
"context","boundary","context::get_lemma_avg_activity","collaborator"
"context","boundary","context::display_literal_num_occs","collaborator"
"context","boundary","context::display_num_assigned_literals_per_lvl","collaborator"
"context","boundary","context::display_var_occs_histogram","collaborator"
"context","boundary","context::display_num_min_occs","collaborator"
"context","boundary","context::display_profile_res_sub","collaborator"
"context","boundary","context::display_profile","collaborator"
"context","boundary","context::ts_visit_child","void-accessor controller"
"context","boundary","context::ts_visit_children","predicate non-void-command collaborator"
"context","boundary","context::top_sort_expr","command collaborator"
"context","boundary","context::should_internalize_rec","predicate collaborator"
"context","boundary","context::internalize_deep","command collaborator"
"context","boundary","context::internalize_deep","command collaborator"
"context","boundary","context::internalize_assertion","command collaborator"
"context","boundary","context::assert_default","command collaborator"
"context","boundary","context::assert_distinct","command collaborator"
"context","boundary","context::internalize","set collaborator"
"context","boundary","context::ensure_internalized","command collaborator"
"context","boundary","context::internalize","command"
"context","boundary","context::internalize","command"
"context","boundary","context::internalize_rec","command"
"context","boundary","context::internalize_formula","command collaborator"
"context","boundary","context::internalize_eq","command collaborator"
"context","boundary","context::internalize_distinct","command collaborator"
"context","boundary","context::internalize_theory_atom","predicate non-void-command collaborator"
"context","boundary","context::internalize_quantifier","command collaborator"
"context","boundary","context::internalize_lambda","command collaborator"
"context","boundary","context::has_lambda","predicate non-void-command collaborator"
"context","boundary","context::internalize_formula_core","command"
"context","boundary","context::set_merge_tf","void-accessor command collaborator"
"context","boundary","context::set_enode_flag","command collaborator"
"context","boundary","context::internalize_term","command collaborator"
"context","boundary","context::internalize_ite_term","command collaborator"
"context","boundary","context::internalize_theory_term","predicate non-void-command collaborator"
"context","boundary","context::internalize_uninterpreted","command collaborator"
"context","boundary","context::mk_bool_var","property non-void-command collaborator"
"context","boundary","context::undo_mk_bool_var","command collaborator"
"context","boundary","context::mk_enode","property non-void-command collaborator"
"context","boundary","context::undo_mk_lambda","command collaborator"
"context","boundary","context::undo_mk_enode","command"
"context","boundary","context::apply_sort_cnstr","command collaborator"
"context","boundary","context::get_literal","property collaborator"
"context","boundary","context::simplify_aux_clause_literals","predicate non-void-command collaborator"
"context","boundary","context::simplify_aux_lemma_literals","predicate non-void-command collaborator"
"context","boundary","context::mark_for_reinit","void-accessor command"
"context","boundary","context::get_max_iscope_lvl","collaborator"
"context","boundary","context::use_binary_clause_opt","predicate"
"context","boundary","context::select_learned_watch_lit","property collaborator"
"context","boundary","context::select_watch_lit","property collaborator"
"context","boundary","context::add_watch_literal","command collaborator"
"context","boundary","context::mk_clause","property non-void-command collaborator"
"context","boundary","context::dump_axiom","command collaborator"
"context","boundary","context::dump_lemma","command collaborator"
"context","boundary","context::mk_clause","command collaborator"
"context","boundary","context::mk_clause","command collaborator"
"context","boundary","context::mk_th_clause","command collaborator"
"context","boundary","context::mk_th_axiom","command collaborator"
"context","boundary","context::mk_th_axiom","command collaborator"
"context","boundary","context::mk_clause_def_axiom","property non-void-command collaborator"
"context","boundary","context::mk_gate_clause","command collaborator"
"context","boundary","context::mk_gate_clause","command collaborator"
"context","boundary","context::mk_gate_clause","command collaborator"
"context","boundary","context::mk_gate_clause","command collaborator"
"context","boundary","context::mk_root_clause","void-accessor command collaborator"
"context","boundary","context::mk_root_clause","command collaborator"
"context","boundary","context::mk_root_clause","command collaborator"
"context","boundary","context::add_and_rel_watches","command collaborator"
"context","boundary","context::add_or_rel_watches","command collaborator"
"context","boundary","context::add_ite_rel_watches","command collaborator"
"context","boundary","context::mk_not_cnstr","command collaborator"
"context","boundary","context::mk_and_cnstr","command collaborator"
"context","boundary","context::mk_or_cnstr","command collaborator"
"context","boundary","context::mk_iff_cnstr","command collaborator"
"context","boundary","context::mk_ite_cnstr","command collaborator"
"context","boundary","context::attach_th_var","command collaborator"
"env","boundary","mk_error","controller stateless"
"env","boundary","mk_not_handled","controller stateless"
"env","boundary","mk_input","command collaborator"
"env","boundary","mk_annotated_formula","command collaborator"
"env","boundary","check_arity","wrapper stateless"
"env","boundary","mk_include","command collaborator"
"env","boundary","get_name","property non-void-command collaborator"
"env","boundary","mk_forall","property non-void-command collaborator"
"env","boundary","mk_quantifier","property controller"
"env","boundary","cnf_annotated","command collaborator"
"env","boundary","cnf_formula","void-accessor command collaborator"
"env","boundary","disjunction","command collaborator"
"env","boundary","literal","void-accessor command collaborator"
"env","boundary","fof_annotated","command collaborator"
"env","boundary","fof_formula","void-accessor command collaborator"
"env","boundary","is_ttype","predicate non-void-command collaborator"
"env","boundary","fof_quantified_formula","void-accessor command collaborator"
"env","boundary","mk_variable_list","void-accessor command collaborator"
"env","boundary","mk_sort","void-accessor command collaborator"
"env","boundary","mk_mapping_sort","command collaborator"
"env","boundary","mk_xprod_sort","command collaborator"
"env","boundary","term","void-accessor command collaborator"
"env","boundary","apply_term","void-accessor command collaborator"
"env","boundary","to_int","controller stateless"
"env","boundary","to_real","controller stateless"
"env","boundary","ceiling","property non-void-command collaborator"
"env","boundary","is_even","controller stateless"
"env","boundary","truncate","property non-void-command collaborator"
"env","boundary","check_app","controller stateless"
"env","boundary","mk_args","void-accessor command collaborator"
"env","boundary","find_bound","predicate non-void-command collaborator"
"env","boundary","mk_id","void-accessor command"
"env","boundary","mk_let","command collaborator"
"env","boundary","open_file","wrapper stateless"
"env","boundary","is_sep","incidental"
"env","boundary","add_separator","void-accessor command"
"env","boundary","append_rel_name","command"
"env","boundary","mk_filename","predicate non-void-command"
"env","boundary","file_exists","predicate non-void-command collaborator"
"env","boundary","mk_env_filename","predicate non-void-command"
"env","boundary","get_cnf_variables","void-accessor command collaborator"
"env","boundary","symbol","property non-void-command collaborator"
"env","boundary","mk_sort","property non-void-command collaborator"
"env","boundary","mk_sort","property non-void-command collaborator"
"env","boundary","env","constructor"
"env","boundary","~env","destructor"
"env","boundary","env::parse","command collaborator"
"relation_plugin","data-provider","relation_plugin","constructor"
"relation_plugin","data-provider","from_table","predicate"
"relation_plugin","data-provider","is_finite_product_relation","predicate"
"relation_plugin","data-provider","is_product_relation","predicate"
"relation_plugin","data-provider","is_sieve_relation","predicate"
"relation_plugin","data-provider","is_singleton_relation","incidental"
"Z3_tactic_ref","empty","Z3_tactic_ref","constructor"
"user_propagator_created_maximisation","minimal-entity commander boundary","user_propagator_created_maximisation","copy-constructor"
"user_propagator_created_maximisation","minimal-entity commander boundary","user_propagator_created_maximisation","constructor"
"user_propagator_created_maximisation","minimal-entity commander boundary","~user_propagator_created_maximisation","destructor"
"user_propagator_created_maximisation","minimal-entity commander boundary","push","command"
"user_propagator_created_maximisation","minimal-entity commander boundary","pop","command collaborator"
"user_propagator_created_maximisation","minimal-entity commander boundary","checkValidPlacement","command collaborator"
"user_propagator_created_maximisation","minimal-entity commander boundary","getValues","collaborator"
"user_propagator_created_maximisation","minimal-entity commander boundary","fresh","get set factory collaborator"
"user_propagator_created_maximisation","minimal-entity commander boundary","fixed","command collaborator"
"user_propagator_created_maximisation","minimal-entity commander boundary","created","command collaborator"
"char_factory","entity boundary","char_factory","constructor"
"char_factory","entity boundary","get_some_value","property non-void-command collaborator"
"char_factory","entity boundary","get_some_values","predicate non-void-command collaborator"
"char_factory","entity boundary","get_fresh_value","property non-void-command collaborator"
"char_factory","entity boundary","register_value","command collaborator"
"char_factory","entity boundary","register_value","command"
"char_factory","entity boundary","add_trail","command collaborator"
"expr_rand","entity commander boundary","seed","set"
"expr_rand","entity commander boundary","expr_rand::expr_rand","constructor"
"expr_rand","entity commander boundary","expr_rand::~expr_rand","destructor"
"expr_rand","entity commander boundary","expr_rand::add_var","command collaborator"
"expr_rand","entity commander boundary","expr_rand::add_func_decl","command collaborator"
"expr_rand","entity commander boundary","expr_rand::add_expr","command collaborator"
"expr_rand","entity commander boundary","expr_rand::get_next","void-accessor command collaborator"
"expr_rand","entity commander boundary","expr_rand::walk","command collaborator"
"expr_rand","entity commander boundary","expr_rand::walk","command"
"expr_rand","entity commander boundary","expr_rand::choose_func_decl","get non-void-command collaborator"
"expr_rand","entity commander boundary","expr_rand::choose_expr","property non-void-command collaborator"
"expr_rand","entity commander boundary","expr_rand::initialize_arith","command"
"expr_rand","entity commander boundary","expr_rand::initialize_bv","command collaborator"
"expr_rand","entity commander boundary","expr_rand::initialize_array","command collaborator"
"expr_rand","entity commander boundary","expr_rand::initialize_basic","command collaborator"
"mk_simplified_app::imp","entity boundary small-class","mk_core","property non-void-command collaborator"
"eliminate_predicates","commander boundary","~eliminate_predicates","destructor"
"eliminate_predicates","commander boundary","name","incidental"
"eliminate_predicates","commander boundary","collect_statistics","controller"
"eliminate_predicates","commander boundary","reset_statistics","command"
"eliminate_predicates","commander boundary","eliminate_predicates::eliminate_predicates","constructor"
"eliminate_predicates","commander boundary","eliminate_predicates::add_use_list","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::can_be_macro_head","predicate non-void-command"
"eliminate_predicates","commander boundary","eliminate_predicates::can_be_quasi_macro_head","predicate non-void-command"
"eliminate_predicates","commander boundary","eliminate_predicates::insert_quasi_macro","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::bind_free_variables_in_def","property non-void-command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::try_find_binary_definition","predicate non-void-command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::is_macro_safe","predicate non-void-command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::insert_macro","void-accessor command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::insert_macro","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::try_find_macro","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::find_definitions","command"
"eliminate_predicates","commander boundary","eliminate_predicates::rewrite","wrapper"
"eliminate_predicates","commander boundary","eliminate_predicates::reduce_definitions","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::try_resolve","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::update_model","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::create_residue_formula","property non-void-command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::resolve","property non-void-command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::try_resolve","command"
"eliminate_predicates","commander boundary","eliminate_predicates::process_to_exclude","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::init_clause","property non-void-command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::init_clause","property non-void-command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::init_clauses","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::init_surjective","controller stateless"
"eliminate_predicates","commander boundary","eliminate_predicates::init_injective","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::decompile","command collaborator"
"eliminate_predicates","commander boundary","eliminate_predicates::reset","command"
"eliminate_predicates","commander boundary","eliminate_predicates::reduce","command"
"dfs_state","unclassified","re_init","command"
"dfs_state","unclassified","add_size","set"
"dfs_state","unclassified","get_size","get"
"dfs_state","unclassified","contains","predicate collaborator"
"boogie_proof","commander boundary","boogie_proof::set_proof","set collaborator"
"boogie_proof","commander boundary","boogie_proof::set_model","set collaborator"
"boogie_proof","commander boundary","boogie_proof::pp","command collaborator"
"boogie_proof","commander boundary","boogie_proof::pp_proof","command collaborator"
"boogie_proof","commander boundary","boogie_proof::get_subst","command collaborator"
"boogie_proof","commander boundary","boogie_proof::get_rule_name","empty"
"boogie_proof","commander boundary","boogie_proof::get_labels","empty"
"boogie_proof","commander boundary","boogie_proof::pp_steps","command collaborator"
"boogie_proof","commander boundary","boogie_proof::pp_step","command collaborator"
"boogie_proof","commander boundary","boogie_proof::pp_fact","wrapper"
"boogie_proof","commander boundary","boogie_proof::pp_subst","command collaborator"
"boogie_proof","commander boundary","boogie_proof::pp_assignment","wrapper"
"boogie_proof","commander boundary","boogie_proof::pp_labels","controller stateless"
"boogie_proof","commander boundary","boogie_proof::pp_premises","controller stateless"
"expr_delta","entity boundary","expr_delta::expr_delta","constructor"
"expr_delta","entity boundary","expr_delta::assert_cnstr","command collaborator"
"expr_delta","entity boundary","expr_delta::delta_dfs","predicate non-void-command collaborator"
"expr_delta","entity boundary","expr_delta::delta_dfs","predicate non-void-command collaborator"
"expr_delta","entity boundary","expr_delta::delta_dfs","predicate non-void-command collaborator"
"expr_delta","entity boundary","expr_delta::delta_dfs","predicate non-void-command collaborator"
"scoped_set_replay","empty","scoped_set_replay","constructor"
"scoped_set_replay","empty","~scoped_set_replay","destructor"
"ast_pp_util","commander boundary","ast_pp_util","constructor"
"ast_pp_util","commander boundary","env","get collaborator"
"ast_pp_util","commander boundary","ast_pp_util::collect","command collaborator"
"ast_pp_util","commander boundary","ast_pp_util::collect","command collaborator"
"ast_pp_util","commander boundary","ast_pp_util::collect","command collaborator"
"ast_pp_util","commander boundary","ast_pp_util::display_decls","command collaborator"
"ast_pp_util","commander boundary","ast_pp_util::reset","command"
"ast_pp_util","commander boundary","ast_pp_util::display_skolem_decls","command collaborator"
"ast_pp_util","commander boundary","ast_pp_util::remove_decl","command collaborator"
"ast_pp_util","commander boundary","ast_pp_util::display_expr","property controller"
"ast_pp_util","commander boundary","ast_pp_util::display_assert","command"
"ast_pp_util","commander boundary","ast_pp_util::display_assert_and_track","controller"
"ast_pp_util","commander boundary","ast_pp_util::display_asserts","controller"
"ast_pp_util","commander boundary","ast_pp_util::push","command"
"ast_pp_util","commander boundary","ast_pp_util::pop","command"
"ast_pp_util","commander boundary","ast_pp_util::display_expr_def","property controller"
"ast_pp_util","commander boundary","ast_pp_util::define_expr","property non-void-command collaborator"
"sparse_matrix","boundary","row_begin","property controller"
"sparse_matrix","boundary","row_end","property controller"
"sparse_matrix","boundary","get_row","property wrapper"
"sparse_matrix","boundary","column_size","get wrapper"
"sparse_matrix","boundary","num_vars","unclassified"
"sparse_matrix","boundary","num_rows","unclassified"
"sparse_matrix","boundary","col_begin","property wrapper"
"sparse_matrix","boundary","col_end","property wrapper"
"sparse_matrix","boundary","get_col","property wrapper"
"sparse_matrix","boundary","get_rows","property wrapper"
"sparse_matrix","boundary","get_rows","property wrapper"
"sparse_matrix","boundary","get_coeff","get property non-void-command collaborator"
"sparse_matrix","boundary","get_manager","get collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::~sparse_matrix","destructor"
"sparse_matrix","boundary","sparse_matrix<Ext>::reset_rows","command"
"sparse_matrix","boundary","sparse_matrix<Ext>::reset","command"
"sparse_matrix","boundary","sparse_matrix<Ext>::ensure_var","command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::mk_row","property non-void-command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::add_var","command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::add","command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::del_row_entry","controller"
"sparse_matrix","boundary","sparse_matrix<Ext>::neg","command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::mul","command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::div","command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::del","command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::gcd_normalize","void-accessor command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::well_formed","predicate"
"sparse_matrix","boundary","sparse_matrix<Ext>::well_formed_row","predicate controller"
"sparse_matrix","boundary","sparse_matrix<Ext>::well_formed_column","predicate controller"
"sparse_matrix","boundary","sparse_matrix<Ext>::collect_statistics","controller"
"sparse_matrix","boundary","sparse_matrix<Ext>::display","command collaborator"
"sparse_matrix","boundary","sparse_matrix<Ext>::display_row","command collaborator"
"undo_bound","empty","undo_bound","constructor"
"quantifier_macro_info","entity data-provider boundary","is_auf","get"
"quantifier_macro_info","entity data-provider boundary","get_flat_q","get collaborator"
"quantifier_macro_info","entity data-provider boundary","has_cond_macros","predicate"
"quantifier_macro_info","entity data-provider boundary","macros","get collaborator"
"quantifier_macro_info","entity data-provider boundary","set_the_one","set collaborator"
"quantifier_macro_info","entity data-provider boundary","get_the_one","get collaborator"
"quantifier_macro_info","entity data-provider boundary","contains_ng_decl","predicate collaborator"
"quantifier_macro_info","entity data-provider boundary","get_ng_decls","get collaborator"
"quantifier_macro_info","entity data-provider boundary","reset_the_one","set"
"quantifier_macro_info","entity data-provider boundary","insert_macro","command collaborator"
"quantifier_macro_info","entity data-provider boundary","quantifier_macro_info::quantifier_macro_info","constructor"
"quantifier_macro_info","entity data-provider boundary","quantifier_macro_info::collect_macro_candidates","command collaborator"
"quantifier_macro_info","entity data-provider boundary","quantifier_macro_info::unary_function_fragment","predicate collaborator"
"quantifier_macro_info","entity data-provider boundary","quantifier_macro_info::display","property collaborator"
"expr_delta_pair","data-provider small-class","expr_delta_pair","constructor"
"expr_delta_pair","data-provider small-class","expr_delta_pair","constructor"
"expr_delta_pair","data-provider small-class","hash","unclassified"
"expr_delta_pair","data-provider small-class","operator==","predicate"
"decimal_pp","empty","decimal_pp","constructor"
"decimal_pp","empty","decimal_pp","constructor"
"parameter","data-provider boundary","ctx","property collaborator"
"parameter","data-provider boundary","check_error","unclassified"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","kind","get collaborator"
"parameter","data-provider boundary","get_expr","property collaborator"
"parameter","data-provider boundary","get_sort","property collaborator"
"parameter","data-provider boundary","get_decl","property collaborator"
"parameter","data-provider boundary","get_symbol","property collaborator"
"parameter","data-provider boundary","get_rational","property collaborator"
"parameter","data-provider boundary","get_double","property"
"parameter","data-provider boundary","get_int","property"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","constructor"
"parameter","data-provider boundary","parameter","copy-constructor"
"parameter","data-provider boundary","operator=","get wrapper"
"parameter","data-provider boundary","get_kind","property collaborator"
"parameter","data-provider boundary","is_int","predicate"
"parameter","data-provider boundary","is_ast","predicate"
"parameter","data-provider boundary","is_symbol","predicate"
"parameter","data-provider boundary","is_rational","predicate"
"parameter","data-provider boundary","is_double","predicate"
"parameter","data-provider boundary","is_external","predicate"
"parameter","data-provider boundary","is_zstring","predicate"
"parameter","data-provider boundary","is_int","predicate"
"parameter","data-provider boundary","is_ast","predicate collaborator"
"parameter","data-provider boundary","is_symbol","predicate collaborator"
"parameter","data-provider boundary","is_rational","predicate collaborator"
"parameter","data-provider boundary","is_double","predicate"
"parameter","data-provider boundary","is_external","predicate"
"parameter","data-provider boundary","is_zstring","predicate collaborator"
"parameter","data-provider boundary","get_int","property"
"parameter","data-provider boundary","get_ast","property collaborator"
"parameter","data-provider boundary","get_symbol","property collaborator"
"parameter","data-provider boundary","get_rational","property collaborator"
"parameter","data-provider boundary","get_zstring","property collaborator"
"parameter","data-provider boundary","get_double","property"
"parameter","data-provider boundary","get_ext_id","unclassified"
"parameter","data-provider boundary","operator!=","predicate"
"parameter","data-provider boundary","parameter::~parameter","destructor"
"parameter","data-provider boundary","parameter::parameter","copy-constructor"
"parameter","data-provider boundary","parameter::init_eh","command collaborator"
"parameter","data-provider boundary","parameter::del_eh","command collaborator"
"parameter","data-provider boundary","parameter::operator==","predicate"
"parameter","data-provider boundary","parameter::hash","unclassified"
"parameter","data-provider boundary","parameter::display","property collaborator"
"cact_case_split_queue","commander","cact_case_split_queue","constructor"
"cact_case_split_queue","commander","mk_var_eh","command collaborator"
"cact_case_split_queue","commander","del_var_eh","command collaborator"
"cact_case_split_queue","commander","init_search_eh","command"
"cact_case_split_queue","commander","end_search_eh","empty"
"cact_case_split_queue","commander","reset","command"
"status","data-provider","status","constructor"
"status","data-provider","status","copy-constructor"
"status","data-provider","status","copy-constructor"
"status","data-provider","operator=","get non-void-command"
"status","data-provider","is_input","predicate"
"status","data-provider","is_redundant","predicate"
"status","data-provider","is_asserted","predicate"
"status","data-provider","is_deleted","predicate"
"status","data-provider","get_hint","get collaborator"
"status","data-provider","is_sat","predicate"
"status","data-provider","get_th","get"
"label_decl_plugin","entity boundary","mk_fresh","wrapper stateless"
"label_decl_plugin","entity boundary","label_decl_plugin::label_decl_plugin","constructor"
"label_decl_plugin","entity boundary","label_decl_plugin::set_manager","command collaborator"
"label_decl_plugin","entity boundary","label_decl_plugin::mk_sort","wrapper stateless"
"label_decl_plugin","entity boundary","label_decl_plugin::mk_func_decl","property non-void-command collaborator"
"Z3_solver_ref","commander boundary","Z3_solver_ref","constructor"
"Z3_solver_ref","commander boundary","Z3_solver_ref","constructor"
"Z3_solver_ref","commander boundary","Z3_solver_ref::set_eh","set collaborator"
"Z3_solver_ref","commander boundary","Z3_solver_ref::set_cancel","wrapper"
"Z3_solver_ref","commander boundary","Z3_solver_ref::assert_expr","command collaborator"
"Z3_solver_ref","commander boundary","Z3_solver_ref::assert_expr","command collaborator"
"table_relation_plugin::tr_mutator_fn","pure-controller degenerate small-class","operator()","controller stateless"
"scanner","unclassified","curr","get"
"scanner","unclassified","new_line","command"
"scanner","unclassified","get_line","get"
"scanner","unclassified","get_pos","get"
"scanner","unclassified","get_id","get collaborator"
"scanner","unclassified","get_number","get collaborator"
"scanner","unclassified","get_bv_size","get"
"scanner","unclassified","get_string","property"
"scanner","unclassified","start_caching","set"
"scanner","unclassified","stop_caching","set"
"scanner","unclassified","cache_size","unclassified"
"scanner","unclassified","reset_cache","command"
"scanner","unclassified","get_line","get"
"scanner","unclassified","get_pos","get"
"scanner","unclassified","get_id","get collaborator"
"scanner","unclassified","get_number","get collaborator"
"scanner","unclassified","get_bv_size","get"
"scanner","unclassified","get_params","get collaborator"
"scanner","unclassified","scanner::next","command"
"scanner","unclassified","scanner::read_comment","command"
"scanner","unclassified","scanner::read_multiline_comment","command"
"scanner","unclassified","scanner::read_quoted_symbol","property non-void-command collaborator"
"scanner","unclassified","scanner::read_symbol_core","property non-void-command collaborator"
"scanner","unclassified","scanner::read_symbol","property non-void-command collaborator"
"scanner","unclassified","scanner::read_number","property non-void-command collaborator"
"scanner","unclassified","scanner::read_signed_number","property non-void-command collaborator"
"scanner","unclassified","scanner::read_string","property non-void-command collaborator"
"scanner","unclassified","scanner::read_bv_literal","property non-void-command collaborator"
"scanner","unclassified","scanner::scanner","constructor"
"scanner","unclassified","scanner::scan","property non-void-command collaborator"
"scanner","unclassified","scanner::cached_str","property non-void-command"
"scanner","unclassified","scanner::reset_input","command"
"scanner","unclassified","scanner::read_char","get property non-void-command"
"scanner","unclassified","scanner::unread_char","command"
"scanner","unclassified","scanner::state_ok","predicate"
"scanner","unclassified","scanner::comment","command"
"scanner","unclassified","scanner::read_symbol","property non-void-command collaborator"
"scanner","unclassified","scanner::read_id","get property non-void-command collaborator"
"scanner","unclassified","scanner::read_params","predicate non-void-command"
"scanner","unclassified","scanner::read_number","get non-void-command collaborator"
"scanner","unclassified","scanner::read_string","get property non-void-command collaborator"
"scanner","unclassified","scanner::read_bv_literal","get non-void-command collaborator"
"scanner","unclassified","scanner::scanner","constructor"
"scanner","unclassified","scanner::scan","get property non-void-command collaborator"
"eframe","empty","eframe","constructor"
"tactic_manager","boundary","num_tactics","unclassified"
"tactic_manager","boundary","num_probes","unclassified"
"tactic_manager","boundary","num_simplifiers","unclassified"
"tactic_manager","boundary","get_tactic","get collaborator"
"tactic_manager","boundary","get_probe","get collaborator"
"tactic_manager","boundary","get_simplifier","get collaborator"
"tactic_manager","boundary","simplifiers","get collaborator"
"tactic_manager","boundary","tactics","get collaborator"
"tactic_manager","boundary","probes","get collaborator"
"tactic_manager","boundary","tactic_manager::~tactic_manager","destructor"
"tactic_manager","boundary","tactic_manager::finalize_tactic_manager","command"
"tactic_manager","boundary","tactic_manager::insert","command collaborator"
"tactic_manager","boundary","tactic_manager::insert","command collaborator"
"tactic_manager","boundary","tactic_manager::insert","command collaborator"
"tactic_manager","boundary","tactic_manager::find_tactic_cmd","controller stateless"
"tactic_manager","boundary","tactic_manager::find_simplifier_cmd","controller stateless"
"tactic_manager","boundary","tactic_manager::find_probe","controller stateless"
"bv_bounds","entity boundary","bv_bounds","constructor"
"bv_bounds","entity boundary","singletons","get collaborator"
"bv_bounds","entity boundary","bvu","get collaborator"
"bv_bounds","entity boundary","bv_bounds::~bv_bounds","destructor"
"bv_bounds","entity boundary","bv_bounds::record","property non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::is_uleq","predicate non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::convert","property non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::reset","command collaborator"
"bv_bounds","entity boundary","bv_bounds::rewrite","property non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::add_constraint","get predicate non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::add_bound_unsigned","get predicate non-void-command"
"bv_bounds","entity boundary","bv_bounds::convert_signed","property non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::add_bound_signed","predicate non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::bound_lo","get non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::bound_up","get non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::add_neg_bound","get non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::is_sat","predicate non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::record_singleton","command collaborator"
"bv_bounds","entity boundary","bv_bounds::is_sat","predicate non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::is_sat_core","predicate non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::is_okay","get"
"bv_bounds","entity boundary","bv_bounds::to_bound","predicate collaborator"
"bv_bounds","entity boundary","bv_bounds::in_range","predicate non-void-command collaborator"
"bv_bounds","entity boundary","bv_bounds::is_constant_add","predicate non-void-command collaborator"
"model::top_sort","commander boundary small-class","add_occurs","command collaborator"
"model::top_sort","commander boundary small-class","occur_count","collaborator"
"FuncDecl","degenerate","Equals","property collaborator"
"FuncDecl","degenerate","GetHashCode","controller stateless"
"FuncDecl","degenerate","ToString","controller stateless"
"elim_eqs","entity commander boundary","elim_eqs::elim_eqs","constructor"
"elim_eqs","entity commander boundary","elim_eqs::~elim_eqs","destructor"
"elim_eqs","entity commander boundary","elim_eqs::cleanup_bin_watches","command collaborator"
"elim_eqs","entity commander boundary","elim_eqs::drat_delete_clause","command"
"elim_eqs","entity commander boundary","elim_eqs::cleanup_clauses","command collaborator"
"elim_eqs","entity commander boundary","elim_eqs::save_elim","command collaborator"
"elim_eqs","entity commander boundary","elim_eqs::check_clause","predicate collaborator"
"elim_eqs","entity commander boundary","elim_eqs::check_clauses","predicate collaborator"
"elim_eqs","entity commander boundary","elim_eqs::operator()","command collaborator"
"elim_eqs","entity commander boundary","elim_eqs::operator()","command collaborator"
"hash<simple_model>","pure-controller degenerate small-class","operator()","controller stateless"
"OnClause","commander small-class","OnClause","copy-constructor"
"OnClause","commander small-class","~OnClause","destructor"
"OnClause","commander small-class","Dispose","command"
"blaster","data-provider boundary data-class small-class","blaster","constructor"
"blaster","data-provider boundary data-class small-class","butil","get collaborator"
"Model","unclassified","ConstInterp","property non-void-command collaborator"
"Model","unclassified","ConstInterp","controller stateless"
"Model","unclassified","FuncInterp","property non-void-command factory collaborator"
"lp_parse","unclassified","parse","command"
"lp_parse","unclassified","error","command collaborator"
"lp_parse","unclassified","peek","property non-void-command collaborator"
"lp_parse","unclassified","try_accept","predicate non-void-command"
"lp_parse","unclassified","parse_objective","command"
"lp_parse","unclassified","minmax","predicate non-void-command"
"lp_parse","unclassified","parse_constraint","command collaborator"
"lp_parse","unclassified","parse_expr","command collaborator"
"lp_parse","unclassified","parse_term","property non-void-command collaborator"
"lp_parse","unclassified","parse_relation","property non-void-command collaborator"
"lp_parse","unclassified","peek_le","predicate non-void-command"
"lp_parse","unclassified","peek_minus_infty_long","predicate non-void-command"
"lp_parse","unclassified","peek_minus_infty_short","predicate non-void-command"
"lp_parse","unclassified","peek_plus_infty_long","predicate non-void-command"
"lp_parse","unclassified","peek_plus_infty_short","predicate non-void-command"
"lp_parse","unclassified","parse_indicator","void-accessor command collaborator"
"lp_parse","unclassified","try_subject_to","predicate non-void-command"
"lp_parse","unclassified","is_relation","predicate non-void-command"
"lp_parse","unclassified","is_section","predicate non-void-command"
"lp_parse","unclassified","is_bounds","predicate non-void-command"
"lp_parse","unclassified","is_general","predicate non-void-command"
"lp_parse","unclassified","is_binary","predicate non-void-command"
"lp_parse","unclassified","is_end","predicate non-void-command"
"lp_parse","unclassified","parse_bound","command collaborator"
"lp_parse","unclassified","parse_upper","command collaborator"
"lp_parse","unclassified","update_lower","command collaborator"
"lp_parse","unclassified","update_upper","command collaborator"
"lp_parse","unclassified","parse_binary","command collaborator"
"lp_parse","unclassified","parse_general","command collaborator"
"lp_parse","unclassified","post_process","command collaborator"
"lp_parse","unclassified","process_terms","property non-void-command collaborator"
"lp_parse","unclassified","mk_var","property non-void-command collaborator"
"automaton","boundary","clone","property"
"automaton","boundary","add_to_final_states","command"
"automaton","boundary","remove_from_final_states","command"
"automaton","boundary","is_sink_state","predicate collaborator"
"automaton","boundary","add_init_to_final_states","command"
"automaton","boundary","add_final_to_init_moves","command"
"automaton","boundary","compress","command"
"automaton","boundary","is_sequence","predicate"
"automaton","boundary","init","get"
"automaton","boundary","final_states","get collaborator"
"automaton","boundary","in_degree","get wrapper"
"automaton","boundary","out_degree","get wrapper"
"automaton","boundary","get_move_from","get wrapper"
"automaton","boundary","get_move_to","get wrapper"
"automaton","boundary","get_moves_from","get collaborator"
"automaton","boundary","get_moves_to","get collaborator"
"automaton","boundary","initial_state_is_source","get wrapper"
"automaton","boundary","is_final_state","predicate"
"automaton","boundary","is_final_configuration","predicate collaborator"
"automaton","boundary","is_epsilon_free","predicate controller"
"automaton","boundary","all_epsilon_in","predicate controller"
"automaton","boundary","is_empty","predicate"
"automaton","boundary","is_epsilon","predicate"
"automaton","boundary","final_state","get"
"automaton","boundary","has_single_final_sink","predicate"
"automaton","boundary","num_states","unclassified"
"automaton","boundary","is_loop_state","controller stateless"
"automaton","boundary","move_count","controller"
"automaton","boundary","get_epsilon_closure","command collaborator"
"automaton","boundary","get_inv_epsilon_closure","command collaborator"
"automaton","boundary","get_moves_from","unclassified"
"automaton","boundary","get_moves_from_states","collaborator"
"automaton","boundary","get_moves_to","command"
"automaton","boundary","display","property collaborator"
"automaton","boundary","display","property collaborator"
"automaton","boundary","sinkify_dead_states","command"
"automaton","boundary","add","command collaborator"
"automaton","boundary","is_duplicate_cheap","predicate controller"
"automaton","boundary","find_move","controller stateless"
"automaton","boundary","remove","command collaborator"
"automaton","boundary","remove","command collaborator"
"automaton","boundary","remove","controller stateless"
"automaton","boundary","get_moves","unclassified"
"automaton","boundary","get_epsilon_closure","collaborator"
"set_ptr_trail","commander data-class small-class","set_ptr_trail","constructor"
"set_ptr_trail","commander data-class small-class","undo","set"
"theory_pb::psort_expr","entity boundary","fresh","property non-void-command collaborator"
"theory_pb::psort_expr","entity boundary","mk_max","property non-void-command collaborator"
"theory_pb::psort_expr","entity boundary","mk_min","property non-void-command collaborator"
"theory_pb::psort_expr","entity boundary","mk_not","collaborator incidental"
"theory_pb::psort_expr","entity boundary","mk_clause","command collaborator"
"theory_pb::psort_expr","entity boundary","mk_false","collaborator incidental"
"theory_pb::psort_expr","entity boundary","mk_true","collaborator incidental"
"theory_pb::psort_expr","entity boundary","pp","collaborator incidental"
"hilbert_basis::index","entity commander boundary","insert","command collaborator"
"hilbert_basis::index","entity commander boundary","remove","command collaborator"
"hilbert_basis::index","entity commander boundary","find","predicate non-void-command collaborator"
"hilbert_basis::index","entity commander boundary","reset","command collaborator"
"hilbert_basis::index","entity commander boundary","collect_statistics","collaborator"
"hilbert_basis::index","entity commander boundary","reset_statistics","command collaborator"
"hilbert_basis::index","entity commander boundary","display","collaborator"
"hilbert_basis::index","entity commander boundary","size","collaborator"
"object_ref","commander boundary data-class small-class","inc_ref","set collaborator"
"object_ref","commander boundary data-class small-class","dec_ref","set collaborator"
"cut_simplifier::report","empty","~report","destructor"
"is_imm_pred","pure-controller degenerate small-class","is_imm_pred","constructor"
"is_imm_pred","pure-controller degenerate small-class","operator()","controller stateless"
"karr_relation","boundary","empty","get"
"karr_relation","boundary","is_precise","incidental"
"karr_relation","boundary","add_fact","command collaborator"
"karr_relation","boundary","contains_fact","wrapper stateless"
"karr_relation","boundary","display","collaborator"
"karr_relation","boundary","clone","property controller"
"karr_relation","boundary","complement","wrapper stateless"
"karr_relation","boundary","to_formula","void-accessor collaborator"
"karr_relation","boundary","get_plugin","get collaborator"
"karr_relation","boundary","filter_interpreted","command collaborator"
"karr_relation","boundary","mk_join","command collaborator"
"karr_relation","boundary","mk_project","command"
"karr_relation","boundary","mk_rename","command"
"karr_relation","boundary","mk_union","void-accessor command"
"karr_relation","boundary","get_basis","get collaborator"
"karr_relation","boundary","get_basis","get non-void-command collaborator"
"karr_relation","boundary","get_ineqs","get collaborator"
"karr_relation","boundary","get_ineqs","get non-void-command collaborator"
"karr_relation","boundary","copy","command"
"karr_relation","boundary","same_row","controller stateless"
"karr_relation","boundary","mk_rename","controller stateless"
"karr_relation","boundary","is_eq","predicate non-void-command collaborator"
"karr_relation","boundary","is_linear","predicate non-void-command collaborator"
"karr_relation","boundary","init_ineqs","set"
"karr_relation","boundary","init_basis","command"
"karr_relation","boundary","to_formula","collaborator"
"hash<z3::expr>","pure-controller degenerate small-class","operator()","controller stateless"
"atom2bool_var","data-provider boundary","atom2bool_var","constructor"
"atom2bool_var","data-provider boundary","insert","command collaborator"
"atom2bool_var","data-provider boundary","interpreted_atoms","predicate"
"atom2bool_var","data-provider boundary","atom2bool_var::mk_inv","collaborator"
"atom2bool_var","data-provider boundary","atom2bool_var::mk_var_inv","controller"
"atom2bool_var","data-provider boundary","atom2bool_var::to_bool_var","get property collaborator"
"obj_equiv_class","entity boundary","add_elem_impl","non-void-command collaborator"
"obj_equiv_class","entity boundary","add_if_not_there","non-void-command collaborator"
"obj_equiv_class","entity boundary","m","property collaborator"
"obj_equiv_class","entity boundary","add_elem","command collaborator"
"obj_equiv_class","entity boundary","merge","command collaborator"
"obj_equiv_class","entity boundary","reset","command"
"obj_equiv_class","entity boundary","are_equiv","predicate non-void-command collaborator"
"obj_equiv_class","entity boundary","begin","property non-void-command collaborator"
"obj_equiv_class","entity boundary","end","property non-void-command collaborator"
"obj_equiv_class","entity boundary","begin","property wrapper"
"obj_equiv_class","entity boundary","end","property non-void-command collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","controller stateless"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","wrapper stateless"
"proc","commander degenerate","operator()","wrapper stateless"
"proc","commander degenerate","operator()","wrapper stateless"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","set collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","collaborator"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","set collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","wrapper stateless"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","is_numeral","predicate collaborator"
"proc","commander degenerate","is_mul","predicate collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","collaborator"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","command collaborator"
"proc","commander degenerate","proc","copy-constructor"
"proc","commander degenerate","operator()","wrapper stateless"
"proc","commander degenerate","operator()","wrapper stateless"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","copy-constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","controller"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","set collaborator"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","controller"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","set collaborator"
"proc","commander degenerate","proc","constructor"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","empty"
"proc","commander degenerate","operator()","set collaborator"
"finite_product_relation_plugin::converting_union_fn","commander boundary data-class small-class","operator()","set collaborator"
"arith_projection","entity boundary small-class","arith_projection","constructor"
"arith_projection","entity boundary small-class","operator()","predicate wrapper"
"arith_projection","entity boundary small-class","mk_lt","property non-void-command collaborator"
"arith_eq_solver","unclassified","arith_eq_solver::arith_eq_solver","constructor"
"arith_eq_solver","unclassified","arith_eq_solver::is_neg_poly","predicate collaborator"
"arith_eq_solver","unclassified","arith_eq_solver::prop_mod_const","void-accessor command collaborator"
"arith_eq_solver","unclassified","arith_eq_solver::gcd_normalize","controller stateless"
"arith_eq_solver","unclassified","arith_eq_solver::find_abs_min","controller stateless"
"arith_eq_solver","unclassified","arith_eq_solver::gcd_test","controller stateless"
"arith_eq_solver","unclassified","arith_eq_solver::solve_integer_equation","predicate non-void-command collaborator"
"arith_eq_solver","unclassified","arith_eq_solver::substitute","controller stateless"
"arith_eq_solver","unclassified","arith_eq_solver::solve_integer_equations","predicate non-void-command collaborator"
"arith_eq_solver","unclassified","arith_eq_solver::solve_integer_equations_units","predicate non-void-command collaborator"
"arith_eq_solver","unclassified","arith_eq_solver::solve_integer_equations_omega","predicate non-void-command collaborator"
"arith_eq_solver","unclassified","arith_eq_solver::solve_integer_equations_gcd","predicate non-void-command collaborator"
"context_fpoint_wrapper","entity boundary","int2fpoint","command collaborator"
"context_fpoint_wrapper","entity boundary","context_fpoint_wrapper","constructor"
"context_fpoint_wrapper","entity boundary","qm","get collaborator"
"context_fpoint_wrapper","entity boundary","mk_sum","property non-void-command collaborator"
"context_fpoint_wrapper","entity boundary","mk_ineq","property non-void-command collaborator"
"quant_elim_new","entity commander boundary","quant_elim_new","constructor"
"quant_elim_new","entity commander boundary","~quant_elim_new","destructor"
"quant_elim_new","entity commander boundary","reset","command"
"quant_elim_new","entity commander boundary","checkpoint","command"
"quant_elim_new","entity commander boundary","collect_statistics","collaborator"
"quant_elim_new","entity commander boundary","updt_params","set collaborator"
"quant_elim_new","entity commander boundary","eliminate","command collaborator"
"quant_elim_new","entity commander boundary","bind_variables","void-accessor command collaborator"
"quant_elim_new","entity commander boundary","set_assumption","set collaborator"
"quant_elim_new","entity commander boundary","eliminate_exists","property non-void-command collaborator"
"quant_elim_new","entity commander boundary","eliminate_block","property non-void-command collaborator"
"quant_elim_new","entity commander boundary","pop_context","void-accessor command collaborator"
"quant_elim_new","entity commander boundary","push_context","command collaborator"
"quant_elim_new","entity commander boundary","eliminate_exists_bind","command collaborator"
"quant_elim_new","entity commander boundary","eliminate_forall_bind","command collaborator"
"q_proof_hint","controller","q_proof_hint","constructor"
"q_proof_hint","controller","q_proof_hint::mk","non-void-command factory collaborator"
"q_proof_hint","controller","q_proof_hint::mk","non-void-command factory collaborator"
"q_proof_hint","controller","q_proof_hint::get_hint","property controller"
"im_default_config","boundary lazy-class degenerate","round_to_minus_inf","empty"
"im_default_config","boundary lazy-class degenerate","round_to_plus_inf","empty"
"im_default_config","boundary lazy-class degenerate","set_rounding","empty"
"im_default_config","boundary lazy-class degenerate","lower","collaborator incidental"
"im_default_config","boundary lazy-class degenerate","upper","collaborator incidental"
"im_default_config","boundary lazy-class degenerate","lower","collaborator incidental"
"im_default_config","boundary lazy-class degenerate","upper","collaborator incidental"
"im_default_config","boundary lazy-class degenerate","lower_is_open","collaborator incidental"
"im_default_config","boundary lazy-class degenerate","upper_is_open","collaborator incidental"
"im_default_config","boundary lazy-class degenerate","lower_is_inf","collaborator incidental"
"im_default_config","boundary lazy-class degenerate","upper_is_inf","collaborator incidental"
"im_default_config","boundary lazy-class degenerate","set_lower","command collaborator"
"im_default_config","boundary lazy-class degenerate","set_upper","command collaborator"
"im_default_config","boundary lazy-class degenerate","set_lower_is_open","incidental"
"im_default_config","boundary lazy-class degenerate","set_upper_is_open","incidental"
"im_default_config","boundary lazy-class degenerate","set_lower_is_inf","incidental"
"im_default_config","boundary lazy-class degenerate","set_upper_is_inf","incidental"
"im_default_config","boundary lazy-class degenerate","m","get collaborator"
"Probe","pure-controller degenerate small-class","Apply","controller stateless"
"theory_lra::imp","boundary","use_nra_model","predicate"
"theory_lra::imp","boundary","ctx","property collaborator"
"theory_lra::imp","boundary","get_id","property collaborator"
"theory_lra::imp","boundary","params","property collaborator"
"theory_lra::imp","boundary","is_int","predicate collaborator"
"theory_lra::imp","boundary","is_int","predicate collaborator"
"theory_lra::imp","boundary","is_real","predicate collaborator"
"theory_lra::imp","boundary","is_real","predicate collaborator"
"theory_lra::imp","boundary","get_enode","property collaborator"
"theory_lra::imp","boundary","get_enode","property collaborator"
"theory_lra::imp","boundary","get_owner","property collaborator"
"theory_lra::imp","boundary","pp","property collaborator"
"theory_lra::imp","boundary","pp","property collaborator"
"theory_lra::imp","boundary","bpp","property wrapper"
"theory_lra::imp","boundary","add_const","property non-void-command collaborator"
"theory_lra::imp","boundary","get_one","property non-void-command collaborator"
"theory_lra::imp","boundary","get_zero","property non-void-command collaborator"
"theory_lra::imp","boundary","ensure_nla","command collaborator"
"theory_lra::imp","boundary","found_unsupported","command collaborator"
"theory_lra::imp","boundary","found_underspecified","void-accessor command collaborator"
"theory_lra::imp","boundary","linearize_term","command collaborator"
"theory_lra::imp","boundary","linearize_ineq","command collaborator"
"theory_lra::imp","boundary","internalize_numeral","property non-void-command collaborator"
"theory_lra::imp","boundary","linearize","command collaborator"
"theory_lra::imp","boundary","internalize_args","command collaborator"
"theory_lra::imp","boundary","internalize_power","property non-void-command collaborator"
"theory_lra::imp","boundary","internalize_mul","property non-void-command collaborator"
"theory_lra::imp","boundary","mk_enode","property non-void-command collaborator"
"theory_lra::imp","boundary","enable_cgc_for","predicate collaborator"
"theory_lra::imp","boundary","mk_clause","command collaborator"
"theory_lra::imp","boundary","mk_clause","command collaborator"
"theory_lra::imp","boundary","reflect","predicate collaborator"
"theory_lra::imp","boundary","has_var","predicate non-void-command collaborator"
"theory_lra::imp","boundary","reserve_bounds","command collaborator"
"theory_lra::imp","boundary","mk_var","property non-void-command collaborator"
"theory_lra::imp","boundary","has_int","predicate"
"theory_lra::imp","boundary","register_theory_var_in_lar_solver","property non-void-command collaborator"
"theory_lra::imp","boundary","init_left_side","command collaborator"
"theory_lra::imp","boundary","all_zeros","controller stateless"
"theory_lra::imp","boundary","add_eq_constraint","command collaborator"
"theory_lra::imp","boundary","add_ineq_constraint","command collaborator"
"theory_lra::imp","boundary","add_def_constraint","command collaborator"
"theory_lra::imp","boundary","add_def_constraint","command collaborator"
"theory_lra::imp","boundary","is_infeasible","predicate"
"theory_lra::imp","boundary","register_fixed_var","command collaborator"
"theory_lra::imp","boundary","add_def_constraint_and_equality","command collaborator"
"theory_lra::imp","boundary","internalize_eq","command collaborator"
"theory_lra::imp","boundary","del_bounds","command collaborator"
"theory_lra::imp","boundary","updt_unassigned_bounds","set"
"theory_lra::imp","boundary","is_unit_var","controller stateless"
"theory_lra::imp","boundary","internalize_def","property non-void-command collaborator"
"theory_lra::imp","boundary","internalize_def","property non-void-command collaborator"
"theory_lra::imp","boundary","get_lpvar","property non-void-command collaborator"
"theory_lra::imp","boundary","get_lpvar","property non-void-command collaborator"
"theory_lra::imp","boundary","get_lpvar","property collaborator"
"theory_lra::imp","boundary","internalize_linearized_def","property non-void-command collaborator"
"theory_lra::imp","boundary","~imp","destructor"
"theory_lra::imp","boundary","lp","property non-void-command collaborator"
"theory_lra::imp","boundary","lp","property collaborator"
"theory_lra::imp","boundary","init","command"
"theory_lra::imp","boundary","internalize_is_int","command collaborator"
"theory_lra::imp","boundary","internalize_atom","predicate non-void-command collaborator"
"theory_lra::imp","boundary","internalize_term","predicate non-void-command collaborator"
"theory_lra::imp","boundary","is_arith","predicate non-void-command collaborator"
"theory_lra::imp","boundary","internalize_eq_eh","command collaborator"
"theory_lra::imp","boundary","assign_eh","command"
"theory_lra::imp","boundary","get_phase","property non-void-command collaborator"
"theory_lra::imp","boundary","new_eq_eh","command collaborator"
"theory_lra::imp","boundary","use_diseqs","incidental"
"theory_lra::imp","boundary","new_diseq_eh","set collaborator"
"theory_lra::imp","boundary","apply_sort_cnstr","collaborator incidental"
"theory_lra::imp","boundary","push_scope_eh","command collaborator"
"theory_lra::imp","boundary","pop_scope_eh","command"
"theory_lra::imp","boundary","restart_eh","command collaborator"
"theory_lra::imp","boundary","relevant_eh","command collaborator"
"theory_lra::imp","boundary","mk_power_axiom","command collaborator"
"theory_lra::imp","boundary","mk_rem_axiom","command collaborator"
"theory_lra::imp","boundary","mk_div_axiom","command collaborator"
"theory_lra::imp","boundary","mk_to_int_axiom","command collaborator"
"theory_lra::imp","boundary","mk_ite_axiom","command collaborator"
"theory_lra::imp","boundary","mk_is_int_axiom","command collaborator"
"theory_lra::imp","boundary","assert_idiv_mod_axioms","command collaborator"
"theory_lra::imp","boundary","mk_idiv_mod_axioms","command collaborator"
"theory_lra::imp","boundary","mk_axiom","command collaborator"
"theory_lra::imp","boundary","mk_axiom","command collaborator"
"theory_lra::imp","boundary","mk_axiom","command collaborator"
"theory_lra::imp","boundary","mk_literal","property non-void-command collaborator"
"theory_lra::imp","boundary","init_search_eh","set"
"theory_lra::imp","boundary","can_get_value","predicate collaborator"
"theory_lra::imp","boundary","is_registered_var","predicate collaborator"
"theory_lra::imp","boundary","ensure_column","command collaborator"
"theory_lra::imp","boundary","ensure_column","command collaborator"
"theory_lra::imp","boundary","get_ivalue","property collaborator"
"theory_lra::imp","boundary","get_value","property collaborator"
"theory_lra::imp","boundary","init_variable_values","command"
"theory_lra::imp","boundary","random_update","command collaborator"
"theory_lra::imp","boundary","assume_eqs","predicate non-void-command collaborator"
"theory_lra::imp","boundary","delayed_assume_eqs","predicate non-void-command collaborator"
"theory_lra::imp","boundary","is_eq","predicate non-void-command collaborator"
"theory_lra::imp","boundary","has_delayed_constraints","predicate"
"theory_lra::imp","boundary","eval_power","property non-void-command collaborator"
"theory_lra::imp","boundary","eval_unsupported","property non-void-command collaborator"
"theory_lra::imp","boundary","final_check_eh","property non-void-command collaborator"
"theory_lra::imp","boundary","mk_eq","property non-void-command collaborator"
"theory_lra::imp","boundary","mk_bound","property non-void-command collaborator"
"theory_lra::imp","boundary","mk_bound","property non-void-command collaborator"
"theory_lra::imp","boundary","check_idiv_bounds","predicate non-void-command"
"theory_lra::imp","boundary","var2expr","property non-void-command collaborator"
"theory_lra::imp","boundary","multerm","property non-void-command collaborator"
"theory_lra::imp","boundary","term2expr","property non-void-command collaborator"
"theory_lra::imp","boundary","constraint2fml","property non-void-command collaborator"
"theory_lra::imp","boundary","dump_cut_lemma","command collaborator"
"theory_lra::imp","boundary","check_lia","property non-void-command collaborator"
"theory_lra::imp","boundary","mk_literal","property non-void-command collaborator"
"theory_lra::imp","boundary","false_case_of_check_nla","command collaborator"
"theory_lra::imp","boundary","assume_literal","command collaborator"
"theory_lra::imp","boundary","check_nla_continue","property non-void-command collaborator"
"theory_lra::imp","boundary","check_nla","property non-void-command collaborator"
"theory_lra::imp","boundary","is_shared","predicate collaborator"
"theory_lra::imp","boundary","adaptive","predicate"
"theory_lra::imp","boundary","adaptive_assertion_threshold","property"
"theory_lra::imp","boundary","process_atoms","predicate"
"theory_lra::imp","boundary","can_propagate","predicate non-void-command"
"theory_lra::imp","boundary","can_propagate_core","predicate non-void-command"
"theory_lra::imp","boundary","propagate","predicate non-void-command"
"theory_lra::imp","boundary","propagate_core","predicate non-void-command collaborator"
"theory_lra::imp","boundary","propagate_nla","command"
"theory_lra::imp","boundary","add_equality","command collaborator"
"theory_lra::imp","boundary","add_lemmas","command collaborator"
"theory_lra::imp","boundary","should_propagate","predicate"
"theory_lra::imp","boundary","should_refine_bounds","predicate"
"theory_lra::imp","boundary","consume","command collaborator"
"theory_lra::imp","boundary","propagate_bounds_with_lp_solver","command"
"theory_lra::imp","boundary","bound_is_interesting","predicate collaborator"
"theory_lra::imp","boundary","propagate_lp_solver_bound","non-void-command collaborator"
"theory_lra::imp","boundary","refine_bound","command collaborator"
"theory_lra::imp","boundary","add_eq","predicate non-void-command collaborator"
"theory_lra::imp","boundary","assign","command collaborator"
"theory_lra::imp","boundary","is_bound_implied","controller stateless"
"theory_lra::imp","boundary","mk_bound_axioms","command collaborator"
"theory_lra::imp","boundary","mk_bound_axiom","command collaborator"
"theory_lra::imp","boundary","flush_bound_axioms","command collaborator"
"theory_lra::imp","boundary","first","controller stateless"
"theory_lra::imp","boundary","next_inf","controller stateless"
"theory_lra::imp","boundary","next_sup","controller stateless"
"theory_lra::imp","boundary","propagate_bound","command collaborator"
"theory_lra::imp","boundary","add_use_lists","command collaborator"
"theory_lra::imp","boundary","del_use_lists","command collaborator"
"theory_lra::imp","boundary","propagate_bound_compound","command collaborator"
"theory_lra::imp","boundary","get_lub","predicate non-void-command collaborator"
"theory_lra::imp","boundary","get_glb","predicate non-void-command collaborator"
"theory_lra::imp","boundary","display_bound","property non-void-command collaborator"
"theory_lra::imp","boundary","get_bound","predicate non-void-command"
"theory_lra::imp","boundary","bound2constraint_kind","wrapper stateless"
"theory_lra::imp","boundary","assert_bound","predicate non-void-command collaborator"
"theory_lra::imp","boundary","mk_var_bound","property non-void-command collaborator"
"theory_lra::imp","boundary","propagate_eqs","command collaborator"
"theory_lra::imp","boundary","propagate_eqs","predicate"
"theory_lra::imp","boundary","propagation_mode","property collaborator"
"theory_lra::imp","boundary","small_lemma_size","unclassified"
"theory_lra::imp","boundary","proofs_enabled","predicate"
"theory_lra::imp","boundary","set_upper_bound","predicate non-void-command collaborator"
"theory_lra::imp","boundary","set_lower_bound","predicate non-void-command collaborator"
"theory_lra::imp","boundary","set_bound","predicate non-void-command collaborator"
"theory_lra::imp","boundary","var_has_bound","predicate non-void-command collaborator"
"theory_lra::imp","boundary","has_upper_bound","predicate non-void-command collaborator"
"theory_lra::imp","boundary","has_lower_bound","predicate non-void-command collaborator"
"theory_lra::imp","boundary","has_bound","predicate non-void-command collaborator"
"theory_lra::imp","boundary","is_equal","predicate collaborator"
"theory_lra::imp","boundary","get_num_vars","unclassified"
"theory_lra::imp","boundary","report_equality_of_fixed_vars","command collaborator"
"theory_lra::imp","boundary","assign_eq","command collaborator"
"theory_lra::imp","boundary","fixed_var_eh","command collaborator"
"theory_lra::imp","boundary","make_feasible","property non-void-command collaborator"
"theory_lra::imp","boundary","reset_evidence","command"
"theory_lra::imp","boundary","set_evidence","command collaborator"
"theory_lra::imp","boundary","set_evidence","command collaborator"
"theory_lra::imp","boundary","get_infeasibility_explanation_and_set_conflict","command"
"theory_lra::imp","boundary","set_conflict","command collaborator"
"theory_lra::imp","boundary","set_conflict_or_lemma","command collaborator"
"theory_lra::imp","boundary","why_is_diseq","collaborator incidental"
"theory_lra::imp","boundary","reset_eh","command"
"theory_lra::imp","boundary","init_model","command collaborator"
"theory_lra::imp","boundary","nl_value","property collaborator"
"theory_lra::imp","boundary","mk_value","property non-void-command collaborator"
"theory_lra::imp","boundary","get_value","predicate non-void-command collaborator"
"theory_lra::imp","boundary","get_value","predicate non-void-command collaborator"
"theory_lra::imp","boundary","include_func_interp","predicate non-void-command collaborator"
"theory_lra::imp","boundary","include_func_interp","predicate non-void-command collaborator"
"theory_lra::imp","boundary","get_lower","predicate non-void-command collaborator"
"theory_lra::imp","boundary","get_lower","predicate non-void-command collaborator"
"theory_lra::imp","boundary","get_upper","predicate non-void-command collaborator"
"theory_lra::imp","boundary","get_upper","predicate non-void-command collaborator"
"theory_lra::imp","boundary","validate_conflict","predicate non-void-command collaborator"
"theory_lra::imp","boundary","validate_assign","predicate non-void-command collaborator"
"theory_lra::imp","boundary","validate_eq","predicate non-void-command collaborator"
"theory_lra::imp","boundary","add_background","command collaborator"
"theory_lra::imp","boundary","value","property non-void-command collaborator"
"theory_lra::imp","boundary","maximize","property non-void-command collaborator"
"theory_lra::imp","boundary","mk_gt","property non-void-command collaborator"
"theory_lra::imp","boundary","add_objective","property non-void-command collaborator"
"theory_lra::imp","boundary","term2coeffs","command collaborator"
"theory_lra::imp","boundary","term2coeffs","command collaborator"
"theory_lra::imp","boundary","coeffs2app","property non-void-command collaborator"
"theory_lra::imp","boundary","mk_term","property non-void-command collaborator"
"theory_lra::imp","boundary","gcd_reduce","controller stateless"
"theory_lra::imp","boundary","mk_obj","property non-void-command collaborator"
"theory_lra::imp","boundary","mk_ge","property non-void-command collaborator"
"theory_lra::imp","boundary","display","collaborator"
"theory_lra::imp","boundary","display_evidence","command collaborator"
"theory_lra::imp","boundary","collect_statistics","collaborator"
"theory_lra::imp","boundary","init_range","incidental"
"theory_lra::imp","boundary","max_range","incidental"
"theory_lra::imp","boundary","setup","command"
"theory_lra::imp","boundary","validate_model","command collaborator"
"branch","empty","branch","constructor"
"branch","empty","branch","constructor"
"for_each_expr_proc","commander boundary","operator()","collaborator incidental"
"for_each_expr_proc","commander boundary","operator()","command collaborator"
"for_each_expr_proc","commander boundary","operator()","command collaborator"
"for_each_expr_proc","commander boundary","operator()","command collaborator"
"depth_first_node_selector","boundary degenerate small-class","depth_first_node_selector","constructor"
"depth_first_node_selector","boundary degenerate small-class","operator()","collaborator incidental"
"num","data-provider boundary data-class small-class","data","get collaborator"
"context_hwf_wrapper","entity boundary","int2hwf","command collaborator"
"context_hwf_wrapper","entity boundary","context_hwf_wrapper","constructor"
"context_hwf_wrapper","entity boundary","qm","get collaborator"
"context_hwf_wrapper","entity boundary","mk_sum","property non-void-command collaborator"
"context_hwf_wrapper","entity boundary","mk_ineq","property non-void-command collaborator"
"is_nira_probe","boundary degenerate small-class","operator()","wrapper stateless"
"value_generator","entity commander boundary","value_generator::value_generator","constructor"
"value_generator","entity commander boundary","value_generator::init","command"
"value_generator","entity commander boundary","value_generator::add_plugin","command collaborator"
"value_generator","entity commander boundary","value_generator::get_value","property non-void-command collaborator"
"explanation_relation","boundary","assign_data","command collaborator"
"explanation_relation","boundary","set_undefined","command"
"explanation_relation","boundary","unite_with_data","command collaborator"
"explanation_relation","boundary","deallocate","command"
"explanation_relation","boundary","get_plugin","property collaborator"
"explanation_relation","boundary","to_formula","void-accessor controller"
"explanation_relation","boundary","is_undefined","get"
"explanation_relation","boundary","no_undefined","predicate"
"explanation_relation","boundary","empty","get"
"explanation_relation","boundary","reset","set"
"explanation_relation","boundary","add_fact","command collaborator"
"explanation_relation","boundary","contains_fact","wrapper stateless"
"explanation_relation","boundary","clone","property"
"explanation_relation","boundary","complement","property collaborator"
"explanation_relation","boundary","display_explanation","collaborator"
"explanation_relation","boundary","display","collaborator"
"explanation_relation","boundary","get_size_estimate","unclassified"
"quasi_macros_tactic","entity boundary","translate","property wrapper"
"quasi_macros_tactic","entity boundary","~quasi_macros_tactic","destructor"
"quasi_macros_tactic","entity boundary","name","incidental"
"quasi_macros_tactic","entity boundary","updt_params","command collaborator"
"quasi_macros_tactic","entity boundary","collect_param_descrs","wrapper stateless"
"quasi_macros_tactic","entity boundary","operator()","wrapper stateless"
"quasi_macros_tactic","entity boundary","cleanup","command collaborator"
"func_decl_dependencies","entity boundary","~func_decl_dependencies","destructor"
"func_decl_dependencies","entity boundary","mk_func_decl_set","wrapper stateless"
"func_decl_dependencies","entity boundary","contains","predicate collaborator"
"func_decl_dependencies","entity boundary","get_dependencies","property collaborator"
"func_decl_dependencies","entity boundary","func_decl_dependencies::reset","command collaborator"
"func_decl_dependencies","entity boundary","func_decl_dependencies::collect_func_decls","wrapper"
"func_decl_dependencies","entity boundary","func_decl_dependencies::collect_ng_func_decls","wrapper"
"func_decl_dependencies","entity boundary","func_decl_dependencies::insert","predicate non-void-command collaborator"
"func_decl_dependencies","entity boundary","func_decl_dependencies::erase","command collaborator"
"func_decl_dependencies","entity boundary","func_decl_dependencies::display","empty"
"cast_ast<ast>","boundary degenerate small-class","operator()","wrapper stateless"
"unsat_core_plugin_farkas_lemma_bounded","commander boundary small-class","unsat_core_plugin_farkas_lemma_bounded","constructor"
"unsat_core_plugin_farkas_lemma_bounded","commander boundary small-class","unsat_core_plugin_farkas_lemma_bounded::finalize","command collaborator"
"expr_abstractor","entity boundary small-class","expr_abstractor","constructor"
"expr_abstractor","entity boundary small-class","expr_abstractor::operator()","void-accessor command collaborator"
"aig_exception","empty","aig_exception","constructor"
"horner","boundary","horner::horner","constructor"
"horner","boundary","horner::row_has_monomial_to_refine","predicate collaborator"
"horner","boundary","horner::row_is_interesting","predicate collaborator"
"horner","boundary","horner::lemmas_on_expr","controller stateless"
"horner","boundary","horner::lemmas_on_row","predicate non-void-command collaborator"
"horner","boundary","horner::horner_lemmas","predicate non-void-command"
"is_pb_probe","pure-controller degenerate small-class","operator()","controller stateless"
"elim_term_ite_tactic","boundary","~elim_term_ite_tactic","destructor"
"elim_term_ite_tactic","boundary","name","incidental"
"elim_term_ite_tactic","boundary","translate","property wrapper"
"elim_term_ite_tactic","boundary","updt_params","command collaborator"
"elim_term_ite_tactic","boundary","collect_param_descrs","controller stateless"
"elim_term_ite_tactic","boundary","operator()","wrapper stateless"
"elim_term_ite_tactic","boundary","cleanup","set collaborator"
"array","entity boundary","array","constructor"
"array","entity boundary","resize","set"
"array","entity boundary","size","get"
"array","entity boundary","operator[]","get collaborator"
"array","entity boundary","operator[]","get collaborator"
"array","entity boundary","ptr","property collaborator"
"array","entity boundary","ptr","property non-void-command collaborator"
"array","entity boundary","destroy_elements","command collaborator"
"array","entity boundary","raw_ptr","property"
"array","entity boundary","set_data","set"
"array","entity boundary","allocate","command"
"array","entity boundary","init","command collaborator"
"array","entity boundary","init","void-accessor command collaborator"
"array","entity boundary","array","constructor"
"array","entity boundary","array","constructor"
"array","entity boundary","array","constructor"
"array","entity boundary","array","constructor"
"array","entity boundary","array","constructor"
"array","entity boundary","~array","destructor"
"array","entity boundary","finalize","command collaborator"
"array","entity boundary","set","command collaborator"
"array","entity boundary","set","command collaborator"
"array","entity boundary","set","command collaborator"
"array","entity boundary","size","unclassified"
"array","entity boundary","empty","predicate"
"array","entity boundary","operator[]","get non-void-command collaborator"
"array","entity boundary","operator[]","get collaborator"
"array","entity boundary","begin","get collaborator"
"array","entity boundary","end","property non-void-command collaborator"
"array","entity boundary","begin","get collaborator"
"array","entity boundary","end","property collaborator"
"array","entity boundary","data","get collaborator"
"array","entity boundary","data","get collaborator"
"array","entity boundary","swap","wrapper"
"array","entity boundary","array<T>::array","constructor"
"default_expr_replacer_cfg","small-class","default_expr_replacer_cfg","constructor"
"default_expr_replacer_cfg","small-class","get_subst","predicate non-void-command collaborator"
"default_expr_replacer_cfg","small-class","max_steps_exceeded","incidental"
"beta_reducer","empty","beta_reducer","constructor"
"beta_reducer","empty","beta_reducer","constructor"
"char_union_find","unclassified","ensure_size","command"
"char_union_find","unclassified","mk_var","non-void-command"
"char_union_find","unclassified","get_num_vars","unclassified"
"char_union_find","unclassified","mark_as_char_const","command"
"char_union_find","unclassified","is_char_const","predicate non-void-command"
"char_union_find","unclassified","find","unclassified"
"char_union_find","unclassified","next","get"
"char_union_find","unclassified","is_root","predicate"
"char_union_find","unclassified","get_justification","property non-void-command collaborator"
"char_union_find","unclassified","merge","command collaborator"
"char_union_find","unclassified","reset","command"
"aig_eq","boundary degenerate small-class","operator()","wrapper stateless"
"pdatatypes_decl","data-provider boundary","obj_size","incidental"
"pdatatypes_decl","data-provider boundary","children","property collaborator"
"pdatatypes_decl","data-provider boundary","begin","property collaborator"
"pdatatypes_decl","data-provider boundary","end","property collaborator"
"pdatatypes_decl","data-provider boundary","pdatatypes_decl::pdatatypes_decl","constructor"
"pdatatypes_decl","data-provider boundary","pdatatypes_decl::finalize","command collaborator"
"pdatatypes_decl","data-provider boundary","pdatatypes_decl::fix_missing_refs","predicate controller"
"pdatatypes_decl","data-provider boundary","pdatatypes_decl::instantiate","wrapper stateless"
"pdatatypes_decl","data-provider boundary","pdatatypes_decl::commit","predicate non-void-command collaborator"
"expr2subpaving::imp","boundary","~imp","destructor"
"expr2subpaving::imp","boundary","m","get collaborator"
"expr2subpaving::imp","boundary","s","get collaborator"
"expr2subpaving::imp","boundary","qm","get collaborator"
"expr2subpaving::imp","boundary","reset_cache","command"
"expr2subpaving::imp","boundary","checkpoint","command"
"expr2subpaving::imp","boundary","mk_var_for","property non-void-command collaborator"
"expr2subpaving::imp","boundary","found_non_simplified","wrapper stateless"
"expr2subpaving::imp","boundary","is_cached","predicate non-void-command collaborator"
"expr2subpaving::imp","boundary","is_int_real","predicate non-void-command collaborator"
"expr2subpaving::imp","boundary","cache_result","command collaborator"
"expr2subpaving::imp","boundary","process_num","property non-void-command collaborator"
"expr2subpaving::imp","boundary","as_power","void-accessor command collaborator"
"expr2subpaving::imp","boundary","process_mul","property non-void-command collaborator"
"expr2subpaving::imp","boundary","process_add","property non-void-command collaborator"
"expr2subpaving::imp","boundary","process_power","property non-void-command collaborator"
"expr2subpaving::imp","boundary","process_arith_app","property non-void-command collaborator"
"expr2subpaving::imp","boundary","process","get property non-void-command collaborator"
"expr2subpaving::imp","boundary","is_var","controller stateless"
"expr2subpaving::imp","boundary","internalize_term","property non-void-command collaborator"
"ast_printer","degenerate","pp","wrapper stateless"
"ast_printer","degenerate","pp","wrapper stateless"
"ast_printer","degenerate","pp","wrapper stateless"
"ast_printer","degenerate","pp","wrapper stateless"
"ast_printer","degenerate","display","controller stateless"
"ast_printer","degenerate","display","controller stateless"
"ast_printer","degenerate","display","controller stateless"
"ast_printer","degenerate","display","controller stateless"
"Z3_params_ref","empty","Z3_params_ref","constructor"
"CharSort","empty","CharSort","constructor"
"CharSort","empty","CharSort","constructor"
"bind_variables","entity boundary","bind_variables::bind_variables","constructor"
"bind_variables","entity boundary","bind_variables::~bind_variables","destructor"
"bind_variables","entity boundary","bind_variables::operator()","property non-void-command collaborator"
"bind_variables","entity boundary","bind_variables::abstract","property non-void-command collaborator"
"bind_variables","entity boundary","bind_variables::add_var","command collaborator"
"basic_factory","entity boundary","register_value","empty"
"basic_factory","entity boundary","basic_factory::basic_factory","constructor"
"basic_factory","entity boundary","basic_factory::get_some_value","property non-void-command collaborator"
"basic_factory","entity boundary","basic_factory::get_some_values","predicate non-void-command collaborator"
"basic_factory","entity boundary","basic_factory::get_fresh_value","collaborator incidental"
"sort_lt_proc","pure-controller degenerate small-class","operator()","controller stateless"
"th_eq","data-provider boundary","is_eq","predicate"
"th_eq","data-provider boundary","id","get collaborator"
"th_eq","data-provider boundary","v1","get collaborator"
"th_eq","data-provider boundary","v2","get collaborator"
"th_eq","data-provider boundary","child","get collaborator"
"th_eq","data-provider boundary","root","get collaborator"
"th_eq","data-provider boundary","eq","get collaborator"
"th_eq","data-provider boundary","th_eq","constructor"
"th_eq","data-provider boundary","th_eq","constructor"
"relation_manager::auxiliary_table_transformer_fn","controller small-class","operator()","property controller"
"ite_relevancy_eh","pure-controller small-class","ite_relevancy_eh","constructor"
"ite_relevancy_eh","pure-controller small-class","ite_relevancy_eh::operator()","controller"
"uninterpreted_function_finder_proc","unclassified","uninterpreted_function_finder_proc","constructor"
"uninterpreted_function_finder_proc","unclassified","operator()","empty"
"uninterpreted_function_finder_proc","unclassified","operator()","empty"
"uninterpreted_function_finder_proc","unclassified","operator()","command collaborator"
"uninterpreted_function_finder_proc","unclassified","reset","command"
"uninterpreted_function_finder_proc","unclassified","found","get collaborator"
"expr_offset","data-provider","expr_offset","constructor"
"expr_offset","data-provider","expr_offset","constructor"
"expr_offset","data-provider","get_expr","get collaborator"
"expr_offset","data-provider","get_offset","get"
"expr_offset","data-provider","operator==","predicate"
"expr_offset","data-provider","operator!=","predicate"
"expr_offset","data-provider","hash","unclassified"
"sat_tactic","boundary","translate","property wrapper"
"sat_tactic","boundary","~sat_tactic","destructor"
"sat_tactic","boundary","name","incidental"
"sat_tactic","boundary","updt_params","command collaborator"
"sat_tactic","boundary","collect_param_descrs","command collaborator"
"sat_tactic","boundary","operator()","controller"
"sat_tactic","boundary","cleanup","wrapper"
"sat_tactic","boundary","collect_statistics","controller"
"sat_tactic","boundary","reset_statistics","command"
"ctx_simplify_tactic","boundary","name","incidental"
"ctx_simplify_tactic","boundary","collect_param_descrs","command collaborator"
"ctx_simplify_tactic","boundary","ctx_simplify_tactic::ctx_simplify_tactic","constructor"
"ctx_simplify_tactic","boundary","ctx_simplify_tactic::translate","property non-void-command collaborator"
"ctx_simplify_tactic","boundary","ctx_simplify_tactic::~ctx_simplify_tactic","destructor"
"ctx_simplify_tactic","boundary","ctx_simplify_tactic::updt_params","command collaborator"
"ctx_simplify_tactic","boundary","ctx_simplify_tactic::get_param_descrs","controller stateless"
"ctx_simplify_tactic","boundary","ctx_simplify_tactic::operator()","controller stateless"
"ctx_simplify_tactic","boundary","ctx_simplify_tactic::cleanup","command collaborator"
"config","boundary","config","constructor"
"config","boundary","~config","destructor"
"config","boundary","operatorZ3_config","get"
"config","boundary","set","wrapper"
"config","boundary","set","wrapper"
"config","boundary","set","controller"
"config","boundary","config::config","constructor"
"config","boundary","config::updt_params","command collaborator"
"config","boundary","config::collect_param_descrs","command collaborator"
"ast_pp_dot","small-class","ast_pp_dot","constructor"
"ast_pp_dot","small-class","ast_pp_dot","constructor"
"ast_pp_dot","small-class","get_manager","get collaborator"
"ast_pp_dot","small-class","ast_pp_dot::pp","property controller"
"collect_indices","commander small-class","collect_indices","constructor"
"collect_indices","commander small-class","operator()","empty"
"collect_indices","commander small-class","operator()","command collaborator"
"specrel_plugin","unclassified","~specrel_plugin","destructor"
"specrel_plugin","unclassified","get_id","property collaborator"
"specrel_plugin","unclassified","specrel_plugin::specrel_plugin","constructor"
"specrel_plugin","unclassified","specrel_plugin::register_node","command collaborator"
"specrel_plugin","unclassified","specrel_plugin::merge_eh","controller"
"specrel_plugin","unclassified","specrel_plugin::diseq_eh","controller"
"specrel_plugin","unclassified","specrel_plugin::propagate","controller"
"specrel_plugin","unclassified","specrel_plugin::undo","command collaborator"
"specrel_plugin","unclassified","specrel_plugin::display","property controller"
"smt_proof_checker","commander boundary","add_units","command"
"smt_proof_checker","commander boundary","is_rup","predicate controller"
"smt_proof_checker","commander boundary","mk_clause","command collaborator"
"smt_proof_checker","commander boundary","mk_clause","command collaborator"
"smt_proof_checker","commander boundary","add_clause","command collaborator"
"smt_proof_checker","commander boundary","assume","command collaborator"
"smt_proof_checker","commander boundary","del","empty"
"smt_proof_checker","commander boundary","smt_proof_checker::smt_proof_checker","constructor"
"smt_proof_checker","commander boundary","smt_proof_checker::ensure_solver","set"
"smt_proof_checker","commander boundary","smt_proof_checker::log_verified","set collaborator"
"smt_proof_checker","commander boundary","smt_proof_checker::check_rup","predicate non-void-command collaborator"
"smt_proof_checker","commander boundary","smt_proof_checker::check_rup","predicate non-void-command collaborator"
"smt_proof_checker","commander boundary","smt_proof_checker::infer","command collaborator"
"smt_proof_checker","commander boundary","smt_proof_checker::diagnose_rup_failure","command collaborator"
"smt_proof_checker","commander boundary","smt_proof_checker::collect_statistics","collaborator"
"le_probe","pure-controller degenerate small-class","le_probe","constructor"
"le_probe","pure-controller degenerate small-class","operator()","controller stateless"
"concat_proof_converter","pure-controller degenerate","concat_proof_converter","constructor"
"concat_proof_converter","pure-controller degenerate","get_name","incidental"
"concat_proof_converter","pure-controller degenerate","operator()","controller stateless"
"concat_proof_converter","pure-controller degenerate","translate","controller stateless"
"psm_lt","pure-controller degenerate small-class","operator()","controller stateless"
"ReSort","empty","ReSort","constructor"
"ReSort","empty","ReSort","constructor"
"expr","data-provider","expr","constructor"
"expr","data-provider","expr","constructor"
"expr","data-provider","get_sort","property collaborator"
"expr","data-provider","is_bool","predicate"
"expr","data-provider","is_int","predicate"
"expr","data-provider","is_real","predicate"
"expr","data-provider","is_arith","predicate"
"expr","data-provider","is_bv","predicate"
"expr","data-provider","is_array","predicate"
"expr","data-provider","is_datatype","predicate"
"expr","data-provider","is_relation","predicate"
"expr","data-provider","is_seq","predicate"
"expr","data-provider","is_re","predicate"
"expr","data-provider","is_finite_domain","predicate"
"expr","data-provider","is_fpa","predicate"
"expr","data-provider","is_numeral","predicate"
"expr","data-provider","is_numeral_i64","predicate"
"expr","data-provider","is_numeral_u64","predicate"
"expr","data-provider","is_numeral_i","predicate"
"expr","data-provider","is_numeral_u","predicate"
"expr","data-provider","is_numeral","predicate"
"expr","data-provider","is_numeral","predicate"
"expr","data-provider","is_numeral","predicate"
"expr","data-provider","as_binary","predicate"
"expr","data-provider","as_double","property"
"expr","data-provider","as_uint64","property"
"expr","data-provider","as_int64","property"
"expr","data-provider","is_app","predicate"
"expr","data-provider","is_const","predicate"
"expr","data-provider","is_quantifier","predicate"
"expr","data-provider","is_forall","predicate"
"expr","data-provider","is_exists","predicate"
"expr","data-provider","is_lambda","predicate"
"expr","data-provider","is_var","predicate"
"expr","data-provider","is_algebraic","predicate"
"expr","data-provider","is_well_sorted","predicate"
"expr","data-provider","mk_is_inf","property collaborator"
"expr","data-provider","mk_is_nan","property collaborator"
"expr","data-provider","mk_is_normal","property collaborator"
"expr","data-provider","mk_is_subnormal","property collaborator"
"expr","data-provider","mk_is_zero","property collaborator"
"expr","data-provider","mk_to_ieee_bv","property collaborator"
"expr","data-provider","mk_from_ieee_bv","property collaborator"
"expr","data-provider","get_decimal_string","property"
"expr","data-provider","algebraic_lower","property collaborator"
"expr","data-provider","algebraic_upper","property collaborator"
"expr","data-provider","algebraic_poly","property collaborator"
"expr","data-provider","algebraic_i","unclassified"
"expr","data-provider","id","unclassified"
"expr","data-provider","get_numeral_int","property"
"expr","data-provider","get_numeral_uint","unclassified"
"expr","data-provider","get_numeral_int64","property"
"expr","data-provider","get_numeral_uint64","property"
"expr","data-provider","bool_value","property collaborator"
"expr","data-provider","numerator","property collaborator"
"expr","data-provider","denominator","property collaborator"
"expr","data-provider","is_string_value","predicate"
"expr","data-provider","get_string","property"
"expr","data-provider","get_u32string","property collaborator"
"expr","data-provider","operatorZ3_app","unclassified"
"expr","data-provider","decl","property collaborator"
"expr","data-provider","num_args","unclassified"
"expr","data-provider","arg","property collaborator"
"expr","data-provider","args","property collaborator"
"expr","data-provider","body","property collaborator"
"expr","data-provider","is_true","predicate"
"expr","data-provider","is_false","predicate"
"expr","data-provider","is_not","predicate"
"expr","data-provider","is_and","predicate"
"expr","data-provider","is_or","predicate"
"expr","data-provider","is_xor","predicate"
"expr","data-provider","is_implies","predicate"
"expr","data-provider","is_eq","predicate"
"expr","data-provider","is_ite","predicate"
"expr","data-provider","is_distinct","predicate"
"expr","data-provider","rotate_left","property collaborator"
"expr","data-provider","rotate_right","property collaborator"
"expr","data-provider","repeat","property collaborator"
"expr","data-provider","extract","property collaborator"
"expr","data-provider","bit2bool","property collaborator"
"expr","data-provider","lo","unclassified"
"expr","data-provider","hi","unclassified"
"expr","data-provider","extract","property collaborator"
"expr","data-provider","replace","property collaborator"
"expr","data-provider","unit","property collaborator"
"expr","data-provider","contains","property collaborator"
"expr","data-provider","at","property collaborator"
"expr","data-provider","nth","property collaborator"
"expr","data-provider","length","property collaborator"
"expr","data-provider","stoi","property collaborator"
"expr","data-provider","itos","property collaborator"
"expr","data-provider","ubvtos","property collaborator"
"expr","data-provider","sbvtos","property collaborator"
"expr","data-provider","char_to_int","property collaborator"
"expr","data-provider","char_to_bv","property collaborator"
"expr","data-provider","char_from_bv","property collaborator"
"expr","data-provider","is_digit","property collaborator"
"expr","data-provider","loop","property non-void-command collaborator"
"expr","data-provider","loop","property non-void-command collaborator"
"expr","data-provider","operator[]","property"
"expr","data-provider","operator[]","property wrapper"
"expr","data-provider","simplify","property collaborator"
"expr","data-provider","simplify","property collaborator"
"expr","data-provider","begin","property wrapper"
"expr","data-provider","end","property non-void-command collaborator"
"expr","data-provider","get_small_id","unclassified"
"expr","data-provider","expr::substitute","property non-void-command collaborator"
"expr","data-provider","expr::substitute","property non-void-command collaborator"
"expr","data-provider","expr::substitute","property non-void-command collaborator"
"expr","data-provider","expr::get_sort","property collaborator"
"ufactorization_combination_iterator","entity boundary","ufactorization_combination_iterator","constructor"
"ufactorization_combination_iterator","entity boundary","filter_current","predicate"
"ufactorization_combination_iterator","entity boundary","current_degree","unclassified"
"ufactorization_combination_iterator","entity boundary","left","collaborator"
"ufactorization_combination_iterator","entity boundary","get_left_tail_coeff","command collaborator"
"ufactorization_combination_iterator","entity boundary","get_right_tail_coeff","command collaborator"
"ufactorization_combination_iterator","entity boundary","right","collaborator"
"proof_post_order","small-class","proof_post_order::proof_post_order","constructor"
"proof_post_order","small-class","proof_post_order::hasNext","predicate non-void-command"
"proof_post_order","small-class","proof_post_order::next","property non-void-command collaborator"
"visitor","controller degenerate","visitor","constructor"
"visitor","controller degenerate","operator()","command collaborator"
"visitor","controller degenerate","mk_rule_inliner::visitor::operator()","controller stateless"
"visitor","controller degenerate","mk_rule_inliner::visitor::reset","controller stateless"
"visitor","controller degenerate","mk_rule_inliner::visitor::add_position","controller stateless"
"visitor","controller degenerate","mk_rule_inliner::visitor::del_position","controller stateless"
"berlekamp_matrix","entity boundary","get","get wrapper"
"berlekamp_matrix","entity boundary","get","get wrapper"
"berlekamp_matrix","entity boundary","berlekamp_matrix","constructor"
"berlekamp_matrix","entity boundary","~berlekamp_matrix","destructor"
"berlekamp_matrix","entity boundary","diagonalize","non-void-command"
"berlekamp_matrix","entity boundary","next_null_space_vector","predicate non-void-command collaborator"
"berlekamp_matrix","entity boundary","display","collaborator"
"var_expr_pair","data-provider boundary small-class","var_expr_pair","constructor"
"var_expr_pair","data-provider boundary small-class","is_equal","predicate collaborator"
"var_expr_pair","data-provider boundary small-class","display","collaborator"
"karr_relation_plugin::filter_identical_fn","commander boundary small-class","operator()","command collaborator"
"ext_numeral","unclassified","ext_numeral","constructor"
"ext_numeral","unclassified","ext_numeral","constructor"
"ext_numeral","unclassified","ext_numeral","constructor"
"ext_numeral","unclassified","ext_numeral","constructor"
"ext_numeral","unclassified","is_infinite","predicate"
"ext_numeral","unclassified","sign","predicate"
"ext_numeral","unclassified","is_zero","predicate"
"ext_numeral","unclassified","is_neg","predicate"
"ext_numeral","unclassified","is_pos","predicate"
"ext_numeral","unclassified","to_rational","get collaborator"
"ext_numeral","unclassified","ext_numeral::neg","set"
"ext_numeral","unclassified","ext_numeral::operator+=","get non-void-command"
"ext_numeral","unclassified","ext_numeral::operator-=","get non-void-command"
"ext_numeral","unclassified","ext_numeral::operator*=","get non-void-command"
"ext_numeral","unclassified","ext_numeral::expt","command"
"ext_numeral","unclassified","ext_numeral::inv","command"
"ext_numeral","unclassified","ext_numeral::display","collaborator"
"bound_analyzer_on_row","boundary","bound_analyzer_on_row","constructor"
"bound_analyzer_on_row","boundary","analyze","non-void-command collaborator"
"bound_analyzer_on_row","boundary","bound_is_available","predicate non-void-command"
"bound_analyzer_on_row","boundary","ub","property collaborator"
"bound_analyzer_on_row","boundary","lb","property collaborator"
"bound_analyzer_on_row","boundary","monoid_max_no_mult","property collaborator"
"bound_analyzer_on_row","boundary","monoid_max","property collaborator"
"bound_analyzer_on_row","boundary","monoid_max","property collaborator"
"bound_analyzer_on_row","boundary","monoid_min_no_mult","property collaborator"
"bound_analyzer_on_row","boundary","monoid_min","property collaborator"
"bound_analyzer_on_row","boundary","monoid_min","property collaborator"
"bound_analyzer_on_row","boundary","limit_all_monoids_from_above","command"
"bound_analyzer_on_row","boundary","limit_all_monoids_from_below","command"
"bound_analyzer_on_row","boundary","limit_monoid_u_from_below","command"
"bound_analyzer_on_row","boundary","limit_monoid_l_from_above","command"
"bound_analyzer_on_row","boundary","limit_j","command collaborator"
"bound_analyzer_on_row","boundary","advance_u","set"
"bound_analyzer_on_row","boundary","advance_l","set"
"bound_analyzer_on_row","boundary","analyze_bound_on_var_on_coeff","command collaborator"
"ReExpr","empty","ReExpr","constructor"
"tmp_app","entity commander boundary","tmp_app","constructor"
"tmp_app","entity commander boundary","~tmp_app","destructor"
"tmp_app","entity commander boundary","get_app","property collaborator"
"tmp_app","entity commander boundary","get_args","property non-void-command collaborator"
"tmp_app","entity commander boundary","set_decl","command collaborator"
"tmp_app","entity commander boundary","set_num_args","set"
"tmp_app","entity commander boundary","set_arg","command collaborator"
"tmp_app","entity commander boundary","copy","command collaborator"
"tmp_app","entity commander boundary","copy_swapping_args","command collaborator"
"ast_fast_mark","commander boundary","~ast_fast_mark","destructor"
"ast_fast_mark","commander boundary","is_marked","predicate wrapper"
"ast_fast_mark","commander boundary","reset_mark","wrapper"
"ast_fast_mark","commander boundary","mark","command collaborator"
"ast_fast_mark","commander boundary","reset","command collaborator"
"ast_fast_mark","commander boundary","mark","command"
"ast_fast_mark","commander boundary","get_level","non-void-command"
"ast_fast_mark","commander boundary","set_level","command"
"expr_offset_map","entity boundary","contains","predicate collaborator"
"expr_offset_map","entity boundary","find","predicate collaborator"
"expr_offset_map","entity boundary","insert","command collaborator"
"expr_offset_map","entity boundary","reset","command collaborator"
"verbose_action","empty","verbose_action::verbose_action","constructor"
"verbose_action","empty","verbose_action::~verbose_action","destructor"
"cast_ast<expr>","boundary degenerate small-class","operator()","wrapper stateless"
"sparse_table::general_key_indexer","entity boundary","key_to_reserve","collaborator"
"sparse_table::general_key_indexer","entity boundary","get_matching_offset_vector","property non-void-command collaborator"
"sparse_table::general_key_indexer","entity boundary","update","set collaborator"
"sparse_table::general_key_indexer","entity boundary","get_matching_offsets","property collaborator"
"sbuffer","empty","sbuffer","constructor"
"sbuffer","empty","sbuffer","constructor"
"AlgebraicNum","pure-controller degenerate","ToUpper","factory controller stateless"
"AlgebraicNum","pure-controller degenerate","ToLower","factory controller stateless"
"AlgebraicNum","pure-controller degenerate","ToDecimal","controller stateless"
"AlgebraicNum","pure-controller degenerate","AlgebraicNum","constructor"
"explanation_relation_plugin::union_fn","commander boundary data-class small-class","operator()","set collaborator"
"expr_context_simplifier","entity boundary","operator()","command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::expr_context_simplifier","constructor"
"expr_context_simplifier","entity boundary","expr_context_simplifier::reduce","command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::reduce_fix","void-accessor command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::reduce_rec","void-accessor command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::reduce_rec","collaborator incidental"
"expr_context_simplifier","entity boundary","expr_context_simplifier::reduce_rec","void-accessor command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::clean_trail","command"
"expr_context_simplifier","entity boundary","expr_context_simplifier::insert_context","void-accessor command"
"expr_context_simplifier","entity boundary","expr_context_simplifier::insert_arg","predicate non-void-command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::reduce_and_or","void-accessor command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::reduce_and","command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::reduce_or","command collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::is_true","predicate collaborator"
"expr_context_simplifier","entity boundary","expr_context_simplifier::is_false","predicate collaborator"
"ast_ext","entity boundary","ast_ext","constructor"
"ast_ext","entity boundary","mk_ite","property non-void-command collaborator"
"ast_ext","entity boundary","mk_le","property non-void-command collaborator"
"ast_ext","entity boundary","mk_default","property non-void-command collaborator"
"demodulator_util","unclassified","demodulator_util","constructor"
"demodulator_util","unclassified","demodulator_util::is_subset","property collaborator"
"demodulator_util","unclassified","demodulator_util::is_smaller","property collaborator"
"demodulator_util","unclassified","demodulator_util::is_demodulator","predicate collaborator"
"demodulator_util","unclassified","demodulator_util::max_var_id","controller stateless"
"demodulator_util","unclassified","demodulator_util::max_var_id","controller stateless"
"bv_solve_plugin","entity boundary small-class","solve_eq","predicate non-void-command collaborator"
"bv_solve_plugin","entity boundary small-class","bv_solve_plugin","constructor"
"bv_solve_plugin","entity boundary small-class","solve","property non-void-command collaborator"
"line_reader","unclassified","resize_data","command"
"line_reader","unclassified","refill_buffer","command"
"line_reader","unclassified","line_reader","constructor"
"line_reader","unclassified","~line_reader","destructor"
"line_reader","unclassified","operator()","get"
"line_reader","unclassified","get_line","property non-void-command"
"line_reader","unclassified","eof","get"
"quantifier_stat","unclassified","get_size","get"
"quantifier_stat","unclassified","get_depth","get"
"quantifier_stat","unclassified","get_generation","get"
"quantifier_stat","unclassified","get_case_split_factor","get"
"quantifier_stat","unclassified","get_num_nested_quantifiers","get"
"quantifier_stat","unclassified","get_num_instances","get"
"quantifier_stat","unclassified","get_num_instances_simplify_true","get"
"quantifier_stat","unclassified","get_num_instances_checker_sat","get"
"quantifier_stat","unclassified","get_num_instances_curr_search","get"
"quantifier_stat","unclassified","get_num_instances_curr_branch","get"
"quantifier_stat","unclassified","inc_num_instances_simplify_true","set"
"quantifier_stat","unclassified","inc_num_instances_checker_sat","set"
"quantifier_stat","unclassified","inc_num_instances","command"
"quantifier_stat","unclassified","inc_num_instances_curr_branch","set"
"quantifier_stat","unclassified","reset_num_instances_curr_search","set"
"quantifier_stat","unclassified","update_max_generation","set"
"quantifier_stat","unclassified","get_max_generation","get"
"quantifier_stat","unclassified","update_max_cost","set"
"quantifier_stat","unclassified","get_max_cost","get"
"quantifier_stat","unclassified","quantifier_stat::quantifier_stat","constructor"
"mbp_basic_tg","unclassified","mbp_basic_tg::apply","predicate non-void-command"
"mbp_basic_tg","unclassified","mbp_basic_tg::use_model","set"
"mbp_basic_tg","unclassified","mbp_basic_tg::get_new_vars","void-accessor collaborator"
"mbp_basic_tg","unclassified","mbp_basic_tg::get_family_id","property collaborator"
"mbp_basic_tg","unclassified","mbp_basic_tg::mbp_basic_tg","constructor"
"mbp_basic_tg","unclassified","mbp_basic_tg::~mbp_basic_tg","destructor"
"fpa2bv_tactic","boundary","translate","property wrapper"
"fpa2bv_tactic","boundary","~fpa2bv_tactic","destructor"
"fpa2bv_tactic","boundary","name","incidental"
"fpa2bv_tactic","boundary","updt_params","command collaborator"
"fpa2bv_tactic","boundary","collect_param_descrs","empty"
"fpa2bv_tactic","boundary","operator()","controller stateless"
"fpa2bv_tactic","boundary","cleanup","wrapper"
"or_relevancy_eh","pure-controller small-class","or_relevancy_eh","constructor"
"or_relevancy_eh","pure-controller small-class","or_relevancy_eh::operator()","controller"
"simplex","boundary","get_base_var","get controller"
"simplex","boundary","get_base_coeff","get controller"
"simplex","boundary","get_lower","void-accessor collaborator"
"simplex","boundary","get_upper","void-accessor collaborator"
"simplex","boundary","get_lower","get collaborator"
"simplex","boundary","get_upper","get collaborator"
"simplex","boundary","lower_valid","get collaborator"
"simplex","boundary","upper_valid","get collaborator"
"simplex","boundary","set_max_iterations","set"
"simplex","boundary","get_num_vars","unclassified"
"simplex","boundary","row_begin","property non-void-command collaborator"
"simplex","boundary","row_end","property non-void-command collaborator"
"simplex","boundary","select_smallest_var","property non-void-command collaborator"
"simplex","boundary","outside_bounds","predicate collaborator"
"simplex","boundary","is_free","predicate collaborator"
"simplex","boundary","is_non_free","predicate collaborator"
"simplex","boundary","is_base","get collaborator"
"simplex","boundary","simplex<Ext>::~simplex","destructor"
"simplex","boundary","simplex<Ext>::add_row","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::get_infeasible_row","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::add_patch","command collaborator"
"simplex","boundary","simplex<Ext>::del_row","command collaborator"
"simplex","boundary","simplex<Ext>::del_row","command collaborator"
"simplex","boundary","simplex<Ext>::above_lower","predicate collaborator"
"simplex","boundary","simplex<Ext>::below_upper","predicate collaborator"
"simplex","boundary","simplex<Ext>::set_lower","command collaborator"
"simplex","boundary","simplex<Ext>::set_upper","command collaborator"
"simplex","boundary","simplex<Ext>::unset_lower","collaborator"
"simplex","boundary","simplex<Ext>::unset_upper","collaborator"
"simplex","boundary","simplex<Ext>::set_value","command collaborator"
"simplex","boundary","simplex<Ext>::get_value","get collaborator"
"simplex","boundary","simplex<Ext>::display","collaborator"
"simplex","boundary","simplex<Ext>::display_row","command collaborator"
"simplex","boundary","simplex<Ext>::ensure_var","command collaborator"
"simplex","boundary","simplex<Ext>::reset","command collaborator"
"simplex","boundary","simplex<Ext>::make_feasible","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::update_and_pivot","command collaborator"
"simplex","boundary","simplex<Ext>::pivot","command collaborator"
"simplex","boundary","simplex<Ext>::update_value","command collaborator"
"simplex","boundary","simplex<Ext>::update_value_core","command collaborator"
"simplex","boundary","simplex<Ext>::below_lower","predicate collaborator"
"simplex","boundary","simplex<Ext>::above_upper","predicate collaborator"
"simplex","boundary","simplex<Ext>::above_lower","predicate collaborator"
"simplex","boundary","simplex<Ext>::below_upper","predicate collaborator"
"simplex","boundary","simplex<Ext>::at_lower","predicate collaborator"
"simplex","boundary","simplex<Ext>::at_upper","predicate collaborator"
"simplex","boundary","simplex<Ext>::make_var_feasible","predicate non-void-command collaborator"
"simplex","boundary","simplex<Ext>::select_pivot","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::select_pivot_core","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::get_num_non_free_dep_vars","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::select_pivot_blands","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::minimize","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::move_to_bound","command collaborator"
"simplex","boundary","simplex<Ext>::select_pivot_primal","void-accessor command"
"simplex","boundary","simplex<Ext>::pick_var_to_leave","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::check_blands_rule","void-accessor command"
"simplex","boundary","simplex<Ext>::pivot_strategy","property collaborator"
"simplex","boundary","simplex<Ext>::select_var_to_fix","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::select_error_var","property non-void-command collaborator"
"simplex","boundary","simplex<Ext>::well_formed","predicate"
"simplex","boundary","simplex<Ext>::is_feasible","predicate"
"simplex","boundary","simplex<Ext>::well_formed_row","predicate collaborator"
"simplex","boundary","simplex<Ext>::collect_statistics","collaborator"
"bdd","data-provider","~bdd","destructor"
"bdd","data-provider","lo","property"
"bdd","data-provider","hi","property"
"bdd","data-provider","var","unclassified"
"bdd","data-provider","is_true","predicate"
"bdd","data-provider","is_false","predicate"
"bdd","data-provider","is_const","predicate"
"bdd","data-provider","operator!","property"
"bdd","data-provider","operator&&","property"
"bdd","data-provider","operator||","property"
"bdd","data-provider","operator^","property"
"bdd","data-provider","operator|=","property set"
"bdd","data-provider","operator&=","property set"
"bdd","data-provider","cofactor","property non-void-command"
"bdd","data-provider","display","property collaborator"
"bdd","data-provider","operator==","predicate"
"bdd","data-provider","operator!=","predicate"
"bdd","data-provider","cnf_size","property"
"bdd","data-provider","dnf_size","property"
"bdd","data-provider","bdd_size","unclassified"
"bdd","data-provider","bdd::operator=","get non-void-command"
"func_interp","data-provider boundary","init","set collaborator"
"func_interp","data-provider boundary","func_interp","copy-constructor"
"func_interp","data-provider boundary","func_interp","copy-constructor"
"func_interp","data-provider boundary","~func_interp","destructor"
"func_interp","data-provider boundary","operatorZ3_func_interp","get"
"func_interp","data-provider boundary","operator=","get set"
"func_interp","data-provider boundary","else_value","property collaborator"
"func_interp","data-provider boundary","num_entries","unclassified"
"func_interp","data-provider boundary","entry","property collaborator"
"func_interp","data-provider boundary","add_entry","command collaborator"
"func_interp","data-provider boundary","set_else","command collaborator"
"func_interp","data-provider boundary","m","get collaborator"
"func_interp","data-provider boundary","get_arity","get"
"func_interp","data-provider boundary","is_partial","predicate"
"func_interp","data-provider boundary","is_simple","predicate"
"func_interp","data-provider boundary","args_are_values","get"
"func_interp","data-provider boundary","get_else","get collaborator"
"func_interp","data-provider boundary","num_entries","unclassified"
"func_interp","data-provider boundary","begin","property collaborator"
"func_interp","data-provider boundary","end","property collaborator"
"func_interp","data-provider boundary","get_entries","property collaborator"
"func_interp","data-provider boundary","get_entry","get collaborator"
"func_interp","data-provider boundary","func_interp::func_interp","constructor"
"func_interp","data-provider boundary","func_interp::~func_interp","destructor"
"func_interp","data-provider boundary","func_interp::copy","property factory collaborator"
"func_interp","data-provider boundary","func_interp::reset_interp_cache","command"
"func_interp","data-provider boundary","func_interp::is_fi_entry_expr","predicate non-void-command collaborator"
"func_interp","data-provider boundary","func_interp::set_else","void-accessor command collaborator"
"func_interp","data-provider boundary","func_interp::is_constant","predicate collaborator"
"func_interp","data-provider boundary","func_interp::get_entry","property collaborator"
"func_interp","data-provider boundary","func_interp::insert_entry","command collaborator"
"func_interp","data-provider boundary","func_interp::insert_new_entry","command collaborator"
"func_interp","data-provider boundary","func_interp::del_entry","command"
"func_interp","data-provider boundary","func_interp::eval_else","predicate collaborator"
"func_interp","data-provider boundary","func_interp::get_max_occ_result","property collaborator"
"func_interp","data-provider boundary","func_interp::compress","command collaborator"
"func_interp","data-provider boundary","func_interp::is_identity","predicate collaborator"
"func_interp","data-provider boundary","func_interp::get_interp_core","property collaborator"
"func_interp","data-provider boundary","func_interp::get_array_interp_core","property collaborator"
"func_interp","data-provider boundary","func_interp::get_interp","get property collaborator"
"func_interp","data-provider boundary","func_interp::get_array_interp","property collaborator"
"func_interp","data-provider boundary","func_interp::translate","property factory controller"
"is_qfufbv_probe","boundary degenerate small-class","operator()","wrapper stateless"
"Z3_ast_vector_ref","empty","Z3_ast_vector_ref","constructor"
"uu_eq","boundary degenerate small-class","operator()","collaborator incidental"
"macro_replacer","entity boundary","operator()","wrapper"
"macro_replacer","entity boundary","operator()","wrapper"
"macro_replacer","entity boundary","macro_replacer::insert","command collaborator"
"macro_replacer","entity boundary","macro_replacer::operator()","void-accessor command collaborator"
"macro_replacer","entity boundary","macro_replacer::has_macro","predicate non-void-command collaborator"
"parameter_pp","empty","parameter_pp","constructor"
"proof2pc","entity boundary","proof2pc","constructor"
"proof2pc","entity boundary","operator()","get wrapper"
"proof2pc","entity boundary","translate","property non-void-command collaborator"
"proof2pc","entity boundary","display","command collaborator"
"enode_parents","data-provider boundary small-class","enode_parents","constructor"
"enode_parents","data-provider boundary small-class","enode_parents","constructor"
"enode_parents","data-provider boundary small-class","begin","property collaborator"
"enode_parents","data-provider boundary small-class","end","property collaborator"
"Sort","small-class","Equals","property collaborator"
"Sort","small-class","GetHashCode","controller stateless"
"simple_ast_printer_context","data-provider boundary","env","property collaborator"
"simple_ast_printer_context","data-provider boundary","simple_ast_printer_context","constructor"
"simple_ast_printer_context","data-provider boundary","m","get collaborator"
"simple_ast_printer_context","data-provider boundary","get_ast_manager","get collaborator"
"simple_ast_printer_context","data-provider boundary","display","unclassified"
"simple_ast_printer_context","data-provider boundary","display","unclassified"
"simple_ast_printer_context","data-provider boundary","display","controller stateless"
"simple_ast_printer_context","data-provider boundary","pp","collaborator"
"simple_ast_printer_context","data-provider boundary","pp","collaborator"
"simple_ast_printer_context","data-provider boundary","pp","collaborator"
"simple_ast_printer_context","data-provider boundary","pp","collaborator"
"simple_ast_printer_context","data-provider boundary","display","wrapper stateless"
"dl_factory","entity boundary small-class","dl_factory","constructor"
"dl_factory","entity boundary small-class","mk_value_core","property non-void-command collaborator"
"arith_project_plugin::imp","boundary","~imp","destructor"
"arith_project_plugin::imp","boundary","insert_mul","controller stateless"
"arith_project_plugin::imp","boundary","linearize","predicate non-void-command collaborator"
"arith_project_plugin::imp","boundary","linearize","void-accessor command collaborator"
"arith_project_plugin::imp","boundary","is_numeral","predicate non-void-command collaborator"
"arith_project_plugin::imp","boundary","is_arith","predicate non-void-command collaborator"
"arith_project_plugin::imp","boundary","n_sign","controller stateless"
"arith_project_plugin::imp","boundary","operator()","predicate non-void-command collaborator"
"arith_project_plugin::imp","boundary","var2expr","property non-void-command collaborator"
"arith_project_plugin::imp","boundary","project","predicate non-void-command collaborator"
"arith_project_plugin::imp","boundary","optdefs2mbpdef","command collaborator"
"arith_project_plugin::imp","boundary","id2expr","property non-void-command collaborator"
"arith_project_plugin::imp","boundary","row2expr","property non-void-command collaborator"
"arith_project_plugin::imp","boundary","rows2fmls","command collaborator"
"arith_project_plugin::imp","boundary","mk_add","property non-void-command collaborator"
"arith_project_plugin::imp","boundary","maximize","property non-void-command collaborator"
"arith_project_plugin::imp","boundary","validate_model","predicate non-void-command collaborator"
"arith_project_plugin::imp","boundary","extract_coefficients","command collaborator"
"arith_project_plugin::imp","boundary","apply_projection","predicate non-void-command collaborator"
"ackr_info","unclassified","ackr_info","constructor"
"ackr_info","unclassified","~ackr_info","destructor"
"ackr_info","unclassified","set_abstr","command collaborator"
"ackr_info","unclassified","abstract","property wrapper"
"ackr_info","unclassified","find_term","controller stateless"
"ackr_info","unclassified","get_abstr","controller stateless"
"ackr_info","unclassified","seal","set"
"ackr_info","unclassified","translate","property controller"
"ackr_info","unclassified","inc_ref","set"
"ackr_info","unclassified","dec_ref","set"
"arith_plugin","boundary","~arith_plugin","destructor"
"arith_plugin","boundary","get_id","property collaborator"
"arith_plugin","boundary","diseq_eh","empty"
"arith_plugin","boundary","arith_plugin","constructor"
"arith_plugin","boundary","~arith_plugin","destructor"
"arith_plugin","boundary","assign","command collaborator"
"arith_plugin","boundary","get_num_branches","predicate non-void-command collaborator"
"arith_plugin","boundary","subst","command collaborator"
"arith_plugin","boundary","project","predicate non-void-command collaborator"
"arith_plugin","boundary","get_weight","collaborator incidental"
"arith_plugin","boundary","solve","predicate non-void-command collaborator"
"arith_plugin","boundary","mk_atom","predicate non-void-command collaborator"
"arith_plugin","boundary","is_uninterpreted","predicate non-void-command collaborator"
"arith_plugin","boundary","mk_idiv","property controller"
"arith_plugin","boundary","get_def","void-accessor command collaborator"
"arith_plugin","boundary","mk_not","property non-void-command collaborator"
"arith_plugin","boundary","project_real","predicate non-void-command collaborator"
"arith_plugin","boundary","project_int","predicate non-void-command collaborator"
"arith_plugin","boundary","find_min_max","predicate non-void-command collaborator"
"arith_plugin","boundary","get_bound_sizes","predicate non-void-command"
"arith_plugin","boundary","add_cache","command collaborator"
"arith_plugin","boundary","get_cache","predicate non-void-command collaborator"
"arith_plugin","boundary","assign_divs","command collaborator"
"arith_plugin","boundary","mk_div_equivs","command collaborator"
"arith_plugin","boundary","assign_nested_divs","void-accessor command collaborator"
"arith_plugin","boundary","get_bounds","property non-void-command collaborator"
"arith_plugin","boundary","mk_non_bounds","command collaborator"
"arith_plugin","boundary","mk_non_resolve","command collaborator"
"arith_plugin","boundary","mk_bound","command collaborator"
"arith_plugin","boundary","mk_bounds","command collaborator"
"arith_plugin","boundary","mk_resolve","command collaborator"
"arith_plugin","boundary","update_bounds","predicate non-void-command collaborator"
"arith_plugin","boundary","update_bounds","predicate non-void-command collaborator"
"arith_plugin","boundary","arith_plugin::arith_plugin","constructor"
"arith_plugin","boundary","arith_plugin::register_node","empty"
"arith_plugin","boundary","arith_plugin::merge_eh","command collaborator"
"arith_plugin","boundary","arith_plugin::propagate","command"
"arith_plugin","boundary","arith_plugin::undo","command collaborator"
"arith_plugin","boundary","arith_plugin::display","property collaborator"
"func_decls","boundary","func_decls","constructor"
"func_decls","boundary","empty","predicate"
"func_decls","boundary","func_decls::func_decls","constructor"
"func_decls","boundary","func_decls::finalize","set collaborator"
"func_decls","boundary","func_decls::signatures_collide","collaborator incidental"
"func_decls","boundary","func_decls::signatures_collide","controller stateless"
"func_decls","boundary","func_decls::contains","predicate collaborator"
"func_decls","boundary","func_decls::contains","predicate collaborator"
"func_decls","boundary","func_decls::insert","predicate set collaborator"
"func_decls","boundary","func_decls::erase","set collaborator"
"func_decls","boundary","func_decls::clash","predicate controller"
"func_decls","boundary","func_decls::more_than_one","predicate controller"
"func_decls","boundary","func_decls::first","property controller"
"func_decls","boundary","func_decls::check_signature","controller stateless"
"func_decls","boundary","func_decls::check_poly_signature","predicate non-void-command collaborator"
"func_decls","boundary","func_decls::find","property non-void-command collaborator"
"func_decls","boundary","func_decls::find","property non-void-command collaborator"
"func_decls","boundary","func_decls::get_num_entries","collaborator"
"func_decls","boundary","func_decls::get_entry","property non-void-command collaborator"
"rewriter_tpl","entity boundary","frame_stack","get collaborator"
"rewriter_tpl","entity boundary","frame_stack","get collaborator"
"rewriter_tpl","entity boundary","result_stack","get collaborator"
"rewriter_tpl","entity boundary","result_stack","get collaborator"
"rewriter_tpl","entity boundary","result_pr_stack","get collaborator"
"rewriter_tpl","entity boundary","result_pr_stack","get collaborator"
"rewriter_tpl","entity boundary","set_new_child_flag","command collaborator"
"rewriter_tpl","entity boundary","set_new_child_flag","command collaborator"
"rewriter_tpl","entity boundary","cache_results","predicate"
"rewriter_tpl","entity boundary","cache_all_results","predicate"
"rewriter_tpl","entity boundary","flat_assoc","predicate collaborator"
"rewriter_tpl","entity boundary","rewrite_patterns","predicate"
"rewriter_tpl","entity boundary","check_max_scopes","unclassified"
"rewriter_tpl","entity boundary","check_max_frames","unclassified"
"rewriter_tpl","entity boundary","check_max_steps","unclassified"
"rewriter_tpl","entity boundary","pre_visit","predicate non-void-command collaborator"
"rewriter_tpl","entity boundary","must_cache","predicate collaborator"
"rewriter_tpl","entity boundary","get_macro","predicate non-void-command collaborator"
"rewriter_tpl","entity boundary","push_frame","command"
"rewriter_tpl","entity boundary","begin_scope","command"
"rewriter_tpl","entity boundary","cache_result","command"
"rewriter_tpl","entity boundary","first_visit","collaborator incidental"
"rewriter_tpl","entity boundary","m","get collaborator"
"rewriter_tpl","entity boundary","cfg","get collaborator"
"rewriter_tpl","entity boundary","cfg","get collaborator"
"rewriter_tpl","entity boundary","~rewriter_tpl","destructor"
"rewriter_tpl","entity boundary","operator()","collaborator incidental"
"rewriter_tpl","entity boundary","operator()","property non-void-command collaborator"
"rewriter_tpl","entity boundary","resume","command collaborator"
"rewriter_tpl","entity boundary","get_num_steps","get"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::process_var","command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::process_const","predicate non-void-command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::visit","predicate non-void-command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::constant_fold","predicate non-void-command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::process_app","void-accessor command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::process_quantifier","void-accessor command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::not_rewriting","predicate"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::rewriter_tpl","constructor"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::reset","command"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::cleanup","command"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::display_bindings","command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::set_bindings","command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::set_inv_bindings","command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::update_inv_binding_at","set collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::update_binding_at","set collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::main_loop","void-accessor command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::resume_core","void-accessor command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::operator()","command collaborator"
"rewriter_tpl","entity boundary","rewriter_tpl<Config>::resume","wrapper"
"wmax","entity commander boundary","reset","command"
"wmax","entity commander boundary","wmax","constructor"
"wmax","entity commander boundary","operator()","property non-void-command collaborator"
"wmax","entity commander boundary","is_true","predicate non-void-command collaborator"
"wmax","entity commander boundary","update_assignment","command collaborator"
"wmax","entity commander boundary","mk_assumptions","command collaborator"
"wmax","entity commander boundary","verify_cores","command collaborator"
"wmax","entity commander boundary","verify_core","command collaborator"
"wmax","entity commander boundary","update_cores","command collaborator"
"wmax","entity commander boundary","remove_negations","property non-void-command collaborator"
"wmax","entity commander boundary","update_core","command collaborator"
"wmax","entity commander boundary","max_resolve","command collaborator"
"wmax","entity commander boundary","assert_weighted","property non-void-command collaborator"
"wmax","entity commander boundary","update_model","command collaborator"
"check_table_plugin::project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"demodulator_rewriter_util","entity boundary","set_rewrite1","set collaborator"
"demodulator_rewriter_util","entity boundary","demodulator_rewriter_util::demodulator_rewriter_util","constructor"
"demodulator_rewriter_util","entity boundary","demodulator_rewriter_util::rewrite","property non-void-command collaborator"
"demodulator_rewriter_util","entity boundary","demodulator_rewriter_util::rewrite_visit_children","predicate non-void-command collaborator"
"demodulator_rewriter_util","entity boundary","demodulator_rewriter_util::rewrite_cache","command"
"ast","unclassified","ast","constructor"
"ast","unclassified","ast","copy-constructor"
"ast","unclassified","ast","copy-constructor"
"ast","unclassified","~ast","destructor"
"ast","unclassified","operatorZ3_ast","get"
"ast","unclassified","operatorbool","unclassified"
"ast","unclassified","operator=","get set"
"ast","unclassified","kind","property collaborator"
"ast","unclassified","hash","unclassified"
"ast","unclassified","to_string","property"
"ast","unclassified","mark_so","set"
"ast","unclassified","reset_mark_so","set"
"ast","unclassified","is_marked_so","get"
"ast","unclassified","inc_ref","set"
"ast","unclassified","dec_ref","set"
"ast","unclassified","get_id","get"
"ast","unclassified","get_ref_count","get"
"ast","unclassified","get_kind","property collaborator"
"ast","unclassified","hash","get"
"ast","unclassified","mark1","command"
"ast","unclassified","mark2","command"
"ast","unclassified","reset_mark1","command"
"ast","unclassified","reset_mark2","command"
"ast","unclassified","is_marked1","get wrapper"
"ast","unclassified","is_marked2","get wrapper"
"ast","unclassified","mark1","set"
"ast","unclassified","mark2","set"
"ast","unclassified","reset_mark1","set"
"ast","unclassified","reset_mark2","set"
"ast","unclassified","is_marked1","get"
"ast","unclassified","is_marked2","get"
"graded_lex_gt","boundary degenerate small-class","operator()","wrapper stateless"
"contains_vars::imp","entity boundary","visit","void-accessor command collaborator"
"contains_vars::imp","entity boundary","visit_children","predicate non-void-command"
"contains_vars::imp","entity boundary","operator()","predicate non-void-command collaborator"
"already_processed_trail","commander small-class","already_processed_trail","constructor"
"already_processed_trail","commander small-class","undo","command"
"psort_decl","boundary","instantiate","collaborator incidental"
"psort_decl","boundary","instantiate","property non-void-command collaborator"
"psort_decl","boundary","has_var_params","predicate"
"psort_decl","boundary","get_name","get collaborator"
"psort_decl","boundary","is_user_decl","predicate"
"psort_decl","boundary","is_builtin_decl","predicate"
"psort_decl","boundary","is_dt_decl","predicate"
"psort_decl","boundary","psort_decl::psort_decl","constructor"
"psort_decl","boundary","psort_decl::finalize","command collaborator"
"psort_decl","boundary","psort_decl::reset_cache","set collaborator"
"psort_decl","boundary","psort_decl::cache","set collaborator"
"psort_decl","boundary","psort_decl::find","property non-void-command collaborator"
"reduce_hypotheses0","entity boundary","reset","command"
"reduce_hypotheses0","entity boundary","push","command"
"reduce_hypotheses0","entity boundary","pop","command"
"reduce_hypotheses0","entity boundary","get_literals","command collaborator"
"reduce_hypotheses0","entity boundary","add_hypotheses","command collaborator"
"reduce_hypotheses0","entity boundary","complement_lit","property non-void-command collaborator"
"reduce_hypotheses0","entity boundary","in_hypotheses","predicate non-void-command collaborator"
"reduce_hypotheses0","entity boundary","contains_hypothesis","predicate non-void-command collaborator"
"reduce_hypotheses0","entity boundary","is_closed","predicate non-void-command collaborator"
"reduce_hypotheses0","entity boundary","reduce_hypotheses0","constructor"
"reduce_hypotheses0","entity boundary","operator()","command collaborator"
"reduce_hypotheses0","entity boundary","elim","void-accessor command collaborator"
"reduce_hypotheses0","entity boundary","is_literal_in_clause","predicate non-void-command collaborator"
"scc","commander boundary","init_big","command"
"scc","commander boundary","ensure_big","command"
"scc","commander boundary","get_left","property collaborator"
"scc","commander boundary","get_right","property collaborator"
"scc","commander boundary","connected","predicate collaborator"
"scc","commander boundary","scc::scc","constructor"
"scc","commander boundary","scc::extract_roots","predicate non-void-command collaborator"
"scc","commander boundary","scc::operator()","non-void-command collaborator"
"scc","commander boundary","scc::reduce_tr","non-void-command"
"scc","commander boundary","scc::reduce_tr","command"
"scc","commander boundary","scc::collect_statistics","controller"
"scc","commander boundary","scc::reset_statistics","command"
"scc","commander boundary","scc::updt_params","command collaborator"
"scc","commander boundary","scc::collect_param_descrs","command collaborator"
"mk_atom_trail","commander boundary small-class","mk_atom_trail","constructor"
"mk_atom_trail","commander boundary small-class","undo","command collaborator"
"probe_value_tactic","commander boundary small-class","probe_value_tactic","constructor"
"probe_value_tactic","commander boundary small-class","~probe_value_tactic","destructor"
"probe_value_tactic","commander boundary small-class","operator()","command collaborator"
"bound_relation_plugin::project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"factorization_factory","data-provider boundary","factorization_factory","constructor"
"factorization_factory","data-provider boundary","get_mask","property collaborator"
"factorization_factory","data-provider boundary","begin","property collaborator"
"factorization_factory","data-provider boundary","end","property collaborator"
"expr2polynomial","entity boundary","is_int","wrapper stateless"
"expr2polynomial","entity boundary","mk_var","wrapper stateless"
"expr2polynomial","entity boundary","expr2polynomial::expr2polynomial","constructor"
"expr2polynomial","entity boundary","expr2polynomial::~expr2polynomial","destructor"
"expr2polynomial","entity boundary","expr2polynomial::m","property collaborator"
"expr2polynomial","entity boundary","expr2polynomial::pm","property collaborator"
"expr2polynomial","entity boundary","expr2polynomial::to_polynomial","predicate non-void-command collaborator"
"expr2polynomial","entity boundary","expr2polynomial::to_expr","command collaborator"
"expr2polynomial","entity boundary","expr2polynomial::is_var","predicate collaborator"
"expr2polynomial","entity boundary","expr2polynomial::get_mapping","property wrapper"
"expr2polynomial","entity boundary","expr2polynomial::set_cancel","command"
"udoc_plugin::filter_interpreted_fn","pure-controller small-class","~filter_interpreted_fn","destructor"
"udoc_plugin::filter_interpreted_fn","pure-controller small-class","operator()","controller"
"simple_var2value","entity data-provider boundary","simple_var2value","constructor"
"simple_var2value","entity data-provider boundary","push_back","command collaborator"
"simple_var2value","entity data-provider boundary","m","property collaborator"
"simple_var2value","entity data-provider boundary","contains","predicate collaborator"
"simple_var2value","entity data-provider boundary","operator()","get property collaborator"
"udoc_tester","entity commander boundary","choose_tbit","wrapper stateless"
"udoc_tester","entity commander boundary","mk_rand_tbv","property non-void-command collaborator"
"udoc_tester","entity commander boundary","mk_rand_tbv","property non-void-command collaborator"
"udoc_tester","entity commander boundary","mk_rand_doc","property non-void-command collaborator"
"udoc_tester","entity commander boundary","mk_rand_udoc","command collaborator"
"udoc_tester","entity commander boundary","mk_empty","property non-void-command collaborator"
"udoc_tester","entity commander boundary","mk_full","property non-void-command collaborator"
"udoc_tester","entity commander boundary","test1","command"
"udoc_tester","entity commander boundary","test_join_project","command"
"udoc_tester","entity commander boundary","test_join_project2","command collaborator"
"udoc_tester","entity commander boundary","test_join_project3","command collaborator"
"udoc_tester","entity commander boundary","test_rename","command collaborator"
"udoc_tester","entity commander boundary","test_join","command"
"udoc_tester","entity commander boundary","test_join","command collaborator"
"udoc_tester","entity commander boundary","mk_rand","property non-void-command collaborator"
"udoc_tester","entity commander boundary","check_permutation","command collaborator"
"udoc_tester","entity commander boundary","test_filter_neg","command"
"udoc_tester","entity commander boundary","test_filter_neg2","command collaborator"
"udoc_tester","entity commander boundary","test_filter_neg3","command collaborator"
"udoc_tester","entity commander boundary","test_filter_neg4","command collaborator"
"udoc_tester","entity commander boundary","test_filter_neg5","command collaborator"
"udoc_tester","entity commander boundary","set_random","command collaborator"
"udoc_tester","entity commander boundary","apply_filter_neg","command collaborator"
"udoc_tester","entity commander boundary","ex","property non-void-command collaborator"
"udoc_tester","entity commander boundary","apply_filter_project","command collaborator"
"udoc_tester","entity commander boundary","project_var","void-accessor command collaborator"
"udoc_tester","entity commander boundary","apply_filter","command collaborator"
"psort_var","data-provider boundary","instantiate","property wrapper"
"psort_var","data-provider boundary","obj_size","incidental"
"psort_var","data-provider boundary","hcons_kind","incidental"
"psort_var","data-provider boundary","hcons_hash","wrapper"
"psort_var","data-provider boundary","hcons_eq","predicate collaborator"
"psort_var","data-provider boundary","display","property collaborator"
"psort_var","data-provider boundary","idx","get"
"NativeSolver","pure-controller degenerate","SetParam","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Set","controller stateless"
"NativeSolver","pure-controller degenerate","Check","controller stateless"
"NativeSolver","pure-controller degenerate","Check","controller stateless"
"qi_queue_stats","boundary small-class","reset","wrapper"
"qi_queue_stats","boundary small-class","qi_queue_stats","constructor"
"Z3Object","commander","~Z3Object","destructor"
"Z3Object","commander","Dispose","command"
"Z3Object","commander","ObjectInvariant","controller"
"Z3Object","commander","Z3Object","set collaborator"
"Z3Object","commander","Z3Object","non-void-command collaborator"
"Z3Object","commander","IncRef","empty"
"Z3Object","commander","DecRef","empty"
"Z3Object","commander","CheckNativeObject","empty"
"params","boundary degenerate","params","constructor"
"params","boundary degenerate","params","copy-constructor"
"params","boundary degenerate","~params","destructor"
"params","boundary degenerate","operatorZ3_params","get"
"params","boundary degenerate","operator=","get set"
"params","boundary degenerate","set","command"
"params","boundary degenerate","set","command"
"params","boundary degenerate","set","command"
"params","boundary degenerate","set","command collaborator"
"params","boundary degenerate","set","command"
"params","boundary degenerate","~params","destructor"
"params","boundary degenerate","inc_ref","set"
"params","boundary degenerate","dec_ref","set"
"params","boundary degenerate","empty","predicate"
"params","boundary degenerate","validate","controller"
"params","boundary degenerate","display","wrapper"
"params","boundary degenerate","display_smt2","controller"
"params","boundary degenerate","display","collaborator"
"params","boundary degenerate","params::del_value","wrapper stateless"
"params","boundary degenerate","params::del_values","incidental"
"params","boundary degenerate","params::contains","wrapper stateless"
"params","boundary degenerate","params::contains","wrapper stateless"
"params","boundary degenerate","params::reset","command"
"params","boundary degenerate","params::reset","wrapper stateless"
"params","boundary degenerate","params::reset","wrapper stateless"
"params","boundary degenerate","params::get_bool","wrapper stateless"
"params","boundary degenerate","params::get_bool","wrapper stateless"
"params","boundary degenerate","params::get_uint","wrapper stateless"
"params","boundary degenerate","params::get_uint","wrapper stateless"
"params","boundary degenerate","params::get_double","wrapper stateless"
"params","boundary degenerate","params::get_double","wrapper stateless"
"params","boundary degenerate","params::get_str","wrapper stateless"
"params","boundary degenerate","params::get_str","wrapper stateless"
"params","boundary degenerate","params::get_rat","property collaborator"
"params","boundary degenerate","params::get_rat","property collaborator"
"params","boundary degenerate","params::get_sym","collaborator incidental"
"params","boundary degenerate","params::get_sym","collaborator incidental"
"params","boundary degenerate","params::get_bool","controller stateless"
"params","boundary degenerate","params::get_uint","controller stateless"
"params","boundary degenerate","params::get_double","controller stateless"
"params","boundary degenerate","params::get_str","controller stateless"
"params","boundary degenerate","params::get_sym","controller stateless"
"params","boundary degenerate","params::set_bool","wrapper stateless"
"params","boundary degenerate","params::set_bool","wrapper stateless"
"params","boundary degenerate","params::set_uint","wrapper stateless"
"params","boundary degenerate","params::set_uint","wrapper stateless"
"params","boundary degenerate","params::set_double","wrapper stateless"
"params","boundary degenerate","params::set_double","wrapper stateless"
"params","boundary degenerate","params::set_str","wrapper stateless"
"params","boundary degenerate","params::set_str","wrapper stateless"
"params","boundary degenerate","params::set_rat","wrapper stateless"
"params","boundary degenerate","params::set_rat","wrapper stateless"
"params","boundary degenerate","params::set_sym","wrapper stateless"
"params","boundary degenerate","params::set_sym","wrapper stateless"
"interval_pp","empty","interval_pp","constructor"
"interval_pp","empty","interval_pp","constructor"
"pull_quant","commander boundary","pull_quant::pull_quant","constructor"
"pull_quant","commander boundary","pull_quant::~pull_quant","destructor"
"pull_quant","commander boundary","pull_quant::operator()","wrapper stateless"
"pull_quant","commander boundary","pull_quant::reset","command"
"pull_quant","commander boundary","pull_quant::pull_quant2","command collaborator"
"sort_size","data-provider lazy-class degenerate","sort_size","constructor"
"sort_size","data-provider lazy-class degenerate","sort_size","constructor"
"sort_size","data-provider lazy-class degenerate","sort_size","constructor"
"sort_size","data-provider lazy-class degenerate","sort_size","constructor"
"sort_size","data-provider lazy-class degenerate","is_infinite","incidental"
"sort_size","data-provider lazy-class degenerate","is_very_big","incidental"
"sort_size","data-provider lazy-class degenerate","is_finite","incidental"
"sort_size","data-provider lazy-class degenerate","size","get"
"label_rewriter","small-class","label_rewriter::label_rewriter","constructor"
"label_rewriter","small-class","label_rewriter::~label_rewriter","destructor"
"label_rewriter","small-class","label_rewriter::reduce_app","property wrapper"
"label_rewriter","small-class","label_rewriter::remove_labels","controller stateless"
"finite_product_relation::live_rel_collection_reducer","commander boundary small-class","operator()","command collaborator"
"arith_rewriter","boundary","arith_rewriter","constructor"
"arith_rewriter","boundary","mk_app","void-accessor command collaborator"
"arith_rewriter","boundary","mk_eq","void-accessor command collaborator"
"arith_rewriter","boundary","mk_le","void-accessor command collaborator"
"arith_rewriter","boundary","mk_lt","command collaborator"
"arith_rewriter","boundary","mk_ge","void-accessor command collaborator"
"arith_rewriter","boundary","mk_gt","command collaborator"
"arith_rewriter","boundary","mk_div","void-accessor command collaborator"
"arith_rewriter","boundary","mk_idiv","void-accessor command collaborator"
"arith_rewriter","boundary","mk_mod","void-accessor command collaborator"
"arith_rewriter","boundary","mk_rem","void-accessor command collaborator"
"arith_rewriter","boundary","mk_to_int","void-accessor command collaborator"
"arith_rewriter","boundary","mk_to_real","void-accessor command collaborator"
"arith_rewriter","boundary","arith_rewriter::updt_local_params","command collaborator"
"arith_rewriter","boundary","arith_rewriter::updt_params","command collaborator"
"arith_rewriter","boundary","arith_rewriter::get_param_descrs","command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_app_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::get_coeffs_gcd","void-accessor command collaborator"
"arith_rewriter","boundary","arith_rewriter::div_polynomial","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_bound","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_non_negative","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_separated","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::elim_to_real_var","controller stateless"
"arith_rewriter","boundary","arith_rewriter::elim_to_real_mon","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::elim_to_real_pol","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::elim_to_real","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_reduce_power_target","controller stateless"
"arith_rewriter","boundary","arith_rewriter::reduce_power","property non-void-command factory collaborator"
"arith_rewriter","boundary","arith_rewriter::reduce_power","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_le_ge_eq_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_le_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_lt_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_ge_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_gt_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::is_arith_term","predicate collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_eq_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_and_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_eq_mod","controller stateless"
"arith_rewriter","boundary","arith_rewriter::neg_monomial","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_neg_poly","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_anum_simp_target","predicate controller"
"arith_rewriter","boundary","arith_rewriter::is_algebraic_numeral","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_add_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_mul_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_div_irrat_rat","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_div_rat_irrat","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_div_irrat_irrat","property controller"
"arith_rewriter","boundary","arith_rewriter::mk_div_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_idivides","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_idiv_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::get_divides","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::remove_divisor","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::flat_mul","controller stateless"
"arith_rewriter","boundary","arith_rewriter::remove_divisor","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_mod_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::get_range","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_rem_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_shl_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_ashr_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_lshr_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_band_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_power_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_to_int_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_to_real_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_is_int","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_abs_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::is_pi_multiple","controller stateless"
"arith_rewriter","boundary","arith_rewriter::is_pi_offset","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_2_pi_integer","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_2_pi_integer_offset","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::is_pi_integer","controller stateless"
"arith_rewriter","boundary","arith_rewriter::is_pi_integer_offset","predicate non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_sqrt","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_sin_value","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_sin_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_cos_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_tan_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_asin_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_acos_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_atan_core","property non-void-command collaborator"
"arith_rewriter","boundary","arith_rewriter::mk_sinh_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_cosh_core","controller stateless"
"arith_rewriter","boundary","arith_rewriter::mk_tanh_core","controller stateless"
"int_solver","data-provider boundary","get_term","get collaborator"
"int_solver","data-provider boundary","get_offset","get collaborator"
"int_solver","data-provider boundary","is_upper","get"
"int_solver","data-provider boundary","equalities","get collaborator"
"int_solver","data-provider boundary","int_solver::int_solver","constructor"
"int_solver","data-provider boundary","int_solver::check","property non-void-command collaborator"
"int_solver","data-provider boundary","int_solver::display_inf_rows","property collaborator"
"int_solver","data-provider boundary","int_solver::cut_indices_are_columns","predicate collaborator"
"int_solver","data-provider boundary","int_solver::current_solution_is_inf_on_cut","predicate collaborator"
"int_solver","data-provider boundary","int_solver::has_inf_int","predicate"
"int_solver","data-provider boundary","int_solver::column_upper_bound_constraint","property collaborator"
"int_solver","data-provider boundary","int_solver::column_lower_bound_constraint","property collaborator"
"int_solver","data-provider boundary","int_solver::row_of_basic_column","unclassified"
"int_solver","data-provider boundary","int_solver::settings","property non-void-command collaborator"
"int_solver","data-provider boundary","int_solver::settings","property collaborator"
"int_solver","data-provider boundary","int_solver::column_is_int","predicate collaborator"
"int_solver","data-provider boundary","int_solver::is_real","predicate"
"int_solver","data-provider boundary","int_solver::value_is_int","predicate"
"int_solver","data-provider boundary","int_solver::random","non-void-command"
"int_solver","data-provider boundary","int_solver::upper_bound","property collaborator"
"int_solver","data-provider boundary","int_solver::lower_bound","property collaborator"
"int_solver","data-provider boundary","int_solver::is_term","predicate"
"int_solver","data-provider boundary","int_solver::column_count","unclassified"
"int_solver","data-provider boundary","int_solver::should_find_cube","predicate non-void-command"
"int_solver","data-provider boundary","int_solver::should_gomory_cut","predicate non-void-command"
"int_solver","data-provider boundary","int_solver::should_hnf_cut","predicate non-void-command"
"int_solver","data-provider boundary","int_solver::hnf_cut","property non-void-command collaborator"
"int_solver","data-provider boundary","int_solver::has_lower","predicate"
"int_solver","data-provider boundary","int_solver::has_upper","predicate"
"int_solver","data-provider boundary","int_solver::get_freedom_interval_for_column","predicate non-void-command collaborator"
"int_solver","data-provider boundary","int_solver::is_feasible","predicate"
"int_solver","data-provider boundary","int_solver::get_value","property collaborator"
"int_solver","data-provider boundary","int_solver::display_column","property collaborator"
"int_solver","data-provider boundary","int_solver::column_is_int_inf","predicate"
"int_solver","data-provider boundary","int_solver::is_base","predicate"
"int_solver","data-provider boundary","int_solver::is_boxed","predicate"
"int_solver","data-provider boundary","int_solver::is_fixed","predicate"
"int_solver","data-provider boundary","int_solver::is_free","predicate"
"int_solver","data-provider boundary","int_solver::at_bound","predicate"
"int_solver","data-provider boundary","int_solver::at_lower","predicate"
"int_solver","data-provider boundary","int_solver::at_upper","predicate"
"int_solver","data-provider boundary","int_solver::display_row","property collaborator"
"int_solver","data-provider boundary","int_solver::display_row_info","property collaborator"
"int_solver","data-provider boundary","int_solver::shift_var","predicate non-void-command collaborator"
"int_solver","data-provider boundary","int_solver::select_int_infeasible_var","property non-void-command collaborator"
"int_solver","data-provider boundary","int_solver::simplify","collaborator incidental"
"int_cube","entity boundary","int_cube::int_cube","constructor"
"int_cube","entity boundary","int_cube::operator()","property non-void-command collaborator"
"int_cube","entity boundary","int_cube::tighten_term_for_cube","predicate non-void-command collaborator"
"int_cube","entity boundary","int_cube::tighten_terms_for_cube","predicate non-void-command collaborator"
"int_cube","entity boundary","int_cube::find_feasible_solution","command"
"int_cube","entity boundary","int_cube::get_cube_delta_for_term","property collaborator"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::pb2bv_rewriter","constructor"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::~pb2bv_rewriter","destructor"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::updt_params","command collaborator"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::collect_param_descrs","collaborator"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::m","property collaborator"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::get_num_steps","unclassified"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::cleanup","set collaborator"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::fresh_constants","property collaborator"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::operator()","wrapper stateless"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::push","command"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::pop","command"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::flush_side_constraints","command collaborator"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::num_translated","unclassified"
"pb2bv_rewriter","entity commander boundary","pb2bv_rewriter::collect_statistics","collaborator"
"dependent_expr_simplifier","data-provider","num_scopes","unclassified"
"dependent_expr_simplifier","data-provider","qhead","unclassified"
"dependent_expr_simplifier","data-provider","qtail","unclassified"
"dependent_expr_simplifier","data-provider","indices","property wrapper"
"dependent_expr_simplifier","data-provider","mp","property non-void-command collaborator"
"dependent_expr_simplifier","data-provider","tr","property non-void-command collaborator"
"dependent_expr_simplifier","data-provider","~dependent_expr_simplifier","destructor"
"dependent_expr_simplifier","data-provider","push","empty"
"dependent_expr_simplifier","data-provider","pop","empty"
"dependent_expr_simplifier","data-provider","collect_statistics","empty"
"dependent_expr_simplifier","data-provider","reset_statistics","empty"
"dependent_expr_simplifier","data-provider","updt_params","empty"
"dependent_expr_simplifier","data-provider","collect_param_descrs","empty"
"dependent_expr_simplifier","data-provider","supports_proofs","incidental"
"dependent_expr_simplifier","data-provider","get_manager","get collaborator"
"dependent_expr_simplifier","data-provider","get_fmls","get collaborator"
"interval_relation_plugin::filter_interpreted_fn","boundary small-class","operator()","wrapper"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","Add","get controller"
"Params","controller","ToString","controller stateless"
"Params","controller","Params","constructor"
"Params","controller","IncRef","controller stateless"
"Params","controller","DecRef","controller stateless"
"eq_proof_hint","controller small-class","eq_proof_hint","constructor"
"eq_proof_hint","controller small-class","eq_proof_hint::get_hint","property controller"
"ArithExpr","empty","ArithExpr","constructor"
"is_non_qflira_functor","entity boundary","operator()","wrapper stateless"
"is_non_qflira_functor","entity boundary","operator()","wrapper stateless"
"is_non_qflira_functor","entity boundary","compatible_sort","predicate collaborator"
"is_non_qflira_functor","entity boundary","operator()","command collaborator"
"pop_mon","commander small-class","pop_mon","constructor"
"pop_mon","commander small-class","undo","command"
"fpa_rewriter","entity boundary","m","property collaborator"
"fpa_rewriter","entity boundary","get_fid","property collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::fpa_rewriter","constructor"
"fpa_rewriter","entity boundary","fpa_rewriter::updt_params","set collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::get_param_descrs","empty"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_app_core","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_to_fp","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_to_fp_unsigned","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_add","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_sub","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_mul","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_div","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_neg","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_rem","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_abs","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_min","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_max","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_fma","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_sqrt","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_round_to_integral","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_float_eq","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_eq_nan","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_neq_nan","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_lt","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_gt","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_le","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_ge","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_zero","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_nzero","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_pzero","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_nan","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_inf","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_normal","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_subnormal","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_negative","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_is_positive","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_eq_core","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_bv2rm","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_fp","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_to_bv","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_to_bv_unspecified","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_to_ubv","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_to_sbv","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_to_ieee_bv","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_to_real","property non-void-command collaborator"
"fpa_rewriter","entity boundary","fpa_rewriter::mk_bvwrap","property non-void-command collaborator"
"ArithSort","empty","ArithSort","constructor"
"der_tactic","boundary degenerate","translate","wrapper stateless"
"der_tactic","boundary degenerate","~der_tactic","destructor"
"der_tactic","boundary degenerate","name","incidental"
"der_tactic","boundary degenerate","operator()","controller stateless"
"der_tactic","boundary degenerate","cleanup","command collaborator"
"well_sorted_proc","commander boundary lazy-class","well_sorted_proc","constructor"
"well_sorted_proc","commander boundary lazy-class","operator()","empty"
"well_sorted_proc","commander boundary lazy-class","operator()","set collaborator"
"well_sorted_proc","commander boundary lazy-class","operator()","set collaborator"
"rule_set","boundary","get_rule_manager","property collaborator"
"rule_set","boundary","get_context","get collaborator"
"rule_set","boundary","is_closed","predicate"
"rule_set","boundary","get_num_rules","unclassified"
"rule_set","boundary","empty","predicate"
"rule_set","boundary","get_rule","get collaborator"
"rule_set","boundary","last","get collaborator"
"rule_set","boundary","get_rules","get collaborator"
"rule_set","boundary","contains","controller stateless"
"rule_set","boundary","get_stratifier","get wrapper"
"rule_set","boundary","get_dependencies","get collaborator"
"rule_set","boundary","set_output_predicate","command collaborator"
"rule_set","boundary","is_output_predicate","predicate collaborator"
"rule_set","boundary","inherit_output_predicate","command collaborator"
"rule_set","boundary","get_output_predicates","get collaborator"
"rule_set","boundary","get_output_predicate","property collaborator"
"rule_set","boundary","begin","property collaborator"
"rule_set","boundary","end","property collaborator"
"rule_set","boundary","begin_grouped_rules","controller stateless"
"rule_set","boundary","end_grouped_rules","controller stateless"
"rule_set","boundary","rule_set::rule_set","constructor"
"rule_set","boundary","rule_set::rule_set","copy-constructor"
"rule_set","boundary","rule_set::~rule_set","destructor"
"rule_set","boundary","rule_set::reset","command"
"rule_set","boundary","rule_set::get_manager","property collaborator"
"rule_set","boundary","rule_set::get_orig","controller stateless"
"rule_set","boundary","rule_set::get_pred","controller stateless"
"rule_set","boundary","rule_set::inherit_predicates","command"
"rule_set","boundary","rule_set::inherit_predicate","void-accessor command collaborator"
"rule_set","boundary","rule_set::add_rule","command collaborator"
"rule_set","boundary","rule_set::del_rule","controller"
"rule_set","boundary","rule_set::replace_rule","controller"
"rule_set","boundary","rule_set::ensure_closed","command"
"rule_set","boundary","rule_set::close","predicate non-void-command"
"rule_set","boundary","rule_set::reopen","command"
"rule_set","boundary","rule_set::stratified_negation","predicate non-void-command"
"rule_set","boundary","rule_set::replace_rules","command"
"rule_set","boundary","rule_set::add_rules","command"
"rule_set","boundary","rule_set::get_predicate_rules","get property controller"
"rule_set","boundary","rule_set::get_strats","property collaborator"
"rule_set","boundary","rule_set::get_predicate_strat","collaborator"
"rule_set","boundary","rule_set::split_founded_rules","command collaborator"
"rule_set","boundary","rule_set::display","collaborator"
"rule_set","boundary","rule_set::is_finite_domain","predicate collaborator"
"rule_set","boundary","rule_set::display_deps","collaborator"
"mp_iff_justification","unclassified","mp_iff_justification","constructor"
"mp_iff_justification","unclassified","get_name","incidental"
"mp_iff_justification","unclassified","mp_iff_justification::get_antecedents","controller"
"mp_iff_justification","unclassified","mp_iff_justification::mk_proof","property controller"
"ArrayExpr","empty","ArrayExpr","constructor"
"finite_product_relation_plugin::project_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::theory_array_full","constructor"
"theory_array_full","boundary","theory_array_full::~theory_array_full","destructor"
"theory_array_full","boundary","theory_array_full::mk_fresh","wrapper stateless"
"theory_array_full","boundary","theory_array_full::add_map","command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_axiom_map_for","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::add_parent_map","command collaborator"
"theory_array_full","boundary","theory_array_full::set_prop_upward","command collaborator"
"theory_array_full","boundary","theory_array_full::set_prop_upward","command collaborator"
"theory_array_full","boundary","theory_array_full::set_prop_upward","command collaborator"
"theory_array_full","boundary","theory_array_full::get_lambda_equiv_size","controller"
"theory_array_full","boundary","theory_array_full::add_const","command collaborator"
"theory_array_full","boundary","theory_array_full::add_lambda","command collaborator"
"theory_array_full","boundary","theory_array_full::add_as_array","command collaborator"
"theory_array_full","boundary","theory_array_full::reset_eh","command"
"theory_array_full","boundary","theory_array_full::display_var","collaborator"
"theory_array_full","boundary","theory_array_full::mk_var","property non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::internalize_atom","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::internalize_term","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::merge_eh","command collaborator"
"theory_array_full","boundary","theory_array_full::add_parent_default","command collaborator"
"theory_array_full","boundary","theory_array_full::add_parent_select","command collaborator"
"theory_array_full","boundary","theory_array_full::relevant_eh","command collaborator"
"theory_array_full","boundary","theory_array_full::should_research","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::add_theory_assumptions","command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_select_map_axiom","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_default_map_axiom","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_default_const_axiom","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_default_as_array_axiom","collaborator incidental"
"theory_array_full","boundary","theory_array_full::instantiate_default_lambda_def_axiom","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::has_unitary_domain","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::has_large_domain","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_select_const_axiom","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_select_as_array_axiom","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_default_store_axiom","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::mk_epsilon","property non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::assert_delayed_axioms","property non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::has_non_beta_as_array","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::instantiate_parent_stores_default","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::try_assign_eq","predicate non-void-command collaborator"
"theory_array_full","boundary","theory_array_full::pop_scope_eh","command"
"theory_array_full","boundary","theory_array_full::collect_statistics","collaborator"
"array_recognizers","data-provider boundary","array_recognizers","constructor"
"array_recognizers","data-provider boundary","get_family_id","get collaborator"
"array_recognizers","data-provider boundary","is_array","predicate wrapper"
"array_recognizers","data-provider boundary","is_array","predicate collaborator"
"array_recognizers","data-provider boundary","is_select","predicate wrapper"
"array_recognizers","data-provider boundary","is_store","predicate wrapper"
"array_recognizers","data-provider boundary","is_const","predicate wrapper"
"array_recognizers","data-provider boundary","is_ext","predicate wrapper"
"array_recognizers","data-provider boundary","is_ext","predicate wrapper"
"array_recognizers","data-provider boundary","is_map","predicate wrapper"
"array_recognizers","data-provider boundary","is_union","predicate wrapper"
"array_recognizers","data-provider boundary","is_intersect","predicate wrapper"
"array_recognizers","data-provider boundary","is_difference","predicate wrapper"
"array_recognizers","data-provider boundary","is_complement","predicate wrapper"
"array_recognizers","data-provider boundary","is_as_array","predicate wrapper"
"array_recognizers","data-provider boundary","is_as_array","predicate collaborator"
"array_recognizers","data-provider boundary","is_set_has_size","predicate wrapper"
"array_recognizers","data-provider boundary","is_set_card","predicate wrapper"
"array_recognizers","data-provider boundary","is_select","predicate wrapper"
"array_recognizers","data-provider boundary","is_store","predicate wrapper"
"array_recognizers","data-provider boundary","is_const","predicate wrapper"
"array_recognizers","data-provider boundary","is_map","predicate wrapper"
"array_recognizers","data-provider boundary","is_union","predicate wrapper"
"array_recognizers","data-provider boundary","is_intersect","predicate wrapper"
"array_recognizers","data-provider boundary","is_as_array","predicate wrapper"
"array_recognizers","data-provider boundary","is_set_has_size","predicate wrapper"
"array_recognizers","data-provider boundary","is_set_card","predicate wrapper"
"array_recognizers","data-provider boundary","is_default","predicate wrapper"
"array_recognizers","data-provider boundary","is_default","predicate wrapper"
"array_recognizers","data-provider boundary","is_subset","predicate wrapper"
"array_recognizers","data-provider boundary","is_as_array","predicate collaborator"
"array_recognizers","data-provider boundary","is_map","predicate collaborator"
"array_recognizers","data-provider boundary","get_map_func_decl","property collaborator"
"array_recognizers","data-provider boundary","is_select1","predicate collaborator"
"array_recognizers","data-provider boundary","is_select1","predicate collaborator"
"array_recognizers","data-provider boundary","is_store1","predicate collaborator"
"array_recognizers","data-provider boundary","is_store1","predicate collaborator"
"array_recognizers","data-provider boundary","array_recognizers::get_as_array_func_decl","property collaborator"
"array_recognizers","data-provider boundary","array_recognizers::get_map_func_decl","controller stateless"
"array_recognizers","data-provider boundary","array_recognizers::get_as_array_func_decl","property collaborator"
"array_recognizers","data-provider boundary","array_recognizers::is_const","predicate collaborator"
"array_recognizers","data-provider boundary","array_recognizers::is_store_ext","predicate non-void-command collaborator"
"theory_pb::pb_model_value_proc","entity boundary","add","command collaborator"
"theory_pb::pb_model_value_proc","entity boundary","get_dependencies","command collaborator"
"theory_pb::pb_model_value_proc","entity boundary","mk_value","get property non-void-command collaborator"
"for_each_symbol_proc","commander degenerate","for_each_symbol_proc","constructor"
"for_each_symbol_proc","commander degenerate","operator()","command collaborator"
"for_each_symbol_proc","commander degenerate","operator()","command collaborator"
"for_each_symbol_proc","commander degenerate","operator()","empty"
"for_each_symbol_proc","commander degenerate","operator()","empty"
"for_each_symbol_proc","commander degenerate","operator()","empty"
"sparse_table::key_indexer","degenerate small-class","update","empty"
"enum2bv_rewriter::imp","commander boundary","updt_params","empty"
"enum2bv_rewriter::imp","commander boundary","get_num_steps","unclassified"
"enum2bv_rewriter::imp","commander boundary","cleanup","command"
"enum2bv_rewriter::imp","commander boundary","operator()","wrapper stateless"
"enum2bv_rewriter::imp","commander boundary","push","command"
"enum2bv_rewriter::imp","commander boundary","pop","command collaborator"
"enum2bv_rewriter::imp","commander boundary","flush_side_constraints","command collaborator"
"enum2bv_rewriter::imp","commander boundary","is_fd","predicate non-void-command collaborator"
"enum2bv_rewriter::imp","commander boundary","set_is_fd","set collaborator"
"atom","data-provider boundary","is_eq","predicate"
"atom","data-provider boundary","is_ineq_atom","predicate"
"atom","data-provider boundary","is_root_atom","predicate"
"atom","data-provider boundary","get_kind","get collaborator"
"atom","data-provider boundary","bvar","get collaborator"
"atom","data-provider boundary","max_var","get collaborator"
"atom","data-provider boundary","ref_count","get"
"atom","data-provider boundary","inc_ref","set"
"atom","data-provider boundary","dec_ref","set"
"atom","data-provider boundary","theory_arith<Ext>::atom::atom","copy-constructor"
"atom","data-provider boundary","theory_arith<Ext>::atom::assign_eh","wrapper stateless"
"atom","data-provider boundary","theory_arith<Ext>::atom::display","controller stateless"
"atom","data-provider boundary","theory_diff_logic<Ext>::atom::display","controller stateless"
"atom","data-provider boundary","theory_utvpi<Ext>::atom::display","controller stateless"
"product_relation_plugin::transform_fn","entity boundary small-class","~transform_fn","destructor"
"product_relation_plugin::transform_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"counter","unclassified","reset","command"
"counter","unclassified","begin","property collaborator"
"counter","unclassified","end","property collaborator"
"counter","unclassified","count","property non-void-command"
"counter","unclassified","counter::update","command"
"counter","unclassified","counter::get","property non-void-command"
"counter","unclassified","counter::count","get non-void-command"
"counter","unclassified","counter::get_positive_count","collaborator"
"counter","unclassified","counter::collect_positive","controller"
"counter","unclassified","counter::get_max_positive","predicate collaborator"
"counter","unclassified","counter::get_max_positive","unclassified"
"counter","unclassified","counter::get_max_counter_value","property collaborator"
"str_eq_proc","boundary degenerate small-class","operator()","wrapper stateless"
"sls_eval","boundary","random_bool","wrapper stateless"
"sls_eval","boundary","wval","property non-void-command collaborator"
"sls_eval","boundary","eval_value","property collaborator"
"sls_eval","boundary","tighten_range","command collaborator"
"sls_eval","boundary","bval0","get controller"
"sls_eval","boundary","is_fixed0","predicate collaborator"
"sls_eval","boundary","set","set"
"sls_eval","boundary","sls_eval::sls_eval","constructor"
"sls_eval","boundary","sls_eval::init_eval","command collaborator"
"sls_eval","boundary","sls_eval::sort_assertions","get property non-void-command collaborator"
"sls_eval","boundary","sls_eval::add_bit_vector","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::alloc_valuation","property non-void-command collaborator"
"sls_eval","boundary","sls_eval::init_eval_basic","command collaborator"
"sls_eval","boundary","sls_eval::init_eval_bv","command collaborator"
"sls_eval","boundary","sls_eval::bval1_basic","predicate collaborator"
"sls_eval","boundary","sls_eval::can_eval1","predicate collaborator"
"sls_eval","boundary","sls_eval::bval1_bv","predicate collaborator"
"sls_eval","boundary","sls_eval::bval1","predicate collaborator"
"sls_eval","boundary","sls_eval::eval","property collaborator"
"sls_eval","boundary","sls_eval::eval","void-accessor collaborator"
"sls_eval","boundary","sls_eval::random_bits","property non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_basic","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_bv","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_and_or","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_not","predicate set collaborator"
"sls_eval","boundary","sls_eval::try_repair_eq","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_eq","predicate controller"
"sls_eval","boundary","sls_eval::try_repair_xor","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_ite","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_implies","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_band","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_bor","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_bxor","predicate set collaborator"
"sls_eval","boundary","sls_eval::try_repair_add","predicate controller"
"sls_eval","boundary","sls_eval::try_repair_sub","predicate controller"
"sls_eval","boundary","sls_eval::try_repair_mul","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_bnot","predicate set collaborator"
"sls_eval","boundary","sls_eval::try_repair_bneg","predicate controller"
"sls_eval","boundary","sls_eval::try_repair_sle","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_sge","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_sle","predicate controller"
"sls_eval","boundary","sls_eval::try_repair_sge","predicate controller"
"sls_eval","boundary","sls_eval::add_p2_1","collaborator"
"sls_eval","boundary","sls_eval::try_repair_ule","predicate controller"
"sls_eval","boundary","sls_eval::try_repair_uge","predicate controller"
"sls_eval","boundary","sls_eval::try_repair_bit2bool","controller stateless"
"sls_eval","boundary","sls_eval::try_repair_shl","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_ashr","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_lshr","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_lshr0","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_lshr1","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_ashr0","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_ashr1","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::try_repair_comp","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_udiv","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_urem","predicate non-void-command"
"sls_eval","boundary","sls_eval::add_overflow_on_fixed","predicate set collaborator"
"sls_eval","boundary","sls_eval::mul_overflow_on_fixed","predicate set collaborator"
"sls_eval","boundary","sls_eval::try_repair_rotate_left","predicate"
"sls_eval","boundary","sls_eval::try_repair_rotate_left","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_rotate_right","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_umul_ovfl","predicate controller"
"sls_eval","boundary","sls_eval::try_repair_sign_ext","predicate set collaborator"
"sls_eval","boundary","sls_eval::try_repair_zero_ext","predicate set collaborator"
"sls_eval","boundary","sls_eval::try_repair_concat","predicate non-void-command"
"sls_eval","boundary","sls_eval::try_repair_extract","predicate non-void-command"
"sls_eval","boundary","sls_eval::set_div","void-accessor collaborator"
"sls_eval","boundary","sls_eval::repair_up","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::wval","get controller"
"sls_eval","boundary","sls_eval::init_eval","command collaborator"
"sls_eval","boundary","sls_eval::commit_eval","command collaborator"
"sls_eval","boundary","sls_eval::set_random","command collaborator"
"sls_eval","boundary","sls_eval::eval_is_correct","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::re_eval_is_correct","predicate non-void-command collaborator"
"sls_eval","boundary","sls_eval::get_value","property non-void-command collaborator"
"sls_eval","boundary","sls_eval::display","property non-void-command collaborator"
"sls_eval","boundary","sls_eval::display_value","property non-void-command collaborator"
"der","entity boundary","der","constructor"
"der","entity boundary","der::is_var_diseq","predicate non-void-command collaborator"
"der","entity boundary","der::is_var_eq","predicate non-void-command collaborator"
"der","entity boundary","der::operator()","void-accessor command collaborator"
"der","entity boundary","der::reduce1","void-accessor command collaborator"
"der","entity boundary","der::get_elimination_order","command"
"der","entity boundary","der::create_substitution","command"
"der","entity boundary","der::apply_substitution","void-accessor command collaborator"
"max_bv_sharing","commander","max_bv_sharing","constructor"
"max_bv_sharing","commander","reset_statistics","set"
"max_bv_sharing","commander","collect_statistics","controller"
"max_bv_sharing","commander","name","incidental"
"max_bv_sharing","commander","reduce","command"
"max_bv_sharing","commander","push","command"
"max_bv_sharing","commander","pop","command"
"bv_elim_rw","empty","bv_elim_rw","constructor"
"lackr_model_converter_lazy","boundary degenerate","lackr_model_converter_lazy","constructor"
"lackr_model_converter_lazy","boundary degenerate","operator()","void-accessor command collaborator"
"lackr_model_converter_lazy","boundary degenerate","get_units","controller stateless"
"lackr_model_converter_lazy","boundary degenerate","translate","wrapper stateless"
"lackr_model_converter_lazy","boundary degenerate","display","collaborator incidental"
"scoped_proof_mode","empty","scoped_proof_mode","constructor"
"scoped_proof_mode","empty","~scoped_proof_mode","destructor"
"mk_bit_blast::impl","entity boundary small-class","blast","predicate non-void-command collaborator"
"mk_bit_blast::impl","entity boundary small-class","operator()","property non-void-command collaborator"
"instantiate_cmd","empty","instantiate_cmd","constructor"
"psm_glue_lt","pure-controller degenerate small-class","operator()","controller stateless"
"BoolExpr","empty","BoolExpr","constructor"
"array_expr_inverter","entity boundary","array_expr_inverter","constructor"
"array_expr_inverter","entity boundary","get_fid","property collaborator"
"array_expr_inverter","entity boundary","operator()","predicate non-void-command collaborator"
"array_expr_inverter","entity boundary","mk_diff","predicate non-void-command collaborator"
"scoped_proof","empty","scoped_proof","constructor"
"size_probe","pure-controller degenerate small-class","operator()","controller stateless"
"restore_vec_size_trail","commander small-class","restore_vec_size_trail","constructor"
"restore_vec_size_trail","commander small-class","undo","command"
"basics","entity boundary","basics::basics","constructor"
"basics","entity boundary","basics::basic_sign_lemma_on_two_monics","predicate non-void-command collaborator"
"basics","entity boundary","basics::generate_zero_lemmas","command collaborator"
"basics","entity boundary","basics::try_get_non_strict_sign_from_bounds","predicate"
"basics","entity boundary","basics::get_non_strict_sign","void-accessor collaborator"
"basics","entity boundary","basics::basic_sign_lemma_model_based_one_mon","command collaborator"
"basics","entity boundary","basics::basic_sign_lemma_model_based","predicate non-void-command"
"basics","entity boundary","basics::basic_sign_lemma_on_mon","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_sign_lemma","predicate non-void-command collaborator"
"basics","entity boundary","basics::generate_sign_lemma","command collaborator"
"basics","entity boundary","basics::find_best_zero","property collaborator"
"basics","entity boundary","basics::add_trivial_zero_lemma","command collaborator"
"basics","entity boundary","basics::generate_strict_case_zero_lemma","command"
"basics","entity boundary","basics::add_fixed_zero_lemma","command collaborator"
"basics","entity boundary","basics::negate_strict_sign","void-accessor command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_zero","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_lemma","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon","command"
"basics","entity boundary","basics::basic_lemma_for_mon_derived","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_non_zero_derived","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_neutral_derived","predicate non-void-command collaborator"
"basics","entity boundary","basics::proportion_lemma_model_based","command collaborator"
"basics","entity boundary","basics::generate_pl_on_mon","command collaborator"
"basics","entity boundary","basics::generate_pl","command collaborator"
"basics","entity boundary","basics::is_separated_from_zero","predicate collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_zero_model_based","command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_model_based","command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_neutral_from_factors_to_monic_model_based_fm","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_neutral_monic_to_factor_model_based","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_neutral_model_based","command collaborator"
"basics","entity boundary","basics::can_create_lemma_for_mon_neutral_from_factors_to_monic_model_based","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_neutral_from_factors_to_monic_model_based","predicate non-void-command collaborator"
"basics","entity boundary","basics::basic_lemma_for_mon_non_zero_model_based","command collaborator"
"ac_plugin","boundary","is_op","predicate controller"
"ac_plugin","boundary","to_monomial","non-void-command collaborator"
"ac_plugin","boundary","monomial","get collaborator"
"ac_plugin","boundary","monomial","get collaborator"
"ac_plugin","boundary","is_to_simplify","get"
"ac_plugin","boundary","is_processed","get"
"ac_plugin","boundary","is_alive","get"
"ac_plugin","boundary","display_monomial","get collaborator"
"ac_plugin","boundary","~ac_plugin","destructor"
"ac_plugin","boundary","get_id","get collaborator"
"ac_plugin","boundary","set_undo","set collaborator"
"ac_plugin","boundary","ac_plugin::ac_plugin","constructor"
"ac_plugin","boundary","ac_plugin::ac_plugin","constructor"
"ac_plugin","boundary","ac_plugin::register_node","command collaborator"
"ac_plugin","boundary","ac_plugin::register_shared","command collaborator"
"ac_plugin","boundary","ac_plugin::undo","command collaborator"
"ac_plugin","boundary","ac_plugin::display_monomial","property collaborator"
"ac_plugin","boundary","ac_plugin::display_equation","property collaborator"
"ac_plugin","boundary","ac_plugin::display_status","collaborator incidental"
"ac_plugin","boundary","ac_plugin::display","property collaborator"
"ac_plugin","boundary","ac_plugin::merge_eh","command collaborator"
"ac_plugin","boundary","ac_plugin::diseq_eh","command collaborator"
"ac_plugin","boundary","ac_plugin::init_equation","command collaborator"
"ac_plugin","boundary","ac_plugin::orient_equation","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::sort","controller stateless"
"ac_plugin","boundary","ac_plugin::is_sorted","predicate controller"
"ac_plugin","boundary","ac_plugin::filter","property non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::can_be_subset","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::can_be_subset","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::merge","command collaborator"
"ac_plugin","boundary","ac_plugin::push_undo","command collaborator"
"ac_plugin","boundary","ac_plugin::to_monomial","non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::to_monomial","non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::mk_node","get property non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::propagate","command collaborator"
"ac_plugin","boundary","ac_plugin::pick_next_eq","non-void-command"
"ac_plugin","boundary","ac_plugin::set_status","command collaborator"
"ac_plugin","boundary","ac_plugin::superpose_iterator","get non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::backward_iterator","get non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::init_overlap_iterator","command collaborator"
"ac_plugin","boundary","ac_plugin::init_subset_iterator","command collaborator"
"ac_plugin","boundary","ac_plugin::compress_eq_occurs","command collaborator"
"ac_plugin","boundary","ac_plugin::forward_iterator","property non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::init_ref_counts","collaborator"
"ac_plugin","boundary","ac_plugin::init_ref_counts","controller stateless"
"ac_plugin","boundary","ac_plugin::is_correct_ref_count","predicate collaborator"
"ac_plugin","boundary","ac_plugin::is_correct_ref_count","predicate collaborator"
"ac_plugin","boundary","ac_plugin::forward_simplify","command collaborator"
"ac_plugin","boundary","ac_plugin::backward_simplify","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::backward_subsumes","get predicate non-void-command"
"ac_plugin","boundary","ac_plugin::forward_subsumes","get predicate non-void-command"
"ac_plugin","boundary","ac_plugin::rewrite1","void-accessor command collaborator"
"ac_plugin","boundary","ac_plugin::reduce","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::is_subset","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::is_superset","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::index_new_r","command collaborator"
"ac_plugin","boundary","ac_plugin::superpose","command collaborator"
"ac_plugin","boundary","ac_plugin::are_equal","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::are_equal","predicate non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::propagate_shared","command collaborator"
"ac_plugin","boundary","ac_plugin::simplify_shared","command collaborator"
"ac_plugin","boundary","ac_plugin::justify_rewrite","property non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::justify_equation","property non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::justify_monomial","property non-void-command collaborator"
"ac_plugin","boundary","ac_plugin::join","property non-void-command collaborator"
"sls_evaluator","commander boundary","sls_evaluator","constructor"
"sls_evaluator","commander boundary","~sls_evaluator","destructor"
"sls_evaluator","commander boundary","operator()","command collaborator"
"sls_evaluator","commander boundary","eval_checked","command collaborator"
"sls_evaluator","commander boundary","run_serious_update","command"
"sls_evaluator","commander boundary","run_update","command"
"sls_evaluator","commander boundary","update_all","command"
"sls_evaluator","commander boundary","update","command collaborator"
"sls_evaluator","commander boundary","serious_update","command collaborator"
"sls_evaluator","commander boundary","run_update_bool_prune","non-void-command"
"sls_evaluator","commander boundary","run_update_prune","command"
"sls_evaluator","commander boundary","update_prune","non-void-command collaborator"
"sls_evaluator","commander boundary","randomize_local","command collaborator"
"sls_evaluator","commander boundary","randomize_local","command collaborator"
"sls_evaluator","commander boundary","randomize_local","command collaborator"
"cg_table","boundary","get_table","get command collaborator"
"cg_table","boundary","contains","predicate collaborator"
"cg_table","boundary","find","property collaborator"
"cg_table","boundary","contains_ptr","predicate collaborator"
"cg_table","boundary","cg_table::cg_table","constructor"
"cg_table","boundary","cg_table::~cg_table","destructor"
"cg_table","boundary","cg_table::mk_table_for","property controller"
"cg_table","boundary","cg_table::set_func_decl_id","non-void-command collaborator"
"cg_table","boundary","cg_table::reset","command collaborator"
"cg_table","boundary","cg_table::display","collaborator"
"cg_table","boundary","cg_table::display_binary","controller stateless"
"cg_table","boundary","cg_table::display_binary_comm","controller stateless"
"cg_table","boundary","cg_table::display_unary","controller stateless"
"cg_table","boundary","cg_table::display_nary","controller stateless"
"cg_table","boundary","cg_table::insert","property non-void-command collaborator"
"cg_table","boundary","cg_table::erase","command collaborator"
"cg_table","boundary","cg_table::display_compact","empty"
"cg_table","boundary","cg_table::check_invariant","incidental"
"blaster_rewriter_cfg","boundary","m","get collaborator"
"blaster_rewriter_cfg","boundary","butil","property non-void-command collaborator"
"blaster_rewriter_cfg","boundary","cleanup_buffers","command"
"blaster_rewriter_cfg","boundary","blaster_rewriter_cfg","constructor"
"blaster_rewriter_cfg","boundary","updt_params","command collaborator"
"blaster_rewriter_cfg","boundary","rewrite_patterns","incidental"
"blaster_rewriter_cfg","boundary","max_steps_exceeded","predicate wrapper"
"blaster_rewriter_cfg","boundary","get_bits","command collaborator"
"blaster_rewriter_cfg","boundary","push","command"
"blaster_rewriter_cfg","boundary","get_num_scopes","unclassified"
"blaster_rewriter_cfg","boundary","pop","command"
"blaster_rewriter_cfg","boundary","start_rewrite","set"
"blaster_rewriter_cfg","boundary","end_rewrite","command collaborator"
"blaster_rewriter_cfg","boundary","get_translation","command collaborator"
"blaster_rewriter_cfg","boundary","mk_mkbv","property non-void-command collaborator"
"blaster_rewriter_cfg","boundary","mk_const","void-accessor command collaborator"
"blaster_rewriter_cfg","boundary","reduce_ite","void-accessor command collaborator"
"blaster_rewriter_cfg","boundary","reduce_concat","void-accessor command collaborator"
"blaster_rewriter_cfg","boundary","reduce_extract","void-accessor command collaborator"
"blaster_rewriter_cfg","boundary","reduce_num","void-accessor command collaborator"
"blaster_rewriter_cfg","boundary","throw_unsupported","controller stateless"
"blaster_rewriter_cfg","boundary","blast_bv_term","void-accessor command collaborator"
"blaster_rewriter_cfg","boundary","reduce_app","property non-void-command collaborator"
"blaster_rewriter_cfg","boundary","pre_visit","predicate non-void-command collaborator"
"blaster_rewriter_cfg","boundary","reduce_var","predicate non-void-command collaborator"
"blaster_rewriter_cfg","boundary","reduce_quantifier","predicate non-void-command collaborator"
"lemma_quantifier_generalizer","boundary","reset_statistics","command"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::lemma_quantifier_generalizer","constructor"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::collect_statistics","collaborator"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::find_candidates","command collaborator"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::match_sk_idx","predicate controller"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::cleanup","void-accessor command collaborator"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::mk_abs_cube","void-accessor command collaborator"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::is_ub","predicate non-void-command collaborator"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::is_lb","predicate non-void-command collaborator"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::generalize","predicate non-void-command collaborator"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::find_stride","predicate non-void-command collaborator"
"lemma_quantifier_generalizer","boundary","lemma_quantifier_generalizer::operator()","command collaborator"
"f_var_plus_offset","boundary","f_var_plus_offset","constructor"
"f_var_plus_offset","boundary","get_kind","incidental"
"f_var_plus_offset","boundary","is_equal","predicate collaborator"
"f_var_plus_offset","boundary","display","collaborator"
"f_var_plus_offset","boundary","process_auf","controller"
"f_var_plus_offset","boundary","populate_inst_sets","command collaborator"
"f_var_plus_offset","boundary","copy_instances","command collaborator"
"f_var_plus_offset","boundary","populate_inst_sets2","controller"
"f_var_plus_offset","boundary","populate_inst_sets","empty"
"external_relation_plugin","boundary","can_handle_signature","collaborator incidental"
"external_relation_plugin","boundary","reduce","command collaborator"
"external_relation_plugin","boundary","reduce_assign","command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::external_relation_plugin","constructor"
"external_relation_plugin","boundary","external_relation_plugin::get","collaborator incidental"
"external_relation_plugin","boundary","external_relation_plugin::get","collaborator incidental"
"external_relation_plugin","boundary","external_relation_plugin::mk_empty","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::get_relation_sort","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::get_column_sort","controller stateless"
"external_relation_plugin","boundary","external_relation_plugin::get_family_id","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_filter_fn","void-accessor command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_join_fn","property controller"
"external_relation_plugin","boundary","external_relation_plugin::mk_project_fn","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_rename_fn","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_union_fn","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_widen_fn","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_filter_equal_fn","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_filter_identical_fn","property non-void-command collaborator"
"external_relation_plugin","boundary","external_relation_plugin::mk_filter_by_negation_fn","property wrapper"
"re2automaton","entity boundary","has_solver","get"
"re2automaton","entity boundary","re2automaton::re2automaton","constructor"
"re2automaton","entity boundary","re2automaton::set_solver","command collaborator"
"re2automaton","entity boundary","re2automaton::mk_product","property non-void-command collaborator"
"re2automaton","entity boundary","re2automaton::operator()","property non-void-command collaborator"
"re2automaton","entity boundary","re2automaton::is_unit_char","predicate non-void-command collaborator"
"re2automaton","entity boundary","re2automaton::re2aut","property non-void-command collaborator"
"re2automaton","entity boundary","re2automaton::seq2aut","property non-void-command collaborator"
"nex_mul","entity data-provider boundary","begin","property non-void-command collaborator"
"nex_mul","entity data-provider boundary","end","property non-void-command collaborator"
"nex_mul","entity data-provider boundary","operator[]","get collaborator"
"nex_mul","entity data-provider boundary","get_child_exp","get wrapper"
"nex_mul","entity data-provider boundary","get_child_pow","get wrapper"
"nex_mul","entity data-provider boundary","number_of_child_powers","unclassified"
"nex_mul","entity data-provider boundary","coeff","get collaborator"
"nex_mul","entity data-provider boundary","size","unclassified"
"nex_mul","entity data-provider boundary","type","collaborator incidental"
"nex_mul","entity data-provider boundary","is_pure_monomial","predicate"
"nex_mul","entity data-provider boundary","print","property collaborator"
"nex_mul","entity data-provider boundary","operator[]","get collaborator"
"nex_mul","entity data-provider boundary","begin","property collaborator"
"nex_mul","entity data-provider boundary","end","property collaborator"
"nex_mul","entity data-provider boundary","contains","predicate collaborator"
"nex_mul","entity data-provider boundary","get_powers_from_mul","void-accessor collaborator"
"nex_mul","entity data-provider boundary","get_degree","collaborator"
"nex_mul","entity data-provider boundary","is_linear","predicate"
"nex_mul","entity data-provider boundary","nex_mul::all_factors_are_elementary","predicate"
"Z3ReferenceQueue","empty","Z3ReferenceQueue","constructor"
"mk_smt_pp","empty","mk_smt_pp","constructor"
"relation_manager::default_relation_apply_sequential_fn","commander boundary small-class","~default_relation_apply_sequential_fn","destructor"
"relation_manager::default_relation_apply_sequential_fn","commander boundary small-class","operator()","command collaborator"
"scoped_enable_trace","empty","scoped_enable_trace","constructor"
"scoped_enable_trace","empty","~scoped_enable_trace","destructor"
"params_ref","unclassified","append","command"
"params_ref","unclassified","params_ref::~params_ref","destructor"
"params_ref","unclassified","params_ref::params_ref","copy-constructor"
"params_ref","unclassified","params_ref::display","collaborator"
"params_ref","unclassified","params_ref::display_smt2","collaborator"
"params_ref","unclassified","params_ref::display","unclassified"
"params_ref","unclassified","params_ref::display","collaborator"
"params_ref","unclassified","params_ref::validate","command collaborator"
"params_ref","unclassified","params_ref::set","set"
"params_ref","unclassified","params_ref::copy","command"
"params_ref","unclassified","params_ref::copy_core","command collaborator"
"params_ref","unclassified","params_ref::init","command collaborator"
"params_ref","unclassified","params_ref::get_bool","predicate"
"params_ref","unclassified","params_ref::get_bool","predicate"
"params_ref","unclassified","params_ref::get_uint","unclassified"
"params_ref","unclassified","params_ref::get_uint","unclassified"
"params_ref","unclassified","params_ref::get_double","property"
"params_ref","unclassified","params_ref::get_double","property"
"params_ref","unclassified","params_ref::get_str","property"
"params_ref","unclassified","params_ref::get_str","property"
"params_ref","unclassified","params_ref::get_rat","property collaborator"
"params_ref","unclassified","params_ref::get_rat","property collaborator"
"params_ref","unclassified","params_ref::get_sym","property collaborator"
"params_ref","unclassified","params_ref::get_sym","property collaborator"
"params_ref","unclassified","params_ref::get_bool","predicate"
"params_ref","unclassified","params_ref::get_uint","unclassified"
"params_ref","unclassified","params_ref::get_double","property"
"params_ref","unclassified","params_ref::get_str","property"
"params_ref","unclassified","params_ref::get_sym","property collaborator"
"params_ref","unclassified","params_ref::empty","predicate"
"params_ref","unclassified","params_ref::contains","predicate collaborator"
"params_ref","unclassified","params_ref::contains","predicate"
"params_ref","unclassified","params_ref::reset","command"
"params_ref","unclassified","params_ref::reset","command collaborator"
"params_ref","unclassified","params_ref::reset","command"
"params_ref","unclassified","params_ref::set_bool","command"
"params_ref","unclassified","params_ref::set_bool","command"
"params_ref","unclassified","params_ref::set_uint","command"
"params_ref","unclassified","params_ref::set_uint","command"
"params_ref","unclassified","params_ref::set_double","command"
"params_ref","unclassified","params_ref::set_double","command"
"params_ref","unclassified","params_ref::set_str","command"
"params_ref","unclassified","params_ref::set_str","command"
"params_ref","unclassified","params_ref::set_rat","command collaborator"
"params_ref","unclassified","params_ref::set_rat","command collaborator"
"params_ref","unclassified","params_ref::set_sym","command collaborator"
"params_ref","unclassified","params_ref::set_sym","command collaborator"
"sls_tactic","entity commander boundary","sls_tactic","constructor"
"sls_tactic","entity commander boundary","translate","property wrapper"
"sls_tactic","entity commander boundary","~sls_tactic","destructor"
"sls_tactic","entity commander boundary","name","incidental"
"sls_tactic","entity commander boundary","updt_params","command collaborator"
"sls_tactic","entity commander boundary","collect_param_descrs","command collaborator"
"sls_tactic","entity commander boundary","run","void-accessor command collaborator"
"sls_tactic","entity commander boundary","operator()","command collaborator"
"sls_tactic","entity commander boundary","cleanup","wrapper"
"sls_tactic","entity commander boundary","collect_statistics","collaborator"
"sls_tactic","entity commander boundary","reset_statistics","command"
"ast2ast_trailmap","entity commander boundary","ast2ast_trailmap","constructor"
"ast2ast_trailmap","entity commander boundary","find","predicate non-void-command collaborator"
"ast2ast_trailmap","entity commander boundary","insert","command collaborator"
"ast2ast_trailmap","entity commander boundary","pop","command"
"lazy_table_rename","entity data-provider boundary","lazy_table_rename","constructor"
"lazy_table_rename","entity data-provider boundary","kind","collaborator incidental"
"lazy_table_rename","entity data-provider boundary","cols","get collaborator"
"lazy_table_rename","entity data-provider boundary","src","property collaborator"
"lazy_table_rename","entity data-provider boundary","lazy_table_rename::force","property non-void-command collaborator"
"linear_combinator","boundary","add_lit","command"
"linear_combinator","boundary","normalize_coeff","set"
"linear_combinator","boundary","lc","get collaborator"
"linear_combinator","boundary","process_lit","predicate non-void-command collaborator"
"linear_combinator","boundary","operator()","get property non-void-command collaborator"
"slice","commander","slice","constructor"
"slice","commander","name","incidental"
"slice","commander","push","command"
"slice","commander","pop","command"
"slice","commander","slice::reduce","command"
"slice","commander","slice::process_eqs","command"
"slice","commander","slice::process_eq","command collaborator"
"slice","commander","slice::slice_eq","command"
"slice","commander","slice::register_slice","command collaborator"
"slice","commander","slice::mk_extract","property non-void-command collaborator"
"slice","commander","slice::apply_subst","command collaborator"
"slice","commander","slice::get_concats","void-accessor command collaborator"
"lazy_table_filter_equal","entity data-provider boundary","lazy_table_filter_equal","constructor"
"lazy_table_filter_equal","entity data-provider boundary","kind","collaborator incidental"
"lazy_table_filter_equal","entity data-provider boundary","col","get"
"lazy_table_filter_equal","entity data-provider boundary","value","get collaborator"
"lazy_table_filter_equal","entity data-provider boundary","src","property collaborator"
"lazy_table_filter_equal","entity data-provider boundary","lazy_table_filter_equal::force","property non-void-command collaborator"
"clause_proof","entity minimal-entity commander boundary","is_enabled","get"
"clause_proof","entity minimal-entity commander boundary","register_on_clause","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::clause_proof","constructor"
"clause_proof","entity minimal-entity commander boundary","clause_proof::init_pp_out","set"
"clause_proof","entity minimal-entity commander boundary","clause_proof::kind2st","wrapper stateless"
"clause_proof","entity minimal-entity commander boundary","clause_proof::justification2proof","get property non-void-command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::add","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::add","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::shrink","command"
"clause_proof","entity minimal-entity commander boundary","clause_proof::add","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::add","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::propagate","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::del","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::display_literals","property non-void-command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::display_hint","property non-void-command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::declare","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::update","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::update","command collaborator"
"clause_proof","entity minimal-entity commander boundary","clause_proof::get_proof","property non-void-command collaborator"
"ast_object_ref","boundary","get_ast","get collaborator"
"ast_object_ref","boundary","kind","wrapper stateless"
"ast_object_ref","boundary","ast_object_ref::ast_object_ref","constructor"
"ast_object_ref","boundary","ast_object_ref::finalize","command collaborator"
"is_non_qfaufbv_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qfaufbv_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qfaufbv_predicate","commander boundary degenerate","operator()","command collaborator"
"Z3_param_descrs_ref","empty","Z3_param_descrs_ref","constructor"
"convex_closure","boundary","has_bv","predicate"
"convex_closure","boundary","set_bv","command"
"convex_closure","boundary","set_col_var","command collaborator"
"convex_closure","boundary","dims","get"
"convex_closure","boundary","add_row","command collaborator"
"convex_closure","boundary","operator()","controller stateless"
"convex_closure","boundary","has_implicit","predicate non-void-command"
"convex_closure","boundary","has_explicit","predicate non-void-command"
"convex_closure","boundary","get_implicit","get collaborator"
"convex_closure","boundary","get_alphas","get collaborator"
"convex_closure","boundary","get_explicit","get collaborator"
"convex_closure","boundary","get_col_vars","get collaborator"
"convex_closure","boundary","reset_statistics","command"
"convex_closure","boundary","convex_closure::convex_closure","constructor"
"convex_closure","boundary","convex_closure::reset","command"
"convex_closure","boundary","convex_closure::collect_statistics","collaborator"
"convex_closure","boundary","convex_closure::reduce","get non-void-command collaborator"
"convex_closure","boundary","convex_closure::kernel_row2eq","command collaborator"
"convex_closure","boundary","convex_closure::kernel2fmls","command collaborator"
"convex_closure","boundary","convex_closure::mk_add","property non-void-command collaborator"
"convex_closure","boundary","convex_closure::mk_numeral","property non-void-command collaborator"
"convex_closure","boundary","convex_closure::cc_col2eq","command collaborator"
"convex_closure","boundary","convex_closure::cc2fmls","command collaborator"
"convex_closure","boundary","convex_closure::infer_div_pred","controller stateless"
"convex_closure","boundary","convex_closure::compute","predicate non-void-command collaborator"
"convex_closure","boundary","convex_closure::mk_le_ge","property non-void-command collaborator"
"convex_closure","boundary","convex_closure::cc_1dim","command collaborator"
"convex_closure","boundary","convex_closure::mk_eq_mod","property non-void-command collaborator"
"sls_engine","entity boundary","m","get collaborator"
"sls_engine","entity boundary","assert_expr","command collaborator"
"sls_engine","entity boundary","get_stats","get collaborator"
"sls_engine","entity boundary","collect_statistics","collaborator"
"sls_engine","entity boundary","reset_statistics","command"
"sls_engine","entity boundary","get_value","property non-void-command collaborator"
"sls_engine","entity boundary","get_model","property non-void-command collaborator"
"sls_engine","entity boundary","get_mpz_manager","get collaborator"
"sls_engine","entity boundary","sls_engine::sls_engine","constructor"
"sls_engine","entity boundary","sls_engine::~sls_engine","destructor"
"sls_engine","entity boundary","sls_engine::updt_params","command collaborator"
"sls_engine","entity boundary","sls_engine::full_eval","predicate non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::top_score","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::rescore","property non-void-command"
"sls_engine","entity boundary","sls_engine::serious_score","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::incremental_score","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::incremental_score_prune","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::what_if","predicate non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::mk_add","command collaborator"
"sls_engine","entity boundary","sls_engine::mk_inc","command collaborator"
"sls_engine","entity boundary","sls_engine::mk_dec","command collaborator"
"sls_engine","entity boundary","sls_engine::mk_inv","command collaborator"
"sls_engine","entity boundary","sls_engine::mk_flip","command collaborator"
"sls_engine","entity boundary","sls_engine::mk_random_move","command collaborator"
"sls_engine","entity boundary","sls_engine::find_best_move","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::find_best_move_mc","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::search","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::operator()","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::search_loop","property non-void-command collaborator"
"sls_engine","entity boundary","sls_engine::check_restart","set"
"ast_translation","boundary","operator()","property non-void-command collaborator"
"ast_translation","boundary","translate","property non-void-command collaborator"
"ast_translation","boundary","from","get collaborator"
"ast_translation","boundary","to","get collaborator"
"ast_translation","boundary","operator()","property non-void-command collaborator"
"ast_translation","boundary","loop_count","get"
"ast_translation","boundary","hit_count","get"
"ast_translation","boundary","miss_count","get"
"ast_translation","boundary","insert_count","get"
"ast_translation","boundary","get_num_collision","property"
"ast_translation","boundary","ast_translation::~ast_translation","destructor"
"ast_translation","boundary","ast_translation::cleanup","command"
"ast_translation","boundary","ast_translation::reset_cache","command"
"ast_translation","boundary","ast_translation::cache","command collaborator"
"ast_translation","boundary","ast_translation::collect_decl_extra_children","command collaborator"
"ast_translation","boundary","ast_translation::push_frame","command collaborator"
"ast_translation","boundary","ast_translation::visit","predicate non-void-command collaborator"
"ast_translation","boundary","ast_translation::copy_params","command collaborator"
"ast_translation","boundary","ast_translation::mk_sort","command collaborator"
"ast_translation","boundary","ast_translation::mk_func_decl","command collaborator"
"ast_translation","boundary","ast_translation::process","property non-void-command collaborator"
"indexed_vector","boundary","indexed_vector","constructor"
"indexed_vector","boundary","operator=","get non-void-command collaborator"
"indexed_vector","boundary","operator==","predicate controller"
"indexed_vector","boundary","indexed_vector","constructor"
"indexed_vector","boundary","data_size","unclassified"
"indexed_vector","boundary","size","unclassified"
"indexed_vector","boundary","operator[]","get collaborator"
"indexed_vector","boundary","operator[]","get collaborator"
"indexed_vector","boundary","add_value_at_index","command collaborator"
"indexed_vector","boundary","begin","property collaborator"
"indexed_vector","boundary","end","property collaborator"
"indexed_vector","boundary","indexed_vector<T>::resize","command"
"indexed_vector","boundary","indexed_vector<T>::set_value","command"
"indexed_vector","boundary","indexed_vector<T>::clear","set"
"indexed_vector","boundary","indexed_vector<T>::clear_all","command"
"indexed_vector","boundary","indexed_vector<T>::erase_from_index","command collaborator"
"indexed_vector","boundary","indexed_vector<T>::print","command collaborator"
"expr_free_vars","unclassified","expr_free_vars","constructor"
"expr_free_vars","unclassified","expr_free_vars","constructor"
"expr_free_vars","unclassified","empty","predicate"
"expr_free_vars","unclassified","size","unclassified"
"expr_free_vars","unclassified","operator[]","get collaborator"
"expr_free_vars","unclassified","contains","predicate"
"expr_free_vars","unclassified","reverse","command"
"expr_free_vars","unclassified","data","property collaborator"
"expr_free_vars","unclassified","expr_free_vars::reset","command"
"expr_free_vars","unclassified","expr_free_vars::set_default_sort","set collaborator"
"expr_free_vars","unclassified","expr_free_vars::operator()","command collaborator"
"expr_free_vars","unclassified","expr_free_vars::accumulate","command collaborator"
"vtrail","commander small-class","vtrail","constructor"
"vtrail","commander small-class","undo","command"
"bv_decl_plugin","boundary","mk_fresh","wrapper stateless"
"bv_decl_plugin","boundary","is_unique_value","predicate collaborator"
"bv_decl_plugin","boundary","is_considered_uninterpreted","predicate non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::bv_decl_plugin","constructor"
"bv_decl_plugin","boundary","bv_decl_plugin::set_manager","command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::finalize","command"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_bv_sort","command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::get_bv_sort","get property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_sort","get non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_binary","property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_unary","property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_int2bv","get property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_bv2int","get property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_unary_pred","property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_pred","property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_reduction","property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_comp","get non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_func_decl","property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::get_bv_size","predicate controller"
"bv_decl_plugin","boundary","bv_decl_plugin::get_bv_size","predicate non-void-command"
"bv_decl_plugin","boundary","bv_decl_plugin::get_concat_size","predicate non-void-command"
"bv_decl_plugin","boundary","bv_decl_plugin::get_extend_size","predicate non-void-command"
"bv_decl_plugin","boundary","bv_decl_plugin::get_extract_size","predicate non-void-command"
"bv_decl_plugin","boundary","bv_decl_plugin::get_int2bv_size","predicate non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_num_decl","property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_bit2bool","property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_mkbv","get property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_func_decl","get property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::mk_func_decl","get property non-void-command collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::is_value","predicate wrapper"
"bv_decl_plugin","boundary","bv_decl_plugin::get_offset_term","void-accessor collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::are_distinct","predicate collaborator"
"bv_decl_plugin","boundary","bv_decl_plugin::get_sort_names","controller stateless"
"bv_decl_plugin","boundary","bv_decl_plugin::get_op_names","controller stateless"
"bv_decl_plugin","boundary","bv_decl_plugin::get_some_value","property non-void-command collaborator"
"arith_proof_hint","controller small-class","arith_proof_hint","constructor"
"arith_proof_hint","controller small-class","arith_proof_hint::get_hint","property controller"
"tactic","lazy-class degenerate","init","set collaborator"
"tactic","lazy-class degenerate","tactic","constructor"
"tactic","lazy-class degenerate","tactic","copy-constructor"
"tactic","lazy-class degenerate","tactic","copy-constructor"
"tactic","lazy-class degenerate","~tactic","destructor"
"tactic","lazy-class degenerate","operatorZ3_tactic","get"
"tactic","lazy-class degenerate","operator=","get set"
"tactic","lazy-class degenerate","mk_solver","property collaborator"
"tactic","lazy-class degenerate","apply","property collaborator"
"tactic","lazy-class degenerate","operator()","property collaborator"
"tactic","lazy-class degenerate","help","property"
"tactic","lazy-class degenerate","get_param_descrs","property non-void-command collaborator"
"tactic","lazy-class degenerate","tactic","constructor"
"tactic","lazy-class degenerate","inc_ref","set"
"tactic","lazy-class degenerate","dec_ref","set"
"tactic","lazy-class degenerate","updt_params","empty"
"tactic","lazy-class degenerate","collect_param_descrs","empty"
"tactic","lazy-class degenerate","collect_statistics","empty"
"tactic","lazy-class degenerate","reset_statistics","empty"
"tactic","lazy-class degenerate","reset","wrapper stateless"
"tactic","lazy-class degenerate","set_logic","empty"
"tactic","lazy-class degenerate","set_progress_callback","empty"
"tactic","lazy-class degenerate","register_on_clause","wrapper stateless"
"tactic","lazy-class degenerate","user_propagate_init","wrapper stateless"
"tactic","lazy-class degenerate","user_propagate_register_expr","empty"
"tactic","lazy-class degenerate","tactic::checkpoint","controller stateless"
"context::uint64_sort_domain","entity boundary","get_number","property non-void-command collaborator"
"context::uint64_sort_domain","entity boundary","get_constant_count","unclassified"
"context::uint64_sort_domain","entity boundary","print_element","command collaborator"
"expr_map","unclassified","contains","controller stateless"
"expr_map","unclassified","begin","controller stateless"
"expr_map","unclassified","end","controller stateless"
"expr_map","unclassified","set_store_proofs","set"
"expr_map","unclassified","expr_map::expr_map","constructor"
"expr_map","unclassified","expr_map::expr_map","constructor"
"expr_map","unclassified","expr_map::~expr_map","destructor"
"expr_map","unclassified","expr_map::insert","command collaborator"
"expr_map","unclassified","expr_map::get","void-accessor controller"
"expr_map","unclassified","expr_map::erase","command collaborator"
"expr_map","unclassified","expr_map::reset","wrapper"
"expr_map","unclassified","expr_map::flush","command"
"pp_level","empty","pp_level","constructor"
"polynomial","data-provider boundary","lex_sort","command collaborator"
"polynomial","data-provider boundary","ref_count","get"
"polynomial","data-provider boundary","inc_ref","set"
"polynomial","data-provider boundary","dec_ref","set"
"polynomial","data-provider boundary","swap_0_pos","wrapper"
"polynomial","data-provider boundary","polynomial","constructor"
"polynomial","data-provider boundary","max_smaller_than","property wrapper"
"polynomial","data-provider boundary","lex_sorted","get"
"polynomial","data-provider boundary","lex_sort","command collaborator"
"polynomial","data-provider boundary","make_first_maximal","set"
"polynomial","data-provider boundary","graded_lex_max_pos","wrapper"
"polynomial","data-provider boundary","graded_lex_min_pos","wrapper"
"polynomial","data-provider boundary","id","get"
"polynomial","data-provider boundary","size","get"
"polynomial","data-provider boundary","m","get collaborator"
"polynomial","data-provider boundary","begin","get collaborator"
"polynomial","data-provider boundary","end","property collaborator"
"polynomial","data-provider boundary","a","get collaborator"
"polynomial","data-provider boundary","a","get non-void-command collaborator"
"polynomial","data-provider boundary","as","get collaborator"
"polynomial","data-provider boundary","is_zero","predicate"
"polynomial","data-provider boundary","display","property collaborator"
"polynomial","data-provider boundary","display_mon_smt2","collaborator"
"polynomial","data-provider boundary","display_smt2","collaborator"
"polynomial","data-provider boundary","display","unclassified"
"polynomial","data-provider boundary","ref_count","get"
"polynomial","data-provider boundary","inc_ref","set"
"polynomial","data-provider boundary","dec_ref","set"
"polynomial","data-provider boundary","max_var","get collaborator"
"polynomial","data-provider boundary","size","get"
"polynomial","data-provider boundary","arg","get collaborator"
"polynomial","data-provider boundary","context_t<C>::polynomial::display","unclassified"
"udoc_plugin::filter_identical_fn","pure-controller small-class","operator()","controller"
"propagate_values","commander boundary","name","incidental"
"propagate_values","commander boundary","reset_statistics","command"
"propagate_values","commander boundary","propagate_values::propagate_values","constructor"
"propagate_values","commander boundary","propagate_values::process_fml","command collaborator"
"propagate_values","commander boundary","propagate_values::add_sub","command collaborator"
"propagate_values","commander boundary","propagate_values::reduce","command"
"propagate_values","commander boundary","propagate_values::collect_statistics","controller"
"propagate_values","commander boundary","propagate_values::updt_params","set collaborator"
"propagate_values","commander boundary","propagate_values::collect_param_descrs","controller stateless"
"datatype_rewriter","entity boundary","datatype_rewriter","constructor"
"datatype_rewriter","entity boundary","m","property collaborator"
"datatype_rewriter","entity boundary","get_fid","property collaborator"
"datatype_rewriter","entity boundary","datatype_rewriter::mk_app_core","property non-void-command collaborator"
"datatype_rewriter","entity boundary","datatype_rewriter::mk_eq_core","property non-void-command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer","constructor"
"hypothesis_reducer","entity boundary","~hypothesis_reducer","destructor"
"hypothesis_reducer","entity boundary","hypothesis_reducer::reduce","property non-void-command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer::reset","command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer::compute_hypsets","command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer::collect_units","command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer::is_ancestor","predicate non-void-command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer::reduce_core","property non-void-command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer::mk_lemma_core","property non-void-command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer::mk_unit_resolution_core","property non-void-command collaborator"
"hypothesis_reducer","entity boundary","hypothesis_reducer::mk_proof_core","property non-void-command collaborator"
"tab::imp","boundary","~imp","destructor"
"tab::imp","boundary","query","property non-void-command collaborator"
"tab::imp","boundary","cleanup","command"
"tab::imp","boundary","reset_statistics","command"
"tab::imp","boundary","collect_statistics","controller"
"tab::imp","boundary","display_certificate","collaborator"
"tab::imp","boundary","get_answer","property collaborator"
"tab::imp","boundary","select_predicate","command"
"tab::imp","boundary","apply_rule","command collaborator"
"tab::imp","boundary","select_rule","command collaborator"
"tab::imp","boundary","backtrack","command"
"tab::imp","boundary","run","property non-void-command collaborator"
"tab::imp","boundary","query_is_tautology","predicate non-void-command collaborator"
"tab::imp","boundary","init_clause","command collaborator"
"tab::imp","boundary","get_clause","property collaborator"
"tab::imp","boundary","display_rule","command collaborator"
"tab::imp","boundary","display_premise","controller stateless"
"tab::imp","boundary","display_clause","controller stateless"
"tab::imp","boundary","get_proof","property collaborator"
"tab::imp","boundary","display_body_insts","controller"
"tab::imp","boundary","resolve_rule","collaborator"
"expr_strong_context_simplifier","entity commander boundary","simplify","command collaborator"
"expr_strong_context_simplifier","entity commander boundary","operator()","command collaborator"
"expr_strong_context_simplifier","entity commander boundary","operator()","command collaborator"
"expr_strong_context_simplifier","entity commander boundary","push","command"
"expr_strong_context_simplifier","entity commander boundary","pop","command"
"expr_strong_context_simplifier","entity commander boundary","assert_expr","command collaborator"
"expr_strong_context_simplifier","entity commander boundary","collect_statistics","collaborator"
"expr_strong_context_simplifier","entity commander boundary","reset_statistics","command"
"expr_strong_context_simplifier","entity commander boundary","expr_strong_context_simplifier::expr_strong_context_simplifier","constructor"
"expr_strong_context_simplifier","entity commander boundary","expr_strong_context_simplifier::simplify_basic","void-accessor command collaborator"
"expr_strong_context_simplifier","entity commander boundary","expr_strong_context_simplifier::simplify_model_based","void-accessor command collaborator"
"expr_strong_context_simplifier","entity commander boundary","expr_strong_context_simplifier::is_forced","predicate non-void-command collaborator"
"builtin_cmd","data-provider data-class small-class","builtin_cmd","constructor"
"builtin_cmd","data-provider data-class small-class","get_usage","get"
"builtin_cmd","data-provider data-class small-class","get_descr","get collaborator"
"entry_storage","unclassified","operator=","get non-void-command collaborator"
"entry_storage","unclassified","reset","command"
"entry_storage","unclassified","entry_size","get"
"entry_storage","unclassified","get","property non-void-command collaborator"
"entry_storage","unclassified","get","property collaborator"
"entry_storage","unclassified","entry_count","unclassified"
"entry_storage","unclassified","after_last_offset","property collaborator"
"entry_storage","unclassified","begin","property non-void-command"
"entry_storage","unclassified","begin","property"
"entry_storage","unclassified","after_last","property"
"entry_storage","unclassified","has_reserve","predicate"
"entry_storage","unclassified","reserve","get collaborator"
"entry_storage","unclassified","ensure_reserve","command"
"entry_storage","unclassified","get_reserve_ptr","property non-void-command"
"entry_storage","unclassified","reserve_content_already_present","predicate"
"entry_storage","unclassified","find_reserve_content","predicate collaborator"
"entry_storage","unclassified","write_into_reserve","command"
"entry_storage","unclassified","resize_data","set"
"entry_storage","unclassified","insert_offset","predicate non-void-command collaborator"
"entry_storage","unclassified","entry_storage::insert_or_get_reserve_content","property non-void-command collaborator"
"entry_storage","unclassified","entry_storage::insert_reserve_content","predicate non-void-command collaborator"
"entry_storage","unclassified","entry_storage::remove_reserve_content","predicate non-void-command collaborator"
"entry_storage","unclassified","entry_storage::remove_offset","command collaborator"
"entry_storage","unclassified","entry_storage::get_size_estimate_bytes","unclassified"
"concat_star_converter","unclassified","translate_core","property non-void-command collaborator"
"concat_star_converter","unclassified","concat_star_converter","constructor"
"concat_star_converter","unclassified","~concat_star_converter","destructor"
"concat_star_converter","unclassified","cancel","controller"
"concat_star_converter","unclassified","display","controller"
"arith_expr_inverter","entity boundary","arith_expr_inverter","constructor"
"arith_expr_inverter","entity boundary","get_fid","property collaborator"
"arith_expr_inverter","entity boundary","process_le_ge","predicate non-void-command collaborator"
"arith_expr_inverter","entity boundary","process_add","predicate non-void-command collaborator"
"arith_expr_inverter","entity boundary","process_arith_mul","predicate non-void-command collaborator"
"arith_expr_inverter","entity boundary","operator()","predicate non-void-command collaborator"
"arith_expr_inverter","entity boundary","mk_diff","predicate non-void-command collaborator"
"BoolSort","empty","BoolSort","constructor"
"BoolSort","empty","BoolSort","constructor"
"interval_relation_plugin::join_fn","pure-controller degenerate small-class","operator()","controller stateless"
"macro_util","boundary","is_forbidden","predicate collaborator"
"macro_util","boundary","set_forbidden_set","set collaborator"
"macro_util","boundary","is_simple_macro","predicate collaborator"
"macro_util","boundary","is_arith_macro","predicate collaborator"
"macro_util","boundary","macro_util::macro_util","constructor"
"macro_util","boundary","macro_util::is_bv","predicate collaborator"
"macro_util","boundary","macro_util::is_bv_sort","predicate collaborator"
"macro_util","boundary","macro_util::is_add","predicate collaborator"
"macro_util","boundary","macro_util::is_times_minus_one","predicate collaborator"
"macro_util","boundary","macro_util::is_le","predicate collaborator"
"macro_util","boundary","macro_util::is_le_ge","predicate collaborator"
"macro_util","boundary","macro_util::is_var_plus_ground","predicate non-void-command collaborator"
"macro_util","boundary","macro_util::is_zero_safe","predicate collaborator"
"macro_util","boundary","macro_util::mk_zero","property collaborator"
"macro_util","boundary","macro_util::mk_sub","collaborator"
"macro_util","boundary","macro_util::mk_add","collaborator"
"macro_util","boundary","macro_util::mk_add","void-accessor collaborator"
"macro_util","boundary","macro_util::is_macro_head","controller stateless"
"macro_util","boundary","macro_util::is_left_simple_macro","predicate collaborator"
"macro_util","boundary","macro_util::is_right_simple_macro","predicate collaborator"
"macro_util","boundary","macro_util::poly_contains_head","predicate collaborator"
"macro_util","boundary","macro_util::is_arith_macro","predicate collaborator"
"macro_util","boundary","macro_util::is_pseudo_head","predicate non-void-command collaborator"
"macro_util","boundary","macro_util::is_pseudo_predicate_macro","predicate non-void-command collaborator"
"macro_util","boundary","macro_util::is_quasi_macro_head","controller stateless"
"macro_util","boundary","macro_util::is_quasi_macro_ok","controller stateless"
"macro_util","boundary","macro_util::quasi_macro_head_to_macro_head","void-accessor collaborator"
"macro_util","boundary","macro_util::mk_macro_interpretation","collaborator"
"macro_util","boundary","macro_util::normalize_expr","void-accessor collaborator"
"macro_util","boundary","macro_util::is_poly_hint","predicate non-void-command collaborator"
"macro_util","boundary","macro_util::insert_macro","command collaborator"
"macro_util","boundary","macro_util::insert_quasi_macro","command collaborator"
"macro_util","boundary","macro_util::rest_contains_decl","predicate wrapper"
"macro_util","boundary","macro_util::get_rest_clause_as_cond","controller"
"macro_util","boundary","macro_util::collect_poly_args","command collaborator"
"macro_util","boundary","macro_util::add_arith_macro_candidate","command collaborator"
"macro_util","boundary","macro_util::collect_arith_macro_candidates","command collaborator"
"macro_util","boundary","macro_util::collect_arith_macro_candidates","command collaborator"
"macro_util","boundary","macro_util::collect_macro_candidates_core","command collaborator"
"macro_util","boundary","macro_util::collect_macro_candidates","set collaborator"
"macro_util","boundary","macro_util::collect_macro_candidates","set collaborator"
"factor_entry","empty","factor_entry","constructor"
"interpreter","boundary","mk_enode_vector","property non-void-command collaborator"
"interpreter","boundary","recycle_enode_vector","command collaborator"
"interpreter","boundary","update_max_generation","set collaborator"
"interpreter","boundary","get_first_f_app","property non-void-command collaborator"
"interpreter","boundary","get_next_f_app","property non-void-command collaborator"
"interpreter","boundary","exec_is_cgr","predicate non-void-command collaborator"
"interpreter","boundary","interpreter","constructor"
"interpreter","boundary","~interpreter","destructor"
"interpreter","boundary","init","command collaborator"
"interpreter","boundary","execute","command collaborator"
"interpreter","boundary","get_min_max_top_generation","void-accessor command"
"interpreter","boundary","mk_enode_vector","property non-void-command collaborator"
"interpreter","boundary","recycle_enode_vector","command collaborator"
"interpreter","boundary","update_max_generation","command collaborator"
"interpreter","boundary","get_first_f_app","property non-void-command collaborator"
"interpreter","boundary","get_next_f_app","property non-void-command collaborator"
"interpreter","boundary","exec_is_cgr","predicate non-void-command collaborator"
"interpreter","boundary","interpreter","constructor"
"interpreter","boundary","~interpreter","destructor"
"interpreter","boundary","init","command collaborator"
"interpreter","boundary","execute","predicate non-void-command collaborator"
"interpreter","boundary","get_min_max_top_generation","void-accessor command"
"interpreter","boundary","interpreter::mk_depth1_vector","property non-void-command collaborator"
"interpreter","boundary","interpreter::mk_depth2_vector","property non-void-command collaborator"
"interpreter","boundary","interpreter::init_continue","property non-void-command collaborator"
"interpreter","boundary","interpreter::display_reg","controller"
"interpreter","boundary","interpreter::display_instr_input_reg","command collaborator"
"interpreter","boundary","interpreter::display_pc_info","command collaborator"
"interpreter","boundary","interpreter::execute_core","predicate non-void-command collaborator"
"interpreter","boundary","interpreter::mk_depth1_vector","property non-void-command collaborator"
"interpreter","boundary","interpreter::mk_depth2_vector","property non-void-command collaborator"
"interpreter","boundary","interpreter::init_continue","property non-void-command collaborator"
"interpreter","boundary","interpreter::display_reg","controller"
"interpreter","boundary","interpreter::display_instr_input_reg","command collaborator"
"interpreter","boundary","interpreter::display_pc_info","command collaborator"
"interpreter","boundary","interpreter::execute_core","predicate non-void-command collaborator"
"nlsat2goal","boundary degenerate small-class","nlsat2goal::nlsat2goal","constructor"
"nlsat2goal","boundary degenerate small-class","nlsat2goal::~nlsat2goal","destructor"
"nlsat2goal","boundary degenerate small-class","nlsat2goal::operator()","wrapper stateless"
"add_probe","pure-controller degenerate small-class","add_probe","constructor"
"add_probe","pure-controller degenerate small-class","operator()","controller stateless"
"choice_lst","empty","choice_lst","copy-constructor"
"expr_inverter","boundary","get_fid","collaborator incidental"
"expr_inverter","boundary","expr_inverter::~expr_inverter","destructor"
"expr_inverter","boundary","expr_inverter::expr_inverter","constructor"
"expr_inverter","boundary","expr_inverter::operator()","predicate non-void-command collaborator"
"expr_inverter","boundary","expr_inverter::mk_diff","predicate non-void-command collaborator"
"expr_inverter","boundary","expr_inverter::set_is_var","controller"
"expr_inverter","boundary","expr_inverter::set_model_converter","set collaborator"
"expr_inverter","boundary","expr_inverter::set_produce_proofs","set"
"obj_ref","boundary","dec_ref","command"
"obj_ref","boundary","inc_ref","command"
"obj_ref","boundary","obj_ref","constructor"
"obj_ref","boundary","obj_ref","constructor"
"obj_ref","boundary","obj_ref","copy-constructor"
"obj_ref","boundary","obj_ref","copy-constructor"
"obj_ref","boundary","~obj_ref","destructor"
"obj_ref","boundary","get_manager","get collaborator"
"obj_ref","boundary","m","get collaborator"
"obj_ref","boundary","operator->","get collaborator"
"obj_ref","boundary","get","get collaborator"
"obj_ref","boundary","operatorbool","unclassified"
"obj_ref","boundary","operator!","predicate"
"obj_ref","boundary","operatorT*","get"
"obj_ref","boundary","operator*","get collaborator"
"obj_ref","boundary","operator=","get non-void-command collaborator"
"obj_ref","boundary","operator=","get non-void-command"
"obj_ref","boundary","operator=","get controller"
"obj_ref","boundary","reset","set"
"obj_ref","boundary","swap","wrapper"
"obj_ref","boundary","steal","property set collaborator"
"horn_subsume_model_converter","boundary","insert","command collaborator"
"horn_subsume_model_converter","boundary","get_manager","get collaborator"
"horn_subsume_model_converter","boundary","display","empty"
"horn_subsume_model_converter","boundary","get_units","controller stateless"
"horn_subsume_model_converter","boundary","horn_subsume_model_converter::insert","command collaborator"
"horn_subsume_model_converter","boundary","horn_subsume_model_converter::insert","command collaborator"
"horn_subsume_model_converter","boundary","horn_subsume_model_converter::mk_horn","predicate non-void-command collaborator"
"horn_subsume_model_converter","boundary","horn_subsume_model_converter::mk_horn","predicate non-void-command collaborator"
"horn_subsume_model_converter","boundary","horn_subsume_model_converter::add_default_false_interpretation","wrapper"
"horn_subsume_model_converter","boundary","horn_subsume_model_converter::operator()","command collaborator"
"horn_subsume_model_converter","boundary","horn_subsume_model_converter::translate","property non-void-command collaborator"
"mk_epp","pure-controller degenerate small-class","mk_epp::mk_epp","constructor"
"mk_epp","pure-controller degenerate small-class","mk_epp::rw","controller stateless"
"generic_model_converter","entity commander boundary","hide","command collaborator"
"generic_model_converter","entity commander boundary","hide","command collaborator"
"generic_model_converter","entity commander boundary","add","command collaborator"
"generic_model_converter","entity commander boundary","operator()","empty"
"generic_model_converter","entity commander boundary","operator()","wrapper stateless"
"generic_model_converter","entity commander boundary","cancel","empty"
"generic_model_converter","entity commander boundary","translate","property non-void-command collaborator"
"generic_model_converter","entity commander boundary","entries","get collaborator"
"generic_model_converter","entity commander boundary","reset","command"
"generic_model_converter","entity commander boundary","generic_model_converter::add","command collaborator"
"generic_model_converter","entity commander boundary","generic_model_converter::operator()","command collaborator"
"generic_model_converter","entity commander boundary","generic_model_converter::copy","property non-void-command collaborator"
"generic_model_converter","entity commander boundary","generic_model_converter::set_env","set collaborator"
"generic_model_converter","entity commander boundary","generic_model_converter::get_units","command collaborator"
"generic_model_converter","entity commander boundary","generic_model_converter::simplify_def","property non-void-command collaborator"
"simple_column_namer","boundary degenerate small-class","get_variable_name","wrapper stateless"
"pb_rewriter","entity boundary","pb_rewriter","constructor"
"pb_rewriter","entity boundary","m","property collaborator"
"pb_rewriter","entity boundary","get_fid","property collaborator"
"pb_rewriter","entity boundary","updt_params","empty"
"pb_rewriter","entity boundary","pb_rewriter::translate_pb2lia","property non-void-command collaborator"
"pb_rewriter","entity boundary","pb_rewriter::mk_validate_rewrite","property non-void-command collaborator"
"pb_rewriter","entity boundary","pb_rewriter::validate_rewrite","command collaborator"
"pb_rewriter","entity boundary","pb_rewriter::dump_pb_rewrite","command collaborator"
"pb_rewriter","entity boundary","pb_rewriter::mk_app_core","property non-void-command collaborator"
"obj_ref_trail","commander small-class","obj_ref_trail","constructor"
"obj_ref_trail","commander small-class","undo","command"
"model2mc","entity boundary","model2mc","constructor"
"model2mc","entity boundary","model2mc","constructor"
"model2mc","entity boundary","operator()","void-accessor command collaborator"
"model2mc","entity boundary","operator()","command collaborator"
"model2mc","entity boundary","operator()","void-accessor wrapper"
"model2mc","entity boundary","get_units","empty"
"model2mc","entity boundary","cancel","empty"
"model2mc","entity boundary","display","command collaborator"
"model2mc","entity boundary","translate","property non-void-command collaborator"
"pull_nested_quant::imp","boundary degenerate small-class","operator()","wrapper stateless"
"case_def","entity data-provider boundary","add_guard","command collaborator"
"case_def","entity data-provider boundary","get_decl","get collaborator"
"case_def","entity data-provider boundary","apply_case_predicate","property collaborator"
"case_def","entity data-provider boundary","get_def","get collaborator"
"case_def","entity data-provider boundary","get_guards","get collaborator"
"case_def","entity data-provider boundary","get_guards_c_ptr","property collaborator"
"case_def","entity data-provider boundary","get_guard","get collaborator"
"case_def","entity data-provider boundary","get_rhs","get collaborator"
"case_def","entity data-provider boundary","num_guards","unclassified"
"case_def","entity data-provider boundary","is_immediate","get"
"case_def","entity data-provider boundary","set_is_immediate","set"
"case_def","entity data-provider boundary","case_def::case_def","constructor"
"table_relation_plugin::tr_join_project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"root_atom","data-provider boundary data-class","x","get collaborator"
"root_atom","data-provider boundary data-class","i","get"
"root_atom","data-provider boundary data-class","p","get collaborator"
"root_atom","data-provider boundary data-class","root_atom::root_atom","constructor"
"bound_relation_plugin::union_fn","boundary small-class","operator()","wrapper"
"FPRMSort","empty","FPRMSort","constructor"
"FPRMSort","empty","FPRMSort","constructor"
"check_sat_using_tactic_cmd","commander boundary","check_sat_using_tactic_cmd","constructor"
"check_sat_using_tactic_cmd","commander boundary","get_main_descr","incidental"
"check_sat_using_tactic_cmd","commander boundary","init_pdescrs","command collaborator"
"check_sat_using_tactic_cmd","commander boundary","execute","command collaborator"
"using_params_tactical","entity boundary","using_params_tactical","constructor"
"using_params_tactical","entity boundary","name","incidental"
"using_params_tactical","entity boundary","updt_params","command collaborator"
"using_params_tactical","entity boundary","translate","property non-void-command collaborator"
"pb_ast_rewriter_util","entity data-provider boundary","pb_ast_rewriter_util","constructor"
"pb_ast_rewriter_util","entity data-provider boundary","negate","property non-void-command collaborator"
"pb_ast_rewriter_util","entity data-provider boundary","display","wrapper"
"pb_ast_rewriter_util","entity data-provider boundary","is_negated","predicate collaborator"
"pb_ast_rewriter_util","entity data-provider boundary","is_true","predicate collaborator"
"pb_ast_rewriter_util","entity data-provider boundary","is_false","predicate collaborator"
"decl_proc","pure-controller degenerate","decl_proc","constructor"
"decl_proc","pure-controller degenerate","operator()","empty"
"decl_proc","pure-controller degenerate","operator()","controller"
"decl_proc","pure-controller degenerate","operator()","empty"
"replace_map","entity commander boundary","replace_map","constructor"
"replace_map","entity commander boundary","insert","command collaborator"
"replace_map","entity commander boundary","operator()","command collaborator"
"replace_map","entity commander boundary","operator()","command collaborator"
"replace_map","entity commander boundary","operator()","command collaborator"
"replace_map","entity commander boundary","apply","void-accessor command collaborator"
"maximize_bv_sharing_rw","commander","maximize_bv_sharing_rw","constructor"
"maximize_bv_sharing_rw","commander","push_scope","command"
"maximize_bv_sharing_rw","commander","pop_scope","command"
"maximize_bv_sharing_rw","commander","reset","command"
"tactic_exception","data-provider small-class","tactic_exception","constructor"
"tactic_exception","data-provider small-class","msg","property"
"replace_proof_converter","boundary","replace_proof_converter","constructor"
"replace_proof_converter","boundary","insert","command collaborator"
"replace_proof_converter","boundary","get_manager","get collaborator"
"replace_proof_converter","boundary","invert","command"
"replace_proof_converter","boundary","display","empty"
"replace_proof_converter","boundary","replace_proof_converter::operator()","property non-void-command collaborator"
"replace_proof_converter","boundary","replace_proof_converter::translate","property controller"
"rel_act_case_split_queue","entity commander boundary","activity_increased_eh","empty"
"rel_act_case_split_queue","entity commander boundary","activity_decreased_eh","empty"
"rel_act_case_split_queue","entity commander boundary","mk_var_eh","command collaborator"
"rel_act_case_split_queue","entity commander boundary","del_var_eh","command collaborator"
"rel_act_case_split_queue","entity commander boundary","unassign_var_eh","command collaborator"
"rel_act_case_split_queue","entity commander boundary","relevant_eh","command collaborator"
"rel_act_case_split_queue","entity commander boundary","init_search_eh","set"
"rel_act_case_split_queue","entity commander boundary","end_search_eh","set"
"rel_act_case_split_queue","entity commander boundary","reset","command"
"rel_act_case_split_queue","entity commander boundary","push_scope","command collaborator"
"rel_act_case_split_queue","entity commander boundary","pop_scope","command collaborator"
"rel_act_case_split_queue","entity commander boundary","next_case_split_core","void-accessor command collaborator"
"rel_act_case_split_queue","entity commander boundary","next_case_split","void-accessor command collaborator"
"rel_act_case_split_queue","entity commander boundary","display_core","command collaborator"
"rel_act_case_split_queue","entity commander boundary","display","command collaborator"
"subterms","data-provider boundary small-class","~subterms","destructor"
"subterms","data-provider boundary small-class","subterms::subterms","constructor"
"subterms","data-provider boundary small-class","subterms::subterms","constructor"
"subterms","data-provider boundary small-class","subterms::begin","property wrapper"
"subterms","data-provider boundary small-class","subterms::end","property wrapper"
"size","entity boundary degenerate","inc_ref","set"
"size","entity boundary degenerate","size::dec_ref","set"
"size","entity boundary degenerate","size::mk_offset","wrapper stateless"
"size","entity boundary degenerate","size::mk_param","wrapper stateless"
"size","entity boundary degenerate","size::mk_plus","wrapper stateless"
"size","entity boundary degenerate","size::mk_times","wrapper stateless"
"size","entity boundary degenerate","size::mk_times","property non-void-command collaborator"
"size","entity boundary degenerate","size::mk_plus","property non-void-command collaborator"
"size","entity boundary degenerate","size::mk_power","wrapper stateless"
"queue","entity boundary","queue","constructor"
"queue","entity boundary","push","command collaborator"
"queue","entity boundary","empty","predicate"
"queue","entity boundary","top","get collaborator"
"queue","entity boundary","pop_front","get non-void-command collaborator"
"queue","entity boundary","back","get collaborator"
"queue","entity boundary","pop_back","property non-void-command collaborator"
"queue","entity boundary","queue::queue","constructor"
"queue","entity boundary","queue::setup","command"
"queue","entity boundary","queue::init_parser_vars","command"
"queue","entity boundary","queue::set_values","command collaborator"
"queue","entity boundary","queue::get_cost","property non-void-command collaborator"
"queue","entity boundary","queue::get_new_gen","non-void-command"
"queue","entity boundary","queue::insert","command collaborator"
"queue","entity boundary","queue::instantiate","void-accessor command collaborator"
"queue","entity boundary","queue::propagate","predicate non-void-command collaborator"
"queue","entity boundary","queue::lazy_propagate","predicate non-void-command collaborator"
"queue","entity boundary","queue::collect_statistics","collaborator"
"NativeFuncInterp","commander boundary small-class","NativeFuncInterp","non-void-command collaborator"
"f2f","boundary degenerate small-class","operator()","collaborator incidental"
"theory_dense_diff_logic","boundary","is_int","get collaborator"
"theory_dense_diff_logic","boundary","is_real","predicate collaborator"
"theory_dense_diff_logic","boundary","get_epsilon","property collaborator"
"theory_dense_diff_logic","boundary","is_times_minus_one","predicate collaborator"
"theory_dense_diff_logic","boundary","is_connected","get collaborator"
"theory_dense_diff_logic","boundary","get_distance","get collaborator"
"theory_dense_diff_logic","boundary","~theory_dense_diff_logic","destructor"
"theory_dense_diff_logic","boundary","get_name","incidental"
"theory_dense_diff_logic","boundary","mk_eq_atom","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::theory_dense_diff_logic","constructor"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_fresh","wrapper stateless"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_zero_for","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_var","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::internalize_term_core","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::found_non_diff_logic_expr","set collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::internalize_atom","predicate non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_clause","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_clause","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::internalize_term","predicate non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::internalize_eq_eh","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::apply_sort_cnstr","empty"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::assign_eh","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::new_eq_eh","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::use_diseqs","incidental"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::new_diseq_eh","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::conflict_resolution_eh","empty"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::push_scope_eh","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::pop_scope_eh","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::restore_cells","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::del_atoms","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::del_vars","command"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::restart_eh","command"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::init_search_eh","command"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::final_check_eh","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::can_propagate","incidental"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::propagate","empty"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::flush_eh","empty"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::reset_eh","command"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::get_antecedents","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::update_cells","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::assign_literal","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::propagate_using_cell","set collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::add_edge","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::check_vector_sizes","predicate collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::check_matrix","predicate collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::display","collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::display_atom","collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::collect_statistics","collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::init_model","command"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::compute_epsilon","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::fix_zero","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::init_model","command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_value","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::internalize_objective","predicate non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::value","property controller"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::maximize","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::add_objective","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_gt","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_ge","property non-void-command collaborator"
"theory_dense_diff_logic","boundary","theory_dense_diff_logic<Ext>::mk_ineq","property non-void-command collaborator"
"offset","data-provider boundary data-class small-class","offset","constructor"
"offset","data-provider boundary data-class small-class","subst","get collaborator"
"offset","data-provider boundary data-class small-class","eval","get collaborator"
"rule_dependencies","boundary","empty","predicate"
"rule_dependencies","boundary","in_degree","collaborator"
"rule_dependencies","boundary","begin","property collaborator"
"rule_dependencies","boundary","end","property collaborator"
"rule_dependencies","boundary","rule_dependencies::rule_dependencies","constructor"
"rule_dependencies","boundary","rule_dependencies::rule_dependencies","copy-constructor"
"rule_dependencies","boundary","rule_dependencies::~rule_dependencies","destructor"
"rule_dependencies","boundary","rule_dependencies::reset","wrapper"
"rule_dependencies","boundary","rule_dependencies::remove_m_data_entry","command collaborator"
"rule_dependencies","boundary","rule_dependencies::ensure_key","property non-void-command collaborator"
"rule_dependencies","boundary","rule_dependencies::insert","command collaborator"
"rule_dependencies","boundary","rule_dependencies::populate","command collaborator"
"rule_dependencies","boundary","rule_dependencies::populate","command collaborator"
"rule_dependencies","boundary","rule_dependencies::populate","command collaborator"
"rule_dependencies","boundary","rule_dependencies::get_deps","get property collaborator"
"rule_dependencies","boundary","rule_dependencies::restrict_dependencies","command collaborator"
"rule_dependencies","boundary","rule_dependencies::remove","command collaborator"
"rule_dependencies","boundary","rule_dependencies::remove","command collaborator"
"rule_dependencies","boundary","rule_dependencies::out_degree","controller"
"rule_dependencies","boundary","rule_dependencies::sort_deps","predicate non-void-command collaborator"
"rule_dependencies","boundary","rule_dependencies::display","controller"
"power","boundary degenerate","power","constructor"
"power","boundary degenerate","~power","destructor"
"power","boundary degenerate","power","constructor"
"power","boundary degenerate","power","constructor"
"power","boundary degenerate","get_var","collaborator incidental"
"power","boundary degenerate","degree","incidental"
"power","boundary degenerate","degree","incidental"
"power","boundary degenerate","set_var","collaborator incidental"
"power","boundary degenerate","power","constructor"
"power","boundary degenerate","x","collaborator incidental"
"power","boundary degenerate","get_var","collaborator incidental"
"power","boundary degenerate","degree","incidental"
"power","boundary degenerate","degree","incidental"
"power","boundary degenerate","set_var","collaborator incidental"
"power","boundary degenerate","power::eval","controller stateless"
"power","boundary degenerate","power::subst","property non-void-command collaborator"
"top_sort","boundary","contains_partition","predicate collaborator"
"top_sort","boundary","traverse","command collaborator"
"top_sort","boundary","~top_sort","destructor"
"top_sort","boundary","topological_sort","command"
"top_sort","boundary","insert","command collaborator"
"top_sort","boundary","deps","get collaborator"
"top_sort","boundary","add","command collaborator"
"top_sort","boundary","top_sorted","get collaborator"
"top_sort","boundary","partition_id","get controller"
"top_sort","boundary","find","predicate"
"top_sort","boundary","contains_dep","predicate collaborator"
"top_sort","boundary","get_dep","property collaborator"
"top_sort","boundary","is_singleton_partition","predicate collaborator"
"sparam","data-provider boundary small-class","sparam","constructor"
"sparam","data-provider boundary small-class","eval","property collaborator"
"sparam","data-provider boundary small-class","sparam::subst","property collaborator"
"x_eq_t","unclassified","x_eq_t","constructor"
"x_eq_t","unclassified","get_kind","incidental"
"x_eq_t","unclassified","process_auf","controller"
"x_eq_t","unclassified","populate_inst_sets","command collaborator"
"purify_arith_tactic","entity commander boundary","purify_arith_tactic","constructor"
"purify_arith_tactic","entity commander boundary","translate","property wrapper"
"purify_arith_tactic","entity commander boundary","name","incidental"
"purify_arith_tactic","entity commander boundary","updt_params","command collaborator"
"purify_arith_tactic","entity commander boundary","collect_param_descrs","command collaborator"
"purify_arith_tactic","entity commander boundary","operator()","command collaborator"
"purify_arith_tactic","entity commander boundary","cleanup","empty"
"ematch","boundary","evaluate","property non-void-command collaborator"
"ematch","boundary","ematch::ematch","constructor"
"ematch","boundary","ematch::relevant_eh","command collaborator"
"ematch","boundary","ematch::ensure_ground_enodes","command collaborator"
"ematch","boundary","ematch::ensure_ground_enodes","command collaborator"
"ematch","boundary","ematch::mk_justification","property non-void-command collaborator"
"ematch","boundary","ematch::get_antecedents","command"
"ematch","boundary","ematch::nnf_skolem","property non-void-command collaborator"
"ematch","boundary","ematch::display_constraint","property collaborator"
"ematch","boundary","ematch::on_merge","command collaborator"
"ematch","boundary","ematch::add_watch","command"
"ematch","boundary","ematch::init_watch","command collaborator"
"ematch","boundary","ematch::init_watch","command collaborator"
"ematch","boundary","ematch::tmp_binding","property non-void-command collaborator"
"ematch","boundary","ematch::alloc_binding","property non-void-command factory collaborator"
"ematch","boundary","ematch::copy_nodes","property non-void-command factory collaborator"
"ematch","boundary","ematch::on_binding","command collaborator"
"ematch","boundary","ematch::propagate","predicate non-void-command collaborator"
"ematch","boundary","ematch::propagate","command collaborator"
"ematch","boundary","ematch::flush_prop_queue","predicate non-void-command"
"ematch","boundary","ematch::instantiate","command collaborator"
"ematch","boundary","ematch::add_instantiation","command collaborator"
"ematch","boundary","ematch::instantiate","property non-void-command collaborator"
"ematch","boundary","ematch::insert_to_propagate","command"
"ematch","boundary","ematch::insert_clause_in_queue","command"
"ematch","boundary","ematch::clausify","property non-void-command collaborator"
"ematch","boundary","ematch::clausify_literal","property non-void-command collaborator"
"ematch","boundary","ematch::attach_ground_pattern_terms","command collaborator"
"ematch","boundary","ematch::add","command collaborator"
"ematch","boundary","ematch::unit_propagate","predicate non-void-command"
"ematch","boundary","ematch::propagate","void-accessor command collaborator"
"ematch","boundary","ematch::propagate","predicate non-void-command collaborator"
"ematch","boundary","ematch::operator()","predicate non-void-command"
"ematch","boundary","ematch::collect_statistics","collaborator"
"ematch","boundary","ematch::display","property controller"
"def","data-provider boundary","def","constructor"
"def","data-provider boundary","~def","destructor"
"def","data-provider boundary","add","command collaborator"
"def","data-provider boundary","name","get collaborator"
"def","data-provider boundary","id","get"
"def","data-provider boundary","constructors","get collaborator"
"def","data-provider boundary","begin","property collaborator"
"def","data-provider boundary","end","property collaborator"
"def","data-provider boundary","begin","property non-void-command collaborator"
"def","data-provider boundary","end","property non-void-command collaborator"
"def","data-provider boundary","params","get collaborator"
"def","data-provider boundary","u","get collaborator"
"def","data-provider boundary","sort_size","get collaborator"
"def","data-provider boundary","set_sort_size","command collaborator"
"def","data-provider boundary","get_name","get collaborator"
"def","data-provider boundary","get_vars","get collaborator"
"def","data-provider boundary","get_cases","get collaborator"
"def","data-provider boundary","get_arity","unclassified"
"def","data-provider boundary","get_domain","get collaborator"
"def","data-provider boundary","get_range","get collaborator"
"def","data-provider boundary","get_decl","property collaborator"
"def","data-provider boundary","get_rhs","get collaborator"
"def","data-provider boundary","is_fun_macro","predicate"
"def","data-provider boundary","is_fun_defined","predicate"
"def","data-provider boundary","is_macro","get"
"def","data-provider boundary","def","constructor"
"def","data-provider boundary","def::instantiate","get property collaborator"
"def","data-provider boundary","def::translate","property non-void-command collaborator"
"def","data-provider boundary","def::def","constructor"
"def","data-provider boundary","def::copy","property non-void-command collaborator"
"def","data-provider boundary","def::contains_def","controller stateless"
"def","data-provider boundary","def::contains_ite","predicate non-void-command collaborator"
"def","data-provider boundary","def::add_case","command collaborator"
"def","data-provider boundary","def::compute_cases","command collaborator"
"def","data-provider boundary","model_based_opt::def::def","constructor"
"def","data-provider boundary","model_based_opt::def::operator+","property controller"
"def","data-provider boundary","model_based_opt::def::substitute","command"
"def","data-provider boundary","model_based_opt::def::operator/","property controller"
"def","data-provider boundary","model_based_opt::def::operator*","property controller"
"def","data-provider boundary","model_based_opt::def::operator+","property controller"
"def","data-provider boundary","model_based_opt::def::normalize","controller"
"simplifier","boundary","init","set collaborator"
"simplifier","boundary","simplifier","constructor"
"simplifier","boundary","simplifier","copy-constructor"
"simplifier","boundary","simplifier","copy-constructor"
"simplifier","boundary","~simplifier","destructor"
"simplifier","boundary","operatorZ3_simplifier","get"
"simplifier","boundary","operator=","get set"
"simplifier","boundary","help","property"
"simplifier","boundary","get_param_descrs","property non-void-command collaborator"
"simplifier","boundary","simplifier","constructor"
"simplifier","boundary","mark_visited","set collaborator"
"simplifier","boundary","unmark_visited","set collaborator"
"simplifier","boundary","is_external","predicate collaborator"
"simplifier","boundary","init_search","set"
"simplifier","boundary","insert_elim_todo","command collaborator"
"simplifier","boundary","reset_todos","command"
"simplifier","boundary","is_marked","get controller"
"simplifier","boundary","simplifier::operator()","command"
"simplifier","boundary","simplifier::simplify_linear_step","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::simplify_linear_step","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::simplify_cc_step","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::simplify_leaf_step","predicate non-void-command"
"simplifier","boundary","simplifier::simplify_elim_pure_step","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::simplify_elim_dual_step","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::add_to_use","controller stateless"
"simplifier","boundary","simplifier::remove_from_use","controller stateless"
"simplifier","boundary","simplifier::remove_from_use","controller stateless"
"simplifier","boundary","simplifier::get_use_list","property non-void-command collaborator"
"simplifier","boundary","simplifier::simplify_exlin","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::init_orbits","controller stateless"
"simplifier","boundary","simplifier::exlin_augment","command collaborator"
"simplifier","boundary","simplifier::simplify_exlin","command collaborator"
"simplifier","boundary","simplifier::simplifier","constructor"
"simplifier","boundary","simplifier::~simplifier","destructor"
"simplifier","boundary","simplifier::get_wlist","property non-void-command collaborator"
"simplifier","boundary","simplifier::get_wlist","property collaborator"
"simplifier","boundary","simplifier::is_external","predicate collaborator"
"simplifier","boundary","simplifier::was_eliminated","predicate collaborator"
"simplifier","boundary","simplifier::value","property collaborator"
"simplifier","boundary","simplifier::value","property collaborator"
"simplifier","boundary","simplifier::checkpoint","command"
"simplifier","boundary","simplifier::single_threaded","predicate"
"simplifier","boundary","simplifier::bce_enabled_base","predicate"
"simplifier","boundary","simplifier::ate_enabled","predicate"
"simplifier","boundary","simplifier::bce_enabled","predicate"
"simplifier","boundary","simplifier::acce_enabled","predicate"
"simplifier","boundary","simplifier::cce_enabled","predicate"
"simplifier","boundary","simplifier::abce_enabled","predicate"
"simplifier","boundary","simplifier::bca_enabled","predicate"
"simplifier","boundary","simplifier::elim_vars_bdd_enabled","predicate"
"simplifier","boundary","simplifier::elim_vars_enabled","predicate"
"simplifier","boundary","simplifier::register_clauses","command collaborator"
"simplifier","boundary","simplifier::remove_clause","command collaborator"
"simplifier","boundary","simplifier::set_learned","command collaborator"
"simplifier","boundary","simplifier::set_learned","command collaborator"
"simplifier","boundary","simplifier::init_visited","command"
"simplifier","boundary","simplifier::finalize","command"
"simplifier","boundary","simplifier::initialize","command"
"simplifier","boundary","simplifier::operator()","command"
"simplifier","boundary","simplifier::cleanup_watches","controller"
"simplifier","boundary","simplifier::move_clauses","command collaborator"
"simplifier","boundary","simplifier::cleanup_clauses","command"
"simplifier","boundary","simplifier::mark_all_but","command collaborator"
"simplifier","boundary","simplifier::unmark_all","command collaborator"
"simplifier","boundary","simplifier::get_min_occ_var","property collaborator"
"simplifier","boundary","simplifier::subsumes1","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::collect_subsumed1_core","command collaborator"
"simplifier","boundary","simplifier::collect_subsumed1","command collaborator"
"simplifier","boundary","simplifier::back_subsumption1","command collaborator"
"simplifier","boundary","simplifier::back_subsumption1","command collaborator"
"simplifier","boundary","simplifier::get_min_occ_var0","property collaborator"
"simplifier","boundary","simplifier::subsumes0","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::collect_subsumed0_core","command collaborator"
"simplifier","boundary","simplifier::collect_subsumed0","command collaborator"
"simplifier","boundary","simplifier::back_subsumption0","command collaborator"
"simplifier","boundary","simplifier::cleanup_clause","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::cleanup_clause","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::propagate_unit","command collaborator"
"simplifier","boundary","simplifier::elim_lit","command collaborator"
"simplifier","boundary","simplifier::subsume_with_binaries","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::mark_as_not_learned_core","controller stateless"
"simplifier","boundary","simplifier::mark_as_not_learned","command collaborator"
"simplifier","boundary","simplifier::elim_dup_bins","set collaborator"
"simplifier","boundary","simplifier::subsume","command"
"simplifier","boundary","simplifier::elim_blocked_clauses","wrapper"
"simplifier","boundary","simplifier::num_nonlearned_bin","collaborator"
"simplifier","boundary","simplifier::get_to_elim_cost","collaborator"
"simplifier","boundary","simplifier::order_vars_for_elim","command collaborator"
"simplifier","boundary","simplifier::collect_clauses","command collaborator"
"simplifier","boundary","simplifier::resolve","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::save_clauses","command collaborator"
"simplifier","boundary","simplifier::add_non_learned_binary_clause","command collaborator"
"simplifier","boundary","simplifier::remove_bin_clauses","command collaborator"
"simplifier","boundary","simplifier::remove_clauses","command collaborator"
"simplifier","boundary","simplifier::try_eliminate","predicate non-void-command collaborator"
"simplifier","boundary","simplifier::elim_vars","command collaborator"
"simplifier","boundary","simplifier::updt_params","command collaborator"
"simplifier","boundary","simplifier::collect_param_descrs","command collaborator"
"simplifier","boundary","simplifier::collect_statistics","controller"
"simplifier","boundary","simplifier::reset_statistics","command"
"simplifier","boundary","ctx_simplify_tactic::simplifier::shared","controller stateless"
"ackr_helper","unclassified","is_uninterp_fn","predicate collaborator"
"ackr_helper","unclassified","is_select","predicate non-void-command collaborator"
"ackr_helper","unclassified","mark_non_select","command collaborator"
"ackr_helper","unclassified","prune_non_select","controller stateless"
"ackr_helper","unclassified","prune_non_funs","controller stateless"
"ackr_helper","unclassified","bvutil","get collaborator"
"ackr_helper","unclassified","insert","command collaborator"
"ackr_helper","unclassified","ackr_helper::calculate_lemma_bound","controller stateless"
"type_ref","data-provider boundary","type_ref","constructor"
"type_ref","data-provider boundary","type_ref","constructor"
"type_ref","data-provider boundary","type_ref","constructor"
"type_ref","data-provider boundary","is_idx","predicate wrapper"
"type_ref","data-provider boundary","is_sort","predicate wrapper"
"type_ref","data-provider boundary","get_sort","property wrapper"
"type_ref","data-provider boundary","get_idx","property wrapper"
"scoped_expr_substitution","unclassified","scoped_expr_substitution","constructor"
"scoped_expr_substitution","unclassified","insert","command collaborator"
"scoped_expr_substitution","unclassified","reset","command"
"scoped_expr_substitution","unclassified","push","command"
"scoped_expr_substitution","unclassified","pop","command"
"scoped_expr_substitution","unclassified","scope_level","unclassified"
"scoped_expr_substitution","unclassified","empty","predicate"
"scoped_expr_substitution","unclassified","size","unclassified"
"scoped_expr_substitution","unclassified","find","property non-void-command collaborator"
"scoped_expr_substitution","unclassified","find","predicate non-void-command collaborator"
"scoped_expr_substitution","unclassified","find","predicate non-void-command collaborator"
"scoped_expr_substitution","unclassified","contains","predicate non-void-command collaborator"
"scoped_expr_substitution","unclassified","cleanup","command"
"scoped_expr_substitution","unclassified","display","property non-void-command collaborator"
"infinitesimal","small-class","infinitesimal","constructor"
"infinitesimal","small-class","display","unclassified"
"bv2fpa_converter","boundary","bv2fpa_converter::bv2fpa_converter","constructor"
"bv2fpa_converter","boundary","bv2fpa_converter::bv2fpa_converter","constructor"
"bv2fpa_converter","boundary","bv2fpa_converter::~bv2fpa_converter","destructor"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_bv2fp","property non-void-command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_bv2fp","property non-void-command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_bv2rm","property non-void-command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_bv2rm","property non-void-command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::rebuild_floats","property non-void-command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_array_func_interp","property non-void-command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_func_interp","property non-void-command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_consts","command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_rm_consts","command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_min_max_specials","command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::convert_uf2bvuf","command collaborator"
"bv2fpa_converter","boundary","bv2fpa_converter::display","controller"
"bv2fpa_converter","boundary","bv2fpa_converter::translate","property controller"
"relation_manager::default_table_filter_identical_fn","data-provider boundary small-class","should_remove","predicate collaborator"
"relation_manager::default_table_filter_identical_fn","data-provider boundary small-class","operator()","collaborator incidental"
"dl_decl_util","boundary","is_lt","predicate collaborator"
"dl_decl_util","boundary","is_numeral","predicate collaborator"
"dl_decl_util","boundary","is_finite_sort","predicate collaborator"
"dl_decl_util","boundary","is_finite_sort","predicate collaborator"
"dl_decl_util","boundary","is_rule_sort","predicate collaborator"
"dl_decl_util","boundary","mk_fact","property non-void-command collaborator"
"dl_decl_util","boundary","get_manager","get collaborator"
"dl_decl_util","boundary","dl_decl_util::dl_decl_util","constructor"
"dl_decl_util","boundary","dl_decl_util::bv","get set collaborator"
"dl_decl_util","boundary","dl_decl_util::get_family_id","get set collaborator"
"dl_decl_util","boundary","dl_decl_util::arith","get set collaborator"
"dl_decl_util","boundary","dl_decl_util::mk_numeral","property non-void-command collaborator"
"dl_decl_util","boundary","dl_decl_util::is_numeral","predicate collaborator"
"dl_decl_util","boundary","dl_decl_util::is_numeral_ext","predicate collaborator"
"dl_decl_util","boundary","dl_decl_util::is_numeral_ext","predicate collaborator"
"dl_decl_util","boundary","dl_decl_util::mk_sort","property non-void-command collaborator"
"dl_decl_util","boundary","dl_decl_util::try_get_size","controller stateless"
"dl_decl_util","boundary","dl_decl_util::mk_lt","property non-void-command collaborator"
"dl_decl_util","boundary","dl_decl_util::mk_le","property non-void-command collaborator"
"dl_decl_util","boundary","dl_decl_util::mk_rule_sort","property non-void-command collaborator"
"dl_decl_util","boundary","dl_decl_util::mk_rule","property non-void-command collaborator"
"random_updater","small-class","random_updater::random_updater","constructor"
"random_updater","small-class","random_updater::shift_var","predicate non-void-command"
"random_updater","small-class","random_updater::update","command"
"user_sort_plugin","boundary","user_sort_plugin::mk_sort","property non-void-command collaborator"
"user_sort_plugin","boundary","user_sort_plugin::mk_func_decl","wrapper stateless"
"user_sort_plugin","boundary","user_sort_plugin::register_name","property non-void-command collaborator"
"user_sort_plugin","boundary","user_sort_plugin::mk_fresh","property controller"
"dec_ref_proc","commander boundary small-class","dec_ref_proc","constructor"
"dec_ref_proc","commander boundary small-class","operator()","command collaborator"
"rewriter_simplifier","commander boundary","rewriter_simplifier","constructor"
"rewriter_simplifier","commander boundary","name","incidental"
"rewriter_simplifier","commander boundary","reduce","command collaborator"
"rewriter_simplifier","commander boundary","supports_proofs","incidental"
"rewriter_simplifier","commander boundary","collect_statistics","controller"
"rewriter_simplifier","commander boundary","reset_statistics","set"
"rewriter_simplifier","commander boundary","updt_params","command collaborator"
"rewriter_simplifier","commander boundary","collect_param_descrs","wrapper stateless"
"big","unclassified","set_include_cardinality","set"
"big","unclassified","ensure_big","command"
"big","unclassified","learned","get"
"big","unclassified","get_left","get controller"
"big","unclassified","get_right","get controller"
"big","unclassified","get_parent","get controller"
"big","unclassified","is_root","predicate non-void-command collaborator"
"big","unclassified","reaches","get controller"
"big","unclassified","connected","predicate collaborator"
"big","unclassified","big::big","constructor"
"big","unclassified","big::init","command collaborator"
"big","unclassified","big::reinit","command"
"big","unclassified","big::init_adding_edges","command"
"big","unclassified","big::add_edge","controller"
"big","unclassified","big::done_adding_edges","command"
"big","unclassified","big::init_dfs_num","command"
"big","unclassified","big::in_del","get controller"
"big","unclassified","big::add_del","controller"
"big","unclassified","big::reduce_tr","non-void-command collaborator"
"big","unclassified","big::safe_reach","predicate non-void-command collaborator"
"big","unclassified","big::next","property collaborator"
"big","unclassified","big::display_path","property collaborator"
"big","unclassified","big::get_root","property controller"
"big","unclassified","big::display","controller"
"sieve_relation_plugin::join_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"demodulator_rewriter::remove_back_idx_proc","commander degenerate","operator()","empty"
"demodulator_rewriter::remove_back_idx_proc","commander degenerate","operator()","empty"
"demodulator_rewriter::remove_back_idx_proc","commander degenerate","operator()","command collaborator"
"symbolic_automata","boundary","generate_min_terms","property non-void-command collaborator"
"symbolic_automata","boundary","generate_min_terms_rec","command collaborator"
"symbolic_automata","boundary","symbolic_automata<T,M>::mk_total","property non-void-command collaborator"
"symbolic_automata","boundary","symbolic_automata<T,M>::mk_minimize","property non-void-command collaborator"
"symbolic_automata","boundary","symbolic_automata<T,M>::add_block","controller stateless"
"symbolic_automata","boundary","symbolic_automata<T,M>::mk_minimize_total","property non-void-command collaborator"
"symbolic_automata","boundary","symbolic_automata<T,M>::mk_determinstic","wrapper stateless"
"symbolic_automata","boundary","symbolic_automata<T,M>::mk_complement","property non-void-command collaborator"
"symbolic_automata","boundary","symbolic_automata<T,M>::mk_determinstic_param","property non-void-command collaborator"
"symbolic_automata","boundary","symbolic_automata<T,M>::mk_product","property non-void-command collaborator"
"symbolic_automata","boundary","symbolic_automata<T,M>::mk_difference","property non-void-command collaborator"
"push_instantiations_up_cl","unclassified","push_instantiations_up_cl","constructor"
"push_instantiations_up_cl","unclassified","operator()","void-accessor command collaborator"
"push_instantiations_up_cl","unclassified","push","property non-void-command collaborator"
"push_instantiations_up_cl","unclassified","compose","void-accessor controller"
"push_instantiations_up_cl","unclassified","instantiate","void-accessor controller"
"instr_clone_move","unclassified","instr_clone_move","constructor"
"instr_clone_move","unclassified","perform","predicate non-void-command collaborator"
"instr_clone_move","unclassified","make_annotations","controller"
"instr_clone_move","unclassified","display_head_impl","property collaborator"
"lia2pb_tactic","unclassified","translate","property wrapper"
"lia2pb_tactic","unclassified","~lia2pb_tactic","destructor"
"lia2pb_tactic","unclassified","name","incidental"
"lia2pb_tactic","unclassified","updt_params","command collaborator"
"lia2pb_tactic","unclassified","collect_param_descrs","controller stateless"
"lia2pb_tactic","unclassified","operator()","controller stateless"
"lia2pb_tactic","unclassified","cleanup","wrapper"
"numeric_pair","data-provider","numeric_pair","constructor"
"numeric_pair","data-provider","numeric_pair","constructor"
"numeric_pair","data-provider","numeric_pair","constructor"
"numeric_pair","data-provider","numeric_pair","constructor"
"numeric_pair","data-provider","hash","unclassified"
"numeric_pair","data-provider","operator<","predicate collaborator"
"numeric_pair","data-provider","operator>","predicate collaborator"
"numeric_pair","data-provider","operator==","predicate collaborator"
"numeric_pair","data-provider","operator!=","predicate collaborator"
"numeric_pair","data-provider","operator<=","predicate collaborator"
"numeric_pair","data-provider","operator>=","predicate collaborator"
"numeric_pair","data-provider","operator<","predicate"
"numeric_pair","data-provider","operator>","predicate"
"numeric_pair","data-provider","operator==","predicate"
"numeric_pair","data-provider","operator!=","predicate"
"numeric_pair","data-provider","operator<=","predicate"
"numeric_pair","data-provider","operator>=","predicate"
"numeric_pair","data-provider","operator*","property collaborator"
"numeric_pair","data-provider","operator/","property collaborator"
"numeric_pair","data-provider","operator/","empty"
"numeric_pair","data-provider","operator+","property"
"numeric_pair","data-provider","operator*","empty"
"numeric_pair","data-provider","operator+=","get non-void-command"
"numeric_pair","data-provider","operator-=","get non-void-command"
"numeric_pair","data-provider","operator/=","get non-void-command collaborator"
"numeric_pair","data-provider","operator*=","get non-void-command collaborator"
"numeric_pair","data-provider","operator-","property"
"numeric_pair","data-provider","operator-","property"
"numeric_pair","data-provider","is_zero","predicate"
"numeric_pair","data-provider","is_pos","predicate"
"numeric_pair","data-provider","is_neg","predicate"
"numeric_pair","data-provider","neg","command"
"numeric_pair","data-provider","to_string","property wrapper"
"numeric_pair","data-provider","is_int","predicate"
"bv_bounds_base","entity boundary","bv_bounds_base","constructor"
"bv_bounds_base","entity boundary","~bv_bounds_base","destructor"
"bv_bounds_base","entity boundary","is_bound","predicate collaborator"
"bv_bounds_base","entity boundary","assert_expr_core","predicate non-void-command collaborator"
"bv_bounds_base","entity boundary","mk_bound","property non-void-command collaborator"
"bv_bounds_base","entity boundary","zero_patch","predicate non-void-command collaborator"
"bv_bounds_base","entity boundary","simplify_core","predicate non-void-command collaborator"
"bv_bounds_base","entity boundary","contains","predicate non-void-command collaborator"
"bv_bounds_base","entity boundary","contains_bound","predicate non-void-command collaborator"
"bv_bounds_base","entity boundary","pop_core","command collaborator"
"elim_bounds_simplifier","commander small-class","elim_bounds_simplifier","constructor"
"elim_bounds_simplifier","commander small-class","name","incidental"
"elim_bounds_simplifier","commander small-class","reduce","command collaborator"
"inc_ref_proc","commander boundary small-class","inc_ref_proc","constructor"
"inc_ref_proc","commander boundary small-class","operator()","command collaborator"
"watched","data-provider","watched","constructor"
"watched","data-provider","val2","get"
"watched","data-provider","watched","constructor"
"watched","data-provider","watched","constructor"
"watched","data-provider","get_kind","property collaborator"
"watched","data-provider","is_binary_clause","predicate"
"watched","data-provider","get_literal","property collaborator"
"watched","data-provider","set_literal","set collaborator"
"watched","data-provider","is_learned","predicate"
"watched","data-provider","is_binary_learned_clause","predicate"
"watched","data-provider","is_binary_non_learned_clause","predicate"
"watched","data-provider","set_learned","set"
"watched","data-provider","is_clause","predicate"
"watched","data-provider","get_clause_offset","property collaborator"
"watched","data-provider","get_blocked_literal","property collaborator"
"watched","data-provider","set_clause_offset","set collaborator"
"watched","data-provider","set_blocked_literal","set collaborator"
"watched","data-provider","set_clause","command collaborator"
"watched","data-provider","is_ext_constraint","predicate"
"watched","data-provider","get_ext_constraint_idx","get collaborator"
"watched","data-provider","operator==","predicate"
"watched","data-provider","operator!=","predicate"
"union_find","unclassified","unmerge","command"
"union_find","unclassified","mk_var","non-void-command"
"union_find","unclassified","reserve","command"
"union_find","unclassified","get_num_vars","unclassified"
"union_find","unclassified","find","unclassified"
"union_find","unclassified","next","get"
"union_find","unclassified","size","get"
"union_find","unclassified","is_root","get"
"union_find","unclassified","merge","command"
"union_find","unclassified","set_root","command"
"union_find","unclassified","dissolve","command"
"union_find","unclassified","display","collaborator"
"union_find","unclassified","check_invariant","predicate"
"solver","boundary","init","set collaborator"
"solver","boundary","~solver","destructor"
"solver","boundary","operatorZ3_solver","get"
"solver","boundary","operator=","get set"
"solver","boundary","set","command collaborator"
"solver","boundary","set","command collaborator"
"solver","boundary","set","command collaborator"
"solver","boundary","set","command collaborator"
"solver","boundary","set","command collaborator"
"solver","boundary","set","command collaborator"
"solver","boundary","push","command"
"solver","boundary","pop","command"
"solver","boundary","reset","command"
"solver","boundary","add","command collaborator"
"solver","boundary","add","command collaborator"
"solver","boundary","add","command"
"solver","boundary","add","command collaborator"
"solver","boundary","from_file","command"
"solver","boundary","from_string","command"
"solver","boundary","check","property non-void-command collaborator"
"solver","boundary","check","property non-void-command collaborator"
"solver","boundary","check","property non-void-command collaborator"
"solver","boundary","get_model","property collaborator"
"solver","boundary","consequences","property non-void-command collaborator"
"solver","boundary","reason_unknown","property collaborator"
"solver","boundary","statistics","property collaborator"
"solver","boundary","unsat_core","property collaborator"
"solver","boundary","assertions","property collaborator"
"solver","boundary","non_units","property collaborator"
"solver","boundary","units","property collaborator"
"solver","boundary","trail","property collaborator"
"solver","boundary","trail","property collaborator"
"solver","boundary","proof","property collaborator"
"solver","boundary","to_smt2","property non-void-command"
"solver","boundary","dimacs","property"
"solver","boundary","get_param_descrs","property non-void-command collaborator"
"solver","boundary","cube","property non-void-command collaborator"
"solver","boundary","cubes","property wrapper"
"solver","boundary","cubes","property wrapper"
"solver","boundary","get_manager","get collaborator"
"solver","boundary","set","set collaborator"
"solver","boundary","set","set collaborator"
"solver","boundary","add","command collaborator"
"solver","boundary","get_stats","get collaborator"
"solver","boundary","get_stats","get collaborator"
"solver","boundary","number_of_conflicts_to_report","get"
"solver","boundary","is_trivial","controller stateless"
"solver","boundary","is_simpler","predicate non-void-command collaborator"
"solver","boundary","is_conflict","predicate collaborator"
"solver","boundary","is_conflict","predicate collaborator"
"solver","boundary","check_conflict","predicate non-void-command collaborator"
"solver","boundary","set_conflict","set collaborator"
"solver","boundary","set_conflict","set collaborator"
"solver","boundary","is_too_complex","predicate collaborator"
"solver","boundary","is_too_complex","predicate controller"
"solver","boundary","del_equation","command collaborator"
"solver","boundary","pop_equation","command collaborator"
"solver","boundary","push_equation","command collaborator"
"solver","boundary","monics_with_changed_bounds","property collaborator"
"solver","boundary","simplify","command"
"solver","boundary","should_check_feasible","predicate"
"solver","boundary","inc_ref","command collaborator"
"solver","boundary","dec_ref","command collaborator"
"solver","boundary","add_clause","command collaborator"
"solver","boundary","add_clause","command collaborator"
"solver","boundary","add_clause","command collaborator"
"solver","boundary","add_var","property non-void-command collaborator"
"solver","boundary","mk_clause","property non-void-command collaborator"
"solver","boundary","rand","get collaborator"
"solver","boundary","set_trim","set"
"solver","boundary","set_canceled","set"
"solver","boundary","cls_allocator","get collaborator"
"solver","boundary","cls_allocator","get collaborator"
"solver","boundary","alloc_clause","property non-void-command collaborator"
"solver","boundary","dealloc_clause","command collaborator"
"solver","boundary","mk_clause_core","property non-void-command collaborator"
"solver","boundary","mk_clause_core","property non-void-command collaborator"
"solver","boundary","mk_clause_core","command collaborator"
"solver","boundary","mk_bin_clause","command"
"solver","boundary","attach_clause","command collaborator"
"solver","boundary","add_ate","command collaborator"
"solver","boundary","add_ate","command collaborator"
"solver","boundary","add_ate","command collaborator"
"solver","boundary","init_visited","command"
"solver","boundary","is_visited","wrapper stateless"
"solver","boundary","is_visited","predicate collaborator"
"solver","boundary","mark_visited","command collaborator"
"solver","boundary","mark_visited","wrapper stateless"
"solver","boundary","inconsistent","get"
"solver","boundary","num_vars","unclassified"
"solver","boundary","num_restarts","get"
"solver","boundary","is_external","get collaborator"
"solver","boundary","is_external","predicate collaborator"
"solver","boundary","was_eliminated","get collaborator"
"solver","boundary","was_eliminated","predicate collaborator"
"solver","boundary","set_phase","command collaborator"
"solver","boundary","get_phase","predicate non-void-command collaborator"
"solver","boundary","scope_lvl","get"
"solver","boundary","search_lvl","get"
"solver","boundary","at_search_lvl","predicate"
"solver","boundary","at_base_lvl","predicate"
"solver","boundary","value","get controller"
"solver","boundary","value","get wrapper"
"solver","boundary","get_justification","get controller"
"solver","boundary","get_justification","get collaborator"
"solver","boundary","lvl","get wrapper"
"solver","boundary","lvl","get controller"
"solver","boundary","trail_size","unclassified"
"solver","boundary","scope_literal","get collaborator"
"solver","boundary","assign","command collaborator"
"solver","boundary","update_assign","set collaborator"
"solver","boundary","assign_unit","command collaborator"
"solver","boundary","assign_scoped","command collaborator"
"solver","boundary","set_conflict","command collaborator"
"solver","boundary","set_conflict","command"
"solver","boundary","get_offset","property collaborator"
"solver","boundary","limit_reached","predicate non-void-command"
"solver","boundary","memory_exceeded","predicate set"
"solver","boundary","checkpoint","command"
"solver","boundary","canceled","predicate non-void-command"
"solver","boundary","get_config","get collaborator"
"solver","boundary","set_drat","set"
"solver","boundary","get_drat","get collaborator"
"solver","boundary","get_drat_ptr","property collaborator"
"solver","boundary","set_incremental","set"
"solver","boundary","is_incremental","predicate"
"solver","boundary","get_extension","property collaborator"
"solver","boundary","get_cut_simplifier","property non-void-command collaborator"
"solver","boundary","get_wlist","get controller"
"solver","boundary","get_wlist","get controller"
"solver","boundary","get_wlist","get collaborator"
"solver","boundary","is_marked","get collaborator"
"solver","boundary","mark","set collaborator"
"solver","boundary","reset_mark","set collaborator"
"solver","boundary","is_marked_lit","get controller"
"solver","boundary","mark_lit","set collaborator"
"solver","boundary","unmark_lit","set collaborator"
"solver","boundary","check","property non-void-command collaborator"
"solver","boundary","get_model","get collaborator"
"solver","boundary","model_is_current","get"
"solver","boundary","get_core","get collaborator"
"solver","boundary","get_model_converter","get collaborator"
"solver","boundary","flush","controller"
"solver","boundary","init_trail_size","unclassified"
"solver","boundary","trail_literal","get collaborator"
"solver","boundary","clauses","get collaborator"
"solver","boundary","get_reason_unknown","property"
"solver","boundary","get_stats","get collaborator"
"solver","boundary","init_reason_unknown","set"
"solver","boundary","get_clause","property collaborator"
"solver","boundary","get_clause","property collaborator"
"solver","boundary","get_clause","property collaborator"
"solver","boundary","get_clause","property collaborator"
"solver","boundary","update_max_level","non-void-command"
"solver","boundary","get_vars_to_reinit","get collaborator"
"solver","boundary","is_probing","get"
"solver","boundary","is_free","predicate collaborator"
"solver","boundary","num_user_scopes","unclassified"
"solver","boundary","num_scopes","unclassified"
"solver","boundary","rlimit","get collaborator"
"solver","boundary","params","get collaborator"
"solver","boundary","inc_activity","command collaborator"
"solver","boundary","decay_activity","set"
"solver","boundary","begin_clauses","property collaborator"
"solver","boundary","end_clauses","property collaborator"
"solver","boundary","begin_learned","property collaborator"
"solver","boundary","end_learned","property collaborator"
"solver","boundary","learned","get collaborator"
"solver","boundary","is_int","predicate collaborator"
"solver","boundary","is_int","predicate collaborator"
"solver","boundary","is_real","predicate collaborator"
"solver","boundary","is_real","predicate collaborator"
"solver","boundary","is_bool","predicate collaborator"
"solver","boundary","is_bool","predicate collaborator"
"solver","boundary","set_upper_bound","predicate non-void-command collaborator"
"solver","boundary","set_lower_bound","predicate non-void-command collaborator"
"solver","boundary","can_get_value","predicate collaborator"
"solver","boundary","small_lemma_size","unclassified"
"solver","boundary","propagate_eqs","predicate"
"solver","boundary","should_propagate","predicate"
"solver","boundary","should_refine_bounds","predicate"
"solver","boundary","init_range","incidental"
"solver","boundary","max_range","incidental"
"solver","boundary","is_external","collaborator incidental"
"solver","boundary","simplify","empty"
"solver","boundary","init_search","empty"
"solver","boundary","use_diseqs","incidental"
"solver","boundary","finalize_model","collaborator incidental"
"solver","boundary","apply_sort_cnstr","empty"
"solver","boundary","enable_ackerman_axioms","predicate collaborator"
"solver","boundary","has_unhandled","predicate"
"solver","boundary","set_bool_search","command collaborator"
"solver","boundary","lp","get collaborator"
"solver","boundary","lp","get collaborator"
"solver","boundary","find","property non-void-command collaborator"
"solver","boundary","find","property non-void-command collaborator"
"solver","boundary","set_applied","command"
"solver","boundary","is_applied","get"
"solver","boundary","is_delayed","get"
"solver","boundary","select_axiom","wrapper stateless"
"solver","boundary","default_axiom","wrapper stateless"
"solver","boundary","store_axiom","wrapper stateless"
"solver","boundary","extensionality_axiom","wrapper stateless"
"solver","boundary","congruence_axiom","wrapper stateless"
"solver","boundary","array_axiom","property non-void-command collaborator"
"solver","boundary","is_array","predicate collaborator"
"solver","boundary","can_beta_reduce","predicate collaborator"
"solver","boundary","get_var_data","property non-void-command collaborator"
"solver","boundary","get_var_data","get collaborator"
"solver","boundary","get_var_data","get collaborator"
"solver","boundary","is_external","collaborator incidental"
"solver","boundary","get_antecedents","empty"
"solver","boundary","asserted","empty"
"solver","boundary","use_diseqs","incidental"
"solver","boundary","include_func_interp","predicate collaborator"
"solver","boundary","enable_self_propagate","incidental"
"solver","boundary","enable_ackerman_axioms","predicate collaborator"
"solver","boundary","after_merge_eh","empty"
"solver","boundary","unmerge_eh","empty"
"solver","boundary","parent_selects","get non-void-command collaborator"
"solver","boundary","insert_bv2a","controller stateless"
"solver","boundary","erase_bv2a","set collaborator"
"solver","boundary","get_bv2a","controller stateless"
"solver","boundary","is_bv","predicate collaborator"
"solver","boundary","reflect","predicate"
"solver","boundary","find","property collaborator"
"solver","boundary","set_lookahead","empty"
"solver","boundary","init_search","empty"
"solver","boundary","find_mutexes","empty"
"solver","boundary","gc","empty"
"solver","boundary","use_diseqs","incidental"
"solver","boundary","extract_pb","predicate collaborator"
"solver","boundary","to_formulas","collaborator incidental"
"solver","boundary","after_merge_eh","command collaborator"
"solver","boundary","pp","property wrapper"
"solver","boundary","operator<<","controller stateless"
"solver","boundary","is_constructor","predicate collaborator"
"solver","boundary","is_recognizer","predicate collaborator"
"solver","boundary","is_accessor","predicate collaborator"
"solver","boundary","is_update_field","predicate collaborator"
"solver","boundary","is_constructor","predicate collaborator"
"solver","boundary","is_recognizer","predicate collaborator"
"solver","boundary","is_accessor","predicate collaborator"
"solver","boundary","is_update_field","predicate collaborator"
"solver","boundary","is_datatype","predicate collaborator"
"solver","boundary","is_datatype","predicate collaborator"
"solver","boundary","oc_on_stack","controller stateless"
"solver","boundary","oc_cycle_free","controller stateless"
"solver","boundary","is_external","collaborator incidental"
"solver","boundary","display_justification","property collaborator"
"solver","boundary","display_constraint","property collaborator"
"solver","boundary","unit_propagate","incidental"
"solver","boundary","is_shared","collaborator incidental"
"solver","boundary","get_phase","collaborator incidental"
"solver","boundary","enable_self_propagate","incidental"
"solver","boundary","after_merge_eh","empty"
"solver","boundary","unmerge_eh","empty"
"solver","boundary","to_ptr","controller stateless"
"solver","boundary","to_ptr","wrapper stateless"
"solver","boundary","is_literal","wrapper stateless"
"solver","boundary","is_justification","wrapper stateless"
"solver","boundary","get_literal","wrapper stateless"
"solver","boundary","get_justification","wrapper stateless"
"solver","boundary","sort2solver","property non-void-command collaborator"
"solver","boundary","func_decl2solver","property non-void-command collaborator"
"solver","boundary","conflict_constraint","property non-void-command collaborator"
"solver","boundary","eq_constraint","property non-void-command collaborator"
"solver","boundary","check_for_user_propagator","wrapper"
"solver","boundary","~solver","destructor"
"solver","boundary","get_si","get collaborator"
"solver","boundary","get_manager","get collaborator"
"solver","boundary","get_enode","property collaborator"
"solver","boundary","bool_var2enode","property collaborator"
"solver","boundary","expr2literal","property collaborator"
"solver","boundary","enode2literal","controller stateless"
"solver","boundary","value","property collaborator"
"solver","boundary","get_config","get collaborator"
"solver","boundary","get_region","property non-void-command collaborator"
"solver","boundary","get_egraph","get collaborator"
"solver","boundary","fid2solver","controller stateless"
"solver","boundary","push","command collaborator"
"solver","boundary","push_vec","command collaborator"
"solver","boundary","push_vec","command collaborator"
"solver","boundary","get_trail_stack","get collaborator"
"solver","boundary","set_solver","set"
"solver","boundary","set_lookahead","set collaborator"
"solver","boundary","reason_unknown","get"
"solver","boundary","propagate","command collaborator"
"solver","boundary","propagate","predicate non-void-command collaborator"
"solver","boundary","to_justification","property non-void-command collaborator"
"solver","boundary","set_conflict","command collaborator"
"solver","boundary","inconsistent","predicate"
"solver","boundary","add_explain","command"
"solver","boundary","reset_explain","command"
"solver","boundary","bpp","property collaborator"
"solver","boundary","pp","property wrapper"
"solver","boundary","resource_limits_exceeded","incidental"
"solver","boundary","use_drat","predicate non-void-command"
"solver","boundary","get_drat","property non-void-command collaborator"
"solver","boundary","expr_args","get non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_prop_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_prop_hint","property non-void-command collaborator"
"solver","boundary","mk_smt_hint","property non-void-command collaborator"
"solver","boundary","mk_tseitin_status","property non-void-command collaborator"
"solver","boundary","mk_distinct_status","property non-void-command collaborator"
"solver","boundary","mk_distinct_status","property non-void-command collaborator"
"solver","boundary","mk_distinct_status","property non-void-command collaborator"
"solver","boundary","attach_th_var","command collaborator"
"solver","boundary","mk_eq","property non-void-command collaborator"
"solver","boundary","set_bool_var2expr","command collaborator"
"solver","boundary","bool_var2expr","controller stateless"
"solver","boundary","literal2expr","property collaborator"
"solver","boundary","generation","get"
"solver","boundary","get_rewriter","get collaborator"
"solver","boundary","rewrite","wrapper stateless"
"solver","boundary","get_assertions","get collaborator"
"solver","boundary","relevancy_enabled","predicate"
"solver","boundary","disable_relevancy","command collaborator"
"solver","boundary","add_root","command collaborator"
"solver","boundary","add_root","command collaborator"
"solver","boundary","add_root","command collaborator"
"solver","boundary","add_root","command collaborator"
"solver","boundary","add_aux","command collaborator"
"solver","boundary","add_aux","command collaborator"
"solver","boundary","add_aux","command collaborator"
"solver","boundary","add_aux","command collaborator"
"solver","boundary","add_aux","command collaborator"
"solver","boundary","mark_relevant","command collaborator"
"solver","boundary","is_relevant","predicate collaborator"
"solver","boundary","is_relevant","predicate collaborator"
"solver","boundary","get_relevancy","get collaborator"
"solver","boundary","unhandled_functions","get collaborator"
"solver","boundary","assign_fixed","command collaborator"
"solver","boundary","assign_fixed","command collaborator"
"solver","boundary","user_propagate_register_final","command collaborator"
"solver","boundary","user_propagate_register_fixed","command collaborator"
"solver","boundary","user_propagate_register_eq","command collaborator"
"solver","boundary","user_propagate_register_diseq","command collaborator"
"solver","boundary","user_propagate_register_created","command collaborator"
"solver","boundary","user_propagate_register_decide","command collaborator"
"solver","boundary","user_propagate_register_expr","command collaborator"
"solver","boundary","mk_solver","wrapper stateless"
"solver","boundary","set_mk_solver","set collaborator"
"solver","boundary","use_diseqs","incidental"
"solver","boundary","display_justification","wrapper stateless"
"solver","boundary","display_constraint","wrapper stateless"
"solver","boundary","get_antecedents","wrapper stateless"
"solver","boundary","clone","wrapper stateless"
"solver","boundary","is_translated","predicate collaborator"
"solver","boundary","translated","property collaborator"
"solver","boundary","arg","property non-void-command collaborator"
"solver","boundary","~solver","destructor"
"solver","boundary","get_antecedents","empty"
"solver","boundary","display_justification","collaborator incidental"
"solver","boundary","display_constraint","collaborator incidental"
"solver","boundary","clone","wrapper stateless"
"solver","boundary","use_count","get collaborator"
"solver","boundary","index2constraint","wrapper stateless"
"solver","boundary","next_id","set"
"solver","boundary","is_pb","incidental"
"solver","boundary","value","wrapper stateless"
"solver","boundary","value","property collaborator"
"solver","boundary","is_false","predicate collaborator"
"solver","boundary","lvl","collaborator"
"solver","boundary","lvl","collaborator"
"solver","boundary","inconsistent","predicate"
"solver","boundary","get_wlist","property non-void-command collaborator"
"solver","boundary","get_wlist","property collaborator"
"solver","boundary","assign","command collaborator"
"solver","boundary","set_conflict","command collaborator"
"solver","boundary","get_config","property collaborator"
"solver","boundary","process_antecedent","command collaborator"
"solver","boundary","set_lookahead","set collaborator"
"solver","boundary","unit_propagate","incidental"
"solver","boundary","pre_simplify","empty"
"solver","boundary","constraints","get collaborator"
"solver","boundary","is_external","collaborator incidental"
"solver","boundary","display_justification","property collaborator"
"solver","boundary","internalize","command collaborator"
"solver","boundary","is_shared","collaborator incidental"
"solver","boundary","relevant_eh","command collaborator"
"solver","boundary","get_manager","get collaborator"
"solver","boundary","universal","get collaborator"
"solver","boundary","log_instantiation","command collaborator"
"solver","boundary","log_instantiation","command collaborator"
"solver","boundary","push_body_expand","command collaborator"
"solver","boundary","push_case_expand","command collaborator"
"solver","boundary","push_guard","wrapper stateless"
"solver","boundary","push_c","wrapper stateless"
"solver","boundary","is_enabled_guard","predicate non-void-command collaborator"
"solver","boundary","is_disabled_guard","predicate non-void-command collaborator"
"solver","boundary","u","get collaborator"
"solver","boundary","is_defined","predicate collaborator"
"solver","boundary","is_case_pred","predicate collaborator"
"solver","boundary","is_defined","predicate collaborator"
"solver","boundary","is_case_pred","predicate collaborator"
"solver","boundary","is_standard_order","controller stateless"
"solver","boundary","is_external","collaborator incidental"
"solver","boundary","display_justification","property collaborator"
"solver","boundary","display_constraint","collaborator incidental"
"solver","boundary","is_shared","collaborator incidental"
"solver","boundary","init_search","empty"
"solver","boundary","tracking_assumptions","incidental"
"solver","boundary","internalize","wrapper stateless"
"solver","boundary","internalize","wrapper stateless"
"solver","boundary","clone","wrapper stateless"
"solver","boundary","get_model","wrapper stateless"
"solver","boundary","unit_propagate","incidental"
"solver","boundary","get_antecedents","wrapper stateless"
"solver","boundary","check","collaborator incidental"
"solver","boundary","display","collaborator incidental"
"solver","boundary","display_justification","wrapper stateless"
"solver","boundary","display_constraint","wrapper stateless"
"solver","boundary","get_model","get collaborator"
"solver","boundary","push_core","empty"
"solver","boundary","clone","wrapper stateless"
"solver","boundary","collect_statistics","controller"
"solver","boundary","internalize","wrapper stateless"
"solver","boundary","internalize","wrapper stateless"
"solver","boundary","get_antecedents","wrapper stateless"
"solver","boundary","display","collaborator incidental"
"solver","boundary","display_justification","wrapper stateless"
"solver","boundary","display_constraint","wrapper stateless"
"solver","boundary","is_external","collaborator incidental"
"solver","boundary","get_antecedents","empty"
"solver","boundary","display_justification","property collaborator"
"solver","boundary","display_constraint","property collaborator"
"solver","boundary","unit_propagate","incidental"
"solver","boundary","apply_sort_cnstr","empty"
"solver","boundary","is_shared","collaborator incidental"
"solver","boundary","get_phase","collaborator incidental"
"solver","boundary","enable_self_propagate","incidental"
"solver","boundary","after_merge_eh","empty"
"solver","boundary","unmerge_eh","empty"
"solver","boundary","add","command collaborator"
"solver","boundary","register_final","set collaborator"
"solver","boundary","register_fixed","set collaborator"
"solver","boundary","register_eq","set collaborator"
"solver","boundary","register_diseq","set collaborator"
"solver","boundary","register_created","set collaborator"
"solver","boundary","register_decide","set collaborator"
"solver","boundary","has_fixed","predicate"
"solver","boundary","use_diseqs","predicate"
"solver","boundary","internalize","wrapper stateless"
"solver","boundary","internalize","wrapper stateless"
"solver","boundary","solver","constructor"
"solver","boundary","get_params","get collaborator"
"solver","boundary","push_params","empty"
"solver","boundary","pop_params","empty"
"solver","boundary","set_produce_models","empty"
"solver","boundary","assert_expr","command collaborator"
"solver","boundary","assert_expr","command collaborator"
"solver","boundary","check_sat","property non-void-command collaborator"
"solver","boundary","check_sat","property non-void-command collaborator"
"solver","boundary","check_sat","property non-void-command collaborator"
"solver","boundary","check_sat_cc","property non-void-command collaborator"
"solver","boundary","get_model_converter","get collaborator"
"solver","boundary","get_units_core","empty"
"solver","boundary","set_delay_simplify","command collaborator"
"solver","boundary","add_toggle","property non-void-command collaborator"
"solver","boundary","is_toggle","predicate non-void-command collaborator"
"solver","boundary","indent","wrapper"
"solver","boundary","flush_assertions","command collaborator"
"solver","boundary","check_abs","property non-void-command collaborator"
"solver","boundary","get_prime_implicate","property non-void-command collaborator"
"solver","boundary","add_theory_axioms","predicate non-void-command collaborator"
"solver","boundary","is_decided_sat","property non-void-command collaborator"
"solver","boundary","init_assumptions","command collaborator"
"solver","boundary","init_model_assumptions","command collaborator"
"solver","boundary","checkpoint","command"
"solver","boundary","rep","property non-void-command collaborator"
"solver","boundary","abs","property non-void-command collaborator"
"solver","boundary","abs_assumption","property non-void-command collaborator"
"solver","boundary","rep","property non-void-command collaborator"
"solver","boundary","abs","property non-void-command collaborator"
"solver","boundary","init","command"
"solver","boundary","display","property collaborator"
"solver","boundary","update_reason_unknown","set collaborator"
"solver","boundary","solver","constructor"
"solver","boundary","translate","property non-void-command collaborator"
"solver","boundary","assert_expr_core","command collaborator"
"solver","boundary","push_core","command"
"solver","boundary","pop_core","command"
"solver","boundary","flush_atom_defs","command collaborator"
"solver","boundary","assert_fd","command collaborator"
"solver","boundary","block_core","command collaborator"
"solver","boundary","check_sat_core2","property non-void-command collaborator"
"solver","boundary","refine_core","property non-void-command collaborator"
"solver","boundary","set_phase","empty"
"solver","boundary","get_phase","collaborator incidental"
"solver","boundary","set_phase","empty"
"solver","boundary","move_to_front","empty"
"solver","boundary","updt_params","command collaborator"
"solver","boundary","collect_param_descrs","command collaborator"
"solver","boundary","set_produce_models","empty"
"solver","boundary","set_progress_callback","empty"
"solver","boundary","collect_statistics","collaborator"
"solver","boundary","get_unsat_core","command collaborator"
"solver","boundary","get_model_core","void-accessor collaborator"
"solver","boundary","get_model_converter","property collaborator"
"solver","boundary","get_proof_core","collaborator incidental"
"solver","boundary","reason_unknown","get"
"solver","boundary","set_reason_unknown","set"
"solver","boundary","get_labels","empty"
"solver","boundary","get_manager","get collaborator"
"solver","boundary","find_mutexes","collaborator incidental"
"solver","boundary","cube","property wrapper"
"solver","boundary","congruence_root","collaborator incidental"
"solver","boundary","congruence_next","collaborator incidental"
"solver","boundary","get_consequences_core","collaborator incidental"
"solver","boundary","get_levels","command collaborator"
"solver","boundary","get_trail","property non-void-command collaborator"
"solver","boundary","get_num_assertions","unclassified"
"solver","boundary","get_assertion","property collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::solver","constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::adjust_cfg","command collaborator"
"solver","boundary","solver::saturate","command"
"solver","boundary","solver::simplify","command collaborator"
"solver","boundary","solver::superpose","command collaborator"
"solver","boundary","solver::simplify_using","void-accessor command collaborator"
"solver","boundary","solver::well_formed","command"
"solver","boundary","solver::simplify_using","command collaborator"
"solver","boundary","solver::simplify_using","command collaborator"
"solver","boundary","solver::try_simplify_using","predicate non-void-command collaborator"
"solver","boundary","solver::simplify_using","void-accessor command collaborator"
"solver","boundary","solver::superpose","command collaborator"
"solver","boundary","solver::step","predicate non-void-command collaborator"
"solver","boundary","solver::init_saturate","command"
"solver","boundary","solver::pick_next","property non-void-command collaborator"
"solver","boundary","solver::equations","get non-void-command collaborator"
"solver","boundary","solver::reset","command collaborator"
"solver","boundary","solver::add","command collaborator"
"solver","boundary","solver::add_subst","command collaborator"
"solver","boundary","solver::simplify","void-accessor command collaborator"
"solver","boundary","solver::canceled","predicate non-void-command"
"solver","boundary","solver::done","predicate non-void-command"
"solver","boundary","solver::get_queue","get controller"
"solver","boundary","solver::del_equation","command collaborator"
"solver","boundary","solver::retire","wrapper stateless"
"solver","boundary","solver::pop_equation","command collaborator"
"solver","boundary","solver::push_equation","command collaborator"
"solver","boundary","solver::update_stats_max_degree_and_size","command collaborator"
"solver","boundary","solver::collect_statistics","collaborator"
"solver","boundary","solver::display","property controller"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_statistics","property collaborator"
"solver","boundary","solver::invariant","collaborator"
"solver","boundary","solver::add_monic","command collaborator"
"solver","boundary","solver::add_idivision","command collaborator"
"solver","boundary","solver::add_rdivision","command collaborator"
"solver","boundary","solver::add_bounded_division","command collaborator"
"solver","boundary","solver::set_relevant","command collaborator"
"solver","boundary","solver::is_monic_var","predicate collaborator"
"solver","boundary","solver::need_check","predicate non-void-command"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::propagate","command"
"solver","boundary","solver::push","command"
"solver","boundary","solver::pop","command"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::influences_nl_var","predicate collaborator"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::use_nra_model","predicate"
"solver","boundary","solver::get_core","get collaborator"
"solver","boundary","solver::am","property non-void-command collaborator"
"solver","boundary","solver::am_value","property collaborator"
"solver","boundary","solver::tmp1","property non-void-command collaborator"
"solver","boundary","solver::tmp2","property non-void-command collaborator"
"solver","boundary","solver::check_power","property non-void-command collaborator"
"solver","boundary","solver::check_bounded_divisions","command"
"solver","boundary","solver::lemmas","property collaborator"
"solver","boundary","solver::literals","property collaborator"
"solver","boundary","solver::equalities","property collaborator"
"solver","boundary","solver::fixed_equalities","property collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::need_check","predicate non-void-command"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::value","property non-void-command collaborator"
"solver","boundary","solver::am","property non-void-command collaborator"
"solver","boundary","solver::tmp1","property non-void-command collaborator"
"solver","boundary","solver::tmp2","property non-void-command collaborator"
"solver","boundary","solver::updt_params","command collaborator"
"solver","boundary","solver::solver","constructor"
"solver","boundary","solver::solver","constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::get_core","command collaborator"
"solver","boundary","solver::reset","command"
"solver","boundary","solver::updt_params","command collaborator"
"solver","boundary","solver::collect_param_descrs","command collaborator"
"solver","boundary","solver::qm","property collaborator"
"solver","boundary","solver::am","property collaborator"
"solver","boundary","solver::pm","property collaborator"
"solver","boundary","solver::set_display_var","set collaborator"
"solver","boundary","solver::set_display_assumption","set collaborator"
"solver","boundary","solver::num_vars","unclassified"
"solver","boundary","solver::is_int","predicate collaborator"
"solver","boundary","solver::mk_bool_var","property non-void-command collaborator"
"solver","boundary","solver::mk_true","wrapper stateless"
"solver","boundary","solver::bool_var2atom","property collaborator"
"solver","boundary","solver::vars","command collaborator"
"solver","boundary","solver::get_atoms","property collaborator"
"solver","boundary","solver::get_var2eq","property collaborator"
"solver","boundary","solver::get_evaluator","property collaborator"
"solver","boundary","solver::get_explain","get collaborator"
"solver","boundary","solver::reorder","command collaborator"
"solver","boundary","solver::restore_order","command"
"solver","boundary","solver::set_rvalues","command collaborator"
"solver","boundary","solver::get_rvalues","controller"
"solver","boundary","solver::get_bvalues","void-accessor controller"
"solver","boundary","solver::set_bvalues","set collaborator"
"solver","boundary","solver::del_clause","command collaborator"
"solver","boundary","solver::mk_var","property non-void-command collaborator"
"solver","boundary","solver::mk_ineq_atom","property non-void-command collaborator"
"solver","boundary","solver::mk_ineq_literal","property non-void-command collaborator"
"solver","boundary","solver::mk_root_atom","property non-void-command collaborator"
"solver","boundary","solver::inc_ref","command collaborator"
"solver","boundary","solver::dec_ref","command collaborator"
"solver","boundary","solver::inc_ref","command collaborator"
"solver","boundary","solver::dec_ref","command collaborator"
"solver","boundary","solver::mk_clause","command collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_smt2","property collaborator"
"solver","boundary","solver::display_smt2","property collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_smt2","property collaborator"
"solver","boundary","solver::display_smt2","property collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_proc","property collaborator"
"solver","boundary","solver::value","property collaborator"
"solver","boundary","solver::bvalue","property collaborator"
"solver","boundary","solver::value","property collaborator"
"solver","boundary","solver::is_interpreted","predicate collaborator"
"solver","boundary","solver::reset_statistics","command"
"solver","boundary","solver::collect_statistics","command collaborator"
"solver","boundary","solver::mk_clause","property non-void-command collaborator"
"solver","boundary","solver::inc_simplify","set"
"solver","boundary","solver::has_root_atom","predicate collaborator"
"solver","boundary","solver::add_bound","command collaborator"
"solver","boundary","solver::join","property non-void-command collaborator"
"solver","boundary","solver::should_gc","predicate"
"solver","boundary","solver::do_gc","command"
"solver","boundary","solver::gc_glue","command"
"solver","boundary","solver::gc_psm","command"
"solver","boundary","solver::gc_glue_psm","command"
"solver","boundary","solver::gc_psm_glue","command"
"solver","boundary","solver::save_psm","command collaborator"
"solver","boundary","solver::gc_half","command collaborator"
"solver","boundary","solver::can_delete","predicate collaborator"
"solver","boundary","solver::gc_dyn_psm","command collaborator"
"solver","boundary","solver::activate_frozen_clause","predicate non-void-command collaborator"
"solver","boundary","solver::psm","controller"
"solver","boundary","solver::gc_reinit_stack","command collaborator"
"solver","boundary","solver::is_asserting","predicate collaborator"
"solver","boundary","solver::gc_vars","command collaborator"
"solver","boundary","solver::solver","constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::del_clauses","set collaborator"
"solver","boundary","solver::set_extension","command collaborator"
"solver","boundary","solver::copy","command collaborator"
"solver","boundary","solver::reset_var","command"
"solver","boundary","solver::mk_var","property non-void-command collaborator"
"solver","boundary","solver::set_non_external","set collaborator"
"solver","boundary","solver::set_external","set collaborator"
"solver","boundary","solver::set_eliminated","command"
"solver","boundary","solver::mk_clause","property non-void-command collaborator"
"solver","boundary","solver::mk_clause","property non-void-command collaborator"
"solver","boundary","solver::mk_clause","property non-void-command collaborator"
"solver","boundary","solver::del_clause","command collaborator"
"solver","boundary","solver::drat_explain_conflict","command"
"solver","boundary","solver::drat_log_unit","command collaborator"
"solver","boundary","solver::drat_log_clause","command collaborator"
"solver","boundary","solver::mk_clause_core","property non-void-command collaborator"
"solver","boundary","solver::mk_bin_clause","command collaborator"
"solver","boundary","solver::has_variables_to_reinit","predicate controller"
"solver","boundary","solver::has_variables_to_reinit","predicate collaborator"
"solver","boundary","solver::propagate_bin_clause","predicate non-void-command collaborator"
"solver","boundary","solver::push_reinit_stack","command collaborator"
"solver","boundary","solver::push_reinit_stack","command collaborator"
"solver","boundary","solver::mk_nary_clause","property non-void-command collaborator"
"solver","boundary","solver::attach_nary_clause","predicate non-void-command collaborator"
"solver","boundary","solver::attach_clause","void-accessor command"
"solver","boundary","solver::set_learned","controller stateless"
"solver","boundary","solver::set_learned1","command collaborator"
"solver","boundary","solver::shrink","command collaborator"
"solver","boundary","solver::memory_pressure","predicate non-void-command"
"solver","boundary","solver::should_defrag","predicate set"
"solver","boundary","solver::defrag_clauses","command collaborator"
"solver","boundary","solver::set_learned","command"
"solver","boundary","solver::select_watch_lit","collaborator"
"solver","boundary","solver::select_learned_watch_lit","collaborator"
"solver","boundary","solver::simplify_clause_core","predicate collaborator"
"solver","boundary","solver::simplify_clause","predicate collaborator"
"solver","boundary","solver::detach_bin_clause","command"
"solver","boundary","solver::detach_clause","command collaborator"
"solver","boundary","solver::detach_nary_clause","command collaborator"
"solver","boundary","solver::set_conflict","command collaborator"
"solver","boundary","solver::assign_core","command collaborator"
"solver","boundary","solver::status","property collaborator"
"solver","boundary","solver::propagate_core","predicate non-void-command collaborator"
"solver","boundary","solver::propagate","predicate non-void-command"
"solver","boundary","solver::propagate_clause","command collaborator"
"solver","boundary","solver::set_watch","wrapper"
"solver","boundary","solver::propagate_literal","predicate non-void-command"
"solver","boundary","solver::display_lookahead_scores","controller"
"solver","boundary","solver::cube","property non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::should_cancel","predicate non-void-command"
"solver","boundary","solver::bounded_local_search","command"
"solver","boundary","solver::invoke_local_search","property non-void-command collaborator"
"solver","boundary","solver::do_local_search","property set collaborator"
"solver","boundary","solver::do_ddfw_search","property set collaborator"
"solver","boundary","solver::do_prob_search","property non-void-command collaborator"
"solver","boundary","solver::check_par","collaborator incidental"
"solver","boundary","solver::check_par","property non-void-command collaborator"
"solver","boundary","solver::exchange_par","command collaborator"
"solver","boundary","solver::set_par","command"
"solver","boundary","solver::next_var","property non-void-command collaborator"
"solver","boundary","solver::guess","get predicate non-void-command collaborator"
"solver","boundary","solver::decide","predicate non-void-command collaborator"
"solver","boundary","solver::bounded_search","property non-void-command collaborator"
"solver","boundary","solver::basic_search","property non-void-command collaborator"
"solver","boundary","solver::search","property non-void-command collaborator"
"solver","boundary","solver::should_propagate","predicate"
"solver","boundary","solver::final_check","property non-void-command collaborator"
"solver","boundary","solver::check_inconsistent","predicate non-void-command"
"solver","boundary","solver::init_assumptions","command collaborator"
"solver","boundary","solver::update_min_core","command"
"solver","boundary","solver::reset_assumptions","command"
"solver","boundary","solver::add_assumption","command collaborator"
"solver","boundary","solver::reassert_min_core","command collaborator"
"solver","boundary","solver::reinit_assumptions","command collaborator"
"solver","boundary","solver::init_ext_assumptions","command"
"solver","boundary","solver::tracking_assumptions","predicate"
"solver","boundary","solver::is_assumption","predicate collaborator"
"solver","boundary","solver::set_activity","command"
"solver","boundary","solver::is_assumption","wrapper stateless"
"solver","boundary","solver::init_search","command"
"solver","boundary","solver::should_simplify","predicate"
"solver","boundary","solver::do_simplify","command collaborator"
"solver","boundary","solver::set_root","predicate non-void-command collaborator"
"solver","boundary","solver::flush_roots","command"
"solver","boundary","solver::sort_watch_lits","controller"
"solver","boundary","solver::set_model","command"
"solver","boundary","solver::mk_model","command collaborator"
"solver","boundary","solver::check_clauses","predicate collaborator"
"solver","boundary","solver::check_model","predicate collaborator"
"solver","boundary","solver::should_restart","predicate"
"solver","boundary","solver::log_stats","command"
"solver","boundary","solver::do_restart","command"
"solver","boundary","solver::restart_level","non-void-command"
"solver","boundary","solver::update_activity","command"
"solver","boundary","solver::set_next_restart","command"
"solver","boundary","solver::resolve_conflict","predicate non-void-command collaborator"
"solver","boundary","solver::resolve_conflict_core","property non-void-command collaborator"
"solver","boundary","solver::learn_lemma_and_backjump","command collaborator"
"solver","boundary","solver::use_backjumping","predicate"
"solver","boundary","solver::allow_backtracking","predicate"
"solver","boundary","solver::process_antecedent_for_unsat_core","command collaborator"
"solver","boundary","solver::process_consequent_for_unsat_core","command collaborator"
"solver","boundary","solver::resolve_conflict_for_unsat_core","command"
"solver","boundary","solver::get_max_lvl","non-void-command collaborator"
"solver","boundary","solver::skip_literals_above_conflict_level","non-void-command"
"solver","boundary","solver::process_antecedent","void-accessor command"
"solver","boundary","solver::fill_ext_antecedents","command collaborator"
"solver","boundary","solver::is_two_phase","predicate"
"solver","boundary","solver::is_sat_phase","predicate"
"solver","boundary","solver::updt_phase_of_vars","command collaborator"
"solver","boundary","solver::should_toggle_search_state","predicate non-void-command"
"solver","boundary","solver::do_toggle_search_state","command"
"solver","boundary","solver::should_rephase","predicate"
"solver","boundary","solver::do_rephase","command"
"solver","boundary","solver::should_reorder","predicate non-void-command"
"solver","boundary","solver::do_reorder","command collaborator"
"solver","boundary","solver::updt_phase_counters","command"
"solver","boundary","solver::num_diff_levels","non-void-command collaborator"
"solver","boundary","solver::num_diff_levels_below","predicate non-void-command"
"solver","boundary","solver::num_diff_false_levels_below","predicate non-void-command collaborator"
"solver","boundary","solver::process_antecedent_for_minimization","predicate non-void-command collaborator"
"solver","boundary","solver::implied_by_marked","predicate non-void-command collaborator"
"solver","boundary","solver::reset_unmark","command"
"solver","boundary","solver::updt_lemma_lvl_set","command collaborator"
"solver","boundary","solver::minimize_lemma_binres","predicate non-void-command"
"solver","boundary","solver::minimize_lemma","predicate non-void-command collaborator"
"solver","boundary","solver::reset_lemma_var_marks","command collaborator"
"solver","boundary","solver::update_lrb_reasoned","command"
"solver","boundary","solver::update_lrb_reasoned","command collaborator"
"solver","boundary","solver::dyn_sub_res","predicate non-void-command collaborator"
"solver","boundary","solver::push","command collaborator"
"solver","boundary","solver::pop_reinit","command"
"solver","boundary","solver::pop_vars","command collaborator"
"solver","boundary","solver::shrink_vars","command collaborator"
"solver","boundary","solver::pop","command collaborator"
"solver","boundary","solver::unassign_vars","command collaborator"
"solver","boundary","solver::reinit_clauses","command collaborator"
"solver","boundary","solver::user_push","command collaborator"
"solver","boundary","solver::user_pop","command collaborator"
"solver","boundary","solver::pop_to_base_level","command"
"solver","boundary","solver::updt_params","command collaborator"
"solver","boundary","solver::collect_param_descrs","command collaborator"
"solver","boundary","solver::collect_statistics","collaborator"
"solver","boundary","solver::reset_statistics","command"
"solver","boundary","solver::rescale_activity","set"
"solver","boundary","solver::update_chb_activity","command collaborator"
"solver","boundary","solver::move_to_front","command collaborator"
"solver","boundary","solver::collect_bin_clauses","collaborator"
"solver","boundary","solver::check_invariant","predicate collaborator"
"solver","boundary","solver::check_marks","predicate collaborator"
"solver","boundary","solver::display_model","property collaborator"
"solver","boundary","solver::display_binary","collaborator"
"solver","boundary","solver::display_units","collaborator"
"solver","boundary","solver::display","collaborator"
"solver","boundary","solver::display_justification","property collaborator"
"solver","boundary","solver::num_clauses","collaborator"
"solver","boundary","solver::num_binary","void-accessor controller"
"solver","boundary","solver::display_dimacs","collaborator"
"solver","boundary","solver::display_wcnf","unclassified"
"solver","boundary","solver::display_watches","collaborator"
"solver","boundary","solver::display_watches","collaborator"
"solver","boundary","solver::display_watch_list","property collaborator"
"solver","boundary","solver::display_assignment","collaborator"
"solver","boundary","solver::is_unit","predicate collaborator"
"solver","boundary","solver::is_empty","predicate collaborator"
"solver","boundary","solver::check_missed_propagation","predicate collaborator"
"solver","boundary","solver::check_missed_propagation","predicate"
"solver","boundary","solver::do_cleanup","predicate non-void-command"
"solver","boundary","solver::simplify","command"
"solver","boundary","solver::scc_bin","non-void-command"
"solver","boundary","solver::find_mutexes","property non-void-command collaborator"
"solver","boundary","solver::get_consequences","property non-void-command collaborator"
"solver","boundary","solver::fixup_consequence_core","command"
"solver","boundary","solver::reached_max_conflicts","predicate set"
"solver","boundary","solver::get_bounded_consequences","property non-void-command collaborator"
"solver","boundary","solver::get_consequences","property non-void-command collaborator"
"solver","boundary","solver::delete_unfixed","void-accessor command collaborator"
"solver","boundary","solver::update_unfixed_literals","controller stateless"
"solver","boundary","solver::extract_fixed_consequences","void-accessor command collaborator"
"solver","boundary","solver::extract_fixed_consequences","command collaborator"
"solver","boundary","solver::check_domain","predicate non-void-command collaborator"
"solver","boundary","solver::extract_assumptions","predicate non-void-command collaborator"
"solver","boundary","solver::display_index_set","wrapper stateless"
"solver","boundary","solver::extract_fixed_consequences1","predicate non-void-command collaborator"
"solver","boundary","solver::extract_fixed_consequences","command collaborator"
"solver","boundary","solver::display_status","collaborator"
"solver","boundary","solver::all_distinct","predicate non-void-command collaborator"
"solver","boundary","solver::all_distinct","predicate non-void-command collaborator"
"solver","boundary","solver::mk_div_axiom","command collaborator"
"solver","boundary","solver::mk_to_int_axiom","command collaborator"
"solver","boundary","solver::mk_abs_axiom","command collaborator"
"solver","boundary","solver::mk_power0_axioms","command collaborator"
"solver","boundary","solver::mk_is_int_axiom","command collaborator"
"solver","boundary","solver::mk_idiv_mod_axioms","command collaborator"
"solver","boundary","solver::mk_rem_axiom","command collaborator"
"solver","boundary","solver::check_bv_term","predicate non-void-command collaborator"
"solver","boundary","solver::check_bv_terms","predicate set collaborator"
"solver","boundary","solver::mk_bv_axiom","command collaborator"
"solver","boundary","solver::mk_bound_axioms","command collaborator"
"solver","boundary","solver::add_farkas_clause","command collaborator"
"solver","boundary","solver::mk_bound_axiom","command collaborator"
"solver","boundary","solver::mk_var_bound","property non-void-command collaborator"
"solver","boundary","solver::bound2constraint_kind","wrapper stateless"
"solver","boundary","solver::new_eq_eh","command collaborator"
"solver","boundary","solver::new_diseq_eh","command collaborator"
"solver","boundary","solver::mk_diseq_axiom","command collaborator"
"solver","boundary","solver::assert_idiv_mod_axioms","command collaborator"
"solver","boundary","solver::check_idiv_bounds","predicate non-void-command collaborator"
"solver","boundary","solver::fixed_var_eh","command collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_justification","property collaborator"
"solver","boundary","solver::display_constraint","property collaborator"
"solver","boundary","solver::collect_statistics","collaborator"
"solver","boundary","solver::explain_assumptions","command collaborator"
"solver","boundary","solver::explain","property non-void-command collaborator"
"solver","boundary","solver::explain_conflict","property non-void-command collaborator"
"solver","boundary","solver::explain_implied_eq","property non-void-command collaborator"
"solver","boundary","solver::explain_trichotomy","property non-void-command collaborator"
"solver","boundary","solver::validate_conflict","predicate non-void-command"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::init_internalize","command"
"solver","boundary","solver::get_one","property non-void-command collaborator"
"solver","boundary","solver::get_zero","property non-void-command collaborator"
"solver","boundary","solver::ensure_nla","command collaborator"
"solver","boundary","solver::found_unsupported","set collaborator"
"solver","boundary","solver::found_underspecified","void-accessor command collaborator"
"solver","boundary","solver::add_const","property non-void-command collaborator"
"solver","boundary","solver::register_theory_var_in_lar_solver","property non-void-command collaborator"
"solver","boundary","solver::linearize_term","command collaborator"
"solver","boundary","solver::linearize_ineq","command collaborator"
"solver","boundary","solver::linearize","command collaborator"
"solver","boundary","solver::eq_internalized","command collaborator"
"solver","boundary","solver::mk_sub","property non-void-command collaborator"
"solver","boundary","solver::internalize_atom","predicate non-void-command collaborator"
"solver","boundary","solver::internalize_term","predicate non-void-command collaborator"
"solver","boundary","solver::internalize_def","property non-void-command collaborator"
"solver","boundary","solver::internalize_def","property non-void-command collaborator"
"solver","boundary","solver::internalize_args","command collaborator"
"solver","boundary","solver::ensure_arg_vars","command collaborator"
"solver","boundary","solver::internalize_power","property non-void-command collaborator"
"solver","boundary","solver::internalize_numeral","property non-void-command collaborator"
"solver","boundary","solver::internalize_mul","property non-void-command collaborator"
"solver","boundary","solver::internalize_linearized_def","property non-void-command collaborator"
"solver","boundary","solver::is_unit_var","controller stateless"
"solver","boundary","solver::init_left_side","command collaborator"
"solver","boundary","solver::mk_enode","property non-void-command collaborator"
"solver","boundary","solver::mk_evar","property non-void-command collaborator"
"solver","boundary","solver::has_var","predicate non-void-command collaborator"
"solver","boundary","solver::add_eq_constraint","command collaborator"
"solver","boundary","solver::add_ineq_constraint","command collaborator"
"solver","boundary","solver::add_def_constraint","command collaborator"
"solver","boundary","solver::add_def_constraint","command collaborator"
"solver","boundary","solver::add_def_constraint_and_equality","command collaborator"
"solver","boundary","solver::reflect","predicate collaborator"
"solver","boundary","solver::get_lpvar","property collaborator"
"solver","boundary","solver::is_shared","predicate collaborator"
"solver","boundary","solver::register_fixed_var","command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::asserted","command collaborator"
"solver","boundary","solver::clone","property non-void-command collaborator"
"solver","boundary","solver::unit_propagate","predicate non-void-command collaborator"
"solver","boundary","solver::propagate_basic_bounds","command collaborator"
"solver","boundary","solver::propagate_bound","command collaborator"
"solver","boundary","solver::propagate_bounds_with_lp_solver","command"
"solver","boundary","solver::propagate_lp_solver_bound","command collaborator"
"solver","boundary","solver::is_bound_implied","controller stateless"
"solver","boundary","solver::consume","command collaborator"
"solver","boundary","solver::add_equality","command collaborator"
"solver","boundary","solver::add_eq","predicate non-void-command collaborator"
"solver","boundary","solver::bound_is_interesting","predicate collaborator"
"solver","boundary","solver::refine_bound","command collaborator"
"solver","boundary","solver::assert_bound","command collaborator"
"solver","boundary","solver::propagate_eqs","command collaborator"
"solver","boundary","solver::set_bound","predicate non-void-command collaborator"
"solver","boundary","solver::flush_bound_axioms","command collaborator"
"solver","boundary","solver::first","controller stateless"
"solver","boundary","solver::next_inf","controller stateless"
"solver","boundary","solver::next_sup","controller stateless"
"solver","boundary","solver::dbg_finalize_model","command collaborator"
"solver","boundary","solver::get_value","predicate non-void-command collaborator"
"solver","boundary","solver::add_value","command collaborator"
"solver","boundary","solver::add_dep","predicate non-void-command collaborator"
"solver","boundary","solver::push_core","command collaborator"
"solver","boundary","solver::pop_core","command"
"solver","boundary","solver::del_bounds","command collaborator"
"solver","boundary","solver::report_equality_of_fixed_vars","command collaborator"
"solver","boundary","solver::is_equal","predicate collaborator"
"solver","boundary","solver::has_upper_bound","predicate non-void-command collaborator"
"solver","boundary","solver::has_lower_bound","predicate non-void-command collaborator"
"solver","boundary","solver::has_bound","predicate non-void-command collaborator"
"solver","boundary","solver::updt_unassigned_bounds","set"
"solver","boundary","solver::reserve_bounds","command collaborator"
"solver","boundary","solver::all_zeros","controller stateless"
"solver","boundary","solver::propagation_mode","property collaborator"
"solver","boundary","solver::init_model","command"
"solver","boundary","solver::get_phase","property non-void-command collaborator"
"solver","boundary","solver::is_registered_var","predicate collaborator"
"solver","boundary","solver::ensure_column","command collaborator"
"solver","boundary","solver::get_ivalue","property collaborator"
"solver","boundary","solver::get_column","property collaborator"
"solver","boundary","solver::get_value","property collaborator"
"solver","boundary","solver::random_update","command collaborator"
"solver","boundary","solver::include_func_interp","predicate collaborator"
"solver","boundary","solver::assume_eqs","predicate non-void-command collaborator"
"solver","boundary","solver::delayed_assume_eqs","predicate non-void-command collaborator"
"solver","boundary","solver::use_nra_model","predicate non-void-command"
"solver","boundary","solver::is_eq","predicate non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::nl_value","property collaborator"
"solver","boundary","solver::make_feasible","property non-void-command collaborator"
"solver","boundary","solver::check_delayed_eqs","predicate non-void-command collaborator"
"solver","boundary","solver::check_lia","property non-void-command collaborator"
"solver","boundary","solver::assign","command collaborator"
"solver","boundary","solver::get_infeasibility_explanation_and_set_conflict","command"
"solver","boundary","solver::set_conflict","command collaborator"
"solver","boundary","solver::set_conflict_or_lemma","command collaborator"
"solver","boundary","solver::is_infeasible","predicate"
"solver","boundary","solver::set_evidence","command collaborator"
"solver","boundary","solver::reset_evidence","command"
"solver","boundary","solver::mk_eq","property non-void-command collaborator"
"solver","boundary","solver::mk_bound","property non-void-command collaborator"
"solver","boundary","solver::mk_bound","property non-void-command collaborator"
"solver","boundary","solver::term2coeffs","command collaborator"
"solver","boundary","solver::term2coeffs","command collaborator"
"solver","boundary","solver::coeffs2app","property non-void-command collaborator"
"solver","boundary","solver::mk_term","property non-void-command collaborator"
"solver","boundary","solver::gcd_reduce","controller stateless"
"solver","boundary","solver::false_case_of_check_nla","command collaborator"
"solver","boundary","solver::mk_ineq_literal","property non-void-command collaborator"
"solver","boundary","solver::check_nla","property non-void-command collaborator"
"solver","boundary","solver::add_lemmas","command collaborator"
"solver","boundary","solver::propagate_nla","command"
"solver","boundary","solver::get_antecedents","command"
"solver","boundary","solver::include_func_interp","predicate collaborator"
"solver","boundary","solver::push_axiom","command collaborator"
"solver","boundary","solver::propagate_axiom","predicate non-void-command"
"solver","boundary","solver::assert_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_default","predicate non-void-command collaborator"
"solver","boundary","solver::assert_select","predicate non-void-command collaborator"
"solver","boundary","solver::assert_store_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_select_store_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_select_const_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_extensionality","predicate non-void-command collaborator"
"solver","boundary","solver::is_map_combinator","predicate collaborator"
"solver","boundary","solver::assert_select_map_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_select_as_array_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::apply_map","property non-void-command collaborator"
"solver","boundary","solver::assert_default_map_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_default_const_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_default_store_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_select_lambda_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::assert_congruent_axiom","predicate non-void-command collaborator"
"solver","boundary","solver::has_unitary_domain","predicate non-void-command collaborator"
"solver","boundary","solver::has_large_domain","predicate non-void-command collaborator"
"solver","boundary","solver::mk_epsilon","property non-void-command collaborator"
"solver","boundary","solver::add_delayed_axioms","predicate non-void-command collaborator"
"solver","boundary","solver::add_as_array_eqs","predicate non-void-command collaborator"
"solver","boundary","solver::add_interface_equalities","predicate non-void-command collaborator"
"solver","boundary","solver::collect_shared_vars","command collaborator"
"solver","boundary","solver::check_lambdas","predicate non-void-command collaborator"
"solver","boundary","solver::is_shared_arg","predicate non-void-command collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_info","property collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_justification","collaborator incidental"
"solver","boundary","solver::display_constraint","collaborator incidental"
"solver","boundary","solver::collect_statistics","controller"
"solver","boundary","solver::validate_check","unclassified"
"solver","boundary","solver::validate_select_store","collaborator"
"solver","boundary","solver::validate_extensionality","controller stateless"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::mk_var","property non-void-command collaborator"
"solver","boundary","solver::ensure_var","command collaborator"
"solver","boundary","solver::apply_sort_cnstr","command collaborator"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command collaborator"
"solver","boundary","solver::internalize_lambda_eh","command collaborator"
"solver","boundary","solver::internalize_eh","command collaborator"
"solver","boundary","solver::relevant_eh","command collaborator"
"solver","boundary","solver::is_shared","predicate collaborator"
"solver","boundary","solver::is_beta_redex","predicate collaborator"
"solver","boundary","solver::sort2diff","property non-void-command collaborator"
"solver","boundary","solver::init_model","command"
"solver","boundary","solver::finalize_model","command collaborator"
"solver","boundary","solver::add_dep","predicate non-void-command collaborator"
"solver","boundary","solver::add_value","void-accessor command collaborator"
"solver","boundary","solver::must_have_different_model_values","predicate non-void-command collaborator"
"solver","boundary","solver::collect_selects","command collaborator"
"solver","boundary","solver::propagate_select_to_store_parents","command collaborator"
"solver","boundary","solver::get_select_set","property non-void-command collaborator"
"solver","boundary","solver::collect_defaults","command collaborator"
"solver","boundary","solver::set_default","set collaborator"
"solver","boundary","solver::get_default","get non-void-command collaborator"
"solver","boundary","solver::set_else","set collaborator"
"solver","boundary","solver::get_else","get non-void-command collaborator"
"solver","boundary","solver::mg_find","property set collaborator"
"solver","boundary","solver::mg_merge","command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::pop_core","command"
"solver","boundary","solver::clone","property non-void-command collaborator"
"solver","boundary","solver::new_eq_eh","command collaborator"
"solver","boundary","solver::new_diseq_eh","command collaborator"
"solver","boundary","solver::unit_propagate","predicate non-void-command"
"solver","boundary","solver::merge_eh","command collaborator"
"solver","boundary","solver::add_parent_select","command collaborator"
"solver","boundary","solver::add_lambda","command collaborator"
"solver","boundary","solver::add_parent_lambda","command collaborator"
"solver","boundary","solver::add_parent_default","command collaborator"
"solver","boundary","solver::propagate_select_axioms","command collaborator"
"solver","boundary","solver::propagate_parent_default","command collaborator"
"solver","boundary","solver::propagate_parent_select_axioms","command collaborator"
"solver","boundary","solver::set_prop_upward","command collaborator"
"solver","boundary","solver::set_prop_upward_store","command collaborator"
"solver","boundary","solver::set_prop_upward","command collaborator"
"solver","boundary","solver::get_lambda_equiv_size","controller stateless"
"solver","boundary","solver::should_set_prop_upward","predicate collaborator"
"solver","boundary","solver::should_prop_upward","predicate collaborator"
"solver","boundary","solver::can_beta_reduce","predicate collaborator"
"solver","boundary","solver::check_delay_internalized","predicate non-void-command collaborator"
"solver","boundary","solver::should_bit_blast","predicate non-void-command collaborator"
"solver","boundary","solver::eval_args","property non-void-command collaborator"
"solver","boundary","solver::eval_bv","property non-void-command collaborator"
"solver","boundary","solver::check_lazy_mul","predicate non-void-command collaborator"
"solver","boundary","solver::check_mul","predicate non-void-command collaborator"
"solver","boundary","solver::check_mul_invertibility","predicate non-void-command collaborator"
"solver","boundary","solver::check_mul_zero","predicate non-void-command collaborator"
"solver","boundary","solver::check_mul_one","predicate non-void-command collaborator"
"solver","boundary","solver::encode_msb_tail","command collaborator"
"solver","boundary","solver::encode_lsb_tail","command collaborator"
"solver","boundary","solver::check_umul_no_overflow","predicate non-void-command collaborator"
"solver","boundary","solver::check_bv_eval","predicate non-void-command collaborator"
"solver","boundary","solver::check_bool_eval","predicate non-void-command collaborator"
"solver","boundary","solver::set_delay_internalize","command collaborator"
"solver","boundary","solver::get_internalize_mode","property non-void-command collaborator"
"solver","boundary","solver::del_eq_occurs","void-accessor command collaborator"
"solver","boundary","solver::mk_var","property non-void-command collaborator"
"solver","boundary","solver::apply_sort_cnstr","command collaborator"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command"
"solver","boundary","solver::internalize_circuit","predicate non-void-command collaborator"
"solver","boundary","solver::mk_bits","command collaborator"
"solver","boundary","solver::get_var","property non-void-command collaborator"
"solver","boundary","solver::get_arg","property non-void-command collaborator"
"solver","boundary","solver::get_arg_var","property non-void-command collaborator"
"solver","boundary","solver::get_bits","command collaborator"
"solver","boundary","solver::get_bits","command collaborator"
"solver","boundary","solver::get_arg_bits","command collaborator"
"solver","boundary","solver::register_true_false_bit","command collaborator"
"solver","boundary","solver::add_bit","command collaborator"
"solver","boundary","solver::mk_atom","non-void-command factory collaborator"
"solver","boundary","solver::set_bit_eh","command collaborator"
"solver","boundary","solver::init_bits","command collaborator"
"solver","boundary","solver::get_bv_size","non-void-command collaborator"
"solver","boundary","solver::get_bv_size","non-void-command collaborator"
"solver","boundary","solver::mk_true","get non-void-command collaborator"
"solver","boundary","solver::internalize_num","command collaborator"
"solver","boundary","solver::internalize_mkbv","command collaborator"
"solver","boundary","solver::internalize_bv2int","command collaborator"
"solver","boundary","solver::assert_bv2int_axiom","command collaborator"
"solver","boundary","solver::internalize_int2bv","command collaborator"
"solver","boundary","solver::assert_int2bv_axiom","command collaborator"
"solver","boundary","solver::internalize_le","command collaborator"
"solver","boundary","solver::internalize_carry","command collaborator"
"solver","boundary","solver::internalize_xor3","command collaborator"
"solver","boundary","solver::internalize_udiv_i","command collaborator"
"solver","boundary","solver::internalize_interp","command collaborator"
"solver","boundary","solver::internalize_unary","command collaborator"
"solver","boundary","solver::internalize_par_unary","command collaborator"
"solver","boundary","solver::internalize_binary","command collaborator"
"solver","boundary","solver::internalize_novfl","command collaborator"
"solver","boundary","solver::add_def","command collaborator"
"solver","boundary","solver::internalize_concat","command collaborator"
"solver","boundary","solver::internalize_sub","command collaborator"
"solver","boundary","solver::internalize_extract","command collaborator"
"solver","boundary","solver::internalize_repeat","command collaborator"
"solver","boundary","solver::internalize_bit2bool","command collaborator"
"solver","boundary","solver::eq_internalized","command collaborator"
"solver","boundary","solver::eq_internalized","command collaborator"
"solver","boundary","solver::assert_ackerman","command collaborator"
"solver","boundary","solver::validate_atoms","collaborator"
"solver","boundary","solver::check_missing_propagation","collaborator"
"solver","boundary","solver::check_zero_one_bits","predicate non-void-command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::is_fixed","predicate non-void-command collaborator"
"solver","boundary","solver::fixed_var_eh","command collaborator"
"solver","boundary","solver::add_fixed_eq","command collaborator"
"solver","boundary","solver::get_fixed_value","predicate collaborator"
"solver","boundary","solver::find_wpos","predicate non-void-command collaborator"
"solver","boundary","solver::find_new_diseq_axioms","command"
"solver","boundary","solver::mk_new_diseq_axiom","command collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::new_eq_eh","command collaborator"
"solver","boundary","solver::new_diseq_eh","command collaborator"
"solver","boundary","solver::get_reward","collaborator incidental"
"solver","boundary","solver::is_extended_binary","collaborator incidental"
"solver","boundary","solver::is_external","collaborator incidental"
"solver","boundary","solver::get_justification_eq","property non-void-command collaborator"
"solver","boundary","solver::get_antecedents","command collaborator"
"solver","boundary","solver::log_drat","command collaborator"
"solver","boundary","solver::asserted","command collaborator"
"solver","boundary","solver::unit_propagate","predicate non-void-command collaborator"
"solver","boundary","solver::propagate_eq_occurs","predicate non-void-command collaborator"
"solver","boundary","solver::propagate_bits","predicate non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::push_core","command"
"solver","boundary","solver::pop_core","command"
"solver","boundary","solver::simplify","command"
"solver","boundary","solver::set_root","predicate non-void-command collaborator"
"solver","boundary","solver::flush_roots","get command collaborator"
"solver","boundary","solver::clauses_modifed","empty"
"solver","boundary","solver::get_phase","collaborator incidental"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_justification","property collaborator"
"solver","boundary","solver::display_constraint","property collaborator"
"solver","boundary","solver::display","controller stateless"
"solver","boundary","solver::collect_statistics","controller"
"solver","boundary","solver::copy","wrapper stateless"
"solver","boundary","solver::clone","property non-void-command collaborator"
"solver","boundary","solver::pop_reinit","empty"
"solver","boundary","solver::validate","incidental"
"solver","boundary","solver::init_use_list","empty"
"solver","boundary","solver::is_blocked","collaborator incidental"
"solver","boundary","solver::check_model","collaborator incidental"
"solver","boundary","solver::finalize_model","empty"
"solver","boundary","solver::add_value","void-accessor command collaborator"
"solver","boundary","solver::get_bit","property collaborator"
"solver","boundary","solver::get_trail_stack","property non-void-command collaborator"
"solver","boundary","solver::merge_eh","command collaborator"
"solver","boundary","solver::mk_eq2bit_justification","property non-void-command collaborator"
"solver","boundary","solver::mk_bit2eq_justification","property non-void-command collaborator"
"solver","boundary","solver::mk_bit2ne_justification","property non-void-command collaborator"
"solver","boundary","solver::mk_ne2bit_justification","property non-void-command collaborator"
"solver","boundary","solver::mk_bv2int_justification","property non-void-command collaborator"
"solver","boundary","solver::assign_bit","predicate non-void-command collaborator"
"solver","boundary","solver::unmerge_eh","command collaborator"
"solver","boundary","solver::merge_zero_one_bits","predicate non-void-command collaborator"
"solver","boundary","solver::power2","get collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::clone_var","command collaborator"
"solver","boundary","solver::clone","property non-void-command collaborator"
"solver","boundary","solver::clear_mark","controller"
"solver","boundary","solver::oc_mark_on_stack","controller stateless"
"solver","boundary","solver::oc_mark_cycle_free","controller stateless"
"solver","boundary","solver::oc_push_stack","command collaborator"
"solver","boundary","solver::assert_eq_axiom","command collaborator"
"solver","boundary","solver::assert_is_constructor_axiom","command collaborator"
"solver","boundary","solver::assert_accessor_axioms","command collaborator"
"solver","boundary","solver::sign_recognizer_conflict","command collaborator"
"solver","boundary","solver::assert_update_field_axioms","command collaborator"
"solver","boundary","solver::mk_var","property non-void-command collaborator"
"solver","boundary","solver::mk_split","command collaborator"
"solver","boundary","solver::mk_recognizer_constructor_literal","property non-void-command collaborator"
"solver","boundary","solver::mk_enum_split","command collaborator"
"solver","boundary","solver::apply_sort_cnstr","command collaborator"
"solver","boundary","solver::new_eq_eh","command collaborator"
"solver","boundary","solver::asserted","command collaborator"
"solver","boundary","solver::add_recognizer","command collaborator"
"solver","boundary","solver::propagate_recognizer","command collaborator"
"solver","boundary","solver::merge_eh","command collaborator"
"solver","boundary","solver::get_array_args","get non-void-command collaborator"
"solver","boundary","solver::get_seq_args","get non-void-command collaborator"
"solver","boundary","solver::oc_get_cstor","property collaborator"
"solver","boundary","solver::explain_is_child","command collaborator"
"solver","boundary","solver::occurs_check_explain","void-accessor command collaborator"
"solver","boundary","solver::occurs_check_enter","predicate non-void-command collaborator"
"solver","boundary","solver::occurs_check","predicate non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::pop_core","command"
"solver","boundary","solver::get_antecedents","command"
"solver","boundary","solver::add_value","command collaborator"
"solver","boundary","solver::add_dep","predicate non-void-command collaborator"
"solver","boundary","solver::include_func_interp","predicate collaborator"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command collaborator"
"solver","boundary","solver::collect_statistics","controller"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_var","collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::mk_literal","property non-void-command collaborator"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::attach_node","command collaborator"
"solver","boundary","solver::attach_lit","property non-void-command collaborator"
"solver","boundary","solver::internalize_root","predicate non-void-command collaborator"
"solver","boundary","solver::add_not_distinct_axiom","command collaborator"
"solver","boundary","solver::add_distinct_axiom","command collaborator"
"solver","boundary","solver::axiomatize_basic","command collaborator"
"solver","boundary","solver::is_shared","predicate collaborator"
"solver","boundary","solver::is_beta_redex","predicate collaborator"
"solver","boundary","solver::mk_eq","property non-void-command collaborator"
"solver","boundary","solver::get_max_generation","collaborator"
"solver","boundary","solver::e_internalize","property non-void-command collaborator"
"solver","boundary","solver::mk_enode","property non-void-command collaborator"
"solver","boundary","solver::add_assertion","command collaborator"
"solver","boundary","solver::check_eqc_bool_assignment","collaborator"
"solver","boundary","solver::check_missing_bool_enode_propagation","collaborator"
"solver","boundary","solver::check_missing_eq_propagation","collaborator"
"solver","boundary","solver::local_search","property non-void-command collaborator"
"solver","boundary","solver::save_model","set collaborator"
"solver","boundary","solver::get_sls_model","property non-void-command collaborator"
"solver","boundary","solver::update_model","void-accessor command collaborator"
"solver","boundary","solver::include_func_interp","predicate non-void-command collaborator"
"solver","boundary","solver::collect_dependencies","command collaborator"
"solver","boundary","solver::dependencies2values","command collaborator"
"solver","boundary","solver::values2model","command collaborator"
"solver","boundary","solver::register_macros","empty"
"solver","boundary","solver::model_updated","command collaborator"
"solver","boundary","solver::values2root","get non-void-command collaborator"
"solver","boundary","solver::node2value","property collaborator"
"solver","boundary","solver::display_validation_failure","command collaborator"
"solver","boundary","solver::validate_model","command collaborator"
"solver","boundary","solver::init_proof","command"
"solver","boundary","solver::get_justification_eq","property non-void-command collaborator"
"solver","boundary","solver::log_justifications","command collaborator"
"solver","boundary","solver::log_antecedents","command collaborator"
"solver","boundary","solver::log_rup","command collaborator"
"solver","boundary","solver::log_antecedents","command collaborator"
"solver","boundary","solver::mk_hint","property non-void-command factory collaborator"
"solver","boundary","solver::mk_cc_proof_hint","property non-void-command factory collaborator"
"solver","boundary","solver::mk_tc_proof_hint","property non-void-command factory collaborator"
"solver","boundary","solver::mk_smt_clause","property non-void-command factory collaborator"
"solver","boundary","solver::mk_smt_hint","property non-void-command factory collaborator"
"solver","boundary","solver::mk_smt_hint","property non-void-command collaborator"
"solver","boundary","solver::mk_tseitin_status","property non-void-command collaborator"
"solver","boundary","solver::mk_tseitin_status","property non-void-command collaborator"
"solver","boundary","solver::mk_distinct_status","property non-void-command collaborator"
"solver","boundary","solver::set_tmp_bool_var","controller stateless"
"solver","boundary","solver::log_justification","command collaborator"
"solver","boundary","solver::on_clause","command collaborator"
"solver","boundary","solver::on_clause_eh","command collaborator"
"solver","boundary","solver::on_proof","command collaborator"
"solver","boundary","solver::on_check","command collaborator"
"solver","boundary","solver::on_lemma","command collaborator"
"solver","boundary","solver::on_instantiation","command collaborator"
"solver","boundary","solver::visit_clause","predicate non-void-command collaborator"
"solver","boundary","solver::display_assert","command collaborator"
"solver","boundary","solver::display_assume","command collaborator"
"solver","boundary","solver::display_inferred","command collaborator"
"solver","boundary","solver::display_deleted","command collaborator"
"solver","boundary","solver::display_hint","property non-void-command collaborator"
"solver","boundary","solver::status2proof_hint","property non-void-command collaborator"
"solver","boundary","solver::display_literals","property non-void-command collaborator"
"solver","boundary","solver::visit_expr","command collaborator"
"solver","boundary","solver::display_expr","property non-void-command collaborator"
"solver","boundary","solver::solver","constructor"
"solver","boundary","solver::updt_params","command collaborator"
"solver","boundary","solver::bool_var2solver","property non-void-command collaborator"
"solver","boundary","solver::expr2solver","property non-void-command collaborator"
"solver","boundary","solver::quantifier2solver","property non-void-command collaborator"
"solver","boundary","solver::get_solver","property non-void-command collaborator"
"solver","boundary","solver::add_solver","command collaborator"
"solver","boundary","solver::unhandled_function","command collaborator"
"solver","boundary","solver::init_search","command"
"solver","boundary","solver::is_external","predicate non-void-command collaborator"
"solver","boundary","solver::propagated","predicate controller"
"solver","boundary","solver::set_conflict","command collaborator"
"solver","boundary","solver::propagate","command collaborator"
"solver","boundary","solver::resolve_conflict","property non-void-command collaborator"
"solver","boundary","solver::get_antecedents","void-accessor command"
"solver","boundary","solver::get_eq_antecedents","command collaborator"
"solver","boundary","solver::get_th_antecedents","command collaborator"
"solver","boundary","solver::add_eq_antecedent","command collaborator"
"solver","boundary","solver::explain_diseq","command collaborator"
"solver","boundary","solver::propagate","predicate non-void-command collaborator"
"solver","boundary","solver::get_euf_antecedents","command collaborator"
"solver","boundary","solver::set_eliminated","command collaborator"
"solver","boundary","solver::decide","predicate controller"
"solver","boundary","solver::get_case_split","predicate controller"
"solver","boundary","solver::asserted","command collaborator"
"solver","boundary","solver::lit_constraint","property non-void-command collaborator"
"solver","boundary","solver::can_propagate","predicate non-void-command"
"solver","boundary","solver::unit_propagate","predicate non-void-command"
"solver","boundary","solver::propagate_literal","void-accessor command collaborator"
"solver","boundary","solver::is_self_propagated","predicate non-void-command collaborator"
"solver","boundary","solver::propagate_th_eqs","command collaborator"
"solver","boundary","solver::mk_constraint","factory wrapper"
"solver","boundary","solver::mk_true","property non-void-command collaborator"
"solver","boundary","solver::mk_false","property non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::merge_shared_bools","predicate non-void-command collaborator"
"solver","boundary","solver::push","command collaborator"
"solver","boundary","solver::pop","command collaborator"
"solver","boundary","solver::user_push","command"
"solver","boundary","solver::user_pop","command"
"solver","boundary","solver::start_reinit","command collaborator"
"solver","boundary","solver::finish_reinit","command collaborator"
"solver","boundary","solver::relevancy_reinit","command collaborator"
"solver","boundary","solver::is_relevant","predicate collaborator"
"solver","boundary","solver::relevant_eh","command collaborator"
"solver","boundary","solver::enable_ackerman_axioms","predicate collaborator"
"solver","boundary","solver::is_fixed","predicate non-void-command collaborator"
"solver","boundary","solver::pre_simplify","controller"
"solver","boundary","solver::simplify","command"
"solver","boundary","solver::should_research","predicate controller"
"solver","boundary","solver::add_assumptions","controller"
"solver","boundary","solver::tracking_assumptions","predicate controller"
"solver","boundary","solver::clauses_modifed","controller"
"solver","boundary","solver::get_phase","property non-void-command collaborator"
"solver","boundary","solver::set_root","predicate non-void-command collaborator"
"solver","boundary","solver::flush_roots","command"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_justification_ptr","property collaborator"
"solver","boundary","solver::display_justification","property collaborator"
"solver","boundary","solver::display_constraint","property collaborator"
"solver","boundary","solver::collect_statistics","collaborator"
"solver","boundary","solver::copy","property controller"
"solver","boundary","solver::copy","property non-void-command collaborator"
"solver","boundary","solver::find_mutexes","controller"
"solver","boundary","solver::gc","controller"
"solver","boundary","solver::pop_reinit","command"
"solver","boundary","solver::validate","predicate non-void-command"
"solver","boundary","solver::init_use_list","controller"
"solver","boundary","solver::is_blocked","predicate controller"
"solver","boundary","solver::check_model","predicate controller"
"solver","boundary","solver::gc_vars","controller"
"solver","boundary","solver::get_reward","property controller"
"solver","boundary","solver::is_extended_binary","predicate controller"
"solver","boundary","solver::init_ackerman","command collaborator"
"solver","boundary","solver::to_formulas","predicate non-void-command collaborator"
"solver","boundary","solver::extract_pb","predicate controller"
"solver","boundary","solver::register_on_clause","command collaborator"
"solver","boundary","solver::user_propagate_init","command collaborator"
"solver","boundary","solver::watches_fixed","predicate collaborator"
"solver","boundary","solver::assign_fixed","command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::convert","property non-void-command collaborator"
"solver","boundary","solver::mk_side_conditions","property non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::attach_new_th_var","command collaborator"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command collaborator"
"solver","boundary","solver::apply_sort_cnstr","command collaborator"
"solver","boundary","solver::unit_propagate","predicate non-void-command"
"solver","boundary","solver::unit_propagate","command collaborator"
"solver","boundary","solver::activate","command collaborator"
"solver","boundary","solver::ensure_equality_relation","command collaborator"
"solver","boundary","solver::new_eq_eh","command collaborator"
"solver","boundary","solver::new_diseq_eh","command collaborator"
"solver","boundary","solver::asserted","command collaborator"
"solver","boundary","solver::add_value","command collaborator"
"solver","boundary","solver::add_dep","predicate non-void-command collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::finalize_model","command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::mk_var","property non-void-command collaborator"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command collaborator"
"solver","boundary","solver::eq_internalized","command collaborator"
"solver","boundary","solver::set_translated","command collaborator"
"solver","boundary","solver::internalize_bv","command collaborator"
"solver","boundary","solver::add_bound_axioms","predicate non-void-command collaborator"
"solver","boundary","solver::add_predicate_axioms","predicate non-void-command collaborator"
"solver","boundary","solver::unit_propagate","predicate non-void-command"
"solver","boundary","solver::ensure_translated","command collaborator"
"solver","boundary","solver::check_axiom","controller stateless"
"solver","boundary","solver::check_propagation","property non-void-command collaborator"
"solver","boundary","solver::check_core","property non-void-command collaborator"
"solver","boundary","solver::check_solver_state","property non-void-command collaborator"
"solver","boundary","solver::is_bv","predicate non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::is_bounded","predicate non-void-command collaborator"
"solver","boundary","solver::is_non_negative","predicate non-void-command collaborator"
"solver","boundary","solver::umod","property non-void-command collaborator"
"solver","boundary","solver::smod","property non-void-command collaborator"
"solver","boundary","solver::mul","property non-void-command collaborator"
"solver","boundary","solver::add","property non-void-command collaborator"
"solver","boundary","solver::amod","property non-void-command collaborator"
"solver","boundary","solver::bv_size","property non-void-command collaborator"
"solver","boundary","solver::translate_expr","command collaborator"
"solver","boundary","solver::translate_quantifier","command collaborator"
"solver","boundary","solver::translate_var","command collaborator"
"solver","boundary","solver::translate_app","command collaborator"
"solver","boundary","solver::translate_bv","command collaborator"
"solver","boundary","solver::if_eq","property non-void-command collaborator"
"solver","boundary","solver::translate_basic","command collaborator"
"solver","boundary","solver::get_value","property collaborator"
"solver","boundary","solver::add_value","command collaborator"
"solver","boundary","solver::add_dep","predicate non-void-command collaborator"
"solver","boundary","solver::add_value_solver","command collaborator"
"solver","boundary","solver::add_value_plugin","command collaborator"
"solver","boundary","solver::finalize_model","command collaborator"
"solver","boundary","solver::unsat_core","get collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::collect_statistics","controller"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize_pb","property non-void-command collaborator"
"solver","boundary","solver::check_unsigned","controller stateless"
"solver","boundary","solver::convert_to_wlits","command collaborator"
"solver","boundary","solver::convert_pb_args","command collaborator"
"solver","boundary","solver::convert_pb_args","command collaborator"
"solver","boundary","solver::convert_pb_le","property non-void-command collaborator"
"solver","boundary","solver::convert_pb_ge","property non-void-command collaborator"
"solver","boundary","solver::convert_pb_eq","property non-void-command collaborator"
"solver","boundary","solver::convert_at_least_k","property non-void-command collaborator"
"solver","boundary","solver::convert_at_most_k","property non-void-command collaborator"
"solver","boundary","solver::convert_eq_k","property non-void-command collaborator"
"solver","boundary","solver::get_card","property non-void-command collaborator"
"solver","boundary","solver::get_pb","property non-void-command collaborator"
"solver","boundary","solver::to_formulas","predicate non-void-command collaborator"
"solver","boundary","solver::set_conflict","command collaborator"
"solver","boundary","solver::assign","command collaborator"
"solver","boundary","solver::simplify","command collaborator"
"solver","boundary","solver::split_root","command collaborator"
"solver","boundary","solver::add_index","command collaborator"
"solver","boundary","solver::add_assign","property non-void-command collaborator"
"solver","boundary","solver::recompile","void-accessor command collaborator"
"solver","boundary","solver::inc_coeff","command"
"solver","boundary","solver::get_coeff","property collaborator"
"solver","boundary","solver::get_coeff","property collaborator"
"solver","boundary","solver::get_wliteral","property non-void-command collaborator"
"solver","boundary","solver::get_abs_coeff","collaborator"
"solver","boundary","solver::get_int_coeff","property set collaborator"
"solver","boundary","solver::inc_bound","command"
"solver","boundary","solver::reset_coeffs","command"
"solver","boundary","solver::bail_resolve_conflict","command collaborator"
"solver","boundary","solver::resolve_conflict","property non-void-command collaborator"
"solver","boundary","solver::round_to_one","void-accessor command collaborator"
"solver","boundary","solver::round_to_one","command collaborator"
"solver","boundary","solver::divide","command"
"solver","boundary","solver::resolve_on","set collaborator"
"solver","boundary","solver::resolve_with","command collaborator"
"solver","boundary","solver::reset_marks","command collaborator"
"solver","boundary","solver::mark_variables","command collaborator"
"solver","boundary","solver::resolve_conflict_rs","property non-void-command collaborator"
"solver","boundary","solver::create_asserting_lemma","predicate non-void-command"
"solver","boundary","solver::cut","command"
"solver","boundary","solver::process_card","command"
"solver","boundary","solver::process_antecedent","command"
"solver","boundary","solver::get_asserting_literal","property non-void-command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::solver","constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::add_at_least","command collaborator"
"solver","boundary","solver::add_at_least","property non-void-command factory collaborator"
"solver","boundary","solver::add_constraint","command collaborator"
"solver","boundary","solver::init_watch","predicate non-void-command collaborator"
"solver","boundary","solver::add_assign","property non-void-command collaborator"
"solver","boundary","solver::add_pb_ge","property non-void-command factory collaborator"
"solver","boundary","solver::add_pb_ge","command collaborator"
"solver","boundary","solver::is_external","collaborator incidental"
"solver","boundary","solver::propagated","predicate non-void-command collaborator"
"solver","boundary","solver::get_reward","property collaborator"
"solver","boundary","solver::ensure_parity_size","command collaborator"
"solver","boundary","solver::get_parity","non-void-command collaborator"
"solver","boundary","solver::inc_parity","set collaborator"
"solver","boundary","solver::reset_parity","set collaborator"
"solver","boundary","solver::assigned_above","predicate non-void-command collaborator"
"solver","boundary","solver::get_antecedents","command collaborator"
"solver","boundary","solver::is_extended_binary","predicate non-void-command collaborator"
"solver","boundary","solver::get_antecedents","command collaborator"
"solver","boundary","solver::get_antecedents","command"
"solver","boundary","solver::get_antecedents","command collaborator"
"solver","boundary","solver::clear_watch","controller"
"solver","boundary","solver::remove_constraint","set"
"solver","boundary","solver::validate_unit_propagation","predicate controller"
"solver","boundary","solver::validate_conflict","predicate collaborator"
"solver","boundary","solver::eval","property collaborator"
"solver","boundary","solver::eval","property collaborator"
"solver","boundary","solver::eval","collaborator incidental"
"solver","boundary","solver::validate","predicate non-void-command collaborator"
"solver","boundary","solver::validate_watch_literals","predicate collaborator"
"solver","boundary","solver::validate_watch_literal","predicate collaborator"
"solver","boundary","solver::validate_watched_constraint","predicate collaborator"
"solver","boundary","solver::validate_watch","predicate collaborator"
"solver","boundary","solver::update_psm","collaborator"
"solver","boundary","solver::gc","command"
"solver","boundary","solver::gc_half","command collaborator"
"solver","boundary","solver::gc_vars","command"
"solver","boundary","solver::gc_vars","void-accessor command collaborator"
"solver","boundary","solver::add_assign","property non-void-command collaborator"
"solver","boundary","solver::asserted","empty"
"solver","boundary","solver::check","collaborator incidental"
"solver","boundary","solver::push","command"
"solver","boundary","solver::pop","command"
"solver","boundary","solver::pop_reinit","command collaborator"
"solver","boundary","solver::simplify","command"
"solver","boundary","solver::mutex_reduction","command"
"solver","boundary","solver::reserve_roots","command"
"solver","boundary","solver::set_root","predicate non-void-command collaborator"
"solver","boundary","solver::flush_roots","command"
"solver","boundary","solver::validate_eliminated","command"
"solver","boundary","solver::validate_eliminated","command collaborator"
"solver","boundary","solver::recompile","command collaborator"
"solver","boundary","solver::recompile","void-accessor command collaborator"
"solver","boundary","solver::clausify","predicate non-void-command"
"solver","boundary","solver::init_use_lists","command collaborator"
"solver","boundary","solver::remove_unused_defs","command collaborator"
"solver","boundary","solver::incremental_mode","predicate"
"solver","boundary","solver::set_non_external","non-void-command collaborator"
"solver","boundary","solver::elim_pure","predicate non-void-command collaborator"
"solver","boundary","solver::elim_pure","non-void-command collaborator"
"solver","boundary","solver::unit_strengthen","command"
"solver","boundary","solver::unit_strengthen","set collaborator"
"solver","boundary","solver::subsumption","command collaborator"
"solver","boundary","solver::init_visited","command"
"solver","boundary","solver::mark_visited","command collaborator"
"solver","boundary","solver::mark_visited","command collaborator"
"solver","boundary","solver::is_visited","predicate collaborator"
"solver","boundary","solver::is_visited","predicate collaborator"
"solver","boundary","solver::cleanup_clauses","command"
"solver","boundary","solver::cleanup_clauses","command collaborator"
"solver","boundary","solver::cleanup_constraints","command"
"solver","boundary","solver::cleanup_constraints","command collaborator"
"solver","boundary","solver::subsumes","predicate non-void-command collaborator"
"solver","boundary","solver::subsumes","predicate non-void-command"
"solver","boundary","solver::subsumes","predicate non-void-command collaborator"
"solver","boundary","solver::subsumes","command collaborator"
"solver","boundary","solver::get_min_occurrence_literal","property controller"
"solver","boundary","solver::card_subsumption","command collaborator"
"solver","boundary","solver::clause_subsumption","command collaborator"
"solver","boundary","solver::set_non_learned","command collaborator"
"solver","boundary","solver::binary_subsumption","command collaborator"
"solver","boundary","solver::subsumption","command collaborator"
"solver","boundary","solver::subsumption","command collaborator"
"solver","boundary","solver::clauses_modifed","empty"
"solver","boundary","solver::get_phase","collaborator incidental"
"solver","boundary","solver::assert_unconstrained","command collaborator"
"solver","boundary","solver::copy","property non-void-command collaborator"
"solver","boundary","solver::clone","property non-void-command collaborator"
"solver","boundary","solver::clone_aux","property non-void-command collaborator"
"solver","boundary","solver::copy_constraints","controller stateless"
"solver","boundary","solver::init_use_list","command collaborator"
"solver","boundary","solver::is_blocked","predicate non-void-command collaborator"
"solver","boundary","solver::find_mutexes","controller"
"solver","boundary","solver::display","unclassified"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_justification","property collaborator"
"solver","boundary","solver::display_constraint","property collaborator"
"solver","boundary","solver::display","property controller"
"solver","boundary","solver::collect_statistics","controller"
"solver","boundary","solver::validate_unit_propagation","predicate collaborator"
"solver","boundary","solver::validate_lemma","predicate non-void-command collaborator"
"solver","boundary","solver::validate_ineq","predicate collaborator"
"solver","boundary","solver::reset_active_var_set","command"
"solver","boundary","solver::test_and_set_active","predicate non-void-command collaborator"
"solver","boundary","solver::active2pb","command collaborator"
"solver","boundary","solver::active2wlits","command"
"solver","boundary","solver::active2wlits","command collaborator"
"solver","boundary","solver::active2lemma","property non-void-command collaborator"
"solver","boundary","solver::active2constraint","property non-void-command collaborator"
"solver","boundary","solver::active2card","property non-void-command collaborator"
"solver","boundary","solver::justification2pb","command collaborator"
"solver","boundary","solver::constraint2pb","controller stateless"
"solver","boundary","solver::validate_resolvent","predicate non-void-command collaborator"
"solver","boundary","solver::translate_to_sat","property non-void-command collaborator"
"solver","boundary","solver::translate_to_sat","property non-void-command collaborator"
"solver","boundary","solver::translate_to_sat","controller stateless"
"solver","boundary","solver::negate","controller stateless"
"solver","boundary","solver::push_lit","controller stateless"
"solver","boundary","solver::validate_conflict","predicate non-void-command collaborator"
"solver","boundary","solver::check_model","predicate collaborator"
"solver","boundary","solver::extract_pb","predicate controller"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::asserted","command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_constraint","property collaborator"
"solver","boundary","solver::collect_statistics","collaborator"
"solver","boundary","solver::clone","controller stateless"
"solver","boundary","solver::unit_propagate","predicate non-void-command"
"solver","boundary","solver::mk_var","property non-void-command collaborator"
"solver","boundary","solver::instantiate","property non-void-command collaborator"
"solver","boundary","solver::skolemize","property non-void-command collaborator"
"solver","boundary","solver::specialize","property non-void-command collaborator"
"solver","boundary","solver::init_search","command"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::finalize_model","command collaborator"
"solver","boundary","solver::flatten","property non-void-command collaborator"
"solver","boundary","solver::init_units","command collaborator"
"solver","boundary","solver::get_unit","property non-void-command collaborator"
"solver","boundary","solver::expand","predicate non-void-command collaborator"
"solver","boundary","solver::split","predicate non-void-command collaborator"
"solver","boundary","solver::is_literal","predicate non-void-command collaborator"
"solver","boundary","solver::get_antecedents","command"
"solver","boundary","solver::log_instantiation","command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::reset","command"
"solver","boundary","solver::apply_args","property non-void-command factory collaborator"
"solver","boundary","solver::assert_macro_axiom","command collaborator"
"solver","boundary","solver::assert_case_axioms","command collaborator"
"solver","boundary","solver::assert_guard","command collaborator"
"solver","boundary","solver::block_core","controller stateless"
"solver","boundary","solver::disable_guard","command collaborator"
"solver","boundary","solver::assert_body_axiom","command collaborator"
"solver","boundary","solver::get_antecedents","wrapper stateless"
"solver","boundary","solver::asserted","command collaborator"
"solver","boundary","solver::check","collaborator incidental"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::collect_statistics","controller"
"solver","boundary","solver::clone","wrapper stateless"
"solver","boundary","solver::unit_propagate","predicate non-void-command"
"solver","boundary","solver::push_prop","command collaborator"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command collaborator"
"solver","boundary","solver::add_assumptions","command collaborator"
"solver","boundary","solver::should_research","predicate non-void-command collaborator"
"solver","boundary","solver::is_beta_redex","predicate collaborator"
"solver","boundary","solver::add_dep","controller stateless"
"solver","boundary","solver::add_value","controller stateless"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::finalize","command"
"solver","boundary","solver::check","collaborator incidental"
"solver","boundary","solver::unit_propagate","predicate non-void-command"
"solver","boundary","solver::is_unit","predicate non-void-command collaborator"
"solver","boundary","solver::pop_core","command collaborator"
"solver","boundary","solver::init_search","command"
"solver","boundary","solver::sample_local_search","command collaborator"
"solver","boundary","solver::run_local_search","command"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::asserted","empty"
"solver","boundary","solver::check","collaborator incidental"
"solver","boundary","solver::display","collaborator incidental"
"solver","boundary","solver::collect_statistics","empty"
"solver","boundary","solver::clone","property non-void-command collaborator"
"solver","boundary","solver::new_eq_eh","command collaborator"
"solver","boundary","solver::add_value","empty"
"solver","boundary","solver::add_dep","collaborator incidental"
"solver","boundary","solver::include_func_interp","collaborator incidental"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command collaborator"
"solver","boundary","solver::mk_var","property non-void-command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::~solver","destructor"
"solver","boundary","solver::add_expr","command collaborator"
"solver","boundary","solver::propagate_cb","predicate non-void-command collaborator"
"solver","boundary","solver::register_cb","command collaborator"
"solver","boundary","solver::next_split_cb","predicate non-void-command collaborator"
"solver","boundary","solver::check","property non-void-command collaborator"
"solver","boundary","solver::new_fixed_eh","command collaborator"
"solver","boundary","solver::decide","predicate non-void-command collaborator"
"solver","boundary","solver::get_case_split","predicate non-void-command collaborator"
"solver","boundary","solver::asserted","command collaborator"
"solver","boundary","solver::new_eq_eh","command collaborator"
"solver","boundary","solver::new_diseq_eh","command collaborator"
"solver","boundary","solver::push_core","command"
"solver","boundary","solver::pop_core","command"
"solver","boundary","solver::propagate_consequence","command collaborator"
"solver","boundary","solver::propagate_new_fixed","command collaborator"
"solver","boundary","solver::unit_propagate","predicate non-void-command collaborator"
"solver","boundary","solver::replay_clause","command collaborator"
"solver","boundary","solver::persist_clause","command collaborator"
"solver","boundary","solver::collect_statistics","collaborator"
"solver","boundary","solver::mk_justification","property non-void-command collaborator"
"solver","boundary","solver::get_antecedents","command collaborator"
"solver","boundary","solver::validate_propagation","command collaborator"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_justification","property set collaborator"
"solver","boundary","solver::display_constraint","property collaborator"
"solver","boundary","solver::clone","property non-void-command collaborator"
"solver","boundary","solver::internalize","property non-void-command collaborator"
"solver","boundary","solver::internalize","command collaborator"
"solver","boundary","solver::visit","predicate non-void-command collaborator"
"solver","boundary","solver::visited","predicate non-void-command collaborator"
"solver","boundary","solver::post_visit","predicate non-void-command collaborator"
"solver","boundary","solver::enode_to_bool","property non-void-command collaborator"
"solver","boundary","solver::solver","copy-constructor"
"solver","boundary","solver::clone","wrapper stateless"
"solver","boundary","solver::asserted","empty"
"solver","boundary","solver::unit_propagate","incidental"
"solver","boundary","solver::get_antecedents","empty"
"solver","boundary","solver::check","collaborator incidental"
"solver","boundary","solver::push","empty"
"solver","boundary","solver::pop","empty"
"solver","boundary","solver::pre_simplify","empty"
"solver","boundary","solver::simplify","empty"
"solver","boundary","solver::display","collaborator incidental"
"solver","boundary","solver::display_justification","collaborator incidental"
"solver","boundary","solver::display_constraint","collaborator incidental"
"solver","boundary","solver::get_num_assertions","wrapper stateless"
"solver","boundary","solver::get_assertion","wrapper stateless"
"solver","boundary","solver::display","property collaborator"
"solver","boundary","solver::display_dimacs","property collaborator"
"solver","boundary","solver::get_assertions","collaborator"
"solver","boundary","solver::get_assertions","property collaborator"
"solver","boundary","solver::get_consequences","property non-void-command collaborator"
"solver","boundary","solver::get_consequences_core","property non-void-command collaborator"
"solver","boundary","solver::find_mutexes","collaborator incidental"
"solver","boundary","solver::preferred_sat","property non-void-command collaborator"
"solver","boundary","solver::is_literal","controller stateless"
"solver","boundary","solver::assert_expr","command collaborator"
"solver","boundary","solver::assert_expr","command collaborator"
"solver","boundary","solver::collect_param_descrs","controller"
"solver","boundary","solver::reset_params","set collaborator"
"solver","boundary","solver::updt_params","set collaborator"
"solver","boundary","solver::get_units","property non-void-command collaborator"
"solver","boundary","solver::get_non_units","property non-void-command collaborator"
"solver","boundary","solver::check_sat","property non-void-command collaborator"
"solver","boundary","solver::dump_state","command collaborator"
"approx_nat","unclassified","approx_nat","constructor"
"approx_nat","unclassified","is_huge","predicate"
"approx_nat","unclassified","get_value","get"
"approx_nat","unclassified","operator+=","property non-void-command"
"approx_nat","unclassified","operator*=","property non-void-command"
"approx_nat","unclassified","operator<","predicate"
"approx_nat","unclassified","operator<","predicate"
"approx_nat","unclassified","approx_nat::approx_nat","constructor"
"approx_nat","unclassified","approx_nat::operator=","get set"
"approx_nat","unclassified","approx_nat::operator+=","get set"
"approx_nat","unclassified","approx_nat::operator*=","get set"
"enode_class","data-provider boundary small-class","begin","property wrapper"
"enode_class","data-provider boundary small-class","end","property wrapper"
"sym_mux","data-provider boundary","get_manager","get collaborator"
"sym_mux","data-provider boundary","has_index","predicate"
"sym_mux","data-provider boundary","is_muxed","predicate collaborator"
"sym_mux","data-provider boundary","sym_mux::sym_mux","constructor"
"sym_mux","data-provider boundary","sym_mux::~sym_mux","destructor"
"sym_mux","data-provider boundary","sym_mux::mk_variant","property collaborator"
"sym_mux","data-provider boundary","sym_mux::register_decl","command collaborator"
"sym_mux","data-provider boundary","sym_mux::ensure_capacity","unclassified"
"sym_mux","data-provider boundary","sym_mux::find_idx","predicate collaborator"
"sym_mux","data-provider boundary","sym_mux::find_by_decl","property collaborator"
"sym_mux","data-provider boundary","sym_mux::shift_decl","property collaborator"
"sym_mux","data-provider boundary","sym_mux::is_homogenous_formula","predicate controller"
"sym_mux","data-provider boundary","sym_mux::shift_expr","void-accessor wrapper"
"constraint","boundary","~constraint","destructor"
"constraint","boundary","hash","wrapper"
"constraint","boundary","constraint","constructor"
"constraint","boundary","constraint","constructor"
"constraint","boundary","kind","get collaborator"
"constraint","boundary","node","get collaborator"
"constraint","boundary","to_index","property wrapper"
"constraint","boundary","constraint","constructor"
"constraint","boundary","cindex","property wrapper"
"constraint","boundary","deallocate","command collaborator"
"constraint","boundary","id","get"
"constraint","boundary","tag","get collaborator"
"constraint","boundary","lit","get collaborator"
"constraint","boundary","size","get"
"constraint","boundary","set_size","set"
"constraint","boundary","update_literal","set collaborator"
"constraint","boundary","was_removed","get"
"constraint","boundary","set_removed","set"
"constraint","boundary","nullify_literal","set"
"constraint","boundary","glue","get"
"constraint","boundary","set_glue","set"
"constraint","boundary","psm","get"
"constraint","boundary","set_psm","set"
"constraint","boundary","set_learned","set"
"constraint","boundary","learned","get"
"constraint","boundary","is_watched","predicate"
"constraint","boundary","set_watch","set"
"constraint","boundary","reset_watch","set"
"constraint","boundary","is_clear","predicate"
"constraint","boundary","is_pure","get"
"constraint","boundary","set_pure","set"
"constraint","boundary","obj_size","get"
"constraint","boundary","is_card","predicate"
"constraint","boundary","is_pb","predicate"
"constraint","boundary","is_watching","wrapper stateless"
"constraint","boundary","literals","wrapper stateless"
"constraint","boundary","swap","wrapper stateless"
"constraint","boundary","get_lit","wrapper stateless"
"constraint","boundary","set_lit","wrapper stateless"
"constraint","boundary","negate","wrapper stateless"
"constraint","boundary","is_extended_binary","collaborator incidental"
"constraint","boundary","get_reward","collaborator incidental"
"constraint","boundary","set_k","set"
"constraint","boundary","get_coeff","wrapper stateless"
"constraint","boundary","k","get"
"constraint","boundary","constraint::display_lit","controller stateless"
"constraint","boundary","constraint::to_card","property non-void-command collaborator"
"constraint","boundary","constraint::to_card","property collaborator"
"constraint","boundary","constraint::fold_max_var","unclassified"
"constraint","boundary","constraint::is_watched","predicate collaborator"
"constraint","boundary","constraint::unwatch_literal","command collaborator"
"constraint","boundary","constraint::watch_literal","command collaborator"
"constraint","boundary","constraint::nullify_tracking_literal","command collaborator"
"constraint","boundary","constraint::well_formed","predicate collaborator"
"constraint","boundary","constraint::to_pb","property non-void-command collaborator"
"constraint","boundary","constraint::to_pb","property collaborator"
"enode_th_vars","data-provider boundary small-class","begin","property collaborator"
"enode_th_vars","data-provider boundary small-class","end","wrapper stateless"
"unsat_core_plugin_farkas_lemma_optimized","entity commander boundary","unsat_core_plugin_farkas_lemma_optimized","constructor"
"unsat_core_plugin_farkas_lemma_optimized","entity commander boundary","unsat_core_plugin_farkas_lemma_optimized::compute_partial_core","command collaborator"
"unsat_core_plugin_farkas_lemma_optimized","entity commander boundary","unsat_core_plugin_farkas_lemma_optimized::finalize","command collaborator"
"unsat_core_plugin_farkas_lemma_optimized","entity commander boundary","unsat_core_plugin_farkas_lemma_optimized::compute_linear_combination","property non-void-command collaborator"
"bound_relation_plugin::rename_fn","pure-controller degenerate small-class","operator()","controller stateless"
"relevancy_eh","degenerate","operator()","collaborator incidental"
"relevancy_eh","degenerate","operator()","incidental"
"relevancy_eh","degenerate","relevancy_eh::mark_as_relevant","controller stateless"
"relevancy_eh","degenerate","relevancy_eh::mark_args_as_relevant","controller stateless"
"expr2var","boundary","m","get collaborator"
"expr2var","boundary","is_var","controller stateless"
"expr2var","boundary","interpreted_vars","get"
"expr2var","boundary","begin","property collaborator"
"expr2var","boundary","end","property collaborator"
"expr2var","boundary","reset_recent","command"
"expr2var","boundary","begin_recent","property collaborator"
"expr2var","boundary","end_recent","property collaborator"
"expr2var","boundary","expr2var::insert","command collaborator"
"expr2var","boundary","expr2var::expr2var","constructor"
"expr2var","boundary","expr2var::~expr2var","destructor"
"expr2var","boundary","expr2var::to_var","property controller"
"expr2var","boundary","expr2var::display","collaborator"
"expr2var","boundary","expr2var::mk_inv","controller"
"expr2var","boundary","expr2var::reset","command"
"expr2var","boundary","expr2var::push","command"
"expr2var","boundary","expr2var::pop","command"
"contains_app","boundary lazy-class degenerate","operator()","wrapper stateless"
"contains_app","boundary lazy-class degenerate","operator()","controller stateless"
"contains_app","boundary lazy-class degenerate","x","get collaborator"
"contains_app","boundary lazy-class degenerate","contains_app::operator()","wrapper stateless"
"model_fixer","boundary","get_projection_data","property collaborator"
"model_fixer","boundary","model_fixer::model_fixer","constructor"
"model_fixer","boundary","model_fixer::operator()","command collaborator"
"model_fixer","boundary","model_fixer::operator()","property non-void-command collaborator"
"model_fixer","boundary","model_fixer::add_projection_functions","command collaborator"
"model_fixer","boundary","model_fixer::add_projection_functions","command collaborator"
"model_fixer","boundary","model_fixer::add_projection_function","property non-void-command collaborator"
"model_fixer","boundary","model_fixer::get_projection","property non-void-command collaborator"
"model_fixer","boundary","model_fixer::collect_partial_functions","controller"
"model_fixer","boundary","model_fixer::invert_app","property non-void-command collaborator"
"model_fixer","boundary","model_fixer::invert_arg","command collaborator"
"model_fixer","boundary","model_fixer::restrict_arg","property non-void-command collaborator"
"size_t_eq","degenerate small-class","operator()","incidental"
"map_proc","entity commander boundary","map_proc","constructor"
"map_proc","entity commander boundary","reset","command"
"map_proc","entity commander boundary","visit","command collaborator"
"map_proc","entity commander boundary","map_proc::reconstruct","command collaborator"
"map_proc","entity commander boundary","map_proc::visit","command collaborator"
"map_proc","entity commander boundary","map_proc::get_expr","property non-void-command collaborator"
"ast_counter_proc","commander data-class small-class","ast_counter_proc","constructor"
"ast_counter_proc","commander data-class small-class","operator()","set"
"ddnf_core","entity boundary","ddnf_core::ddnf_core","constructor"
"ddnf_core","entity boundary","ddnf_core::~ddnf_core","destructor"
"ddnf_core","entity boundary","ddnf_core::insert","property non-void-command collaborator"
"ddnf_core","entity boundary","ddnf_core::get_tbv_manager","property non-void-command collaborator"
"ddnf_core","entity boundary","ddnf_core::size","unclassified"
"ddnf_core","entity boundary","ddnf_core::contains","predicate non-void-command collaborator"
"ddnf_core","entity boundary","ddnf_core::well_formed","predicate non-void-command"
"ddnf_core","entity boundary","ddnf_core::reset_accumulate","command"
"ddnf_core","entity boundary","ddnf_core::accumulate","command collaborator"
"ddnf_core","entity boundary","ddnf_core::display","collaborator"
"ddnf_core","entity boundary","ddnf_core::display_statistics","collaborator"
"instruction_block","unclassified","push_back","command collaborator"
"instruction_block","unclassified","set_observer","set collaborator"
"instruction_block","unclassified","display","collaborator"
"instruction_block","unclassified","num_instructions","unclassified"
"instruction_block","unclassified","instruction_block::~instruction_block","destructor"
"instruction_block","unclassified","instruction_block::reset","set"
"instruction_block","unclassified","instruction_block::perform","predicate controller"
"instruction_block","unclassified","instruction_block::process_all_costs","controller"
"instruction_block","unclassified","instruction_block::collect_statistics","controller"
"instruction_block","unclassified","instruction_block::make_annotations","controller"
"instruction_block","unclassified","instruction_block::display_indented","controller"
"product_relation_plugin::single_non_transparent_src_union_fn","boundary small-class","operator()","wrapper"
"for_each_ast_proc","commander boundary","operator()","collaborator incidental"
"for_each_ast_proc","commander boundary","operator()","command collaborator"
"for_each_ast_proc","commander boundary","operator()","command collaborator"
"for_each_ast_proc","commander boundary","operator()","command collaborator"
"for_each_ast_proc","commander boundary","operator()","command collaborator"
"for_each_ast_proc","commander boundary","operator()","command collaborator"
"hash_svector","boundary degenerate small-class","operator()","wrapper stateless"
"imp_functor","commander boundary small-class","imp_functor","constructor"
"imp_functor","commander boundary small-class","operator()","command collaborator"
"arith_rewriter_core","entity data-provider boundary","get_fid","property collaborator"
"arith_rewriter_core","entity data-provider boundary","is_numeral","predicate collaborator"
"arith_rewriter_core","entity data-provider boundary","is_numeral","predicate collaborator"
"arith_rewriter_core","entity data-provider boundary","is_minus_one","predicate collaborator"
"arith_rewriter_core","entity data-provider boundary","normalize","empty"
"arith_rewriter_core","entity data-provider boundary","mk_numeral","property non-void-command collaborator"
"arith_rewriter_core","entity data-provider boundary","add_decl_kind","collaborator incidental"
"arith_rewriter_core","entity data-provider boundary","mul_decl_kind","collaborator incidental"
"arith_rewriter_core","entity data-provider boundary","use_power","predicate"
"arith_rewriter_core","entity data-provider boundary","power_decl_kind","collaborator incidental"
"arith_rewriter_core","entity data-provider boundary","arith_rewriter_core","constructor"
"arith_rewriter_core","entity data-provider boundary","is_zero","predicate collaborator"
"arith_rewriter_core","entity data-provider boundary","arith_rewriter_core::seq","get set collaborator"
"arith_rewriter_core","entity data-provider boundary","arith_rewriter_core::coerce","property non-void-command collaborator"
"arith_rewriter_core","entity data-provider boundary","arith_rewriter_core::mk_power","property non-void-command collaborator"
"axioms","entity commander boundary","mk_concat","property non-void-command collaborator"
"axioms","entity commander boundary","mk_concat","property non-void-command collaborator"
"axioms","entity commander boundary","mk_nth","property non-void-command collaborator"
"axioms","entity commander boundary","mk_eq","property non-void-command collaborator"
"axioms","entity commander boundary","set_add_clause","set collaborator"
"axioms","entity commander boundary","set_phase","set collaborator"
"axioms","entity commander boundary","set_ensure_digits","set collaborator"
"axioms","entity commander boundary","mk_ge","property non-void-command collaborator"
"axioms","entity commander boundary","mk_le","property non-void-command collaborator"
"axioms","entity commander boundary","mk_ge","property non-void-command collaborator"
"axioms","entity commander boundary","mk_le","property non-void-command collaborator"
"axioms","entity commander boundary","rewrite","wrapper stateless"
"axioms","entity commander boundary","sk","get collaborator"
"axioms","entity commander boundary","axioms::axioms","constructor"
"axioms","entity commander boundary","axioms::mk_sub","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::mk_ge_e","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::mk_le_e","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::mk_seq_eq","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::mk_eq_empty","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::purify","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::gc_purify","command"
"axioms","entity commander boundary","axioms::mk_len","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::add_clause","command collaborator"
"axioms","entity commander boundary","axioms::add_clause","command collaborator"
"axioms","entity commander boundary","axioms::add_clause","command collaborator"
"axioms","entity commander boundary","axioms::add_clause","command collaborator"
"axioms","entity commander boundary","axioms::add_clause","command collaborator"
"axioms","entity commander boundary","axioms::extract_axiom","command collaborator"
"axioms","entity commander boundary","axioms::tail_axiom","command collaborator"
"axioms","entity commander boundary","axioms::drop_last_axiom","command collaborator"
"axioms","entity commander boundary","axioms::is_drop_last","predicate non-void-command collaborator"
"axioms","entity commander boundary","axioms::small_segment_axiom","predicate non-void-command collaborator"
"axioms","entity commander boundary","axioms::is_tail","predicate non-void-command collaborator"
"axioms","entity commander boundary","axioms::is_extract_prefix","predicate non-void-command collaborator"
"axioms","entity commander boundary","axioms::is_extract_suffix","predicate non-void-command collaborator"
"axioms","entity commander boundary","axioms::extract_prefix_axiom","command collaborator"
"axioms","entity commander boundary","axioms::extract_suffix_axiom","command collaborator"
"axioms","entity commander boundary","axioms::tightest_prefix","command collaborator"
"axioms","entity commander boundary","axioms::indexof_axiom","command collaborator"
"axioms","entity commander boundary","axioms::last_indexof_axiom","command collaborator"
"axioms","entity commander boundary","axioms::replace_axiom","command collaborator"
"axioms","entity commander boundary","axioms::at_axiom","command collaborator"
"axioms","entity commander boundary","axioms::nth_axiom","command collaborator"
"axioms","entity commander boundary","axioms::itos_axiom","command collaborator"
"axioms","entity commander boundary","axioms::stoi_axiom","command collaborator"
"axioms","entity commander boundary","axioms::stoi_axiom","command"
"axioms","entity commander boundary","axioms::ubv2s_axiom","command"
"axioms","entity commander boundary","axioms::ubv2s_len_axiom","command collaborator"
"axioms","entity commander boundary","axioms::ubv2s_len_axiom","command collaborator"
"axioms","entity commander boundary","axioms::ubv2ch_axiom","command collaborator"
"axioms","entity commander boundary","axioms::itos_axiom","command"
"axioms","entity commander boundary","axioms::is_digit","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::mk_digit2int","property non-void-command collaborator"
"axioms","entity commander boundary","axioms::lt_axiom","command collaborator"
"axioms","entity commander boundary","axioms::le_axiom","command collaborator"
"axioms","entity commander boundary","axioms::is_digit_axiom","command collaborator"
"axioms","entity commander boundary","axioms::str_to_code_axiom","command collaborator"
"axioms","entity commander boundary","axioms::str_from_code_axiom","command collaborator"
"axioms","entity commander boundary","axioms::replace_re_axiom","command collaborator"
"axioms","entity commander boundary","axioms::replace_all_axiom","command collaborator"
"axioms","entity commander boundary","axioms::replace_re_all_axiom","command collaborator"
"axioms","entity commander boundary","axioms::unit_axiom","command collaborator"
"axioms","entity commander boundary","axioms::suffix_axiom","command collaborator"
"axioms","entity commander boundary","axioms::prefix_axiom","command collaborator"
"axioms","entity commander boundary","axioms::length_axiom","command collaborator"
"axioms","entity commander boundary","axioms::unroll_not_contains","command collaborator"
"axioms","entity commander boundary","axioms::length_limit","property non-void-command collaborator"
"lemma_bool_inductive_generalizer","commander boundary","reset_statistics","command"
"lemma_bool_inductive_generalizer","commander boundary","lemma_bool_inductive_generalizer::operator()","command collaborator"
"lemma_bool_inductive_generalizer","commander boundary","lemma_bool_inductive_generalizer::collect_statistics","collaborator"
"expr_counter_proc","commander boundary data-class","expr_counter_proc","constructor"
"expr_counter_proc","commander boundary data-class","operator()","set collaborator"
"expr_counter_proc","commander boundary data-class","operator()","set collaborator"
"expr_counter_proc","commander boundary data-class","operator()","set collaborator"
"subterms_postorder","data-provider boundary small-class","subterms_postorder::subterms_postorder","constructor"
"subterms_postorder","data-provider boundary small-class","subterms_postorder::subterms_postorder","constructor"
"subterms_postorder","data-provider boundary small-class","subterms_postorder::begin","property wrapper"
"subterms_postorder","data-provider boundary small-class","subterms_postorder::end","property wrapper"
"flat_visitor","entity boundary degenerate","flat_visitor","constructor"
"flat_visitor","entity boundary degenerate","visit","wrapper stateless"
"flat_visitor","entity boundary degenerate","visit","wrapper stateless"
"flat_visitor","entity boundary degenerate","visit","property non-void-command collaborator"
"vector_var2anum","data-provider boundary","vector_var2anum","constructor"
"vector_var2anum","data-provider boundary","m","property collaborator"
"vector_var2anum","data-provider boundary","contains","predicate collaborator"
"vector_var2anum","data-provider boundary","operator()","property collaborator"
"ext_theory_eq_propagation_justification","degenerate","ext_theory_eq_propagation_justification","constructor"
"ext_theory_eq_propagation_justification","degenerate","ext_theory_eq_propagation_justification","constructor"
"ext_theory_eq_propagation_justification","degenerate","get_name","incidental"
"ext_theory_eq_propagation_justification","degenerate","ext_theory_eq_propagation_justification::mk_proof","property non-void-command collaborator"
"ext_theory_eq_propagation_justification","degenerate","ext_theory_eq_propagation_justification::log","empty"
"fpa2bv_converter_wrapped","entity boundary","fpa2bv_converter_wrapped","constructor"
"fpa2bv_converter_wrapped","entity boundary","fpa2bv_converter_wrapped::mk_const","void-accessor command collaborator"
"fpa2bv_converter_wrapped","entity boundary","fpa2bv_converter_wrapped::wrap","property non-void-command collaborator"
"fpa2bv_converter_wrapped","entity boundary","fpa2bv_converter_wrapped::unwrap","property non-void-command collaborator"
"fpa2bv_converter_wrapped","entity boundary","fpa2bv_converter_wrapped::mk_rm_const","void-accessor command collaborator"
"fpa2bv_converter_wrapped","entity boundary","fpa2bv_converter_wrapped::bv2rm_value","property non-void-command collaborator"
"fpa2bv_converter_wrapped","entity boundary","fpa2bv_converter_wrapped::bv2fpa_value","property non-void-command collaborator"
"sexpr_bv","empty","sexpr_bv","constructor"
"goal2nlsat::scoped_set_imp","empty","~scoped_set_imp","destructor"
"has_term_ite_functor","commander degenerate","operator()","empty"
"has_term_ite_functor","commander degenerate","operator()","empty"
"has_term_ite_functor","commander degenerate","operator()","command collaborator"
"factorization_factory_imp","data-provider boundary","factorization_factory_imp::factorization_factory_imp","constructor"
"factorization_factory_imp","data-provider boundary","factorization_factory_imp::find_canonical_monic_of_vars","predicate"
"factorization_factory_imp","data-provider boundary","factorization_factory_imp::canonize_sign","predicate collaborator"
"factorization_factory_imp","data-provider boundary","factorization_factory_imp::canonize_sign","predicate collaborator"
"fpa2bv_rewriter","entity boundary","fpa2bv_rewriter","constructor"
"fpa2bv_rewriter","entity boundary","fu","property non-void-command collaborator"
"fpa2bv_rewriter","entity boundary","fpa2bv_rewriter::convert_atom","property non-void-command collaborator"
"fpa2bv_rewriter","entity boundary","fpa2bv_rewriter::convert_term","property non-void-command collaborator"
"fpa2bv_rewriter","entity boundary","fpa2bv_rewriter::convert_conversion_term","property non-void-command collaborator"
"fpa2bv_rewriter","entity boundary","fpa2bv_rewriter::convert","property non-void-command collaborator"
"dyn_ack_clause_del_eh","commander boundary small-class","dyn_ack_clause_del_eh","constructor"
"dyn_ack_clause_del_eh","commander boundary small-class","operator()","command collaborator"
"default_dependent_expr_state","degenerate","default_dependent_expr_state","constructor"
"default_dependent_expr_state","degenerate","qtail","incidental"
"default_dependent_expr_state","degenerate","operator[]","wrapper stateless"
"default_dependent_expr_state","degenerate","update","wrapper stateless"
"default_dependent_expr_state","degenerate","add","wrapper stateless"
"default_dependent_expr_state","degenerate","inconsistent","incidental"
"default_dependent_expr_state","degenerate","model_trail","wrapper stateless"
"default_dependent_expr_state","degenerate","updated","incidental"
"default_dependent_expr_state","degenerate","reset_updated","empty"
"set_bound_unpropagated","boundary small-class","set_bound_unpropagated","constructor"
"set_bound_unpropagated","boundary small-class","undo","wrapper"
"UserPropagator","commander boundary","Callback","command collaborator"
"UserPropagator","commander boundary","UserPropagator","constructor"
"UserPropagator","commander boundary","UserPropagator","constructor"
"UserPropagator","commander boundary","~UserPropagator","destructor"
"UserPropagator","commander boundary","Dispose","command"
"UserPropagator","commander boundary","Push","stateless"
"UserPropagator","commander boundary","Pop","collaborator stateless"
"UserPropagator","commander boundary","Fresh","factory collaborator stateless"
"UserPropagator","commander boundary","Conflict","command collaborator"
"UserPropagator","commander boundary","Conflict","command collaborator"
"UserPropagator","commander boundary","Propagate","predicate non-void-command collaborator"
"UserPropagator","commander boundary","Propagate","predicate controller"
"internal_symbol_tables","controller small-class","internal_symbol_tables","constructor"
"internal_symbol_tables","controller small-class","~internal_symbol_tables","destructor"
"internal_symbol_tables","controller small-class","get_str","property controller"
"relation_manager::default_table_select_equal_and_project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"context::symbol_sort_domain","entity boundary","get_number","property non-void-command collaborator"
"context::symbol_sort_domain","entity boundary","get_constant_count","unclassified"
"context::symbol_sort_domain","entity boundary","print_element","command collaborator"
"aig_cuts","boundary","is_touched","predicate collaborator"
"aig_cuts","boundary","is_touched","predicate collaborator"
"aig_cuts","boundary","lit2cuts","property collaborator"
"aig_cuts","boundary","child","get controller"
"aig_cuts","boundary","child","controller stateless"
"aig_cuts","boundary","evict","controller"
"aig_cuts","boundary","reset","controller"
"aig_cuts","boundary","push_back","controller"
"aig_cuts","boundary","shrink","controller"
"aig_cuts","boundary","inc_max_cutset_size","command"
"aig_cuts","boundary","max_cutset_size","unclassified"
"aig_cuts","boundary","num_cuts","get"
"aig_cuts","boundary","touch","command collaborator"
"aig_cuts","boundary","aig_cuts::aig_cuts","constructor"
"aig_cuts","boundary","aig_cuts::operator()","get non-void-command collaborator"
"aig_cuts","boundary","aig_cuts::augment","command collaborator"
"aig_cuts","boundary","aig_cuts::augment","command collaborator"
"aig_cuts","boundary","aig_cuts::insert_cut","predicate non-void-command collaborator"
"aig_cuts","boundary","aig_cuts::augment_lut","command collaborator"
"aig_cuts","boundary","aig_cuts::augment_lut_rec","command collaborator"
"aig_cuts","boundary","aig_cuts::augment_ite","command collaborator"
"aig_cuts","boundary","aig_cuts::augment_aig0","command collaborator"
"aig_cuts","boundary","aig_cuts::augment_aig1","command collaborator"
"aig_cuts","boundary","aig_cuts::augment_aig2","command collaborator"
"aig_cuts","boundary","aig_cuts::augment_aigN","command collaborator"
"aig_cuts","boundary","aig_cuts::is_touched","predicate non-void-command collaborator"
"aig_cuts","boundary","aig_cuts::reserve","command"
"aig_cuts","boundary","aig_cuts::add_var","command"
"aig_cuts","boundary","aig_cuts::add_node","command collaborator"
"aig_cuts","boundary","aig_cuts::add_node","command collaborator"
"aig_cuts","boundary","aig_cuts::add_node","command collaborator"
"aig_cuts","boundary","aig_cuts::add_cut","command collaborator"
"aig_cuts","boundary","aig_cuts::set_root","command collaborator"
"aig_cuts","boundary","aig_cuts::flush_roots","command collaborator"
"aig_cuts","boundary","aig_cuts::flush_roots","predicate non-void-command collaborator"
"aig_cuts","boundary","aig_cuts::flush_roots","command collaborator"
"aig_cuts","boundary","aig_cuts::get_value","get wrapper"
"aig_cuts","boundary","aig_cuts::init_cut_set","command"
"aig_cuts","boundary","aig_cuts::eq","predicate controller"
"aig_cuts","boundary","aig_cuts::similar","predicate controller"
"aig_cuts","boundary","aig_cuts::insert_aux","predicate non-void-command collaborator"
"aig_cuts","boundary","aig_cuts::filter_valid_nodes","property controller"
"aig_cuts","boundary","aig_cuts::eval","property controller"
"aig_cuts","boundary","aig_cuts::simulate","property non-void-command collaborator"
"aig_cuts","boundary","aig_cuts::on_node_add","wrapper"
"aig_cuts","boundary","aig_cuts::on_node_del","wrapper"
"aig_cuts","boundary","aig_cuts::set_on_clause_add","command collaborator"
"aig_cuts","boundary","aig_cuts::set_on_clause_del","command collaborator"
"aig_cuts","boundary","aig_cuts::cut2def","command collaborator"
"aig_cuts","boundary","aig_cuts::node2def","command collaborator"
"aig_cuts","boundary","aig_cuts::cut2clauses","command collaborator"
"aig_cuts","boundary","aig_cuts::simplify","controller"
"aig_cuts","boundary","aig_cuts::validate_aig2","command collaborator"
"aig_cuts","boundary","aig_cuts::validate_aigN","controller"
"aig_cuts","boundary","aig_cuts::display","property collaborator"
"aig_cuts","boundary","aig_cuts::display","property controller"
"quantifier_stat_gen","small-class","quantifier_stat_gen::quantifier_stat_gen","constructor"
"quantifier_stat_gen","small-class","quantifier_stat_gen::reset","command"
"quantifier_stat_gen","small-class","quantifier_stat_gen::operator()","non-void-command factory collaborator"
"fpa_util","entity boundary","m","get collaborator"
"fpa_util","entity boundary","fm","property collaborator"
"fpa_util","entity boundary","get_fid","get collaborator"
"fpa_util","entity boundary","get_family_id","get collaborator"
"fpa_util","entity boundary","au","get collaborator"
"fpa_util","entity boundary","bu","get collaborator"
"fpa_util","entity boundary","plugin","get collaborator"
"fpa_util","entity boundary","mk_rm_sort","property non-void-command collaborator"
"fpa_util","entity boundary","is_float","predicate wrapper"
"fpa_util","entity boundary","is_rm","predicate wrapper"
"fpa_util","entity boundary","is_float","predicate collaborator"
"fpa_util","entity boundary","is_rm","predicate collaborator"
"fpa_util","entity boundary","is_fp","predicate wrapper"
"fpa_util","entity boundary","mk_round_nearest_ties_to_even","property non-void-command collaborator"
"fpa_util","entity boundary","mk_round_nearest_ties_to_away","property non-void-command collaborator"
"fpa_util","entity boundary","mk_round_toward_positive","property non-void-command collaborator"
"fpa_util","entity boundary","mk_round_toward_negative","property non-void-command collaborator"
"fpa_util","entity boundary","mk_round_toward_zero","property non-void-command collaborator"
"fpa_util","entity boundary","mk_nan","property non-void-command collaborator"
"fpa_util","entity boundary","mk_pinf","property non-void-command collaborator"
"fpa_util","entity boundary","mk_ninf","property non-void-command collaborator"
"fpa_util","entity boundary","mk_value","property non-void-command collaborator"
"fpa_util","entity boundary","is_numeral","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_numeral","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_rm_numeral","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_rm_numeral","predicate non-void-command collaborator"
"fpa_util","entity boundary","mk_pzero","property non-void-command collaborator"
"fpa_util","entity boundary","mk_nzero","property non-void-command collaborator"
"fpa_util","entity boundary","is_nan","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_inf","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_pinf","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_ninf","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_zero","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_pzero","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_nzero","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_normal","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_subnormal","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_positive","predicate non-void-command collaborator"
"fpa_util","entity boundary","is_negative","predicate non-void-command collaborator"
"fpa_util","entity boundary","mk_fp","property non-void-command collaborator"
"fpa_util","entity boundary","mk_to_fp","property non-void-command collaborator"
"fpa_util","entity boundary","mk_to_fp","property non-void-command collaborator"
"fpa_util","entity boundary","mk_to_fp","property non-void-command collaborator"
"fpa_util","entity boundary","mk_to_fp_unsigned","property non-void-command collaborator"
"fpa_util","entity boundary","is_to_fp","predicate wrapper"
"fpa_util","entity boundary","mk_to_ubv","property non-void-command collaborator"
"fpa_util","entity boundary","mk_to_sbv","property non-void-command collaborator"
"fpa_util","entity boundary","mk_to_real","property non-void-command collaborator"
"fpa_util","entity boundary","mk_add","property non-void-command collaborator"
"fpa_util","entity boundary","mk_mul","property non-void-command collaborator"
"fpa_util","entity boundary","mk_sub","property non-void-command collaborator"
"fpa_util","entity boundary","mk_div","property non-void-command collaborator"
"fpa_util","entity boundary","mk_neg","property non-void-command collaborator"
"fpa_util","entity boundary","mk_rem","property non-void-command collaborator"
"fpa_util","entity boundary","mk_max","property non-void-command collaborator"
"fpa_util","entity boundary","mk_min","property non-void-command collaborator"
"fpa_util","entity boundary","mk_abs","property non-void-command collaborator"
"fpa_util","entity boundary","mk_sqrt","property non-void-command collaborator"
"fpa_util","entity boundary","mk_round_to_integral","property non-void-command collaborator"
"fpa_util","entity boundary","mk_fma","property non-void-command collaborator"
"fpa_util","entity boundary","mk_float_eq","property non-void-command collaborator"
"fpa_util","entity boundary","mk_lt","property non-void-command collaborator"
"fpa_util","entity boundary","mk_gt","property non-void-command collaborator"
"fpa_util","entity boundary","mk_le","property non-void-command collaborator"
"fpa_util","entity boundary","mk_ge","property non-void-command collaborator"
"fpa_util","entity boundary","mk_is_nan","property non-void-command collaborator"
"fpa_util","entity boundary","mk_is_inf","property non-void-command collaborator"
"fpa_util","entity boundary","mk_is_zero","property non-void-command collaborator"
"fpa_util","entity boundary","mk_is_normal","property non-void-command collaborator"
"fpa_util","entity boundary","mk_is_subnormal","property non-void-command collaborator"
"fpa_util","entity boundary","mk_is_positive","property non-void-command collaborator"
"fpa_util","entity boundary","mk_is_negative","property non-void-command collaborator"
"fpa_util","entity boundary","is_neg","predicate wrapper"
"fpa_util","entity boundary","mk_to_ieee_bv","property non-void-command collaborator"
"fpa_util","entity boundary","mk_bv2rm","property non-void-command collaborator"
"fpa_util","entity boundary","is_bvwrap","predicate collaborator"
"fpa_util","entity boundary","is_bv2rm","predicate collaborator"
"fpa_util","entity boundary","is_to_ubv","predicate collaborator"
"fpa_util","entity boundary","is_to_sbv","predicate collaborator"
"fpa_util","entity boundary","is_to_real","predicate collaborator"
"fpa_util","entity boundary","is_bvwrap","predicate collaborator"
"fpa_util","entity boundary","is_bv2rm","predicate collaborator"
"fpa_util","entity boundary","is_to_ubv","predicate collaborator"
"fpa_util","entity boundary","is_to_sbv","predicate collaborator"
"fpa_util","entity boundary","is_to_real","predicate collaborator"
"fpa_util","entity boundary","is_to_ieee_bv","predicate collaborator"
"fpa_util","entity boundary","fpa_util::fpa_util","constructor"
"fpa_util","entity boundary","fpa_util::~fpa_util","destructor"
"fpa_util","entity boundary","fpa_util::mk_float_sort","property non-void-command collaborator"
"fpa_util","entity boundary","fpa_util::get_ebits","collaborator"
"fpa_util","entity boundary","fpa_util::get_sbits","collaborator"
"fpa_util","entity boundary","fpa_util::mk_nan","property non-void-command collaborator"
"fpa_util","entity boundary","fpa_util::mk_pinf","property non-void-command collaborator"
"fpa_util","entity boundary","fpa_util::mk_ninf","property non-void-command collaborator"
"fpa_util","entity boundary","fpa_util::mk_pzero","property non-void-command collaborator"
"fpa_util","entity boundary","fpa_util::mk_nzero","property non-void-command collaborator"
"fpa_util","entity boundary","fpa_util::contains_floats","predicate non-void-command collaborator"
"fpa_util","entity boundary","fpa_util::is_considered_uninterpreted","predicate non-void-command collaborator"
"static_matrix","boundary","get_val","get controller"
"static_matrix","boundary","get_column_cell","get controller"
"static_matrix","boundary","row_count","unclassified"
"static_matrix","boundary","column_count","unclassified"
"static_matrix","boundary","add_row","command"
"static_matrix","boundary","add_column","command"
"static_matrix","boundary","multiply_column","controller"
"static_matrix","boundary","make_row_cell","wrapper stateless"
"static_matrix","boundary","make_column_cell","wrapper stateless"
"static_matrix","boundary","operator()","property wrapper"
"static_matrix","boundary","add_column_to_vector","void-accessor collaborator"
"static_matrix","boundary","number_of_non_zeroes_in_column","get"
"static_matrix","boundary","number_of_non_zeroes_in_row","get"
"static_matrix","boundary","number_of_non_zeroes","unclassified"
"static_matrix","boundary","get_number_of_rows","unclassified"
"static_matrix","boundary","get_number_of_columns","unclassified"
"static_matrix","boundary","set_number_of_rows","empty"
"static_matrix","boundary","set_number_of_columns","empty"
"static_matrix","boundary","get_max_val_in_row","wrapper stateless"
"static_matrix","boundary","push","command collaborator"
"static_matrix","boundary","pop_row_columns","command collaborator"
"static_matrix","boundary","pop","command"
"static_matrix","boundary","multiply_row","controller"
"static_matrix","boundary","divide_row","controller"
"static_matrix","boundary","dot_product_with_column","property collaborator"
"static_matrix","boundary","transpose_rows","command collaborator"
"static_matrix","boundary","fill_last_row_with_pivoting_loop_block","command"
"static_matrix","boundary","fill_last_row_with_pivoting","command"
"static_matrix","boundary","copy_column_to_vector","void-accessor collaborator"
"static_matrix","boundary","dot_product_with_row","property collaborator"
"static_matrix","boundary","column","property wrapper"
"static_matrix","boundary","operator[]","property wrapper"
"static_matrix","boundary","static_matrix<T,X>::init_row_columns","command"
"static_matrix","boundary","static_matrix<T,X>::scan_row_ii_to_offset_vector","set collaborator"
"static_matrix","boundary","static_matrix<T,X>::pivot_row_to_row_given_cell","predicate non-void-command"
"static_matrix","boundary","static_matrix<T,X>::static_matrix","copy-constructor"
"static_matrix","boundary","static_matrix<T,X>::clear","command"
"static_matrix","boundary","static_matrix<T,X>::init_vector_of_row_offsets","command"
"static_matrix","boundary","static_matrix<T,X>::init_empty_matrix","command"
"static_matrix","boundary","static_matrix<T,X>::lowest_row_in_column","non-void-command"
"static_matrix","boundary","static_matrix<T,X>::forget_last_columns","command"
"static_matrix","boundary","static_matrix<T,X>::remove_last_column","command collaborator"
"static_matrix","boundary","static_matrix<T,X>::set","command collaborator"
"static_matrix","boundary","static_matrix<T,X>::get_domain","property non-void-command"
"static_matrix","boundary","static_matrix<T,X>::get_max_abs_in_row","property controller"
"static_matrix","boundary","static_matrix<T,X>::get_min_abs_in_row","property controller"
"static_matrix","boundary","static_matrix<T,X>::get_max_abs_in_column","property collaborator"
"static_matrix","boundary","static_matrix<T,X>::get_min_abs_in_column","property collaborator"
"static_matrix","boundary","static_matrix<T,X>::check_consistency","command collaborator"
"static_matrix","boundary","static_matrix<T,X>::cross_out_row","command"
"static_matrix","boundary","static_matrix<T,X>::fix_row_indices_in_each_column_for_crossed_row","controller"
"static_matrix","boundary","static_matrix<T,X>::cross_out_row_from_columns","command collaborator"
"static_matrix","boundary","static_matrix<T,X>::cross_out_row_from_column","controller"
"static_matrix","boundary","static_matrix<T,X>::get_elem","property controller"
"static_matrix","boundary","static_matrix<T,X>::get_balance","property collaborator"
"static_matrix","boundary","static_matrix<T,X>::get_row_balance","property controller"
"static_matrix","boundary","static_matrix<T,X>::is_correct","predicate"
"static_matrix","boundary","static_matrix<T,X>::remove_element","void-accessor controller"
"static_matrix","boundary","static_matrix<T,X>::add_new_element","controller"
"binding_khasher","pure-controller degenerate small-class","operator()","controller stateless"
"quantifier_hoister","commander","quantifier_hoister::quantifier_hoister","constructor"
"quantifier_hoister","commander","quantifier_hoister::~quantifier_hoister","destructor"
"quantifier_hoister","commander","quantifier_hoister::operator()","wrapper stateless"
"quantifier_hoister","commander","quantifier_hoister::pull_exists","command"
"quantifier_hoister","commander","quantifier_hoister::pull_quantifier","command"
"quantifier_hoister","commander","quantifier_hoister::pull_quantifier","non-void-command"
"ext_var_info","data-provider data-class","ext_var_info","constructor"
"ext_var_info","data-provider data-class","ext_var_info","constructor"
"ext_var_info","data-provider data-class","ext_var_info","constructor"
"ext_var_info","data-provider data-class","ext_var_info","constructor"
"ext_var_info","data-provider data-class","external_j","get"
"ext_var_info","data-provider data-class","is_integer","get"
"ext_var_info","data-provider data-class","set_name","set"
"ext_var_info","data-provider data-class","get_name","get"
"proof_trim","entity commander boundary","mk_clause","command collaborator"
"proof_trim","entity commander boundary","mk_var","property non-void-command collaborator"
"proof_trim","entity commander boundary","add_literal","command collaborator"
"proof_trim","entity commander boundary","is_rup","predicate wrapper"
"proof_trim","entity commander boundary","proof_trim","constructor"
"proof_trim","entity commander boundary","assume","command collaborator"
"proof_trim","entity commander boundary","del","command collaborator"
"proof_trim","entity commander boundary","infer","command collaborator"
"proof_trim","entity commander boundary","updt_params","command collaborator"
"proof_trim","entity commander boundary","mk_dep","property non-void-command collaborator"
"proof_trim","entity commander boundary","do_trim","command collaborator"
"proof_trim","entity commander boundary","set_conflict","command collaborator"
"proof_trim","entity commander boundary","mk_var","property non-void-command collaborator"
"proof_trim","entity commander boundary","init_clause","command"
"proof_trim","entity commander boundary","add_literal","command"
"proof_trim","entity commander boundary","num_vars","non-void-command"
"proof_trim","entity commander boundary","updt_params","command collaborator"
"proof_trim","entity commander boundary","proof_trim::trim","get non-void-command collaborator"
"proof_trim","entity commander boundary","proof_trim::del","command collaborator"
"proof_trim","entity commander boundary","proof_trim::prune_trail","command collaborator"
"proof_trim","entity commander boundary","proof_trim::conflict_analysis_core","command collaborator"
"proof_trim","entity commander boundary","proof_trim::add_dependency","command collaborator"
"proof_trim","entity commander boundary","proof_trim::add_dependency","command collaborator"
"proof_trim","entity commander boundary","proof_trim::add_core","command collaborator"
"proof_trim","entity commander boundary","proof_trim::insert_dep","command"
"proof_trim","entity commander boundary","proof_trim::add_core","command collaborator"
"proof_trim","entity commander boundary","proof_trim::in_core","predicate collaborator"
"proof_trim","entity commander boundary","proof_trim::revive","command collaborator"
"proof_trim","entity commander boundary","proof_trim::del","property non-void-command collaborator"
"proof_trim","entity commander boundary","proof_trim::proof_trim","constructor"
"proof_trim","entity commander boundary","proof_trim::assume","command"
"contains_vars","boundary degenerate small-class","contains_vars::contains_vars","constructor"
"contains_vars","boundary degenerate small-class","contains_vars::~contains_vars","destructor"
"contains_vars","boundary degenerate small-class","contains_vars::operator()","wrapper stateless"
"pb_util","data-provider boundary","pb_util","constructor"
"pb_util","data-provider boundary","get_manager","get collaborator"
"pb_util","data-provider boundary","get_family_id","get collaborator"
"pb_util","data-provider boundary","mk_at_most_k","property non-void-command collaborator"
"pb_util","data-provider boundary","mk_at_least_k","property non-void-command collaborator"
"pb_util","data-provider boundary","is_pb","predicate collaborator"
"pb_util","data-provider boundary","is_at_most_k","predicate collaborator"
"pb_util","data-provider boundary","is_at_least_k","predicate collaborator"
"pb_util","data-provider boundary","get_k","property collaborator"
"pb_util","data-provider boundary","is_le","predicate collaborator"
"pb_util","data-provider boundary","is_ge","predicate collaborator"
"pb_util","data-provider boundary","is_aux_bool","predicate wrapper"
"pb_util","data-provider boundary","is_aux_bool","predicate wrapper"
"pb_util","data-provider boundary","get_coeff","property collaborator"
"pb_util","data-provider boundary","has_unit_coefficients","predicate collaborator"
"pb_util","data-provider boundary","is_eq","predicate collaborator"
"pb_util","data-provider boundary","pb_util::normalize","command collaborator"
"pb_util","data-provider boundary","pb_util::mk_le","property non-void-command collaborator"
"pb_util","data-provider boundary","pb_util::mk_ge","property non-void-command collaborator"
"pb_util","data-provider boundary","pb_util::mk_eq","property non-void-command collaborator"
"pb_util","data-provider boundary","pb_util::mk_lt","property non-void-command collaborator"
"pb_util","data-provider boundary","pb_util::mk_at_most_k","property non-void-command collaborator"
"pb_util","data-provider boundary","pb_util::is_at_most_k","predicate wrapper"
"pb_util","data-provider boundary","pb_util::is_at_most_k","predicate collaborator"
"pb_util","data-provider boundary","pb_util::mk_at_least_k","property non-void-command collaborator"
"pb_util","data-provider boundary","pb_util::is_at_least_k","predicate wrapper"
"pb_util","data-provider boundary","pb_util::is_at_least_k","predicate collaborator"
"pb_util","data-provider boundary","pb_util::get_k","property collaborator"
"pb_util","data-provider boundary","pb_util::is_le","predicate wrapper"
"pb_util","data-provider boundary","pb_util::is_le","predicate collaborator"
"pb_util","data-provider boundary","pb_util::is_ge","predicate wrapper"
"pb_util","data-provider boundary","pb_util::is_ge","predicate collaborator"
"pb_util","data-provider boundary","pb_util::is_eq","predicate wrapper"
"pb_util","data-provider boundary","pb_util::is_eq","predicate collaborator"
"pb_util","data-provider boundary","pb_util::get_coeff","property collaborator"
"pb_util","data-provider boundary","pb_util::to_rational","controller stateless"
"pb_util","data-provider boundary","pb_util::has_unit_coefficients","predicate collaborator"
"pb_util","data-provider boundary","pb_util::mk_fresh_bool","property non-void-command collaborator"
"expand_mkbv","empty","expand_mkbv","constructor"
"is_variable_proc","pure-controller degenerate","term_graph::is_variable_proc::operator()","controller stateless"
"is_variable_proc","pure-controller degenerate","term_graph::is_variable_proc::operator()","controller stateless"
"is_variable_proc","pure-controller degenerate","term_graph::is_variable_proc::set_decls","controller stateless"
"is_variable_proc","pure-controller degenerate","term_graph::is_variable_proc::add_decls","controller stateless"
"is_variable_proc","pure-controller degenerate","term_graph::is_variable_proc::add_decl","controller stateless"
"is_variable_proc","pure-controller degenerate","term_graph::is_variable_proc::set_decls","controller stateless"
"is_variable_proc","pure-controller degenerate","term_graph::is_variable_proc::mark_solved","controller stateless"
"to_real_stripper","small-class","to_real_stripper","constructor"
"to_real_stripper","small-class","operator()","predicate non-void-command"
"to_real_stripper","small-class","operator()","predicate controller"
"quantifier_hoister::impl","entity boundary","operator()","void-accessor command collaborator"
"quantifier_hoister::impl","entity boundary","pull_exists","command collaborator"
"quantifier_hoister::impl","entity boundary","pull_quantifier","void-accessor command collaborator"
"quantifier_hoister::impl","entity boundary","extract_quantifier","void-accessor command collaborator"
"quantifier_hoister::impl","entity boundary","pull_quantifier","non-void-command collaborator"
"quantifier_hoister::impl","entity boundary","display","collaborator incidental"
"quantifier_hoister::impl","entity boundary","negate","collaborator incidental"
"quantifier_hoister::impl","entity boundary","is_compatible","wrapper stateless"
"quantifier_hoister::impl","entity boundary","pull_quantifier","void-accessor command collaborator"
"theory_lemma_justification","degenerate","has_del_eh","incidental"
"theory_lemma_justification","degenerate","get_antecedents","empty"
"theory_lemma_justification","degenerate","get_name","incidental"
"theory_lemma_justification","degenerate","theory_lemma_justification::theory_lemma_justification","constructor"
"theory_lemma_justification","degenerate","theory_lemma_justification::~theory_lemma_justification","destructor"
"theory_lemma_justification","degenerate","theory_lemma_justification::del_eh","command collaborator"
"theory_lemma_justification","degenerate","theory_lemma_justification::mk_proof","property non-void-command collaborator"
"upolynomial_sequence","boundary","size","unclassified"
"upolynomial_sequence","boundary","coeffs","property collaborator"
"upolynomial_sequence","boundary","size","get"
"upolynomial_sequence","boundary","upolynomial_sequence::push","command collaborator"
"upolynomial_sequence","boundary","upolynomial_sequence::push","command collaborator"
"mk_e_interval","pure-controller degenerate small-class","operator()","controller stateless"
"datatype_value_generator","boundary","index2vector","void-accessor command collaborator"
"datatype_value_generator","boundary","domain_size_exhausted","controller stateless"
"datatype_value_generator","boundary","datatype_value_generator","constructor"
"datatype_value_generator","boundary","~datatype_value_generator","destructor"
"datatype_value_generator","boundary","get_fid","property collaborator"
"datatype_value_generator","boundary","get_value","property non-void-command collaborator"
"bv_bound_chk_stats","empty","bv_bound_chk_stats","constructor"
"is_variable_test","data-provider boundary small-class","is_variable_test","constructor"
"is_variable_test","data-provider boundary small-class","is_variable_test","constructor"
"is_variable_test","data-provider boundary small-class","operator()","predicate collaborator"
"pdd_manager","boundary","is_new_node","get"
"pdd_manager","boundary","set_mark","set"
"pdd_manager","boundary","is_marked","get"
"pdd_manager","boundary","is_zero","predicate collaborator"
"pdd_manager","boundary","is_one","predicate collaborator"
"pdd_manager","boundary","is_val","get collaborator"
"pdd_manager","boundary","is_internal","get collaborator"
"pdd_manager","boundary","is_var","predicate collaborator"
"pdd_manager","boundary","is_max","predicate collaborator"
"pdd_manager","boundary","level","get collaborator"
"pdd_manager","boundary","var","get collaborator"
"pdd_manager","boundary","lo","get collaborator"
"pdd_manager","boundary","hi","get collaborator"
"pdd_manager","boundary","val","get collaborator"
"pdd_manager","boundary","get_signed_val","property collaborator"
"pdd_manager","boundary","inc_ref","command collaborator"
"pdd_manager","boundary","dec_ref","command collaborator"
"pdd_manager","boundary","level2pdd","get collaborator"
"pdd_manager","boundary","set_dmark","set"
"pdd_manager","boundary","is_dmarked","get"
"pdd_manager","boundary","get_semantics","get collaborator"
"pdd_manager","boundary","get_level2var","get collaborator"
"pdd_manager","boundary","num_nodes","unclassified"
"pdd_manager","boundary","is_linear","predicate non-void-command collaborator"
"pdd_manager","boundary","num_vars","controller stateless"
"pdd_manager","boundary","power_of_2","get"
"pdd_manager","boundary","max_value","get collaborator"
"pdd_manager","boundary","two_to_N","get collaborator"
"pdd_manager","boundary","normalize","property wrapper"
"pdd_manager","boundary","pdd_manager::pdd_manager","constructor"
"pdd_manager","boundary","pdd_manager::~pdd_manager","destructor"
"pdd_manager","boundary","pdd_manager::reset","command collaborator"
"pdd_manager","boundary","pdd_manager::set_max_num_nodes","set"
"pdd_manager","boundary","pdd_manager::init_nodes","command collaborator"
"pdd_manager","boundary","pdd_manager::init_vars","command collaborator"
"pdd_manager","boundary","pdd_manager::reset_op_cache","command"
"pdd_manager","boundary","pdd_manager::add","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::sub","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::mul","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::reduce","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::mk_val","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::mk_val","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::mul","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::add","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::zero","property wrapper"
"pdd_manager","boundary","pdd_manager::one","property wrapper"
"pdd_manager","boundary","pdd_manager::mk_and","property wrapper"
"pdd_manager","boundary","pdd_manager::mk_or","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::mk_xor","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::mk_xor","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::mk_not","property wrapper"
"pdd_manager","boundary","pdd_manager::subst_val","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::is_never_zero","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::min_parity","non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::subst_val","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::subst_val0","get property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::subst_add","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::subst_get","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::apply","get property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::check_result","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::apply_rec","get property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::minus","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::minus_rec","get property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::div","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::try_div","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::div_rec","get property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::pow","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::pow","get property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::pow_rec","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::reduce_on_match","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::lm_occurs","predicate collaborator"
"pdd_manager","boundary","pdd_manager::lt_quotient","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::lt_quotient_hi","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::try_spoly","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::spoly","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::common_factors","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::lex_lt","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::lm_lt","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::different_leading_term","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::next_leading","property collaborator"
"pdd_manager","boundary","pdd_manager::first_leading","property collaborator"
"pdd_manager","boundary","pdd_manager::factor","void-accessor command collaborator"
"pdd_manager","boundary","pdd_manager::factor","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::map_coefficients","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::resolve","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::reduce","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::reduce","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::quot_rem","void-accessor command collaborator"
"pdd_manager","boundary","pdd_manager::max_pow2_divisor","non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::max_pow2_divisor","non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::is_linear","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::is_binary","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::is_binary","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::is_monomial","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::is_univariate","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::is_univariate_in","predicate non-void-command"
"pdd_manager","boundary","pdd_manager::get_univariate_coefficients","command collaborator"
"pdd_manager","boundary","pdd_manager::var_is_leaf","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::push","command collaborator"
"pdd_manager","boundary","pdd_manager::pop","command"
"pdd_manager","boundary","pdd_manager::read","get non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::pop_entry","set factory collaborator"
"pdd_manager","boundary","pdd_manager::push_entry","set collaborator"
"pdd_manager","boundary","pdd_manager::imk_val","get property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::init_value","void-accessor command collaborator"
"pdd_manager","boundary","pdd_manager::init_value","command collaborator"
"pdd_manager","boundary","pdd_manager::make_node","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::insert_node","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::try_gc","command"
"pdd_manager","boundary","pdd_manager::reserve_var","command"
"pdd_manager","boundary","pdd_manager::mk_var","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::dag_size","non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::init_dmark","command"
"pdd_manager","boundary","pdd_manager::degree","collaborator"
"pdd_manager","boundary","pdd_manager::degree","get collaborator"
"pdd_manager","boundary","pdd_manager::degree","non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::tree_size","get non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::free_vars","get non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::alloc_free_nodes","command"
"pdd_manager","boundary","pdd_manager::is_reachable","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::compute_reachable","void-accessor command collaborator"
"pdd_manager","boundary","pdd_manager::gc","command"
"pdd_manager","boundary","pdd_manager::init_mark","command"
"pdd_manager","boundary","pdd_manager::to_monomials","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::display","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::well_formed","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::well_formed","predicate non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::display","property non-void-command collaborator"
"pdd_manager","boundary","pdd_manager::offset","property collaborator"
"justified_expr","data-provider boundary data-class","justified_expr","constructor"
"justified_expr","data-provider boundary data-class","operator=","get non-void-command"
"justified_expr","data-provider boundary data-class","justified_expr","copy-constructor"
"justified_expr","data-provider boundary data-class","justified_expr","copy-constructor"
"justified_expr","data-provider boundary data-class","~justified_expr","destructor"
"justified_expr","data-provider boundary data-class","get_fml","get collaborator"
"justified_expr","data-provider boundary data-class","get_proof","get collaborator"
"ast_lt_proc","pure-controller degenerate small-class","operator()","controller stateless"
"interval_comp_t","boundary degenerate small-class","operator()","collaborator incidental"
"macro_finder","entity boundary","macro_finder::is_macro","predicate non-void-command collaborator"
"macro_finder","entity boundary","macro_finder::is_arith_macro","predicate non-void-command collaborator"
"macro_finder","entity boundary","macro_finder::is_arith_macro","predicate non-void-command collaborator"
"macro_finder","entity boundary","macro_finder::macro_finder","constructor"
"macro_finder","entity boundary","macro_finder::~macro_finder","destructor"
"macro_finder","entity boundary","macro_finder::expand_macros","predicate non-void-command collaborator"
"macro_finder","entity boundary","macro_finder::operator()","command collaborator"
"macro_finder","entity boundary","macro_finder::expand_macros","predicate non-void-command collaborator"
"macro_finder","entity boundary","macro_finder::revert_unsafe_macros","command collaborator"
"macro_finder","entity boundary","macro_finder::operator()","command collaborator"
"bvarray2uf_rewriter_cfg","boundary","m","get collaborator"
"bvarray2uf_rewriter_cfg","boundary","updt_params","empty"
"bvarray2uf_rewriter_cfg","boundary","set_mcs","set collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::bvarray2uf_rewriter_cfg","constructor"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::~bvarray2uf_rewriter_cfg","destructor"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::reset","empty"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::get_index_sort","property non-void-command collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::get_index_sort","property non-void-command collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::get_value_sort","property non-void-command collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::get_value_sort","controller stateless"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::is_bv_array","predicate non-void-command collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::is_bv_array","predicate non-void-command collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::mk_uf_for_array","property non-void-command collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::reduce_app","property non-void-command collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::pre_visit","predicate non-void-command collaborator"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::reduce_quantifier","wrapper stateless"
"bvarray2uf_rewriter_cfg","boundary","bvarray2uf_rewriter_cfg::reduce_var","predicate non-void-command collaborator"
"macro_manager::macro_expander_cfg","entity boundary degenerate","rewrite_patterns","incidental"
"macro_manager::macro_expander_cfg","entity boundary degenerate","flat_assoc","collaborator incidental"
"macro_manager::macro_expander_cfg","entity boundary degenerate","reduce_app","collaborator incidental"
"macro_manager::macro_expander_cfg","entity boundary degenerate","reduce_quantifier","predicate non-void-command collaborator"
"macro_manager::macro_expander_cfg","entity boundary degenerate","get_subst","predicate non-void-command collaborator"
"refine_inj_axiom_simplifier","commander small-class","refine_inj_axiom_simplifier","constructor"
"refine_inj_axiom_simplifier","commander small-class","name","incidental"
"refine_inj_axiom_simplifier","commander small-class","reduce","command collaborator"
"binding","data-provider boundary","binding","constructor"
"binding","data-provider boundary","nodes","get collaborator"
"binding","data-provider boundary","operator[]","get collaborator"
"binding","data-provider boundary","size","unclassified"
"binding","data-provider boundary","q","property collaborator"
"binding","data-provider boundary","eq","predicate"
"binding","data-provider boundary","binding::display","property collaborator"
"tactic_report","empty","tactic_report::tactic_report","constructor"
"tactic_report","empty","tactic_report::~tactic_report","destructor"
"Version","empty","Version","constructor"
"check_pred","entity boundary","check_pred","constructor"
"check_pred","entity boundary","reset","command"
"check_pred","entity boundary","check_pred::operator()","predicate non-void-command collaborator"
"check_pred","entity boundary","check_pred::visit","void-accessor command collaborator"
"bv_factory","entity boundary small-class","bv_factory::bv_factory","constructor"
"bv_factory","entity boundary small-class","bv_factory::~bv_factory","destructor"
"bv_factory","entity boundary small-class","bv_factory::mk_value_core","property non-void-command collaborator"
"bv_factory","entity boundary small-class","bv_factory::mk_num_value","property non-void-command collaborator"
"arith_decl_plugin","boundary","mk_fresh","wrapper stateless"
"arith_decl_plugin","boundary","convert_int_numerals_to_real","get"
"arith_decl_plugin","boundary","mk_pi","get collaborator"
"arith_decl_plugin","boundary","mk_e","get collaborator"
"arith_decl_plugin","boundary","is_considered_uninterpreted","predicate non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::aw","get set collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::am","property collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::mk_numeral","property non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::mk_numeral","property non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::del","command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::translate","property non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::set_manager","command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::arith_decl_plugin","constructor"
"arith_decl_plugin","boundary","arith_decl_plugin::~arith_decl_plugin","destructor"
"arith_decl_plugin","boundary","arith_decl_plugin::finalize","command"
"arith_decl_plugin","boundary","arith_decl_plugin::mk_sort","get property collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::mk_func_decl","get property non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::check_arity","command"
"arith_decl_plugin","boundary","arith_decl_plugin::fix_kind","collaborator incidental"
"arith_decl_plugin","boundary","arith_decl_plugin::mk_numeral","property non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::mk_num_decl","property non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::bv_symbol","wrapper stateless"
"arith_decl_plugin","boundary","arith_decl_plugin::mk_func_decl","property non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::mk_func_decl","property non-void-command collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::get_sort_names","controller stateless"
"arith_decl_plugin","boundary","arith_decl_plugin::get_op_names","controller stateless"
"arith_decl_plugin","boundary","arith_decl_plugin::is_value","predicate wrapper"
"arith_decl_plugin","boundary","arith_decl_plugin::is_unique_value","predicate wrapper"
"arith_decl_plugin","boundary","arith_decl_plugin::are_equal","predicate collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::are_distinct","predicate collaborator"
"arith_decl_plugin","boundary","arith_decl_plugin::get_some_value","property non-void-command collaborator"
"bfs_elem","empty","bfs_elem","constructor"
"macro_manager","boundary","get_manager","get collaborator"
"macro_manager","boundary","get_util","get collaborator"
"macro_manager","boundary","has_macros","predicate"
"macro_manager","boundary","is_forbidden","predicate collaborator"
"macro_manager","boundary","get_forbidden_set","get collaborator"
"macro_manager","boundary","contains","predicate collaborator"
"macro_manager","boundary","get_num_macros","unclassified"
"macro_manager","boundary","get_first_macro_last_level","unclassified"
"macro_manager","boundary","get_macro_func_decl","property collaborator"
"macro_manager","boundary","get_macro_quantifier","controller stateless"
"macro_manager","boundary","unsafe_macros","get collaborator"
"macro_manager","boundary","macro_manager::macro_manager","constructor"
"macro_manager","boundary","macro_manager::~macro_manager","destructor"
"macro_manager","boundary","macro_manager::push_scope","command collaborator"
"macro_manager","boundary","macro_manager::pop_scope","command collaborator"
"macro_manager","boundary","macro_manager::restore_decls","command"
"macro_manager","boundary","macro_manager::restore_forbidden","command"
"macro_manager","boundary","macro_manager::reset","command"
"macro_manager","boundary","macro_manager::copy_to","controller"
"macro_manager","boundary","macro_manager::insert","predicate non-void-command collaborator"
"macro_manager","boundary","macro_manager::mark_forbidden","wrapper"
"macro_manager","boundary","macro_manager::get_head_def","void-accessor"
"macro_manager","boundary","macro_manager::display","command collaborator"
"macro_manager","boundary","macro_manager::get_macro_interpretation","property collaborator"
"macro_manager","boundary","macro_manager::expand_macros","void-accessor command collaborator"
"bvsls_opt_engine","entity boundary","get_model","void-accessor collaborator"
"bvsls_opt_engine","entity boundary","top_score","property non-void-command collaborator"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::bvsls_opt_engine","constructor"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::~bvsls_opt_engine","destructor"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::optimize","property non-void-command collaborator"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::setup_opt_tracker","command collaborator"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::maximize","property non-void-command collaborator"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::save_model","command collaborator"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::what_if","predicate non-void-command collaborator"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::find_best_move","property non-void-command factory collaborator"
"bvsls_opt_engine","entity boundary","bvsls_opt_engine::randomize_wrt_hard","predicate non-void-command collaborator"
"produce_unsat_cores_probe","pure-controller degenerate small-class","operator()","controller stateless"
"ddnf","entity boundary","ddnf::ddnf","constructor"
"ddnf","entity boundary","ddnf::~ddnf","destructor"
"ddnf","entity boundary","ddnf::query","property non-void-command collaborator"
"ddnf","entity boundary","ddnf::reset_statistics","command"
"ddnf","entity boundary","ddnf::collect_statistics","collaborator"
"ddnf","entity boundary","ddnf::display_certificate","collaborator"
"ddnf","entity boundary","ddnf::get_answer","property non-void-command collaborator"
"defined_names","unclassified","defined_names::defined_names","constructor"
"defined_names","unclassified","defined_names::~defined_names","destructor"
"defined_names","unclassified","defined_names::mk_name","predicate non-void-command collaborator"
"defined_names","unclassified","defined_names::mk_pos_name","predicate non-void-command collaborator"
"defined_names","unclassified","defined_names::mk_definition","property non-void-command factory collaborator"
"defined_names","unclassified","defined_names::push","command"
"defined_names","unclassified","defined_names::pop","command"
"defined_names","unclassified","defined_names::reset","command"
"defined_names","unclassified","defined_names::get_num_names","unclassified"
"defined_names","unclassified","defined_names::get_name_decl","property collaborator"
"pdecl_manager::app_sort_info","entity boundary","obj_size","incidental"
"pdecl_manager::app_sort_info","entity boundary","finalize","command collaborator"
"pdecl_manager::app_sort_info","entity boundary","display","collaborator"
"pdecl_manager::app_sort_info","entity boundary","pp","property collaborator"
"stats","data-provider","init","set collaborator"
"stats","data-provider","stats","constructor"
"stats","data-provider","stats","copy-constructor"
"stats","data-provider","stats","copy-constructor"
"stats","data-provider","~stats","destructor"
"stats","data-provider","operatorZ3_stats","get"
"stats","data-provider","operator=","get set"
"stats","data-provider","size","unclassified"
"stats","data-provider","key","property collaborator"
"stats","data-provider","is_uint","predicate"
"stats","data-provider","is_double","predicate"
"stats","data-provider","uint_value","unclassified"
"stats","data-provider","double_value","property"
"stats","data-provider","stats","constructor"
"stats","data-provider","reset","wrapper"
"stats","data-provider","collect_statistics","controller"
"stats","data-provider","stats","constructor"
"stats","data-provider","stats","constructor"
"stats","data-provider","stats::collect_statistics","controller"
"stats","data-provider","stats::reset","wrapper"
"special_relations_decl_plugin","entity boundary","mk_fresh","wrapper stateless"
"special_relations_decl_plugin","entity boundary","mk_sort","collaborator incidental"
"special_relations_decl_plugin","entity boundary","has_special_relation","get"
"special_relations_decl_plugin","entity boundary","special_relations_decl_plugin::special_relations_decl_plugin","constructor"
"special_relations_decl_plugin","entity boundary","special_relations_decl_plugin::mk_func_decl","property non-void-command collaborator"
"special_relations_decl_plugin","entity boundary","special_relations_decl_plugin::get_op_names","command collaborator"
"elim_term_ite_cfg","unclassified","elim_term_ite_cfg","constructor"
"elim_term_ite_cfg","unclassified","new_defs","get collaborator"
"elim_term_ite_cfg","unclassified","push","command"
"elim_term_ite_cfg","unclassified","pop","command"
"elim_term_ite_cfg","unclassified","elim_term_ite_cfg::reduce_app","property non-void-command collaborator"
"cycle_breaker","commander boundary small-class","traverse","command collaborator"
"cycle_breaker","commander boundary small-class","cycle_breaker","constructor"
"cycle_breaker","commander boundary small-class","operator()","command collaborator"
"numeral_factory","empty","numeral_factory","constructor"
"triple","data-provider small-class","triple","constructor"
"triple","data-provider small-class","triple","constructor"
"triple","data-provider small-class","operator==","predicate"
"shared_occs_mark","unclassified","~shared_occs_mark","destructor"
"shared_occs_mark","unclassified","is_marked","controller stateless"
"shared_occs_mark","unclassified","reset_mark","controller stateless"
"shared_occs_mark","unclassified","mark","command collaborator"
"shared_occs_mark","unclassified","reset","command"
"shared_occs_mark","unclassified","mark","command"
"sort","data-provider","sort","constructor"
"sort","data-provider","sort","copy-constructor"
"sort","data-provider","sort","constructor"
"sort","data-provider","operatorZ3_sort","unclassified"
"sort","data-provider","id","unclassified"
"sort","data-provider","sort_kind","property wrapper"
"sort","data-provider","name","property collaborator"
"sort","data-provider","is_bool","predicate"
"sort","data-provider","is_int","predicate"
"sort","data-provider","is_real","predicate"
"sort","data-provider","is_arith","predicate"
"sort","data-provider","is_bv","predicate"
"sort","data-provider","is_array","predicate"
"sort","data-provider","is_datatype","predicate"
"sort","data-provider","is_relation","predicate"
"sort","data-provider","is_seq","predicate"
"sort","data-provider","is_re","predicate"
"sort","data-provider","is_finite_domain","predicate"
"sort","data-provider","is_fpa","predicate"
"sort","data-provider","bv_size","unclassified"
"sort","data-provider","fpa_ebits","unclassified"
"sort","data-provider","fpa_sbits","unclassified"
"sort","data-provider","array_domain","property collaborator"
"sort","data-provider","array_range","property collaborator"
"sort","data-provider","operator<<","controller stateless"
"sort","data-provider","get_info","property collaborator"
"sort","data-provider","is_infinite","predicate"
"sort","data-provider","is_very_big","predicate"
"sort","data-provider","is_sort_of","predicate collaborator"
"sort","data-provider","get_num_elements","property collaborator"
"sort","data-provider","set_num_elements","command collaborator"
"sort","data-provider","get_size","wrapper stateless"
"sort","data-provider","is_type_var","predicate"
"sort","data-provider","sort::constructors","property non-void-command collaborator"
"sort","data-provider","sort::recognizers","property non-void-command collaborator"
"theory_char::reset_bits","boundary small-class","undo","wrapper"
"skolemizer","entity boundary","process","command collaborator"
"skolemizer","entity boundary","skolemizer","constructor"
"skolemizer","entity boundary","set_sk_hack","set"
"skolemizer","entity boundary","operator()","void-accessor command collaborator"
"skolemizer","entity boundary","is_sk_hack","predicate collaborator"
"mpz_manager","boundary","allocate_if_needed","void-accessor command"
"mpz_manager","boundary","clear","command collaborator"
"mpz_manager","boundary","allocate","property non-void-command collaborator"
"mpz_manager","boundary","deallocate","command collaborator"
"mpz_manager","boundary","clear","wrapper stateless"
"mpz_manager","boundary","deallocate","void-accessor command collaborator"
"mpz_manager","boundary","set_i64","command"
"mpz_manager","boundary","get_sign_cell","void-accessor controller"
"mpz_manager","boundary","mk_big","void-accessor command collaborator"
"mpz_manager","boundary","del","command collaborator"
"mpz_manager","boundary","inc","command collaborator"
"mpz_manager","boundary","dec","command collaborator"
"mpz_manager","boundary","eq","predicate non-void-command collaborator"
"mpz_manager","boundary","lt","predicate non-void-command"
"mpz_manager","boundary","lt","predicate non-void-command collaborator"
"mpz_manager","boundary","neq","predicate non-void-command collaborator"
"mpz_manager","boundary","gt","predicate non-void-command collaborator"
"mpz_manager","boundary","ge","predicate non-void-command collaborator"
"mpz_manager","boundary","le","predicate non-void-command collaborator"
"mpz_manager","boundary","inv","wrapper stateless"
"mpz_manager","boundary","set","command collaborator"
"mpz_manager","boundary","set","controller stateless"
"mpz_manager","boundary","set","command"
"mpz_manager","boundary","set","command"
"mpz_manager","boundary","set","command"
"mpz_manager","boundary","dup","property non-void-command collaborator"
"mpz_manager","boundary","swap","controller stateless"
"mpz_manager","boundary","is_uint","predicate collaborator"
"mpz_manager","boundary","get_uint","collaborator"
"mpz_manager","boundary","is_int","predicate collaborator"
"mpz_manager","boundary","get_int","property collaborator"
"mpz_manager","boundary","machine_div2k","command collaborator"
"mpz_manager","boundary","mul2k","command collaborator"
"mpz_manager","boundary","prev_power_of_two","non-void-command collaborator"
"mpz_manager","boundary","root","predicate non-void-command collaborator"
"mpz_manager","boundary","is_even","controller stateless"
"mpz_manager","boundary","is_odd","predicate non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::mpz_manager","constructor"
"mpz_manager","boundary","mpz_manager<SYNCH>::~mpz_manager","destructor"
"mpz_manager","boundary","mpz_manager<SYNCH>::allocate","property non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::deallocate","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::del","controller stateless"
"mpz_manager","boundary","mpz_manager<SYNCH>::add","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::sub","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::set_big_i64","void-accessor command"
"mpz_manager","boundary","mpz_manager<SYNCH>::set_big_ui64","void-accessor command"
"mpz_manager","boundary","mpz_manager<SYNCH>::set","void-accessor command"
"mpz_manager","boundary","mpz_manager<SYNCH>::set","command"
"mpz_manager","boundary","mpz_manager<SYNCH>::set_digits","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::mul","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::addmul","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::submul","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::machine_div_rem","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::machine_div","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::reset","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::rem","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::div_gcd","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::div","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::mod","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::neg","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::abs","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_add_sub","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_add","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_sub","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_mul","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_div_rem","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::quot_rem_core","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_div","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_rem","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::gcd","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::size_info","wrapper stateless"
"mpz_manager","boundary","mpz_manager<SYNCH>::gcd","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::gcd","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::lcm","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::bitwise_or","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::bitwise_and","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::bitwise_xor","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::bitwise_not","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_set","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::big_compare","property non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::is_uint64","predicate wrapper"
"mpz_manager","boundary","mpz_manager<SYNCH>::is_int64","predicate wrapper"
"mpz_manager","boundary","mpz_manager<SYNCH>::get_uint64","property wrapper"
"mpz_manager","boundary","mpz_manager<SYNCH>::get_int64","property collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::get_double","wrapper stateless"
"mpz_manager","boundary","mpz_manager<SYNCH>::display","collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::display_smt2","collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::display_hex","unclassified"
"mpz_manager","boundary","mpz_manager<SYNCH>::display_bin","unclassified"
"mpz_manager","boundary","mpz_manager<SYNCH>::to_string","property collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::hash","non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::power","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::is_power_of_two","predicate non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::is_power_of_two","predicate non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::ensure_capacity","void-accessor command"
"mpz_manager","boundary","mpz_manager<SYNCH>::normalize","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::machine_div2k","void-accessor command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::mul2k","command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::power_of_two_multiple","wrapper stateless"
"mpz_manager","boundary","mpz_manager<SYNCH>::log2","non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::mlog2","non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::bitsize","non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::next_power_of_two","non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::is_perfect_square","predicate non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::root","predicate non-void-command"
"mpz_manager","boundary","mpz_manager<SYNCH>::decompose","predicate controller"
"mpz_manager","boundary","mpz_manager<SYNCH>::get_bit","predicate non-void-command collaborator"
"mpz_manager","boundary","mpz_manager<SYNCH>::divides","predicate non-void-command collaborator"
"nnf","entity commander boundary","nnf","constructor"
"nnf","entity commander boundary","operator()","command collaborator"
"nnf","entity commander boundary","reset","command"
"nnf","entity commander boundary","contains","predicate non-void-command"
"nnf","entity commander boundary","lookup","property non-void-command collaborator"
"nnf","entity commander boundary","insert","command collaborator"
"nnf","entity commander boundary","pop","command"
"nnf","entity commander boundary","nnf_iff","command collaborator"
"nnf","entity commander boundary","nnf_ite","command collaborator"
"nnf","entity commander boundary","nnf_implies","command collaborator"
"nnf","entity commander boundary","nnf_not","command collaborator"
"nnf","entity commander boundary","nnf_and_or","command collaborator"
"nnf","entity commander boundary","get_nnf","predicate non-void-command collaborator"
"nnf","entity commander boundary","nnf::nnf","constructor"
"nnf","entity commander boundary","nnf::~nnf","destructor"
"nnf","entity commander boundary","nnf::operator()","collaborator incidental"
"nnf","entity commander boundary","nnf::updt_params","command collaborator"
"nnf","entity commander boundary","nnf::get_param_descrs","command collaborator"
"nnf","entity commander boundary","nnf::reset","command"
"nnf","entity commander boundary","nnf::reset_cache","command"
"ite_find_p","entity boundary small-class","ite_find_p","constructor"
"ite_find_p","entity boundary small-class","operator()","predicate non-void-command collaborator"
"path_tree","pure-controller small-class","path_tree","constructor"
"path_tree","pure-controller small-class","display","controller"
"path_tree","pure-controller small-class","path_tree","constructor"
"path_tree","pure-controller small-class","display","controller"
"pull_quant::imp","boundary degenerate small-class","operator()","wrapper stateless"
"is_qfbv_eq_probe","pure-controller degenerate small-class","operator()","controller stateless"
"stream_buffer","unclassified","stream_buffer","constructor"
"stream_buffer","unclassified","operator*","get"
"stream_buffer","unclassified","operator++","command"
"stream_buffer","unclassified","line","get"
"stream_buffer","unclassified","stream_buffer","constructor"
"stream_buffer","unclassified","operator*","get"
"stream_buffer","unclassified","operator++","set"
"num_occurs","unclassified","num_occurs","constructor"
"num_occurs","unclassified","reset","command"
"num_occurs","unclassified","get_num_occs","collaborator"
"num_occurs","unclassified","num_occurs::process","controller"
"num_occurs","unclassified","num_occurs::validate","controller"
"num_occurs","unclassified","num_occurs::operator()","command collaborator"
"num_occurs","unclassified","num_occurs::operator()","command collaborator"
"clause_pp","data-provider boundary small-class","clause_pp","constructor"
"clause_pp","data-provider boundary small-class","clause_pp::display","property collaborator"
"solver::imp","boundary","need_check","predicate non-void-command"
"solver::imp","boundary","init_cone_of_influence","command collaborator"
"solver::imp","boundary","reset","command"
"solver::imp","boundary","check","property non-void-command collaborator"
"solver::imp","boundary","add_monic_eq_bound","command collaborator"
"solver::imp","boundary","add_monic_eq","command collaborator"
"solver::imp","boundary","add_constraint","command collaborator"
"solver::imp","boundary","check_monic","predicate non-void-command collaborator"
"solver::imp","boundary","check_constraint","predicate non-void-command collaborator"
"solver::imp","boundary","check","property non-void-command collaborator"
"solver::imp","boundary","~imp","destructor"
"solver::imp","boundary","mk_true_bvar","command collaborator"
"solver::imp","boundary","updt_params","command collaborator"
"solver::imp","boundary","reset","command"
"solver::imp","boundary","clear","command"
"solver::imp","boundary","checkpoint","command"
"solver::imp","boundary","num_bool_vars","get"
"solver::imp","boundary","num_vars","unclassified"
"solver::imp","boundary","is_int","get collaborator"
"solver::imp","boundary","inc_ref","empty"
"solver::imp","boundary","dec_ref","empty"
"solver::imp","boundary","inc_ref","command collaborator"
"solver::imp","boundary","dec_ref","command collaborator"
"solver::imp","boundary","inc_ref","controller"
"solver::imp","boundary","inc_ref","command collaborator"
"solver::imp","boundary","dec_ref","command collaborator"
"solver::imp","boundary","dec_ref","command collaborator"
"solver::imp","boundary","is_arith_atom","get collaborator"
"solver::imp","boundary","is_arith_literal","predicate collaborator"
"solver::imp","boundary","max_var","property collaborator"
"solver::imp","boundary","max_var","get property collaborator"
"solver::imp","boundary","max_var","property collaborator"
"solver::imp","boundary","max_var","property collaborator"
"solver::imp","boundary","max_var","property collaborator"
"solver::imp","boundary","max_bvar","controller stateless"
"solver::imp","boundary","degree","collaborator"
"solver::imp","boundary","degree","collaborator"
"solver::imp","boundary","mk_bool_var_core","property non-void-command collaborator"
"solver::imp","boundary","mk_bool_var","property non-void-command collaborator"
"solver::imp","boundary","mk_var","property non-void-command collaborator"
"solver::imp","boundary","register_var","command"
"solver::imp","boundary","vars","command collaborator"
"solver::imp","boundary","deallocate","command collaborator"
"solver::imp","boundary","deallocate","command collaborator"
"solver::imp","boundary","del","command collaborator"
"solver::imp","boundary","del","command collaborator"
"solver::imp","boundary","del","command collaborator"
"solver::imp","boundary","del","command collaborator"
"solver::imp","boundary","del_unref_atoms","command"
"solver::imp","boundary","mk_ineq_atom","property non-void-command collaborator"
"solver::imp","boundary","mk_ineq_atom","property non-void-command collaborator"
"solver::imp","boundary","mk_ineq_literal","property non-void-command collaborator"
"solver::imp","boundary","mk_root_atom","property non-void-command collaborator"
"solver::imp","boundary","attach_clause","command collaborator"
"solver::imp","boundary","deattach_clause","command collaborator"
"solver::imp","boundary","deallocate","command collaborator"
"solver::imp","boundary","del_clause","command collaborator"
"solver::imp","boundary","del_clause","command collaborator"
"solver::imp","boundary","del_clauses","command collaborator"
"solver::imp","boundary","del_clauses","command"
"solver::imp","boundary","check_lemma","get command collaborator"
"solver::imp","boundary","log_lemma","command collaborator"
"solver::imp","boundary","log_lemma","command"
"solver::imp","boundary","mk_clause_core","non-void-command factory collaborator"
"solver::imp","boundary","mk_clause","property non-void-command collaborator"
"solver::imp","boundary","mk_external_clause","void-accessor command collaborator"
"solver::imp","boundary","save_assign_trail","command collaborator"
"solver::imp","boundary","save_set_updt_trail","command collaborator"
"solver::imp","boundary","save_updt_eq_trail","command collaborator"
"solver::imp","boundary","save_new_stage_trail","command"
"solver::imp","boundary","save_new_level_trail","command"
"solver::imp","boundary","undo_bvar_assignment","command collaborator"
"solver::imp","boundary","undo_set_updt","command collaborator"
"solver::imp","boundary","undo_new_stage","set"
"solver::imp","boundary","undo_new_level","set"
"solver::imp","boundary","undo_updt_eq","set collaborator"
"solver::imp","boundary","undo_until","command collaborator"
"solver::imp","boundary","undo_until_size","command"
"solver::imp","boundary","undo_until_stage","wrapper"
"solver::imp","boundary","undo_until_level","wrapper"
"solver::imp","boundary","undo_until_unassigned","wrapper"
"solver::imp","boundary","undo_until_empty","command"
"solver::imp","boundary","new_level","command"
"solver::imp","boundary","assigned_value","get property controller"
"solver::imp","boundary","assign","command collaborator"
"solver::imp","boundary","decide","command collaborator"
"solver::imp","boundary","value","property non-void-command collaborator"
"solver::imp","boundary","is_satisfied","predicate collaborator"
"solver::imp","boundary","is_inconsistent","predicate non-void-command collaborator"
"solver::imp","boundary","process_boolean_clause","predicate non-void-command collaborator"
"solver::imp","boundary","R_propagate","command collaborator"
"solver::imp","boundary","updt_infeasible","command collaborator"
"solver::imp","boundary","updt_eq","command collaborator"
"solver::imp","boundary","process_arith_clause","predicate non-void-command collaborator"
"solver::imp","boundary","process_clause","predicate non-void-command"
"solver::imp","boundary","process_clauses","property non-void-command collaborator"
"solver::imp","boundary","peek_next_bool_var","set"
"solver::imp","boundary","new_stage","command"
"solver::imp","boundary","select_witness","command collaborator"
"solver::imp","boundary","is_satisfied","predicate non-void-command"
"solver::imp","boundary","search","property non-void-command collaborator"
"solver::imp","boundary","gc","command collaborator"
"solver::imp","boundary","should_gc","predicate non-void-command"
"solver::imp","boundary","do_gc","command"
"solver::imp","boundary","undo_to_base","command"
"solver::imp","boundary","should_reorder","predicate"
"solver::imp","boundary","do_reorder","command"
"solver::imp","boundary","should_simplify","predicate"
"solver::imp","boundary","do_simplify","set"
"solver::imp","boundary","log","command"
"solver::imp","boundary","search_check","property non-void-command collaborator"
"solver::imp","boundary","apply_reorder","command"
"solver::imp","boundary","check","property non-void-command collaborator"
"solver::imp","boundary","init_search","command"
"solver::imp","boundary","check","property non-void-command collaborator"
"solver::imp","boundary","get_core","command collaborator"
"solver::imp","boundary","collect","void-accessor command collaborator"
"solver::imp","boundary","collect","predicate non-void-command collaborator"
"solver::imp","boundary","check_marks","predicate wrapper"
"solver::imp","boundary","scope_lvl","get"
"solver::imp","boundary","is_marked","predicate collaborator"
"solver::imp","boundary","mark","command collaborator"
"solver::imp","boundary","reset_mark","set collaborator"
"solver::imp","boundary","reset_marks","command collaborator"
"solver::imp","boundary","process_antecedent","command collaborator"
"solver::imp","boundary","resolve_clause","command collaborator"
"solver::imp","boundary","resolve_clause","command collaborator"
"solver::imp","boundary","resolve_lazy_justification","command collaborator"
"solver::imp","boundary","only_literals_from_previous_stages","predicate collaborator"
"solver::imp","boundary","max_scope_lvl","non-void-command collaborator"
"solver::imp","boundary","remove_literals_from_lvl","command collaborator"
"solver::imp","boundary","is_bool_lemma","predicate wrapper"
"solver::imp","boundary","find_new_level_arith_lemma","non-void-command collaborator"
"solver::imp","boundary","resolve","predicate non-void-command collaborator"
"solver::imp","boundary","lemma_is_clause","predicate collaborator"
"solver::imp","boundary","check_watches","predicate"
"solver::imp","boundary","check_bwatches","predicate collaborator"
"solver::imp","boundary","check_invariant","predicate"
"solver::imp","boundary","check_satisfied","predicate collaborator"
"solver::imp","boundary","check_satisfied","predicate collaborator"
"solver::imp","boundary","collect_statistics","controller"
"solver::imp","boundary","reset_statistics","command"
"solver::imp","boundary","heuristic_reorder","command collaborator"
"solver::imp","boundary","init_shuffle","set collaborator"
"solver::imp","boundary","shuffle_vars","command collaborator"
"solver::imp","boundary","can_reorder","predicate"
"solver::imp","boundary","reorder","command collaborator"
"solver::imp","boundary","restore_order","command collaborator"
"solver::imp","boundary","remove_learned_roots","command collaborator"
"solver::imp","boundary","has_root_atom","predicate controller"
"solver::imp","boundary","reinit_cache","command collaborator"
"solver::imp","boundary","reinit_cache","command collaborator"
"solver::imp","boundary","reinit_cache","command collaborator"
"solver::imp","boundary","reinit_cache","command collaborator"
"solver::imp","boundary","reinit_cache","void-accessor command collaborator"
"solver::imp","boundary","reset_watches","command collaborator"
"solver::imp","boundary","reattach_arith_clauses","command collaborator"
"solver::imp","boundary","sort_clauses_by_degree","command collaborator"
"solver::imp","boundary","sort_watched_clauses","command collaborator"
"solver::imp","boundary","is_full_dimensional","predicate controller"
"solver::imp","boundary","is_full_dimensional","predicate collaborator"
"solver::imp","boundary","is_full_dimensional","predicate collaborator"
"solver::imp","boundary","is_full_dimensional","predicate"
"solver::imp","boundary","fix_patch","command"
"solver::imp","boundary","fix_patch","command collaborator"
"solver::imp","boundary","is_unit_ineq","predicate controller"
"solver::imp","boundary","is_unit_eq","predicate collaborator"
"solver::imp","boundary","is_cmp0","property non-void-command collaborator"
"solver::imp","boundary","is_single_poly","controller stateless"
"solver::imp","boundary","is_unit","predicate non-void-command collaborator"
"solver::imp","boundary","display_num_assignment","property collaborator"
"solver::imp","boundary","display_bool_assignment","property collaborator"
"solver::imp","boundary","display_mathematica_assignment","predicate collaborator"
"solver::imp","boundary","display_num_assignment","property collaborator"
"solver::imp","boundary","display_assignment","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display_eval","property non-void-command collaborator"
"solver::imp","boundary","display_ineq","property collaborator"
"solver::imp","boundary","display_mathematica","property collaborator"
"solver::imp","boundary","display_polynomial_smt2","property collaborator"
"solver::imp","boundary","display_ineq_smt2","property collaborator"
"solver::imp","boundary","display_poly_root","property collaborator"
"solver::imp","boundary","display_binary_smt2","property collaborator"
"solver::imp","boundary","display_linear_root_smt2","property collaborator"
"solver::imp","boundary","display_root_smt2","property collaborator"
"solver::imp","boundary","display_root","controller stateless"
"solver::imp","boundary","display_mathematica","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display_mathematica","property collaborator"
"solver::imp","boundary","display_smt2","property collaborator"
"solver::imp","boundary","display_atom","property collaborator"
"solver::imp","boundary","display_atom","property collaborator"
"solver::imp","boundary","display_mathematica_atom","property collaborator"
"solver::imp","boundary","display_smt2_atom","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display_smt2","property collaborator"
"solver::imp","boundary","display_mathematica","property collaborator"
"solver::imp","boundary","display_smt2","property collaborator"
"solver::imp","boundary","display_assumptions","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display_not","property collaborator"
"solver::imp","boundary","display_not","property collaborator"
"solver::imp","boundary","display","property non-void-command collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display_polynomial","property collaborator"
"solver::imp","boundary","display_smt2","property collaborator"
"solver::imp","boundary","display_smt2","property collaborator"
"solver::imp","boundary","display_smt2","property collaborator"
"solver::imp","boundary","display_abst","controller stateless"
"solver::imp","boundary","display_abst","property collaborator"
"solver::imp","boundary","display_abst","property collaborator"
"solver::imp","boundary","display_abst","property collaborator"
"solver::imp","boundary","display_mathematica","property collaborator"
"solver::imp","boundary","display_mathematica_lemma","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display_mathematica","property collaborator"
"solver::imp","boundary","display_abst","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display_mathematica","property collaborator"
"solver::imp","boundary","display_abst","property collaborator"
"solver::imp","boundary","display","property collaborator"
"solver::imp","boundary","display_vars","property collaborator"
"solver::imp","boundary","display_smt2_arith_decls","property collaborator"
"solver::imp","boundary","display_smt2_bool_decls","property collaborator"
"solver::imp","boundary","display_smt2","property collaborator"
"fact_writer","unclassified","get","property non-void-command collaborator"
"fact_writer","unclassified","set_changed","command"
"fact_writer","unclassified","size","unclassified"
"context_hwf","empty","context_hwf","constructor"
"expr_pattern_match","boundary","expr_pattern_match::expr_pattern_match","constructor"
"expr_pattern_match","boundary","expr_pattern_match::~expr_pattern_match","destructor"
"expr_pattern_match","boundary","expr_pattern_match::match_quantifier","predicate non-void-command"
"expr_pattern_match","boundary","expr_pattern_match::match_quantifier","predicate non-void-command collaborator"
"expr_pattern_match","boundary","expr_pattern_match::match_quantifier_index","predicate non-void-command"
"expr_pattern_match","boundary","expr_pattern_match::instantiate","void-accessor controller"
"expr_pattern_match","boundary","expr_pattern_match::compile","command collaborator"
"expr_pattern_match","boundary","expr_pattern_match::match","predicate non-void-command collaborator"
"expr_pattern_match","boundary","expr_pattern_match::match_decl","controller stateless"
"expr_pattern_match","boundary","expr_pattern_match::is_var","controller stateless"
"expr_pattern_match","boundary","expr_pattern_match::initialize","command collaborator"
"expr_pattern_match","boundary","expr_pattern_match::initialize","non-void-command collaborator"
"expr_pattern_match","boundary","expr_pattern_match::display","collaborator"
"expr_pattern_match","boundary","expr_pattern_match::display","wrapper"
"seq_rewriter","boundary","compare_lengths","property non-void-command collaborator"
"seq_rewriter","boundary","zero","property non-void-command collaborator"
"seq_rewriter","boundary","one","property non-void-command collaborator"
"seq_rewriter","boundary","minus_one","property non-void-command collaborator"
"seq_rewriter","boundary","mk_sub","property non-void-command collaborator"
"seq_rewriter","boundary","max_length","predicate non-void-command collaborator"
"seq_rewriter","boundary","re","property non-void-command collaborator"
"seq_rewriter","boundary","re","property collaborator"
"seq_rewriter","boundary","str","property non-void-command collaborator"
"seq_rewriter","boundary","str","property collaborator"
"seq_rewriter","boundary","m","property collaborator"
"seq_rewriter","boundary","get_fid","property collaborator"
"seq_rewriter","boundary","u","get collaborator"
"seq_rewriter","boundary","u","get collaborator"
"seq_rewriter","boundary","set_solver","controller stateless"
"seq_rewriter","boundary","has_solver","controller stateless"
"seq_rewriter","boundary","coalesce_chars","get"
"seq_rewriter","boundary","mk_app","property non-void-command collaborator"
"seq_rewriter","boundary","mk_app","property non-void-command collaborator"
"seq_rewriter","boundary","mk_re_append","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::updt_params","set collaborator"
"seq_rewriter","boundary","seq_rewriter::get_param_descrs","wrapper stateless"
"seq_rewriter","boundary","seq_rewriter::mk_bool_app","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_bool_app_helper","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_eq_helper","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_app_core","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_unit","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_concat","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_concat","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_length","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_first","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_sub","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_rest","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_last","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_butlast","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::lift_ites_throttled","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::lift_ites_filter","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_suffix","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_prefix","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::sign_is_determined","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_len","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::extract_pop_suffix","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::extract_push_offset","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::extract_push_length","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_extract","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::get_lengths","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::cannot_contain_suffix","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::cannot_contain_prefix","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_contains","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_by_char","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_at","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_nth","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_nth_i","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_last_index","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_index","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::compare_lengths","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_replace","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_replace_all","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_map","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_mapi","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_foldl","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_foldli","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::try_get_unit_values","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::replace_all_subvectors","controller stateless"
"seq_rewriter","boundary","seq_rewriter::mk_seq_replace_re_all","collaborator incidental"
"seq_rewriter","boundary","seq_rewriter::mk_seq_replace_re","collaborator incidental"
"seq_rewriter","boundary","seq_rewriter::mk_seq_prefix","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_seq_suffix","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_units","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_le","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_lt","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_from_code","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_to_code","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_is_digit","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_ubv2s","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_sbv2s","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_itos","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_stoi","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::add_next","void-accessor command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_sequence","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_sequence","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::get_head_tail","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::get_head_tail_reversed","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::get_re_head_tail","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::get_re_head_tail_reversed","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::re_and","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::re_predicate","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_nullable","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_nullable_rec","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_nullable_symbolic_regex","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_reverse","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_derivative","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::check_deriv_normal_form","predicate non-void-command"
"seq_rewriter","boundary","seq_rewriter::mk_derivative","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_derivative","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_antimirov_deriv","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_antimirov_deriv_rec","void-accessor command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_antimirov_deriv_intersection","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_antimirov_deriv_concat","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_antimirov_deriv_negate","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_antimirov_deriv_union","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_antimirov_deriv_restrict","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_regex_union_normalize","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_regex_inter_normalize","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::merge_regex_sets","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_regex_reverse","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_regex_concat","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_in_antimirov","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_in_antimirov_rec","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::simplify_path","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_der_antimirov_union","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_der_union","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_der_inter","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_der_concat","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::lt_char","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::eq_char","collaborator incidental"
"seq_rewriter","boundary","seq_rewriter::neq_char","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::le_char","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::pred_implies","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::ite_bdds_compatible","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_der_op_rec","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_der_op","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_der_compl","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_der_cond","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_derivative_rec","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_re_contains_pattern","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::non_overlap","predicate collaborator"
"seq_rewriter","boundary","seq_rewriter::non_overlap","predicate collaborator"
"seq_rewriter","boundary","seq_rewriter::rewrite_contains_pattern","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_in_regexp","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::has_fixed_length_constraint","predicate non-void-command"
"seq_rewriter","boundary","seq_rewriter::lift_str_from_to_re_ite","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::lift_str_from_to_re","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_str_to_regexp","collaborator incidental"
"seq_rewriter","boundary","seq_rewriter::mk_re_concat","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::are_complements","predicate collaborator"
"seq_rewriter","boundary","seq_rewriter::is_subset","predicate collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_union0","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_union","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_complement","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_inter0","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_inter","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_diff","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_loop","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_power","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_star","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_range","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_plus","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_re_opt","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::intersect","controller stateless"
"seq_rewriter","boundary","seq_rewriter::elim_condition","void-accessor command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_re_is_empty","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_re_eq","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_le_core","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_eq_core","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::remove_empty_and_concats","void-accessor command collaborator"
"seq_rewriter","boundary","seq_rewriter::remove_leading","controller stateless"
"seq_rewriter","boundary","seq_rewriter::reduce_back","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_front","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_eq","predicate non-void-command"
"seq_rewriter","boundary","seq_rewriter::reduce_eq","predicate non-void-command"
"seq_rewriter","boundary","seq_rewriter::add_seqs","command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_contains","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::concat_non_empty","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::set_empty","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::eq_length","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::min_length","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::min_length","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::min_length","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::max_length","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::is_string","predicate collaborator"
"seq_rewriter","boundary","seq_rewriter::mk_length","property non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_itos","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_eq_empty","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::has_var","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_by_length","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_non_overlap","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_value_clash","predicate non-void-command collaborator"
"seq_rewriter","boundary","seq_rewriter::reduce_subsequence","predicate non-void-command collaborator"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker","constructor"
"mk_subsumption_checker","entity boundary","~mk_subsumption_checker","destructor"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker::is_total_rule","predicate non-void-command collaborator"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker::on_discovered_total_relation","command collaborator"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker::scan_for_total_rules","command collaborator"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker::transform_rule","predicate non-void-command collaborator"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker::transform_rules","predicate non-void-command collaborator"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker::scan_for_relations_total_due_to_facts","command collaborator"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker::collect_ground_unconditional_rule_heads","command collaborator"
"mk_subsumption_checker","entity boundary","mk_subsumption_checker::operator()","property non-void-command collaborator"
"smaller_pattern","entity boundary","smaller_pattern::save","command collaborator"
"smaller_pattern","entity boundary","smaller_pattern::process","predicate non-void-command collaborator"
"smaller_pattern","entity boundary","smaller_pattern::operator()","predicate non-void-command collaborator"
"matrix","commander","operator==","predicate non-void-command collaborator"
"matrix","commander","operator()","wrapper stateless"
"matrix","commander","size","unclassified"
"matrix","commander","reset","command"
"matrix","commander","append","command"
"matrix","commander","size","unclassified"
"matrix","commander","reset","command"
"matrix","commander","operator=","get non-void-command"
"matrix","commander","append","command"
"matrix","commander","display","command collaborator"
"matrix","commander","matrix<T,X>::is_equal","controller stateless"
"matrix","commander","matrix::display_row","controller stateless"
"matrix","commander","matrix::display_ineq","controller stateless"
"matrix","commander","matrix::display","collaborator"
"instr_while_loop","boundary","control_is_empty","predicate controller"
"instr_while_loop","boundary","process_all_costs","command"
"instr_while_loop","boundary","instr_while_loop","constructor"
"instr_while_loop","boundary","~instr_while_loop","destructor"
"instr_while_loop","boundary","perform","predicate non-void-command collaborator"
"instr_while_loop","boundary","make_annotations","command collaborator"
"instr_while_loop","boundary","display_head_impl","property wrapper"
"instr_while_loop","boundary","display_body_impl","unclassified"
"pattern_inference_cfg","entity commander boundary","register_forbidden_family","command collaborator"
"pattern_inference_cfg","entity commander boundary","register_preferred","command collaborator"
"pattern_inference_cfg","entity commander boundary","register_preferred","command collaborator"
"pattern_inference_cfg","entity commander boundary","is_forbidden","predicate collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::pattern_inference_cfg","constructor"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::add_candidate","command"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::filter_looping_patterns","command collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::contains_subpattern","wrapper stateless"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::filter_bigger_patterns","command collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::mk_pattern","property non-void-command collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::candidates2unary_patterns","command collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::candidates2multi_patterns","command collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::reset_pre_patterns","command"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::is_forbidden","predicate collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::has_preferred_patterns","predicate non-void-command collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::mk_patterns","command collaborator"
"pattern_inference_cfg","entity commander boundary","pattern_inference_cfg::reduce_quantifier","predicate non-void-command collaborator"
"solver_na2as","boundary","get_num_assumptions","unclassified"
"solver_na2as","boundary","get_assumption","get collaborator"
"solver_na2as","boundary","check_sat_cc_core","wrapper stateless"
"solver_na2as","boundary","solver_na2as::solver_na2as","constructor"
"solver_na2as","boundary","solver_na2as::~solver_na2as","destructor"
"solver_na2as","boundary","solver_na2as::assert_expr_core2","command collaborator"
"solver_na2as","boundary","solver_na2as::check_sat_core","property non-void-command collaborator"
"solver_na2as","boundary","solver_na2as::check_sat_cc","property non-void-command collaborator"
"solver_na2as","boundary","solver_na2as::get_consequences","property non-void-command collaborator"
"solver_na2as","boundary","solver_na2as::find_mutexes","collaborator incidental"
"solver_na2as","boundary","solver_na2as::push","command"
"solver_na2as","boundary","solver_na2as::pop","command"
"solver_na2as","boundary","solver_na2as::restore_assumptions","command"
"solver_na2as","boundary","solver_na2as::get_scope_level","unclassified"
"pb_decl_plugin","boundary degenerate","mk_sort","wrapper stateless"
"pb_decl_plugin","boundary degenerate","mk_fresh","wrapper stateless"
"pb_decl_plugin","boundary degenerate","is_considered_uninterpreted","collaborator incidental"
"pb_decl_plugin","boundary degenerate","pb_decl_plugin::pb_decl_plugin","constructor"
"pb_decl_plugin","boundary degenerate","pb_decl_plugin::mk_func_decl","property controller"
"pb_decl_plugin","boundary degenerate","pb_decl_plugin::get_op_names","command collaborator"
"inst","entity commander boundary","pending","predicate"
"inst","entity commander boundary","inst::add","command collaborator"
"inst","entity commander boundary","inst::collect_instantiations","command collaborator"
"inst","entity commander boundary","inst::add_instantiations","command collaborator"
"inst","entity commander boundary","inst::instantiate","command collaborator"
"inst","entity commander boundary","inst::instantiate","command collaborator"
"transcendental","small-class","transcendental","constructor"
"transcendental","small-class","display","unclassified"
"dlexer","unclassified","eos","predicate"
"dlexer","unclassified","next","command"
"dlexer","unclassified","save_char","unclassified"
"dlexer","unclassified","save_and_next","command"
"dlexer","unclassified","dlexer","constructor"
"dlexer","unclassified","set_stream","command collaborator"
"dlexer","unclassified","read_num","property non-void-command collaborator"
"dlexer","unclassified","read_id","property non-void-command collaborator"
"dlexer","unclassified","read_bid","property non-void-command collaborator"
"dlexer","unclassified","read_string","property non-void-command collaborator"
"dlexer","unclassified","read_comment","command"
"dlexer","unclassified","lookahead_newline","predicate non-void-command"
"dlexer","unclassified","next_token","property non-void-command collaborator"
"dlexer","unclassified","get_token_data","property"
"dlexer","unclassified","get_token_pos","get"
"dlexer","unclassified","get_line","get"
"karr_relation_plugin","boundary degenerate","can_handle_signature","wrapper stateless"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::get","collaborator incidental"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::get","collaborator incidental"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_empty","property wrapper"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_full","property wrapper"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_join_fn","controller stateless"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_project_fn","controller stateless"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_rename_fn","property controller"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::dualizeI","predicate non-void-command collaborator"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::dualizeH","command collaborator"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_union_fn","wrapper stateless"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_filter_identical_fn","wrapper stateless"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_filter_equal_fn","wrapper stateless"
"karr_relation_plugin","boundary degenerate","karr_relation_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"def_find_p","entity boundary small-class","def_find_p","constructor"
"def_find_p","entity boundary small-class","operator()","predicate non-void-command collaborator"
"tangent_imp","entity boundary","tangent_imp","constructor"
"tangent_imp","entity boundary","operator()","command"
"tangent_imp","entity boundary","c","property non-void-command collaborator"
"tangent_imp","entity boundary","explain","void-accessor collaborator"
"tangent_imp","entity boundary","generate_plane","command collaborator"
"tangent_imp","entity boundary","generate_line1","command collaborator"
"tangent_imp","entity boundary","generate_line2","command collaborator"
"tangent_imp","entity boundary","get_initial_points","command collaborator"
"tangent_imp","entity boundary","push_point","void-accessor command collaborator"
"tangent_imp","entity boundary","tang_plane","property collaborator"
"tangent_imp","entity boundary","get_points","command"
"tangent_imp","entity boundary","print_tangent_domain","property collaborator"
"tangent_imp","entity boundary","plane_is_correct_cut","predicate collaborator"
"solver_core","degenerate","solver_core","constructor"
"solver_core","degenerate","add_clause","wrapper stateless"
"solver_core","degenerate","set_external","empty"
"solver_core","degenerate","set_eliminated","empty"
"solver_core","degenerate","set_phase","empty"
"solver_core","degenerate","user_push","wrapper stateless"
"solver_core","degenerate","user_pop","empty"
"solver_core","degenerate","num_user_scopes","incidental"
"solver_core","degenerate","num_scopes","incidental"
"solver_core","degenerate","get_extension","collaborator incidental"
"solver_core","degenerate","set_extension","wrapper stateless"
"solver_core","degenerate","get_cut_simplifier","collaborator incidental"
"substitution_tree","commander boundary","empty","predicate"
"substitution_tree","commander boundary","get_approx_num_regs","unclassified"
"substitution_tree","commander boundary","substitution_tree::next_reg","non-void-command"
"substitution_tree","commander boundary","substitution_tree::push","command collaborator"
"substitution_tree","commander boundary","substitution_tree::get_reg_value","property non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::set_reg_value","command collaborator"
"substitution_tree","commander boundary","substitution_tree::erase_reg_from_todo","command"
"substitution_tree","commander boundary","substitution_tree::linearize","command collaborator"
"substitution_tree","commander boundary","substitution_tree::process_args","command collaborator"
"substitution_tree","commander boundary","substitution_tree::reset_registers","command collaborator"
"substitution_tree","commander boundary","substitution_tree::get_compatibility_measure","non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::find_best_child","property non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::reset_compiler","command"
"substitution_tree","commander boundary","substitution_tree::mk_node_for","property non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::mark_used_reg","command"
"substitution_tree","commander boundary","substitution_tree::mark_used_regs","command collaborator"
"substitution_tree","commander boundary","substitution_tree::insert","command collaborator"
"substitution_tree","commander boundary","substitution_tree::insert","command collaborator"
"substitution_tree","commander boundary","substitution_tree::is_fully_compatible","predicate non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::find_fully_compatible_child","predicate non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::at_least_3_children","collaborator incidental"
"substitution_tree","commander boundary","substitution_tree::erase","command collaborator"
"substitution_tree","commander boundary","substitution_tree::erase","command collaborator"
"substitution_tree","commander boundary","substitution_tree::delete_node","command collaborator"
"substitution_tree","commander boundary","substitution_tree::reset","command collaborator"
"substitution_tree","commander boundary","substitution_tree::display","controller"
"substitution_tree","commander boundary","substitution_tree::display","collaborator"
"substitution_tree","commander boundary","substitution_tree::display","collaborator"
"substitution_tree","commander boundary","substitution_tree::backtrack","predicate non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::find","property non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::bind_var","predicate non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::unify_match","predicate non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::visit_vars","predicate non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::visit","predicate controller"
"substitution_tree","commander boundary","substitution_tree::visit","predicate non-void-command collaborator"
"substitution_tree","commander boundary","substitution_tree::clear_stack","command"
"substitution_tree","commander boundary","substitution_tree::visit","command collaborator"
"substitution_tree","commander boundary","substitution_tree::unify","wrapper stateless"
"substitution_tree","commander boundary","substitution_tree::inst","wrapper stateless"
"substitution_tree","commander boundary","substitution_tree::gen","wrapper stateless"
"substitution_tree","commander boundary","substitution_tree::display","collaborator"
"substitution_tree","commander boundary","substitution_tree::substitution_tree","constructor"
"substitution_tree","commander boundary","substitution_tree::~substitution_tree","destructor"
"tactic2solver_factory","entity boundary small-class","tactic2solver_factory","constructor"
"tactic2solver_factory","entity boundary small-class","operator()","property non-void-command collaborator"
"elim_small_bv_tactic","commander boundary","name","incidental"
"elim_small_bv_tactic","commander boundary","translate","property wrapper"
"elim_small_bv_tactic","commander boundary","updt_params","command collaborator"
"elim_small_bv_tactic","commander boundary","collect_param_descrs","controller stateless"
"elim_small_bv_tactic","commander boundary","operator()","command collaborator"
"elim_small_bv_tactic","commander boundary","cleanup","command"
"lpvar_lt","boundary degenerate small-class","operator()","collaborator incidental"
"simple_theory_justification","entity boundary","simple_theory_justification","constructor"
"simple_theory_justification","entity boundary","has_del_eh","predicate"
"simple_theory_justification","entity boundary","del_eh","command collaborator"
"simple_theory_justification","entity boundary","get_from_theory","get collaborator"
"set_enode_flag_trail","pure-controller small-class","set_enode_flag_trail","constructor"
"set_enode_flag_trail","pure-controller small-class","undo","controller"
"promise_def","boundary small-class","get_def","get collaborator"
"promise_def","boundary small-class","promise_def::set_definition","command collaborator"
"fpa2bv_model_converter","unclassified","fpa2bv_model_converter","constructor"
"fpa2bv_model_converter","unclassified","~fpa2bv_model_converter","destructor"
"fpa2bv_model_converter","unclassified","operator()","void-accessor command collaborator"
"fpa2bv_model_converter","unclassified","fpa2bv_model_converter","constructor"
"fpa2bv_model_converter","unclassified","fpa2bv_model_converter::display","controller stateless"
"fpa2bv_model_converter","unclassified","fpa2bv_model_converter::translate","controller stateless"
"fpa2bv_model_converter","unclassified","fpa2bv_model_converter::convert","command collaborator"
"bound_relation_plugin::filter_interpreted_fn","commander boundary","get_var","wrapper stateless"
"bound_relation_plugin::filter_interpreted_fn","commander boundary","mk_sub_eq","command collaborator"
"bound_relation_plugin::filter_interpreted_fn","commander boundary","mk_lt","command collaborator"
"bound_relation_plugin::filter_interpreted_fn","commander boundary","mk_le","command collaborator"
"bound_relation_plugin::filter_interpreted_fn","commander boundary","mk_eq","command collaborator"
"bound_relation_plugin::filter_interpreted_fn","commander boundary","operator()","controller"
"bound_relation_plugin::filter_interpreted_fn","commander boundary","supports_attachment","wrapper stateless"
"bound_relation_plugin::filter_interpreted_fn","commander boundary","attach","set collaborator"
"AST","unclassified","Equals","property collaborator"
"AST","unclassified","CompareTo","property collaborator"
"AST","unclassified","GetHashCode","controller stateless"
"x_eq_y","pure-controller small-class","x_eq_y","constructor"
"x_eq_y","pure-controller small-class","get_kind","incidental"
"x_eq_y","pure-controller small-class","process_auf","controller"
"scoped_set_z","empty","scoped_set_z","constructor"
"scoped_set_z","empty","~scoped_set_z","destructor"
"scoped_set_z","empty","scoped_set_z","constructor"
"scoped_set_z","empty","~scoped_set_z","destructor"
"optimize","entity boundary","operator=","get set"
"optimize","entity boundary","~optimize","destructor"
"optimize","entity boundary","operatorZ3_optimize","get"
"optimize","entity boundary","add","command collaborator"
"optimize","entity boundary","add","command collaborator"
"optimize","entity boundary","add","command collaborator"
"optimize","entity boundary","add","command"
"optimize","entity boundary","add_soft","property non-void-command collaborator"
"optimize","entity boundary","add_soft","property non-void-command collaborator"
"optimize","entity boundary","add","property non-void-command collaborator"
"optimize","entity boundary","maximize","property non-void-command collaborator"
"optimize","entity boundary","minimize","property non-void-command collaborator"
"optimize","entity boundary","push","command"
"optimize","entity boundary","pop","command"
"optimize","entity boundary","check","property non-void-command collaborator"
"optimize","entity boundary","check","property non-void-command collaborator"
"optimize","entity boundary","get_model","property collaborator"
"optimize","entity boundary","unsat_core","property collaborator"
"optimize","entity boundary","set","command collaborator"
"optimize","entity boundary","lower","property non-void-command collaborator"
"optimize","entity boundary","upper","property non-void-command collaborator"
"optimize","entity boundary","assertions","property collaborator"
"optimize","entity boundary","objectives","property collaborator"
"optimize","entity boundary","statistics","property collaborator"
"optimize","entity boundary","from_file","command"
"optimize","entity boundary","from_string","command"
"optimize","entity boundary","help","property"
"FiniteDomainExpr","empty","FiniteDomainExpr","constructor"
"lazy_table_join","lazy-class","lazy_table_join","constructor"
"lazy_table_join","lazy-class","kind","collaborator incidental"
"lazy_table_join","lazy-class","cols1","get collaborator"
"lazy_table_join","lazy-class","cols2","get collaborator"
"lazy_table_join","lazy-class","t1","controller stateless"
"lazy_table_join","lazy-class","t2","controller stateless"
"lazy_table_join","lazy-class","lazy_table_join::force","property non-void-command collaborator"
"bit_blaster","commander small-class","get_params","collaborator incidental"
"bit_blaster","commander small-class","set_flat_and_or","command"
"bit_blaster","commander small-class","bit_blaster::bit_blaster","copy-constructor"
"blaster_cfg","entity commander boundary","blaster_cfg","constructor"
"blaster_cfg","entity commander boundary","m","property collaborator"
"blaster_cfg","entity commander boundary","power","wrapper stateless"
"blaster_cfg","entity commander boundary","mk_xor","command collaborator"
"blaster_cfg","entity commander boundary","mk_xor3","command collaborator"
"blaster_cfg","entity commander boundary","mk_iff","command collaborator"
"blaster_cfg","entity commander boundary","mk_and","command collaborator"
"blaster_cfg","entity commander boundary","mk_and","command collaborator"
"blaster_cfg","entity commander boundary","mk_and","command collaborator"
"blaster_cfg","entity commander boundary","mk_or","command collaborator"
"blaster_cfg","entity commander boundary","mk_or","command collaborator"
"blaster_cfg","entity commander boundary","mk_or","command collaborator"
"blaster_cfg","entity commander boundary","mk_not","command collaborator"
"blaster_cfg","entity commander boundary","mk_carry","command collaborator"
"blaster_cfg","entity commander boundary","mk_ite","command collaborator"
"blaster_cfg","entity commander boundary","mk_nand","command collaborator"
"blaster_cfg","entity commander boundary","mk_nor","command collaborator"
"blaster_cfg","entity commander boundary","mk_ge2","command collaborator"
"poly_rewriter","boundary","M","collaborator incidental"
"poly_rewriter","boundary","is_numeral","predicate collaborator"
"poly_rewriter","boundary","is_numeral","predicate collaborator"
"poly_rewriter","boundary","is_int_numeral","predicate collaborator"
"poly_rewriter","boundary","is_minus_one","predicate collaborator"
"poly_rewriter","boundary","normalize","wrapper"
"poly_rewriter","boundary","mk_numeral","property wrapper"
"poly_rewriter","boundary","add_decl_kind","property collaborator"
"poly_rewriter","boundary","mul_decl_kind","property collaborator"
"poly_rewriter","boundary","use_power","predicate"
"poly_rewriter","boundary","power_decl_kind","property collaborator"
"poly_rewriter","boundary","is_power","predicate collaborator"
"poly_rewriter","boundary","set_curr_sort","set collaborator"
"poly_rewriter","boundary","get_monomials","property collaborator"
"poly_rewriter","boundary","is_nontrivial_gcd","controller stateless"
"poly_rewriter","boundary","get_fid","property collaborator"
"poly_rewriter","boundary","set_flat","set"
"poly_rewriter","boundary","set_sort_sums","set"
"poly_rewriter","boundary","is_add","predicate collaborator"
"poly_rewriter","boundary","is_mul","predicate collaborator"
"poly_rewriter","boundary","is_add","predicate collaborator"
"poly_rewriter","boundary","is_mul","predicate collaborator"
"poly_rewriter","boundary","mk_mul_core","property non-void-command collaborator"
"poly_rewriter","boundary","mk_add_core","property non-void-command collaborator"
"poly_rewriter","boundary","mk_add","void-accessor command collaborator"
"poly_rewriter","boundary","mk_add","command collaborator"
"poly_rewriter","boundary","mk_mul","void-accessor command collaborator"
"poly_rewriter","boundary","mk_mul","command collaborator"
"poly_rewriter","boundary","mk_sub","command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::updt_params","command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::get_param_descrs","wrapper stateless"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_add_app","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::get_power_body","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::is_zero","predicate collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_mul_app","property non-void-command factory collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_mul_app","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_flat_mul_core","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_nflat_mul_core","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_flat_add_core","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::get_power_product","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::get_power_product","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::is_mul","predicate collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::gcd_test","predicate collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_nflat_add_core","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_uminus","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::mk_sub","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::cancel_monomials","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::hoist_multiplication","predicate non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::merge_muls","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::hoist_ite","predicate non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::hoist_ite","predicate non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::apply_hoist","property non-void-command collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::is_times_minus_one","predicate collaborator"
"poly_rewriter","boundary","poly_rewriter<Config>::is_var_plus_ground","predicate non-void-command collaborator"
"cast_ast<func_decl>","boundary degenerate small-class","operator()","wrapper stateless"
"lemma_sanity_checker","pure-controller degenerate small-class","lemma_sanity_checker","constructor"
"lemma_sanity_checker","pure-controller degenerate small-class","lemma_sanity_checker::operator()","controller stateless"
"hnf","boundary","mod_R_balanced","property collaborator"
"hnf","boundary","mod_R","property wrapper"
"hnf","boundary","buffer_p_col_i_plus_q_col_j_H","set"
"hnf","boundary","zeros_in_column_W_above","predicate wrapper"
"hnf","boundary","buffer_p_col_i_plus_q_col_j_W_modulo","command collaborator"
"hnf","boundary","buffer_p_col_i_plus_q_col_j_U","set"
"hnf","boundary","pivot_column_i_to_column_j_H","command"
"hnf","boundary","pivot_column_i_to_column_j_W_modulo","command collaborator"
"hnf","boundary","pivot_column_i_to_column_j_U","set"
"hnf","boundary","copy_buffer_to_col_i_H","set"
"hnf","boundary","copy_buffer_to_col_i_U","set"
"hnf","boundary","multiply_U_reverse_from_left_by","command collaborator"
"hnf","boundary","handle_column_ij_in_row_i","command collaborator"
"hnf","boundary","switch_sign_for_column","wrapper"
"hnf","boundary","process_row_column","command"
"hnf","boundary","replace_column_j_by_j_minus_u_col_i_H","set collaborator"
"hnf","boundary","replace_column_j_by_j_minus_u_col_i_U","command collaborator"
"hnf","boundary","work_on_columns_less_than_i_in_the_triangle","command collaborator"
"hnf","boundary","process_row","command"
"hnf","boundary","calculate","command"
"hnf","boundary","prepare_U_and_U_reverse","command"
"hnf","boundary","row_is_correct_form","predicate wrapper"
"hnf","boundary","is_correct_form","predicate"
"hnf","boundary","is_correct","predicate"
"hnf","boundary","is_correct_modulo","predicate"
"hnf","boundary","is_correct_final","predicate"
"hnf","boundary","H","get collaborator"
"hnf","boundary","U","get collaborator"
"hnf","boundary","U_reverse","get collaborator"
"hnf","boundary","copy_buffer_to_col_i_W_modulo","set"
"hnf","boundary","replace_column_j_by_j_minus_u_col_i_W","set collaborator"
"hnf","boundary","is_unit_matrix","controller stateless"
"hnf","boundary","process_column_in_row_modulo","command collaborator"
"hnf","boundary","fix_row_under_diagonal_W_modulo","command collaborator"
"hnf","boundary","process_row_modulo","command"
"hnf","boundary","calculate_by_modulo","command"
"hnf","boundary","hnf","constructor"
"hnf","boundary","W","get collaborator"
"hnf","boundary","hnf::hnf","constructor"
"hnf","boundary","hnf::~hnf","destructor"
"hnf","boundary","hnf::operator()","collaborator incidental"
"hnf","boundary","hnf::set_name","command collaborator"
"hnf","boundary","hnf::reset","command"
"hnf","boundary","hnf::get_fresh_predicates","property non-void-command collaborator"
"config_hwf","data-provider boundary small-class","config_hwf","constructor"
"config_hwf","data-provider boundary small-class","m","property collaborator"
"apply_tactic_cmd","commander boundary","apply_tactic_cmd","constructor"
"apply_tactic_cmd","commander boundary","get_main_descr","incidental"
"apply_tactic_cmd","commander boundary","init_pdescrs","command collaborator"
"apply_tactic_cmd","commander boundary","execute","command collaborator"
"explanation_relation_plugin::join_fn","pure-controller degenerate small-class","operator()","controller stateless"
"table_base::row_interface::fact_row_iterator","unclassified","is_finished","predicate"
"table_base::row_interface::fact_row_iterator","unclassified","operator*","get non-void-command collaborator"
"table_base::row_interface::fact_row_iterator","unclassified","operator++","set"
"bool_rewriter","entity boundary","bool_rewriter","constructor"
"bool_rewriter","entity boundary","m","get collaborator"
"bool_rewriter","entity boundary","get_fid","property collaborator"
"bool_rewriter","entity boundary","is_eq","predicate collaborator"
"bool_rewriter","entity boundary","flat_and_or","get"
"bool_rewriter","entity boundary","set_flat_and_or","set"
"bool_rewriter","entity boundary","elim_and","get"
"bool_rewriter","entity boundary","set_elim_and","set"
"bool_rewriter","entity boundary","reset_local_ctx_cost","set"
"bool_rewriter","entity boundary","set_order_eq","set"
"bool_rewriter","entity boundary","mk_app","void-accessor command collaborator"
"bool_rewriter","entity boundary","mk_iff_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_and_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_or_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_eq","void-accessor command collaborator"
"bool_rewriter","entity boundary","mk_eq_rw","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_xor","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_iff","command collaborator"
"bool_rewriter","entity boundary","mk_and","void-accessor command collaborator"
"bool_rewriter","entity boundary","mk_or","void-accessor command collaborator"
"bool_rewriter","entity boundary","mk_or","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_and","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_or","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_and","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_and","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_or","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_and","command collaborator"
"bool_rewriter","entity boundary","mk_or","command collaborator"
"bool_rewriter","entity boundary","mk_and","command collaborator"
"bool_rewriter","entity boundary","mk_or","command collaborator"
"bool_rewriter","entity boundary","mk_ite","void-accessor command collaborator"
"bool_rewriter","entity boundary","mk_ite","property non-void-command collaborator"
"bool_rewriter","entity boundary","mk_distinct","void-accessor command collaborator"
"bool_rewriter","entity boundary","mk_not","void-accessor command collaborator"
"bool_rewriter","entity boundary","mk_not","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::updt_params","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::get_param_descrs","wrapper stateless"
"bool_rewriter","entity boundary","bool_rewriter::mk_app_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_and_as_or","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_nflat_and_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_flat_and_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_nflat_or_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_flat_or_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_or_app","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::simp_nested_not_or","predicate non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::simp_arg","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_nested_ite","void-accessor command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::simp_nested_eq_ite","predicate non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::push_new_arg","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::local_ctx_simp","predicate non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::try_ite_value","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_eq","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::try_ite_eq","predicate non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_eq_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_distinct_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_ite_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_not_core","property non-void-command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_xor","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_implies","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_nand","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_nor","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_nand","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_nor","command collaborator"
"bool_rewriter","entity boundary","bool_rewriter::mk_ge2","command collaborator"
"simplify_rewriter_cfg","boundary","simplify_rewriter_cfg::simplify_rewriter_cfg","constructor"
"simplify_rewriter_cfg","boundary","simplify_rewriter_cfg::~simplify_rewriter_cfg","destructor"
"simplify_rewriter_cfg","boundary","simplify_rewriter_cfg::reduce_quantifier","predicate non-void-command collaborator"
"simplify_rewriter_cfg","boundary","simplify_rewriter_cfg::updt_params","command collaborator"
"simplify_rewriter_cfg","boundary","simplify_rewriter_cfg::collect_statistics","collaborator"
"simplify_rewriter_cfg","boundary","simplify_rewriter_cfg::pre_visit","controller stateless"
"mk_num_pat_rewriter","boundary","mk_num_pat_rewriter","constructor"
"mk_num_pat_rewriter","boundary","pre_visit","predicate non-void-command collaborator"
"mk_num_pat_rewriter","boundary","reduce_app","property non-void-command collaborator"
"mk_num_pat_rewriter","boundary","cache_all_results","incidental"
"mk_num_pat_rewriter","boundary","cache_results","incidental"
"mk_num_pat_rewriter","boundary","get_subst","predicate non-void-command collaborator"
"bool_rewriter_star","empty","bool_rewriter_star","constructor"
"seq_decl_plugin","boundary","mk_fresh","wrapper stateless"
"seq_decl_plugin","boundary","is_char","predicate collaborator"
"seq_decl_plugin","boundary","max_char","unclassified"
"seq_decl_plugin","boundary","num_bits","unclassified"
"seq_decl_plugin","boundary","has_re","get"
"seq_decl_plugin","boundary","has_seq","get"
"seq_decl_plugin","boundary","char_sort","get collaborator"
"seq_decl_plugin","boundary","string_sort","get collaborator"
"seq_decl_plugin","boundary","get_char_plugin","get collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::seq_decl_plugin","constructor"
"seq_decl_plugin","boundary","seq_decl_plugin::finalize","command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::is_sort_param","controller stateless"
"seq_decl_plugin","boundary","seq_decl_plugin::match","predicate non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::match_assoc","void-accessor command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::match","void-accessor command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::apply_binding","get property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::init","command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_reglan","get set collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::set_manager","command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_sort","get property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_seq_fun","property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_str_fun","property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_assoc_fun","property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_left_assoc_fun","property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_ubv2s","property controller"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_sbv2s","property controller"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_assoc_fun","property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_func_decl","property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::add_map_sig","command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::get_op_names","command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::get_sort_names","command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_string","property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::mk_char","property non-void-command collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::is_considered_uninterpreted","predicate controller"
"seq_decl_plugin","boundary","seq_decl_plugin::is_unique_value","collaborator incidental"
"seq_decl_plugin","boundary","seq_decl_plugin::is_value","predicate collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::is_model_value","predicate collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::are_equal","collaborator incidental"
"seq_decl_plugin","boundary","seq_decl_plugin::are_distinct","predicate collaborator"
"seq_decl_plugin","boundary","seq_decl_plugin::get_some_value","property controller"
"pmanager","data-provider boundary data-class small-class","pmanager","constructor"
"pmanager","data-provider boundary data-class small-class","pm","get collaborator"
"quantifier","data-provider boundary","get_kind","get collaborator"
"quantifier","data-provider boundary","get_num_decls","get"
"quantifier","data-provider boundary","get_decl_sorts","property collaborator"
"quantifier","data-provider boundary","get_decl_names","property collaborator"
"quantifier","data-provider boundary","get_decl_sort","property collaborator"
"quantifier","data-provider boundary","get_decl_name","property collaborator"
"quantifier","data-provider boundary","get_expr","get collaborator"
"quantifier","data-provider boundary","_get_sort","get collaborator"
"quantifier","data-provider boundary","get_depth","get"
"quantifier","data-provider boundary","get_weight","get"
"quantifier","data-provider boundary","get_qid","get collaborator"
"quantifier","data-provider boundary","get_skid","get collaborator"
"quantifier","data-provider boundary","get_num_patterns","get"
"quantifier","data-provider boundary","get_patterns","property collaborator"
"quantifier","data-provider boundary","get_pattern","property collaborator"
"quantifier","data-provider boundary","get_num_no_patterns","get"
"quantifier","data-provider boundary","get_no_patterns","property collaborator"
"quantifier","data-provider boundary","get_no_pattern","property collaborator"
"quantifier","data-provider boundary","has_patterns","predicate"
"quantifier","data-provider boundary","get_size","wrapper"
"quantifier","data-provider boundary","may_have_unused_vars","get"
"quantifier","data-provider boundary","set_no_unused_vars","set"
"quantifier","data-provider boundary","has_labels","get"
"quantifier","data-provider boundary","get_num_children","unclassified"
"quantifier","data-provider boundary","get_child","property collaborator"
"quantifier","data-provider boundary","quantifier::quantifier","copy-constructor"
"quantifier","data-provider boundary","quantifier::quantifier","constructor"
"expr_replacer::scoped_set_subst","empty","~scoped_set_subst","destructor"
"ex2","data-provider small-class","ex2","constructor"
"ex2","data-provider small-class","msg","property"
"evaluator_cfg","boundary","evaluator_cfg","constructor"
"evaluator_cfg","boundary","updt_params","command collaborator"
"evaluator_cfg","boundary","evaluate","predicate non-void-command collaborator"
"evaluator_cfg","boundary","eval_fi","predicate non-void-command collaborator"
"evaluator_cfg","boundary","reduce_quantifier","predicate controller"
"evaluator_cfg","boundary","reduce_app","property non-void-command collaborator"
"evaluator_cfg","boundary","contains_redex","predicate non-void-command collaborator"
"evaluator_cfg","boundary","reduce_app_core","property non-void-command collaborator"
"evaluator_cfg","boundary","expand_as_array","predicate non-void-command collaborator"
"evaluator_cfg","boundary","expand_stores","void-accessor command collaborator"
"evaluator_cfg","boundary","reduce_macro","incidental"
"evaluator_cfg","boundary","get_macro","predicate non-void-command collaborator"
"evaluator_cfg","boundary","evaluate_partial_theory_func","property non-void-command collaborator"
"evaluator_cfg","boundary","max_steps_exceeded","predicate wrapper"
"evaluator_cfg","boundary","mk_array_eq","property non-void-command collaborator"
"evaluator_cfg","boundary","mk_array_eq_core","property non-void-command collaborator"
"evaluator_cfg","boundary","compare","property non-void-command collaborator"
"evaluator_cfg","boundary","args_are_values","predicate non-void-command"
"evaluator_cfg","boundary","extract_array_func_interp","predicate non-void-command collaborator"
"ackermannize_bv_tactic","boundary","ackermannize_bv_tactic","constructor"
"ackermannize_bv_tactic","boundary","name","incidental"
"ackermannize_bv_tactic","boundary","operator()","controller"
"ackermannize_bv_tactic","boundary","updt_params","set collaborator"
"ackermannize_bv_tactic","boundary","collect_param_descrs","command collaborator"
"ackermannize_bv_tactic","boundary","collect_statistics","controller"
"ackermannize_bv_tactic","boundary","reset_statistics","command"
"ackermannize_bv_tactic","boundary","cleanup","empty"
"ackermannize_bv_tactic","boundary","translate","property wrapper"
"rule_transformer","commander boundary","rule_transformer::rule_transformer","constructor"
"rule_transformer","commander boundary","rule_transformer::~rule_transformer","destructor"
"rule_transformer","commander boundary","rule_transformer::reset","set"
"rule_transformer","commander boundary","rule_transformer::cancel","controller"
"rule_transformer","commander boundary","rule_transformer::ensure_ordered","command"
"rule_transformer","commander boundary","rule_transformer::register_plugin","set collaborator"
"rule_transformer","commander boundary","rule_transformer::operator()","predicate non-void-command collaborator"
"th_decompile","boundary degenerate small-class","to_formulas","collaborator incidental"
"quasi_macros","boundary","quasi_macros::quasi_macros","constructor"
"quasi_macros","boundary","quasi_macros::~quasi_macros","destructor"
"quasi_macros","boundary","quasi_macros::find_occurrences","command collaborator"
"quasi_macros","boundary","quasi_macros::is_non_ground_uninterp","wrapper stateless"
"quasi_macros","boundary","quasi_macros::is_unique","predicate collaborator"
"quasi_macros","boundary","quasi_macros::fully_depends_on","controller stateless"
"quasi_macros","boundary","quasi_macros::depends_on","controller stateless"
"quasi_macros","boundary","quasi_macros::is_quasi_def","predicate collaborator"
"quasi_macros","boundary","quasi_macros::is_quasi_macro","predicate collaborator"
"quasi_macros","boundary","quasi_macros::quasi_macro_to_macro","predicate non-void-command collaborator"
"quasi_macros","boundary","quasi_macros::find_macros","predicate non-void-command collaborator"
"quasi_macros","boundary","quasi_macros::find_macros","predicate non-void-command collaborator"
"quasi_macros","boundary","quasi_macros::apply_macros","void-accessor command collaborator"
"quasi_macros","boundary","quasi_macros::operator()","predicate non-void-command collaborator"
"quasi_macros","boundary","quasi_macros::apply_macros","command collaborator"
"quasi_macros","boundary","quasi_macros::operator()","predicate non-void-command collaborator"
"th_rewriter2expr_replacer","boundary","th_rewriter2expr_replacer","constructor"
"th_rewriter2expr_replacer","boundary","m","property collaborator"
"th_rewriter2expr_replacer","boundary","set_substitution","command collaborator"
"th_rewriter2expr_replacer","boundary","operator()","void-accessor command collaborator"
"th_rewriter2expr_replacer","boundary","get_num_steps","unclassified"
"th_rewriter2expr_replacer","boundary","reset","command"
"is_qflia_probe","boundary degenerate small-class","operator()","wrapper stateless"
"aig_ref","data-provider","operator==","predicate"
"aig_ref","data-provider","operator!=","predicate"
"aig_ref","data-provider","aig_ref::aig_ref","constructor"
"aig_ref","data-provider","aig_ref::aig_ref","constructor"
"aig_ref","data-provider","aig_ref::~aig_ref","destructor"
"aig_ref","data-provider","aig_ref::operator=","get non-void-command"
"expr_replacer","degenerate","operator()","wrapper stateless"
"expr_replacer","degenerate","operator()","controller stateless"
"expr_replacer","degenerate","replace_with_dep","wrapper stateless"
"expr_replacer","degenerate","get_num_steps","incidental"
"expr_replacer","degenerate","expr_replacer::operator()","wrapper stateless"
"expr_replacer","degenerate","expr_replacer::operator()","wrapper stateless"
"expr_replacer","degenerate","expr_replacer::operator()","wrapper stateless"
"expr_replacer","degenerate","expr_replacer::apply_substitution","controller"
"expr_replacer","degenerate","expr_replacer::apply_substitution","controller"
"var_subst","degenerate","var_subst","constructor"
"var_subst","degenerate","std_order","get"
"var_subst","degenerate","operator()","wrapper stateless"
"var_subst","degenerate","operator()","controller stateless"
"var_subst","degenerate","operator()","controller stateless"
"var_subst","degenerate","operator()","controller stateless"
"var_subst","degenerate","operator()","controller stateless"
"var_subst","degenerate","reset","command"
"var_subst","degenerate","var_subst::operator()","property non-void-command collaborator"
"reduce_args_ctx","empty","reduce_args_ctx","constructor"
"reduce_args_ctx","empty","~reduce_args_ctx","destructor"
"matcher","entity boundary","is_eq","property non-void-command collaborator"
"matcher","entity boundary","match_var","predicate non-void-command collaborator"
"matcher","entity boundary","match_app","predicate non-void-command collaborator"
"matcher","entity boundary","matcher","constructor"
"matcher","entity boundary","operator()","predicate non-void-command collaborator"
"matcher","entity boundary","matcher::operator()","predicate non-void-command collaborator"
"matcher","entity boundary","matcher::reset","command"
"factor_rewriter","entity boundary","m","get collaborator"
"factor_rewriter","entity boundary","a","get collaborator"
"factor_rewriter","entity boundary","mk_ge","property non-void-command collaborator"
"factor_rewriter","entity boundary","mk_gt","property non-void-command collaborator"
"factor_rewriter","entity boundary","even","incidental"
"factor_rewriter","entity boundary","factor_rewriter::factor_rewriter","constructor"
"factor_rewriter","entity boundary","factor_rewriter::mk_app_core","property non-void-command collaborator"
"factor_rewriter","entity boundary","factor_rewriter::mk_eq","property non-void-command collaborator"
"factor_rewriter","entity boundary","factor_rewriter::mk_le","property non-void-command collaborator"
"factor_rewriter","entity boundary","factor_rewriter::mk_lt","property non-void-command collaborator"
"factor_rewriter","entity boundary","factor_rewriter::mk_is_negative","void-accessor command collaborator"
"factor_rewriter","entity boundary","factor_rewriter::mk_adds","command collaborator"
"factor_rewriter","entity boundary","factor_rewriter::mk_muls","command"
"factor_rewriter","entity boundary","factor_rewriter::mk_expand_muls","void-accessor command collaborator"
"factor_rewriter","entity boundary","factor_rewriter::extract_factors","predicate non-void-command"
"factor_rewriter","entity boundary","factor_rewriter::collect_powers","command collaborator"
"depth_probe","pure-controller degenerate small-class","operator()","controller stateless"
"recfun_replace","entity boundary","recfun_replace","constructor"
"recfun_replace","entity boundary","reset","command"
"recfun_replace","entity boundary","insert","command collaborator"
"recfun_replace","entity boundary","operator()","property wrapper"
"get_implied_equalities_impl","commander boundary","partition_terms","controller"
"get_implied_equalities_impl","commander boundary","get_implied_equalities_filter_basic","command collaborator"
"get_implied_equalities_impl","commander boundary","get_implied_equalities_basic","command collaborator"
"get_implied_equalities_impl","commander boundary","get_implied_equalities_model_based","command collaborator"
"get_implied_equalities_impl","commander boundary","get_implied_equalities_core","command collaborator"
"get_implied_equalities_impl","commander boundary","assert_relevant","command collaborator"
"get_implied_equalities_impl","commander boundary","assert_relevant","command collaborator"
"get_implied_equalities_impl","commander boundary","reduce_value","void-accessor command collaborator"
"get_implied_equalities_impl","commander boundary","reduce_cond","property non-void-command collaborator"
"get_implied_equalities_impl","commander boundary","operator()","property non-void-command collaborator"
"fdd","data-provider boundary","fdd","constructor"
"fdd","data-provider boundary","fdd","constructor"
"fdd","data-provider boundary","num_bits","controller stateless"
"fdd","data-provider boundary","bdd_vars","get collaborator"
"fdd","data-provider boundary","var","get collaborator"
"fdd","data-provider boundary","fdd::fdd","constructor"
"fdd","data-provider boundary","fdd::non_zero","property collaborator"
"fdd","data-provider boundary","fdd::var2pos","controller"
"fdd","data-provider boundary","fdd::contains","predicate collaborator"
"fdd","data-provider boundary","fdd::find","property collaborator"
"fdd","data-provider boundary","fdd::find_hint","property collaborator"
"fdd","data-provider boundary","fdd::contains","predicate collaborator"
"fdd","data-provider boundary","fdd::sup","predicate collaborator"
"fdd","data-provider boundary","fdd::inf","predicate collaborator"
"fdd","data-provider boundary","fdd::rational2bits","property collaborator"
"fdd","data-provider boundary","fdd::bits2rational","property collaborator"
"fdd","data-provider boundary","fdd::sup","predicate collaborator"
"fdd","data-provider boundary","fdd::inf","predicate collaborator"
"fdd","data-provider boundary","fdd::max","property collaborator"
"fdd","data-provider boundary","fdd::min","property collaborator"
"demodulator_match_subst","boundary","reserve","command"
"demodulator_match_subst","boundary","demodulator_match_subst::demodulator_match_subst","constructor"
"demodulator_match_subst","boundary","demodulator_match_subst::can_rewrite","controller stateless"
"demodulator_match_subst","boundary","demodulator_match_subst::match_args","predicate non-void-command collaborator"
"demodulator_match_subst","boundary","demodulator_match_subst::operator()","predicate non-void-command collaborator"
"demodulator_match_subst","boundary","demodulator_match_subst::operator()","predicate non-void-command collaborator"
"etable","unclassified","get_table","get command collaborator"
"etable","unclassified","etable::etable","constructor"
"etable","unclassified","etable::~etable","destructor"
"etable","unclassified","etable::mk_table_for","property controller"
"etable","unclassified","etable::set_table_id","non-void-command collaborator"
"etable","unclassified","etable::reset","command collaborator"
"etable","unclassified","etable::display","collaborator"
"etable","unclassified","etable::display_binary","controller stateless"
"etable","unclassified","etable::display_binary_comm","controller stateless"
"etable","unclassified","etable::display_unary","controller stateless"
"etable","unclassified","etable::display_nary","controller stateless"
"etable","unclassified","etable::insert","property set collaborator"
"etable","unclassified","etable::erase","command collaborator"
"etable","unclassified","etable::contains","predicate collaborator"
"etable","unclassified","etable::find","property collaborator"
"etable","unclassified","etable::contains_ptr","predicate collaborator"
"pp_tptp","commander boundary","pp_tptp","constructor"
"pp_tptp","commander boundary","display_func_decl","command collaborator"
"pp_tptp","commander boundary","display_axiom","set collaborator"
"pp_tptp","commander boundary","display","command"
"pp_tptp","commander boundary","display_app","command collaborator"
"pp_tptp","commander boundary","display_sort","controller stateless"
"pp_tptp","commander boundary","display_infix","command"
"pp_tptp","commander boundary","display_prefix","command collaborator"
"pp_tptp","commander boundary","display_binary","command collaborator"
"pp_tptp","commander boundary","collect_axiom_ids","command collaborator"
"pp_tptp","commander boundary","display_proof","command collaborator"
"pp_tptp","commander boundary","collect_hypotheses","command collaborator"
"pp_tptp","commander boundary","display_proof_rec","non-void-command collaborator"
"pp_tptp","commander boundary","display_proof_hyp","non-void-command collaborator"
"pp_tptp","commander boundary","display_inference","command collaborator"
"pp_tptp","commander boundary","print_hypotheses","command"
"pp_tptp","commander boundary","display_hyp_inference","get set"
"pp_tptp","commander boundary","get_free_vars","void-accessor command collaborator"
"pp_tptp","commander boundary","get_proof_formula","property non-void-command collaborator"
"pp_tptp","commander boundary","display_hypotheses","command collaborator"
"pp_tptp","commander boundary","display_sort_decls","command collaborator"
"pp_tptp","commander boundary","display_sort_decl","collaborator incidental"
"pp_tptp","commander boundary","display_func_decls","command collaborator"
"pp_tptp","commander boundary","contains_id","predicate"
"pp_tptp","commander boundary","collect_decls","command collaborator"
"pp_tptp","commander boundary","collect_sort","command collaborator"
"pp_tptp","commander boundary","collect_fun","command collaborator"
"pp_tptp","commander boundary","upper_case_var","property non-void-command collaborator"
"pp_tptp","commander boundary","lower_case_fun","property non-void-command collaborator"
"pp_tptp","commander boundary","sanitize","controller stateless"
"check_table_plugin::rename_fn","pure-controller degenerate small-class","operator()","controller stateless"
"model_converter","boundary","model_converter","constructor"
"model_converter","boundary","set_completion","set"
"model_converter","boundary","operator()","empty"
"model_converter","boundary","operator()","wrapper stateless"
"model_converter","boundary","get_units","wrapper stateless"
"model_converter","boundary","set_solver","set collaborator"
"model_converter","boundary","stackv","get collaborator"
"model_converter","boundary","empty","predicate"
"model_converter","boundary","size","unclassified"
"model_converter","boundary","model_converter::display_add","controller stateless"
"model_converter","boundary","model_converter::display_add","collaborator"
"model_converter","boundary","model_converter::display_del","controller"
"model_converter","boundary","model_converter::set_env","set collaborator"
"model_converter","boundary","model_converter::display_add","command collaborator"
"model_converter","boundary","model_converter::display_add","command collaborator"
"model_converter","boundary","model_converter::model_converter","constructor"
"model_converter","boundary","model_converter::~model_converter","destructor"
"model_converter","boundary","model_converter::operator=","get non-void-command"
"model_converter","boundary","model_converter::legal_to_flip","predicate collaborator"
"model_converter","boundary","model_converter::process_stack","void-accessor collaborator"
"model_converter","boundary","model_converter::operator()","void-accessor collaborator"
"model_converter","boundary","model_converter::check_model","predicate controller"
"model_converter","boundary","model_converter::mk","property non-void-command collaborator"
"model_converter","boundary","model_converter::add_ate","command collaborator"
"model_converter","boundary","model_converter::add_ate","command collaborator"
"model_converter","boundary","model_converter::add_ate","command collaborator"
"model_converter","boundary","model_converter::add_elim_stack","command collaborator"
"model_converter","boundary","model_converter::set_clause","controller stateless"
"model_converter","boundary","model_converter::set_clause","controller stateless"
"model_converter","boundary","model_converter::insert","command collaborator"
"model_converter","boundary","model_converter::insert","command collaborator"
"model_converter","boundary","model_converter::insert","command collaborator"
"model_converter","boundary","model_converter::insert","command collaborator"
"model_converter","boundary","model_converter::check_invariant","predicate collaborator"
"model_converter","boundary","model_converter::display","collaborator"
"model_converter","boundary","model_converter::display","controller stateless"
"model_converter","boundary","model_converter::copy","command"
"model_converter","boundary","model_converter::flush","void-accessor set"
"model_converter","boundary","model_converter::collect_vars","controller"
"model_converter","boundary","model_converter::max_var","controller"
"model_converter","boundary","model_converter::swap","wrapper stateless"
"model_converter","boundary","model_converter::expand","command collaborator"
"model_converter","boundary","model_converter::init_search","collaborator incidental"
"model_converter","boundary","model_converter::add_clause","command collaborator"
"macro_replacer::macro_replacer_cfg","entity boundary degenerate","rewrite_patterns","incidental"
"macro_replacer::macro_replacer_cfg","entity boundary degenerate","flat_assoc","collaborator incidental"
"macro_replacer::macro_replacer_cfg","entity boundary degenerate","reduce_app","collaborator incidental"
"macro_replacer::macro_replacer_cfg","entity boundary degenerate","reduce_quantifier","predicate non-void-command collaborator"
"macro_replacer::macro_replacer_cfg","entity boundary degenerate","get_subst","predicate non-void-command collaborator"
"maximize_ac_sharing","commander boundary","init","set"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::register_kind","command collaborator"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::reduce_app","property non-void-command collaborator"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::contains","predicate non-void-command collaborator"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::insert","command collaborator"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::maximize_ac_sharing","constructor"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::~maximize_ac_sharing","destructor"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::push_scope","command"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::pop_scope","command"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::restore_entries","command collaborator"
"maximize_ac_sharing","commander boundary","maximize_ac_sharing::reset","command"
"maximize_bv_sharing","small-class","maximize_bv_sharing::init_core","command"
"maximize_bv_sharing","small-class","maximize_bv_sharing::is_numeral","predicate collaborator"
"maximize_bv_sharing","small-class","maximize_bv_sharing::maximize_bv_sharing","constructor"
"pb2bv_rewriter::imp","boundary","keep_cardinality","predicate controller"
"pb2bv_rewriter::imp","boundary","pb_solver","property controller"
"pb2bv_rewriter::imp","boundary","min_arity","controller"
"pb2bv_rewriter::imp","boundary","cardinality_encoding","property collaborator"
"pb2bv_rewriter::imp","boundary","updt_params","command collaborator"
"pb2bv_rewriter::imp","boundary","collect_param_descrs","controller stateless"
"pb2bv_rewriter::imp","boundary","get_num_steps","unclassified"
"pb2bv_rewriter::imp","boundary","cleanup","command"
"pb2bv_rewriter::imp","boundary","operator()","command collaborator"
"pb2bv_rewriter::imp","boundary","push","command"
"pb2bv_rewriter::imp","boundary","pop","command"
"pb2bv_rewriter::imp","boundary","flush_side_constraints","command collaborator"
"pb2bv_rewriter::imp","boundary","collect_statistics","collaborator"
"bool_plugin","boundary","bool_plugin","constructor"
"bool_plugin","boundary","assign","controller stateless"
"bool_plugin","boundary","get_num_branches","wrapper stateless"
"bool_plugin","boundary","subst","void-accessor command collaborator"
"bool_plugin","boundary","project","predicate non-void-command collaborator"
"bool_plugin","boundary","get_weight","non-void-command collaborator"
"bool_plugin","boundary","solve","predicate non-void-command collaborator"
"bool_plugin","boundary","is_uninterpreted","collaborator incidental"
"bool_plugin","boundary","solve_units","predicate non-void-command collaborator"
"bool_plugin","boundary","solve_polarized","predicate non-void-command collaborator"
"bool_plugin","boundary","solve_polarized","predicate non-void-command collaborator"
"ng_push_app_ite_rw","commander small-class","ng_push_app_ite_rw","constructor"
"ng_push_app_ite_rw","commander small-class","set_conservative","command"
"maxlex","entity commander boundary","update_assignment","predicate non-void-command collaborator"
"maxlex","entity commander boundary","assert_value","command collaborator"
"maxlex","entity commander boundary","update_assignment","command collaborator"
"maxlex","entity commander boundary","update_bounds","command"
"maxlex","entity commander boundary","init","command collaborator"
"maxlex","entity commander boundary","maxlexN","property non-void-command collaborator"
"maxlex","entity commander boundary","operator()","property non-void-command collaborator"
"maxlex","entity commander boundary","commit_assignment","command"
"recfun_rewriter","entity boundary small-class","recfun_rewriter","constructor"
"recfun_rewriter","entity boundary small-class","get_fid","property collaborator"
"recfun_rewriter","entity boundary small-class","recfun_rewriter::mk_app_core","property non-void-command collaborator"
"reduce_args_simplifier","commander boundary small-class","find_non_candidates","command collaborator"
"reduce_args_simplifier","commander boundary small-class","populate_decl2args","command collaborator"
"bv_util","entity boundary","get_manager","get collaborator"
"bv_util","entity boundary","mk_numeral","wrapper stateless"
"bv_util","entity boundary","mk_zero","property collaborator"
"bv_util","entity boundary","mk_zero","property collaborator"
"bv_util","entity boundary","mk_one","property collaborator"
"bv_util","entity boundary","mk_one","property collaborator"
"bv_util","entity boundary","get_bv_size","collaborator"
"bv_util","entity boundary","get_bv_size","collaborator"
"bv_util","entity boundary","mk_ule","property non-void-command collaborator"
"bv_util","entity boundary","mk_sle","property non-void-command collaborator"
"bv_util","entity boundary","mk_slt","property non-void-command collaborator"
"bv_util","entity boundary","mk_extract","property non-void-command collaborator"
"bv_util","entity boundary","mk_concat","property non-void-command collaborator"
"bv_util","entity boundary","mk_concat","property non-void-command collaborator"
"bv_util","entity boundary","mk_concat","property non-void-command collaborator"
"bv_util","entity boundary","mk_concat","property non-void-command collaborator"
"bv_util","entity boundary","mk_concat","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_or","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_and","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_xor","property non-void-command collaborator"
"bv_util","entity boundary","mk_concat","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_and","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_or","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_xor","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_not","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_neg","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_urem","property collaborator"
"bv_util","entity boundary","mk_bv_srem","property collaborator"
"bv_util","entity boundary","mk_bv_smod","property collaborator"
"bv_util","entity boundary","mk_bv_add","property collaborator"
"bv_util","entity boundary","mk_bv_add","property collaborator"
"bv_util","entity boundary","mk_bv_add","property collaborator"
"bv_util","entity boundary","mk_bv_add","property collaborator"
"bv_util","entity boundary","mk_bv_add","property collaborator"
"bv_util","entity boundary","mk_bv_sub","property collaborator"
"bv_util","entity boundary","mk_bv_mul","property collaborator"
"bv_util","entity boundary","mk_bv_mul","property collaborator"
"bv_util","entity boundary","mk_bv_mul","property collaborator"
"bv_util","entity boundary","mk_bv_mul","property collaborator"
"bv_util","entity boundary","mk_bv_mul","property collaborator"
"bv_util","entity boundary","mk_bv_mul","property collaborator"
"bv_util","entity boundary","mk_bv_udiv","property collaborator"
"bv_util","entity boundary","mk_bv_udiv_i","property collaborator"
"bv_util","entity boundary","mk_bv_udiv0","property collaborator"
"bv_util","entity boundary","mk_bv_sdiv","property collaborator"
"bv_util","entity boundary","mk_bv_sdiv_i","property collaborator"
"bv_util","entity boundary","mk_bv_sdiv0","property collaborator"
"bv_util","entity boundary","mk_bv_srem_i","property collaborator"
"bv_util","entity boundary","mk_bv_srem0","property collaborator"
"bv_util","entity boundary","mk_bv_urem_i","property collaborator"
"bv_util","entity boundary","mk_bv_urem0","property collaborator"
"bv_util","entity boundary","mk_bv_smod_i","property collaborator"
"bv_util","entity boundary","mk_bv_smod0","property collaborator"
"bv_util","entity boundary","mk_zero_extend","property non-void-command collaborator"
"bv_util","entity boundary","mk_sign_extend","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_shl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_ashr","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_lshr","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_rotate_left","property non-void-command collaborator"
"bv_util","entity boundary","mk_bv_rotate_right","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvsmul_no_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvsmul_no_udfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvumul_no_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvsmul_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvumul_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvsdiv_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvneg_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvuadd_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvsadd_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvusub_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bvssub_ovfl","property non-void-command collaborator"
"bv_util","entity boundary","mk_bit2bool","property non-void-command collaborator"
"bv_util","entity boundary","log_bv_from_exprs","command collaborator"
"bv_util","entity boundary","mk_bv","property non-void-command collaborator"
"bv_util","entity boundary","bv_util::bv_util","constructor"
"bv_util","entity boundary","bv_util::mk_numeral","property collaborator"
"bv_util","entity boundary","bv_util::mk_numeral","property collaborator"
"bv_util","entity boundary","bv_util::mk_sort","property non-void-command collaborator"
"bv_util","entity boundary","bv_util::get_int2bv_size","non-void-command collaborator"
"bv_util","entity boundary","bv_util::mk_bv2int","property non-void-command collaborator"
"bv_util","entity boundary","bv_util::mk_int2bv","property non-void-command collaborator"
"bv_util","entity boundary","bv_util::mk_bv_rotate_left","property non-void-command collaborator"
"bv_util","entity boundary","bv_util::mk_bv_rotate_right","property non-void-command collaborator"
"bound_simplifier","commander boundary","to_expr","controller stateless"
"bound_simplifier","commander boundary","is_var","controller stateless"
"bound_simplifier","commander boundary","to_var","non-void-command collaborator"
"bound_simplifier","commander boundary","name","incidental"
"bound_simplifier","commander boundary","supports_proofs","incidental"
"bound_simplifier","commander boundary","updt_params","command collaborator"
"bound_simplifier","commander boundary","collect_param_descrs","wrapper stateless"
"bound_simplifier","commander boundary","collect_statistics","collaborator"
"bound_simplifier","commander boundary","reset_statistics","set"
"bound_simplifier","commander boundary","bound_simplifier::reduce_app","property non-void-command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::reduce_arg","predicate non-void-command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::reduce","command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::is_offset","predicate non-void-command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::insert_bound","predicate non-void-command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::tighten_bound","command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::assert_upper","command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::assert_lower","command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::has_lower","predicate non-void-command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::has_upper","predicate non-void-command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::get_bounds","command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::expr2linear_pol","command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::lower_subsumed","predicate non-void-command"
"bound_simplifier","commander boundary","bound_simplifier::upper_subsumed","predicate non-void-command"
"bound_simplifier","commander boundary","bound_simplifier::restore_bounds","command collaborator"
"bound_simplifier","commander boundary","bound_simplifier::reset","command"
"mus","boundary","is_active","get"
"mus","boundary","get_model","get collaborator"
"mus","boundary","add_soft","command collaborator"
"mus","boundary","mus::mus","constructor"
"mus","boundary","mus::~mus","destructor"
"mus","boundary","mus::reset","command"
"mus","boundary","mus::set_core","command"
"mus","boundary","mus::update_model","command"
"mus","boundary","mus::operator()","property non-void-command collaborator"
"mus","boundary","mus::mus1","property non-void-command collaborator"
"mus","boundary","mus::mus2","property non-void-command collaborator"
"mus","boundary","mus::qx","property non-void-command collaborator"
"mus","boundary","mus::unsplit","controller stateless"
"mus","boundary","mus::split","controller stateless"
"mus","boundary","mus::get_core","property non-void-command collaborator"
"mus","boundary","mus::verify_core","command collaborator"
"mus","boundary","mus::mus","constructor"
"mus","boundary","mus::~mus","destructor"
"mus","boundary","mus::add_soft","non-void-command collaborator"
"mus","boundary","mus::add_assumption","command collaborator"
"mus","boundary","mus::get_mus","property non-void-command collaborator"
"mus","boundary","mus::reset","command"
"mus","boundary","mus::set_soft","command collaborator"
"mus","boundary","mus::get_best_model","property non-void-command collaborator"
"SeqSort","empty","SeqSort","constructor"
"beta_reducer_cfg","entity boundary small-class","pre_visit","wrapper stateless"
"beta_reducer_cfg","entity boundary small-class","beta_reducer_cfg","constructor"
"beta_reducer_cfg","entity boundary small-class","get_subst","predicate non-void-command collaborator"
"branch_formula","data-provider small-class","branch_formula","constructor"
"branch_formula","data-provider small-class","branch_formula","constructor"
"branch_formula","data-provider small-class","mk_hash","unclassified"
"branch_formula","data-provider small-class","mk_eq","predicate"
"asymm_branch::report","empty","~report","destructor"
"NativeContext","controller degenerate","NativeContext","constructor"
"NativeContext","controller degenerate","MkAdd","controller stateless"
"NativeContext","controller degenerate","MkMul","controller stateless"
"NativeContext","controller degenerate","MkSub","controller stateless"
"NativeContext","controller degenerate","MkDiv","controller stateless"
"NativeContext","controller degenerate","MkLe","controller stateless"
"NativeContext","controller degenerate","MkLt","controller stateless"
"NativeContext","controller degenerate","MkGe","controller stateless"
"NativeContext","controller degenerate","MkGt","controller stateless"
"NativeContext","controller degenerate","MkBvUlt","controller stateless"
"NativeContext","controller degenerate","MkBvUle","controller stateless"
"NativeContext","controller degenerate","MkEq","controller stateless"
"NativeContext","controller degenerate","MkNot","controller stateless"
"NativeContext","controller degenerate","MkAnd","controller stateless"
"NativeContext","controller degenerate","MkOr","controller stateless"
"NativeContext","controller degenerate","MkReal","property controller"
"NativeContext","controller degenerate","MkNumeral","controller stateless"
"NativeContext","controller degenerate","MkNumeral","controller stateless"
"NativeContext","controller degenerate","MkNumeral","controller stateless"
"NativeContext","controller degenerate","MkIte","controller stateless"
"NativeContext","controller degenerate","MkImplies","controller stateless"
"NativeContext","controller degenerate","MkListSort","controller stateless"
"NativeContext","controller degenerate","MkArraySort","controller stateless"
"NativeContext","controller degenerate","MkTupleSort","controller stateless"
"NativeContext","controller degenerate","MkIff","controller stateless"
"NativeContext","controller degenerate","MkConst","property non-void-command collaborator"
"NativeContext","controller degenerate","MkStringSymbol","controller stateless"
"NativeContext","controller degenerate","MkApp","controller stateless"
"NativeContext","controller degenerate","MkBound","controller stateless"
"NativeContext","controller degenerate","MkBvAnd","controller stateless"
"NativeContext","controller degenerate","MkBvNot","controller stateless"
"NativeContext","controller degenerate","MkBvNeg","controller stateless"
"NativeContext","controller degenerate","MkBVNeg","controller stateless"
"NativeContext","controller degenerate","MkBvAdd","controller stateless"
"NativeContext","controller degenerate","MkBvExtract","controller stateless"
"NativeContext","controller degenerate","MkBvSignExt","controller stateless"
"NativeContext","controller degenerate","MkBvZeroExt","controller stateless"
"NativeContext","controller degenerate","MkBvShl","controller stateless"
"NativeContext","controller degenerate","MkBvLshr","controller stateless"
"NativeContext","controller degenerate","MkBvAshr","controller stateless"
"NativeContext","controller degenerate","MkBvSlt","controller stateless"
"NativeContext","controller degenerate","MkBvMul","controller stateless"
"NativeContext","controller degenerate","MkBvUdiv","controller stateless"
"NativeContext","controller degenerate","MkBvSdiv","controller stateless"
"NativeContext","controller degenerate","MkBvUrem","controller stateless"
"NativeContext","controller degenerate","MkBvSrem","controller stateless"
"NativeContext","controller degenerate","MkBvSub","controller stateless"
"NativeContext","controller degenerate","MkBvOr","controller stateless"
"NativeContext","controller degenerate","MkBvXor","controller stateless"
"NativeContext","controller degenerate","MkForall","property non-void-command collaborator"
"NativeContext","controller degenerate","MkExists","property non-void-command collaborator"
"NativeContext","controller degenerate","MkQuantifier","controller stateless"
"eq","data-provider boundary degenerate","eq","constructor"
"eq","data-provider boundary degenerate","eq","constructor"
"eq","data-provider boundary degenerate","operator()","predicate collaborator"
"eq","data-provider boundary degenerate","npn3_finder::binary::eq::operator()","collaborator incidental"
"eq","data-provider boundary degenerate","npn3_finder::ternary::eq::operator()","collaborator incidental"
"eq","data-provider boundary degenerate","npn3_finder::quaternary::eq::operator()","collaborator incidental"
"eq_solver","boundary","set_prefix","unclassified"
"eq_solver","boundary","set_suffix","unclassified"
"eq_solver","boundary","set_extract","controller stateless"
"eq_solver","boundary","mk_eq","property non-void-command collaborator"
"eq_solver","boundary","mk_ge","property non-void-command collaborator"
"eq_solver","boundary","mk_le","property non-void-command collaborator"
"eq_solver","boundary","mk_ge","property non-void-command collaborator"
"eq_solver","boundary","mk_le","property non-void-command collaborator"
"eq_solver","boundary","eq_solver","copy-constructor"
"eq_solver","boundary","eq_solver::reduce","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::branch","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::set_conflict","command"
"eq_solver","boundary","eq_solver::add_consequence","command collaborator"
"eq_solver","boundary","eq_solver::add_consequence","command collaborator"
"eq_solver","boundary","eq_solver::match_itos1","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce_itos1","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_itos2","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce_itos2","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_itos3","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce_itos3","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce_unit","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_ubv2s1","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce_ubv2s1","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_ubv2s2","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce_ubv2s2","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce_binary_eq","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::reduce_nth_solved","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_nth_solved","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_nth_solved_aux","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::branch_unit_variable","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::branch_unit_variable","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::is_var","predicate collaborator"
"eq_solver","boundary","eq_solver::occurs","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::occurs","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::set_prefix","void-accessor"
"eq_solver","boundary","eq_solver::set_suffix","void-accessor"
"eq_solver","boundary","eq_solver::count_units_l2r","unclassified"
"eq_solver","boundary","eq_solver::count_units_r2l","unclassified"
"eq_solver","boundary","eq_solver::count_non_units_l2r","unclassified"
"eq_solver","boundary","eq_solver::count_non_units_r2l","unclassified"
"eq_solver","boundary","eq_solver::match_ternary_eq_r","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_ternary_eq_rhs","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_ternary_eq_l","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_ternary_eq_lhs","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::all_units","predicate"
"eq_solver","boundary","eq_solver::match_binary_eq","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_binary_eq","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::match_quat_eq","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::can_align_from_lhs_aux","predicate non-void-command collaborator"
"eq_solver","boundary","eq_solver::can_align_from_rhs_aux","predicate non-void-command collaborator"
"display_expr1","pure-controller degenerate small-class","display_expr1","constructor"
"display_expr1","pure-controller degenerate small-class","display","controller stateless"
"ptype","data-provider boundary","ptype","constructor"
"ptype","data-provider boundary","ptype","constructor"
"ptype","data-provider boundary","ptype","constructor"
"ptype","data-provider boundary","ptype","constructor"
"ptype","data-provider boundary","kind","get collaborator"
"ptype","data-provider boundary","get_psort","get collaborator"
"ptype","data-provider boundary","get_idx","get"
"ptype","data-provider boundary","get_missing_ref","get collaborator"
"ptype","data-provider boundary","ptype::display","collaborator"
"bound_propagator","boundary","strict2double","get"
"bound_propagator","boundary","is_int","get collaborator"
"bound_propagator","boundary","scope_lvl","unclassified"
"bound_propagator","boundary","is_dead","get collaborator"
"bound_propagator","boundary","assert_lower","command collaborator"
"bound_propagator","boundary","assert_upper","command collaborator"
"bound_propagator","boundary","assert_decided_lower","command collaborator"
"bound_propagator","boundary","assert_decided_upper","command collaborator"
"bound_propagator","boundary","has_lower","get collaborator"
"bound_propagator","boundary","has_upper","get collaborator"
"bound_propagator","boundary","is_fixed","predicate collaborator"
"bound_propagator","boundary","lower","property collaborator"
"bound_propagator","boundary","upper","property collaborator"
"bound_propagator","boundary","lower","get collaborator"
"bound_propagator","boundary","upper","get collaborator"
"bound_propagator","boundary","approx_lower","get collaborator"
"bound_propagator","boundary","approx_upper","get collaborator"
"bound_propagator","boundary","is_zero","predicate collaborator"
"bound_propagator","boundary","explain_lower","collaborator"
"bound_propagator","boundary","explain_upper","collaborator"
"bound_propagator","boundary","explain_lower","collaborator"
"bound_propagator","boundary","explain_upper","collaborator"
"bound_propagator","boundary","conflict_var","get collaborator"
"bound_propagator","boundary","inconsistent","predicate"
"bound_propagator","boundary","trail_size","unclassified"
"bound_propagator","boundary","qhead","get"
"bound_propagator","boundary","begin_trail","property collaborator"
"bound_propagator","boundary","end_trail","property collaborator"
"bound_propagator","boundary","display_precise_bounds","collaborator"
"bound_propagator","boundary","display_approx_bounds","collaborator"
"bound_propagator","boundary","get_num_false_alarms","get"
"bound_propagator","boundary","get_num_propagations","get"
"bound_propagator","boundary","bound_propagator::bound_propagator","constructor"
"bound_propagator","boundary","bound_propagator::~bound_propagator","destructor"
"bound_propagator","boundary","bound_propagator::del_constraints_core","command"
"bound_propagator","boundary","bound_propagator::del_constraints","command"
"bound_propagator","boundary","bound_propagator::del_constraint","command collaborator"
"bound_propagator","boundary","bound_propagator::updt_params","command collaborator"
"bound_propagator","boundary","bound_propagator::get_param_descrs","controller stateless"
"bound_propagator","boundary","bound_propagator::collect_statistics","controller"
"bound_propagator","boundary","bound_propagator::reset_statistics","command"
"bound_propagator","boundary","bound_propagator::mk_var","command"
"bound_propagator","boundary","bound_propagator::del_var","command collaborator"
"bound_propagator","boundary","bound_propagator::mk_eq","command collaborator"
"bound_propagator","boundary","bound_propagator::mk_eq","command collaborator"
"bound_propagator","boundary","bound_propagator::init_eq","command collaborator"
"bound_propagator","boundary","bound_propagator::push","command collaborator"
"bound_propagator","boundary","bound_propagator::undo_trail","command collaborator"
"bound_propagator","boundary","bound_propagator::pop","command"
"bound_propagator","boundary","bound_propagator::assert_lower_core","predicate non-void-command collaborator"
"bound_propagator","boundary","bound_propagator::assert_upper_core","predicate non-void-command collaborator"
"bound_propagator","boundary","bound_propagator::get_interval_size","predicate collaborator"
"bound_propagator","boundary","bound_propagator::relevant_bound","get predicate"
"bound_propagator","boundary","bound_propagator::relevant_lower","wrapper stateless"
"bound_propagator","boundary","bound_propagator::relevant_upper","wrapper stateless"
"bound_propagator","boundary","bound_propagator::check_feasibility","command collaborator"
"bound_propagator","boundary","bound_propagator::propagate","command"
"bound_propagator","boundary","bound_propagator::propagate","predicate non-void-command collaborator"
"bound_propagator","boundary","bound_propagator::propagate_eq","predicate non-void-command"
"bound_propagator","boundary","bound_propagator::propagate_lower","predicate non-void-command"
"bound_propagator","boundary","bound_propagator::propagate_upper","predicate non-void-command"
"bound_propagator","boundary","bound_propagator::reset","command"
"bound_propagator","boundary","bound_propagator::lower","predicate collaborator"
"bound_propagator","boundary","bound_propagator::upper","predicate collaborator"
"bound_propagator","boundary","bound_propagator::is_a_i_pos","predicate collaborator"
"bound_propagator","boundary","bound_propagator::explain","collaborator"
"bound_propagator","boundary","bound_propagator::get_bound","predicate collaborator"
"bound_propagator","boundary","bound_propagator::lower","wrapper stateless"
"bound_propagator","boundary","bound_propagator::upper","wrapper stateless"
"bound_propagator","boundary","bound_propagator::display_bounds_of","controller stateless"
"bound_propagator","boundary","bound_propagator::display_var_bounds","unclassified"
"bound_propagator","boundary","bound_propagator::display_bounds","unclassified"
"bound_propagator","boundary","bound_propagator::display_constraints","collaborator"
"bound_propagator","boundary","bound_propagator::display","collaborator"
"smt_theory_checker_plugin","unclassified","smt_theory_checker_plugin","constructor"
"smt_theory_checker_plugin","unclassified","check","collaborator incidental"
"smt_theory_checker_plugin","unclassified","smt_theory_checker_plugin::clause","property controller"
"smt_theory_checker_plugin","unclassified","smt_theory_checker_plugin::register_plugins","controller"
"pair_relevancy_eh","pure-controller small-class","pair_relevancy_eh","constructor"
"pair_relevancy_eh","pure-controller small-class","~pair_relevancy_eh","destructor"
"pair_relevancy_eh","pure-controller small-class","pair_relevancy_eh::operator()","controller"
"sym_expr","data-provider","sym_expr","copy-constructor"
"sym_expr","data-provider","~sym_expr","destructor"
"sym_expr","data-provider","inc_ref","set"
"sym_expr","data-provider","dec_ref","set"
"sym_expr","data-provider","is_char","predicate"
"sym_expr","data-provider","is_pred","predicate"
"sym_expr","data-provider","is_range","predicate"
"sym_expr","data-provider","is_not","predicate"
"sym_expr","data-provider","get_sort","get collaborator"
"sym_expr","data-provider","get_char","get collaborator"
"sym_expr","data-provider","get_pred","get collaborator"
"sym_expr","data-provider","get_lo","get collaborator"
"sym_expr","data-provider","get_hi","get collaborator"
"sym_expr","data-provider","get_arg","get"
"sym_expr","data-provider","sym_expr::accept","property non-void-command collaborator"
"sym_expr","data-provider","sym_expr::display","property collaborator"
"array_decl_plugin","boundary","mk_fresh","wrapper stateless"
"array_decl_plugin","boundary","array_decl_plugin::array_decl_plugin","constructor"
"array_decl_plugin","boundary","array_decl_plugin::mk_sort","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::is_array_sort","predicate controller"
"array_decl_plugin","boundary","array_decl_plugin::mk_const","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_map","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_default","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_select","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_store","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_array_ext","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::check_set_arguments","predicate non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_set_union","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_set_intersect","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_set_difference","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_set_complement","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_set_subset","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_set_card","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_set_has_size","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_as_array","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::mk_func_decl","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::get_sort_names","controller stateless"
"array_decl_plugin","boundary","array_decl_plugin::get_op_names","controller stateless"
"array_decl_plugin","boundary","array_decl_plugin::get_some_value","property non-void-command collaborator"
"array_decl_plugin","boundary","array_decl_plugin::is_fully_interp","predicate collaborator"
"array_decl_plugin","boundary","array_decl_plugin::is_value","predicate collaborator"
"array_decl_plugin","boundary","array_decl_plugin::is_unique_value","predicate collaborator"
"lazy_table_base","entity boundary small-class","lazy_table_base","constructor"
"lazy_table_base","entity boundary small-class","kind","collaborator incidental"
"lazy_table_base","entity boundary small-class","force","property non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","sym_expr_boolean_algebra","constructor"
"sym_expr_boolean_algebra","entity boundary","mk_false","property non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","mk_true","property non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","mk_and","property non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","is_complement","predicate non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","mk_or","property non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","mk_and","property non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","mk_or","property non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","is_sat","property non-void-command collaborator"
"sym_expr_boolean_algebra","entity boundary","mk_not","property wrapper"
"default_expr2polynomial","entity boundary small-class","default_expr2polynomial::default_expr2polynomial","constructor"
"default_expr2polynomial","entity boundary small-class","default_expr2polynomial::~default_expr2polynomial","destructor"
"default_expr2polynomial","entity boundary small-class","default_expr2polynomial::is_int","get collaborator"
"default_expr2polynomial","entity boundary small-class","default_expr2polynomial::mk_var","property non-void-command collaborator"
"basic_decl_plugin","boundary","mk_fresh","wrapper stateless"
"basic_decl_plugin","boundary","mk_bool_sort","get collaborator"
"basic_decl_plugin","boundary","mk_proof_sort","get collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::check_proof_sorts","predicate wrapper"
"basic_decl_plugin","boundary","basic_decl_plugin::check_proof_args","predicate wrapper"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_bool_op_decl","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_implies_decl","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_proof_decl","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_proof_decl","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_compressed_proof_decl","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_proof_decl","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_proof_decl","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_proof_decl","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_proof_decl","get property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::set_manager","command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::get_sort_names","controller stateless"
"basic_decl_plugin","boundary","basic_decl_plugin::get_op_names","controller stateless"
"basic_decl_plugin","boundary","basic_decl_plugin::is_value","predicate controller"
"basic_decl_plugin","boundary","basic_decl_plugin::is_unique_value","predicate collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::finalize","wrapper"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_sort","get wrapper"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_eq_decl_core","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_ite_decl","get non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::join","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::join","property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::join","property controller"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_func_decl","get property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::mk_func_decl","get property non-void-command collaborator"
"basic_decl_plugin","boundary","basic_decl_plugin::get_some_value","property non-void-command collaborator"
"relation_manager::default_table_join_fn","controller small-class","operator()","property controller"
"clp","entity boundary","clp::clp","constructor"
"clp","entity boundary","clp::~clp","destructor"
"clp","entity boundary","clp::query","property non-void-command collaborator"
"clp","entity boundary","clp::reset_statistics","command"
"clp","entity boundary","clp::collect_statistics","collaborator"
"clp","entity boundary","clp::display_certificate","collaborator"
"clp","entity boundary","clp::get_answer","property non-void-command collaborator"
"sym_expr_manager","pure-controller degenerate small-class","inc_ref","controller stateless"
"sym_expr_manager","pure-controller degenerate small-class","dec_ref","controller stateless"
"unsat_core_plugin_lemma","commander boundary small-class","unsat_core_plugin_lemma","constructor"
"unsat_core_plugin_lemma","commander boundary small-class","unsat_core_plugin_lemma::compute_partial_core","command collaborator"
"unsat_core_plugin_lemma","commander boundary small-class","unsat_core_plugin_lemma::add_lowest_split_to_core","collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk","property non-void-command collaborator"
"skolem","entity boundary","mk_align","property non-void-command collaborator"
"skolem","entity boundary","mk_align_l","property non-void-command collaborator"
"skolem","entity boundary","mk_align_r","property non-void-command collaborator"
"skolem","entity boundary","mk_align_m","property non-void-command collaborator"
"skolem","entity boundary","mk_accept","property non-void-command collaborator"
"skolem","entity boundary","mk_accept","property non-void-command collaborator"
"skolem","entity boundary","mk_is_empty","property non-void-command collaborator"
"skolem","entity boundary","mk_is_non_empty","property non-void-command collaborator"
"skolem","entity boundary","mk_indexof_left","property non-void-command collaborator"
"skolem","entity boundary","mk_indexof_right","property non-void-command collaborator"
"skolem","entity boundary","mk_contains_left","property non-void-command collaborator"
"skolem","entity boundary","mk_contains_right","property non-void-command collaborator"
"skolem","entity boundary","mk_last_indexof_left","property non-void-command collaborator"
"skolem","entity boundary","mk_last_indexof_right","property non-void-command collaborator"
"skolem","entity boundary","mk_tail","property non-void-command collaborator"
"skolem","entity boundary","mk_post","property non-void-command collaborator"
"skolem","entity boundary","mk_postp","property non-void-command collaborator"
"skolem","entity boundary","mk_ite","property non-void-command collaborator"
"skolem","entity boundary","mk_pre","property non-void-command collaborator"
"skolem","entity boundary","mk_eq","property non-void-command collaborator"
"skolem","entity boundary","mk_prefix_inv","property non-void-command collaborator"
"skolem","entity boundary","mk_suffix_inv","property non-void-command collaborator"
"skolem","entity boundary","mk_is_digit","property non-void-command collaborator"
"skolem","entity boundary","mk_digit2int","property non-void-command collaborator"
"skolem","entity boundary","mk_ubv2ch","property non-void-command collaborator"
"skolem","entity boundary","mk_left","property non-void-command collaborator"
"skolem","entity boundary","mk_right","property non-void-command collaborator"
"skolem","entity boundary","is_skolem","predicate collaborator"
"skolem","entity boundary","is_first","predicate non-void-command collaborator"
"skolem","entity boundary","is_last","predicate non-void-command collaborator"
"skolem","entity boundary","is_unit_inv","predicate collaborator"
"skolem","entity boundary","is_unit_inv","predicate collaborator"
"skolem","entity boundary","is_tail","predicate collaborator"
"skolem","entity boundary","is_seq_first","predicate collaborator"
"skolem","entity boundary","is_indexof_left","predicate collaborator"
"skolem","entity boundary","is_indexof_right","predicate collaborator"
"skolem","entity boundary","is_last_indexof_left","predicate collaborator"
"skolem","entity boundary","is_last_indexof_right","predicate collaborator"
"skolem","entity boundary","is_indexof_left","predicate collaborator"
"skolem","entity boundary","is_indexof_right","predicate collaborator"
"skolem","entity boundary","is_step","predicate collaborator"
"skolem","entity boundary","is_accept","predicate collaborator"
"skolem","entity boundary","is_accept","predicate collaborator"
"skolem","entity boundary","is_accept","predicate collaborator"
"skolem","entity boundary","is_align","predicate collaborator"
"skolem","entity boundary","is_align_l","predicate collaborator"
"skolem","entity boundary","is_align_r","predicate collaborator"
"skolem","entity boundary","is_digit","predicate collaborator"
"skolem","entity boundary","is_max_unfolding","predicate collaborator"
"skolem","entity boundary","is_length_limit","predicate collaborator"
"skolem","entity boundary","is_is_empty","predicate collaborator"
"skolem","entity boundary","is_is_empty","predicate collaborator"
"skolem","entity boundary","is_is_non_empty","predicate collaborator"
"skolem","entity boundary","is_is_non_empty","predicate collaborator"
"skolem","entity boundary","skolem::skolem","constructor"
"skolem","entity boundary","skolem::mk","property non-void-command collaborator"
"skolem","entity boundary","skolem::mk_max_unfolding_depth","property non-void-command collaborator"
"skolem","entity boundary","skolem::mk_length_limit","property non-void-command collaborator"
"skolem","entity boundary","skolem::is_length_limit","predicate collaborator"
"skolem","entity boundary","skolem::is_skolem","predicate collaborator"
"skolem","entity boundary","skolem::decompose","void-accessor command collaborator"
"skolem","entity boundary","skolem::is_step","predicate collaborator"
"skolem","entity boundary","skolem::is_tail_u","predicate collaborator"
"skolem","entity boundary","skolem::is_tail","predicate collaborator"
"skolem","entity boundary","skolem::is_tail","predicate collaborator"
"skolem","entity boundary","skolem::is_left_or_right","predicate non-void-command collaborator"
"skolem","entity boundary","skolem::is_eq","predicate collaborator"
"skolem","entity boundary","skolem::is_pre","predicate non-void-command collaborator"
"skolem","entity boundary","skolem::is_post","predicate non-void-command collaborator"
"skolem","entity boundary","skolem::mk_unit_inv","property non-void-command collaborator"
"skolem","entity boundary","skolem::mk_last","property non-void-command collaborator"
"skolem","entity boundary","skolem::mk_first","property non-void-command collaborator"
"skolem","entity boundary","skolem::mk_step","property non-void-command collaborator"
"skolem","entity boundary","skolem::mk_digit2bv","property non-void-command collaborator"
"th_rewriter","boundary","mk_app","property non-void-command collaborator"
"th_rewriter","boundary","mk_app","property non-void-command collaborator"
"th_rewriter","boundary","th_rewriter::th_rewriter","constructor"
"th_rewriter","boundary","th_rewriter::m","property collaborator"
"th_rewriter","boundary","th_rewriter::updt_params","command collaborator"
"th_rewriter","boundary","th_rewriter::get_param_descrs","command collaborator"
"th_rewriter","boundary","th_rewriter::set_flat_and_or","command"
"th_rewriter","boundary","th_rewriter::set_order_eq","command"
"th_rewriter","boundary","th_rewriter::~th_rewriter","destructor"
"th_rewriter","boundary","th_rewriter::get_cache_size","unclassified"
"th_rewriter","boundary","th_rewriter::get_num_steps","unclassified"
"th_rewriter","boundary","th_rewriter::cleanup","command collaborator"
"th_rewriter","boundary","th_rewriter::reset","command"
"th_rewriter","boundary","th_rewriter::operator()","controller stateless"
"th_rewriter","boundary","th_rewriter::operator()","controller stateless"
"th_rewriter","boundary","th_rewriter::operator()","controller stateless"
"th_rewriter","boundary","th_rewriter::operator()","property non-void-command collaborator"
"th_rewriter","boundary","th_rewriter::set_substitution","command collaborator"
"th_rewriter","boundary","th_rewriter::get_used_dependencies","property non-void-command collaborator"
"th_rewriter","boundary","th_rewriter::reset_used_dependencies","command"
"th_rewriter","boundary","th_rewriter::mk_app","property non-void-command collaborator"
"th_rewriter","boundary","th_rewriter::mk_eq","property non-void-command collaborator"
"th_rewriter","boundary","th_rewriter::set_solver","command collaborator"
"th_rewriter","boundary","th_rewriter::reduce_quantifier","predicate non-void-command collaborator"
"unused_vars_eliminator","entity boundary small-class","unused_vars_eliminator::unused_vars_eliminator","constructor"
"unused_vars_eliminator","entity boundary small-class","unused_vars_eliminator::operator()","property non-void-command collaborator"
"bound_relation_plugin::filter_equal_fn","degenerate small-class","operator()","empty"
"cached_var_subst","entity boundary","cached_var_subst::cached_var_subst","constructor"
"cached_var_subst","entity boundary","cached_var_subst::reset","command"
"cached_var_subst","entity boundary","cached_var_subst::operator()","property non-void-command collaborator"
"cached_var_subst","entity boundary","cached_var_subst::operator()","property non-void-command collaborator"
"bound_relation_plugin","boundary degenerate","mk_join_project_fn","collaborator incidental"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::bound_relation_plugin","constructor"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::can_handle_signature","predicate non-void-command collaborator"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::get","collaborator incidental"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::get","collaborator incidental"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::get","collaborator incidental"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::is_interval_relation","controller stateless"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::get_interval_relation","property non-void-command collaborator"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::get_interval_relation","property non-void-command collaborator"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_empty","property wrapper"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_full","property wrapper"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_join_fn","controller stateless"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_project_fn","controller stateless"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_rename_fn","controller stateless"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_union_fn","property non-void-command collaborator"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_widen_fn","property non-void-command collaborator"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_filter_identical_fn","wrapper stateless"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_filter_equal_fn","wrapper stateless"
"bound_relation_plugin","boundary degenerate","bound_relation_plugin::mk_filter_interpreted_fn","controller stateless"
"iinterval","empty","iinterval","constructor"
"iinterval","empty","iinterval","constructor"
"arith_eq_relevancy_eh","pure-controller small-class","arith_eq_relevancy_eh","constructor"
"arith_eq_relevancy_eh","pure-controller small-class","~arith_eq_relevancy_eh","destructor"
"arith_eq_relevancy_eh","pure-controller small-class","operator()","controller"
"bound_relation","boundary","empty","get"
"bound_relation","boundary","is_precise","incidental"
"bound_relation","boundary","bound_relation::bound_relation","copy-constructor"
"bound_relation","boundary","bound_relation::mk_intersect","collaborator incidental"
"bound_relation","boundary","bound_relation::mk_widen","property collaborator"
"bound_relation","boundary","bound_relation::mk_unite","collaborator incidental"
"bound_relation","boundary","bound_relation::mk_eq","controller stateless"
"bound_relation","boundary","bound_relation::is_subset_of","predicate collaborator"
"bound_relation","boundary","bound_relation::mk_rename_elem","command"
"bound_relation","boundary","bound_relation::is_full","controller stateless"
"bound_relation","boundary","bound_relation::is_empty","predicate collaborator"
"bound_relation","boundary","bound_relation::normalize","collaborator"
"bound_relation","boundary","bound_relation::normalize","collaborator"
"bound_relation","boundary","bound_relation::mk_lt","command collaborator"
"bound_relation","boundary","bound_relation::mk_lt","command"
"bound_relation","boundary","bound_relation::mk_le","command"
"bound_relation","boundary","bound_relation::is_lt","get"
"bound_relation","boundary","bound_relation::add_fact","command collaborator"
"bound_relation","boundary","bound_relation::contains_fact","predicate collaborator"
"bound_relation","boundary","bound_relation::clone","property"
"bound_relation","boundary","bound_relation::mk_union_i","command collaborator"
"bound_relation","boundary","bound_relation::complement","wrapper stateless"
"bound_relation","boundary","bound_relation::to_formula","collaborator"
"bound_relation","boundary","bound_relation::display_index","controller stateless"
"bound_relation","boundary","bound_relation::get_plugin","property collaborator"
"check_table_plugin::join_fn","pure-controller degenerate small-class","operator()","controller stateless"
"check_table_plugin::join_project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"model::occs_collector","commander small-class","operator()","command collaborator"
"model::occs_collector","commander small-class","operator()","empty"
"check_table_plugin::union_fn","boundary degenerate small-class","operator()","wrapper stateless"
"array_select_reducer","boundary","reset","command"
"array_select_reducer","boundary","is_equals","predicate non-void-command collaborator"
"array_select_reducer","boundary","add_idx_cond","command collaborator"
"array_select_reducer","boundary","has_stores","predicate non-void-command collaborator"
"array_select_reducer","boundary","mark_stores","command"
"array_select_reducer","boundary","reduce","predicate non-void-command collaborator"
"array_select_reducer","boundary","reduce_core","property non-void-command collaborator"
"array_select_reducer","boundary","mk_result","void-accessor command collaborator"
"array_select_reducer","boundary","array_select_reducer","constructor"
"array_select_reducer","boundary","operator()","command"
"array_select_reducer","boundary","reset","command"
"array_select_reducer","boundary","is_equals","wrapper stateless"
"array_select_reducer","boundary","is_equals","predicate non-void-command collaborator"
"array_select_reducer","boundary","mk_eq","property non-void-command collaborator"
"array_select_reducer","boundary","add_idx_cond","command collaborator"
"array_select_reducer","boundary","has_stores","predicate non-void-command collaborator"
"array_select_reducer","boundary","mark_stores","command"
"array_select_reducer","boundary","reduce","predicate non-void-command collaborator"
"array_select_reducer","boundary","reduce_core","property non-void-command collaborator"
"array_select_reducer","boundary","mk_result","void-accessor controller"
"array_select_reducer","boundary","array_select_reducer","constructor"
"array_select_reducer","boundary","operator()","command collaborator"
"check_table_plugin::filter_interpreted_fn","boundary degenerate small-class","operator()","wrapper stateless"
"basic_solve_plugin","entity boundary small-class","basic_solve_plugin","constructor"
"basic_solve_plugin","entity boundary small-class","solve","property non-void-command collaborator"
"solver::scoped_ls","empty","~scoped_ls","destructor"
"func_entry","data-provider boundary","init","set collaborator"
"func_entry","data-provider boundary","func_entry","copy-constructor"
"func_entry","data-provider boundary","func_entry","copy-constructor"
"func_entry","data-provider boundary","~func_entry","destructor"
"func_entry","data-provider boundary","operatorZ3_func_entry","get"
"func_entry","data-provider boundary","operator=","get set"
"func_entry","data-provider boundary","value","property collaborator"
"func_entry","data-provider boundary","num_args","unclassified"
"func_entry","data-provider boundary","arg","property collaborator"
"func_entry","data-provider boundary","args_are_values","get"
"func_entry","data-provider boundary","get_result","get collaborator"
"func_entry","data-provider boundary","get_arg","get collaborator"
"func_entry","data-provider boundary","get_args","get collaborator"
"func_entry","data-provider boundary","func_entry::func_entry","constructor"
"func_entry","data-provider boundary","func_entry::mk","property non-void-command factory collaborator"
"func_entry","data-provider boundary","func_entry::set_result","set collaborator"
"func_entry","data-provider boundary","func_entry::eq_args","predicate controller"
"func_entry","data-provider boundary","func_entry::deallocate","controller"
"skip_tactic","lazy-class degenerate","cleanup","empty"
"skip_tactic","lazy-class degenerate","translate","get collaborator"
"skip_tactic","lazy-class degenerate","name","incidental"
"skip_tactic","lazy-class degenerate","collect_statistics","empty"
"skip_tactic","lazy-class degenerate","skip_tactic::operator()","controller stateless"
"check_table_plugin::filter_interpreted_and_project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"check_table_plugin::filter_by_negation_fn","boundary degenerate small-class","operator()","wrapper stateless"
"subpaving_tactic","commander boundary","~subpaving_tactic","destructor"
"subpaving_tactic","commander boundary","name","incidental"
"subpaving_tactic","commander boundary","translate","property wrapper"
"subpaving_tactic","commander boundary","updt_params","command collaborator"
"subpaving_tactic","commander boundary","collect_param_descrs","command collaborator"
"subpaving_tactic","commander boundary","collect_statistics","controller"
"subpaving_tactic","commander boundary","reset_statistics","command"
"subpaving_tactic","commander boundary","operator()","command collaborator"
"subpaving_tactic","commander boundary","cleanup","set collaborator"
"pull_nested_quant","commander small-class","pull_nested_quant::pull_nested_quant","constructor"
"pull_nested_quant","commander small-class","pull_nested_quant::~pull_nested_quant","destructor"
"pull_nested_quant","commander small-class","pull_nested_quant::operator()","wrapper stateless"
"pull_nested_quant","commander small-class","pull_nested_quant::reset","command"
"check_table","entity data-provider boundary","get_plugin","property collaborator"
"check_table","entity data-provider boundary","begin","property collaborator"
"check_table","entity data-provider boundary","end","property collaborator"
"check_table","entity data-provider boundary","get_size_estimate_rows","unclassified"
"check_table","entity data-provider boundary","get_size_estimate_bytes","unclassified"
"check_table","entity data-provider boundary","check_table::check_table","copy-constructor"
"check_table","entity data-provider boundary","check_table::check_table","copy-constructor"
"check_table","entity data-provider boundary","check_table::~check_table","destructor"
"check_table","entity data-provider boundary","check_table::well_formed","predicate collaborator"
"check_table","entity data-provider boundary","check_table::empty","predicate"
"check_table","entity data-provider boundary","check_table::add_fact","command collaborator"
"check_table","entity data-provider boundary","check_table::remove_fact","command collaborator"
"check_table","entity data-provider boundary","check_table::contains_fact","predicate collaborator"
"check_table","entity data-provider boundary","check_table::clone","property collaborator"
"check_table","entity data-provider boundary","check_table::complement","property collaborator"
"compiler","boundary","all_or_nothing_deltas","predicate"
"compiler","boundary","compile_with_widening","predicate"
"compiler","boundary","set_register","command collaborator"
"compiler","boundary","get_check_mark","property collaborator"
"compiler","boundary","set_check_mark","command collaborator"
"compiler","boundary","init","command"
"compiler","boundary","all_args_are_bound_vars","predicate wrapper"
"compiler","boundary","get_stats_core","void-accessor command"
"compiler","boundary","get_stats","void-accessor command"
"compiler","boundary","linearise_core","command"
"compiler","boundary","get_num_bound_vars_core","non-void-command"
"compiler","boundary","get_num_bound_vars","non-void-command"
"compiler","boundary","gen_mp_filter","non-void-command collaborator"
"compiler","boundary","linearise_multi_pattern","command collaborator"
"compiler","boundary","linearise","void-accessor command collaborator"
"compiler","boundary","set_next","void-accessor command collaborator"
"compiler","boundary","find_best_child","property non-void-command collaborator"
"compiler","boundary","is_compatible","predicate wrapper"
"compiler","boundary","is_compatible","get collaborator"
"compiler","boundary","is_compatible","predicate collaborator"
"compiler","boundary","get_pat_lbl_hash","collaborator"
"compiler","boundary","is_semi_compatible","get collaborator"
"compiler","boundary","is_compatible","predicate collaborator"
"compiler","boundary","is_cfilter_compatible","predicate collaborator"
"compiler","boundary","is_semi_compatible","get collaborator"
"compiler","boundary","is_compatible","predicate collaborator"
"compiler","boundary","get_compatibility_measure","non-void-command"
"compiler","boundary","insert","void-accessor command collaborator"
"compiler","boundary","mk_tree","property non-void-command collaborator"
"compiler","boundary","insert","void-accessor command"
"compiler","boundary","set_register","command collaborator"
"compiler","boundary","get_check_mark","property collaborator"
"compiler","boundary","set_check_mark","command collaborator"
"compiler","boundary","init","command"
"compiler","boundary","all_args_are_bound_vars","predicate wrapper"
"compiler","boundary","get_stats_core","void-accessor command"
"compiler","boundary","get_stats","void-accessor command"
"compiler","boundary","linearise_core","command"
"compiler","boundary","get_num_bound_vars_core","non-void-command"
"compiler","boundary","get_num_bound_vars","non-void-command"
"compiler","boundary","gen_mp_filter","non-void-command collaborator"
"compiler","boundary","linearise_multi_pattern","command collaborator"
"compiler","boundary","linearise","void-accessor command collaborator"
"compiler","boundary","set_next","void-accessor command collaborator"
"compiler","boundary","find_best_child","property non-void-command collaborator"
"compiler","boundary","is_compatible","predicate wrapper"
"compiler","boundary","is_compatible","get collaborator"
"compiler","boundary","is_compatible","predicate controller"
"compiler","boundary","get_pat_lbl_hash","controller"
"compiler","boundary","is_semi_compatible","get collaborator"
"compiler","boundary","is_compatible","predicate collaborator"
"compiler","boundary","is_cfilter_compatible","predicate collaborator"
"compiler","boundary","is_semi_compatible","get collaborator"
"compiler","boundary","is_compatible","predicate collaborator"
"compiler","boundary","get_compatibility_measure","non-void-command"
"compiler","boundary","insert","void-accessor command collaborator"
"compiler","boundary","mk_tree","property non-void-command collaborator"
"compiler","boundary","insert","void-accessor command"
"compiler","boundary","compiler::reset","command"
"compiler","boundary","compiler::ensure_predicate_loaded","command collaborator"
"compiler","boundary","compiler::make_join","void-accessor command collaborator"
"compiler","boundary","compiler::make_join_project","void-accessor command collaborator"
"compiler","boundary","compiler::make_filter_interpreted_and_project","void-accessor command collaborator"
"compiler","boundary","compiler::make_select_equal_and_project","void-accessor command collaborator"
"compiler","boundary","compiler::make_clone","void-accessor command collaborator"
"compiler","boundary","compiler::make_union","controller"
"compiler","boundary","compiler::make_projection","void-accessor command collaborator"
"compiler","boundary","compiler::get_fresh_register","property non-void-command collaborator"
"compiler","boundary","compiler::get_register","property set collaborator"
"compiler","boundary","compiler::get_single_column_register","property non-void-command collaborator"
"compiler","boundary","compiler::get_fresh_registers","command collaborator"
"compiler","boundary","compiler::make_dealloc_non_void","controller stateless"
"compiler","boundary","compiler::make_add_constant_column","void-accessor command collaborator"
"compiler","boundary","compiler::make_add_unbound_column","void-accessor command collaborator"
"compiler","boundary","compiler::make_full_relation","void-accessor command collaborator"
"compiler","boundary","compiler::make_duplicate_column","command collaborator"
"compiler","boundary","compiler::make_rename","void-accessor command collaborator"
"compiler","boundary","compiler::make_assembling_code","void-accessor command collaborator"
"compiler","boundary","compiler::get_local_indexes_for_projection","controller stateless"
"compiler","boundary","compiler::get_local_indexes_for_projection","command collaborator"
"compiler","boundary","compiler::compile_rule_evaluation_run","command collaborator"
"compiler","boundary","compiler::add_unbound_columns_for_negation","command collaborator"
"compiler","boundary","compiler::compile_rule_evaluation","command collaborator"
"compiler","boundary","compiler::detect_chains","command collaborator"
"compiler","boundary","compiler::compile_preds","command collaborator"
"compiler","boundary","compiler::compile_preds_init","command collaborator"
"compiler","boundary","compiler::make_inloop_delta_transition","controller stateless"
"compiler","boundary","compiler::compile_loop","command collaborator"
"compiler","boundary","compiler::compile_dependent_rules","command collaborator"
"compiler","boundary","compiler::is_nonrecursive_stratum","predicate collaborator"
"compiler","boundary","compiler::compile_nonrecursive_stratum","command collaborator"
"compiler","boundary","compiler::all_saturated","predicate collaborator"
"compiler","boundary","compiler::compile_strats","command collaborator"
"compiler","boundary","compiler::do_compilation","command collaborator"
"external_relation_plugin::project_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"external_relation_plugin::rename_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"external_relation_plugin::union_fn","commander boundary small-class","operator()","command collaborator"
"external_relation_plugin::filter_interpreted_fn","commander boundary small-class","operator()","command collaborator"
"external_relation_plugin::filter_identical_fn","commander boundary small-class","operator()","command collaborator"
"external_relation","entity data-provider boundary","size","unclassified"
"external_relation","entity data-provider boundary","get_sort","property collaborator"
"external_relation","entity data-provider boundary","get_relation","property collaborator"
"external_relation","entity data-provider boundary","to_formula","void-accessor collaborator"
"external_relation","entity data-provider boundary","external_relation::external_relation","copy-constructor"
"external_relation","entity data-provider boundary","external_relation::~external_relation","destructor"
"external_relation","entity data-provider boundary","external_relation::mk_accessor","void-accessor collaborator"
"external_relation","entity data-provider boundary","external_relation::empty","predicate collaborator"
"external_relation","entity data-provider boundary","external_relation::add_fact","command collaborator"
"external_relation","entity data-provider boundary","external_relation::contains_fact","predicate collaborator"
"external_relation","entity data-provider boundary","external_relation::clone","property collaborator"
"external_relation","entity data-provider boundary","external_relation::complement","property collaborator"
"external_relation","entity data-provider boundary","external_relation::display","collaborator"
"external_relation","entity data-provider boundary","external_relation::display_tuples","collaborator"
"external_relation","entity data-provider boundary","external_relation::get_plugin","property collaborator"
"instr_filter_by_negation","unclassified","instr_filter_by_negation","constructor"
"instr_filter_by_negation","unclassified","perform","predicate non-void-command collaborator"
"instr_filter_by_negation","unclassified","display_head_impl","property wrapper"
"instr_filter_by_negation","unclassified","make_annotations","controller"
"is_ilp_probe","boundary degenerate small-class","operator()","wrapper stateless"
"finite_product_relation_plugin::join_fn","entity boundary small-class","do_rjoin","property set collaborator"
"finite_product_relation_plugin::join_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"interval_relation","entity data-provider boundary","is_precise","incidental"
"interval_relation","entity data-provider boundary","mk_intersect","property collaborator"
"interval_relation","entity data-provider boundary","mk_unite","property collaborator"
"interval_relation","entity data-provider boundary","mk_widen","property collaborator"
"interval_relation","entity data-provider boundary","is_subset_of","wrapper stateless"
"interval_relation","entity data-provider boundary","is_full","wrapper stateless"
"interval_relation","entity data-provider boundary","is_empty","predicate collaborator"
"interval_relation","entity data-provider boundary","interval_relation::interval_relation","copy-constructor"
"interval_relation","entity data-provider boundary","interval_relation::add_fact","command collaborator"
"interval_relation","entity data-provider boundary","interval_relation::contains_fact","predicate collaborator"
"interval_relation","entity data-provider boundary","interval_relation::clone","property"
"interval_relation","entity data-provider boundary","interval_relation::complement","wrapper stateless"
"interval_relation","entity data-provider boundary","interval_relation::to_formula","collaborator"
"interval_relation","entity data-provider boundary","interval_relation::display_index","collaborator incidental"
"interval_relation","entity data-provider boundary","interval_relation::get_plugin","property collaborator"
"interval_relation","entity data-provider boundary","interval_relation::mk_intersect","command collaborator"
"interval_relation","entity data-provider boundary","interval_relation::mk_rename_elem","empty"
"interval_relation","entity data-provider boundary","interval_relation::filter_interpreted","command collaborator"
"finite_product_relation_plugin::union_fn","boundary data-class small-class","get_inner_rel_union_op","get set collaborator"
"finite_product_relation_plugin::union_fn","boundary data-class small-class","operator()","command collaborator"
"basic_extract_eq","commander boundary","basic_extract_eq","constructor"
"basic_extract_eq","commander boundary","set_allow_booleans","set"
"basic_extract_eq","commander boundary","get_eqs","command collaborator"
"basic_extract_eq","commander boundary","updt_params","set collaborator"
"finite_product_relation_plugin::filter_identical_fn","commander boundary small-class","ensure_rel_filter","command collaborator"
"finite_product_relation_plugin::filter_identical_fn","commander boundary small-class","operator()","command collaborator"
"finite_product_relation_plugin::filter_equal_fn","commander boundary data-class small-class","operator()","set collaborator"
"push_app_ite_cfg","unclassified","push_app_ite_cfg","constructor"
"push_app_ite_cfg","unclassified","set_conservative","set"
"push_app_ite_cfg","unclassified","rewrite_patterns","incidental"
"push_app_ite_cfg","unclassified","push_app_ite_cfg::is_target","predicate non-void-command collaborator"
"push_app_ite_cfg","unclassified","push_app_ite_cfg::reduce_app","property non-void-command collaborator"
"array_solve_plugin","data-provider boundary small-class","array_solve_plugin","constructor"
"array_solve_plugin","data-provider boundary small-class","solve","property wrapper"
"finite_product_relation_plugin::filter_interpreted_fn","commander boundary small-class","operator()","command collaborator"
"finite_product_relation_plugin::negation_filter_fn","small-class","handle_only_tables_overlap_case","controller"
"finite_product_relation_plugin::negation_filter_fn","small-class","operator()","command collaborator"
"finite_product_relation_plugin","boundary","get_all_possible_table_columns","command collaborator"
"finite_product_relation_plugin","boundary","get_inner_plugin","get collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::get","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::get","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::get","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::get","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::get_name","controller stateless"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::get_plugin","controller stateless"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::finite_product_relation_plugin","constructor"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::initialize","command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::get_relation_kind","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::get_all_possible_table_columns","controller stateless"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::split_signatures","controller stateless"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::split_signatures","controller stateless"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::can_handle_signature","predicate non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_empty","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_empty","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_empty","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_empty","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_empty","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_full","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::can_convert_to_table_relation","controller stateless"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::to_table_relation","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::can_be_converted","predicate non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_from_table_relation","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_from_inner_relation","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_join_fn","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_project_fn","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_rename_fn","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_union_fn","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_filter_identical_fn","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_filter_equal_fn","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_filter_by_negation_fn","property non-void-command collaborator"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_filter_identical_pairs","wrapper stateless"
"finite_product_relation_plugin","boundary","finite_product_relation_plugin::mk_assembler_of_filter_result","controller stateless"
"rel_spec","degenerate small-class","well_formed","incidental"
"finite_product_relation","boundary","get_inner_rel","property non-void-command collaborator"
"finite_product_relation","boundary","get_inner_rel","get wrapper"
"finite_product_relation","boundary","get_inner_rel","property collaborator"
"finite_product_relation","boundary","set_inner_rel","command collaborator"
"finite_product_relation","boundary","set_inner_rel","set collaborator"
"finite_product_relation","boundary","get_table","get collaborator"
"finite_product_relation","boundary","get_table_plugin","property collaborator"
"finite_product_relation","boundary","can_swap","predicate collaborator"
"finite_product_relation","boundary","get_plugin","property collaborator"
"finite_product_relation","boundary","is_table_column","get"
"finite_product_relation","boundary","get_table","get collaborator"
"finite_product_relation","boundary","get_inner_rel","property collaborator"
"finite_product_relation","boundary","reset","command"
"finite_product_relation","boundary","get_size_estimate_rows","unclassified"
"finite_product_relation","boundary","get_size_estimate_bytes","unclassified"
"finite_product_relation","boundary","finite_product_relation::finite_product_relation","copy-constructor"
"finite_product_relation","boundary","finite_product_relation::finite_product_relation","copy-constructor"
"finite_product_relation","boundary","finite_product_relation::swap","command collaborator"
"finite_product_relation","boundary","finite_product_relation::~finite_product_relation","destructor"
"finite_product_relation","boundary","finite_product_relation::get_context","property collaborator"
"finite_product_relation","boundary","finite_product_relation::get_next_rel_idx","unclassified"
"finite_product_relation","boundary","finite_product_relation::recycle_rel_idx","unclassified"
"finite_product_relation","boundary","finite_product_relation::get_full_rel_idx","get non-void-command collaborator"
"finite_product_relation","boundary","finite_product_relation::init","command"
"finite_product_relation","boundary","finite_product_relation::extract_table_fact","controller"
"finite_product_relation","boundary","finite_product_relation::extract_other_fact","collaborator"
"finite_product_relation","boundary","finite_product_relation::mk_empty_inner","property non-void-command collaborator"
"finite_product_relation","boundary","finite_product_relation::mk_full_inner","property non-void-command collaborator"
"finite_product_relation","boundary","finite_product_relation::add_fact","command collaborator"
"finite_product_relation","boundary","finite_product_relation::contains_fact","predicate collaborator"
"finite_product_relation","boundary","finite_product_relation::empty","predicate"
"finite_product_relation","boundary","finite_product_relation::clone","property wrapper"
"finite_product_relation","boundary","finite_product_relation::complement_self","command collaborator"
"finite_product_relation","boundary","finite_product_relation::complement","property collaborator"
"finite_product_relation","boundary","finite_product_relation::collect_live_relation_indexes","collaborator"
"finite_product_relation","boundary","finite_product_relation::garbage_collect","command"
"finite_product_relation","boundary","finite_product_relation::try_unify_specifications","controller stateless"
"finite_product_relation","boundary","finite_product_relation::try_modify_specification","predicate non-void-command"
"finite_product_relation","boundary","finite_product_relation::display","collaborator"
"finite_product_relation","boundary","finite_product_relation::display_tuples","collaborator"
"finite_product_relation","boundary","finite_product_relation::to_formula","collaborator"
"remove_obj_trail","commander small-class","remove_obj_trail","constructor"
"remove_obj_trail","commander small-class","undo","command"
"smt_printer","commander boundary","is_bool","predicate controller"
"smt_printer","commander boundary","is_bool","predicate non-void-command collaborator"
"smt_printer","commander boundary","is_proof","predicate controller"
"smt_printer","commander boundary","is_proof","predicate non-void-command collaborator"
"smt_printer","commander boundary","pp_id","command collaborator"
"smt_printer","commander boundary","pp_decl","command collaborator"
"smt_printer","commander boundary","is_sort_param","wrapper stateless"
"smt_printer","commander boundary","visit_params","command collaborator"
"smt_printer","commander boundary","is_auflira","predicate"
"smt_printer","commander boundary","visit_sort","command"
"smt_printer","commander boundary","display_rational","controller"
"smt_printer","commander boundary","pp_arg","command collaborator"
"smt_printer","commander boundary","visit_app","command collaborator"
"smt_printer","commander boundary","print_no_lets","wrapper"
"smt_printer","commander boundary","print_bound","collaborator"
"smt_printer","commander boundary","visit_quantifier","command collaborator"
"smt_printer","commander boundary","newline","unclassified"
"smt_printer","commander boundary","visit_var","command collaborator"
"smt_printer","commander boundary","pp_marked_expr","command collaborator"
"smt_printer","commander boundary","pp_expr","command collaborator"
"smt_printer","commander boundary","visit_expr","command collaborator"
"smt_printer","commander boundary","is_unit","predicate non-void-command collaborator"
"smt_printer","commander boundary","is_small","predicate non-void-command collaborator"
"smt_printer","commander boundary","is_small","predicate non-void-command"
"smt_printer","commander boundary","visit_children","predicate non-void-command collaborator"
"smt_printer","commander boundary","smt_printer","constructor"
"smt_printer","commander boundary","operator()","command collaborator"
"smt_printer","commander boundary","pp_dt","command collaborator"
"smt_printer","commander boundary","pp_sort_decl","command collaborator"
"smt_printer","commander boundary","operator()","command collaborator"
"smt_printer","commander boundary","operator()","command collaborator"
"smt_printer","commander boundary","visit_pred","command collaborator"
"proto_model","entity boundary","register_factory","command collaborator"
"proto_model","entity boundary","are_equal","predicate non-void-command collaborator"
"proto_model","entity boundary","is_false","predicate non-void-command collaborator"
"proto_model","entity boundary","operator()","property non-void-command collaborator"
"proto_model","entity boundary","proto_model::proto_model","constructor"
"proto_model","entity boundary","proto_model::register_aux_decl","command collaborator"
"proto_model","entity boundary","proto_model::register_aux_decl","command collaborator"
"proto_model","entity boundary","proto_model::reregister_decl","command collaborator"
"proto_model","entity boundary","proto_model::mk_some_interp_for","property non-void-command collaborator"
"proto_model","entity boundary","proto_model::eval","predicate non-void-command"
"proto_model","entity boundary","proto_model::cleanup_func_interp","command collaborator"
"proto_model","entity boundary","proto_model::cleanup_expr","property non-void-command collaborator"
"proto_model","entity boundary","proto_model::remove_aux_decls_not_in_set","void-accessor command collaborator"
"proto_model","entity boundary","proto_model::cleanup","command collaborator"
"proto_model","entity boundary","proto_model::get_factory","property non-void-command collaborator"
"proto_model","entity boundary","proto_model::freeze_universe","command collaborator"
"proto_model","entity boundary","proto_model::get_known_universe","property collaborator"
"proto_model","entity boundary","proto_model::get_universe","property collaborator"
"proto_model","entity boundary","proto_model::get_num_uninterpreted_sorts","unclassified"
"proto_model","entity boundary","proto_model::get_uninterpreted_sort","property collaborator"
"proto_model","entity boundary","proto_model::is_finite","predicate collaborator"
"proto_model","entity boundary","proto_model::get_some_value","property non-void-command collaborator"
"proto_model","entity boundary","proto_model::get_some_values","predicate non-void-command collaborator"
"proto_model","entity boundary","proto_model::get_fresh_value","property non-void-command collaborator"
"proto_model","entity boundary","proto_model::register_value","command collaborator"
"proto_model","entity boundary","proto_model::compress","command collaborator"
"proto_model","entity boundary","proto_model::complete_partial_func","command collaborator"
"proto_model","entity boundary","proto_model::complete_partial_funcs","command"
"proto_model","entity boundary","proto_model::mk_model","property non-void-command collaborator"
"compare_size_proc","boundary degenerate small-class","operator()","collaborator incidental"
"instr_io","entity boundary","instr_io","constructor"
"instr_io","entity boundary","perform","predicate non-void-command collaborator"
"instr_io","entity boundary","make_annotations","command collaborator"
"instr_io","entity boundary","display_head_impl","property collaborator"
"instr_select_equal_and_project","unclassified","instr_select_equal_and_project","constructor"
"instr_select_equal_and_project","unclassified","perform","predicate non-void-command collaborator"
"instr_select_equal_and_project","unclassified","display_head_impl","property controller"
"instr_select_equal_and_project","unclassified","make_annotations","controller"
"instr_dealloc","unclassified","instr_dealloc","constructor"
"instr_dealloc","unclassified","perform","predicate controller"
"instr_dealloc","unclassified","make_annotations","controller"
"instr_dealloc","unclassified","display_head_impl","property collaborator"
"bit_matrix::report","empty","~report","destructor"
"solver2smt2_pp","commander boundary","solver2smt2_pp::assert_expr","command collaborator"
"solver2smt2_pp","commander boundary","solver2smt2_pp::assert_expr","command collaborator"
"solver2smt2_pp","commander boundary","solver2smt2_pp::push","command"
"solver2smt2_pp","commander boundary","solver2smt2_pp::pop","command"
"solver2smt2_pp","commander boundary","solver2smt2_pp::reset","command"
"solver2smt2_pp","commander boundary","solver2smt2_pp::check","command collaborator"
"solver2smt2_pp","commander boundary","solver2smt2_pp::get_consequences","command collaborator"
"solver2smt2_pp","commander boundary","solver2smt2_pp::solver2smt2_pp","constructor"
"theory_arith<Ext>::gomory_cut_justification","boundary degenerate small-class","get_from_theory","collaborator incidental"
"instr_join","unclassified","instr_join","constructor"
"instr_join","unclassified","perform","predicate non-void-command collaborator"
"instr_join","unclassified","make_annotations","controller"
"instr_join","unclassified","display_head_impl","property wrapper"
"instr_filter_interpreted_and_project","entity boundary","instr_filter_interpreted_and_project","constructor"
"instr_filter_interpreted_and_project","entity boundary","perform","predicate non-void-command collaborator"
"instr_filter_interpreted_and_project","entity boundary","display_head_impl","property collaborator"
"instr_filter_interpreted_and_project","entity boundary","make_annotations","command collaborator"
"instr_join_project","unclassified","instr_join_project","constructor"
"instr_join_project","unclassified","perform","predicate non-void-command collaborator"
"instr_join_project","unclassified","display_head_impl","property controller"
"instr_join_project","unclassified","make_annotations","controller"
"quant_elim_plugin","entity boundary","quant_elim_plugin","constructor"
"quant_elim_plugin","entity boundary","~quant_elim_plugin","destructor"
"quant_elim_plugin","entity boundary","reset","command"
"quant_elim_plugin","entity boundary","add_plugin","command collaborator"
"quant_elim_plugin","entity boundary","check","void-accessor command collaborator"
"quant_elim_plugin","entity boundary","collect_statistics","command collaborator"
"quant_elim_plugin","entity boundary","final_check","property non-void-command collaborator"
"quant_elim_plugin","entity boundary","get_manager","get collaborator"
"quant_elim_plugin","entity boundary","pos_atoms","property collaborator"
"quant_elim_plugin","entity boundary","neg_atoms","property collaborator"
"quant_elim_plugin","entity boundary","get_num_vars","unclassified"
"quant_elim_plugin","entity boundary","get_var","property collaborator"
"quant_elim_plugin","entity boundary","get_vars","property collaborator"
"quant_elim_plugin","entity boundary","contains","property non-void-command collaborator"
"quant_elim_plugin","entity boundary","elim_var","command collaborator"
"quant_elim_plugin","entity boundary","add_var","command collaborator"
"quant_elim_plugin","entity boundary","add_constraint","command collaborator"
"quant_elim_plugin","entity boundary","blast_or","command collaborator"
"quant_elim_plugin","entity boundary","eliminate_exists","property non-void-command collaborator"
"quant_elim_plugin","entity boundary","add_literal","command collaborator"
"quant_elim_plugin","entity boundary","get_max_relevant","void-accessor command collaborator"
"quant_elim_plugin","entity boundary","get_branch_id","get collaborator"
"quant_elim_plugin","entity boundary","extract_partition","predicate non-void-command collaborator"
"quant_elim_plugin","entity boundary","update_current","property non-void-command collaborator"
"quant_elim_plugin","entity boundary","pop","command collaborator"
"quant_elim_plugin","entity boundary","normalize","command collaborator"
"quant_elim_plugin","entity boundary","normalize","command collaborator"
"quant_elim_plugin","entity boundary","get_propagate_value","predicate non-void-command collaborator"
"quant_elim_plugin","entity boundary","can_propagate_assignment","predicate non-void-command collaborator"
"quant_elim_plugin","entity boundary","propagate_assignment","command collaborator"
"quant_elim_plugin","entity boundary","eval","predicate non-void-command collaborator"
"quant_elim_plugin","entity boundary","mk_eq_value","property non-void-command collaborator"
"quant_elim_plugin","entity boundary","is_eq_value","predicate non-void-command collaborator"
"quant_elim_plugin","entity boundary","block_assignment","wrapper stateless"
"quant_elim_plugin","entity boundary","constrain_assignment","command collaborator"
"quant_elim_plugin","entity boundary","process_partition","command collaborator"
"quant_elim_plugin","entity boundary","contains","get collaborator"
"quant_elim_plugin","entity boundary","find_min_weight","predicate non-void-command collaborator"
"quant_elim_plugin","entity boundary","solve_vars","command collaborator"
"instr_mark_saturated","entity boundary","instr_mark_saturated","constructor"
"instr_mark_saturated","entity boundary","perform","predicate non-void-command collaborator"
"instr_mark_saturated","entity boundary","display_head_impl","property collaborator"
"instr_mark_saturated","entity boundary","make_annotations","empty"
"simplify::imp","commander boundary","operator()","command"
"simplify::imp","commander boundary","simplify_literals","command collaborator"
"simplify::imp","commander boundary","update_clauses","command collaborator"
"simplify::imp","commander boundary","split_factors","command collaborator"
"simplify::imp","commander boundary","elim_uncnstr","predicate non-void-command"
"instr_assert_signature","unclassified","instr_assert_signature","constructor"
"instr_assert_signature","unclassified","perform","predicate non-void-command collaborator"
"instr_assert_signature","unclassified","display_head_impl","property wrapper"
"instr_assert_signature","unclassified","make_annotations","controller"
"ss_frame_stack","empty","ss_frame_stack","constructor"
"ss_frame_stack","empty","~ss_frame_stack","destructor"
"execution_context","boundary","reg","get property collaborator"
"execution_context","boundary","release_reg","property set collaborator"
"execution_context","boundary","set_reg","command collaborator"
"execution_context","boundary","make_empty","command collaborator"
"execution_context","boundary","register_count","unclassified"
"execution_context","boundary","get_register_annotation","predicate"
"execution_context","boundary","set_register_annotation","command"
"execution_context","boundary","execution_context::execution_context","constructor"
"execution_context","boundary","execution_context::~execution_context","destructor"
"execution_context","boundary","execution_context::reset","command collaborator"
"execution_context","boundary","execution_context::get_rel_context","property non-void-command collaborator"
"execution_context","boundary","execution_context::get_rel_context","property collaborator"
"execution_context","boundary","execution_context::report_big_relations","collaborator"
"execution_context","boundary","execution_context::set_timelimit","command"
"execution_context","boundary","execution_context::reset_timelimit","command"
"execution_context","boundary","execution_context::should_terminate","predicate non-void-command"
"execution_context","boundary","execution_context::collect_statistics","controller"
"expr_dominators","boundary","add_edge","controller stateless"
"expr_dominators","boundary","expr_dominators","constructor"
"expr_dominators","boundary","get_tree","get collaborator"
"expr_dominators","boundary","idom","get collaborator"
"expr_dominators","boundary","expr_dominators::compute_post_order","command collaborator"
"expr_dominators","boundary","expr_dominators::intersect","property wrapper"
"expr_dominators","boundary","expr_dominators::compute_dominators","predicate non-void-command collaborator"
"expr_dominators","boundary","expr_dominators::extract_tree","command collaborator"
"expr_dominators","boundary","expr_dominators::compile","predicate non-void-command collaborator"
"expr_dominators","boundary","expr_dominators::compile","predicate non-void-command collaborator"
"expr_dominators","boundary","expr_dominators::reset","command"
"expr_dominators","boundary","expr_dominators::display","property non-void-command collaborator"
"expr_dominators","boundary","expr_dominators::display","property non-void-command collaborator"
"sem_matcher","unclassified","sem_matcher::sem_matcher","constructor"
"sem_matcher","unclassified","sem_matcher::match_var","predicate non-void-command collaborator"
"sem_matcher","unclassified","sem_matcher::operator()","predicate non-void-command"
"sem_matcher","unclassified","sem_matcher::reset","command"
"mi_ext","pure-controller degenerate small-class","fractional_part","controller stateless"
"mi_ext","pure-controller degenerate small-class","mi_ext","constructor"
"instruction","entity boundary degenerate","find_fn","predicate collaborator"
"instruction","entity boundary degenerate","find_fn","predicate collaborator"
"instruction","entity boundary degenerate","find_fn","predicate collaborator"
"instruction","entity boundary degenerate","store_fn","command collaborator"
"instruction","entity boundary degenerate","store_fn","command collaborator"
"instruction","entity boundary degenerate","store_fn","command collaborator"
"instruction","entity boundary degenerate","display_head_impl","collaborator incidental"
"instruction","entity boundary degenerate","display_body_impl","empty"
"instruction","entity boundary degenerate","display","collaborator"
"instruction","entity boundary degenerate","is_init","predicate"
"instruction","entity boundary degenerate","is_init","predicate"
"instruction","entity boundary degenerate","instruction::~instruction","destructor"
"instruction","entity boundary degenerate","instruction::process_all_costs","command"
"instruction","entity boundary degenerate","instruction::collect_statistics","collaborator"
"instruction","entity boundary degenerate","instruction::display_indented","collaborator"
"instruction","entity boundary degenerate","instruction::log_verbose","collaborator incidental"
"instruction","entity boundary degenerate","instruction::mk_load","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_store","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_dealloc","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_clone","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_move","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_while_loop","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_join","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_filter_equal","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_filter_identical","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_filter_interpreted","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_filter_interpreted_and_project","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_union","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_widen","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_projection","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_rename","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_join_project","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_select_equal_and_project","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_filter_by_negation","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_unary_singleton","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_total","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_mark_saturated","wrapper stateless"
"instruction","entity boundary degenerate","instruction::mk_assert_signature","wrapper stateless"
"interval_relation_plugin::project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"interval_relation_plugin::rename_fn","pure-controller degenerate small-class","operator()","controller stateless"
"interval_relation_plugin::filter_equal_fn","pure-controller small-class","operator()","controller"
"lazy_table_plugin::join_fn","pure-controller degenerate small-class","operator()","controller stateless"
"lazy_table_plugin::union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"lazy_table_plugin::project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"num_consts_probe","controller small-class","operator()","property controller"
"seq_axioms","entity commander boundary","mk_eq_empty","wrapper stateless"
"seq_axioms","entity commander boundary","ctx","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_seq_eq","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_concat","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_concat","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_nth","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_ge_e","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_le_e","property non-void-command collaborator"
"seq_axioms","entity commander boundary","add_axiom","wrapper stateless"
"seq_axioms","entity commander boundary","add_suffix_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_prefix_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_extract_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_indexof_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_last_indexof_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_replace_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_replace_all_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_at_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_nth_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_itos_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_stoi_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_stoi_axiom","command"
"seq_axioms","entity commander boundary","add_itos_axiom","command"
"seq_axioms","entity commander boundary","add_ubv2s_axiom","command"
"seq_axioms","entity commander boundary","add_ubv2s_len_axiom","command"
"seq_axioms","entity commander boundary","add_ubv2s_len_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_ubv2ch_axioms","command collaborator"
"seq_axioms","entity commander boundary","add_lt_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_le_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_is_digit_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_str_to_code_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_str_from_code_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_unit_axiom","command collaborator"
"seq_axioms","entity commander boundary","add_length_axiom","command collaborator"
"seq_axioms","entity commander boundary","unroll_not_contains","command collaborator"
"seq_axioms","entity commander boundary","is_digit","property non-void-command collaborator"
"seq_axioms","entity commander boundary","add_length_limit","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_ge","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_le","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_ge","property non-void-command collaborator"
"seq_axioms","entity commander boundary","mk_le","property non-void-command collaborator"
"seq_axioms","entity commander boundary","ax","get collaborator"
"seq_axioms","entity commander boundary","seq_axioms::seq_axioms","constructor"
"seq_axioms","entity commander boundary","seq_axioms::mk_eq","property non-void-command collaborator"
"seq_axioms","entity commander boundary","seq_axioms::mk_sub","property non-void-command collaborator"
"seq_axioms","entity commander boundary","seq_axioms::mk_len","property non-void-command collaborator"
"seq_axioms","entity commander boundary","seq_axioms::mk_literal","property non-void-command collaborator"
"seq_axioms","entity commander boundary","seq_axioms::set_phase","command collaborator"
"seq_axioms","entity commander boundary","seq_axioms::add_clause","command collaborator"
"seq_axioms","entity commander boundary","seq_axioms::ensure_digit_axiom","command collaborator"
"special_relations_tactic","commander boundary","updt_params","command collaborator"
"special_relations_tactic","commander boundary","collect_param_descrs","empty"
"special_relations_tactic","commander boundary","cleanup","empty"
"special_relations_tactic","commander boundary","translate","property wrapper"
"special_relations_tactic","commander boundary","name","incidental"
"special_relations_tactic","commander boundary","special_relations_tactic::collect_feature","command collaborator"
"special_relations_tactic","commander boundary","special_relations_tactic::insert","controller stateless"
"special_relations_tactic","commander boundary","special_relations_tactic::initialize","command collaborator"
"special_relations_tactic","commander boundary","special_relations_tactic::register_pattern","command collaborator"
"special_relations_tactic","commander boundary","special_relations_tactic::operator()","command collaborator"
"linear_eq_solver","commander","linear_eq_solver","constructor"
"linear_eq_solver","commander","~linear_eq_solver","destructor"
"linear_eq_solver","commander","flush","command"
"linear_eq_solver","commander","resize","command"
"linear_eq_solver","commander","reset","command"
"linear_eq_solver","commander","add","command collaborator"
"linear_eq_solver","commander","solve","predicate non-void-command collaborator"
"linear_eq_solver","commander","display","collaborator"
"finite_product_relation_plugin::converting_join_fn","entity boundary small-class","convert","property non-void-command collaborator"
"finite_product_relation_plugin::converting_join_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"int_gcd_test","entity boundary","is_visited","predicate non-void-command"
"int_gcd_test","entity boundary","mark_visited","command"
"int_gcd_test","entity boundary","int_gcd_test::int_gcd_test","constructor"
"int_gcd_test","entity boundary","int_gcd_test::should_apply","predicate non-void-command"
"int_gcd_test","entity boundary","int_gcd_test::operator()","property non-void-command collaborator"
"int_gcd_test","entity boundary","int_gcd_test::gcd_test","predicate non-void-command"
"int_gcd_test","entity boundary","int_gcd_test::gcd_test_for_row","predicate non-void-command collaborator"
"int_gcd_test","entity boundary","int_gcd_test::ext_gcd_test","predicate non-void-command collaborator"
"int_gcd_test","entity boundary","int_gcd_test::fill_explanation_from_fixed_columns","command collaborator"
"int_gcd_test","entity boundary","int_gcd_test::add_to_explanation_from_fixed_or_boxed_column","command collaborator"
"int_gcd_test","entity boundary","int_gcd_test::accumulate_parity","predicate non-void-command collaborator"
"int_gcd_test","entity boundary","int_gcd_test::reset_test","command collaborator"
"int_gcd_test","entity boundary","int_gcd_test::insert_parity","predicate non-void-command collaborator"
"lazy_table_plugin::rename_fn","pure-controller degenerate small-class","operator()","controller stateless"
"theory_user_propagator","commander boundary","var2expr","controller stateless"
"theory_user_propagator","commander boundary","expr2var","get non-void-command collaborator"
"theory_user_propagator","commander boundary","check_defined","command collaborator"
"theory_user_propagator","commander boundary","add","command collaborator"
"theory_user_propagator","commander boundary","register_final","set collaborator"
"theory_user_propagator","commander boundary","register_fixed","set collaborator"
"theory_user_propagator","commander boundary","register_eq","set collaborator"
"theory_user_propagator","commander boundary","register_diseq","set collaborator"
"theory_user_propagator","commander boundary","register_created","set collaborator"
"theory_user_propagator","commander boundary","register_decide","set collaborator"
"theory_user_propagator","commander boundary","has_fixed","predicate"
"theory_user_propagator","commander boundary","get_name","incidental"
"theory_user_propagator","commander boundary","new_eq_eh","command collaborator"
"theory_user_propagator","commander boundary","new_diseq_eh","command collaborator"
"theory_user_propagator","commander boundary","use_diseqs","predicate"
"theory_user_propagator","commander boundary","build_models","incidental"
"theory_user_propagator","commander boundary","reset_eh","empty"
"theory_user_propagator","commander boundary","assign_eh","empty"
"theory_user_propagator","commander boundary","init_search_eh","empty"
"theory_user_propagator","commander boundary","restart_eh","empty"
"theory_user_propagator","commander boundary","mk_value","collaborator incidental"
"theory_user_propagator","commander boundary","init_model","empty"
"theory_user_propagator","commander boundary","include_func_interp","collaborator incidental"
"theory_user_propagator","commander boundary","display","empty"
"theory_user_propagator","commander boundary","theory_user_propagator::theory_user_propagator","constructor"
"theory_user_propagator","commander boundary","theory_user_propagator::~theory_user_propagator","destructor"
"theory_user_propagator","commander boundary","theory_user_propagator::force_push","command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::add_expr","command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::propagate_cb","predicate non-void-command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::register_cb","command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::next_split_cb","predicate non-void-command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::mk_fresh","property controller"
"theory_user_propagator","commander boundary","theory_user_propagator::final_check_eh","property non-void-command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::new_fixed_eh","command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::enode_to_bool","property non-void-command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::decide","void-accessor command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::get_case_split","predicate non-void-command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::push_scope_eh","set"
"theory_user_propagator","commander boundary","theory_user_propagator::pop_scope_eh","command"
"theory_user_propagator","commander boundary","theory_user_propagator::can_propagate","predicate non-void-command"
"theory_user_propagator","commander boundary","theory_user_propagator::propagate_consequence","command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::propagate_new_fixed","command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::propagate","command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::replay_clause","command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::internalize_atom","predicate non-void-command"
"theory_user_propagator","commander boundary","theory_user_propagator::internalize_term","predicate non-void-command collaborator"
"theory_user_propagator","commander boundary","theory_user_propagator::collect_statistics","collaborator"
"lazy_table_plugin::filter_identical_fn","commander boundary small-class","operator()","command collaborator"
"ackr_model_converter","commander boundary","ackr_model_converter","constructor"
"ackr_model_converter","commander boundary","ackr_model_converter","constructor"
"ackr_model_converter","commander boundary","get_units","controller stateless"
"ackr_model_converter","commander boundary","operator()","void-accessor command collaborator"
"ackr_model_converter","commander boundary","translate","property non-void-command collaborator"
"ackr_model_converter","commander boundary","display","collaborator"
"ackr_model_converter","commander boundary","ackr_model_converter::convert","command collaborator"
"ackr_model_converter","commander boundary","ackr_model_converter::convert_constants","command collaborator"
"ackr_model_converter","commander boundary","ackr_model_converter::add_entry","command collaborator"
"ackr_model_converter","commander boundary","ackr_model_converter::add_entry","command collaborator"
"lazy_table_plugin::filter_interpreted_fn","pure-controller small-class","operator()","controller"
"hilbert_basis::passive","entity boundary","sum_abs","property collaborator"
"hilbert_basis::passive","entity boundary","reset","command"
"hilbert_basis::passive","entity boundary","empty","predicate"
"hilbert_basis::passive","entity boundary","pop","property non-void-command collaborator"
"hilbert_basis::passive","entity boundary","insert","command collaborator"
"hilbert_basis::passive","entity boundary","begin","property wrapper"
"hilbert_basis::passive","entity boundary","end","property non-void-command collaborator"
"hilbert_basis::passive","entity boundary","operator()","predicate collaborator"
"check_sat_tactic_result","small-class","check_sat_tactic_result","constructor"
"check_sat_tactic_result","small-class","get_labels","controller"
"check_sat_tactic_result","small-class","add_labels","command collaborator"
"goal_dependency_converter","unclassified","goal_dependency_converter","constructor"
"goal_dependency_converter","unclassified","operator()","property non-void-command collaborator"
"goal_dependency_converter","unclassified","translate","property controller"
"goal_dependency_converter","unclassified","display","collaborator incidental"
"lazy_table_plugin::filter_equal_fn","pure-controller small-class","operator()","controller"
"lazy_table_plugin","boundary degenerate","can_handle_signature","predicate non-void-command collaborator"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_name","controller stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_empty","property non-void-command collaborator"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::get","collaborator incidental"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::get","collaborator incidental"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::get","collaborator incidental"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::get","collaborator incidental"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_join_fn","controller stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_union_fn","wrapper stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_project_fn","controller stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_rename_fn","controller stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_filter_identical_fn","wrapper stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_filter_interpreted_fn","wrapper stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_filter_by_negation_fn","wrapper stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_filter_equal_fn","wrapper stateless"
"lazy_table_plugin","boundary degenerate","lazy_table_plugin::mk_sparse","controller stateless"
"datatype_project_plugin::imp","entity boundary","solve","predicate non-void-command collaborator"
"datatype_project_plugin::imp","entity boundary","operator()","predicate non-void-command collaborator"
"datatype_project_plugin::imp","entity boundary","project_nonrec","command collaborator"
"datatype_project_plugin::imp","entity boundary","project_rec","command collaborator"
"datatype_project_plugin::imp","entity boundary","reduce","void-accessor command collaborator"
"datatype_project_plugin::imp","entity boundary","contains_x","wrapper stateless"
"datatype_project_plugin::imp","entity boundary","solve","predicate non-void-command collaborator"
"datatype_project_plugin::imp","entity boundary","solve","predicate non-void-command collaborator"
"datatype_project_plugin::imp","entity boundary","access","property non-void-command collaborator"
"datatype_project_plugin::imp","entity boundary","lift_foreign","predicate non-void-command collaborator"
"datatype_project_plugin::imp","entity boundary","reduce_eq","predicate non-void-command collaborator"
"datatype_project_plugin::imp","entity boundary","contains_foreign","predicate non-void-command collaborator"
"pp_lits","empty","pp_lits","constructor"
"pp_lits","empty","pp_lits","constructor"
"context::is_fd","commander boundary degenerate","operator()","wrapper stateless"
"context::is_fd","commander boundary degenerate","operator()","wrapper stateless"
"context::is_fd","commander boundary degenerate","operator()","command collaborator"
"lazy_table","entity boundary","lazy_table","copy-constructor"
"lazy_table","entity boundary","get_lplugin","wrapper stateless"
"lazy_table","entity boundary","get_size_estimate_rows","incidental"
"lazy_table","entity boundary","get_size_estimate_bytes","incidental"
"lazy_table","entity boundary","knows_exact_size","incidental"
"lazy_table","entity boundary","get_ref","property collaborator"
"lazy_table","entity boundary","set","set collaborator"
"lazy_table","entity boundary","lazy_table::clone","property collaborator"
"lazy_table","entity boundary","lazy_table::complement","property collaborator"
"lazy_table","entity boundary","lazy_table::empty","predicate"
"lazy_table","entity boundary","lazy_table::contains_fact","predicate collaborator"
"lazy_table","entity boundary","lazy_table::remove_fact","command collaborator"
"lazy_table","entity boundary","lazy_table::remove_facts","command collaborator"
"lazy_table","entity boundary","lazy_table::remove_facts","command collaborator"
"lazy_table","entity boundary","lazy_table::reset","command"
"lazy_table","entity boundary","lazy_table::add_fact","command collaborator"
"lazy_table","entity boundary","lazy_table::begin","property collaborator"
"lazy_table","entity boundary","lazy_table::end","property collaborator"
"lazy_table","entity boundary","lazy_table::eval","property collaborator"
"relation_manager::default_table_negation_filter_fn","data-provider boundary small-class","should_remove","predicate collaborator"
"relation_manager::default_table_negation_filter_fn","data-provider boundary small-class","operator()","wrapper"
"lazy_table_project","entity data-provider boundary","lazy_table_project","constructor"
"lazy_table_project","entity data-provider boundary","kind","collaborator incidental"
"lazy_table_project","entity data-provider boundary","cols","get collaborator"
"lazy_table_project","entity data-provider boundary","src","property collaborator"
"lazy_table_project","entity data-provider boundary","lazy_table_project::force","property non-void-command collaborator"
"theory_seq_empty","degenerate","final_check_eh","property collaborator"
"theory_seq_empty","degenerate","internalize_atom","predicate set"
"theory_seq_empty","degenerate","internalize_term","predicate non-void-command"
"theory_seq_empty","degenerate","new_eq_eh","empty"
"theory_seq_empty","degenerate","new_diseq_eh","empty"
"theory_seq_empty","degenerate","mk_fresh","wrapper stateless"
"theory_seq_empty","degenerate","get_name","incidental"
"theory_seq_empty","degenerate","display","empty"
"theory_seq_empty","degenerate","theory_seq_empty","constructor"
"theory_seq_empty","degenerate","init_model","command collaborator"
"bv_bound_chk_tactic","commander boundary","name","incidental"
"bv_bound_chk_tactic","commander boundary","bv_bound_chk_tactic::bv_bound_chk_tactic","constructor"
"bv_bound_chk_tactic","commander boundary","bv_bound_chk_tactic::~bv_bound_chk_tactic","destructor"
"bv_bound_chk_tactic","commander boundary","bv_bound_chk_tactic::operator()","controller stateless"
"bv_bound_chk_tactic","commander boundary","bv_bound_chk_tactic::translate","property wrapper"
"bv_bound_chk_tactic","commander boundary","bv_bound_chk_tactic::updt_params","command collaborator"
"bv_bound_chk_tactic","commander boundary","bv_bound_chk_tactic::cleanup","command collaborator"
"bv_bound_chk_tactic","commander boundary","bv_bound_chk_tactic::collect_statistics","collaborator"
"bv_bound_chk_tactic","commander boundary","bv_bound_chk_tactic::reset_statistics","command"
"lazy_table_filter_interpreted","entity data-provider boundary","lazy_table_filter_interpreted","constructor"
"lazy_table_filter_interpreted","entity data-provider boundary","kind","collaborator incidental"
"lazy_table_filter_interpreted","entity data-provider boundary","condition","get collaborator"
"lazy_table_filter_interpreted","entity data-provider boundary","src","property collaborator"
"lazy_table_filter_interpreted","entity data-provider boundary","lazy_table_filter_interpreted::force","property non-void-command collaborator"
"if_no_models_tactical","degenerate","if_no_models_tactical","constructor"
"if_no_models_tactical","degenerate","name","incidental"
"if_no_models_tactical","degenerate","operator()","controller stateless"
"if_no_models_tactical","degenerate","translate","wrapper stateless"
"lazy_table_filter_by_negation","entity data-provider boundary","lazy_table_filter_by_negation","constructor"
"lazy_table_filter_by_negation","entity data-provider boundary","kind","collaborator incidental"
"lazy_table_filter_by_negation","entity data-provider boundary","tgt","property collaborator"
"lazy_table_filter_by_negation","entity data-provider boundary","src","property collaborator"
"lazy_table_filter_by_negation","entity data-provider boundary","cols1","get collaborator"
"lazy_table_filter_by_negation","entity data-provider boundary","cols2","get collaborator"
"lazy_table_filter_by_negation","entity data-provider boundary","lazy_table_filter_by_negation::force","property non-void-command collaborator"
"explanation_relation_plugin::project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"explanation_relation_plugin::rename_fn","pure-controller degenerate small-class","operator()","controller stateless"
"explanation_relation_plugin::foreign_union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"conj_enum","entity boundary","begin","property wrapper"
"conj_enum","entity boundary","end","property wrapper"
"conj_enum","entity boundary","conj_enum::conj_enum","constructor"
"conj_enum","entity boundary","conj_enum::extract_equalities","command collaborator"
"explanation_relation_plugin::negation_filter_fn","pure-controller degenerate small-class","operator()","controller stateless"
"explanation_relation_plugin::intersection_filter_fn","commander boundary small-class","operator()","command collaborator"
"mk_explanations","boundary","get_union_decl","property collaborator"
"mk_explanations","boundary","mk_explanations::mk_explanations","constructor"
"mk_explanations","boundary","mk_explanations::~mk_explanations","destructor"
"mk_explanations","boundary","mk_explanations::get_union_decl","controller stateless"
"mk_explanations","boundary","mk_explanations::assign_rel_level_kind","command collaborator"
"mk_explanations","boundary","mk_explanations::get_e_decl","property non-void-command collaborator"
"mk_explanations","boundary","mk_explanations::get_e_lit","property non-void-command collaborator"
"mk_explanations","boundary","mk_explanations::get_rule_symbol","property controller"
"mk_explanations","boundary","mk_explanations::get_e_rule","property non-void-command collaborator"
"mk_explanations","boundary","mk_explanations::transform_rules","command collaborator"
"mk_explanations","boundary","mk_explanations::translate_rel_level_relation","controller"
"mk_explanations","boundary","mk_explanations::transform_facts","command collaborator"
"mk_explanations","boundary","mk_explanations::operator()","property non-void-command collaborator"
"const_info","data-provider","const_info","constructor"
"const_info","data-provider","tail_index","get"
"const_info","data-provider","arg_index","get"
"const_info","data-provider","has_parent","get"
"const_info","data-provider","parent_index","get"
"const_info","data-provider","set_parent_index","command"
"arg_ignoring_comparator","data-provider boundary small-class","arg_ignoring_comparator","constructor"
"arg_ignoring_comparator","data-provider boundary small-class","operator()","predicate wrapper"
"arg_ignoring_comparator","data-provider boundary small-class","eq","predicate wrapper"
"z3_error","data-provider small-class","z3_error::z3_error","constructor"
"z3_error","data-provider small-class","z3_error::msg","property"
"z3_error","data-provider small-class","z3_error::error_code","get"
"mk_similarity_compressor","entity commander boundary","mk_similarity_compressor::mk_similarity_compressor","constructor"
"mk_similarity_compressor","entity commander boundary","mk_similarity_compressor::reset","command"
"mk_similarity_compressor","entity commander boundary","mk_similarity_compressor::merge_class","command collaborator"
"mk_similarity_compressor","entity commander boundary","mk_similarity_compressor::process_class","command collaborator"
"mk_similarity_compressor","entity commander boundary","mk_similarity_compressor::operator()","property non-void-command collaborator"
"mk_simple_joins","controller small-class","mk_simple_joins::mk_simple_joins","constructor"
"mk_simple_joins","controller small-class","mk_simple_joins::operator()","property controller"
"lemma_inductive_generalizer","commander","is_eligible","predicate non-void-command collaborator"
"lemma_inductive_generalizer","commander","has_arrays","wrapper stateless"
"lemma_inductive_generalizer","commander","reset","command"
"lemma_inductive_generalizer","commander","setup","command collaborator"
"lemma_inductive_generalizer","commander","load_cube_to_core","command"
"lemma_inductive_generalizer","commander","is_cube_inductive","predicate non-void-command"
"lemma_inductive_generalizer","commander","update_cube_by_core","non-void-command"
"lemma_inductive_generalizer","commander","generalize_core","non-void-command"
"lemma_inductive_generalizer","commander","generalize1","non-void-command"
"lemma_inductive_generalizer","commander","generalize_range","non-void-command"
"lemma_inductive_generalizer","commander","weaken1","non-void-command collaborator"
"lemma_inductive_generalizer","commander","weaken_range","non-void-command"
"lemma_inductive_generalizer","commander","operator()","command collaborator"
"lemma_inductive_generalizer","commander","collect_statistics","collaborator"
"lemma_inductive_generalizer","commander","reset_statistics","command"
"product_relation_plugin::join_fn","boundary","get_nonsieve_relation","controller stateless"
"product_relation_plugin::join_fn","boundary","get_nonsieve_plugin","property non-void-command collaborator"
"product_relation_plugin::join_fn","boundary","get_nonsieve_kind","property non-void-command collaborator"
"product_relation_plugin::join_fn","boundary","is_tableish_relation","predicate non-void-command collaborator"
"product_relation_plugin::join_fn","boundary","get_full_tableish_relation","property non-void-command collaborator"
"product_relation_plugin::join_fn","boundary","init","command collaborator"
"product_relation_plugin::join_fn","boundary","access","wrapper stateless"
"product_relation_plugin::join_fn","boundary","~join_fn","destructor"
"product_relation_plugin::join_fn","boundary","operator()","property non-void-command collaborator"
"demodulator_rewriter_tactic","boundary","demodulator_rewriter_tactic","constructor"
"demodulator_rewriter_tactic","boundary","name","incidental"
"demodulator_rewriter_tactic","boundary","translate","property wrapper"
"demodulator_rewriter_tactic","boundary","updt_params","command collaborator"
"demodulator_rewriter_tactic","boundary","collect_param_descrs","wrapper stateless"
"demodulator_rewriter_tactic","boundary","operator()","controller"
"demodulator_rewriter_tactic","boundary","cleanup","empty"
"product_relation_plugin::mutator_fn","commander boundary small-class","~mutator_fn","destructor"
"product_relation_plugin::mutator_fn","commander boundary small-class","operator()","command collaborator"
"array_rewriter","entity boundary","array_rewriter","constructor"
"array_rewriter","entity boundary","m","property collaborator"
"array_rewriter","entity boundary","get_fid","property collaborator"
"array_rewriter","entity boundary","util","get collaborator"
"array_rewriter","entity boundary","set_expand_select_store","set"
"array_rewriter","entity boundary","set_expand_select_ite","set"
"array_rewriter","entity boundary","mk_set_difference","property non-void-command collaborator"
"array_rewriter","entity boundary","mk_set_intersect","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::updt_params","command collaborator"
"array_rewriter","entity boundary","array_rewriter::get_param_descrs","wrapper stateless"
"array_rewriter","entity boundary","array_rewriter::mk_app_core","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::compare_args","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_store_core","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::squash_store","predicate non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_select_same_store","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_select_core","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::get_map_array_sort","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_map_core","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_store","void-accessor command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_select","void-accessor command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_map","void-accessor command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_set_union","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_set_intersect","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_set_complement","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_set_difference","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_set_subset","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_eq","void-accessor command collaborator"
"array_rewriter","entity boundary","array_rewriter::has_index_set","predicate non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::add_store","predicate non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::is_expandable_store","predicate non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::expand_store","property non-void-command collaborator"
"array_rewriter","entity boundary","array_rewriter::mk_eq_core","property non-void-command collaborator"
"cut_set","boundary","cut_set","constructor"
"cut_set","boundary","var","get"
"cut_set","boundary","size","get"
"cut_set","boundary","begin","get collaborator"
"cut_set","boundary","end","property collaborator"
"cut_set","boundary","back","get collaborator"
"cut_set","boundary","reset","command collaborator"
"cut_set","boundary","operator[]","get collaborator"
"cut_set","boundary","swap","wrapper"
"cut_set","boundary","cut_set::insert","predicate non-void-command collaborator"
"cut_set","boundary","cut_set::no_duplicates","predicate controller"
"cut_set","boundary","cut_set::display","property controller"
"cut_set","boundary","cut_set::shrink","set"
"cut_set","boundary","cut_set::push_back","command collaborator"
"cut_set","boundary","cut_set::evict","command collaborator"
"cut_set","boundary","cut_set::evict","command"
"cut_set","boundary","cut_set::init","command"
"relation_manager::default_relation_filter_interpreted_and_project_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"var_abs_rewriter","unclassified","var_abs_rewriter","constructor"
"var_abs_rewriter","unclassified","reset","set"
"var_abs_rewriter","unclassified","pre_visit","predicate non-void-command collaborator"
"var_abs_rewriter","unclassified","reduce_app","property non-void-command collaborator"
"var_abs_rewriter","unclassified","cache_all_results","incidental"
"var_abs_rewriter","unclassified","cache_results","incidental"
"var_abs_rewriter","unclassified","get_subst","predicate non-void-command collaborator"
"relation_manager::null_signature_table_project_fn","controller small-class","operator()","property controller"
"relation_manager::default_table_rename_fn","entity boundary","get_result_signature","property collaborator"
"relation_manager::default_table_rename_fn","entity boundary","modify_fact","wrapper stateless"
"relation_manager::default_table_rename_fn","entity boundary","operator()","property non-void-command collaborator"
"path","empty","path","copy-constructor"
"path","empty","path","copy-constructor"
"relation_manager::auxiliary_table_filter_fn","commander boundary small-class","operator()","command collaborator"
"smt_params","commander","smt_params","constructor"
"smt_params","commander","smt_params::updt_local_params","command collaborator"
"smt_params","commander","smt_params::updt_params","command collaborator"
"smt_params","commander","smt_params::updt_params","command collaborator"
"smt_params","commander","smt_params::display","collaborator"
"smt_params","commander","smt_params::validate_string_solver","wrapper stateless"
"smt_params","commander","smt_params::setup_QF_UF","command"
"smt_params","commander","smt_params::setup_QF_RDL","command"
"smt_params","commander","smt_params::setup_QF_RDL","empty"
"smt_params","commander","smt_params::setup_QF_IDL","command"
"smt_params","commander","smt_params::setup_QF_IDL","empty"
"smt_params","commander","smt_params::setup_QF_LRA","command"
"smt_params","commander","smt_params::setup_QF_LRA","command collaborator"
"smt_params","commander","smt_params::setup_QF_LIA","command"
"smt_params","commander","smt_params::setup_QF_LIA","command collaborator"
"smt_params","commander","smt_params::setup_QF_UFIDL","command"
"smt_params","commander","smt_params::setup_QF_UFLIA","command"
"smt_params","commander","smt_params::setup_QF_UFLRA","command"
"smt_params","commander","smt_params::setup_QF_BV","command"
"smt_params","commander","smt_params::setup_QF_AUFBV","command"
"smt_params","commander","smt_params::setup_QF_AX","command"
"smt_params","commander","smt_params::setup_QF_AX","command collaborator"
"smt_params","commander","smt_params::setup_QF_AUFLIA","command"
"smt_params","commander","smt_params::setup_QF_AUFLIA","command collaborator"
"smt_params","commander","smt_params::setup_AUFLIA","command"
"smt_params","commander","smt_params::setup_AUFLIA","set collaborator"
"smt_params","commander","smt_params::setup_AUFLIRA","command"
"smt_params","commander","smt_params::setup_LRA","command"
"karr_relation_plugin::rename_fn","pure-controller degenerate small-class","operator()","controller stateless"
"quick_checker","unclassified","quick_checker::quick_checker","constructor"
"quick_checker","unclassified","quick_checker::instantiate_unsat","predicate non-void-command collaborator"
"quick_checker","unclassified","quick_checker::instantiate_not_sat","predicate non-void-command collaborator"
"quick_checker","unclassified","quick_checker::instantiate_not_sat","predicate non-void-command collaborator"
"quick_checker","unclassified","quick_checker::process_candidates","predicate non-void-command"
"quick_checker","unclassified","quick_checker::check_quantifier","predicate non-void-command"
"quick_checker","unclassified","quick_checker::all_args","predicate non-void-command"
"quick_checker","unclassified","quick_checker::any_arg","predicate non-void-command"
"quick_checker","unclassified","quick_checker::check_core","predicate non-void-command collaborator"
"quick_checker","unclassified","quick_checker::check","predicate non-void-command"
"quick_checker","unclassified","quick_checker::canonize","get property non-void-command factory collaborator"
"relation_manager::default_table_filter_equal_fn","data-provider boundary small-class","should_remove","predicate collaborator"
"relation_manager::default_table_filter_equal_fn","data-provider boundary small-class","operator()","collaborator incidental"
"relation_manager::default_table_filter_not_equal_fn","data-provider boundary small-class","should_remove","predicate collaborator"
"relation_manager::default_table_filter_not_equal_fn","data-provider boundary small-class","operator()","collaborator incidental"
"bv_plugin::undo_split","commander small-class","undo","command"
"relation_manager::default_table_filter_interpreted_fn","data-provider boundary small-class","should_remove","predicate collaborator"
"relation_manager::default_table_filter_interpreted_fn","data-provider boundary small-class","operator()","collaborator incidental"
"failure_ex","empty","failure_ex","constructor"
"relation_manager::default_table_filter_interpreted_and_project_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"relation_manager::default_table_project_with_reduce_fn","unclassified","modify_fact","void-accessor controller"
"relation_manager::default_table_project_with_reduce_fn","unclassified","mk_project","command collaborator"
"relation_manager::default_table_project_with_reduce_fn","unclassified","operator()","property non-void-command collaborator"
"solver::bit_trail","commander data-class small-class","undo","set"
"context::restore_rules","commander small-class","reset","set"
"context::restore_rules","commander small-class","undo","command"
"rel_spec_store","entity boundary","get_manager","property non-void-command collaborator"
"rel_spec_store","entity boundary","add_new_kind","command"
"rel_spec_store","entity boundary","rel_spec_store","constructor"
"rel_spec_store","entity boundary","~rel_spec_store","destructor"
"rel_spec_store","entity boundary","add_available_kind","command collaborator"
"rel_spec_store","entity boundary","contains_signature","predicate collaborator"
"rel_spec_store","entity boundary","get_relation_kind","get non-void-command collaborator"
"rel_spec_store","entity boundary","get_relation_spec","void-accessor command collaborator"
"sieve_relation_plugin::union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"sorting_network","unclassified","current","get"
"sorting_network","unclassified","next","get"
"sorting_network","unclassified","exchange","command collaborator"
"sorting_network","unclassified","sort","command collaborator"
"sorting_network","unclassified","is_power_of2","incidental"
"sorting_network","unclassified","sorting_network","constructor"
"sorting_network","unclassified","operator()","command collaborator"
"is_qffplra_probe","boundary degenerate small-class","operator()","wrapper stateless"
"bound_simplifier::rw_cfg","entity boundary small-class","reduce_app","property non-void-command collaborator"
"sieve_relation_plugin::negation_filter_fn","pure-controller degenerate small-class","operator()","controller stateless"
"bit_vector","unclassified","expand","command"
"bit_vector","unclassified","get_bit_word","get"
"bit_vector","unclassified","get_bit_word","get non-void-command"
"bit_vector","unclassified","bit_vector","constructor"
"bit_vector","unclassified","bit_vector","constructor"
"bit_vector","unclassified","bit_vector","copy-constructor"
"bit_vector","unclassified","bit_vector","constructor"
"bit_vector","unclassified","~bit_vector","destructor"
"bit_vector","unclassified","reset","set"
"bit_vector","unclassified","swap","wrapper"
"bit_vector","unclassified","fill0","wrapper"
"bit_vector","unclassified","size","get"
"bit_vector","unclassified","empty","predicate"
"bit_vector","unclassified","num_words","unclassified"
"bit_vector","unclassified","get_word","get"
"bit_vector","unclassified","get","predicate"
"bit_vector","unclassified","set","command"
"bit_vector","unclassified","unset","command"
"bit_vector","unclassified","set","command"
"bit_vector","unclassified","push_back","command"
"bit_vector","unclassified","pop_back","set"
"bit_vector","unclassified","back","predicate"
"bit_vector","unclassified","shrink","set"
"bit_vector","unclassified","reserve","command"
"bit_vector","unclassified","operator!=","predicate"
"bit_vector","unclassified","operator=","get non-void-command"
"bit_vector","unclassified","begin","property wrapper"
"bit_vector","unclassified","end","property collaborator"
"bit_vector","unclassified","bit_vector::expand_to","command"
"bit_vector","unclassified","bit_vector::resize","command"
"bit_vector","unclassified","bit_vector::shift_right","command"
"bit_vector","unclassified","bit_vector::operator==","get predicate"
"bit_vector","unclassified","bit_vector::operator|=","get non-void-command"
"bit_vector","unclassified","bit_vector::operator&=","get set"
"bit_vector","unclassified","bit_vector::display","collaborator"
"bit_vector","unclassified","bit_vector::contains","get predicate"
"bit_vector","unclassified","bit_vector::get_hash","unclassified"
"bit_vector","unclassified","bit_vector::neg","get set"
"instr_project_rename","unclassified","instr_project_rename","constructor"
"instr_project_rename","unclassified","perform","predicate non-void-command collaborator"
"instr_project_rename","unclassified","display_head_impl","property wrapper"
"instr_project_rename","unclassified","make_annotations","controller"
"evaluator","unclassified","evaluator::evaluator","constructor"
"evaluator","unclassified","evaluator::~evaluator","destructor"
"evaluator","unclassified","evaluator::ism","property collaborator"
"evaluator","unclassified","evaluator::eval","predicate non-void-command"
"evaluator","unclassified","evaluator::infeasible_intervals","property non-void-command collaborator"
"evaluator","unclassified","evaluator::push","empty"
"evaluator","unclassified","evaluator::pop","empty"
"sieve_relation_plugin","boundary","get_relation_kind","property non-void-command collaborator"
"sieve_relation_plugin","boundary","mk_from_inner","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::get_plugin","controller stateless"
"sieve_relation_plugin","boundary","sieve_relation_plugin::get","collaborator incidental"
"sieve_relation_plugin","boundary","sieve_relation_plugin::get","collaborator incidental"
"sieve_relation_plugin","boundary","sieve_relation_plugin::get","collaborator incidental"
"sieve_relation_plugin","boundary","sieve_relation_plugin::get","collaborator incidental"
"sieve_relation_plugin","boundary","sieve_relation_plugin::sieve_relation_plugin","constructor"
"sieve_relation_plugin","boundary","sieve_relation_plugin::initialize","command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::get_relation_kind","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::get_relation_kind","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::extract_inner_columns","void-accessor command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::collect_inner_signature","controller stateless"
"sieve_relation_plugin","boundary","sieve_relation_plugin::extract_inner_signature","wrapper stateless"
"sieve_relation_plugin","boundary","sieve_relation_plugin::can_handle_signature","collaborator incidental"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_from_inner","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_empty","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_empty","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_empty","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_empty","wrapper stateless"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_empty","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_full","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::full","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_join_fn","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_project_fn","property controller"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_rename_fn","property controller"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_union_fn","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_filter_identical_fn","property controller"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_filter_equal_fn","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"sieve_relation_plugin","boundary","sieve_relation_plugin::mk_filter_by_negation_fn","property non-void-command collaborator"
"char_reader","unclassified","char_reader","constructor"
"char_reader","unclassified","operator()","wrapper stateless"
"char_reader","unclassified","get","property non-void-command"
"char_reader","unclassified","eof","predicate non-void-command"
"sieve_relation","data-provider boundary","get_plugin","property collaborator"
"sieve_relation","data-provider boundary","is_inner_col","get"
"sieve_relation","data-provider boundary","get_inner_col","get"
"sieve_relation","data-provider boundary","no_sieved_columns","predicate"
"sieve_relation","data-provider boundary","no_inner_columns","predicate"
"sieve_relation","data-provider boundary","get_inner","get collaborator"
"sieve_relation","data-provider boundary","get_inner","get collaborator"
"sieve_relation","data-provider boundary","empty","predicate"
"sieve_relation","data-provider boundary","reset","command"
"sieve_relation","data-provider boundary","get_size_estimate_rows","unclassified"
"sieve_relation","data-provider boundary","get_size_estimate_bytes","unclassified"
"sieve_relation","data-provider boundary","sieve_relation::sieve_relation","copy-constructor"
"sieve_relation","data-provider boundary","sieve_relation::add_fact","command collaborator"
"sieve_relation","data-provider boundary","sieve_relation::contains_fact","predicate collaborator"
"sieve_relation","data-provider boundary","sieve_relation::clone","property collaborator"
"sieve_relation","data-provider boundary","sieve_relation::complement","property collaborator"
"sieve_relation","data-provider boundary","sieve_relation::to_formula","void-accessor collaborator"
"sieve_relation","data-provider boundary","sieve_relation::display","collaborator"
"is_qflira_probe","boundary degenerate small-class","operator()","wrapper stateless"
"sparse_table::full_signature_key_indexer","boundary data-class small-class","get_matching_offsets","property set collaborator"
"smt_nested_solver_factory","boundary degenerate small-class","operator()","wrapper stateless"
"sparse_table_plugin::join_project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"sparse_table_plugin::union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"array_project_selects_util","entity commander boundary","reset","command"
"array_project_selects_util","entity commander boundary","collect_selects","command collaborator"
"array_project_selects_util","entity commander boundary","ackermann","command collaborator"
"array_project_selects_util","entity commander boundary","mk_result","void-accessor command collaborator"
"array_project_selects_util","entity commander boundary","project","predicate non-void-command collaborator"
"array_project_selects_util","entity commander boundary","array_project_selects_util","constructor"
"array_project_selects_util","entity commander boundary","operator()","command collaborator"
"array_project_selects_util","entity commander boundary","reset","command"
"array_project_selects_util","entity commander boundary","collect_selects","command collaborator"
"array_project_selects_util","entity commander boundary","to_num","property non-void-command collaborator"
"array_project_selects_util","entity commander boundary","mk_lt","property non-void-command collaborator"
"array_project_selects_util","entity commander boundary","mk_lex_lt","property non-void-command collaborator"
"array_project_selects_util","entity commander boundary","ackermann","command collaborator"
"array_project_selects_util","entity commander boundary","mk_result","void-accessor command collaborator"
"array_project_selects_util","entity commander boundary","project","predicate non-void-command collaborator"
"array_project_selects_util","entity commander boundary","operator()","command collaborator"
"sparse_table_plugin::project_fn","small-class","transform_row","controller"
"sparse_table_plugin::project_fn","small-class","operator()","property non-void-command collaborator"
"sparse_table_plugin::select_equal_and_project_fn","controller small-class","operator()","property controller"
"sparse_table_plugin::rename_fn","entity boundary small-class","transform_row","command collaborator"
"sparse_table_plugin::rename_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"sparse_table_plugin::negation_filter_fn","commander boundary small-class","collect_intersection_offsets","command collaborator"
"sparse_table_plugin::negation_filter_fn","commander boundary small-class","operator()","command collaborator"
"assume_cmd","degenerate","assume_cmd","constructor"
"assume_cmd","degenerate","get_usage","incidental"
"assume_cmd","degenerate","get_descr","collaborator incidental"
"assume_cmd","degenerate","get_arity","incidental"
"assume_cmd","degenerate","prepare","empty"
"assume_cmd","degenerate","finalize","empty"
"assume_cmd","degenerate","failure_cleanup","empty"
"assume_cmd","degenerate","next_arg_kind","collaborator incidental"
"assume_cmd","degenerate","set_next_arg","wrapper stateless"
"assume_cmd","degenerate","execute","wrapper stateless"
"pb_plugin","boundary","pb_plugin","constructor"
"pb_plugin","boundary","check_term","empty"
"pb_plugin","boundary","term_covered","predicate non-void-command collaborator"
"pb_plugin","boundary","sort_covered","predicate non-void-command collaborator"
"pb_plugin","boundary","max_rounds","incidental"
"pb_plugin","boundary","populate_model","empty"
"pb_plugin","boundary","model_value_core","property wrapper"
"pb_plugin","boundary","model_value_core","property wrapper"
"sparse_table_plugin","boundary degenerate","can_handle_signature","controller stateless"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::sparse_table_plugin","constructor"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::~sparse_table_plugin","destructor"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::get","collaborator incidental"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::get","collaborator incidental"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::get","collaborator incidental"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::get","collaborator incidental"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::reset","command collaborator"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::garbage_collect","command"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::recycle","command collaborator"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_empty","property non-void-command collaborator"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_clone","property non-void-command collaborator"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::join_involves_functional","controller stateless"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_join_fn","property non-void-command collaborator"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_join_project_fn","property non-void-command collaborator"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_union_fn","controller stateless"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_project_fn","controller stateless"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_select_equal_and_project_fn","controller stateless"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_rename_fn","controller stateless"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_filter_by_negation_fn","property non-void-command collaborator"
"sparse_table_plugin","boundary degenerate","sparse_table_plugin::mk_filter_by_negated_join_fn","wrapper stateless"
"obj_mark","commander boundary","obj_mark","constructor"
"obj_mark","commander boundary","is_marked","predicate collaborator"
"obj_mark","commander boundary","is_marked","predicate collaborator"
"obj_mark","commander boundary","mark","command"
"obj_mark","commander boundary","mark","command"
"obj_mark","commander boundary","mark","command collaborator"
"obj_mark","commander boundary","mark","command collaborator"
"obj_mark","commander boundary","reset","command"
"general_matrix","unclassified","adjust_row","get"
"general_matrix","unclassified","push_row","command collaborator"
"general_matrix","unclassified","adjust_column","unclassified"
"general_matrix","unclassified","adjust_row_inverse","unclassified"
"general_matrix","unclassified","adjust_column_inverse","get"
"general_matrix","unclassified","row_count","unclassified"
"general_matrix","unclassified","column_count","unclassified"
"general_matrix","unclassified","operator[]","property non-void-command collaborator"
"general_matrix","unclassified","operator[]","property collaborator"
"general_matrix","unclassified","print","unclassified"
"general_matrix","unclassified","print","unclassified"
"general_matrix","unclassified","print_submatrix","unclassified"
"general_matrix","unclassified","clear","command"
"general_matrix","unclassified","row_is_initialized_correctly","predicate non-void-command collaborator"
"general_matrix","unclassified","init_row_from_container","command collaborator"
"general_matrix","unclassified","operator*","property"
"general_matrix","unclassified","elements_are_equal","predicate"
"general_matrix","unclassified","elements_are_equal_modulo","predicate collaborator"
"general_matrix","unclassified","operator==","predicate"
"general_matrix","unclassified","operator!=","predicate"
"general_matrix","unclassified","equal_modulo","predicate collaborator"
"general_matrix","unclassified","operator*","property collaborator"
"general_matrix","unclassified","transpose_rows","command"
"general_matrix","unclassified","transpose_columns","command"
"general_matrix","unclassified","shrink_to_rank","set collaborator"
"general_matrix","unclassified","take_first_n_columns","get property"
"general_matrix","unclassified","operator*","controller stateless"
"is_nra_probe","boundary degenerate small-class","operator()","wrapper stateless"
"dependency_manager","entity boundary","inc_ref","command collaborator"
"dependency_manager","entity boundary","dec_ref","command collaborator"
"dependency_manager","entity boundary","del","void-accessor command collaborator"
"dependency_manager","entity boundary","unmark_todo","unclassified"
"dependency_manager","entity boundary","inc_ref","collaborator incidental"
"dependency_manager","entity boundary","dec_ref","void-accessor command collaborator"
"dependency_manager","entity boundary","mk_empty","collaborator incidental"
"dependency_manager","entity boundary","mk_leaf","property non-void-command factory collaborator"
"dependency_manager","entity boundary","mk_join","property non-void-command factory collaborator"
"dependency_manager","entity boundary","contains","predicate non-void-command collaborator"
"dependency_manager","entity boundary","linearize","collaborator"
"dependency_manager","entity boundary","linearize","collaborator"
"hashtable_table_plugin::join_fn","controller small-class","operator()","property controller"
"bit2int_simplifier","commander degenerate","bit2int_simplifier","constructor"
"bit2int_simplifier","commander degenerate","name","incidental"
"bit2int_simplifier","commander degenerate","reduce","command collaborator"
"bit2int_simplifier","commander degenerate","supports_proofs","incidental"
"hashtable_table::our_iterator_core","unclassified","is_finished","predicate"
"hashtable_table::our_iterator_core","unclassified","operator*","get non-void-command collaborator"
"hashtable_table::our_iterator_core","unclassified","operator++","set"
"bitvector_table::bv_iterator","unclassified","is_finished","predicate"
"bitvector_table::bv_iterator","unclassified","operator*","get non-void-command collaborator"
"bitvector_table::bv_iterator","unclassified","operator++","command"
"value_trail","commander data-class small-class","value_trail","constructor"
"value_trail","commander data-class small-class","value_trail","constructor"
"value_trail","commander data-class small-class","undo","set"
"hashtable_table_plugin","small-class","hashtable_table_plugin::mk_empty","property non-void-command collaborator"
"hashtable_table_plugin","small-class","hashtable_table_plugin::mk_join_fn","controller stateless"
"hashtable_table","entity boundary","get_plugin","property collaborator"
"hashtable_table","entity boundary","add_fact","command collaborator"
"hashtable_table","entity boundary","remove_fact","command collaborator"
"hashtable_table","entity boundary","contains_fact","predicate collaborator"
"hashtable_table","entity boundary","get_size_estimate_rows","unclassified"
"hashtable_table","entity boundary","get_size_estimate_bytes","unclassified"
"hashtable_table","entity boundary","knows_exact_size","incidental"
"hashtable_table","entity boundary","hashtable_table::begin","property wrapper"
"hashtable_table","entity boundary","hashtable_table::end","property wrapper"
"bitvector_table_plugin","small-class","bitvector_table_plugin","constructor"
"bitvector_table_plugin","small-class","bitvector_table_plugin::can_handle_signature","controller stateless"
"bitvector_table_plugin","small-class","bitvector_table_plugin::mk_empty","property non-void-command collaborator"
"arith_add_less_proc","data-provider boundary small-class","arith_add_less_proc","constructor"
"arith_add_less_proc","data-provider boundary small-class","operator()","predicate collaborator"
"solver::add_var_pos_trail","commander data-class small-class","undo","set"
"enode_eq_pp","empty","enode_eq_pp","constructor"
"udoc_plugin::negation_filter_fn","small-class","operator()","command collaborator"
"udoc_plugin::negation_filter_fn","small-class","slow_pass","controller stateless"
"table_relation_plugin::tr_transformer_fn","pure-controller degenerate small-class","operator()","controller stateless"
"insert_c","commander degenerate","insert_c","constructor"
"insert_c","commander degenerate","operator()","command collaborator"
"insert_c","commander degenerate","operator()","empty"
"insert_c","commander degenerate","operator()","empty"
"table_relation_plugin::tr_union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"table_relation_plugin::tr_intersection_filter_fn","pure-controller degenerate small-class","operator()","controller stateless"
"table_relation","entity data-provider boundary","get_plugin","property collaborator"
"table_relation","entity data-provider boundary","get_table","get collaborator"
"table_relation","entity data-provider boundary","get_table","get collaborator"
"table_relation","entity data-provider boundary","empty","predicate"
"table_relation","entity data-provider boundary","to_formula","collaborator"
"table_relation","entity data-provider boundary","display","collaborator"
"table_relation","entity data-provider boundary","get_size_estimate_rows","unclassified"
"table_relation","entity data-provider boundary","get_size_estimate_bytes","unclassified"
"table_relation","entity data-provider boundary","knows_exact_size","predicate"
"table_relation","entity data-provider boundary","table_relation::add_table_fact","command collaborator"
"table_relation","entity data-provider boundary","table_relation::add_fact","command collaborator"
"table_relation","entity data-provider boundary","table_relation::contains_fact","predicate collaborator"
"table_relation","entity data-provider boundary","table_relation::clone","property collaborator"
"table_relation","entity data-provider boundary","table_relation::complement","property collaborator"
"table_relation","entity data-provider boundary","table_relation::display_tuples","collaborator"
"decl","data-provider boundary","get_small_id","unclassified"
"decl","data-provider boundary","get_name","get collaborator"
"decl","data-provider boundary","get_info","get collaborator"
"decl","data-provider boundary","get_family_id","property collaborator"
"decl","data-provider boundary","get_decl_kind","property collaborator"
"decl","data-provider boundary","is_decl_of","predicate collaborator"
"decl","data-provider boundary","get_num_parameters","unclassified"
"decl","data-provider boundary","get_parameter","property collaborator"
"decl","data-provider boundary","get_parameters","property collaborator"
"decl","data-provider boundary","private_parameters","predicate"
"decl","data-provider boundary","parameters","property wrapper"
"soft","unclassified","set_value","set"
"soft","unclassified","set_value","set collaborator"
"soft","unclassified","is_true","predicate"
"soft","unclassified","soft","constructor"
"doc_manager","boundary","tbvm","get collaborator"
"doc_manager","boundary","tbvm","get collaborator"
"doc_manager","boundary","reset","property non-void-command collaborator"
"doc_manager","boundary","num_tbits","unclassified"
"doc_manager","boundary","doc_manager::doc_manager","constructor"
"doc_manager","boundary","doc_manager::~doc_manager","destructor"
"doc_manager","boundary","doc_manager::allocate","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocate1","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocate0","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocateX","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocate","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocate","property non-void-command factory collaborator"
"doc_manager","boundary","doc_manager::allocate","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocate","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocate","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocate","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::allocate","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::deallocate","command collaborator"
"doc_manager","boundary","doc_manager::copy","command collaborator"
"doc_manager","boundary","doc_manager::fill0","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::fill1","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::fillX","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::get_size_estimate_bytes","collaborator"
"doc_manager","boundary","doc_manager::set_and","predicate non-void-command collaborator"
"doc_manager","boundary","doc_manager::set_and","predicate non-void-command collaborator"
"doc_manager","boundary","doc_manager::well_formed","predicate collaborator"
"doc_manager","boundary","doc_manager::fold_neg","predicate non-void-command collaborator"
"doc_manager","boundary","doc_manager::diff_by_012","non-void-command collaborator"
"doc_manager","boundary","doc_manager::set","command collaborator"
"doc_manager","boundary","doc_manager::merge","predicate non-void-command collaborator"
"doc_manager","boundary","doc_manager::merge","predicate non-void-command collaborator"
"doc_manager","boundary","doc_manager::intersect","predicate non-void-command collaborator"
"doc_manager","boundary","doc_manager::project","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::join","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::pick_resolvent","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::complement","command collaborator"
"doc_manager","boundary","doc_manager::subtract","command collaborator"
"doc_manager","boundary","doc_manager::equals","predicate collaborator"
"doc_manager","boundary","doc_manager::is_full","predicate collaborator"
"doc_manager","boundary","doc_manager::is_empty_complete","predicate non-void-command collaborator"
"doc_manager","boundary","doc_manager::hash","collaborator"
"doc_manager","boundary","doc_manager::contains","predicate collaborator"
"doc_manager","boundary","doc_manager::contains","predicate collaborator"
"doc_manager","boundary","doc_manager::display","property collaborator"
"doc_manager","boundary","doc_manager::display","property collaborator"
"doc_manager","boundary","doc_manager::verify_project","command collaborator"
"doc_manager","boundary","doc_manager::check_equiv","controller stateless"
"doc_manager","boundary","doc_manager::to_formula","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::mk_var","controller stateless"
"doc_manager","boundary","doc_manager::to_formula","property non-void-command collaborator"
"doc_manager","boundary","doc_manager::project_expand","void-accessor command collaborator"
"doc_manager","boundary","doc_manager::project_rename","command collaborator"
"doc","data-provider boundary","pos","get collaborator"
"doc","data-provider boundary","neg","get collaborator"
"doc","data-provider boundary","pos","get collaborator"
"doc","data-provider boundary","neg","get collaborator"
"doc","data-provider boundary","operator[]","property collaborator"
"doc_ref","boundary data-class","doc_ref","constructor"
"doc_ref","boundary data-class","doc_ref","constructor"
"doc_ref","boundary data-class","~doc_ref","destructor"
"doc_ref","boundary data-class","operator=","get set collaborator"
"doc_ref","boundary data-class","operator*","get collaborator"
"doc_ref","boundary data-class","operator->","get collaborator"
"doc_ref","boundary data-class","detach","property set collaborator"
"doc_ref","boundary data-class","operatorbool","unclassified"
"pob","unclassified","~pob","destructor"
"pob","unclassified","set_data","set"
"pob","unclassified","reset_data","command"
"pob","unclassified","get_data","property non-void-command"
"pob","unclassified","has_data","get"
"pob","unclassified","weakness","get"
"pob","unclassified","bump_weakness","set"
"pob","unclassified","reset_weakness","set"
"pob","unclassified","inc_level","command"
"pob","unclassified","set_derivation","set collaborator"
"pob","unclassified","has_derivation","predicate"
"pob","unclassified","get_derivation","property collaborator"
"pob","unclassified","reset_derivation","command"
"pob","unclassified","detach_derivation","property non-void-command collaborator"
"pob","unclassified","parent","property"
"pob","unclassified","is_conjecture","get"
"pob","unclassified","set_conjecture","set"
"pob","unclassified","disable_expand_bnd_gen","set"
"pob","unclassified","is_expand_bnd_enabled","get"
"pob","unclassified","set_expand_bnd","set"
"pob","unclassified","set_concretize_pattern","set collaborator"
"pob","unclassified","get_concretize_pattern","get collaborator"
"pob","unclassified","is_subsume","get"
"pob","unclassified","set_subsume","set"
"pob","unclassified","is_may_pob","predicate"
"pob","unclassified","get_gas","get"
"pob","unclassified","set_gas","set"
"pob","unclassified","is_local_gen_enabled","get"
"pob","unclassified","disable_local_gen","set"
"pob","unclassified","is_concretize_enabled","predicate"
"pob","unclassified","set_concretize","set"
"pob","unclassified","pt","get collaborator"
"pob","unclassified","get_ast_manager","property collaborator"
"pob","unclassified","get_manager","property collaborator"
"pob","unclassified","get_context","property collaborator"
"pob","unclassified","level","get"
"pob","unclassified","depth","get"
"pob","unclassified","desired_level","get"
"pob","unclassified","set_desired_level","set"
"pob","unclassified","width","unclassified"
"pob","unclassified","blocked_at","set"
"pob","unclassified","is_in_queue","get"
"pob","unclassified","set_in_queue","set"
"pob","unclassified","use_farkas_generalizer","get"
"pob","unclassified","set_farkas_generalizer","set"
"pob","unclassified","post","property collaborator"
"pob","unclassified","is_closed","predicate"
"pob","unclassified","children","get collaborator"
"pob","unclassified","add_child","command"
"pob","unclassified","erase_child","command"
"pob","unclassified","lemmas","get collaborator"
"pob","unclassified","add_lemma","command collaborator"
"pob","unclassified","is_ground","predicate"
"pob","unclassified","get_free_vars_size","unclassified"
"pob","unclassified","get_binding","get collaborator"
"pob","unclassified","on_expand","command"
"pob","unclassified","off_expand","command"
"pob","unclassified","inc_ref","set"
"pob","unclassified","dec_ref","set"
"pob","unclassified","pob::pob","copy-constructor"
"pob","unclassified","pob::set_post","wrapper stateless"
"pob","unclassified","pob::set_post","command collaborator"
"pob","unclassified","pob::inherit","command"
"pob","unclassified","pob::close","command"
"pob","unclassified","pob::get_skolems","command collaborator"
"pob","unclassified","pob::display","property collaborator"
"pob","unclassified","pob::get_post_simplified","controller"
"udoc_plugin::join_fn","controller small-class","operator()","property controller"
"udoc_plugin::union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"udoc_plugin::filter_equal_fn","pure-controller small-class","~filter_equal_fn","destructor"
"udoc_plugin::filter_equal_fn","pure-controller small-class","operator()","controller"
"code_tree_map","entity minimal-entity boundary","set_egraph","set collaborator"
"code_tree_map","entity minimal-entity boundary","~code_tree_map","destructor"
"code_tree_map","entity minimal-entity boundary","add_pattern","command collaborator"
"code_tree_map","entity minimal-entity boundary","reset","command"
"code_tree_map","entity minimal-entity boundary","get_code_tree_for","get property collaborator"
"code_tree_map","entity minimal-entity boundary","begin","property non-void-command collaborator"
"code_tree_map","entity minimal-entity boundary","end","property non-void-command collaborator"
"code_tree_map","entity minimal-entity boundary","set_context","set collaborator"
"code_tree_map","entity minimal-entity boundary","~code_tree_map","destructor"
"code_tree_map","entity minimal-entity boundary","add_pattern","command collaborator"
"code_tree_map","entity minimal-entity boundary","reset","command"
"code_tree_map","entity minimal-entity boundary","get_code_tree_for","get property collaborator"
"code_tree_map","entity minimal-entity boundary","begin_code_trees","property non-void-command collaborator"
"code_tree_map","entity minimal-entity boundary","end_code_trees","property non-void-command collaborator"
"udoc_plugin::filter_proj_fn","controller small-class","~filter_proj_fn","destructor"
"udoc_plugin::filter_proj_fn","controller small-class","operator()","property controller"
"udoc_plugin","boundary","num_sort_bits","collaborator"
"udoc_plugin","boundary","disable_fast_pass","set"
"udoc_plugin","boundary","udoc_plugin::udoc_plugin","constructor"
"udoc_plugin","boundary","udoc_plugin::~udoc_plugin","destructor"
"udoc_plugin","boundary","udoc_plugin::get","collaborator incidental"
"udoc_plugin","boundary","udoc_plugin::get","collaborator incidental"
"udoc_plugin","boundary","udoc_plugin::get","collaborator incidental"
"udoc_plugin","boundary","udoc_plugin::dm","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::dm","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_numeral","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::is_numeral","predicate non-void-command"
"udoc_plugin","boundary","udoc_plugin::num_sort_bits","collaborator"
"udoc_plugin","boundary","udoc_plugin::num_signature_bits","non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::is_finite_sort","predicate collaborator"
"udoc_plugin","boundary","udoc_plugin::can_handle_signature","predicate non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_empty","property wrapper"
"udoc_plugin","boundary","udoc_plugin::mk_full","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_join_fn","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_project_fn","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_rename_fn","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_union","controller stateless"
"udoc_plugin","boundary","udoc_plugin::mk_union_fn","wrapper stateless"
"udoc_plugin","boundary","udoc_plugin::mk_widen_fn","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_filter_identical_fn","wrapper stateless"
"udoc_plugin","boundary","udoc_plugin::mk_filter_equal_fn","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_join_project_fn","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_filter_by_negation_fn","property non-void-command collaborator"
"udoc_plugin","boundary","udoc_plugin::mk_filter_interpreted_and_project_fn","property non-void-command collaborator"
"ncc_less_than_key","entity boundary small-class","ncc_less_than_key","constructor"
"ncc_less_than_key","entity boundary small-class","operator()","predicate non-void-command collaborator"
"subs_rewriter_cfg","data-provider boundary small-class","subs_rewriter_cfg","constructor"
"subs_rewriter_cfg","data-provider boundary small-class","reduce_var","predicate collaborator"
"anti_unifier","small-class","anti_unifier::anti_unifier","constructor"
"anti_unifier","small-class","anti_unifier::reset","command"
"anti_unifier","small-class","anti_unifier::operator()","void-accessor command collaborator"
"guarded_defs","entity boundary","guarded_defs","constructor"
"guarded_defs","entity boundary","size","unclassified"
"guarded_defs","entity boundary","defs","get collaborator"
"guarded_defs","entity boundary","guard","get collaborator"
"guarded_defs","entity boundary","guarded_defs::display","property collaborator"
"guarded_defs","entity boundary","guarded_defs::inv","predicate non-void-command"
"guarded_defs","entity boundary","guarded_defs::add","command collaborator"
"guarded_defs","entity boundary","guarded_defs::project","command collaborator"
"naive_convex_closure","degenerate","naive_convex_closure::compute_closure","wrapper stateless"
"naive_convex_closure","degenerate","naive_convex_closure::get_range","controller stateless"
"naive_convex_closure","degenerate","naive_convex_closure::substitute_vars_by_const","wrapper stateless"
"bcd::report","empty","~report","destructor"
"theory_pb_params","commander boundary small-class","theory_pb_params","constructor"
"theory_pb_params","commander boundary small-class","theory_pb_params::updt_params","command collaborator"
"theory_pb_params","commander boundary small-class","theory_pb_params::display","wrapper"
"lemma_cluster","boundary","get_manager","get collaborator"
"lemma_cluster","boundary","get_lemmas","get collaborator"
"lemma_cluster","boundary","dec_gas","set"
"lemma_cluster","boundary","get_gas","get"
"lemma_cluster","boundary","get_pob_gas","unclassified"
"lemma_cluster","boundary","get_size","unclassified"
"lemma_cluster","boundary","get_pattern","get collaborator"
"lemma_cluster","boundary","inc_ref","set"
"lemma_cluster","boundary","dec_ref","set"
"lemma_cluster","boundary","lemma_cluster::lemma_cluster","constructor"
"lemma_cluster","boundary","lemma_cluster::lemma_cluster","copy-constructor"
"lemma_cluster","boundary","lemma_cluster::get_conj_lemmas","void-accessor collaborator"
"lemma_cluster","boundary","lemma_cluster::contains","predicate non-void-command collaborator"
"lemma_cluster","boundary","lemma_cluster::get_min_lvl","non-void-command collaborator"
"lemma_cluster","boundary","lemma_cluster::match","predicate non-void-command collaborator"
"lemma_cluster","boundary","lemma_cluster::can_contain","predicate non-void-command collaborator"
"lemma_cluster","boundary","lemma_cluster::get_lemma_info","property non-void-command collaborator"
"lemma_cluster","boundary","lemma_cluster::rm_subsumed","command collaborator"
"lemma_cluster","boundary","lemma_cluster::add_lemma","predicate non-void-command collaborator"
"bool_and_less_proc","data-provider boundary","bool_and_less_proc","constructor"
"bool_and_less_proc","data-provider boundary","operator()","predicate collaborator"
"bool_and_less_proc","data-provider boundary","arith_lt","predicate collaborator"
"bool_and_less_proc","data-provider boundary","get_first_uc","property collaborator"
"proof_checker","boundary","set_dump_lemmas","command"
"proof_checker","boundary","proof_checker::proof_checker","constructor"
"proof_checker","boundary","proof_checker::check","predicate non-void-command collaborator"
"proof_checker","boundary","proof_checker::check1","predicate non-void-command collaborator"
"proof_checker","boundary","proof_checker::check1_spc","collaborator incidental"
"proof_checker","boundary","proof_checker::check1_basic","predicate non-void-command collaborator"
"proof_checker","boundary","proof_checker::set_false","void-accessor command collaborator"
"proof_checker","boundary","proof_checker::match_fact","predicate collaborator"
"proof_checker","boundary","proof_checker::add_premise","command collaborator"
"proof_checker","boundary","proof_checker::match_proof","predicate collaborator"
"proof_checker","boundary","proof_checker::match_proof","predicate collaborator"
"proof_checker","boundary","proof_checker::match_proof","predicate collaborator"
"proof_checker","boundary","proof_checker::match_proof","predicate collaborator"
"proof_checker","boundary","proof_checker::match_binary","controller stateless"
"proof_checker","boundary","proof_checker::match_app","controller stateless"
"proof_checker","boundary","proof_checker::match_quantifier","controller stateless"
"proof_checker","boundary","proof_checker::match_op","predicate collaborator"
"proof_checker","boundary","proof_checker::match_op","predicate collaborator"
"proof_checker","boundary","proof_checker::match_op","predicate collaborator"
"proof_checker","boundary","proof_checker::match_not","predicate collaborator"
"proof_checker","boundary","proof_checker::match_or","predicate collaborator"
"proof_checker","boundary","proof_checker::match_and","predicate collaborator"
"proof_checker","boundary","proof_checker::match_iff","predicate collaborator"
"proof_checker","boundary","proof_checker::match_equiv","predicate collaborator"
"proof_checker","boundary","proof_checker::match_implies","predicate collaborator"
"proof_checker","boundary","proof_checker::match_eq","predicate collaborator"
"proof_checker","boundary","proof_checker::match_oeq","predicate collaborator"
"proof_checker","boundary","proof_checker::match_negated","predicate collaborator"
"proof_checker","boundary","proof_checker::get_ors","command collaborator"
"proof_checker","boundary","proof_checker::get_hypotheses","void-accessor command collaborator"
"proof_checker","boundary","proof_checker::match_nil","predicate wrapper"
"proof_checker","boundary","proof_checker::match_cons","predicate wrapper"
"proof_checker","boundary","proof_checker::match_atom","predicate wrapper"
"proof_checker","boundary","proof_checker::mk_atom","property non-void-command collaborator"
"proof_checker","boundary","proof_checker::mk_cons","property non-void-command collaborator"
"proof_checker","boundary","proof_checker::mk_nil","property non-void-command collaborator"
"proof_checker","boundary","proof_checker::is_hypothesis","predicate collaborator"
"proof_checker","boundary","proof_checker::mk_hyp","property non-void-command collaborator"
"proof_checker","boundary","proof_checker::dump_proof","command collaborator"
"proof_checker","boundary","proof_checker::dump_proof","command collaborator"
"proof_checker","boundary","proof_checker::check_arith_literal","predicate non-void-command collaborator"
"proof_checker","boundary","proof_checker::check_arith_proof","predicate non-void-command collaborator"
"binding_hash_proc","pure-controller degenerate small-class","operator()","controller stateless"
"rewriter_exception","empty","rewriter_exception","constructor"
"term_ordered_rpp","entity boundary small-class","term_ordered_rpp","constructor"
"term_ordered_rpp","entity boundary small-class","is_add","predicate collaborator"
"term_ordered_rpp","entity boundary small-class","reduce_app","property non-void-command collaborator"
"pob_lt_proc","pure-controller degenerate small-class","pob_lt_proc::operator()","controller stateless"
"theory_diff_logic","entity boundary","is_interpreted","predicate collaborator"
"theory_diff_logic","entity boundary","~theory_diff_logic","destructor"
"theory_diff_logic","entity boundary","get_name","incidental"
"theory_diff_logic","entity boundary","init","command"
"theory_diff_logic","entity boundary","mk_eq_atom","property non-void-command collaborator"
"theory_diff_logic","entity boundary","use_diseqs","incidental"
"theory_diff_logic","entity boundary","restart_eh","command"
"theory_diff_logic","entity boundary","relevant_eh","empty"
"theory_diff_logic","entity boundary","init_search_eh","command"
"theory_diff_logic","entity boundary","is_shared","collaborator incidental"
"theory_diff_logic","entity boundary","can_propagate","predicate non-void-command"
"theory_diff_logic","entity boundary","why_is_diseq","wrapper stateless"
"theory_diff_logic","entity boundary","reflect","predicate"
"theory_diff_logic","entity boundary","theory_resolve","predicate"
"theory_diff_logic","entity boundary","lazy_pivoting_lvl","unclassified"
"theory_diff_logic","entity boundary","propagate_eqs","predicate"
"theory_diff_logic","entity boundary","get_zero","property collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::theory_diff_logic","constructor"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::internalize_term","predicate non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::found_non_diff_logic_expr","set collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::internalize_atom","predicate non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::internalize_eq_eh","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::assign_eh","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::collect_statistics","collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::push_scope_eh","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::pop_scope_eh","command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::final_check_eh","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::del_atoms","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::decompose_linear","predicate non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::is_sign","predicate non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::is_negative","predicate non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::propagate","command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::inc_conflicts","command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::propagate_core","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::propagate_atom","predicate non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::new_edge","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::set_neg_cycle_conflict","command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::is_offset","predicate non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_term","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_num","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_var","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::set_sort","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_var","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::reset_eh","command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::compute_delta","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::init_model","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_value","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::display","collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::is_consistent","get"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::expand","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::new_eq_or_diseq","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::new_eq_eh","set collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::new_diseq_eh","set collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::new_eq_eh","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::new_diseq_eh","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::get_eq_antecedents","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::get_implied_bound_antecedents","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::node2simplex","non-void-command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::edge2simplex","non-void-command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::obj2simplex","incidental"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::num_simplex_vars","non-void-command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::is_simplex_edge","predicate non-void-command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::simplex2edge","non-void-command"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::update_simplex","command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::value","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::maximize","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::add_objective","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_ineq","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_gt","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_ge","property non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::internalize_objective","predicate non-void-command collaborator"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::mk_fresh","wrapper stateless"
"theory_diff_logic","entity boundary","theory_diff_logic<Ext>::init_zero","command collaborator"
"derivation","entity boundary","get_rule","get collaborator"
"derivation","entity boundary","get_parent","get collaborator"
"derivation","entity boundary","get_ast_manager","property collaborator"
"derivation","entity boundary","get_manager","property collaborator"
"derivation","entity boundary","get_context","property collaborator"
"derivation","entity boundary","pt","property collaborator"
"derivation","entity boundary","derivation::derivation","constructor"
"derivation","entity boundary","derivation::add_premise","command collaborator"
"derivation","entity boundary","derivation::create_first_child","property non-void-command collaborator"
"derivation","entity boundary","derivation::exist_skolemize","void-accessor command collaborator"
"derivation","entity boundary","derivation::create_next_child","property non-void-command collaborator"
"derivation","entity boundary","derivation::create_next_child","property non-void-command collaborator"
"lemma_generalizer","degenerate small-class","lemma_generalizer","constructor"
"lemma_generalizer","degenerate small-class","collect_statistics","empty"
"lemma_generalizer","degenerate small-class","reset_statistics","empty"
"mbp_qel::impl","commander boundary","mark_seen","command collaborator"
"mbp_qel::impl","commander boundary","is_seen","predicate non-void-command collaborator"
"mbp_qel::impl","commander boundary","is_non_basic","predicate non-void-command collaborator"
"mbp_qel::impl","commander boundary","add_vars","command collaborator"
"mbp_qel::impl","commander boundary","saturate","command collaborator"
"mbp_qel::impl","commander boundary","init","command collaborator"
"mbp_qel::impl","commander boundary","add_plugin","command collaborator"
"mbp_qel::impl","commander boundary","enable_model_splitting","controller"
"mbp_qel::impl","commander boundary","get_plugin","property controller"
"mbp_qel::impl","commander boundary","~impl","destructor"
"mbp_qel::impl","commander boundary","operator()","command collaborator"
"spacer_callback","data-provider lazy-class degenerate","spacer_callback","constructor"
"spacer_callback","data-provider lazy-class degenerate","get_context","get collaborator"
"spacer_callback","data-provider lazy-class degenerate","new_lemma","incidental"
"spacer_callback","data-provider lazy-class degenerate","new_lemma_eh","empty"
"spacer_callback","data-provider lazy-class degenerate","predecessor","incidental"
"spacer_callback","data-provider lazy-class degenerate","predecessor_eh","empty"
"spacer_callback","data-provider lazy-class degenerate","unfold","incidental"
"spacer_callback","data-provider lazy-class degenerate","unfold_eh","empty"
"spacer_callback","data-provider lazy-class degenerate","propagate","incidental"
"spacer_callback","data-provider lazy-class degenerate","propagate_eh","empty"
"dominator_simplifier","entity boundary","simplify_and","property non-void-command collaborator"
"dominator_simplifier","entity boundary","simplify_or","property non-void-command collaborator"
"dominator_simplifier","entity boundary","get_cached","property non-void-command collaborator"
"dominator_simplifier","entity boundary","cache","command collaborator"
"dominator_simplifier","entity boundary","reset_cache","command"
"dominator_simplifier","entity boundary","idom","property collaborator"
"dominator_simplifier","entity boundary","scope_level","non-void-command"
"dominator_simplifier","entity boundary","local_pop","command"
"dominator_simplifier","entity boundary","assert_expr","predicate non-void-command"
"dominator_simplifier","entity boundary","dominator_simplifier","constructor"
"dominator_simplifier","entity boundary","name","incidental"
"dominator_simplifier","entity boundary","updt_params","command collaborator"
"dominator_simplifier","entity boundary","collect_param_descrs","command collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::~dominator_simplifier","destructor"
"dominator_simplifier","entity boundary","dominator_simplifier::simplify_ite","property non-void-command factory collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::simplify_arg","property non-void-command collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::simplify_rec","property non-void-command collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::simplify_and_or","property non-void-command collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::simplify_not","property non-void-command collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::init","predicate non-void-command collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::reduce","command collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::is_subexpr","predicate non-void-command collaborator"
"dominator_simplifier","entity boundary","dominator_simplifier::tree","get property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::dl_interface","constructor"
"dl_interface","entity commander boundary","dl_interface::~dl_interface","destructor"
"dl_interface","entity commander boundary","dl_interface::check_reset","command"
"dl_interface","entity commander boundary","dl_interface::query","property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::query_from_lvl","property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::get_cover_delta","property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::add_cover","command collaborator"
"dl_interface","entity commander boundary","dl_interface::add_invariant","command collaborator"
"dl_interface","entity commander boundary","dl_interface::get_reachable","property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::get_num_levels","non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::collect_statistics","collaborator"
"dl_interface","entity commander boundary","dl_interface::reset_statistics","command"
"dl_interface","entity commander boundary","dl_interface::display_certificate","collaborator"
"dl_interface","entity commander boundary","dl_interface::get_answer","property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::get_ground_sat_answer","property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::get_rules_along_trace","command collaborator"
"dl_interface","entity commander boundary","dl_interface::updt_params","command"
"dl_interface","entity commander boundary","dl_interface::get_model","property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::get_proof","property non-void-command collaborator"
"dl_interface","entity commander boundary","dl_interface::add_callback","command collaborator"
"dl_interface","entity commander boundary","dl_interface::add_constraint","command"
"fpa2bv_converter","entity commander boundary","fu","get collaborator"
"fpa2bv_converter","entity commander boundary","bu","get collaborator"
"fpa2bv_converter","entity commander boundary","au","get collaborator"
"fpa2bv_converter","entity commander boundary","is_float","predicate non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","is_float","predicate non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","is_rm","predicate non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","is_rm","predicate non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","is_float_family","predicate non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","set_unspecified_fp_hi","set"
"fpa2bv_converter","entity commander boundary","get_min_max_specials","get collaborator"
"fpa2bv_converter","entity commander boundary","get_const2bv","get collaborator"
"fpa2bv_converter","entity commander boundary","get_rm_const2bv","get collaborator"
"fpa2bv_converter","entity commander boundary","get_uf2bvuf","get collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::fpa2bv_converter","constructor"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::~fpa2bv_converter","destructor"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_eq","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_ite","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_distinct","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_numeral","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_numeral","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_fresh_const","property non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_const","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_var","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::extra_quantify","property non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_uf","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_rm_const","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_pinf","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_pinf","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_ninf","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_ninf","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_nan","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_nan","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_nzero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_nzero","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_pzero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_pzero","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_zero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_one","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_one","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::add_core","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_add","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_add","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_sub","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_sub","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_neg","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_neg","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_mul","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_mul","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_div","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_div","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_rem","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_rem","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_abs","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_abs","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_min_i","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_max_i","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_min","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_max","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_min_max_unspecified","property non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_fma","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_sqrt","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_round_to_integral","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_round_to_integral","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_eq","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_eq","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_lt","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_lt","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_gt","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_gt","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_le","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_le","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_ge","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_float_ge","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_zero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_nzero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_pzero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_nan","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_inf","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_normal","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_subnormal","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_negative","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_positive","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_fp","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_fp_float","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_fp_float","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_fp_real","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_fp_real_int","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_real","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_fp_signed","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_fp_unsigned","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_ieee_bv","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_ieee_bv_unspecified","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_ieee_bv_i","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_bv","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_ubv","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_sbv","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_ubv_i","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_sbv_i","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::nan_wrap","property non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_bv_unspecified","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_real_unspecified","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_to_real_i","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_fp","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::split_fp","void-accessor collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::join_fp","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_nan","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_inf","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_pinf","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_ninf","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_pos","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_neg","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_zero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_nzero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_pzero","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_denormal","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_normal","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_is_rm","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_top_exp","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_bot_exp","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_min_exp","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_max_exp","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_leading_zeros","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_bias","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_unbias","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::unpack","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_rounding_mode","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::dbg_decouple","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_rounding_decision","property non-void-command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::round","void-accessor command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::reset","command collaborator"
"fpa2bv_converter","entity commander boundary","fpa2bv_converter::mk_bv_uf","property non-void-command collaborator"
"lemma_expand_bnd_generalizer","entity boundary","~lemma_expand_bnd_generalizer","destructor"
"lemma_expand_bnd_generalizer","entity boundary","reset_statistics","command"
"lemma_expand_bnd_generalizer","entity boundary","lemma_expand_bnd_generalizer::lemma_expand_bnd_generalizer","constructor"
"lemma_expand_bnd_generalizer","entity boundary","lemma_expand_bnd_generalizer::operator()","command collaborator"
"lemma_expand_bnd_generalizer","entity boundary","lemma_expand_bnd_generalizer::check_inductive","predicate set collaborator"
"lemma_expand_bnd_generalizer","entity boundary","lemma_expand_bnd_generalizer::is_interesting","predicate non-void-command collaborator"
"lemma_expand_bnd_generalizer","entity boundary","lemma_expand_bnd_generalizer::collect_statistics","collaborator"
"alloc_region","entity boundary small-class","allocate","property command collaborator"
"alloc_region","entity boundary small-class","~alloc_region","destructor"
"sat_allocator","unclassified","align_size","unclassified"
"sat_allocator","unclassified","free_slot_id","unclassified"
"sat_allocator","unclassified","~sat_allocator","destructor"
"sat_allocator","unclassified","reset","command"
"sat_allocator","unclassified","allocate","property command collaborator"
"sat_allocator","unclassified","deallocate","set"
"sat_allocator","unclassified","get_allocation_size","get"
"sat_allocator","unclassified","id","get"
"collect_pure_proc","commander degenerate","collect_pure_proc","constructor"
"collect_pure_proc","commander degenerate","operator()","command collaborator"
"collect_pure_proc","commander degenerate","operator()","empty"
"collect_pure_proc","commander degenerate","operator()","empty"
"collect_pure_proc","commander degenerate","collect_pure_proc","constructor"
"collect_pure_proc","commander degenerate","operator()","command collaborator"
"collect_pure_proc","commander degenerate","operator()","empty"
"collect_pure_proc","commander degenerate","operator()","empty"
"tbv_ref","data-provider boundary data-class","tbv_ref","constructor"
"tbv_ref","data-provider boundary data-class","tbv_ref","constructor"
"tbv_ref","data-provider boundary data-class","tbv_ref","copy-constructor"
"tbv_ref","data-provider boundary data-class","~tbv_ref","destructor"
"tbv_ref","data-provider boundary data-class","operator=","get set collaborator"
"tbv_ref","data-provider boundary data-class","operator*","get collaborator"
"tbv_ref","data-provider boundary data-class","operator->","get collaborator"
"tbv_ref","data-provider boundary data-class","operator[]","get collaborator"
"tbv_ref","data-provider boundary data-class","get","get collaborator"
"tbv_ref","data-provider boundary data-class","detach","property set collaborator"
"tbv_ref","data-provider boundary data-class","manager","get collaborator"
"tbv_ref","data-provider boundary data-class","num_tbits","unclassified"
"farkas_learner","degenerate","farkas_learner","constructor"
"farkas_learner","degenerate","collect_statistics","empty"
"farkas_learner","degenerate","reset_statistics","empty"
"farkas_learner","degenerate","set_split_literals","set"
"farkas_learner","degenerate","farkas_learner::combine_constraints","void-accessor controller"
"farkas_learner","degenerate","farkas_learner::is_pure_expr","wrapper stateless"
"farkas_learner","degenerate","farkas_learner::get_lemmas","command collaborator"
"farkas_learner","degenerate","farkas_learner::get_asserted","controller stateless"
"farkas_learner","degenerate","farkas_learner::is_farkas_lemma","controller stateless"
"lex_lt2","data-provider boundary small-class","lex_lt2","constructor"
"lex_lt2","data-provider boundary small-class","operator()","predicate wrapper"
"cond_tactical","entity boundary","cond_tactical","constructor"
"cond_tactical","entity boundary","name","incidental"
"cond_tactical","entity boundary","operator()","command collaborator"
"cond_tactical","entity boundary","translate","property non-void-command collaborator"
"contains_array_op_proc","data-provider boundary small-class","contains_array_op_proc","constructor"
"contains_array_op_proc","data-provider boundary small-class","operator()","predicate wrapper"
"contains_array_op_proc","data-provider boundary small-class","contains_array_op_proc","constructor"
"contains_array_op_proc","data-provider boundary small-class","operator()","predicate wrapper"
"lemma_array_eq_generalizer","small-class","lemma_array_eq_generalizer","constructor"
"lemma_array_eq_generalizer","small-class","lemma_array_eq_generalizer::is_array_eq","controller stateless"
"lemma_array_eq_generalizer","small-class","lemma_array_eq_generalizer::operator()","command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::can_handle_signature","predicate non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::get","collaborator incidental"
"check_table_plugin","entity data-provider boundary","check_table_plugin::get","collaborator incidental"
"check_table_plugin","entity data-provider boundary","check_table_plugin::checker","get non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::checker","get non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::checker","property non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::checker","property non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::tocheck","get non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::tocheck","get non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::tocheck","property non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::tocheck","property non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_empty","property non-void-command collaborator"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_join_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_join_project_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_union_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_project_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_select_equal_and_project_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_rename_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_filter_identical_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_filter_equal_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_filter_interpreted_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_filter_interpreted_and_project_fn","property wrapper"
"check_table_plugin","entity data-provider boundary","check_table_plugin::mk_filter_by_negation_fn","property wrapper"
"limit_num_generalizer","entity commander boundary","reset_statistics","command"
"limit_num_generalizer","entity commander boundary","limit_num_generalizer::limit_num_generalizer","constructor"
"limit_num_generalizer","entity commander boundary","limit_num_generalizer::limit_denominators","predicate non-void-command collaborator"
"limit_num_generalizer","entity commander boundary","limit_num_generalizer::operator()","command collaborator"
"limit_num_generalizer","entity commander boundary","limit_num_generalizer::collect_statistics","collaborator"
"scoped_rlimit","empty","scoped_rlimit","constructor"
"scoped_rlimit","empty","~scoped_rlimit","destructor"
"lemma_global_generalizer","unclassified","~lemma_global_generalizer","destructor"
"lemma_global_generalizer","unclassified","reset_statistics","command"
"lemma_global_generalizer","unclassified","lemma_global_generalizer::lemma_global_generalizer","constructor"
"lemma_global_generalizer","unclassified","lemma_global_generalizer::operator()","command collaborator"
"lemma_global_generalizer","unclassified","lemma_global_generalizer::do_conjecture","predicate set collaborator"
"lemma_global_generalizer","unclassified","lemma_global_generalizer::generalize","command collaborator"
"lemma_global_generalizer","unclassified","lemma_global_generalizer::mk_concretize_pob","property factory controller"
"lemma_global_generalizer","unclassified","lemma_global_generalizer::mk_subsume_pob","controller stateless"
"lemma_global_generalizer","unclassified","lemma_global_generalizer::mk_conjecture_pob","property controller"
"lemma_global_generalizer","unclassified","lemma_global_generalizer::collect_statistics","collaborator"
"iuc_proof","entity boundary","get","property non-void-command collaborator"
"iuc_proof","entity boundary","is_a_marked","predicate non-void-command collaborator"
"iuc_proof","entity boundary","is_b_marked","predicate non-void-command collaborator"
"iuc_proof","entity boundary","is_h_marked","predicate non-void-command collaborator"
"iuc_proof","entity boundary","is_b_pure","predicate non-void-command collaborator"
"iuc_proof","entity boundary","iuc_proof::iuc_proof","constructor"
"iuc_proof","entity boundary","iuc_proof::iuc_proof","constructor"
"iuc_proof","entity boundary","iuc_proof::collect_core_symbols","wrapper"
"iuc_proof","entity boundary","iuc_proof::is_core_pure","predicate wrapper"
"iuc_proof","entity boundary","iuc_proof::compute_marks","command collaborator"
"iuc_proof","entity boundary","iuc_proof::dump_farkas_stats","command collaborator"
"iuc_proof","entity boundary","iuc_proof::display_dot","command collaborator"
"arith_eq_adapter_stats","commander data-class small-class","reset","set"
"arith_eq_adapter_stats","commander data-class small-class","arith_eq_adapter_stats","constructor"
"proof_utils","degenerate","proof_utils::reduce_hypotheses","controller stateless"
"proof_utils","degenerate","proof_utils::is_closed","wrapper stateless"
"proof_utils","degenerate","proof_utils::permute_unit_resolution","controller stateless"
"proof_utils","degenerate","proof_utils::push_instantiations_up","controller stateless"
"iuc_solver","entity boundary","set_split_literals","set"
"iuc_solver","entity boundary","get_full_unsat_core","command collaborator"
"iuc_solver","entity boundary","translate","property non-void-command collaborator"
"iuc_solver","entity boundary","updt_params","command collaborator"
"iuc_solver","entity boundary","reset_params","command collaborator"
"iuc_solver","entity boundary","get_params","property collaborator"
"iuc_solver","entity boundary","push_params","command"
"iuc_solver","entity boundary","pop_params","command"
"iuc_solver","entity boundary","collect_param_descrs","command collaborator"
"iuc_solver","entity boundary","set_produce_models","command"
"iuc_solver","entity boundary","assert_expr_core","command collaborator"
"iuc_solver","entity boundary","assert_expr_core2","wrapper stateless"
"iuc_solver","entity boundary","set_phase","command collaborator"
"iuc_solver","entity boundary","get_phase","property non-void-command collaborator"
"iuc_solver","entity boundary","set_phase","command collaborator"
"iuc_solver","entity boundary","move_to_front","command collaborator"
"iuc_solver","entity boundary","cube","property wrapper"
"iuc_solver","entity boundary","congruence_root","collaborator incidental"
"iuc_solver","entity boundary","congruence_next","collaborator incidental"
"iuc_solver","entity boundary","get_levels","command collaborator"
"iuc_solver","entity boundary","get_trail","property non-void-command collaborator"
"iuc_solver","entity boundary","get_scope_level","unclassified"
"iuc_solver","entity boundary","set_progress_callback","command collaborator"
"iuc_solver","entity boundary","get_num_assertions","unclassified"
"iuc_solver","entity boundary","get_assertion","property collaborator"
"iuc_solver","entity boundary","get_num_assumptions","unclassified"
"iuc_solver","entity boundary","get_assumption","property collaborator"
"iuc_solver","entity boundary","display","property collaborator"
"iuc_solver","entity boundary","get_model_core","command collaborator"
"iuc_solver","entity boundary","get_proof_core","property non-void-command collaborator"
"iuc_solver","entity boundary","reason_unknown","property"
"iuc_solver","entity boundary","set_reason_unknown","command"
"iuc_solver","entity boundary","get_labels","command collaborator"
"iuc_solver","entity boundary","get_manager","get collaborator"
"iuc_solver","entity boundary","iuc_solver::push","command"
"iuc_solver","entity boundary","iuc_solver::pop","command"
"iuc_solver","entity boundary","iuc_solver::fresh_proxy","property non-void-command collaborator"
"iuc_solver","entity boundary","iuc_solver::mk_proxy","property non-void-command collaborator"
"iuc_solver","entity boundary","iuc_solver::mk_proxies","predicate non-void-command collaborator"
"iuc_solver","entity boundary","iuc_solver::push_bg","command collaborator"
"iuc_solver","entity boundary","iuc_solver::pop_bg","command"
"iuc_solver","entity boundary","iuc_solver::get_num_bg","get"
"iuc_solver","entity boundary","iuc_solver::check_sat_core","property non-void-command collaborator"
"iuc_solver","entity boundary","iuc_solver::check_sat_cc","property non-void-command collaborator"
"iuc_solver","entity boundary","iuc_solver::is_proxy","predicate non-void-command collaborator"
"iuc_solver","entity boundary","iuc_solver::collect_statistics","collaborator"
"iuc_solver","entity boundary","iuc_solver::reset_statistics","command"
"iuc_solver","entity boundary","iuc_solver::get_unsat_core","command collaborator"
"iuc_solver","entity boundary","iuc_solver::undo_proxies_in_core","void-accessor command collaborator"
"iuc_solver","entity boundary","iuc_solver::undo_proxies","void-accessor command collaborator"
"iuc_solver","entity boundary","iuc_solver::elim_proxies","command collaborator"
"iuc_solver","entity boundary","iuc_solver::get_iuc","command collaborator"
"iuc_solver","entity boundary","iuc_solver::refresh","command"
"scoped_reset","empty","scoped_reset","constructor"
"scoped_reset","empty","~scoped_reset","destructor"
"scoped_reset","empty","model_generator::scoped_reset::scoped_reset","constructor"
"scoped_reset","empty","model_generator::scoped_reset::~scoped_reset","destructor"
"anf_simplifier","commander boundary","is_too_large","predicate controller"
"anf_simplifier","commander boundary","is_relevant","predicate non-void-command collaborator"
"anf_simplifier","commander boundary","is_relevant","get collaborator"
"anf_simplifier","commander boundary","set_relevant","command collaborator"
"anf_simplifier","commander boundary","set_relevant","set collaborator"
"anf_simplifier","commander boundary","set","set collaborator"
"anf_simplifier","commander boundary","collect_statistics","controller"
"anf_simplifier","commander boundary","anf_simplifier::operator()","command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::anf2clauses","command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::anf2phase","command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::eval","predicate non-void-command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::reset_eval","set"
"anf_simplifier","commander boundary","anf_simplifier::clauses2anf","command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::collect_clauses","void-accessor command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::set_relevant","command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::set_relevant","command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::is_pre_satisfied","predicate non-void-command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::is_pre_satisfied","predicate non-void-command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::phase_is_true","predicate controller"
"anf_simplifier","commander boundary","anf_simplifier::has_relevant_var","predicate non-void-command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::has_relevant_var","predicate non-void-command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::compile_xors","set collaborator"
"anf_simplifier","commander boundary","anf_simplifier::compile_aigs","command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::configure_solver","command collaborator"
"anf_simplifier","commander boundary","anf_simplifier::add_bin","controller stateless"
"anf_simplifier","commander boundary","anf_simplifier::add_clause","controller"
"anf_simplifier","commander boundary","anf_simplifier::add_xor","controller stateless"
"anf_simplifier","commander boundary","anf_simplifier::add_aig","controller stateless"
"anf_simplifier","commander boundary","anf_simplifier::add_if","controller stateless"
"anf_simplifier","commander boundary","anf_simplifier::save_statistics","command collaborator"
"legacy_frames","commander boundary","legacy_frames","constructor"
"legacy_frames","commander boundary","pt","get collaborator"
"legacy_frames","commander boundary","get_frame_lemmas","command collaborator"
"legacy_frames","commander boundary","add_frame","command"
"legacy_frames","commander boundary","size","unclassified"
"legacy_frames","commander boundary","lemma_size","controller stateless"
"legacy_frames","commander boundary","pred_transformer::legacy_frames::simplify_formulas","command collaborator"
"legacy_frames","commander boundary","pred_transformer::legacy_frames::simplify_formulas","command"
"legacy_frames","commander boundary","pred_transformer::legacy_frames::get_frame_geq_lemmas","command collaborator"
"legacy_frames","commander boundary","pred_transformer::legacy_frames::propagate_to_next_level","get predicate non-void-command collaborator"
"legacy_frames","commander boundary","pred_transformer::legacy_frames::add_lemma","predicate non-void-command"
"legacy_frames","commander boundary","pred_transformer::legacy_frames::propagate_to_infinity","command"
"legacy_frames","commander boundary","pred_transformer::legacy_frames::inherit_frames","command collaborator"
"IntExpr","empty","IntExpr","constructor"
"pb2bv_solver","entity boundary","pb2bv_solver","constructor"
"pb2bv_solver","entity boundary","translate","property non-void-command collaborator"
"pb2bv_solver","entity boundary","assert_expr_core","command collaborator"
"pb2bv_solver","entity boundary","push_core","command"
"pb2bv_solver","entity boundary","pop_core","command"
"pb2bv_solver","entity boundary","check_sat_core2","property non-void-command collaborator"
"pb2bv_solver","entity boundary","updt_params","command collaborator"
"pb2bv_solver","entity boundary","collect_param_descrs","command collaborator"
"pb2bv_solver","entity boundary","set_produce_models","command"
"pb2bv_solver","entity boundary","set_progress_callback","command collaborator"
"pb2bv_solver","entity boundary","collect_statistics","collaborator"
"pb2bv_solver","entity boundary","get_unsat_core","command collaborator"
"pb2bv_solver","entity boundary","get_model_core","command collaborator"
"pb2bv_solver","entity boundary","set_phase","command collaborator"
"pb2bv_solver","entity boundary","get_phase","property non-void-command collaborator"
"pb2bv_solver","entity boundary","set_phase","command collaborator"
"pb2bv_solver","entity boundary","move_to_front","command collaborator"
"pb2bv_solver","entity boundary","get_levels","command collaborator"
"pb2bv_solver","entity boundary","get_trail","property non-void-command collaborator"
"pb2bv_solver","entity boundary","external_model_converter","property collaborator"
"pb2bv_solver","entity boundary","get_model_converter","property collaborator"
"pb2bv_solver","entity boundary","get_proof_core","property non-void-command collaborator"
"pb2bv_solver","entity boundary","reason_unknown","property"
"pb2bv_solver","entity boundary","set_reason_unknown","command"
"pb2bv_solver","entity boundary","get_labels","command collaborator"
"pb2bv_solver","entity boundary","get_manager","get collaborator"
"pb2bv_solver","entity boundary","cube","property non-void-command collaborator"
"pb2bv_solver","entity boundary","congruence_next","property non-void-command collaborator"
"pb2bv_solver","entity boundary","congruence_root","property non-void-command collaborator"
"pb2bv_solver","entity boundary","find_mutexes","property non-void-command collaborator"
"pb2bv_solver","entity boundary","get_consequences_core","property non-void-command collaborator"
"pb2bv_solver","entity boundary","local_model_converter","property collaborator"
"pb2bv_solver","entity boundary","get_num_assertions","unclassified"
"pb2bv_solver","entity boundary","get_assertion","property collaborator"
"pb2bv_solver","entity boundary","flush_assertions","collaborator"
"dependent_eq","empty","dependent_eq","constructor"
"relation_info","empty","relation_info","constructor"
"dl_decl_plugin","entity boundary","mk_fresh","wrapper stateless"
"dl_decl_plugin","entity boundary","is_value","predicate wrapper"
"dl_decl_plugin","entity boundary","is_unique_value","predicate collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::dl_decl_plugin","constructor"
"dl_decl_plugin","entity boundary","dl_decl_plugin::check_bounds","predicate collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::check_domain","predicate"
"dl_decl_plugin","entity boundary","dl_decl_plugin::check_params","predicate"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_relation_sort","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_finite_sort","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_rule_sort","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_sort","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::is_rel_sort","predicate non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::is_rel_sort","predicate non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::is_fin_sort","predicate non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_store_select","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_empty","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_project","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_unionw","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_filter","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_rename","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_join","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_complement","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_negation_filter","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_is_empty","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_constant","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_compare","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_clone","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::mk_func_decl","property non-void-command collaborator"
"dl_decl_plugin","entity boundary","dl_decl_plugin::get_op_names","empty"
"dl_decl_plugin","entity boundary","dl_decl_plugin::get_sort_names","empty"
"probing","commander boundary","cached_implied_lits","property non-void-command collaborator"
"probing","commander boundary","dec","set"
"probing","commander boundary","probing::probing","constructor"
"probing","commander boundary","probing::reset_cache","command collaborator"
"probing","commander boundary","probing::cache_bins","command"
"probing","commander boundary","probing::try_lit","predicate non-void-command collaborator"
"probing","commander boundary","probing::process_core","command collaborator"
"probing","commander boundary","probing::process","set collaborator"
"probing","commander boundary","probing::operator()","predicate non-void-command collaborator"
"probing","commander boundary","probing::implies","predicate non-void-command collaborator"
"probing","commander boundary","probing::updt_params","command collaborator"
"probing","commander boundary","probing::collect_param_descrs","empty"
"probing","commander boundary","probing::finalize","command"
"probing","commander boundary","probing::collect_statistics","controller"
"probing","commander boundary","probing::reset_statistics","set"
"inductive_property","data-provider boundary","inductive_property","constructor"
"inductive_property","data-provider boundary","inductive_property::fixup_clause","property wrapper"
"inductive_property","data-provider boundary","inductive_property::fixup_clauses","property collaborator"
"inductive_property","data-provider boundary","inductive_property::to_string","property collaborator"
"inductive_property","data-provider boundary","inductive_property::to_model","void-accessor collaborator"
"inductive_property","data-provider boundary","inductive_property::to_expr","property collaborator"
"inductive_property","data-provider boundary","inductive_property::display","collaborator"
"sk_lt_proc","boundary degenerate small-class","sk_lt_proc::operator()","wrapper stateless"
"cost_parser","commander boundary","add_var","non-void-command"
"cost_parser","commander boundary","cost_parser::cost_parser","constructor"
"cost_parser","commander boundary","cost_parser::parse_int","property non-void-command collaborator"
"cost_parser","commander boundary","cost_parser::parse_float","property non-void-command collaborator"
"cost_parser","commander boundary","cost_parser::add_var","non-void-command collaborator"
"cost_parser","commander boundary","cost_parser::reset_vars","command"
"binspr::report","empty","~report","destructor"
"Context","entity factory controller","Context","constructor"
"Context","entity factory controller","Context","constructor"
"Context","entity factory controller","Context","constructor"
"Context","entity factory controller","MkSymbol","property factory collaborator"
"Context","entity factory controller","MkSymbol","property factory collaborator"
"Context","entity factory controller","MkSymbols","property non-void-command factory collaborator"
"mbc_rewriter_cfg","unclassified","mbc_rewriter_cfg","constructor"
"mbc_rewriter_cfg","unclassified","get_subst","predicate non-void-command collaborator"
"mbc_rewriter_cfg","unclassified","reset","command"
"mbc_rewriter_cfg","unclassified","reset_partition","set"
"mbc_rewriter_cfg","unclassified","partition","get"
"mbc_rewriter_cfg","unclassified","found_partition","predicate"
"mbc_rewriter_cfg","unclassified","set_partition","set"
"joint2","empty","joint2","constructor"
"joint2","empty","joint2","constructor"
"model_evaluator_array_util","entity boundary","model_evaluator_array_util","constructor"
"model_evaluator_array_util","entity boundary","model_evaluator_array_util::eval_exprs","command collaborator"
"model_evaluator_array_util","entity boundary","model_evaluator_array_util::extract_array_func_interp","predicate non-void-command collaborator"
"model_evaluator_array_util","entity boundary","model_evaluator_array_util::eval_array_eq","void-accessor command collaborator"
"model_evaluator_array_util","entity boundary","model_evaluator_array_util::eval","void-accessor command"
"DatatypeExpr","empty","DatatypeExpr","constructor"
"union_bvec","boundary","size","unclassified"
"union_bvec","boundary","operator[]","get collaborator"
"union_bvec","boundary","is_empty","predicate"
"union_bvec","boundary","is_empty_complete","predicate collaborator"
"union_bvec","boundary","is_full","predicate collaborator"
"union_bvec","boundary","contains","predicate collaborator"
"union_bvec","boundary","display","property collaborator"
"union_bvec","boundary","display","property collaborator"
"union_bvec","boundary","push_back","command collaborator"
"union_bvec","boundary","erase","command"
"union_bvec","boundary","reset","command collaborator"
"union_bvec","boundary","insert","predicate non-void-command collaborator"
"union_bvec","boundary","intersect","command collaborator"
"union_bvec","boundary","insert","command"
"union_bvec","boundary","intersect","controller"
"union_bvec","boundary","subtract","command"
"union_bvec","boundary","subtract","command collaborator"
"union_bvec","boundary","complement","unclassified"
"union_bvec","boundary","copy","command"
"union_bvec","boundary","simplify","command collaborator"
"union_bvec","boundary","well_formed","predicate collaborator"
"union_bvec","boundary","merge","command collaborator"
"union_bvec","boundary","merge","command collaborator"
"union_bvec","boundary","merge","command collaborator"
"union_bvec","boundary","join","command collaborator"
"union_bvec","boundary","get_size_estimate_bytes","collaborator"
"mk_separate_negated_tails","boundary","mk_separate_negated_tails::mk_separate_negated_tails","constructor"
"mk_separate_negated_tails","boundary","mk_separate_negated_tails::has_private_vars","predicate non-void-command"
"mk_separate_negated_tails","boundary","mk_separate_negated_tails::get_private_vars","command"
"mk_separate_negated_tails","boundary","mk_separate_negated_tails::abstract_predicate","void-accessor command collaborator"
"mk_separate_negated_tails","boundary","mk_separate_negated_tails::create_rule","command collaborator"
"mk_separate_negated_tails","boundary","mk_separate_negated_tails::operator()","property non-void-command collaborator"
"model_node","unclassified","post","property collaborator"
"model_node","unclassified","level","unclassified"
"model_node","unclassified","orig_level","get"
"model_node","unclassified","depth","get"
"model_node","unclassified","increase_level","command"
"model_node","unclassified","pob","get collaborator"
"model_node","unclassified","children","get collaborator"
"model_node","unclassified","pt","property collaborator"
"model_node","unclassified","parent","get"
"model_node","unclassified","is_closed","get"
"model_node","unclassified","is_open","predicate"
"model_node","unclassified","is_1closed","predicate non-void-command collaborator"
"model_node","unclassified","set_pre_closed","set"
"model_node","unclassified","set_closed","set"
"model_node","unclassified","reset_children","command"
"model_node","unclassified","next","get"
"model_node","unclassified","in_queue","predicate"
"model_node","unclassified","model_node::model_node","copy-constructor"
"model_node","unclassified","model_node::add_child","void-accessor command"
"model_node","unclassified","model_node::index_in_parent","unclassified"
"model_node","unclassified","model_node::check_pre_closed","command"
"model_node","unclassified","model_node::set_open","set"
"model_node","unclassified","model_node::detach","void-accessor command"
"model_node","unclassified","model_node::insert_after","void-accessor command"
"model_search","commander boundary","model_search","constructor"
"model_search","commander boundary","~model_search","destructor"
"model_search","commander boundary","get_root","get collaborator"
"model_search","commander boundary","model_search::reset","command"
"model_search","commander boundary","model_search::pop_front","property controller"
"model_search","commander boundary","model_search::add_leaf","command collaborator"
"model_search","commander boundary","model_search::enqueue_leaf","command collaborator"
"model_search","commander boundary","model_search::set_root","command collaborator"
"model_search","commander boundary","model_search::backtrack_level","command collaborator"
"model_search","commander boundary","model_search::cache","get non-void-command collaborator"
"model_search","commander boundary","model_search::erase_children","command collaborator"
"model_search","commander boundary","model_search::remove_node","command collaborator"
"prop_solver","entity commander boundary","set_core","set collaborator"
"prop_solver","entity commander boundary","set_model","set collaborator"
"prop_solver","entity commander boundary","set_subset_based_core","set"
"prop_solver","entity commander boundary","assumes_level","predicate wrapper"
"prop_solver","entity commander boundary","uses_level","get"
"prop_solver","entity commander boundary","assert_exprs","command collaborator"
"prop_solver","entity commander boundary","assert_exprs","command"
"prop_solver","entity commander boundary","prop_solver::prop_solver","constructor"
"prop_solver","entity commander boundary","prop_solver::add_level","command collaborator"
"prop_solver","entity commander boundary","prop_solver::ensure_level","command"
"prop_solver","entity commander boundary","prop_solver::level_cnt","unclassified"
"prop_solver","entity commander boundary","prop_solver::assert_level_atoms","command collaborator"
"prop_solver","entity commander boundary","prop_solver::assert_expr","command collaborator"
"prop_solver","entity commander boundary","prop_solver::assert_expr","command collaborator"
"prop_solver","entity commander boundary","prop_solver::mss","property non-void-command collaborator"
"prop_solver","entity commander boundary","prop_solver::maxsmt","property non-void-command collaborator"
"prop_solver","entity commander boundary","prop_solver::internal_check_assumptions","property non-void-command collaborator"
"prop_solver","entity commander boundary","prop_solver::check_assumptions","property non-void-command collaborator"
"prop_solver","entity commander boundary","prop_solver::collect_statistics","collaborator"
"prop_solver","entity commander boundary","prop_solver::reset_statistics","empty"
"solver::cmp_activity","data-provider boundary small-class","operator()","predicate collaborator"
"is_relevant_default","boundary degenerate small-class","operator()","collaborator incidental"
"mk_atom_default","pure-controller degenerate small-class","operator()","controller stateless"
"arith_project_util","entity boundary","is_linear","predicate non-void-command collaborator"
"arith_project_util","entity boundary","is_linear","predicate non-void-command"
"arith_project_util","entity boundary","project","predicate non-void-command collaborator"
"arith_project_util","entity boundary","project","predicate non-void-command collaborator"
"arith_project_util","entity boundary","find_max","non-void-command collaborator"
"arith_project_util","entity boundary","mk_lt","property non-void-command collaborator"
"arith_project_util","entity boundary","mk_le","property non-void-command collaborator"
"arith_project_util","entity boundary","mk_eq","property non-void-command collaborator"
"arith_project_util","entity boundary","mk_add","property non-void-command collaborator"
"arith_project_util","entity boundary","mk_mul","property non-void-command collaborator"
"arith_project_util","entity boundary","factor_mod_terms","void-accessor command collaborator"
"arith_project_util","entity boundary","mod2div","void-accessor command collaborator"
"arith_project_util","entity boundary","collect_lits","command collaborator"
"arith_project_util","entity boundary","mk_lit_substitutes","command"
"arith_project_util","entity boundary","substitute","command collaborator"
"arith_project_util","entity boundary","arith_project_util","constructor"
"arith_project_util","entity boundary","operator()","property non-void-command collaborator"
"arith_project_util","entity boundary","operator()","collaborator"
"arith_project_util","entity boundary","operator()","void-accessor command collaborator"
"th_euf_solver","boundary","add_clause","predicate non-void-command collaborator"
"th_euf_solver","boundary","add_clause","predicate non-void-command collaborator"
"th_euf_solver","boundary","add_redundant","predicate non-void-command collaborator"
"th_euf_solver","boundary","is_true","predicate non-void-command collaborator"
"th_euf_solver","boundary","is_true","predicate non-void-command collaborator"
"th_euf_solver","boundary","is_true","predicate non-void-command collaborator"
"th_euf_solver","boundary","eq_internalize","property non-void-command collaborator"
"th_euf_solver","boundary","mk_var_eq","property non-void-command collaborator"
"th_euf_solver","boundary","force_push","set"
"th_euf_solver","boundary","get_num_vars","controller stateless"
"th_euf_solver","boundary","var2enode","get collaborator"
"th_euf_solver","boundary","var2expr","property collaborator"
"th_euf_solver","boundary","is_representative","predicate collaborator"
"th_euf_solver","boundary","bool_var2enode","property collaborator"
"th_euf_solver","boundary","get_th_var","property collaborator"
"th_euf_solver","boundary","is_root","predicate collaborator"
"th_euf_solver","boundary","push","set"
"th_euf_solver","boundary","th_euf_solver::th_euf_solver","constructor"
"th_euf_solver","boundary","th_euf_solver::get_config","property collaborator"
"th_euf_solver","boundary","th_euf_solver::get_region","property non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::get_trail_stack","property non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::expr2enode","property collaborator"
"th_euf_solver","boundary","th_euf_solver::expr2literal","property collaborator"
"th_euf_solver","boundary","th_euf_solver::bool_var2expr","property collaborator"
"th_euf_solver","boundary","th_euf_solver::literal2expr","property collaborator"
"th_euf_solver","boundary","th_euf_solver::mk_var","property non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::is_attached_to_var","predicate collaborator"
"th_euf_solver","boundary","th_euf_solver::get_th_var","property collaborator"
"th_euf_solver","boundary","th_euf_solver::get_representative","property collaborator"
"th_euf_solver","boundary","th_euf_solver::push_core","controller stateless"
"th_euf_solver","boundary","th_euf_solver::pop_core","controller"
"th_euf_solver","boundary","th_euf_solver::pop","set"
"th_euf_solver","boundary","th_euf_solver::add_unit","predicate non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::add_units","wrapper stateless"
"th_euf_solver","boundary","th_euf_solver::add_clause","predicate non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::add_clause","predicate non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::add_clause","predicate non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::add_clause","predicate non-void-command"
"th_euf_solver","boundary","th_euf_solver::add_equiv","command collaborator"
"th_euf_solver","boundary","th_euf_solver::add_equiv_and","command collaborator"
"th_euf_solver","boundary","th_euf_solver::is_true","predicate non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::mk_enode","property non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::rewrite","command collaborator"
"th_euf_solver","boundary","th_euf_solver::mk_eq","property non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::mk_literal","property collaborator"
"th_euf_solver","boundary","th_euf_solver::eq_internalize","property non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::e_internalize","property non-void-command collaborator"
"th_euf_solver","boundary","th_euf_solver::random","non-void-command"
"ptr_addr_hashtable","boundary degenerate small-class","ptr_addr_hashtable","constructor"
"ptr_addr_hashtable","boundary degenerate small-class","begin","wrapper stateless"
"ptr_addr_hashtable","boundary degenerate small-class","end","wrapper stateless"
"index_lt_proc","entity boundary small-class","index_lt_proc","constructor"
"index_lt_proc","entity boundary small-class","operator()","predicate non-void-command collaborator"
"push_ite_simplifier","commander small-class","push_ite_simplifier","constructor"
"push_ite_simplifier","commander small-class","name","incidental"
"push_ite_simplifier","commander small-class","reduce","command collaborator"
"ematch::pop_clause","commander small-class","undo","command"
"has_nlira_functor","commander degenerate","operator()","empty"
"has_nlira_functor","commander degenerate","operator()","empty"
"has_nlira_functor","commander degenerate","operator()","command collaborator"
"pp_var","empty","pp_var","constructor"
"ground_sat_answer_op::frame","entity boundary","head","property non-void-command collaborator"
"ground_sat_answer_op::frame","entity boundary","fact","get collaborator"
"ground_sat_answer_op::frame","entity boundary","rule","property non-void-command collaborator"
"ground_sat_answer_op::frame","entity boundary","pt","get collaborator"
"ground_sat_answer_op","entity boundary","ground_sat_answer_op::ground_sat_answer_op","constructor"
"ground_sat_answer_op","entity boundary","ground_sat_answer_op::operator()","property non-void-command collaborator"
"ground_sat_answer_op","entity boundary","ground_sat_answer_op::mk_children","command collaborator"
"ground_sat_answer_op","entity boundary","ground_sat_answer_op::mk_child_subst_from_model","command collaborator"
"ground_sat_answer_op","entity boundary","ground_sat_answer_op::mk_proof_step","property non-void-command collaborator"
"datatype_factory","entity boundary","datatype_factory::datatype_factory","constructor"
"datatype_factory","entity boundary","datatype_factory::get_some_value","property non-void-command collaborator"
"datatype_factory","entity boundary","datatype_factory::get_last_fresh_value","property non-void-command collaborator"
"datatype_factory","entity boundary","datatype_factory::is_subterm_of_last_value","predicate non-void-command collaborator"
"datatype_factory","entity boundary","datatype_factory::get_almost_fresh_value","property non-void-command factory collaborator"
"datatype_factory","entity boundary","datatype_factory::get_fresh_value","property non-void-command factory collaborator"
"intersect_proc","commander small-class","intersect_proc","constructor"
"intersect_proc","commander small-class","operator()","command collaborator"
"intersect_proc","commander small-class","operator()","empty"
"formula_checker","small-class","formula_checker","constructor"
"formula_checker","small-class","operator()","set collaborator"
"formula_checker","small-class","all_have_idx","predicate"
"conv_rewriter_cfg","entity boundary small-class","conv_rewriter_cfg","constructor"
"conv_rewriter_cfg","entity boundary small-class","get_subst","predicate non-void-command collaborator"
"factor_params","small-class","factor_params::factor_params","constructor"
"factor_params","small-class","factor_params::factor_params","constructor"
"factor_params","small-class","factor_params::updt_params","command collaborator"
"factor_params","small-class","factor_params::get_param_descrs","controller stateless"
"propagation_item","data-provider","~propagation_item","destructor"
"propagation_item","data-provider","propagation_item","constructor"
"propagation_item","data-provider","propagation_item","constructor"
"propagation_item","data-provider","propagation_item","constructor"
"propagation_item","data-provider","propagation_item","constructor"
"propagation_item","data-provider","is_guard","predicate"
"propagation_item","data-provider","is_core","predicate"
"propagation_item","data-provider","is_case","predicate"
"propagation_item","data-provider","is_body","predicate"
"propagation_item","data-provider","core","get collaborator"
"propagation_item","data-provider","body","get collaborator"
"propagation_item","data-provider","case_ex","get collaborator"
"propagation_item","data-provider","guard","get collaborator"
"farkas_optimized_less_than_pairs","pure-controller degenerate small-class","operator()","controller stateless"
"unsat_core_plugin","degenerate small-class","finalize","empty"
"unsat_core_plugin","degenerate small-class","unsat_core_plugin::unsat_core_plugin","constructor"
"prime_generator","commander","prime_generator::process_next_k_numbers","command"
"prime_generator","commander","prime_generator::initialize","command"
"prime_generator","commander","prime_generator::finalize","command"
"prime_generator","commander","prime_generator::operator()","get non-void-command"
"unsat_core_plugin_farkas_lemma","small-class","unsat_core_plugin_farkas_lemma","constructor"
"unsat_core_plugin_farkas_lemma","small-class","unsat_core_plugin_farkas_lemma::compute_partial_core","command collaborator"
"unsat_core_plugin_farkas_lemma","small-class","unsat_core_plugin_farkas_lemma::compute_linear_combination","property controller"
"heap","unclassified","display","unclassified"
"heap","unclassified","is_valid_value","controller stateless"
"heap","unclassified","check_invariant_core","predicate"
"heap","unclassified","check_invariant","predicate"
"heap","unclassified","move_up","command"
"heap","unclassified","move_down","command"
"heap","unclassified","heap","constructor"
"heap","unclassified","less_than","wrapper stateless"
"heap","unclassified","empty","predicate"
"heap","unclassified","contains","predicate controller"
"heap","unclassified","reset","command"
"heap","unclassified","clear","command"
"heap","unclassified","set_bounds","command"
"heap","unclassified","get_bounds","controller stateless"
"heap","unclassified","size","unclassified"
"heap","unclassified","reserve","command"
"heap","unclassified","min_value","get"
"heap","unclassified","erase_min","property non-void-command"
"heap","unclassified","erase","command"
"heap","unclassified","decreased","command"
"heap","unclassified","increased","command"
"heap","unclassified","insert","command"
"heap","unclassified","begin","property non-void-command collaborator"
"heap","unclassified","end","property non-void-command collaborator"
"heap","unclassified","begin","property collaborator"
"heap","unclassified","end","property collaborator"
"heap","unclassified","swap","command"
"heap","unclassified","find_le","command collaborator"
"heap","unclassified","display","collaborator"
"contains_def_pred","entity boundary small-class","contains_def_pred","constructor"
"contains_def_pred","entity boundary small-class","operator()","predicate non-void-command collaborator"
"adhoc_rewriter_cfg","entity boundary","adhoc_rewriter_cfg","constructor"
"adhoc_rewriter_cfg","entity boundary","is_le","predicate collaborator"
"adhoc_rewriter_cfg","entity boundary","is_ge","predicate collaborator"
"adhoc_rewriter_cfg","entity boundary","reduce_app","property non-void-command collaborator"
"adhoc_rewriter_cfg","entity boundary","mk_le_core","property non-void-command collaborator"
"adhoc_rewriter_cfg","entity boundary","mk_ge_core","property non-void-command collaborator"
"adhoc_rewriter_cfg","entity boundary","mk_zero","property non-void-command collaborator"
"adhoc_rewriter_cfg","entity boundary","is_one","predicate collaborator"
"max_cliques","commander boundary","get_reachable","command collaborator"
"max_cliques","commander boundary","next","get collaborator"
"max_cliques","commander boundary","init","command collaborator"
"max_cliques","commander boundary","init","command collaborator"
"max_cliques","commander boundary","add_edge","command"
"max_cliques","commander boundary","cliques1","command collaborator"
"max_cliques","commander boundary","cliques2","command collaborator"
"max_cliques","commander boundary","cliques","controller stateless"
"th_solver","degenerate","th_solver","constructor"
"th_solver","degenerate","check_sat","property non-void-command collaborator"
"th_solver","degenerate","th_solver","constructor"
"th_solver","degenerate","new_eq_eh","empty"
"th_solver","degenerate","use_diseqs","incidental"
"th_solver","degenerate","new_diseq_eh","empty"
"th_solver","degenerate","enable_ackerman_axioms","collaborator incidental"
"th_solver","degenerate","is_fixed","collaborator incidental"
"th_solver","degenerate","relevant_eh","empty"
"th_solver","degenerate","is_shared","collaborator incidental"
"th_solver","degenerate","is_beta_redex","collaborator incidental"
"th_solver","degenerate","status","property collaborator"
"th_solver","degenerate","set_bool_search","empty"
"th_solver","degenerate","set_bounds_begin","empty"
"th_solver","degenerate","set_bounds_end","empty"
"th_solver","degenerate","set_bounds","empty"
"th_solver","degenerate","finalize","empty"
"th_solver","degenerate","th_solver::get_justification_eq","wrapper stateless"
"fingerprint","data-provider boundary","get_data","get collaborator"
"fingerprint","data-provider boundary","get_def","get collaborator"
"fingerprint","data-provider boundary","get_data_hash","get"
"fingerprint","data-provider boundary","get_num_args","get"
"fingerprint","data-provider boundary","get_args","get collaborator"
"fingerprint","data-provider boundary","get_arg","get wrapper"
"fingerprint","data-provider boundary","begin","get collaborator"
"fingerprint","data-provider boundary","end","property collaborator"
"fingerprint","data-provider boundary","fingerprint::fingerprint","constructor"
"then_simplifier","commander boundary","name","incidental"
"then_simplifier","commander boundary","add_simplifier","command collaborator"
"then_simplifier","commander boundary","reduce","command collaborator"
"then_simplifier","commander boundary","collect_statistics","collaborator"
"then_simplifier","commander boundary","reset_statistics","command"
"then_simplifier","commander boundary","updt_params","command collaborator"
"then_simplifier","commander boundary","collect_param_descrs","command collaborator"
"then_simplifier","commander boundary","push","command"
"then_simplifier","commander boundary","pop","command"
"check_select","commander small-class","check_select","constructor"
"check_select","commander small-class","operator()","empty"
"check_select","commander small-class","operator()","command collaborator"
"paccessor_decl","entity boundary","obj_size","incidental"
"paccessor_decl","entity boundary","get_name","get collaborator"
"paccessor_decl","entity boundary","get_type","get collaborator"
"paccessor_decl","entity boundary","display","property collaborator"
"paccessor_decl","entity boundary","paccessor_decl::paccessor_decl","constructor"
"paccessor_decl","entity boundary","paccessor_decl::finalize","command collaborator"
"paccessor_decl","entity boundary","paccessor_decl::has_missing_refs","predicate collaborator"
"paccessor_decl","entity boundary","paccessor_decl::fix_missing_refs","predicate non-void-command collaborator"
"paccessor_decl","entity boundary","paccessor_decl::instantiate_decl","property non-void-command collaborator"
"paccessor_decl","entity boundary","paccessor_decl::display","collaborator"
"elim_term_ite_rw","unclassified","elim_term_ite_rw","constructor"
"elim_term_ite_rw","unclassified","new_defs","property collaborator"
"elim_term_ite_rw","unclassified","push","command"
"elim_term_ite_rw","unclassified","pop","command"
"collect_decls","commander small-class","collect_decls","constructor"
"collect_decls","commander small-class","operator()","empty"
"collect_decls","commander small-class","operator()","command collaborator"
"bv2int_rewriter_ctx","boundary","bv2int_rewriter_ctx","constructor"
"bv2int_rewriter_ctx","boundary","reset","command"
"bv2int_rewriter_ctx","boundary","add_side_condition","command collaborator"
"bv2int_rewriter_ctx","boundary","num_side_conditions","unclassified"
"bv2int_rewriter_ctx","boundary","side_conditions","property collaborator"
"bv2int_rewriter_ctx","boundary","get_max_num_bits","get"
"bv2int_rewriter_ctx","boundary","power2","get collaborator"
"bv2int_rewriter_ctx","boundary","bv2int_rewriter_ctx::update_params","set collaborator"
"bv2int_rewriter_ctx","boundary","bv2int_rewriter_ctx::collect_power2","command collaborator"
"bv2int_rewriter_ctx","boundary","bv2int_rewriter_ctx::is_power2","controller stateless"
"fixed_bit_vector_manager","boundary","reset","command"
"fixed_bit_vector_manager","boundary","num_words","get"
"fixed_bit_vector_manager","boundary","num_bytes","get"
"fixed_bit_vector_manager","boundary","num_bits","get"
"fixed_bit_vector_manager","boundary","reset","property collaborator"
"fixed_bit_vector_manager","boundary","get_mask","get"
"fixed_bit_vector_manager","boundary","set","command"
"fixed_bit_vector_manager","boundary","unset","command"
"fixed_bit_vector_manager","boundary","set","command"
"fixed_bit_vector_manager","boundary","set","command"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::fixed_bit_vector_manager","constructor"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::allocate","property non-void-command collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::allocate0","property non-void-command collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::allocate1","property non-void-command collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::allocate","property non-void-command collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::deallocate","command collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::copy","collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::fill0","property collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::fill1","property collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::set_and","property collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::set_or","property collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::set_neg","property collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::last_word","collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::equals","predicate collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::hash","collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::contains","predicate collaborator"
"fixed_bit_vector_manager","boundary","fixed_bit_vector_manager::display","property collaborator"
"contains_real_proc","commander small-class","contains_real_proc","constructor"
"contains_real_proc","commander small-class","operator()","empty"
"contains_real_proc","commander small-class","operator()","command collaborator"
"theory_array_bapa","entity commander boundary","theory_array_bapa::theory_array_bapa","constructor"
"theory_array_bapa","entity commander boundary","theory_array_bapa::~theory_array_bapa","destructor"
"theory_array_bapa","entity commander boundary","theory_array_bapa::internalize_term","command collaborator"
"theory_array_bapa","entity commander boundary","theory_array_bapa::final_check","property non-void-command collaborator"
"theory_array_bapa","entity commander boundary","theory_array_bapa::init_model","command"
"theory_array_bapa","entity commander boundary","theory_array_bapa::should_research","predicate non-void-command collaborator"
"theory_array_bapa","entity commander boundary","theory_array_bapa::add_theory_assumptions","command collaborator"
"index","entity boundary","index","constructor"
"index","entity boundary","insert","command collaborator"
"index","entity boundary","is_subsumed","predicate non-void-command"
"index","entity boundary","reset","command"
"index","entity boundary","setup","command collaborator"
"index","entity boundary","find_match","predicate non-void-command"
"index","entity boundary","match_rule","predicate non-void-command collaborator"
"index","entity boundary","match_head","predicate non-void-command collaborator"
"index","entity boundary","match_predicates","predicate non-void-command collaborator"
"index","entity boundary","check_substitution","predicate non-void-command collaborator"
"index","entity boundary","normalize","property non-void-command collaborator"
"selection","entity commander boundary","selection","constructor"
"selection","entity commander boundary","init","command collaborator"
"selection","entity commander boundary","select","non-void-command collaborator"
"selection","entity commander boundary","reset","command"
"selection","entity commander boundary","is_reductive","predicate non-void-command collaborator"
"selection","entity commander boundary","set_strategy","set collaborator"
"selection","entity commander boundary","trivial_select","collaborator incidental"
"selection","entity commander boundary","andrei_select","non-void-command collaborator"
"selection","entity commander boundary","basic_weight_select","non-void-command collaborator"
"selection","entity commander boundary","weight_select","non-void-command collaborator"
"selection","entity commander boundary","score_variables","command collaborator"
"selection","entity commander boundary","score_variables","command collaborator"
"selection","entity commander boundary","normalize_scores","command collaborator"
"selection","entity commander boundary","basic_score_predicate","property non-void-command collaborator"
"selection","entity commander boundary","basic_score_predicate","command collaborator"
"selection","entity commander boundary","score_predicate","property non-void-command collaborator"
"selection","entity commander boundary","score_argument","non-void-command collaborator"
"selection","entity commander boundary","score_argument","void-accessor command"
"selection","entity commander boundary","prepare_weight_select","command"
"selection","entity commander boundary","find_score","predicate non-void-command"
"selection","entity commander boundary","adjust_score","property"
"selection","entity commander boundary","insert_score","command"
"selection","entity commander boundary","insert_score","command collaborator"
"extract_delta","entity boundary","extract_delta","constructor"
"extract_delta","entity boundary","mk_delta_clauses","void-accessor command collaborator"
"extract_delta","entity boundary","resolve_rules","property non-void-command collaborator"
"extract_delta","entity boundary","mk_fresh_vars","property non-void-command collaborator"
"tab","entity boundary","tab::tab","constructor"
"tab","entity boundary","tab::~tab","destructor"
"tab","entity boundary","tab::query","property non-void-command collaborator"
"tab","entity boundary","tab::cleanup","command"
"tab","entity boundary","tab::reset_statistics","command"
"tab","entity boundary","tab::collect_statistics","collaborator"
"tab","entity boundary","tab::display_certificate","collaborator"
"tab","entity boundary","tab::get_answer","property non-void-command collaborator"
"argument_parser","unclassified","argument_parser","constructor"
"argument_parser","unclassified","add_option","command"
"argument_parser","unclassified","add_option_with_help_string","set"
"argument_parser","unclassified","add_option_with_after_string","command"
"argument_parser","unclassified","add_option_with_after_string_with_help","set"
"argument_parser","unclassified","parse","predicate non-void-command"
"argument_parser","unclassified","contains","controller stateless"
"argument_parser","unclassified","contains","controller stateless"
"argument_parser","unclassified","option_is_used","predicate non-void-command"
"argument_parser","unclassified","get_option_value","property non-void-command collaborator"
"argument_parser","unclassified","starts_with","predicate non-void-command"
"argument_parser","unclassified","starts_with","controller stateless"
"argument_parser","unclassified","usage_string","property non-void-command collaborator"
"argument_parser","unclassified","print","command"
"mk_array_blast","entity boundary","mk_array_blast::mk_array_blast","constructor"
"mk_array_blast","entity boundary","mk_array_blast::~mk_array_blast","destructor"
"mk_array_blast","entity boundary","mk_array_blast::is_store_def","predicate non-void-command collaborator"
"mk_array_blast","entity boundary","mk_array_blast::get_select","property collaborator"
"mk_array_blast","entity boundary","mk_array_blast::get_select_args","void-accessor collaborator"
"mk_array_blast","entity boundary","mk_array_blast::insert_def","predicate non-void-command collaborator"
"mk_array_blast","entity boundary","mk_array_blast::is_select_eq_var","predicate collaborator"
"mk_array_blast","entity boundary","mk_array_blast::ackermanize","predicate non-void-command collaborator"
"mk_array_blast","entity boundary","mk_array_blast::blast","predicate non-void-command collaborator"
"mk_array_blast","entity boundary","mk_array_blast::operator()","property non-void-command collaborator"
"maxsmt_wrapper","unclassified","maxsmt_wrapper","constructor"
"maxsmt_wrapper","unclassified","operator()","controller stateless"
"maxsmt_wrapper","unclassified","get_model","get collaborator"
"maxsmt_wrapper","unclassified","maxsmt_wrapper::operator()","property non-void-command collaborator"
"psort_eq_proc","pure-controller degenerate small-class","operator()","controller stateless"
"bit2int","boundary","is_cached","predicate collaborator"
"bit2int","boundary","reset_cache","command"
"bit2int","boundary","flush_cache","command"
"bit2int","boundary","bit2int::bit2int","constructor"
"bit2int","boundary","bit2int::operator()","void-accessor command collaborator"
"bit2int","boundary","bit2int::get_b2i_size","non-void-command collaborator"
"bit2int","boundary","bit2int::get_numeral_bits","controller stateless"
"bit2int","boundary","bit2int::align_size","void-accessor command collaborator"
"bit2int","boundary","bit2int::align_sizes","void-accessor command collaborator"
"bit2int","boundary","bit2int::extract_bv","predicate non-void-command collaborator"
"bit2int","boundary","bit2int::mk_add","predicate non-void-command collaborator"
"bit2int","boundary","bit2int::mk_comp","predicate non-void-command collaborator"
"bit2int","boundary","bit2int::mk_mul","predicate non-void-command collaborator"
"bit2int","boundary","bit2int::is_bv_poly","predicate non-void-command collaborator"
"bit2int","boundary","bit2int::visit","command collaborator"
"bit2int","boundary","bit2int::visit","command collaborator"
"bit2int","boundary","bit2int::get_cached","property collaborator"
"bit2int","boundary","bit2int::cache_result","command collaborator"
"mk_array_eq_rewrite","entity boundary","~mk_array_eq_rewrite","destructor"
"mk_array_eq_rewrite","entity boundary","mk_array_eq_rewrite::mk_array_eq_rewrite","constructor"
"mk_array_eq_rewrite","entity boundary","mk_array_eq_rewrite::operator()","property non-void-command collaborator"
"mk_array_eq_rewrite","entity boundary","mk_array_eq_rewrite::instantiate_rule","command collaborator"
"mk_array_eq_rewrite","entity boundary","mk_array_eq_rewrite::replace","property non-void-command factory collaborator"
"pp_prefix","empty","pp_prefix","constructor"
"mk_bit_blast","boundary degenerate small-class","mk_bit_blast::mk_bit_blast","constructor"
"mk_bit_blast","boundary degenerate small-class","mk_bit_blast::~mk_bit_blast","destructor"
"mk_bit_blast","boundary degenerate small-class","mk_bit_blast::operator()","wrapper stateless"
"optional<T*>","data-provider","optional","constructor"
"optional<T*>","data-provider","optional","constructor"
"optional<T*>","data-provider","initialized","predicate"
"optional<T*>","data-provider","operatorbool","unclassified"
"optional<T*>","data-provider","operator!","predicate"
"optional<T*>","data-provider","reset","set"
"optional<T*>","data-provider","operator=","get set collaborator"
"optional<T*>","data-provider","operator=","get set"
"optional<T*>","data-provider","operator->","property collaborator"
"optional<T*>","data-provider","operator*","get collaborator"
"optional<T*>","data-provider","operator*","get collaborator"
"index_term_finder","commander degenerate","index_term_finder","constructor"
"index_term_finder","commander degenerate","operator()","empty"
"index_term_finder","commander degenerate","operator()","empty"
"index_term_finder","commander degenerate","operator()","command collaborator"
"mk_coi_filter","entity boundary","mk_coi_filter","constructor"
"mk_coi_filter","entity boundary","mk_coi_filter::operator()","property non-void-command collaborator"
"mk_coi_filter","entity boundary","mk_coi_filter::bottom_up","property non-void-command collaborator"
"mk_coi_filter","entity boundary","mk_coi_filter::top_down","property non-void-command collaborator"
"uninterp_const_collector","commander degenerate","uninterp_const_collector","constructor"
"uninterp_const_collector","commander degenerate","operator()","empty"
"uninterp_const_collector","commander degenerate","operator()","empty"
"uninterp_const_collector","commander degenerate","operator()","empty"
"uninterp_const_collector","commander degenerate","operator()","command collaborator"
"term_ite_proc","commander degenerate","operator()","empty"
"term_ite_proc","commander degenerate","operator()","empty"
"term_ite_proc","commander degenerate","operator()","command collaborator"
"dyn_ack_cc_justification","degenerate","dyn_ack_cc_justification","constructor"
"dyn_ack_cc_justification","degenerate","get_name","incidental"
"dyn_ack_cc_justification","degenerate","get_antecedents","empty"
"dyn_ack_cc_justification","degenerate","display_debug_info","controller"
"dyn_ack_cc_justification","degenerate","mk_hypothesis","controller stateless"
"dyn_ack_cc_justification","degenerate","mk_proof","property non-void-command collaborator"
"mk_elim_term_ite","entity boundary","mk_elim_term_ite::mk_elim_term_ite","constructor"
"mk_elim_term_ite","entity boundary","mk_elim_term_ite::~mk_elim_term_ite","destructor"
"mk_elim_term_ite","entity boundary","mk_elim_term_ite::ground","property non-void-command collaborator"
"mk_elim_term_ite","entity boundary","mk_elim_term_ite::elim","predicate non-void-command collaborator"
"mk_elim_term_ite","entity boundary","mk_elim_term_ite::operator()","property non-void-command collaborator"
"default_obj_chash","boundary degenerate small-class","operator()","wrapper stateless"
"mk_filter_rules","entity boundary","mk_filter_rules::mk_filter_rules","constructor"
"mk_filter_rules","entity boundary","mk_filter_rules::~mk_filter_rules","destructor"
"mk_filter_rules","entity boundary","mk_filter_rules::is_candidate","predicate non-void-command collaborator"
"mk_filter_rules","entity boundary","mk_filter_rules::mk_filter_decl","property non-void-command collaborator"
"mk_filter_rules","entity boundary","mk_filter_rules::process","command collaborator"
"mk_filter_rules","entity boundary","mk_filter_rules::operator()","get property non-void-command collaborator"
"cofactor_elim_term_ite","commander boundary","cofactor_elim_term_ite::cofactor_elim_term_ite","constructor"
"cofactor_elim_term_ite","commander boundary","cofactor_elim_term_ite::~cofactor_elim_term_ite","destructor"
"cofactor_elim_term_ite","commander boundary","cofactor_elim_term_ite::updt_params","command collaborator"
"cofactor_elim_term_ite","commander boundary","cofactor_elim_term_ite::collect_param_descrs","command collaborator"
"cofactor_elim_term_ite","commander boundary","cofactor_elim_term_ite::operator()","collaborator incidental"
"cofactor_elim_term_ite","commander boundary","cofactor_elim_term_ite::cleanup","wrapper"
"mk_interp_tail_simplifier","boundary","mk_interp_tail_simplifier::mk_interp_tail_simplifier","constructor"
"mk_interp_tail_simplifier","boundary","mk_interp_tail_simplifier::~mk_interp_tail_simplifier","destructor"
"mk_interp_tail_simplifier","boundary","mk_interp_tail_simplifier::simplify_expr","controller"
"mk_interp_tail_simplifier","boundary","mk_interp_tail_simplifier::propagate_variable_equivalences","predicate non-void-command collaborator"
"mk_interp_tail_simplifier","boundary","mk_interp_tail_simplifier::transform_rule","predicate non-void-command collaborator"
"mk_interp_tail_simplifier","boundary","mk_interp_tail_simplifier::transform_rules","predicate non-void-command collaborator"
"mk_interp_tail_simplifier","boundary","mk_interp_tail_simplifier::operator()","property non-void-command collaborator"
"trivial","empty","trivial","constructor"
"trivial","empty","~trivial","destructor"
"mk_karr_invariants::add_invariant_model_converter","entity commander boundary","add","command collaborator"
"mk_karr_invariants::add_invariant_model_converter","entity commander boundary","get_units","empty"
"mk_karr_invariants::add_invariant_model_converter","entity commander boundary","operator()","command collaborator"
"mk_karr_invariants::add_invariant_model_converter","entity commander boundary","translate","property non-void-command collaborator"
"mk_karr_invariants::add_invariant_model_converter","entity commander boundary","display","collaborator incidental"
"mk_karr_invariants::add_invariant_model_converter","entity commander boundary","mk_body","command collaborator"
"mk_karr_invariants::add_invariant_model_converter","entity commander boundary","mk_body","command collaborator"
"proof_cmds_imp","entity commander boundary","checker","get set collaborator"
"proof_cmds_imp","entity commander boundary","saver","get set collaborator"
"proof_cmds_imp","entity commander boundary","trim","get set collaborator"
"proof_cmds_imp","entity commander boundary","assumption","get non-void-command collaborator"
"proof_cmds_imp","entity commander boundary","del","get non-void-command collaborator"
"proof_cmds_imp","entity commander boundary","is_dep","predicate non-void-command collaborator"
"proof_cmds_imp","entity commander boundary","get_deps","command collaborator"
"proof_cmds_imp","entity commander boundary","proof_cmds_imp","constructor"
"proof_cmds_imp","entity commander boundary","add_literal","command collaborator"
"proof_cmds_imp","entity commander boundary","end_assumption","command"
"proof_cmds_imp","entity commander boundary","end_infer","command"
"proof_cmds_imp","entity commander boundary","end_deleted","command"
"proof_cmds_imp","entity commander boundary","updt_params","command collaborator"
"proof_cmds_imp","entity commander boundary","register_on_clause","command collaborator"
"mk_karr_invariants","entity boundary","mk_karr_invariants::mk_karr_invariants","constructor"
"mk_karr_invariants","entity boundary","mk_karr_invariants::~mk_karr_invariants","destructor"
"mk_karr_invariants","entity boundary","mk_karr_invariants::operator()","property non-void-command collaborator"
"mk_karr_invariants","entity boundary","mk_karr_invariants::get_invariants","command collaborator"
"mk_karr_invariants","entity boundary","mk_karr_invariants::update_rules","property non-void-command collaborator"
"mk_karr_invariants","entity boundary","mk_karr_invariants::update_body","command collaborator"
"unsat_core_plugin_min_cut","commander boundary","unsat_core_plugin_min_cut::unsat_core_plugin_min_cut","constructor"
"unsat_core_plugin_min_cut","commander boundary","unsat_core_plugin_min_cut::compute_partial_core","command collaborator"
"unsat_core_plugin_min_cut","commander boundary","unsat_core_plugin_min_cut::advance_to_lowest_partial_cut","command collaborator"
"unsat_core_plugin_min_cut","commander boundary","unsat_core_plugin_min_cut::add_edge","command collaborator"
"unsat_core_plugin_min_cut","commander boundary","unsat_core_plugin_min_cut::finalize","command"
"spacer_matrix","boundary","num_rows","get"
"spacer_matrix","boundary","num_cols","get"
"spacer_matrix","boundary","get","get collaborator"
"spacer_matrix","boundary","set","set collaborator"
"spacer_matrix","boundary","get_row","property collaborator"
"spacer_matrix","boundary","reset","command"
"spacer_matrix","boundary","spacer_matrix::spacer_matrix","constructor"
"spacer_matrix","boundary","spacer_matrix::get_col","void-accessor controller"
"spacer_matrix","boundary","spacer_matrix::add_row","command collaborator"
"spacer_matrix","boundary","spacer_matrix::perform_gaussian_elimination","non-void-command"
"spacer_matrix","boundary","spacer_matrix::display","property collaborator"
"spacer_matrix","boundary","spacer_matrix::normalize","set"
"spacer_matrix","boundary","spacer_matrix::is_lin_reltd","predicate wrapper"
"spacer_matrix","boundary","spacer_matrix::compute_linear_deps","predicate"
"simplifier::elim_var_report","empty","~elim_var_report","destructor"
"midpoint_node_splitter","commander boundary small-class","midpoint_node_splitter","constructor"
"midpoint_node_splitter","commander boundary small-class","operator()","command collaborator"
"ackerman","entity commander boundary","ackerman::ackerman","constructor"
"ackerman","entity commander boundary","ackerman::~ackerman","destructor"
"ackerman","entity commander boundary","ackerman::reset","command"
"ackerman","entity commander boundary","ackerman::used_eq_eh","command collaborator"
"ackerman","entity commander boundary","ackerman::used_diseq_eh","command collaborator"
"ackerman","entity commander boundary","ackerman::update_glue","void-accessor command collaborator"
"ackerman","entity commander boundary","ackerman::remove","command collaborator"
"ackerman","entity commander boundary","ackerman::new_tmp","command"
"ackerman","entity commander boundary","ackerman::gc","command"
"ackerman","entity commander boundary","ackerman::propagate","command"
"ackerman","entity commander boundary","ackerman::add_cc","command collaborator"
"ackerman","entity commander boundary","ackerman::ackerman","constructor"
"ackerman","entity commander boundary","ackerman::~ackerman","destructor"
"ackerman","entity commander boundary","ackerman::reset","command collaborator"
"ackerman","entity commander boundary","ackerman::insert","command collaborator"
"ackerman","entity commander boundary","ackerman::insert","command collaborator"
"ackerman","entity commander boundary","ackerman::insert","command collaborator"
"ackerman","entity commander boundary","ackerman::remove","command collaborator"
"ackerman","entity commander boundary","ackerman::new_tmp","set"
"ackerman","entity commander boundary","ackerman::enable_cc","predicate non-void-command collaborator"
"ackerman","entity commander boundary","ackerman::enable_eq","predicate non-void-command collaborator"
"ackerman","entity commander boundary","ackerman::cg_conflict_eh","command collaborator"
"ackerman","entity commander boundary","ackerman::used_eq_eh","command collaborator"
"ackerman","entity commander boundary","ackerman::used_cc_eh","command collaborator"
"ackerman","entity commander boundary","ackerman::gc","command"
"ackerman","entity commander boundary","ackerman::propagate","command"
"ackerman","entity commander boundary","ackerman::add_cc","command collaborator"
"ackerman","entity commander boundary","ackerman::add_eq","command collaborator"
"bmc::nonlinear_dt","entity boundary","check","property non-void-command collaborator"
"bmc::nonlinear_dt","entity boundary","setup","command collaborator"
"bmc::nonlinear_dt","entity boundary","mk_predicate","property non-void-command collaborator"
"bmc::nonlinear_dt","entity boundary","mk_rule","property non-void-command collaborator"
"bmc::nonlinear_dt","entity boundary","mk_var","property non-void-command collaborator"
"bmc::nonlinear_dt","entity boundary","mk_arg","property non-void-command collaborator"
"bmc::nonlinear_dt","entity boundary","mk_subst","void-accessor command collaborator"
"bmc::nonlinear_dt","entity boundary","compile","command collaborator"
"bmc::nonlinear_dt","entity boundary","declare_datatypes","command collaborator"
"bmc::nonlinear_dt","entity boundary","get_proof","property non-void-command collaborator"
"bmc::nonlinear_dt","entity boundary","check_query","property non-void-command collaborator"
"bmc::nonlinear_dt","entity boundary","check_model","predicate non-void-command collaborator"
"bmc::nonlinear_dt","entity boundary","mk_answer","void-accessor command collaborator"
"mk_loop_counter","boundary","get_old","controller stateless"
"mk_loop_counter","boundary","mk_loop_counter::mk_loop_counter","constructor"
"mk_loop_counter","boundary","mk_loop_counter::~mk_loop_counter","destructor"
"mk_loop_counter","boundary","mk_loop_counter::add_arg","property non-void-command collaborator"
"mk_loop_counter","boundary","mk_loop_counter::del_arg","property non-void-command collaborator"
"mk_loop_counter","boundary","mk_loop_counter::operator()","property non-void-command collaborator"
"mk_loop_counter","boundary","mk_loop_counter::revert","property non-void-command collaborator"
"mk_magic_sets","entity boundary","mk_magic_sets::mk_magic_sets","constructor"
"mk_magic_sets","entity boundary","mk_magic_sets::reset","command"
"mk_magic_sets","entity boundary","mk_magic_sets::get_unbound_cost","property non-void-command collaborator"
"mk_magic_sets","entity boundary","mk_magic_sets::pop_bound","property non-void-command collaborator"
"mk_magic_sets","entity boundary","mk_magic_sets::adorn_literal","property non-void-command collaborator"
"mk_magic_sets","entity boundary","mk_magic_sets::create_magic_literal","property non-void-command collaborator"
"mk_magic_sets","entity boundary","mk_magic_sets::create_magic_rules","command collaborator"
"mk_magic_sets","entity boundary","mk_magic_sets::transform_rule","command collaborator"
"mk_magic_sets","entity boundary","mk_magic_sets::create_transfer_rule","command collaborator"
"mk_magic_sets","entity boundary","mk_magic_sets::operator()","property non-void-command collaborator"
"mk_magic_symbolic","entity boundary","mk_magic_symbolic::mk_magic_symbolic","constructor"
"mk_magic_symbolic","entity boundary","mk_magic_symbolic::~mk_magic_symbolic","destructor"
"mk_magic_symbolic","entity boundary","mk_magic_symbolic::operator()","property non-void-command collaborator"
"mk_magic_symbolic","entity boundary","mk_magic_symbolic::mk_query","property non-void-command collaborator"
"mk_magic_symbolic","entity boundary","mk_magic_symbolic::mk_ans","property non-void-command collaborator"
"mk_quantifier_abstraction::qa_model_converter","boundary","translate","property wrapper"
"mk_quantifier_abstraction::qa_model_converter","boundary","display","command collaborator"
"mk_quantifier_abstraction::qa_model_converter","boundary","get_units","controller stateless"
"mk_quantifier_abstraction::qa_model_converter","boundary","insert","command collaborator"
"mk_quantifier_abstraction::qa_model_converter","boundary","operator()","void-accessor command collaborator"
"func_decl","data-provider boundary","func_decl","constructor"
"func_decl","data-provider boundary","func_decl","copy-constructor"
"func_decl","data-provider boundary","operatorZ3_func_decl","unclassified"
"func_decl","data-provider boundary","id","unclassified"
"func_decl","data-provider boundary","arity","unclassified"
"func_decl","data-provider boundary","domain","property collaborator"
"func_decl","data-provider boundary","range","property collaborator"
"func_decl","data-provider boundary","name","property collaborator"
"func_decl","data-provider boundary","decl_kind","property collaborator"
"func_decl","data-provider boundary","num_parameters","unclassified"
"func_decl","data-provider boundary","transitive_closure","property non-void-command collaborator"
"func_decl","data-provider boundary","is_const","predicate"
"func_decl","data-provider boundary","get_info","property collaborator"
"func_decl","data-provider boundary","is_associative","predicate"
"func_decl","data-provider boundary","is_left_associative","predicate"
"func_decl","data-provider boundary","is_right_associative","predicate"
"func_decl","data-provider boundary","is_flat_associative","predicate"
"func_decl","data-provider boundary","is_commutative","predicate"
"func_decl","data-provider boundary","is_chainable","predicate"
"func_decl","data-provider boundary","is_pairwise","predicate"
"func_decl","data-provider boundary","is_injective","predicate"
"func_decl","data-provider boundary","is_skolem","predicate"
"func_decl","data-provider boundary","is_lambda","predicate"
"func_decl","data-provider boundary","is_idempotent","predicate"
"func_decl","data-provider boundary","is_polymorphic","predicate"
"func_decl","data-provider boundary","get_arity","get"
"func_decl","data-provider boundary","get_domain","get collaborator"
"func_decl","data-provider boundary","get_domain","get collaborator"
"func_decl","data-provider boundary","get_range","get collaborator"
"func_decl","data-provider boundary","get_size","wrapper"
"func_decl","data-provider boundary","begin","property collaborator"
"func_decl","data-provider boundary","end","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::operator()","property collaborator"
"func_decl","data-provider boundary","func_decl::accessors","property non-void-command collaborator"
"func_decl","data-provider boundary","func_decl::func_decl","copy-constructor"
"used_symbols","entity boundary","found","command collaborator"
"used_symbols","entity boundary","visit","command collaborator"
"used_symbols","entity boundary","used_symbols","constructor"
"used_symbols","entity boundary","operator()","void-accessor command"
"used_symbols","entity boundary","contains","predicate collaborator"
"used_symbols","entity boundary","contains_core","predicate collaborator"
"used_symbols","entity boundary","insert","command collaborator"
"used_symbols","entity boundary","insert_core","command collaborator"
"used_symbols","entity boundary","erase_core","command collaborator"
"simplifier_solver","boundary","replace","void-accessor controller"
"simplifier_solver","boundary","flush","command collaborator"
"simplifier_solver","boundary","add_with_dependency","command collaborator"
"simplifier_solver","boundary","inconsistent","get"
"simplifier_solver","boundary","set_inconsistent","set"
"simplifier_solver","boundary","assert_expr_core2","command collaborator"
"simplifier_solver","boundary","assert_expr_core","command collaborator"
"simplifier_solver","boundary","push","command collaborator"
"simplifier_solver","boundary","pop","command"
"simplifier_solver","boundary","check_sat_core","property non-void-command collaborator"
"simplifier_solver","boundary","collect_statistics","collaborator"
"simplifier_solver","boundary","get_model_core","void-accessor command collaborator"
"simplifier_solver","boundary","get_proof_core","get non-void-command collaborator"
"simplifier_solver","boundary","translate","property non-void-command collaborator"
"simplifier_solver","boundary","updt_params","command collaborator"
"simplifier_solver","boundary","get_model_converter","get collaborator"
"simplifier_solver","boundary","get_num_assertions","unclassified"
"simplifier_solver","boundary","get_assertion","property collaborator"
"simplifier_solver","boundary","reason_unknown","property"
"simplifier_solver","boundary","set_reason_unknown","command"
"simplifier_solver","boundary","get_labels","command collaborator"
"simplifier_solver","boundary","get_unsat_core","command collaborator"
"simplifier_solver","boundary","get_manager","property collaborator"
"simplifier_solver","boundary","reset_params","command collaborator"
"simplifier_solver","boundary","get_params","property collaborator"
"simplifier_solver","boundary","collect_param_descrs","command collaborator"
"simplifier_solver","boundary","push_params","command"
"simplifier_solver","boundary","pop_params","command"
"simplifier_solver","boundary","set_produce_models","command"
"simplifier_solver","boundary","set_phase","command collaborator"
"simplifier_solver","boundary","move_to_front","command collaborator"
"simplifier_solver","boundary","get_phase","property non-void-command collaborator"
"simplifier_solver","boundary","set_phase","command collaborator"
"simplifier_solver","boundary","get_num_assumptions","unclassified"
"simplifier_solver","boundary","get_assumption","property collaborator"
"simplifier_solver","boundary","get_scope_level","unclassified"
"simplifier_solver","boundary","set_progress_callback","command collaborator"
"simplifier_solver","boundary","get_consequences","property non-void-command collaborator"
"simplifier_solver","boundary","check_sat_cc","property non-void-command collaborator"
"simplifier_solver","boundary","find_mutexes","property non-void-command collaborator"
"simplifier_solver","boundary","preferred_sat","property non-void-command collaborator"
"simplifier_solver","boundary","cube","property non-void-command collaborator"
"simplifier_solver","boundary","congruence_root","property non-void-command collaborator"
"simplifier_solver","boundary","congruence_next","property non-void-command collaborator"
"simplifier_solver","boundary","display","property collaborator"
"simplifier_solver","boundary","get_units_core","command collaborator"
"simplifier_solver","boundary","get_trail","property non-void-command collaborator"
"simplifier_solver","boundary","get_levels","command collaborator"
"simplifier_solver","boundary","register_on_clause","command collaborator"
"simplifier_solver","boundary","user_propagate_init","command collaborator"
"simplifier_solver","boundary","user_propagate_register_fixed","command collaborator"
"simplifier_solver","boundary","user_propagate_register_final","command collaborator"
"simplifier_solver","boundary","user_propagate_register_eq","command collaborator"
"simplifier_solver","boundary","user_propagate_register_diseq","command collaborator"
"simplifier_solver","boundary","user_propagate_register_expr","command collaborator"
"simplifier_solver","boundary","user_propagate_register_created","command collaborator"
"simplifier_solver","boundary","user_propagate_register_decide","command collaborator"
"mbp_qel","boundary degenerate small-class","mbp_qel::mbp_qel","constructor"
"mbp_qel","boundary degenerate small-class","mbp_qel::~mbp_qel","destructor"
"mbp_qel","boundary degenerate small-class","mbp_qel::operator()","wrapper stateless"
"mk_quantifier_abstraction","entity boundary","mk_quantifier_abstraction::mk_quantifier_abstraction","constructor"
"mk_quantifier_abstraction","entity boundary","mk_quantifier_abstraction::~mk_quantifier_abstraction","destructor"
"mk_quantifier_abstraction","entity boundary","mk_quantifier_abstraction::declare_pred","property non-void-command factory collaborator"
"mk_quantifier_abstraction","entity boundary","mk_quantifier_abstraction::mk_head","property non-void-command collaborator"
"mk_quantifier_abstraction","entity boundary","mk_quantifier_abstraction::mk_tail","property non-void-command collaborator"
"mk_quantifier_abstraction","entity boundary","mk_quantifier_abstraction::mk_select","property non-void-command collaborator"
"mk_quantifier_abstraction","entity boundary","mk_quantifier_abstraction::operator()","property non-void-command collaborator"
"obj_hash","pure-controller degenerate small-class","operator()","controller stateless"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::mk_quantifier_instantiation","constructor"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::~mk_quantifier_instantiation","destructor"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::extract_quantifiers","void-accessor controller"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::instantiate_quantifier","void-accessor command collaborator"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::instantiate_quantifier","command collaborator"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::match","command collaborator"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::yield_binding","command collaborator"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::collect_egraph","void-accessor command collaborator"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::instantiate_rule","command collaborator"
"mk_quantifier_instantiation","boundary","mk_quantifier_instantiation::operator()","property non-void-command collaborator"
"quantifier_manager::imp","boundary","m","property collaborator"
"quantifier_manager::imp","boundary","has_trace_stream","predicate"
"quantifier_manager::imp","boundary","trace_stream","property non-void-command collaborator"
"quantifier_manager::imp","boundary","get_stat","property collaborator"
"quantifier_manager::imp","boundary","get_generation","collaborator"
"quantifier_manager::imp","boundary","add","command collaborator"
"quantifier_manager::imp","boundary","has_quantifiers","predicate"
"quantifier_manager::imp","boundary","display_stats","command collaborator"
"quantifier_manager::imp","boundary","del","command collaborator"
"quantifier_manager::imp","boundary","empty","predicate"
"quantifier_manager::imp","boundary","is_shared","predicate collaborator"
"quantifier_manager::imp","boundary","log_causality","controller stateless"
"quantifier_manager::imp","boundary","log_add_instance","command collaborator"
"quantifier_manager::imp","boundary","add_instance","predicate non-void-command collaborator"
"quantifier_manager::imp","boundary","init_search_eh","command collaborator"
"quantifier_manager::imp","boundary","assign_eh","command collaborator"
"quantifier_manager::imp","boundary","add_eq_eh","command collaborator"
"quantifier_manager::imp","boundary","relevant_eh","command collaborator"
"quantifier_manager::imp","boundary","restart_eh","command"
"quantifier_manager::imp","boundary","push","command"
"quantifier_manager::imp","boundary","pop","command"
"quantifier_manager::imp","boundary","can_propagate","predicate non-void-command"
"quantifier_manager::imp","boundary","propagate","command"
"quantifier_manager::imp","boundary","check_quantifier","predicate non-void-command collaborator"
"quantifier_manager::imp","boundary","quick_check_quantifiers","predicate non-void-command collaborator"
"quantifier_manager::imp","boundary","final_check_eh","property non-void-command collaborator"
"quantifier_manager::imp","boundary","check_model","property non-void-command collaborator"
"watch_list","entity boundary","end_cls_core","wrapper"
"watch_list","entity boundary","end_cls","non-void-command"
"watch_list","entity boundary","begin_lits_core","wrapper"
"watch_list","entity boundary","begin_lits_core","wrapper"
"watch_list","entity boundary","begin_lits","unclassified"
"watch_list","entity boundary","end_lits_core","wrapper"
"watch_list","entity boundary","end_lits_core","wrapper"
"watch_list","entity boundary","end_lits","unclassified"
"watch_list","entity boundary","watch_list","constructor"
"watch_list","entity boundary","watch_list","copy-constructor"
"watch_list","entity boundary","~watch_list","destructor"
"watch_list","entity boundary","size","unclassified"
"watch_list","entity boundary","reset","command"
"watch_list","entity boundary","reset_and_release_memory","set"
"watch_list","entity boundary","begin_clause","property collaborator"
"watch_list","entity boundary","end_clause","property non-void-command collaborator"
"watch_list","entity boundary","find_clause","property non-void-command collaborator"
"watch_list","entity boundary","begin_literals","property non-void-command collaborator"
"watch_list","entity boundary","end_literals","property non-void-command collaborator"
"watch_list","entity boundary","begin_literals","property collaborator"
"watch_list","entity boundary","end_literals","property collaborator"
"watch_list","entity boundary","find_literal","property non-void-command collaborator"
"watch_list","entity boundary","find_literal","property collaborator"
"watch_list","entity boundary","insert_clause","command collaborator"
"watch_list","entity boundary","insert_literal","command collaborator"
"watch_list","entity boundary","set_end_clause","command collaborator"
"watch_list","entity boundary","watch_list::destroy","wrapper"
"watch_list","entity boundary","watch_list::expand","command"
"watch_list","entity boundary","watch_list::remove_clause","command collaborator"
"watch_list","entity boundary","watch_list::remove_deleted","command"
"watch_list","entity boundary","watch_list::remove_literal","command collaborator"
"rule_unifier","entity boundary","rule_unifier","constructor"
"rule_unifier","entity boundary","display","command collaborator"
"rule_unifier","entity boundary","set_normalize","set"
"rule_unifier","entity boundary","rule_unifier::unify_rules","get non-void-command collaborator"
"rule_unifier","entity boundary","rule_unifier::apply","void-accessor command collaborator"
"rule_unifier","entity boundary","rule_unifier::apply","command collaborator"
"rule_unifier","entity boundary","rule_unifier::apply","predicate non-void-command collaborator"
"rule_unifier","entity boundary","rule_unifier::get_rule_subst","property non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::try_to_inline_rule","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::has_quantifier","controller stateless"
"mk_rule_inliner","boundary","mk_rule_inliner::count_pred_occurrences","command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::inlining_allowed","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::create_allowed_rule_set","property non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::forbid_preds_from_cycles","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::forbid_multiple_multipliers","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::plan_inlining","command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::transform_rule","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::transform_rules","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::is_oriented_rewriter","controller stateless"
"mk_rule_inliner","boundary","mk_rule_inliner::do_eager_inlining","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::do_eager_inlining","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::add_rule","command"
"mk_rule_inliner","boundary","mk_rule_inliner::del_rule","command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::inline_linear","predicate non-void-command collaborator"
"mk_rule_inliner","boundary","mk_rule_inliner::operator()","property non-void-command collaborator"
"timeit","empty","timeit::timeit","constructor"
"timeit","empty","timeit::~timeit","destructor"
"lazy_table_filter_identical","entity data-provider boundary","lazy_table_filter_identical","constructor"
"lazy_table_filter_identical","entity data-provider boundary","kind","collaborator incidental"
"lazy_table_filter_identical","entity data-provider boundary","cols","get collaborator"
"lazy_table_filter_identical","entity data-provider boundary","src","property collaborator"
"lazy_table_filter_identical","entity data-provider boundary","lazy_table_filter_identical::force","property non-void-command collaborator"
"mk_scale","entity boundary","mk_scale::mk_scale","constructor"
"mk_scale","entity boundary","mk_scale::~mk_scale","destructor"
"mk_scale","entity boundary","mk_scale::operator()","property non-void-command collaborator"
"mk_scale","entity boundary","mk_scale::mk_pred","property non-void-command collaborator"
"mk_scale","entity boundary","mk_scale::mk_constraint","property non-void-command collaborator"
"mk_scale","entity boundary","mk_scale::linearize","property non-void-command collaborator"
"mk_slice::slice_proof_converter","entity boundary","init_form2rule","command collaborator"
"mk_slice::slice_proof_converter","entity boundary","translate_proof","void-accessor command collaborator"
"mk_slice::slice_proof_converter","entity boundary","translate_asserted","predicate non-void-command collaborator"
"mk_slice::slice_proof_converter","entity boundary","translate_hyper_res","predicate non-void-command collaborator"
"mk_slice::slice_proof_converter","entity boundary","insert","command"
"mk_slice::slice_proof_converter","entity boundary","operator()","property non-void-command collaborator"
"mk_slice::slice_proof_converter","entity boundary","translate","wrapper stateless"
"mk_slice::slice_proof_converter","entity boundary","display","collaborator incidental"
"try_for_tactical","unclassified","try_for_tactical","constructor"
"try_for_tactical","unclassified","name","incidental"
"try_for_tactical","unclassified","operator()","controller"
"try_for_tactical","unclassified","translate","property non-void-command collaborator"
"mk_slice::slice_model_converter","entity commander boundary","add_predicate","command collaborator"
"mk_slice::slice_model_converter","entity commander boundary","add_sliceable","command collaborator"
"mk_slice::slice_model_converter","entity commander boundary","get_units","empty"
"mk_slice::slice_model_converter","entity commander boundary","operator()","void-accessor command collaborator"
"mk_slice::slice_model_converter","entity commander boundary","translate","wrapper stateless"
"mk_slice::slice_model_converter","entity commander boundary","display","collaborator incidental"
"mk_synchronize","entity boundary","is_recursive","predicate collaborator"
"mk_synchronize","entity boundary","mk_synchronize::mk_synchronize","constructor"
"mk_synchronize","entity boundary","mk_synchronize::is_recursive","predicate collaborator"
"mk_synchronize","entity boundary","mk_synchronize::has_recursive_premise","predicate collaborator"
"mk_synchronize","entity boundary","mk_synchronize::add_merged_decls","property non-void-command collaborator"
"mk_synchronize","entity boundary","mk_synchronize::add_new_rel_symbols","void-accessor command collaborator"
"mk_synchronize","entity boundary","mk_synchronize::replace_applications","command collaborator"
"mk_synchronize","entity boundary","mk_synchronize::rename_bound_vars_in_rule","property non-void-command factory collaborator"
"mk_synchronize","entity boundary","mk_synchronize::rename_bound_vars","property non-void-command collaborator"
"mk_synchronize","entity boundary","mk_synchronize::add_rec_tail","void-accessor command"
"mk_synchronize","entity boundary","mk_synchronize::add_non_rec_tail","void-accessor command"
"mk_synchronize","entity boundary","mk_synchronize::product_application","property non-void-command collaborator"
"mk_synchronize","entity boundary","mk_synchronize::product_rule","property non-void-command factory collaborator"
"mk_synchronize","entity boundary","mk_synchronize::merge_rules","void-accessor command collaborator"
"mk_synchronize","entity boundary","mk_synchronize::merge_applications","command collaborator"
"mk_synchronize","entity boundary","mk_synchronize::operator()","property non-void-command collaborator"
"sarray","empty","sarray","constructor"
"sarray","empty","sarray","constructor"
"sarray","empty","sarray","constructor"
"sarray","empty","sarray","constructor"
"sarray","empty","sarray","constructor"
"checker","entity boundary","checker::all_args","predicate non-void-command collaborator"
"checker","entity boundary","checker::any_arg","predicate non-void-command collaborator"
"checker","entity boundary","checker::check_core","predicate non-void-command collaborator"
"checker","entity boundary","checker::check","predicate non-void-command"
"checker","entity boundary","checker::get_enode_eq_to_core","property non-void-command collaborator"
"checker","entity boundary","checker::get_enode_eq_to","get property non-void-command collaborator"
"checker","entity boundary","checker::is_sat","predicate non-void-command collaborator"
"checker","entity boundary","checker::is_unsat","predicate non-void-command collaborator"
"checker","entity boundary","checker::checker","constructor"
"explain::imp","boundary","~imp","destructor"
"explain::imp","boundary","display","property collaborator"
"explain::imp","boundary","display","property collaborator"
"explain::imp","boundary","display","property collaborator"
"explain::imp","boundary","display_var","property collaborator"
"explain::imp","boundary","display","property collaborator"
"explain::imp","boundary","display","property collaborator"
"explain::imp","boundary","display","property collaborator"
"explain::imp","boundary","add_literal","command collaborator"
"explain::imp","boundary","reset_already_added","set collaborator"
"explain::imp","boundary","sign","property non-void-command collaborator"
"explain::imp","boundary","factor","command collaborator"
"explain::imp","boundary","psc_chain","command collaborator"
"explain::imp","boundary","collect_polys","controller"
"explain::imp","boundary","add_zero_assumption","command collaborator"
"explain::imp","boundary","add_simple_assumption","command collaborator"
"explain::imp","boundary","add_assumption","command"
"explain::imp","boundary","elim_vanishing","void-accessor command collaborator"
"explain::imp","boundary","elim_vanishing","command collaborator"
"explain::imp","boundary","normalize","property non-void-command factory collaborator"
"explain::imp","boundary","normalize","command collaborator"
"explain::imp","boundary","max_var","property non-void-command collaborator"
"explain::imp","boundary","max_var","property non-void-command collaborator"
"explain::imp","boundary","max_var","property controller"
"explain::imp","boundary","max_var","property controller"
"explain::imp","boundary","keep_p_x","command collaborator"
"explain::imp","boundary","add_factors","command collaborator"
"explain::imp","boundary","add_lc","command collaborator"
"explain::imp","boundary","add_zero_assumption_on_factor","command collaborator"
"explain::imp","boundary","coeffs_are_zeroes","predicate non-void-command collaborator"
"explain::imp","boundary","coeffs_are_zeroes_in_factor","predicate non-void-command collaborator"
"explain::imp","boundary","psc","command collaborator"
"explain::imp","boundary","psc_discriminant","command collaborator"
"explain::imp","boundary","psc_resultant","command collaborator"
"explain::imp","boundary","test_root_literal","command collaborator"
"explain::imp","boundary","add_root_literal","command collaborator"
"explain::imp","boundary","mk_linear_root","predicate non-void-command collaborator"
"explain::imp","boundary","mk_plinear_root","predicate non-void-command collaborator"
"explain::imp","boundary","mk_quadratic_root","predicate non-void-command collaborator"
"explain::imp","boundary","ensure_sign","property non-void-command collaborator"
"explain::imp","boundary","mk_linear_root","void-accessor command"
"explain::imp","boundary","add_cell_lits","command collaborator"
"explain::imp","boundary","all_univ","predicate non-void-command collaborator"
"explain::imp","boundary","project","command collaborator"
"explain::imp","boundary","check_already_added","predicate wrapper"
"explain::imp","boundary","simplify","void-accessor command collaborator"
"explain::imp","boundary","simplify","predicate non-void-command collaborator"
"explain::imp","boundary","select_eq","property non-void-command collaborator"
"explain::imp","boundary","select_lower_stage_eq","property non-void-command collaborator"
"explain::imp","boundary","simplify","command collaborator"
"explain::imp","boundary","main","command collaborator"
"explain::imp","boundary","process2","command collaborator"
"explain::imp","boundary","minimize_core","predicate non-void-command collaborator"
"explain::imp","boundary","minimize","command collaborator"
"explain::imp","boundary","process","command collaborator"
"explain::imp","boundary","operator()","command collaborator"
"explain::imp","boundary","project","command collaborator"
"explain::imp","boundary","split_literals","command collaborator"
"explain::imp","boundary","signed_project","void-accessor command collaborator"
"explain::imp","boundary","project_plus_infinity","command collaborator"
"explain::imp","boundary","project_minus_infinity","command collaborator"
"explain::imp","boundary","project_pairs","command collaborator"
"explain::imp","boundary","project_pair","command collaborator"
"explain::imp","boundary","project_single","command collaborator"
"explain::imp","boundary","solve_eq","command collaborator"
"explain::imp","boundary","maximize","void-accessor command"
"use_list","commander boundary","reserve","command"
"use_list","commander boundary","get","get controller"
"use_list","commander boundary","get","get controller"
"use_list","commander boundary","finalize","command"
"use_list","commander boundary","display","get controller"
"use_list","commander boundary","use_list::init","command"
"use_list","commander boundary","use_list::insert","command collaborator"
"use_list","commander boundary","use_list::erase","command collaborator"
"use_list","commander boundary","use_list::erase","command collaborator"
"use_list","commander boundary","use_list::block","command collaborator"
"use_list","commander boundary","use_list::unblock","command collaborator"
"explain","commander","explain::explain","constructor"
"explain","commander","explain::~explain","destructor"
"explain","commander","explain::reset","command"
"explain","commander","explain::set_simplify_cores","set"
"explain","commander","explain::set_full_dimensional","set"
"explain","commander","explain::set_minimize_cores","set"
"explain","commander","explain::set_factor","set"
"explain","commander","explain::set_signed_project","set"
"explain","commander","explain::operator()","wrapper stateless"
"explain","commander","explain::project","command collaborator"
"explain","commander","explain::maximize","command"
"explain","commander","explain::test_root_literal","command collaborator"
"binding_eq_proc","pure-controller degenerate small-class","operator()","controller stateless"
"ext_simple_justification","entity boundary","get_name","incidental"
"ext_simple_justification","entity boundary","ext_simple_justification::ext_simple_justification","constructor"
"ext_simple_justification","entity boundary","ext_simple_justification::get_antecedents","command collaborator"
"ext_simple_justification","entity boundary","ext_simple_justification::antecedent2proof","predicate non-void-command collaborator"
"is_non_qfauflira_functor","entity boundary","operator()","wrapper stateless"
"is_non_qfauflira_functor","entity boundary","operator()","wrapper stateless"
"is_non_qfauflira_functor","entity boundary","compatible_sort","predicate collaborator"
"is_non_qfauflira_functor","entity boundary","operator()","command collaborator"
"ast_ext2","entity boundary","ast_ext2","constructor"
"ast_ext2","entity boundary","trail","property non-void-command collaborator"
"ast_ext2","entity boundary","mk_false","property non-void-command collaborator"
"ast_ext2","entity boundary","mk_true","property non-void-command collaborator"
"ast_ext2","entity boundary","mk_max","property non-void-command collaborator"
"ast_ext2","entity boundary","mk_min","property non-void-command collaborator"
"ast_ext2","entity boundary","mk_not","property non-void-command collaborator"
"ast_ext2","entity boundary","pp","property wrapper"
"ast_ext2","entity boundary","fresh","property non-void-command collaborator"
"ast_ext2","entity boundary","mk_clause","command collaborator"
"interval_set_manager","entity boundary","set_seed","command"
"interval_set_manager","entity boundary","mk_empty","collaborator incidental"
"interval_set_manager","entity boundary","is_empty","collaborator incidental"
"interval_set_manager","entity boundary","interval_set_manager::interval_set_manager","constructor"
"interval_set_manager","entity boundary","interval_set_manager::~interval_set_manager","destructor"
"interval_set_manager","entity boundary","interval_set_manager::del","command collaborator"
"interval_set_manager","entity boundary","interval_set_manager::dec_ref","void-accessor command collaborator"
"interval_set_manager","entity boundary","interval_set_manager::inc_ref","collaborator incidental"
"interval_set_manager","entity boundary","interval_set_manager::mk","non-void-command factory collaborator"
"interval_set_manager","entity boundary","interval_set_manager::mk_union","property non-void-command factory collaborator"
"interval_set_manager","entity boundary","interval_set_manager::is_full","collaborator incidental"
"interval_set_manager","entity boundary","interval_set_manager::num_intervals","collaborator incidental"
"interval_set_manager","entity boundary","interval_set_manager::subset","predicate wrapper"
"interval_set_manager","entity boundary","interval_set_manager::set_eq","predicate non-void-command collaborator"
"interval_set_manager","entity boundary","interval_set_manager::eq","predicate non-void-command collaborator"
"interval_set_manager","entity boundary","interval_set_manager::get_justifications","command collaborator"
"interval_set_manager","entity boundary","interval_set_manager::get_interval","property factory collaborator"
"interval_set_manager","entity boundary","interval_set_manager::peek_in_complement","command"
"interval_set_manager","entity boundary","interval_set_manager::display","property wrapper"
"lazy_justification","data-provider boundary","clauses","property collaborator"
"lazy_justification","data-provider boundary","lazy_justification","constructor"
"lazy_justification","data-provider boundary","num_lits","get"
"lazy_justification","data-provider boundary","lit","property collaborator"
"lazy_justification","data-provider boundary","lits","property collaborator"
"lazy_justification","data-provider boundary","num_clauses","get"
"lazy_justification","data-provider boundary","clause","property collaborator"
"scoped_literal_vector","boundary","scoped_literal_vector","constructor"
"scoped_literal_vector","boundary","~scoped_literal_vector","destructor"
"scoped_literal_vector","boundary","size","unclassified"
"scoped_literal_vector","boundary","empty","predicate"
"scoped_literal_vector","boundary","operator[]","get collaborator"
"scoped_literal_vector","boundary","reset","command collaborator"
"scoped_literal_vector","boundary","push_back","command collaborator"
"scoped_literal_vector","boundary","set","command collaborator"
"scoped_literal_vector","boundary","data","property collaborator"
"scoped_literal_vector","boundary","begin","property collaborator"
"scoped_literal_vector","boundary","end","property collaborator"
"scoped_literal_vector","boundary","shrink","command"
"scoped_literal_vector","boundary","append","command collaborator"
"scoped_literal_vector","boundary","append","command"
"scoped_literal_vector","boundary","swap","command"
"plus","small-class","plus","constructor"
"plus","small-class","~plus","destructor"
"plus","small-class","plus::eval","property controller"
"plus","small-class","plus::subst","property non-void-command collaborator"
"simplify","boundary degenerate small-class","simplify::simplify","constructor"
"simplify","boundary degenerate small-class","simplify::~simplify","destructor"
"simplify","boundary degenerate small-class","simplify::operator()","wrapper stateless"
"goal2nlsat::imp","entity boundary","updt_params","command collaborator"
"goal2nlsat::imp","entity boundary","flip","wrapper stateless"
"goal2nlsat::imp","entity boundary","factor_atom","property non-void-command collaborator"
"goal2nlsat::imp","entity boundary","process_atom","property non-void-command collaborator"
"goal2nlsat::imp","entity boundary","process_eq","property non-void-command collaborator"
"goal2nlsat::imp","entity boundary","process_le","wrapper stateless"
"goal2nlsat::imp","entity boundary","process_ge","wrapper stateless"
"goal2nlsat::imp","entity boundary","process_bvar","property non-void-command collaborator"
"goal2nlsat::imp","entity boundary","process_atom","property non-void-command collaborator"
"goal2nlsat::imp","entity boundary","process_literal","property non-void-command collaborator"
"goal2nlsat::imp","entity boundary","process","command collaborator"
"goal2nlsat::imp","entity boundary","operator()","command collaborator"
"proof_is_closed","entity boundary","reset","command"
"proof_is_closed","entity boundary","check","predicate non-void-command collaborator"
"proof_is_closed","entity boundary","proof_is_closed","constructor"
"proof_is_closed","entity boundary","operator()","predicate non-void-command collaborator"
"goal2nlsat","pure-controller small-class","goal2nlsat::goal2nlsat","constructor"
"goal2nlsat","pure-controller small-class","goal2nlsat::~goal2nlsat","destructor"
"goal2nlsat","pure-controller small-class","goal2nlsat::collect_param_descrs","controller stateless"
"goal2nlsat","pure-controller small-class","goal2nlsat::operator()","controller"
"relation_manager::default_relation_select_equal_and_project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"maxcore","commander boundary","~maxcore","destructor"
"maxcore","commander boundary","is_literal","predicate non-void-command collaborator"
"maxcore","commander boundary","add","command collaborator"
"maxcore","commander boundary","add","command collaborator"
"maxcore","commander boundary","add_soft","command collaborator"
"maxcore","commander boundary","new_assumption","command collaborator"
"maxcore","commander boundary","trace","command"
"maxcore","commander boundary","mus_solver","property non-void-command collaborator"
"maxcore","commander boundary","primal_dual_solver","property non-void-command collaborator"
"maxcore","commander boundary","check_sat_hill_climb","property non-void-command collaborator"
"maxcore","commander boundary","check_sat","property non-void-command collaborator"
"maxcore","commander boundary","found_optimum","command collaborator"
"maxcore","commander boundary","operator()","property non-void-command collaborator"
"maxcore","commander boundary","collect_statistics","controller"
"maxcore","commander boundary","get_cores","property non-void-command collaborator"
"maxcore","commander boundary","get_current_correction_set","command collaborator"
"maxcore","commander boundary","get_current_correction_set","controller"
"maxcore","commander boundary","sort_assumptions","controller"
"maxcore","commander boundary","next_index","non-void-command collaborator"
"maxcore","commander boundary","process_sat","command collaborator"
"maxcore","commander boundary","process_unsat","property non-void-command collaborator"
"maxcore","commander boundary","core_rotate","property non-void-command collaborator"
"maxcore","commander boundary","max_core_size","controller stateless"
"maxcore","commander boundary","process_unsat","command collaborator"
"maxcore","commander boundary","update_model","command collaborator"
"maxcore","commander boundary","process_unsat","command collaborator"
"maxcore","commander boundary","get_mus_model","predicate non-void-command collaborator"
"maxcore","commander boundary","minimize_core","property non-void-command collaborator"
"maxcore","commander boundary","get_weight","controller stateless"
"maxcore","commander boundary","core_weight","property non-void-command collaborator"
"maxcore","commander boundary","split_core","property non-void-command collaborator"
"maxcore","commander boundary","display_vec","command collaborator"
"maxcore","commander boundary","display_vec","command collaborator"
"maxcore","commander boundary","display_vec","collaborator"
"maxcore","commander boundary","display","command collaborator"
"maxcore","commander boundary","max_resolve","command collaborator"
"maxcore","commander boundary","bin_resolve","command collaborator"
"maxcore","commander boundary","bin_max_resolve","command collaborator"
"maxcore","commander boundary","mk_atmost_tot","property non-void-command collaborator"
"maxcore","commander boundary","mk_atmost","property non-void-command collaborator"
"maxcore","commander boundary","weaken_bounds","command collaborator"
"maxcore","commander boundary","max_resolve_rc2","command collaborator"
"maxcore","commander boundary","max_resolve_rc2bin","command collaborator"
"maxcore","commander boundary","cs_max_resolve","command collaborator"
"maxcore","commander boundary","improve_model","command collaborator"
"maxcore","commander boundary","improve_model","command collaborator"
"maxcore","commander boundary","relax_cores","command collaborator"
"maxcore","commander boundary","cost","property controller"
"maxcore","commander boundary","update_assignment","command collaborator"
"maxcore","commander boundary","add_upper_bound_block","command collaborator"
"maxcore","commander boundary","remove_soft","controller stateless"
"maxcore","commander boundary","updt_params","command collaborator"
"maxcore","commander boundary","init_local","property non-void-command collaborator"
"maxcore","commander boundary","commit_assignment","command"
"maxcore","commander boundary","verify_core","command collaborator"
"maxcore","commander boundary","verify_assumptions","command collaborator"
"maxcore","commander boundary","verify_assignment","command collaborator"
"cmp_first","boundary degenerate small-class","operator()","collaborator incidental"
"solver_maxsat_context","entity boundary","solver_maxsat_context","constructor"
"solver_maxsat_context","entity boundary","fm","property non-void-command collaborator"
"solver_maxsat_context","entity boundary","sat_enabled","incidental"
"solver_maxsat_context","entity boundary","get_solver","property non-void-command collaborator"
"solver_maxsat_context","entity boundary","get_manager","property collaborator"
"solver_maxsat_context","entity boundary","params","get collaborator"
"solver_maxsat_context","entity boundary","enable_sls","empty"
"solver_maxsat_context","entity boundary","maxsat_engine","get collaborator"
"solver_maxsat_context","entity boundary","get_base_model","void-accessor collaborator"
"solver_maxsat_context","entity boundary","smt_context","wrapper stateless"
"solver_maxsat_context","entity boundary","num_objectives","incidental"
"solver_maxsat_context","entity boundary","verify_model","collaborator incidental"
"solver_maxsat_context","entity boundary","set_model","set collaborator"
"solver_maxsat_context","entity boundary","model_updated","empty"
"solver_maxsat_context","entity boundary","adjust","property non-void-command collaborator"
"solver_maxsat_context","entity boundary","add_offset","set collaborator"
"vector2_value_trail","commander data-class small-class","vector2_value_trail","constructor"
"vector2_value_trail","commander data-class small-class","undo","set"
"weighted_core","empty","weighted_core","constructor"
"maxsmt_solver_base","entity boundary","get_lower","get collaborator"
"maxsmt_solver_base","entity boundary","get_upper","get collaborator"
"maxsmt_solver_base","entity boundary","get_assignment","get wrapper"
"maxsmt_solver_base","entity boundary","collect_statistics","empty"
"maxsmt_solver_base","entity boundary","get_model","void-accessor command collaborator"
"maxsmt_solver_base","entity boundary","set_model","command"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::maxsmt_solver_base","constructor"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::updt_params","command collaborator"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::reset_upper","set collaborator"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::s","property non-void-command collaborator"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::commit_assignment","command collaborator"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::init","predicate non-void-command"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::set_mus","command collaborator"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::enable_sls","command"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::mk_fresh_bool","property non-void-command collaborator"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::get_wmax_theory","property collaborator"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::ensure_wmax_theory","property non-void-command collaborator"
"maxsmt_solver_base","entity boundary","maxsmt_solver_base::trace_bounds","incidental"
"assert_soft_cmd","commander boundary","assert_soft_cmd","constructor"
"assert_soft_cmd","commander boundary","reset","command collaborator"
"assert_soft_cmd","commander boundary","get_usage","incidental"
"assert_soft_cmd","commander boundary","get_main_descr","incidental"
"assert_soft_cmd","commander boundary","prepare","command collaborator"
"assert_soft_cmd","commander boundary","next_arg_kind","property collaborator"
"assert_soft_cmd","commander boundary","init_pdescrs","controller stateless"
"assert_soft_cmd","commander boundary","set_next_arg","command collaborator"
"assert_soft_cmd","commander boundary","failure_cleanup","command collaborator"
"assert_soft_cmd","commander boundary","execute","command collaborator"
"assert_soft_cmd","commander boundary","finalize","empty"
"min_maximize_cmd","degenerate","min_maximize_cmd","constructor"
"min_maximize_cmd","degenerate","reset","empty"
"min_maximize_cmd","degenerate","get_usage","incidental"
"min_maximize_cmd","degenerate","get_descr","collaborator incidental"
"min_maximize_cmd","degenerate","get_arity","incidental"
"min_maximize_cmd","degenerate","prepare","empty"
"min_maximize_cmd","degenerate","next_arg_kind","collaborator incidental"
"min_maximize_cmd","degenerate","set_next_arg","controller"
"min_maximize_cmd","degenerate","failure_cleanup","command collaborator"
"min_maximize_cmd","degenerate","execute","empty"
"instr_filter_equal","unclassified","instr_filter_equal","constructor"
"instr_filter_equal","unclassified","perform","predicate non-void-command collaborator"
"instr_filter_equal","unclassified","make_annotations","controller"
"instr_filter_equal","unclassified","display_head_impl","property controller"
"object","unclassified","ref_count","get"
"object","unclassified","id","get"
"object","unclassified","object","constructor"
"object","unclassified","ctx","get collaborator"
"object","unclassified","check_error","property collaborator"
"object","unclassified","object::object","constructor"
"object","unclassified","object::inc_ref","set"
"object","unclassified","object::dec_ref","set"
"udoc_plugin::join_project_fn","small-class","operator()","property non-void-command collaborator"
"udoc_plugin::join_project_fn","small-class","join","property controller"
"udoc_plugin::join_project_and_fn","pure-controller degenerate small-class","operator()","controller stateless"
"get_objectives_cmd","degenerate","get_objectives_cmd","constructor"
"get_objectives_cmd","degenerate","reset","empty"
"get_objectives_cmd","degenerate","get_usage","incidental"
"get_objectives_cmd","degenerate","get_descr","collaborator incidental"
"get_objectives_cmd","degenerate","get_arity","incidental"
"get_objectives_cmd","degenerate","prepare","empty"
"get_objectives_cmd","degenerate","failure_cleanup","command collaborator"
"get_objectives_cmd","degenerate","execute","controller"
"theory_dense_diff_logic_statistics","commander small-class","reset","command"
"theory_dense_diff_logic_statistics","commander small-class","theory_dense_diff_logic_statistics","constructor"
"cores::scoped_update","empty","~scoped_update","destructor"
"cores","boundary","core_weight","property non-void-command collaborator"
"cores","boundary","core_weight","property non-void-command collaborator"
"cores","boundary","cores::cores","constructor"
"cores","boundary","cores::hitting_set","controller"
"cores","boundary","cores::improve","predicate non-void-command collaborator"
"cores","boundary","cores::disjoint_cores","get property non-void-command collaborator"
"cores","boundary","cores::rotate_rec","command"
"cores","boundary","cores::rotate","predicate non-void-command collaborator"
"cores","boundary","cores::saturate_core","command collaborator"
"cores","boundary","cores::local_mss","command collaborator"
"cores","boundary","cores::unsat_core","property non-void-command collaborator"
"cores","boundary","cores::rotate_cores","command collaborator"
"cores","boundary","cores::core_weight","property wrapper"
"cores","boundary","cores::weighted_disjoint_cores","get non-void-command collaborator"
"cores","boundary","cores::check_sat_hill_climb","get property non-void-command collaborator"
"cores","boundary","cores::add_core","command collaborator"
"cores","boundary","cores::updt_params","command collaborator"
"cores","boundary","cores::operator()","property non-void-command collaborator"
"lns::scoped_bounding","empty","~scoped_bounding","destructor"
"lazy_table_plugin::filter_by_negation_fn","pure-controller small-class","operator()","controller"
"lazy_table_ref","boundary","rm","property non-void-command collaborator"
"lazy_table_ref","boundary","lazy_table_ref","constructor"
"lazy_table_ref","boundary","inc_ref","set"
"lazy_table_ref","boundary","dec_ref","set"
"lazy_table_ref","boundary","release_table","command"
"lazy_table_ref","boundary","get_signature","get collaborator"
"lazy_table_ref","boundary","get_lplugin","get collaborator"
"lazy_table_ref","boundary","eval","property set collaborator"
"lns","minimal-entity commander boundary","unprocessed","get collaborator"
"lns","minimal-entity commander boundary","set_conflicts","set"
"lns","minimal-entity commander boundary","lns::lns","copy-constructor"
"lns","minimal-entity commander boundary","lns::set_lns_params","command collaborator"
"lns","minimal-entity commander boundary","lns::save_defaults","controller stateless"
"lns","minimal-entity commander boundary","lns::climb","get non-void-command collaborator"
"lns","minimal-entity commander boundary","lns::update_best_model","command collaborator"
"lns","minimal-entity commander boundary","lns::apply_best_model","command collaborator"
"lns","minimal-entity commander boundary","lns::improve_bs","command"
"lns","minimal-entity commander boundary","lns::improve_bs1","command collaborator"
"lns","minimal-entity commander boundary","lns::relax_cores","command"
"lns","minimal-entity commander boundary","lns::improve_linear","non-void-command collaborator"
"lns","minimal-entity commander boundary","lns::improve_step","non-void-command collaborator"
"lns","minimal-entity commander boundary","lns::improve_step","property non-void-command collaborator"
"fun_proc","commander small-class","operator()","command collaborator"
"fun_proc","commander small-class","operator()","empty"
"pareto_base","entity commander boundary","pareto_base","constructor"
"pareto_base","entity commander boundary","updt_params","command collaborator"
"pareto_base","entity commander boundary","collect_param_descrs","command collaborator"
"pareto_base","entity commander boundary","collect_statistics","collaborator"
"pareto_base","entity commander boundary","display","collaborator"
"pareto_base","entity commander boundary","get_model","void-accessor collaborator"
"pareto_base","entity commander boundary","pareto_base::mk_dominates","command"
"pareto_base","entity commander boundary","pareto_base::mk_not_dominated_by","command"
"queue::reset_new_entries","commander small-class","undo","command"
"oia_pareto","entity boundary small-class","oia_pareto","constructor"
"oia_pareto","entity boundary small-class","oia_pareto::operator()","property non-void-command collaborator"
"mk_interp_tail_simplifier::normalizer_cfg","entity boundary","match_arg_pair","predicate non-void-command"
"mk_interp_tail_simplifier::normalizer_cfg","entity boundary","detect_equivalence","property non-void-command collaborator"
"mk_interp_tail_simplifier::normalizer_cfg","entity boundary","detect_equivalences","predicate non-void-command collaborator"
"mk_interp_tail_simplifier::normalizer_cfg","entity boundary","reduce_app","property non-void-command collaborator"
"dl_declare_rel_cmd","entity commander boundary","dl_declare_rel_cmd","constructor"
"dl_declare_rel_cmd","entity commander boundary","get_usage","incidental"
"dl_declare_rel_cmd","entity commander boundary","get_descr","collaborator incidental"
"dl_declare_rel_cmd","entity commander boundary","get_arity","incidental"
"dl_declare_rel_cmd","entity commander boundary","prepare","command collaborator"
"dl_declare_rel_cmd","entity commander boundary","next_arg_kind","property set collaborator"
"dl_declare_rel_cmd","entity commander boundary","set_next_arg","command collaborator"
"dl_declare_rel_cmd","entity commander boundary","set_next_arg","command collaborator"
"dl_declare_rel_cmd","entity commander boundary","execute","command collaborator"
"qel_cmd","commander boundary","qel_cmd","constructor"
"qel_cmd","commander boundary","get_usage","incidental"
"qel_cmd","commander boundary","get_descr","collaborator incidental"
"qel_cmd","commander boundary","get_arity","incidental"
"qel_cmd","commander boundary","next_arg_kind","property collaborator"
"qel_cmd","commander boundary","set_next_arg","set collaborator"
"qel_cmd","commander boundary","set_next_arg","command collaborator"
"qel_cmd","commander boundary","prepare","command collaborator"
"qel_cmd","commander boundary","execute","controller"
"opt_stream_buffer","unclassified","opt_stream_buffer","constructor"
"opt_stream_buffer","unclassified","operator*","get"
"opt_stream_buffer","unclassified","operator++","set"
"opt_stream_buffer","unclassified","ch","get"
"opt_stream_buffer","unclassified","next","set"
"opt_stream_buffer","unclassified","eof","predicate"
"opt_stream_buffer","unclassified","line","get"
"opt_stream_buffer","unclassified","skip_whitespace","command"
"opt_stream_buffer","unclassified","skip_space","command"
"opt_stream_buffer","unclassified","skip_line","command"
"opt_stream_buffer","unclassified","opt_stream_buffer::parse_token","predicate non-void-command"
"opt_stream_buffer","unclassified","opt_stream_buffer::parse_unsigned","non-void-command"
"opt_stream_buffer","unclassified","opt_stream_buffer::parse_int","property non-void-command"
"solver::mk_atom_trail","commander boundary small-class","undo","command collaborator"
"asymbol","empty","asymbol","constructor"
"asymbol","empty","asymbol","constructor"
"monomial","data-provider boundary","sort","wrapper"
"monomial","data-provider boundary","operator==","predicate wrapper"
"monomial","data-provider boundary","hash","get"
"monomial","data-provider boundary","ref_count","get"
"monomial","data-provider boundary","inc_ref","set"
"monomial","data-provider boundary","dec_ref","set"
"monomial","data-provider boundary","is_valid","predicate wrapper"
"monomial","data-provider boundary","id","get"
"monomial","data-provider boundary","size","get"
"monomial","data-provider boundary","total_degree","get"
"monomial","data-provider boundary","get_power","get collaborator"
"monomial","data-provider boundary","get_powers","get collaborator"
"monomial","data-provider boundary","get_var","property collaborator"
"monomial","data-provider boundary","degree","unclassified"
"monomial","data-provider boundary","max_var","property collaborator"
"monomial","data-provider boundary","max_var_degree","unclassified"
"monomial","data-provider boundary","index_of","collaborator"
"monomial","data-provider boundary","degree_of","collaborator"
"monomial","data-provider boundary","max_smaller_than_core","property collaborator"
"monomial","data-provider boundary","max_smaller_than","property collaborator"
"monomial","data-provider boundary","display","property collaborator"
"monomial","data-provider boundary","display_smt2","collaborator"
"monomial","data-provider boundary","is_unit","predicate"
"monomial","data-provider boundary","is_power_of_two","predicate"
"monomial","data-provider boundary","is_square","predicate"
"monomial","data-provider boundary","rename","set collaborator"
"monomial","data-provider boundary","context_t<C>::monomial::monomial","constructor"
"monomial","data-provider boundary","context_t<C>::monomial::display","unclassified"
"lp_tokenizer","unclassified","lp_tokenizer","constructor"
"lp_tokenizer","unclassified","peek","get property non-void-command collaborator"
"lp_tokenizer","unclassified","peek_num","get predicate non-void-command"
"lp_tokenizer","unclassified","get_num","get collaborator"
"lp_tokenizer","unclassified","next","set"
"lp_tokenizer","unclassified","eof","predicate"
"lp_tokenizer","unclassified","line","get"
"lp_tokenizer","unclassified","is_separator","incidental"
"lp_tokenizer","unclassified","lower","incidental"
"lp_tokenizer","unclassified","parse_all","command collaborator"
"lp_tokenizer","unclassified","is_alpha","incidental"
"lp_tokenizer","unclassified","is_num","incidental"
"lp_tokenizer","unclassified","is_ws","incidental"
"lp_tokenizer","unclassified","is_sym","predicate"
"neg_literal","boundary degenerate","negate","wrapper stateless"
"neg_literal","boundary degenerate","negate","wrapper stateless"
"neg_literal","boundary degenerate","negate","wrapper stateless"
"card2bv","unclassified","name","incidental"
"card2bv","unclassified","reset_statistics","command"
"card2bv","unclassified","updt_params","command collaborator"
"card2bv","unclassified","card2bv::card2bv","constructor"
"card2bv","unclassified","card2bv::reduce","command collaborator"
"card2bv","unclassified","card2bv::collect_statistics","controller"
"card2bv","unclassified","card2bv::collect_param_descrs","controller"
"preprocess","entity boundary","preprocess::propagate","property non-void-command collaborator"
"preprocess","entity boundary","preprocess::prop_mutexes","predicate non-void-command collaborator"
"preprocess","entity boundary","preprocess::soft2map","property non-void-command factory collaborator"
"preprocess","entity boundary","preprocess::dualize","property non-void-command factory collaborator"
"preprocess","entity boundary","preprocess::find_mutexes","predicate non-void-command collaborator"
"preprocess","entity boundary","preprocess::process_mutex","void-accessor command collaborator"
"preprocess","entity boundary","preprocess::preprocess","constructor"
"preprocess","entity boundary","preprocess::operator()","predicate non-void-command collaborator"
"opt_solver","entity boundary","get_manager","get collaborator"
"opt_solver","entity boundary","get_trail","property non-void-command collaborator"
"opt_solver","entity boundary","cube","property wrapper"
"opt_solver","entity boundary","congruence_root","collaborator incidental"
"opt_solver","entity boundary","congruence_next","collaborator incidental"
"opt_solver","entity boundary","set_phase","command collaborator"
"opt_solver","entity boundary","get_phase","property non-void-command collaborator"
"opt_solver","entity boundary","set_phase","command collaborator"
"opt_solver","entity boundary","move_to_front","command collaborator"
"opt_solver","entity boundary","get_model_idx","get collaborator"
"opt_solver","entity boundary","was_unknown","get"
"opt_solver","entity boundary","get_context","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::opt_solver","constructor"
"opt_solver","entity boundary","opt_solver::~opt_solver","destructor"
"opt_solver","entity boundary","opt_solver::updt_params","command collaborator"
"opt_solver","entity boundary","opt_solver::translate","wrapper stateless"
"opt_solver","entity boundary","opt_solver::collect_param_descrs","command collaborator"
"opt_solver","entity boundary","opt_solver::collect_statistics","collaborator"
"opt_solver","entity boundary","opt_solver::assert_expr_core","command collaborator"
"opt_solver","entity boundary","opt_solver::push_core","command"
"opt_solver","entity boundary","opt_solver::pop_core","command"
"opt_solver","entity boundary","opt_solver::set_logic","set collaborator"
"opt_solver","entity boundary","opt_solver::ensure_pb","command collaborator"
"opt_solver","entity boundary","opt_solver::get_optimizer","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::dump_benchmarks","get"
"opt_solver","entity boundary","opt_solver::check_sat_core2","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::maximize_objectives1","predicate non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::find_mutexes","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::preferred_sat","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::get_levels","command collaborator"
"opt_solver","entity boundary","opt_solver::maximize_objective","predicate non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::bound_value","predicate non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::adjust_result","property set collaborator"
"opt_solver","entity boundary","opt_solver::get_unsat_core","command collaborator"
"opt_solver","entity boundary","opt_solver::get_model_core","void-accessor command collaborator"
"opt_solver","entity boundary","opt_solver::get_proof_core","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::reason_unknown","property"
"opt_solver","entity boundary","opt_solver::set_reason_unknown","command"
"opt_solver","entity boundary","opt_solver::get_labels","command collaborator"
"opt_solver","entity boundary","opt_solver::set_progress_callback","set collaborator"
"opt_solver","entity boundary","opt_solver::get_num_assertions","unclassified"
"opt_solver","entity boundary","opt_solver::get_assertion","property collaborator"
"opt_solver","entity boundary","opt_solver::add_objective","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::get_objective_values","get collaborator"
"opt_solver","entity boundary","opt_solver::saved_objective_value","get collaborator"
"opt_solver","entity boundary","opt_solver::current_objective_value","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::mk_ge","property non-void-command collaborator"
"opt_solver","entity boundary","opt_solver::reset_objectives","command"
"opt_solver","entity boundary","opt_solver::to_opt","wrapper stateless"
"opt_solver","entity boundary","opt_solver::to_smt2_benchmark","command"
"collect_decls_proc","commander degenerate","collect_decls_proc","constructor"
"collect_decls_proc","commander degenerate","operator()","command collaborator"
"collect_decls_proc","commander degenerate","operator()","empty"
"collect_decls_proc","commander degenerate","operator()","empty"
"optsmt","entity boundary","optsmt","constructor"
"optsmt","entity boundary","get_num_objectives","unclassified"
"optsmt","entity boundary","get_model","get collaborator"
"optsmt","entity boundary","optsmt::set_max","void-accessor command collaborator"
"optsmt","entity boundary","optsmt::basic_opt","property non-void-command collaborator"
"optsmt","entity boundary","optsmt::geometric_opt","property non-void-command collaborator"
"optsmt","entity boundary","optsmt::is_unbounded","predicate wrapper"
"optsmt","entity boundary","optsmt::geometric_lex","property non-void-command collaborator"
"optsmt","entity boundary","optsmt::can_increment_delta","predicate non-void-command collaborator"
"optsmt","entity boundary","optsmt::symba_opt","property non-void-command collaborator"
"optsmt","entity boundary","optsmt::update_lower_lex","command"
"optsmt","entity boundary","optsmt::update_lower","command collaborator"
"optsmt","entity boundary","optsmt::update_upper","set collaborator"
"optsmt","entity boundary","optsmt::update_lower","property non-void-command collaborator"
"optsmt","entity boundary","optsmt::update_upper","property non-void-command collaborator"
"optsmt","entity boundary","optsmt::setup","command collaborator"
"optsmt","entity boundary","optsmt::lex","property non-void-command collaborator"
"optsmt","entity boundary","optsmt::box","property non-void-command collaborator"
"optsmt","entity boundary","optsmt::get_lower","get property collaborator"
"optsmt","entity boundary","optsmt::get_upper","get property collaborator"
"optsmt","entity boundary","optsmt::get_model","void-accessor command collaborator"
"optsmt","entity boundary","optsmt::commit_assignment","command collaborator"
"optsmt","entity boundary","optsmt::add","non-void-command collaborator"
"optsmt","entity boundary","optsmt::updt_params","set collaborator"
"optsmt","entity boundary","optsmt::reset","command"
"index_set","unclassified","num_elems","unclassified"
"index_set","unclassified","operator[]","get"
"index_set","unclassified","reset","command"
"index_set","unclassified","empty","predicate"
"index_set","unclassified","contains","predicate"
"index_set","unclassified","insert","command"
"index_set","unclassified","remove","command"
"index_set","unclassified","choose","get collaborator"
"totalizer","entity boundary","clauses","get collaborator"
"totalizer","entity boundary","defs","get collaborator"
"totalizer","entity boundary","totalizer::ensure_bound","command collaborator"
"totalizer","entity boundary","totalizer::totalizer","constructor"
"totalizer","entity boundary","totalizer::~totalizer","destructor"
"totalizer","entity boundary","totalizer::at_least","property non-void-command collaborator"
"i_ext","empty","i_ext","constructor"
"bit_blaster_params","boundary small-class","bit_blaster_params","constructor"
"bit_blaster_params","boundary small-class","display","collaborator"
"auf_solver","commander boundary","reset_sort2k","command"
"auf_solver","commander boundary","reset_eval_cache","command"
"auf_solver","commander boundary","mk_node","property set collaborator"
"auf_solver","commander boundary","display_key2node","controller stateless"
"auf_solver","commander boundary","display_A_f_is","controller"
"auf_solver","commander boundary","flush_nodes","command"
"auf_solver","commander boundary","auf_solver","constructor"
"auf_solver","commander boundary","~auf_solver","destructor"
"auf_solver","commander boundary","get_manager","get collaborator"
"auf_solver","commander boundary","reset","command"
"auf_solver","commander boundary","set_specrels","command collaborator"
"auf_solver","commander boundary","set_model","set collaborator"
"auf_solver","commander boundary","get_model","get wrapper"
"auf_solver","commander boundary","get_uvar","property non-void-command collaborator"
"auf_solver","commander boundary","get_A_f_i","property non-void-command collaborator"
"auf_solver","commander boundary","get_uvar_inst_set","property collaborator"
"auf_solver","commander boundary","mk_instantiation_sets","controller"
"auf_solver","commander boundary","should_cleanup","predicate non-void-command collaborator"
"auf_solver","commander boundary","operator()","command collaborator"
"auf_solver","commander boundary","contains_array","predicate non-void-command collaborator"
"auf_solver","commander boundary","cleanup_instantiation_sets","command collaborator"
"auf_solver","commander boundary","display_nodes","collaborator"
"auf_solver","commander boundary","eval","property non-void-command collaborator"
"auf_solver","commander boundary","collect_exceptions_values","command collaborator"
"auf_solver","commander boundary","pick_instance_diff_exceptions","property non-void-command collaborator"
"auf_solver","commander boundary","is_infinite","predicate collaborator"
"auf_solver","commander boundary","get_k_for","property non-void-command collaborator"
"auf_solver","commander boundary","get_k_interp","property non-void-command collaborator"
"auf_solver","commander boundary","assert_k_diseq_exceptions","predicate non-void-command collaborator"
"auf_solver","commander boundary","set_projection_else","command collaborator"
"auf_solver","commander boundary","add_mono_exceptions","command collaborator"
"auf_solver","commander boundary","get_instantiation_set_values","command collaborator"
"auf_solver","commander boundary","sort_values","command collaborator"
"auf_solver","commander boundary","mk_mono_proj","command collaborator"
"auf_solver","commander boundary","mk_simple_proj","command collaborator"
"auf_solver","commander boundary","mk_projections","command collaborator"
"auf_solver","commander boundary","collect_partial_funcs","command collaborator"
"auf_solver","commander boundary","mk_sorts_finite","command collaborator"
"auf_solver","commander boundary","add_elem_to_empty_inst_sets","command collaborator"
"auf_solver","commander boundary","collect_root_nodes","command collaborator"
"auf_solver","commander boundary","get_f_i_proj","property non-void-command collaborator"
"auf_solver","commander boundary","complete_partial_funcs","command collaborator"
"auf_solver","commander boundary","mk_inverse","controller"
"auf_solver","commander boundary","mk_inverses","command collaborator"
"auf_solver","commander boundary","fix_model","command collaborator"
"auf_solver","commander boundary","is_default_representative","controller stateless"
"context_params","unclassified","rlimit","get"
"context_params","unclassified","set_rlimit","set"
"context_params","unclassified","context_params::context_params","constructor"
"context_params","unclassified","context_params::set_bool","controller stateless"
"context_params","unclassified","context_params::set_uint","controller stateless"
"context_params","unclassified","context_params::set","command collaborator"
"context_params","unclassified","context_params::updt_params","command"
"context_params","unclassified","context_params::updt_params","command collaborator"
"context_params","unclassified","context_params::collect_param_descrs","command collaborator"
"context_params","unclassified","context_params::collect_solver_param_descrs","controller stateless"
"context_params","unclassified","context_params::merge_default_params","property factory controller"
"context_params","unclassified","context_params::get_solver_params","void-accessor controller"
"context_params","unclassified","context_params::is_shell_only_parameter","wrapper stateless"
"cleaner","commander boundary","dec","set"
"cleaner","commander boundary","cleaner::cleaner","constructor"
"cleaner","commander boundary","cleaner::cleanup_watches","command collaborator"
"cleaner","commander boundary","cleaner::cleanup_clauses","command collaborator"
"cleaner","commander boundary","cleaner::is_clean","predicate collaborator"
"cleaner","commander boundary","cleaner::operator()","predicate non-void-command collaborator"
"cleaner","commander boundary","cleaner::reset_statistics","command"
"cleaner","commander boundary","cleaner::collect_statistics","controller"
"pb_fuzzer","commander","pb_fuzzer","constructor"
"pb_fuzzer","commander","fuzz","command"
"pb_fuzzer","commander","add_ineq","command"
"pb_fuzzer","commander","fuzz_round","void-accessor command"
"model_finder","entity commander boundary","model_finder::model_finder","constructor"
"model_finder","entity commander boundary","model_finder::~model_finder","destructor"
"model_finder","entity commander boundary","model_finder::checkpoint","command"
"model_finder","entity commander boundary","model_finder::checkpoint","command"
"model_finder","entity commander boundary","model_finder::get_quantifier_info","property non-void-command collaborator"
"model_finder","entity commander boundary","model_finder::set_context","set collaborator"
"model_finder","entity commander boundary","model_finder::register_quantifier","command collaborator"
"model_finder","entity commander boundary","model_finder::push_scope","command collaborator"
"model_finder","entity commander boundary","model_finder::restore_quantifiers","command collaborator"
"model_finder","entity commander boundary","model_finder::pop_scope","command collaborator"
"model_finder","entity commander boundary","model_finder::reset","command"
"model_finder","entity commander boundary","model_finder::init_search_eh","empty"
"model_finder","entity commander boundary","model_finder::collect_relevant_quantifiers","collaborator"
"model_finder","entity commander boundary","model_finder::process_auf","command collaborator"
"model_finder","entity commander boundary","model_finder::operator()","get collaborator"
"model_finder","entity commander boundary","model_finder::process_simple_macros","wrapper"
"model_finder","entity commander boundary","model_finder::process_hint_macros","wrapper"
"model_finder","entity commander boundary","model_finder::process_non_auf_macros","command collaborator"
"model_finder","entity commander boundary","model_finder::cleanup_quantifier_infos","command collaborator"
"model_finder","entity commander boundary","model_finder::fix_model","command collaborator"
"model_finder","entity commander boundary","model_finder::get_flat_quantifier","property non-void-command collaborator"
"model_finder","entity commander boundary","model_finder::get_uvar_inst_set","property non-void-command collaborator"
"model_finder","entity commander boundary","model_finder::get_inv","property non-void-command collaborator"
"model_finder","entity commander boundary","model_finder::restrict_sks_to_inst_set","predicate non-void-command collaborator"
"model_finder","entity commander boundary","model_finder::restart_eh","command collaborator"
"relation_fact","data-provider boundary degenerate","relation_fact","constructor"
"relation_fact","data-provider boundary degenerate","relation_fact","constructor"
"relation_fact","data-provider boundary degenerate","begin","wrapper stateless"
"relation_fact","data-provider boundary degenerate","end","wrapper stateless"
"relation_fact","data-provider boundary degenerate","operator[]","wrapper stateless"
"relation_fact","data-provider boundary degenerate","operator[]","property wrapper"
"relation_fact","data-provider boundary degenerate","relation_fact::relation_fact","constructor"
"gia_pareto","entity boundary small-class","gia_pareto","constructor"
"gia_pareto","entity boundary small-class","gia_pareto::operator()","property non-void-command collaborator"
"theory_polymorphism","degenerate","internalize_atom","incidental"
"theory_polymorphism","degenerate","internalize_term","incidental"
"theory_polymorphism","degenerate","new_eq_eh","empty"
"theory_polymorphism","degenerate","new_diseq_eh","empty"
"theory_polymorphism","degenerate","mk_fresh","wrapper stateless"
"theory_polymorphism","degenerate","get_name","incidental"
"theory_polymorphism","degenerate","display","empty"
"theory_polymorphism","degenerate","push_scope_eh","command"
"theory_polymorphism","degenerate","pop_scope_eh","command"
"theory_polymorphism","degenerate","can_propagate","get"
"theory_polymorphism","degenerate","propagate","command collaborator"
"theory_polymorphism","degenerate","final_check_eh","property non-void-command collaborator"
"theory_polymorphism","degenerate","add_theory_assumptions","command collaborator"
"theory_polymorphism","degenerate","should_research","predicate collaborator"
"theory_polymorphism","degenerate","theory_polymorphism","constructor"
"theory_polymorphism","degenerate","init_model","empty"
"ar_der","entity commander boundary","is_variable","wrapper stateless"
"ar_der","entity commander boundary","mark_all","wrapper"
"ar_der","entity commander boundary","mark_all","command"
"ar_der","entity commander boundary","solve_select","predicate non-void-command collaborator"
"ar_der","entity commander boundary","solve_select","predicate non-void-command collaborator"
"ar_der","entity commander boundary","solve_neq_select","predicate non-void-command collaborator"
"ar_der","entity commander boundary","checkpoint","command"
"ar_der","entity commander boundary","ar_der","constructor"
"ar_der","entity commander boundary","operator()","command collaborator"
"ar_der","entity commander boundary","operator()","empty"
"ar_der","entity commander boundary","set_is_variable_proc","set collaborator"
"max_level","boundary","max_level","constructor"
"max_level","boundary","merge","command"
"max_level","boundary","max","wrapper"
"max_level","boundary","merge","wrapper stateless"
"max_level","boundary","display","property collaborator"
"max_level","boundary","operator==","predicate"
"set_var_theory_trail","pure-controller small-class","set_var_theory_trail","constructor"
"set_var_theory_trail","pure-controller small-class","undo","controller"
"bv2real_elim_rewriter","entity boundary small-class","bv2real_elim_rewriter","constructor"
"bv2real_elim_rewriter","entity boundary small-class","bv2real_elim_rewriter::mk_app_core","property non-void-command collaborator"
"sls_stats","commander small-class","sls_stats","constructor"
"sls_stats","commander small-class","reset","command"
"sls_stats","commander small-class","collect_statistics","collaborator"
"qe_lite_simplifier","commander","qe_lite_simplifier","constructor"
"qe_lite_simplifier","commander","name","incidental"
"qe_lite_simplifier","commander","updt_params","command collaborator"
"qe_lite_simplifier","commander","reduce","command"
"rel_context_base","empty","rel_context_base","constructor"
"qe_lite","boundary degenerate","operator()","wrapper stateless"
"qe_lite","boundary degenerate","operator()","controller stateless"
"qe_lite","boundary degenerate","qe_lite::qe_lite","constructor"
"qe_lite","boundary degenerate","qe_lite::~qe_lite","destructor"
"qe_lite","boundary degenerate","qe_lite::operator()","wrapper stateless"
"qe_lite","boundary degenerate","qe_lite::operator()","wrapper stateless"
"qe_lite","boundary degenerate","qe_lite::operator()","wrapper stateless"
"qe_lite","boundary degenerate","qe_lite::operator()","wrapper stateless"
"qel::impl","pure-controller small-class","operator()","controller"
"stopwatch","unclassified","stopwatch","constructor"
"stopwatch","unclassified","add","set"
"stopwatch","unclassified","reset","set"
"stopwatch","unclassified","start","command"
"stopwatch","unclassified","stop","command"
"stopwatch","unclassified","get_seconds","property"
"stopwatch","unclassified","get_current_seconds","property"
"pattern_validation_functor","commander boundary","pattern_validation_functor","constructor"
"pattern_validation_functor","commander boundary","is_forbidden","predicate controller"
"pattern_validation_functor","commander boundary","operator()","set collaborator"
"pattern_validation_functor","commander boundary","operator()","command collaborator"
"pattern_validation_functor","commander boundary","operator()","set collaborator"
"i_local_search","boundary degenerate small-class","get_value","collaborator incidental"
"theory_bv_params","commander boundary small-class","theory_bv_params","constructor"
"theory_bv_params","commander boundary small-class","theory_bv_params::updt_params","command collaborator"
"theory_bv_params","commander boundary small-class","theory_bv_params::display","wrapper"
"qel","boundary degenerate small-class","qel::qel","constructor"
"qel","boundary degenerate small-class","qel::~qel","destructor"
"qel","boundary degenerate small-class","qel::operator()","wrapper stateless"
"nlqsat","commander boundary","check_sat","property non-void-command collaborator"
"nlqsat","commander boundary","init_assumptions","command"
"nlqsat","commander boundary","insert_set","controller stateless"
"nlqsat","commander boundary","mbp","command collaborator"
"nlqsat","commander boundary","extract_vars","command collaborator"
"nlqsat","commander boundary","display_project","command collaborator"
"nlqsat","commander boundary","mbp","command collaborator"
"nlqsat","commander boundary","negate_clause","controller stateless"
"nlqsat","commander boundary","level","unclassified"
"nlqsat","commander boundary","enforce_parity","command collaborator"
"nlqsat","commander boundary","add_clause","command collaborator"
"nlqsat","commander boundary","get_level","property non-void-command collaborator"
"nlqsat","commander boundary","get_level","property non-void-command collaborator"
"nlqsat","commander boundary","get_level","property non-void-command collaborator"
"nlqsat","commander boundary","set_level","command collaborator"
"nlqsat","commander boundary","project","command collaborator"
"nlqsat","commander boundary","project_qe","command collaborator"
"nlqsat","commander boundary","add_to_answer","command collaborator"
"nlqsat","commander boundary","add_assumption_literal","command collaborator"
"nlqsat","commander boundary","is_exists","predicate"
"nlqsat","commander boundary","is_forall","predicate"
"nlqsat","commander boundary","is_exists","incidental"
"nlqsat","commander boundary","is_forall","predicate"
"nlqsat","commander boundary","check_cancel","empty"
"nlqsat","commander boundary","ackermanize_div","command collaborator"
"nlqsat","commander boundary","reset","command"
"nlqsat","commander boundary","push","command"
"nlqsat","commander boundary","pop","command"
"nlqsat","commander boundary","hoist","predicate non-void-command collaborator"
"nlqsat","commander boundary","mk_model","predicate non-void-command collaborator"
"nlqsat","commander boundary","name","incidental"
"nlqsat","commander boundary","updt_params","command collaborator"
"nlqsat","commander boundary","collect_param_descrs","empty"
"nlqsat","commander boundary","operator()","command collaborator"
"nlqsat","commander boundary","collect_statistics","controller"
"nlqsat","commander boundary","reset_statistics","command"
"nlqsat","commander boundary","cleanup","command"
"nlqsat","commander boundary","set_logic","empty"
"nlqsat","commander boundary","set_progress_callback","empty"
"nlqsat","commander boundary","translate","property wrapper"
"arith_project_plugin","entity boundary","solve","collaborator incidental"
"arith_project_plugin","entity boundary","saturate","wrapper stateless"
"arith_project_plugin","entity boundary","arith_project_plugin::arith_project_plugin","constructor"
"arith_project_plugin","entity boundary","arith_project_plugin::~arith_project_plugin","destructor"
"arith_project_plugin","entity boundary","arith_project_plugin::operator()","wrapper stateless"
"arith_project_plugin","entity boundary","arith_project_plugin::operator()","predicate non-void-command collaborator"
"arith_project_plugin","entity boundary","arith_project_plugin::project","predicate non-void-command collaborator"
"arith_project_plugin","entity boundary","arith_project_plugin::set_check_purified","set"
"arith_project_plugin","entity boundary","arith_project_plugin::set_apply_projection","set"
"arith_project_plugin","entity boundary","arith_project_plugin::get_family_id","property non-void-command collaborator"
"arith_project_plugin","entity boundary","arith_project_plugin::maximize","property non-void-command collaborator"
"array_project_plugin::imp","commander boundary","~imp","destructor"
"array_project_plugin::imp","commander boundary","solve","collaborator incidental"
"array_project_plugin::imp","commander boundary","remove_true","command collaborator"
"array_project_plugin::imp","commander boundary","contains_x","wrapper stateless"
"array_project_plugin::imp","commander boundary","mk_eq","command collaborator"
"array_project_plugin::imp","commander boundary","solve_eq","predicate non-void-command collaborator"
"array_project_plugin::imp","commander boundary","solve","predicate non-void-command collaborator"
"array_project_plugin::imp","commander boundary","contains","property non-void-command collaborator"
"array_project_plugin::imp","commander boundary","compare","property non-void-command collaborator"
"array_project_plugin::imp","commander boundary","compare","property non-void-command collaborator"
"array_project_plugin::imp","commander boundary","saturate","command collaborator"
"array_project_plugin::imp","commander boundary","add_index_sort","command collaborator"
"array_project_plugin::imp","commander boundary","add_array","command collaborator"
"array_project_plugin::imp","commander boundary","is_index","property non-void-command collaborator"
"array_project_plugin::imp","commander boundary","collect_store_expressions","wrapper"
"array_project_plugin::imp","commander boundary","collect_index_expressions","wrapper"
"array_project_plugin::imp","commander boundary","are_equal","controller stateless"
"array_project_plugin::imp","commander boundary","assert_extensionality","command collaborator"
"array_project_plugin::imp","commander boundary","assert_store_select","command collaborator"
"array_project_plugin::imp","commander boundary","assert_store_select","command collaborator"
"array_project_plugin::imp","commander boundary","assert_store_select","command collaborator"
"aig_cuts::validator","commander boundary small-class","on_clause","command collaborator"
"aig_cuts::validator","commander boundary small-class","check","command collaborator"
"array_project_plugin","unclassified","array_project_plugin::array_project_plugin","constructor"
"array_project_plugin","unclassified","array_project_plugin::~array_project_plugin","destructor"
"array_project_plugin","unclassified","array_project_plugin::operator()","controller stateless"
"array_project_plugin","unclassified","array_project_plugin::solve","predicate non-void-command collaborator"
"array_project_plugin","unclassified","array_project_plugin::get_family_id","property non-void-command collaborator"
"array_project_plugin","unclassified","array_project_plugin::operator()","controller stateless"
"array_project_plugin","unclassified","array_project_plugin::project","collaborator incidental"
"array_project_plugin","unclassified","array_project_plugin::saturate","command collaborator"
"mbp_array_tg::impl","entity boundary","has_var","predicate wrapper"
"mbp_array_tg::impl","entity boundary","has_arr_var","predicate non-void-command collaborator"
"mbp_array_tg::impl","entity boundary","is_var","predicate non-void-command collaborator"
"mbp_array_tg::impl","entity boundary","is_wr_on_rhs","predicate non-void-command collaborator"
"mbp_array_tg::impl","entity boundary","is_wr_on_rhs","predicate non-void-command collaborator"
"mbp_array_tg::impl","entity boundary","is_arr_write","predicate non-void-command collaborator"
"mbp_array_tg::impl","entity boundary","is_arr_write","predicate non-void-command collaborator"
"mbp_array_tg::impl","entity boundary","has_stores","predicate non-void-command collaborator"
"mbp_array_tg","unclassified","mbp_array_tg::use_model","set"
"mbp_array_tg","unclassified","mbp_array_tg::apply","predicate non-void-command"
"mbp_array_tg","unclassified","mbp_array_tg::reset","command"
"mbp_array_tg","unclassified","mbp_array_tg::get_new_vars","void-accessor collaborator"
"mbp_array_tg","unclassified","mbp_array_tg::get_family_id","property collaborator"
"mbp_array_tg","unclassified","mbp_array_tg::mbp_array_tg","constructor"
"mbp_array_tg","unclassified","mbp_array_tg::~mbp_array_tg","destructor"
"datatype_project_plugin","entity boundary degenerate","datatype_project_plugin::datatype_project_plugin","constructor"
"datatype_project_plugin","entity boundary degenerate","datatype_project_plugin::~datatype_project_plugin","destructor"
"datatype_project_plugin","entity boundary degenerate","datatype_project_plugin::operator()","wrapper stateless"
"datatype_project_plugin","entity boundary degenerate","datatype_project_plugin::solve","predicate non-void-command collaborator"
"datatype_project_plugin","entity boundary degenerate","datatype_project_plugin::project","collaborator incidental"
"datatype_project_plugin","entity boundary degenerate","datatype_project_plugin::saturate","wrapper stateless"
"datatype_project_plugin","entity boundary degenerate","datatype_project_plugin::get_family_id","property non-void-command collaborator"
"bool_var_data","unclassified","update_atom_flag","set"
"bool_var_data","unclassified","get_intern_level","get"
"bool_var_data","unclassified","justification","get collaborator"
"bool_var_data","unclassified","set_axiom","set"
"bool_var_data","unclassified","set_null_justification","set"
"bool_var_data","unclassified","set_justification","set collaborator"
"bool_var_data","unclassified","is_atom","get"
"bool_var_data","unclassified","get_theory","property collaborator"
"bool_var_data","unclassified","is_theory_atom","predicate"
"bool_var_data","unclassified","set_notify_theory","command collaborator"
"bool_var_data","unclassified","reset_notify_theory","set"
"bool_var_data","unclassified","is_enode","get"
"bool_var_data","unclassified","set_enode_flag","command"
"bool_var_data","unclassified","reset_enode_flag","set"
"bool_var_data","unclassified","is_quantifier","get"
"bool_var_data","unclassified","set_quantifier_flag","command"
"bool_var_data","unclassified","is_eq","get"
"bool_var_data","unclassified","set_eq_flag","command"
"bool_var_data","unclassified","reset_eq_flag","set"
"bool_var_data","unclassified","try_true_first","get"
"bool_var_data","unclassified","set_true_first_flag","set"
"bool_var_data","unclassified","reset_true_first_flag","set"
"bool_var_data","unclassified","init","command"
"mbp_basic_tg::impl","entity boundary","mark_seen","command collaborator"
"mbp_basic_tg::impl","entity boundary","is_seen","predicate non-void-command collaborator"
"mbp_basic_tg::impl","entity boundary","apply","predicate non-void-command collaborator"
"_scoped_interval","data-provider boundary","_scoped_interval","constructor"
"_scoped_interval","data-provider boundary","~_scoped_interval","destructor"
"_scoped_interval","data-provider boundary","m","get collaborator"
"_scoped_interval","data-provider boundary","","get collaborator"
"_scoped_interval","data-provider boundary","operatorinterval&","get"
"_scoped_interval","data-provider boundary","get","get collaborator"
"_scoped_interval","data-provider boundary","get","get collaborator"
"_scoped_interval","data-provider boundary","operator->","property collaborator"
"_scoped_interval","data-provider boundary","operator->","property collaborator"
"qe_cmd","commander boundary","qe_cmd","constructor"
"qe_cmd","commander boundary","get_usage","incidental"
"qe_cmd","commander boundary","get_main_descr","incidental"
"qe_cmd","commander boundary","init_pdescrs","controller stateless"
"qe_cmd","commander boundary","prepare","set collaborator"
"qe_cmd","commander boundary","next_arg_kind","property collaborator"
"qe_cmd","commander boundary","set_next_arg","set collaborator"
"qe_cmd","commander boundary","execute","command collaborator"
"ast_printer_context","boundary degenerate small-class","ast_printer_context::regular_stream","collaborator incidental"
"ast_printer_context","boundary degenerate small-class","ast_printer_context::diagnostic_stream","collaborator incidental"
"mbp_dt_tg::impl","entity boundary","mark_seen","command collaborator"
"mbp_dt_tg::impl","entity boundary","is_seen","predicate non-void-command collaborator"
"mbp_dt_tg::impl","entity boundary","is_var","predicate non-void-command collaborator"
"mbp_dt_tg::impl","entity boundary","has_var","predicate wrapper"
"mbp_dt_tg::impl","entity boundary","is_constructor","predicate non-void-command collaborator"
"mbp_dt_tg::impl","entity boundary","is_constructor_app","predicate non-void-command collaborator"
"mbp_dt_tg::impl","entity boundary","rm_select","command collaborator"
"mbp_dt_tg::impl","entity boundary","deconstruct_eq","command collaborator"
"mbp_dt_tg::impl","entity boundary","deconstruct_neq","command collaborator"
"mbp_dt_tg::impl","entity boundary","apply","predicate non-void-command"
"ref_vector_core","boundary","inc_ref","command collaborator"
"ref_vector_core","boundary","dec_ref","command collaborator"
"ref_vector_core","boundary","dec_range_ref","command collaborator"
"ref_vector_core","boundary","~ref_vector_core","destructor"
"ref_vector_core","boundary","reset","command"
"ref_vector_core","boundary","finalize","command"
"ref_vector_core","boundary","resize","command"
"ref_vector_core","boundary","resize","command collaborator"
"ref_vector_core","boundary","reserve","command"
"ref_vector_core","boundary","shrink","command"
"ref_vector_core","boundary","push_back","get non-void-command collaborator"
"ref_vector_core","boundary","push_back","get non-void-command collaborator"
"ref_vector_core","boundary","push_back","get non-void-command collaborator"
"ref_vector_core","boundary","pop_back","command collaborator"
"ref_vector_core","boundary","back","property collaborator"
"ref_vector_core","boundary","size","unclassified"
"ref_vector_core","boundary","empty","predicate"
"ref_vector_core","boundary","get","get collaborator"
"ref_vector_core","boundary","get","property collaborator"
"ref_vector_core","boundary","data","property collaborator"
"ref_vector_core","boundary","data","property non-void-command collaborator"
"ref_vector_core","boundary","hash","unclassified"
"ref_vector_core","boundary","begin","property collaborator"
"ref_vector_core","boundary","end","property collaborator"
"ref_vector_core","boundary","set","command collaborator"
"ref_vector_core","boundary","erase","command collaborator"
"ref_vector_core","boundary","erase","command collaborator"
"ref_vector_core","boundary","contains","predicate collaborator"
"ref_vector_core","boundary","operator[]","get collaborator"
"ref_vector_core","boundary","append","command"
"ref_vector_core","boundary","append","command collaborator"
"ref_vector_core","boundary","operator=","set"
"ref_vector_core","boundary","swap","command"
"ref_vector_core","boundary","reverse","command"
"mbp_dt_tg","unclassified","mbp_dt_tg::apply","predicate non-void-command"
"mbp_dt_tg","unclassified","mbp_dt_tg::mbp_dt_tg","constructor"
"mbp_dt_tg","unclassified","mbp_dt_tg::use_model","set"
"mbp_dt_tg","unclassified","mbp_dt_tg::get_new_vars","void-accessor collaborator"
"mbp_dt_tg","unclassified","mbp_dt_tg::get_family_id","property collaborator"
"mbp_dt_tg","unclassified","mbp_dt_tg::~mbp_dt_tg","destructor"
"noop_op_proc","degenerate small-class","operator()","empty"
"backoff","unclassified","should_apply","predicate"
"backoff","unclassified","inc","command"
"backoff","unclassified","inc","set"
"produce_models_probe","pure-controller degenerate small-class","operator()","controller stateless"
"arith_value","entity boundary","arith_value::arith_value","constructor"
"arith_value","entity boundary","arith_value::init","command"
"arith_value","entity boundary","arith_value::get_value","predicate non-void-command collaborator"
"arith_value","entity boundary","arith_value::arith_value","constructor"
"arith_value","entity boundary","arith_value::init","command collaborator"
"arith_value","entity boundary","arith_value::get_lo_equiv","predicate non-void-command collaborator"
"arith_value","entity boundary","arith_value::get_up_equiv","predicate non-void-command collaborator"
"arith_value","entity boundary","arith_value::get_up","predicate collaborator"
"arith_value","entity boundary","arith_value::get_lo","predicate collaborator"
"arith_value","entity boundary","arith_value::get_value","predicate collaborator"
"arith_value","entity boundary","arith_value::get_value_equiv","predicate collaborator"
"arith_value","entity boundary","arith_value::get_lo","property collaborator"
"arith_value","entity boundary","arith_value::get_up","property collaborator"
"arith_value","entity boundary","arith_value::get_fixed","property collaborator"
"arith_value","entity boundary","arith_value::final_check","property non-void-command collaborator"
"project_plugin","boundary","contains_uninterpreted","collaborator incidental"
"project_plugin","boundary","project_plugin","constructor"
"project_plugin","boundary","operator()","collaborator incidental"
"project_plugin","boundary","solve","collaborator incidental"
"project_plugin","boundary","get_family_id","collaborator incidental"
"project_plugin","boundary","operator()","collaborator incidental"
"project_plugin","boundary","project","collaborator incidental"
"project_plugin","boundary","saturate","empty"
"project_plugin","boundary","mark_non_ground","command collaborator"
"project_plugin","boundary","is_non_ground","predicate collaborator"
"project_plugin","boundary","project_plugin::mark_rec","wrapper stateless"
"project_plugin","boundary","project_plugin::mark_rec","command collaborator"
"project_plugin","boundary","project_plugin::pick_equality","controller stateless"
"project_plugin","boundary","project_plugin::erase","controller stateless"
"project_plugin","boundary","project_plugin::push_back","command collaborator"
"project_plugin","boundary","project_plugin::reduce","predicate non-void-command collaborator"
"project_plugin","boundary","project_plugin::extract_literals","command collaborator"
"project_plugin","boundary","project_plugin::extract_bools","void-accessor command collaborator"
"project_plugin","boundary","project_plugin::is_true","predicate non-void-command collaborator"
"project_plugin","boundary","project_plugin::visit_ite","predicate non-void-command collaborator"
"project_plugin","boundary","project_plugin::visit_bool","predicate non-void-command collaborator"
"project_plugin","boundary","project_plugin::visit_app","command collaborator"
"project_plugin","boundary","project_plugin::mark_non_ground","command collaborator"
"check_uninterp_consts","entity boundary small-class","check_uninterp_consts","constructor"
"check_uninterp_consts","entity boundary small-class","operator()","predicate non-void-command collaborator"
"nnf_collect_atoms","commander boundary small-class","nnf_collect_atoms","constructor"
"nnf_collect_atoms","commander boundary small-class","operator()","command collaborator"
"mark_all_sub_expr","degenerate","mark_all_sub_expr","constructor"
"mark_all_sub_expr","degenerate","operator()","empty"
"mark_all_sub_expr","degenerate","operator()","collaborator"
"mark_all_sub_expr","degenerate","operator()","empty"
"term","unclassified","~term","destructor"
"term","unclassified","get_hash","unclassified"
"term","unclassified","deg","unclassified"
"term","unclassified","get_id","unclassified"
"term","unclassified","is_eq_or_neq","predicate"
"term","unclassified","is_eq_or_peq","predicate"
"term","unclassified","is_neq","get"
"term","unclassified","set_neq_child","set"
"term","unclassified","set_npeq_child","set"
"term","unclassified","is_neq_child","get"
"term","unclassified","is_npeq_child","get"
"term","unclassified","get_decl_id","unclassified"
"term","unclassified","is_marked","get"
"term","unclassified","set_mark","set"
"term","unclassified","is_marked2","get"
"term","unclassified","set_mark2","set"
"term","unclassified","is_cgr","get"
"term","unclassified","set_cgr","set"
"term","unclassified","is_gr","get"
"term","unclassified","set_gr","set"
"term","unclassified","is_class_gr_root","predicate"
"term","unclassified","set_class_gr_root","set"
"term","unclassified","is_class_gr","predicate"
"term","unclassified","set_class_gr","command"
"term","unclassified","all_children_ground","predicate non-void-command"
"term","unclassified","set_mark2_terms_class","command"
"term","unclassified","is_interpreted","get"
"term","unclassified","is_theory","predicate wrapper"
"term","unclassified","mark_as_interpreted","set"
"term","unclassified","get_expr","get collaborator"
"term","unclassified","get_num_args","unclassified"
"term","unclassified","get_root","get"
"term","unclassified","is_root","predicate"
"term","unclassified","set_root","set"
"term","unclassified","get_repr","get"
"term","unclassified","is_repr","predicate"
"term","unclassified","set_repr","command"
"term","unclassified","reset_repr","set"
"term","unclassified","get_next","get"
"term","unclassified","add_parent","command"
"term","unclassified","get_class_size","unclassified"
"term","unclassified","merge_eq_class","command"
"term","unclassified","mk_repr","controller"
"term","unclassified","display","property collaborator"
"term","unclassified","get_deqs","property collaborator"
"pair_t","empty","pair_t","constructor"
"pair_t","empty","pair_t","constructor"
"bvarray2uf_tactic","entity boundary","translate","property wrapper"
"bvarray2uf_tactic","entity boundary","~bvarray2uf_tactic","destructor"
"bvarray2uf_tactic","entity boundary","name","incidental"
"bvarray2uf_tactic","entity boundary","updt_params","command collaborator"
"bvarray2uf_tactic","entity boundary","collect_param_descrs","wrapper stateless"
"bvarray2uf_tactic","entity boundary","operator()","wrapper stateless"
"bvarray2uf_tactic","entity boundary","cleanup","command collaborator"
"default_qm_plugin","boundary","default_qm_plugin","constructor"
"default_qm_plugin","boundary","set_manager","command collaborator"
"default_qm_plugin","boundary","mk_fresh","wrapper stateless"
"default_qm_plugin","boundary","model_based","predicate"
"default_qm_plugin","boundary","mbqi_enabled","predicate controller"
"default_qm_plugin","boundary","add","command collaborator"
"default_qm_plugin","boundary","del","empty"
"default_qm_plugin","boundary","push","command"
"default_qm_plugin","boundary","pop","command"
"default_qm_plugin","boundary","init_search_eh","command"
"default_qm_plugin","boundary","assign_eh","command collaborator"
"default_qm_plugin","boundary","use_ematching","predicate"
"default_qm_plugin","boundary","add_eq_eh","command collaborator"
"default_qm_plugin","boundary","relevant_eh","command collaborator"
"default_qm_plugin","boundary","can_propagate","predicate"
"default_qm_plugin","boundary","restart_eh","command"
"default_qm_plugin","boundary","is_shared","predicate collaborator"
"default_qm_plugin","boundary","adjust_model","command collaborator"
"default_qm_plugin","boundary","propagate","command collaborator"
"default_qm_plugin","boundary","check_model","property non-void-command collaborator"
"default_qm_plugin","boundary","final_check_eh","property non-void-command collaborator"
"default_qm_plugin","boundary","final_check_quant","property non-void-command collaborator"
"term_graph","boundary","get_lits","get collaborator"
"term_graph","boundary","size","non-void-command"
"term_graph","boundary","get_ast_manager","get collaborator"
"term_graph","boundary","add_lits","command collaborator"
"term_graph","boundary","add_eq","command collaborator"
"term_graph","boundary","add_deq","command collaborator"
"term_graph","boundary","set_explicit_eq","set"
"term_graph","boundary","term_graph::is_ground","predicate wrapper"
"term_graph","boundary","term_graph::term_graph","constructor"
"term_graph","boundary","term_graph::~term_graph","destructor"
"term_graph","boundary","term_graph::is_pure_def","predicate non-void-command collaborator"
"term_graph","boundary","term_graph::add_lit","void-accessor command collaborator"
"term_graph","boundary","term_graph::get_terms","void-accessor command collaborator"
"term_graph","boundary","term_graph::is_cgr","predicate non-void-command collaborator"
"term_graph","boundary","term_graph::is_internalized","controller stateless"
"term_graph","boundary","term_graph::get_term","controller stateless"
"term_graph","boundary","term_graph::mk_term","property non-void-command collaborator"
"term_graph","boundary","term_graph::internalize_term","property non-void-command collaborator"
"term_graph","boundary","term_graph::internalize_eq","command collaborator"
"term_graph","boundary","term_graph::internalize_distinct","command collaborator"
"term_graph","boundary","term_graph::internalize_deq","command collaborator"
"term_graph","boundary","term_graph::internalize_lit","command collaborator"
"term_graph","boundary","term_graph::merge_flush","command collaborator"
"term_graph","boundary","term_graph::merge","command collaborator"
"term_graph","boundary","term_graph::mk_app_core","property non-void-command collaborator"
"term_graph","boundary","term_graph::mk_app","property non-void-command collaborator"
"term_graph","boundary","term_graph::mk_app","property non-void-command collaborator"
"term_graph","boundary","term_graph::mk_equalities","command collaborator"
"term_graph","boundary","term_graph::mk_all_equalities","command collaborator"
"term_graph","boundary","term_graph::mk_qe_lite_equalities","command collaborator"
"term_graph","boundary","term_graph::reset_marks","controller"
"term_graph","boundary","term_graph::reset_marks2","controller"
"term_graph","boundary","term_graph::marks_are_clear","predicate controller"
"term_graph","boundary","term_graph::term_lt","predicate non-void-command collaborator"
"term_graph","boundary","term_graph::pick_repr_percolate_up","command collaborator"
"term_graph","boundary","term_graph::pick_repr_class","command collaborator"
"term_graph","boundary","term_graph::pick_repr","command collaborator"
"term_graph","boundary","term_graph::refine_repr_class","command collaborator"
"term_graph","boundary","term_graph::makes_cycle","controller stateless"
"term_graph","boundary","term_graph::refine_repr","command collaborator"
"term_graph","boundary","term_graph::has_val_in_class","predicate non-void-command collaborator"
"term_graph","boundary","term_graph::get_const_in_class","property non-void-command collaborator"
"term_graph","boundary","term_graph::display","collaborator"
"term_graph","boundary","term_graph::to_lits","command collaborator"
"term_graph","boundary","term_graph::to_lits_qe_lite","command collaborator"
"term_graph","boundary","term_graph::to_expr","property non-void-command collaborator"
"term_graph","boundary","term_graph::reset","command"
"term_graph","boundary","term_graph::qel","void-accessor command collaborator"
"term_graph","boundary","term_graph::set_vars","command"
"term_graph","boundary","term_graph::set_vars","command"
"term_graph","boundary","term_graph::add_vars","command collaborator"
"term_graph","boundary","term_graph::add_var","command collaborator"
"term_graph","boundary","term_graph::project","property non-void-command collaborator"
"term_graph","boundary","term_graph::project","property non-void-command collaborator"
"term_graph","boundary","term_graph::solve","property non-void-command collaborator"
"term_graph","boundary","term_graph::get_ackerman_disequalities","property non-void-command collaborator"
"term_graph","boundary","term_graph::get_partition","property set collaborator"
"term_graph","boundary","term_graph::shared_occurrences","property controller"
"term_graph","boundary","term_graph::add_model_based_terms","command collaborator"
"term_graph","boundary","term_graph::rep_of","property non-void-command collaborator"
"term_graph","boundary","term_graph::dcert","property non-void-command collaborator"
"term_graph","boundary","term_graph::cground_percolate_up","command collaborator"
"term_graph","boundary","term_graph::cground_percolate_up","controller stateless"
"term_graph","boundary","term_graph::compute_cground","command collaborator"
"bv_size_reduction_tactic","entity commander boundary","bv_size_reduction_tactic","constructor"
"bv_size_reduction_tactic","entity commander boundary","translate","wrapper stateless"
"bv_size_reduction_tactic","entity commander boundary","name","incidental"
"bv_size_reduction_tactic","entity commander boundary","cleanup","command"
"bv_size_reduction_tactic","entity commander boundary","update_signed_lower","command collaborator"
"bv_size_reduction_tactic","entity commander boundary","update_signed_upper","command collaborator"
"bv_size_reduction_tactic","entity commander boundary","update_unsigned_lower","command collaborator"
"bv_size_reduction_tactic","entity commander boundary","update_unsigned_upper","command collaborator"
"bv_size_reduction_tactic","entity commander boundary","collect_bounds","command collaborator"
"bv_size_reduction_tactic","entity commander boundary","checkpoint","command"
"bv_size_reduction_tactic","entity commander boundary","run","void-accessor command collaborator"
"bv_size_reduction_tactic","entity commander boundary","bv_size_reduction_tactic::operator()","command collaborator"
"mbp_tg_plugin","degenerate","apply","incidental"
"mbp_tg_plugin","degenerate","use_model","empty"
"mbp_tg_plugin","degenerate","get_new_vars","empty"
"mbp_tg_plugin","degenerate","get_family_id","collaborator incidental"
"bound_relation_plugin::join_fn","pure-controller degenerate small-class","operator()","controller stateless"
"util::literal_set","entity data-provider boundary","size","unclassified"
"util::literal_set","entity data-provider boundary","lits","get collaborator"
"util::literal_set","entity data-provider boundary","polys","get collaborator"
"util::literal_set","entity data-provider boundary","comps","get collaborator"
"util::literal_set","entity data-provider boundary","get_poly","get collaborator"
"util::literal_set","entity data-provider boundary","compare","get collaborator"
"util::literal_set","entity data-provider boundary","literal","get collaborator"
"util::literal_set","entity data-provider boundary","x","get collaborator"
"util::literal_set","entity data-provider boundary","set_x","set collaborator"
"util::literal_set","entity data-provider boundary","x_inf","get non-void-command collaborator"
"util::literal_set","entity data-provider boundary","x_sup","get non-void-command collaborator"
"util::literal_set","entity data-provider boundary","mk_const","void-accessor command collaborator"
"branch_conditions","data-provider boundary","branch_conditions","constructor"
"branch_conditions","data-provider boundary","add_pred","command collaborator"
"branch_conditions","data-provider boundary","add_branch","command collaborator"
"branch_conditions","data-provider boundary","preds","get collaborator"
"branch_conditions","data-provider boundary","branches","get collaborator"
"branch_conditions","data-provider boundary","constraints","get collaborator"
"branch_conditions","data-provider boundary","def","get collaborator"
"branch_conditions","data-provider boundary","a","get collaborator"
"branch_conditions","data-provider boundary","b","get collaborator"
"branch_conditions","data-provider boundary","c","get collaborator"
"branch_conditions","data-provider boundary","subst","get collaborator"
"branch_conditions","data-provider boundary","branches","get collaborator"
"branch_conditions","data-provider boundary","preds","get collaborator"
"branch_conditions","data-provider boundary","subst","get collaborator"
"branch_conditions","data-provider boundary","constraints","get collaborator"
"branch_conditions","data-provider boundary","reset","command"
"branch_conditions","data-provider boundary","size","unclassified"
"branch_conditions","data-provider boundary","num_preds","unclassified"
"param_descrs::imp","data-provider boundary","insert","command collaborator"
"param_descrs::imp","data-provider boundary","erase","command collaborator"
"param_descrs::imp","data-provider boundary","contains","predicate collaborator"
"param_descrs::imp","data-provider boundary","get_kind","property collaborator"
"param_descrs::imp","data-provider boundary","split_name","controller stateless"
"param_descrs::imp","data-provider boundary","get_kind_in_module","property collaborator"
"param_descrs::imp","data-provider boundary","get_module","property collaborator"
"param_descrs::imp","data-provider boundary","get_descr","property collaborator"
"param_descrs::imp","data-provider boundary","get_default","property collaborator"
"param_descrs::imp","data-provider boundary","size","unclassified"
"param_descrs::imp","data-provider boundary","get_param_name","get collaborator"
"param_descrs::imp","data-provider boundary","display","collaborator"
"param_descrs::imp","data-provider boundary","copy","command collaborator"
"simplex_arith_kernel_plugin","pure-controller degenerate","simplex_arith_kernel_plugin","constructor"
"simplex_arith_kernel_plugin","pure-controller degenerate","compute_kernel","controller stateless"
"simplex_arith_kernel_plugin","pure-controller degenerate","collect_statistics","empty"
"simplex_arith_kernel_plugin","pure-controller degenerate","reset_statistics","empty"
"simplex_arith_kernel_plugin","pure-controller degenerate","reset","empty"
"conjunctions","commander boundary","conjunctions","constructor"
"conjunctions","commander boundary","add_plugin","command collaborator"
"conjunctions","commander boundary","get_partition","command collaborator"
"conjunctions","commander boundary","partition_vars","controller stateless"
"conjunctions","commander boundary","is_var","collaborator incidental"
"conjunctions","commander boundary","is_uninterpreted","predicate non-void-command collaborator"
"mon","data-provider small-class","mon","constructor"
"mon","data-provider small-class","mon","constructor"
"mon","data-provider small-class","is_valid","predicate"
"str_value_factory","entity boundary","str_value_factory","constructor"
"str_value_factory","entity boundary","get_some_value","property non-void-command collaborator"
"str_value_factory","entity boundary","get_some_values","predicate non-void-command collaborator"
"str_value_factory","entity boundary","get_fresh_value","property non-void-command collaborator"
"str_value_factory","entity boundary","register_value","empty"
"lift_ite","entity boundary small-class","lift_ite","constructor"
"lift_ite","entity boundary small-class","operator()","predicate non-void-command collaborator"
"lift_ite","entity boundary small-class","find_ite","predicate non-void-command collaborator"
"Z3_func_interp_ref","empty","Z3_func_interp_ref","constructor"
"test_file_reader","degenerate","scan_to_row_blob","empty"
"test_file_reader","degenerate","scan_row_blob_to_test_file_blob","empty"
"test_file_reader","degenerate","get_test_result","property non-void-command collaborator"
"bvect","unclassified","bvect","constructor"
"bvect","unclassified","bvect","constructor"
"bvect","unclassified","copy_to","void-accessor controller"
"bvect","unclassified","set","command collaborator"
"bvect","unclassified","get","predicate"
"bvect","unclassified","parity","get wrapper"
"bvect","unclassified","set_zero","unclassified"
"bvect","unclassified","get_bit_word","get collaborator"
"bvect","unclassified","get_bit_word","get collaborator"
"bvect","unclassified","bvect::set_bw","command"
"bvect","unclassified","bvect::get_value","property wrapper"
"bvect","unclassified","bvect::to_nat","unclassified"
"bvect","unclassified","bvect::set_shift_right","property non-void-command"
"bvect","unclassified","bvect::set_shift_right","get non-void-command"
"bvect","unclassified","bvect::set_shift_left","get non-void-command"
"bv_recognizers","data-provider boundary","bv_recognizers","constructor"
"bv_recognizers","data-provider boundary","get_fid","get collaborator"
"bv_recognizers","data-provider boundary","get_family_id","property collaborator"
"bv_recognizers","data-provider boundary","is_numeral","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv","predicate collaborator"
"bv_recognizers","data-provider boundary","is_concat","predicate collaborator"
"bv_recognizers","data-provider boundary","is_extract","predicate collaborator"
"bv_recognizers","data-provider boundary","is_extract","predicate collaborator"
"bv_recognizers","data-provider boundary","get_extract_high","controller stateless"
"bv_recognizers","data-provider boundary","get_extract_low","controller stateless"
"bv_recognizers","data-provider boundary","get_extract_high","collaborator"
"bv_recognizers","data-provider boundary","get_extract_low","collaborator"
"bv_recognizers","data-provider boundary","is_bv_add","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_sub","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_mul","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_neg","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_sdiv","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_udiv","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_srem","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_urem","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_smod","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_sdiv0","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_udiv0","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_srem0","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_urem0","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_smod0","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_sdivi","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_udivi","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_sremi","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_uremi","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_smodi","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_and","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_or","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_xor","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_nand","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_nor","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_not","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_ule","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_sle","predicate collaborator"
"bv_recognizers","data-provider boundary","is_ule","predicate collaborator"
"bv_recognizers","data-provider boundary","is_sle","predicate collaborator"
"bv_recognizers","data-provider boundary","is_ult","predicate collaborator"
"bv_recognizers","data-provider boundary","is_slt","predicate collaborator"
"bv_recognizers","data-provider boundary","is_ugt","predicate collaborator"
"bv_recognizers","data-provider boundary","is_sgt","predicate collaborator"
"bv_recognizers","data-provider boundary","is_uge","predicate collaborator"
"bv_recognizers","data-provider boundary","is_sge","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bit2bool","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv2int","predicate collaborator"
"bv_recognizers","data-provider boundary","is_int2bv","predicate collaborator"
"bv_recognizers","data-provider boundary","is_mkbv","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_ashr","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_lshr","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_shl","predicate collaborator"
"bv_recognizers","data-provider boundary","is_sign_ext","predicate collaborator"
"bv_recognizers","data-provider boundary","is_bv_umul_no_ovfl","predicate collaborator"
"bv_recognizers","data-provider boundary","is_redand","predicate collaborator"
"bv_recognizers","data-provider boundary","is_redor","predicate collaborator"
"bv_recognizers","data-provider boundary","is_comp","predicate collaborator"
"bv_recognizers","data-provider boundary","is_rotate_left","predicate collaborator"
"bv_recognizers","data-provider boundary","is_rotate_right","predicate collaborator"
"bv_recognizers","data-provider boundary","is_ext_rotate_left","predicate collaborator"
"bv_recognizers","data-provider boundary","is_ext_rotate_right","predicate collaborator"
"bv_recognizers","data-provider boundary","is_rotate_left","predicate collaborator"
"bv_recognizers","data-provider boundary","is_rotate_right","predicate collaborator"
"bv_recognizers","data-provider boundary","is_int2bv","predicate collaborator"
"bv_recognizers","data-provider boundary","norm","property collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::norm","controller stateless"
"bv_recognizers","data-provider boundary","bv_recognizers::has_sign_bit","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_bv_sort","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_numeral","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_numeral","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_allone","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_zero","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_one","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_extract","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_repeat","predicate"
"bv_recognizers","data-provider boundary","bv_recognizers::is_bv2int","predicate collaborator"
"bv_recognizers","data-provider boundary","bv_recognizers::is_bit2bool","predicate"
"nnf_normalize_literals","entity boundary","nnf_normalize_literals","constructor"
"nnf_normalize_literals","entity boundary","operator()","void-accessor command collaborator"
"nnf_normalize_literals","entity boundary","reset","command"
"nnf_normalize_literals","entity boundary","visit","predicate non-void-command collaborator"
"relation_manager::default_table_project_fn","entity boundary","get_result_signature","property collaborator"
"relation_manager::default_table_project_fn","entity boundary","modify_fact","wrapper stateless"
"relation_manager::default_table_project_fn","entity boundary","operator()","property non-void-command collaborator"
"quant_elim","degenerate small-class","updt_params","empty"
"ast2ast_trail","commander small-class","ast2ast_trail","copy-constructor"
"ast2ast_trail","commander small-class","undo","command"
"simplify_solver_context","entity boundary","simplify_solver_context","constructor"
"simplify_solver_context","entity boundary","updt_params","command collaborator"
"simplify_solver_context","entity boundary","~simplify_solver_context","destructor"
"simplify_solver_context","entity boundary","solve","command collaborator"
"simplify_solver_context","entity boundary","get_manager","get collaborator"
"simplify_solver_context","entity boundary","pos_atoms","get collaborator"
"simplify_solver_context","entity boundary","neg_atoms","get collaborator"
"simplify_solver_context","entity boundary","get_num_vars","unclassified"
"simplify_solver_context","entity boundary","get_var","get wrapper"
"simplify_solver_context","entity boundary","get_vars","get collaborator"
"simplify_solver_context","entity boundary","is_var","predicate"
"simplify_solver_context","entity boundary","contains","get collaborator"
"simplify_solver_context","entity boundary","elim_var","command collaborator"
"simplify_solver_context","entity boundary","add_var","command collaborator"
"simplify_solver_context","entity boundary","add_constraint","wrapper stateless"
"simplify_solver_context","entity boundary","blast_or","wrapper stateless"
"simplify_solver_context","entity boundary","reset","command"
"simplify_solver_context","entity boundary","init","command collaborator"
"case_split_insert_trail","commander small-class","case_split_insert_trail","constructor"
"case_split_insert_trail","commander small-class","undo","command"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver","constructor"
"non_auf_macro_solver","commander boundary","set_mbqi_force_template","set"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver::add_macro","predicate non-void-command collaborator"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver::is_better_macro","controller stateless"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver::get_macro_for","property non-void-command collaborator"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver::collect_candidates","command collaborator"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver::process_full_macros","command collaborator"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver::process","command collaborator"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver::process_cond_macros","command collaborator"
"non_auf_macro_solver","commander boundary","non_auf_macro_solver::process","predicate non-void-command collaborator"
"simplify_rewriter_cfg::impl","entity boundary","updt_params","command collaborator"
"simplify_rewriter_cfg::impl","entity boundary","collect_statistics","collaborator"
"simplify_rewriter_cfg::impl","entity boundary","reduce_quantifier","predicate non-void-command collaborator"
"mk_scale::scale_model_converter","boundary degenerate","add_new2old","command collaborator"
"mk_scale::scale_model_converter","boundary degenerate","get_units","controller stateless"
"mk_scale::scale_model_converter","boundary degenerate","operator()","void-accessor command collaborator"
"mk_scale::scale_model_converter","boundary degenerate","translate","wrapper stateless"
"mk_scale::scale_model_converter","boundary degenerate","display","collaborator incidental"
"app_pair_lt","pure-controller degenerate small-class","app_pair_lt","constructor"
"app_pair_lt","pure-controller degenerate small-class","operator()","controller stateless"
"i_solver_context","entity boundary","plugin","get collaborator"
"i_solver_context","entity boundary","get_is_relevant","get collaborator"
"i_solver_context","entity boundary","get_mk_atom","get collaborator"
"i_solver_context","entity boundary","i_solver_context::~i_solver_context","destructor"
"i_solver_context","entity boundary","i_solver_context::is_var","wrapper stateless"
"i_solver_context","entity boundary","i_solver_context::add_plugin","command collaborator"
"i_solver_context","entity boundary","i_solver_context::has_plugin","predicate non-void-command collaborator"
"i_solver_context","entity boundary","i_solver_context::plugin","property non-void-command collaborator"
"i_solver_context","entity boundary","i_solver_context::mk_atom","void-accessor command collaborator"
"i_solver_context","entity boundary","i_solver_context::collect_statistics","empty"
"injectivity_tactic","boundary","translate","property wrapper"
"injectivity_tactic","boundary","~injectivity_tactic","destructor"
"injectivity_tactic","boundary","name","incidental"
"injectivity_tactic","boundary","updt_params","command collaborator"
"injectivity_tactic","boundary","collect_param_descrs","wrapper stateless"
"injectivity_tactic","boundary","operator()","controller"
"injectivity_tactic","boundary","cleanup","wrapper"
"def_vector","boundary","def_vector","constructor"
"def_vector","boundary","push_back","command collaborator"
"def_vector","boundary","reset","command"
"def_vector","boundary","append","command"
"def_vector","boundary","size","unclassified"
"def_vector","boundary","shrink","command"
"def_vector","boundary","empty","predicate"
"def_vector","boundary","var","get collaborator"
"def_vector","boundary","def","get collaborator"
"def_vector","boundary","def_ref","get collaborator"
"def_vector","boundary","def_vector::normalize","command collaborator"
"def_vector","boundary","def_vector::project","command collaborator"
"div_constraint","data-provider boundary data-class","div_constraint","constructor"
"div_constraint","data-provider boundary data-class","a","get collaborator"
"div_constraint","data-provider boundary data-class","k","get collaborator"
"div_constraint","data-provider boundary data-class","t","get collaborator"
"div_constraint","data-provider boundary data-class","a_ref","get collaborator"
"div_constraint","data-provider boundary data-class","k_ref","get collaborator"
"div_constraint","data-provider boundary data-class","t_ref","get collaborator"
"scoped_literal","unclassified","scoped_literal","constructor"
"scoped_literal","unclassified","~scoped_literal","destructor"
"scoped_literal","unclassified","operator=","get non-void-command collaborator"
"scoped_literal","unclassified","operator=","property non-void-command"
"scoped_literal","unclassified","operatorliteral&","get"
"scoped_literal","unclassified","","get collaborator"
"scoped_literal","unclassified","neg","command"
"fresh_value_proc","degenerate","fresh_value_proc","constructor"
"fresh_value_proc","degenerate","mk_value","wrapper stateless"
"fresh_value_proc","degenerate","is_fresh","incidental"
"fresh_value_proc","degenerate","fresh_value_proc::get_dependencies","controller"
"bounds_proc","entity boundary","bounds_proc","constructor"
"bounds_proc","entity boundary","get_bound","predicate non-void-command collaborator"
"bounds_proc","entity boundary","lt_size","non-void-command"
"bounds_proc","entity boundary","le_size","non-void-command"
"bounds_proc","entity boundary","gt_size","non-void-command"
"bounds_proc","entity boundary","ge_size","non-void-command"
"bounds_proc","entity boundary","t_size","non-void-command"
"bounds_proc","entity boundary","e_size","non-void-command"
"bounds_proc","entity boundary","size","non-void-command"
"bounds_proc","entity boundary","lt","property non-void-command collaborator"
"bounds_proc","entity boundary","le","property non-void-command collaborator"
"bounds_proc","entity boundary","gt","property non-void-command collaborator"
"bounds_proc","entity boundary","ge","property non-void-command collaborator"
"bounds_proc","entity boundary","t","property non-void-command collaborator"
"bounds_proc","entity boundary","e","property non-void-command collaborator"
"bounds_proc","entity boundary","exprs","property non-void-command collaborator"
"bounds_proc","entity boundary","lt_coeffs","property non-void-command collaborator"
"bounds_proc","entity boundary","le_coeffs","property non-void-command collaborator"
"bounds_proc","entity boundary","gt_coeffs","property non-void-command collaborator"
"bounds_proc","entity boundary","ge_coeffs","property non-void-command collaborator"
"bounds_proc","entity boundary","t_coeffs","property non-void-command collaborator"
"bounds_proc","entity boundary","e_coeffs","property non-void-command collaborator"
"bounds_proc","entity boundary","coeffs","property non-void-command collaborator"
"bounds_proc","entity boundary","lt_atoms","property non-void-command collaborator"
"bounds_proc","entity boundary","le_atoms","property non-void-command collaborator"
"bounds_proc","entity boundary","gt_atoms","property non-void-command collaborator"
"bounds_proc","entity boundary","ge_atoms","property non-void-command collaborator"
"bounds_proc","entity boundary","t_atoms","property non-void-command collaborator"
"bounds_proc","entity boundary","e_atoms","property non-void-command collaborator"
"bounds_proc","entity boundary","atoms","property non-void-command collaborator"
"bounds_proc","entity boundary","div_size","unclassified"
"bounds_proc","entity boundary","div_atoms","property non-void-command collaborator"
"bounds_proc","entity boundary","div_coeffs","property non-void-command collaborator"
"bounds_proc","entity boundary","div_terms","property non-void-command collaborator"
"bounds_proc","entity boundary","divisors","property non-void-command collaborator"
"bounds_proc","entity boundary","div_z","predicate non-void-command collaborator"
"bounds_proc","entity boundary","nested_div_size","unclassified"
"bounds_proc","entity boundary","nested_div_atom","get wrapper"
"bounds_proc","entity boundary","nested_div_coeff","get collaborator"
"bounds_proc","entity boundary","nested_div_term","get wrapper"
"bounds_proc","entity boundary","nested_divisor","get collaborator"
"bounds_proc","entity boundary","nested_div_z","get wrapper"
"bounds_proc","entity boundary","nested_div_z_bv","property wrapper"
"bounds_proc","entity boundary","reset","command"
"bounds_proc","entity boundary","get_nested_divs","predicate non-void-command collaborator"
"bounds_proc","entity boundary","get_le_bound","predicate non-void-command collaborator"
"bounds_proc","entity boundary","get_lt_bound","predicate non-void-command collaborator"
"bounds_proc","entity boundary","get_divides","predicate non-void-command collaborator"
"bounds_proc","entity boundary","display","command collaborator"
"reach_fact","boundary","reach_fact","constructor"
"reach_fact","boundary","reach_fact","constructor"
"reach_fact","boundary","is_init","get"
"reach_fact","boundary","get_rule","get collaborator"
"reach_fact","boundary","add_justification","command"
"reach_fact","boundary","get_justifications","get collaborator"
"reach_fact","boundary","get","property non-void-command collaborator"
"reach_fact","boundary","aux_vars","get collaborator"
"reach_fact","boundary","tag","get wrapper"
"reach_fact","boundary","set_tag","set collaborator"
"reach_fact","boundary","inc_ref","set"
"reach_fact","boundary","dec_ref","set"
"enode_pp","empty","enode_pp","constructor"
"is_non_qffp_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qffp_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qffp_predicate","commander boundary degenerate","operator()","command collaborator"
"bv_sls_tactic","commander boundary","bv_sls_tactic","constructor"
"bv_sls_tactic","commander boundary","translate","property wrapper"
"bv_sls_tactic","commander boundary","~bv_sls_tactic","destructor"
"bv_sls_tactic","commander boundary","name","incidental"
"bv_sls_tactic","commander boundary","updt_params","command collaborator"
"bv_sls_tactic","commander boundary","collect_param_descrs","command collaborator"
"bv_sls_tactic","commander boundary","run","void-accessor command collaborator"
"bv_sls_tactic","commander boundary","operator()","command collaborator"
"bv_sls_tactic","commander boundary","cleanup","wrapper"
"bv_sls_tactic","commander boundary","collect_statistics","controller"
"bv_sls_tactic","commander boundary","reset_statistics","command"
"x_subst","entity boundary","x_subst","constructor"
"x_subst","entity boundary","set_term","set collaborator"
"x_subst","entity boundary","set_coeff","set collaborator"
"x_subst","entity boundary","get_term","get collaborator"
"x_subst","entity boundary","get_coeff","get collaborator"
"x_subst","entity boundary","mk_term","property non-void-command collaborator"
"x_subst","entity boundary","mk_coeff","property collaborator"
"indexed_decl","empty","indexed_decl","constructor"
"indexed_decl","empty","indexed_decl","constructor"
"nlarith_plugin","boundary","nlarith_plugin","constructor"
"nlarith_plugin","boundary","~nlarith_plugin","destructor"
"nlarith_plugin","boundary","simplify","predicate controller"
"nlarith_plugin","boundary","assign","command collaborator"
"nlarith_plugin","boundary","get_num_branches","predicate non-void-command collaborator"
"nlarith_plugin","boundary","subst","command collaborator"
"nlarith_plugin","boundary","get_weight","non-void-command collaborator"
"nlarith_plugin","boundary","solve","collaborator incidental"
"nlarith_plugin","boundary","mk_atom","collaborator incidental"
"nlarith_plugin","boundary","is_uninterpreted","predicate controller"
"nlarith_plugin","boundary","insert_cache","command collaborator"
"nlarith_plugin","boundary","update_bounds","command collaborator"
"array_plugin","entity boundary","array_plugin","constructor"
"array_plugin","entity boundary","assign","wrapper stateless"
"array_plugin","entity boundary","get_num_branches","collaborator incidental"
"array_plugin","entity boundary","subst","wrapper stateless"
"array_plugin","entity boundary","solve","predicate non-void-command collaborator"
"array_plugin","entity boundary","is_uninterpreted","collaborator incidental"
"array_plugin","entity boundary","solve_eq","predicate non-void-command collaborator"
"array_plugin","entity boundary","solve_eq_zero","predicate non-void-command collaborator"
"array_plugin","entity boundary","solve_eq","predicate non-void-command collaborator"
"array_plugin","entity boundary","solve_select2","collaborator incidental"
"array_plugin","entity boundary","solve_select","predicate non-void-command collaborator"
"array_plugin","entity boundary","is_array_app_of","predicate non-void-command collaborator"
"array_plugin","entity boundary","solve_store","predicate non-void-command collaborator"
"array_plugin","entity boundary","is_array_app_of","predicate non-void-command collaborator"
"array_plugin","entity boundary","is_store_update","predicate non-void-command collaborator"
"array_plugin","entity boundary","is_select","predicate non-void-command collaborator"
"bv2real_elim_rewriter_star","empty","bv2real_elim_rewriter_star","constructor"
"is_non_qfbv_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qfbv_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qfbv_predicate","commander boundary degenerate","operator()","command collaborator"
"psort_inst_cache","boundary","psort_inst_cache","constructor"
"psort_inst_cache","boundary","~psort_inst_cache","destructor"
"psort_inst_cache","boundary","finalize","command collaborator"
"psort_inst_cache","boundary","insert","void-accessor set collaborator"
"psort_inst_cache","boundary","find","get property controller"
"psort_inst_cache","boundary","empty","predicate"
"lift_foreign_vars","entity boundary","lift_foreign_vars","constructor"
"lift_foreign_vars","entity boundary","lift","get set collaborator"
"lift_foreign_vars","entity boundary","operator()","command collaborator"
"lift_foreign_vars","entity boundary","operator()","command collaborator"
"lift_foreign_vars","entity boundary","operator()","command collaborator"
"lift_foreign_vars","entity boundary","reduce_eq","predicate non-void-command collaborator"
"lift_foreign_vars","entity boundary","contains_foreign","predicate non-void-command collaborator"
"datatype_plugin","boundary","datatype_plugin","constructor"
"datatype_plugin","boundary","~datatype_plugin","destructor"
"datatype_plugin","boundary","get_num_branches","predicate non-void-command collaborator"
"datatype_plugin","boundary","assign","command collaborator"
"datatype_plugin","boundary","subst","command collaborator"
"datatype_plugin","boundary","get_weight","collaborator incidental"
"datatype_plugin","boundary","solve","collaborator incidental"
"datatype_plugin","boundary","simplify","predicate controller"
"datatype_plugin","boundary","mk_atom","collaborator incidental"
"datatype_plugin","boundary","get_cost","wrapper stateless"
"datatype_plugin","boundary","add_def","collaborator incidental"
"datatype_plugin","boundary","subst_constructor","command collaborator"
"datatype_plugin","boundary","get_recognizers","command collaborator"
"datatype_plugin","boundary","has_recognizer","predicate non-void-command collaborator"
"datatype_plugin","boundary","get_num_branches_rec","predicate non-void-command collaborator"
"datatype_plugin","boundary","assign_rec","command collaborator"
"datatype_plugin","boundary","subst_rec","void-accessor command collaborator"
"datatype_plugin","boundary","get_num_branches_nonrec","predicate non-void-command collaborator"
"datatype_plugin","boundary","assign_nonrec","command collaborator"
"datatype_plugin","boundary","subst_nonrec","command collaborator"
"datatype_plugin","boundary","has_selector","predicate controller"
"datatype_plugin","boundary","get_eqs","property non-void-command collaborator"
"datatype_plugin","boundary","update_eqs","predicate non-void-command collaborator"
"datatype_plugin","boundary","update_eqs","controller stateless"
"collect_relevant_labels","commander boundary small-class","collect_relevant_labels","constructor"
"collect_relevant_labels","commander boundary small-class","collect_relevant_labels::operator()","command collaborator"
"eq_atoms","boundary","eq_atoms","constructor"
"eq_atoms","boundary","num_eqs","unclassified"
"eq_atoms","boundary","eq","get collaborator"
"eq_atoms","boundary","eq_atom","get collaborator"
"eq_atoms","boundary","num_neqs","unclassified"
"eq_atoms","boundary","neq_atom","get collaborator"
"eq_atoms","boundary","neq","get collaborator"
"eq_atoms","boundary","add_eq","command collaborator"
"eq_atoms","boundary","add_neq","command collaborator"
"dl_plugin","entity boundary","dl_plugin","constructor"
"dl_plugin","entity boundary","~dl_plugin","destructor"
"dl_plugin","entity boundary","get_num_branches","predicate non-void-command collaborator"
"dl_plugin","entity boundary","assign","command collaborator"
"dl_plugin","entity boundary","subst","void-accessor command collaborator"
"dl_plugin","entity boundary","solve","collaborator incidental"
"dl_plugin","entity boundary","is_small_domain","predicate non-void-command"
"dl_plugin","entity boundary","assign_small_domain","command collaborator"
"dl_plugin","entity boundary","assign_large_domain","command collaborator"
"dl_plugin","entity boundary","subst_small_domain","command collaborator"
"dl_plugin","entity boundary","subst_large_domain","command collaborator"
"dl_plugin","entity boundary","get_eqs","property non-void-command collaborator"
"dl_plugin","entity boundary","update_eqs","predicate non-void-command collaborator"
"dl_plugin","entity boundary","update_eqs","predicate non-void-command"
"quasi_pb_probe","pure-controller degenerate small-class","operator()","controller stateless"
"goal2sat","boundary","goal2sat::has_unsupported_bool","wrapper stateless"
"goal2sat","boundary","goal2sat::goal2sat","constructor"
"goal2sat","boundary","goal2sat::~goal2sat","destructor"
"goal2sat","boundary","goal2sat::ensure_euf","property non-void-command collaborator"
"goal2sat","boundary","goal2sat::collect_param_descrs","controller stateless"
"goal2sat","boundary","goal2sat::init","set"
"goal2sat","boundary","goal2sat::operator()","command"
"goal2sat","boundary","goal2sat::operator()","wrapper"
"goal2sat","boundary","goal2sat::assumptions","command collaborator"
"goal2sat","boundary","goal2sat::internalize","property non-void-command collaborator"
"goal2sat","boundary","goal2sat::get_interpreted_funs","command collaborator"
"goal2sat","boundary","goal2sat::has_interpreted_funs","predicate"
"goal2sat","boundary","goal2sat::has_euf","predicate"
"goal2sat","boundary","goal2sat::update_model","command collaborator"
"goal2sat","boundary","goal2sat::user_push","set"
"goal2sat","boundary","goal2sat::user_pop","set"
"goal2sat","boundary","goal2sat::si","get set collaborator"
"mbi_plugin","entity commander boundary","mbi_plugin","constructor"
"mbi_plugin","entity commander boundary","set_shared","command collaborator"
"mbi_plugin","entity commander boundary","set_rep","set collaborator"
"mbi_plugin","entity commander boundary","mbi_plugin::set_shared","command collaborator"
"mbi_plugin","entity commander boundary","mbi_plugin::check","wrapper stateless"
"mbi_plugin","entity commander boundary","mbi_plugin::is_shared","predicate non-void-command collaborator"
"mbi_plugin","entity commander boundary","mbi_plugin::is_shared","predicate non-void-command collaborator"
"mbi_plugin","entity commander boundary","mbi_plugin::validate_interpolant","command collaborator"
"prop_mbi_plugin","entity boundary small-class","prop_mbi_plugin::prop_mbi_plugin","constructor"
"prop_mbi_plugin","entity boundary small-class","prop_mbi_plugin::operator()","property non-void-command collaborator"
"prop_mbi_plugin","entity boundary small-class","prop_mbi_plugin::block","command collaborator"
"ast_vector_tpl","boundary","init","set collaborator"
"ast_vector_tpl","boundary","ast_vector_tpl","constructor"
"ast_vector_tpl","boundary","ast_vector_tpl","constructor"
"ast_vector_tpl","boundary","ast_vector_tpl","copy-constructor"
"ast_vector_tpl","boundary","ast_vector_tpl","copy-constructor"
"ast_vector_tpl","boundary","~ast_vector_tpl","destructor"
"ast_vector_tpl","boundary","operatorZ3_ast_vector","get"
"ast_vector_tpl","boundary","size","unclassified"
"ast_vector_tpl","boundary","operator[]","property collaborator"
"ast_vector_tpl","boundary","push_back","command collaborator"
"ast_vector_tpl","boundary","resize","command"
"ast_vector_tpl","boundary","back","property collaborator"
"ast_vector_tpl","boundary","pop_back","command"
"ast_vector_tpl","boundary","empty","predicate"
"ast_vector_tpl","boundary","operator=","get set"
"ast_vector_tpl","boundary","set","get non-void-command collaborator"
"ast_vector_tpl","boundary","begin","property wrapper"
"ast_vector_tpl","boundary","end","property collaborator"
"ast_vector_tpl","boundary","operator<<","controller stateless"
"ast_vector_tpl","boundary","to_string","property"
"uflia_mbi","commander boundary","uflia_mbi::uflia_mbi","constructor"
"uflia_mbi","commander boundary","uflia_mbi::collect_atoms","wrapper"
"uflia_mbi","commander boundary","uflia_mbi::get_literals","predicate non-void-command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::get_arith_vars","property non-void-command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::fix_non_shared","void-accessor command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::arith_project","property non-void-command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::operator()","property non-void-command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::project","command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::split_arith","command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::add_dcert","command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::add_arith_dcert","command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::add_arith_dcert","command collaborator"
"uflia_mbi","commander boundary","uflia_mbi::project_euf","controller"
"uflia_mbi","commander boundary","uflia_mbi::order_avars","controller stateless"
"uflia_mbi","commander boundary","uflia_mbi::block","command collaborator"
"interpolator","unclassified","interpolator","constructor"
"interpolator","unclassified","interpolator::pingpong","property non-void-command collaborator"
"interpolator","unclassified","interpolator::pogo","property controller"
"interpolator","unclassified","interpolator::pogo","property non-void-command collaborator"
"app_const_arr_rewriter","entity boundary small-class","app_const_arr_rewriter","constructor"
"app_const_arr_rewriter","entity boundary small-class","reduce_app","property non-void-command collaborator"
"scoped_ctx_push","empty","scoped_ctx_push","constructor"
"scoped_ctx_push","empty","~scoped_ctx_push","destructor"
"context::sort_domain","data-provider boundary data-class small-class","get_kind","get collaborator"
"mbproj::impl","unclassified","add_plugin","command collaborator"
"mbproj::impl","unclassified","get_plugin","property non-void-command collaborator"
"mbproj::impl","unclassified","solve","predicate non-void-command collaborator"
"mbproj::impl","unclassified","reduce_eq","predicate controller"
"mbproj::impl","unclassified","filter_variables","controller stateless"
"mbproj::impl","unclassified","project_bools","void-accessor command collaborator"
"mbproj::impl","unclassified","subst_vars","controller"
"mbproj::impl","unclassified","project_var","predicate controller"
"mbproj::impl","unclassified","project_vars","void-accessor command collaborator"
"mbproj::impl","unclassified","maximize","property controller"
"mbproj::impl","unclassified","extract_literals","controller"
"mbproj::impl","unclassified","~impl","destructor"
"mbproj::impl","unclassified","updt_params","command collaborator"
"mbproj::impl","unclassified","preprocess_solve","command collaborator"
"mbproj::impl","unclassified","validate_model","controller stateless"
"mbproj::impl","unclassified","has_unsupported_th","predicate controller"
"mbproj::impl","unclassified","operator()","command collaborator"
"mbproj::impl","unclassified","mbp","void-accessor command collaborator"
"mbproj::impl","unclassified","do_qe_lite","command collaborator"
"mbproj::impl","unclassified","do_qel","command collaborator"
"mbproj::impl","unclassified","do_qe_bool","void-accessor command collaborator"
"mbproj::impl","unclassified","qel_project","wrapper"
"mbproj::impl","unclassified","spacer_qel","void-accessor command collaborator"
"mbproj::impl","unclassified","spacer","command collaborator"
"mbproj::impl","unclassified","spacer_qe_lite","void-accessor command collaborator"
"insert_ref2_map","commander small-class","insert_ref2_map","constructor"
"insert_ref2_map","commander small-class","undo","command"
"mbproj","unclassified","mbproj::mbproj","constructor"
"mbproj","unclassified","mbproj::~mbproj","destructor"
"mbproj","unclassified","mbproj::updt_params","command collaborator"
"mbproj","unclassified","mbproj::get_param_descrs","controller stateless"
"mbproj","unclassified","mbproj::operator()","controller stateless"
"mbproj","unclassified","mbproj::spacer","command collaborator"
"mbproj","unclassified","mbproj::solve","command collaborator"
"mbproj","unclassified","mbproj::maximize","property non-void-command collaborator"
"eufi_cmd","commander boundary","eufi_cmd","constructor"
"eufi_cmd","commander boundary","get_usage","incidental"
"eufi_cmd","commander boundary","get_descr","collaborator incidental"
"eufi_cmd","commander boundary","get_arity","incidental"
"eufi_cmd","commander boundary","next_arg_kind","property collaborator"
"eufi_cmd","commander boundary","set_next_arg","command collaborator"
"eufi_cmd","commander boundary","set_next_arg","command collaborator"
"eufi_cmd","commander boundary","prepare","command collaborator"
"eufi_cmd","commander boundary","execute","controller"
"aig_finder","entity commander boundary","set","set collaborator"
"aig_finder","entity commander boundary","set","set collaborator"
"aig_finder","entity commander boundary","aig_finder::aig_finder","constructor"
"aig_finder","entity commander boundary","aig_finder::operator()","command collaborator"
"aig_finder","entity commander boundary","aig_finder::implies","predicate non-void-command collaborator"
"aig_finder","entity commander boundary","aig_finder::find_aigs","void-accessor command collaborator"
"aig_finder","entity commander boundary","aig_finder::find_aig","predicate non-void-command collaborator"
"aig_finder","entity commander boundary","aig_finder::find_ifs","command collaborator"
"aig_finder","entity commander boundary","aig_finder::validate_clause","command collaborator"
"aig_finder","entity commander boundary","aig_finder::validate_clause","command collaborator"
"aig_finder","entity commander boundary","aig_finder::validate_and","command collaborator"
"aig_finder","entity commander boundary","aig_finder::validate_if","command collaborator"
"qsat","boundary","check_sat","property non-void-command collaborator"
"qsat","boundary","get_kernel","get non-void-command collaborator"
"qsat","boundary","is_exists","incidental"
"qsat","boundary","is_forall","predicate"
"qsat","boundary","push","set"
"qsat","boundary","pop","command"
"qsat","boundary","clear","command"
"qsat","boundary","reset","command"
"qsat","boundary","hoist","command collaborator"
"qsat","boundary","check_sort","command collaborator"
"qsat","boundary","filter_vars","command collaborator"
"qsat","boundary","initialize_levels","command"
"qsat","boundary","validate_defs","predicate non-void-command"
"qsat","boundary","get_core","command"
"qsat","boundary","minimize_core","predicate non-void-command collaborator"
"qsat","boundary","check_cancel","command"
"qsat","boundary","display","collaborator"
"qsat","boundary","display","collaborator"
"qsat","boundary","display","collaborator"
"qsat","boundary","add_assumption","command collaborator"
"qsat","boundary","project_qe","predicate non-void-command collaborator"
"qsat","boundary","project","predicate non-void-command collaborator"
"qsat","boundary","get_vars","command"
"qsat","boundary","negate_core","wrapper stateless"
"qsat","boundary","force_elim","predicate"
"qsat","boundary","elim_rec","property non-void-command collaborator"
"qsat","boundary","elim","property non-void-command collaborator"
"qsat","boundary","validate_assumptions","controller stateless"
"qsat","boundary","validate_core","collaborator incidental"
"qsat","boundary","check_fmls","predicate non-void-command collaborator"
"qsat","boundary","validate_model","collaborator incidental"
"qsat","boundary","validate_model","predicate non-void-command collaborator"
"qsat","boundary","validate_project","collaborator incidental"
"qsat","boundary","~qsat","destructor"
"qsat","boundary","name","incidental"
"qsat","boundary","updt_params","empty"
"qsat","boundary","collect_param_descrs","empty"
"qsat","boundary","operator()","command collaborator"
"qsat","boundary","collect_statistics","collaborator"
"qsat","boundary","reset_statistics","command"
"qsat","boundary","cleanup","command"
"qsat","boundary","set_logic","empty"
"qsat","boundary","set_progress_callback","empty"
"qsat","boundary","translate","property wrapper"
"qsat","boundary","maximize","property non-void-command collaborator"
"qsat","boundary","maximize_core","command collaborator"
"qsat","boundary","maximize_model","command collaborator"
"qmax","entity boundary small-class","qmax::qmax","constructor"
"qmax","entity boundary small-class","qmax::~qmax","destructor"
"qmax","entity boundary small-class","qmax::operator()","property non-void-command collaborator"
"qmax","entity boundary small-class","qmax::collect_statistics","collaborator"
"check_return_helper","empty","check_return_helper","constructor"
"check_return_helper","empty","~check_return_helper","destructor"
"drat_pp","empty","drat_pp","constructor"
"unit_dependency_converter","unclassified","unit_dependency_converter","constructor"
"unit_dependency_converter","unclassified","operator()","get collaborator"
"unit_dependency_converter","unclassified","translate","property controller"
"unit_dependency_converter","unclassified","display","command collaborator"
"drat_parser","unclassified","drat_parser","constructor"
"drat_parser","unclassified","begin","property wrapper"
"drat_parser","unclassified","end","property wrapper"
"drat_parser","unclassified","set_read_theory","set collaborator"
"drat_parser","unclassified","drat_parser::parse_identifier","property non-void-command"
"drat_parser","unclassified","drat_parser::parse_quoted_symbol","property non-void-command collaborator"
"drat_parser","unclassified","drat_parser::parse_sexpr","property non-void-command"
"drat_parser","unclassified","drat_parser::read_theory_id","property non-void-command"
"drat_parser","unclassified","drat_parser::next","predicate non-void-command"
"theory_arith_params","commander boundary small-class","theory_arith_params","constructor"
"theory_arith_params","commander boundary small-class","theory_arith_params::updt_params","command collaborator"
"theory_arith_params","commander boundary small-class","theory_arith_params::display","wrapper"
"binary","empty","binary","constructor"
"binary","empty","binary","constructor"
"binary","empty","npn3_finder::binary::binary","constructor"
"binary","empty","npn3_finder::binary::binary","constructor"
"ternary","empty","ternary","constructor"
"ternary","empty","ternary","constructor"
"ternary","empty","npn3_finder::ternary::ternary","constructor"
"ternary","empty","npn3_finder::ternary::ternary","constructor"
"theory_axiom_reducer","small-class","theory_axiom_reducer","constructor"
"theory_axiom_reducer","small-class","theory_axiom_reducer::reset","command"
"theory_axiom_reducer","small-class","theory_axiom_reducer::reduce","property non-void-command collaborator"
"anf_simplifier::report","empty","~report","destructor"
"asymm_branch::compare_left","data-provider boundary small-class","operator()","predicate collaborator"
"asymm_branch","boundary","init_search","set"
"asymm_branch","boundary","dec","set"
"asymm_branch","boundary","asymm_branch::asymm_branch","constructor"
"asymm_branch","boundary","asymm_branch::process_bin","set collaborator"
"asymm_branch","boundary","asymm_branch::process","predicate non-void-command"
"asymm_branch","boundary","asymm_branch::process","predicate non-void-command"
"asymm_branch","boundary","asymm_branch::process","command collaborator"
"asymm_branch","boundary","asymm_branch::operator()","command collaborator"
"asymm_branch","boundary","asymm_branch::process_all","predicate non-void-command collaborator"
"asymm_branch","boundary","asymm_branch::is_touched","predicate collaborator"
"asymm_branch","boundary","asymm_branch::sort","command collaborator"
"asymm_branch","boundary","asymm_branch::sort","void-accessor command collaborator"
"asymm_branch","boundary","asymm_branch::uhte","predicate non-void-command collaborator"
"asymm_branch","boundary","asymm_branch::uhle","command collaborator"
"asymm_branch","boundary","asymm_branch::uhle","predicate non-void-command collaborator"
"asymm_branch","boundary","asymm_branch::propagate_literal","predicate non-void-command collaborator"
"asymm_branch","boundary","asymm_branch::flip_literal_at","predicate non-void-command"
"asymm_branch","boundary","asymm_branch::cleanup","predicate non-void-command collaborator"
"asymm_branch","boundary","asymm_branch::re_attach","predicate non-void-command"
"asymm_branch","boundary","asymm_branch::process_sampled","predicate non-void-command collaborator"
"asymm_branch","boundary","asymm_branch::process","predicate non-void-command collaborator"
"asymm_branch","boundary","asymm_branch::updt_params","command collaborator"
"asymm_branch","boundary","asymm_branch::collect_param_descrs","command collaborator"
"asymm_branch","boundary","asymm_branch::collect_statistics","controller"
"asymm_branch","boundary","asymm_branch::reset_statistics","command"
"simplifier::blocked_cls_report","boundary degenerate small-class","~blocked_cls_report","destructor"
"simplifier::blocked_cls_report","boundary degenerate small-class","report","wrapper stateless"
"bcd","commander boundary","reset_removed","command"
"bcd","commander boundary","set_removed","command collaborator"
"bcd","commander boundary","is_removed","predicate collaborator"
"bcd","commander boundary","bcd::bcd","constructor"
"bcd","commander boundary","bcd::~bcd","destructor"
"bcd","commander boundary","bcd::operator()","command collaborator"
"bcd","commander boundary","bcd::operator()","command collaborator"
"bcd","commander boundary","bcd::init","command collaborator"
"bcd","commander boundary","bcd::register_clause","command collaborator"
"bcd","commander boundary","bcd::unregister_clause","command collaborator"
"bcd","commander boundary","bcd::pure_decompose","command collaborator"
"bcd","commander boundary","bcd::pure_decompose","command collaborator"
"bcd","commander boundary","bcd::pure_decompose","command collaborator"
"bcd","commander boundary","bcd::post_decompose","command collaborator"
"bcd","commander boundary","bcd::bce","predicate non-void-command collaborator"
"bcd","commander boundary","bcd::find_blocked","property set collaborator"
"bcd","commander boundary","bcd::is_blocked","predicate collaborator"
"bcd","commander boundary","bcd::init_rbits","command"
"bcd","commander boundary","bcd::eval_clause","property controller"
"bcd","commander boundary","bcd::sat_sweep","command"
"bcd","commander boundary","bcd::verify_sweep","command collaborator"
"bcd","commander boundary","bcd::extract_partition","command collaborator"
"bcd","commander boundary","bcd::cleanup","command"
"bin_clause","data-provider","bin_clause","constructor"
"bin_clause","data-provider","get_literal1","property wrapper"
"bin_clause","data-provider","get_literal2","property wrapper"
"bin_clause","data-provider","is_learned","predicate"
"bin_clause","data-provider","operator==","predicate"
"tmp_clause","commander boundary","tmp_clause","constructor"
"tmp_clause","commander boundary","~tmp_clause","destructor"
"tmp_clause","commander boundary","get","get collaborator"
"tmp_clause","commander boundary","set","command collaborator"
"tmp_clause","commander boundary","set","command collaborator"
"tmp_clause","commander boundary","tmp_clause::set","command"
"th_model_builder","degenerate","add_value","empty"
"th_model_builder","degenerate","add_dep","controller stateless"
"th_model_builder","degenerate","include_func_interp","collaborator incidental"
"th_model_builder","degenerate","init_model","empty"
"th_model_builder","degenerate","finalize_model","empty"
"th_model_builder","degenerate","has_unhandled","incidental"
"clause_allocator","entity boundary","get_allocation_size","property"
"clause_allocator","entity boundary","clause_allocator::clause_allocator","constructor"
"clause_allocator","entity boundary","clause_allocator::finalize","command"
"clause_allocator","entity boundary","clause_allocator::get_clause","wrapper stateless"
"clause_allocator","entity boundary","clause_allocator::get_offset","wrapper stateless"
"clause_allocator","entity boundary","clause_allocator::mk_clause","non-void-command factory collaborator"
"clause_allocator","entity boundary","clause_allocator::copy_clause","non-void-command factory collaborator"
"clause_allocator","entity boundary","clause_allocator::del_clause","command collaborator"
"clause_wrapper","data-provider boundary","clause_wrapper","constructor"
"clause_wrapper","data-provider boundary","clause_wrapper","constructor"
"clause_wrapper","data-provider boundary","is_binary","predicate controller"
"clause_wrapper","data-provider boundary","is_ternary","predicate"
"clause_wrapper","data-provider boundary","size","unclassified"
"clause_wrapper","data-provider boundary","operator[]","property collaborator"
"clause_wrapper","data-provider boundary","get_clause","get collaborator"
"clause_wrapper","data-provider boundary","was_removed","predicate"
"clause_wrapper","data-provider boundary","is_learned","predicate"
"clause_wrapper","data-provider boundary","begin","property wrapper"
"clause_wrapper","data-provider boundary","end","property collaborator"
"clause_wrapper","data-provider boundary","clause_wrapper::contains","predicate collaborator"
"clause_wrapper","data-provider boundary","clause_wrapper::contains","predicate collaborator"
"rule_properties","commander boundary","set_generate_proof","set"
"rule_properties","commander boundary","is_monotone","get"
"rule_properties","commander boundary","rule_properties::rule_properties","constructor"
"rule_properties","commander boundary","rule_properties::~rule_properties","destructor"
"rule_properties","commander boundary","rule_properties::collect","command collaborator"
"rule_properties","commander boundary","rule_properties::visit_rules","command collaborator"
"rule_properties","commander boundary","rule_properties::check_quantifier_free","command collaborator"
"rule_properties","commander boundary","rule_properties::check_quantifier_free","controller"
"rule_properties","commander boundary","rule_properties::check_for_negated_predicates","command collaborator"
"rule_properties","commander boundary","rule_properties::check_uninterpreted_free","command collaborator"
"rule_properties","commander boundary","rule_properties::check_infinite_sorts","command collaborator"
"rule_properties","commander boundary","rule_properties::check_nested_free","command collaborator"
"rule_properties","commander boundary","rule_properties::check_background_free","command"
"rule_properties","commander boundary","rule_properties::check_existential_tail","command collaborator"
"rule_properties","commander boundary","rule_properties::insert","controller stateless"
"rule_properties","commander boundary","rule_properties::operator()","command collaborator"
"rule_properties","commander boundary","rule_properties::operator()","command collaborator"
"rule_properties","commander boundary","rule_properties::check_accessor","predicate non-void-command collaborator"
"rule_properties","commander boundary","rule_properties::operator()","command collaborator"
"rule_properties","commander boundary","rule_properties::evaluates_to_numeral","predicate non-void-command collaborator"
"rule_properties","commander boundary","rule_properties::check_sort","command collaborator"
"rule_properties","commander boundary","rule_properties::reset","command"
"clause_set","boundary","contains","get predicate controller"
"clause_set","boundary","empty","predicate"
"clause_set","boundary","size","unclassified"
"clause_set","boundary","reset","command"
"clause_set","boundary","finalize","command"
"clause_set","boundary","begin","property collaborator"
"clause_set","boundary","end","property collaborator"
"clause_set","boundary","clause_set::insert","command collaborator"
"clause_set","boundary","clause_set::erase","command collaborator"
"clause_set","boundary","clause_set::erase","property non-void-command collaborator"
"clause_set","boundary","clause_set::check_invariant","incidental"
"user_propagator","unclassified","getModelCount","property"
"user_propagator","unclassified","fixed","set collaborator"
"user_propagator","unclassified","user_propagator","constructor"
"user_propagator","unclassified","user_propagator","constructor"
"user_propagator","unclassified","push","command"
"user_propagator","unclassified","pop","command"
"user_propagator","unclassified","fresh","get collaborator"
"constraint_base","data-provider small-class","constraint_base","constructor"
"constraint_base","data-provider small-class","mem","get collaborator"
"constraint_base","data-provider small-class","to_index","property"
"bv2real_elim_rewriter_cfg","entity boundary degenerate","rewrite_patterns","incidental"
"bv2real_elim_rewriter_cfg","entity boundary degenerate","flat_assoc","collaborator incidental"
"bv2real_elim_rewriter_cfg","entity boundary degenerate","reduce_app","property non-void-command collaborator"
"bv2real_elim_rewriter_cfg","entity boundary degenerate","bv2real_elim_rewriter_cfg","constructor"
"cleaner::report","empty","~report","destructor"
"cut_simplifier::validator","commander boundary small-class","validate","command collaborator"
"cut_simplifier::validator","commander boundary small-class","validate","command collaborator"
"solver::bit_occs_trail","commander data-class small-class","undo","set"
"cut_val","empty","cut_val","constructor"
"cut_val","empty","cut_val","constructor"
"cut","data-provider","table_mask","property"
"cut","data-provider","cut","constructor"
"cut","data-provider","cut","constructor"
"cut","data-provider","size","get"
"cut","data-provider","filter","get"
"cut","data-provider","begin","get"
"cut","data-provider","end","unclassified"
"cut","data-provider","add","predicate non-void-command"
"cut","data-provider","negate","command"
"cut","data-provider","set_table","set"
"cut","data-provider","table","property"
"cut","data-provider","ntable","property"
"cut","data-provider","dont_care","get"
"cut","data-provider","add_dont_care","set"
"cut","data-provider","is_true","predicate"
"cut","data-provider","is_false","predicate"
"cut","data-provider","operator!=","predicate"
"cut","data-provider","operator[]","unclassified"
"cut","data-provider","merge","wrapper stateless"
"cut","data-provider","subset_of","predicate"
"cut","data-provider","cut::shift_table","property"
"cut","data-provider","cut::operator==","predicate"
"cut","data-provider","cut::hash","controller"
"cut","data-provider","cut::dom_hash","wrapper"
"cut","data-provider","cut::dom_eq","predicate"
"cut","data-provider","cut::effect_mask","wrapper stateless"
"cut","data-provider","cut::remove_elem","command"
"cut","data-provider","cut::eval","property collaborator"
"cut","data-provider","cut::display","property collaborator"
"cut","data-provider","cut::display_table","collaborator incidental"
"cut","data-provider","cut::table2string","property non-void-command collaborator"
"local_search_plugin","empty","~local_search_plugin","destructor"
"clause_eh","empty","~clause_eh","destructor"
"obj_map","entity boundary","reset","command"
"obj_map","entity boundary","finalize","command"
"obj_map","entity boundary","empty","predicate"
"obj_map","entity boundary","size","unclassified"
"obj_map","entity boundary","capacity","unclassified"
"obj_map","entity boundary","begin","property collaborator"
"obj_map","entity boundary","end","property collaborator"
"obj_map","entity boundary","insert","command collaborator"
"obj_map","entity boundary","insert","command collaborator"
"obj_map","entity boundary","insert_if_not_there","property non-void-command collaborator"
"obj_map","entity boundary","insert_if_not_there3","property non-void-command collaborator"
"obj_map","entity boundary","find_core","property collaborator"
"obj_map","entity boundary","find","predicate collaborator"
"obj_map","entity boundary","find","property collaborator"
"obj_map","entity boundary","find","property non-void-command collaborator"
"obj_map","entity boundary","operator[]","property collaborator"
"obj_map","entity boundary","operator[]","property non-void-command collaborator"
"obj_map","entity boundary","find_iterator","property collaborator"
"obj_map","entity boundary","contains","predicate collaborator"
"obj_map","entity boundary","remove","command collaborator"
"obj_map","entity boundary","erase","command collaborator"
"obj_map","entity boundary","get_num_collision","property"
"obj_map","entity boundary","get_collisions","command collaborator"
"obj_map","entity boundary","swap","command"
"elim_vars","boundary","num_vars","unclassified"
"elim_vars","boundary","hit2","get"
"elim_vars","boundary","hit1","get"
"elim_vars","boundary","miss","get"
"elim_vars","boundary","elim_vars::elim_vars","constructor"
"elim_vars","boundary","elim_vars::operator()","predicate non-void-command collaborator"
"elim_vars","boundary","elim_vars::elim_var","predicate non-void-command collaborator"
"elim_vars","boundary","elim_vars::elim_var","property non-void-command collaborator"
"elim_vars","boundary","elim_vars::add_clauses","command collaborator"
"elim_vars","boundary","elim_vars::get_clauses","command collaborator"
"elim_vars","boundary","elim_vars::reset_mark","command"
"elim_vars","boundary","elim_vars::sort_marked","command"
"elim_vars","boundary","elim_vars::shuffle_vars","command"
"elim_vars","boundary","elim_vars::mark_var","command collaborator"
"elim_vars","boundary","elim_vars::mark_literals","predicate non-void-command collaborator"
"elim_vars","boundary","elim_vars::mark_literals","predicate non-void-command collaborator"
"elim_vars","boundary","elim_vars::make_clauses","property non-void-command collaborator"
"elim_vars","boundary","elim_vars::make_clauses","property non-void-command collaborator"
"elim_vars","boundary","elim_vars::mk_literal","property non-void-command collaborator"
"ext_use_list","unclassified","init","command"
"ext_use_list","unclassified","insert","command collaborator"
"ext_use_list","unclassified","get","get controller"
"ext_use_list","unclassified","get","get controller"
"ext_use_list","unclassified","finalize","command"
"ext_use_list","unclassified","contains","predicate collaborator"
"glue_lt","pure-controller degenerate small-class","operator()","controller stateless"
"integrity_checker","data-provider boundary","integrity_checker::integrity_checker","constructor"
"integrity_checker","data-provider boundary","integrity_checker::contains_watched","predicate collaborator"
"integrity_checker","data-provider boundary","integrity_checker::check_clause","predicate collaborator"
"integrity_checker","data-provider boundary","integrity_checker::check_clauses","predicate collaborator"
"integrity_checker","data-provider boundary","integrity_checker::check_clauses","predicate"
"integrity_checker","data-provider boundary","integrity_checker::check_learned_clauses","predicate collaborator"
"integrity_checker","data-provider boundary","integrity_checker::check_assignment","incidental"
"integrity_checker","data-provider boundary","integrity_checker::check_bool_vars","predicate collaborator"
"integrity_checker","data-provider boundary","integrity_checker::check_watches","predicate collaborator"
"integrity_checker","data-provider boundary","integrity_checker::check_watches","predicate collaborator"
"integrity_checker","data-provider boundary","integrity_checker::check_watches","predicate collaborator"
"integrity_checker","data-provider boundary","integrity_checker::check_reinit_stack","predicate controller"
"integrity_checker","data-provider boundary","integrity_checker::check_disjoint_clauses","predicate controller"
"integrity_checker","data-provider boundary","integrity_checker::operator()","predicate"
"check_relation_plugin::negation_filter_fn","pure-controller small-class","operator()","controller"
"bv2real_rewriter_cfg","entity boundary degenerate","rewrite_patterns","incidental"
"bv2real_rewriter_cfg","entity boundary degenerate","flat_assoc","collaborator incidental"
"bv2real_rewriter_cfg","entity boundary degenerate","reduce_app","property non-void-command collaborator"
"bv2real_rewriter_cfg","entity boundary degenerate","bv2real_rewriter_cfg","constructor"
"local_search_config","unclassified","set_config","command collaborator"
"local_search_config","unclassified","random_seed","get"
"local_search_config","unclassified","best_known_value","get"
"local_search_config","unclassified","mode","get collaborator"
"local_search_config","unclassified","phase_sticky","get"
"local_search_config","unclassified","dbg_flips","get"
"local_search_config","unclassified","itau","get"
"local_search_config","unclassified","set_random_seed","set"
"local_search_config","unclassified","set_best_known_value","set"
"lut_finder","boundary","get_combination","predicate"
"lut_finder","boundary","set","set collaborator"
"lut_finder","boundary","max_lut_size","get"
"lut_finder","boundary","lut_finder::operator()","command collaborator"
"lut_finder","boundary","lut_finder::check_lut","command collaborator"
"lut_finder","boundary","lut_finder::add_lut","command"
"lut_finder","boundary","lut_finder::extract_lut","predicate non-void-command collaborator"
"lut_finder","boundary","lut_finder::extract_lut","predicate non-void-command collaborator"
"lut_finder","boundary","lut_finder::set_combination","command"
"lut_finder","boundary","lut_finder::update_combinations","predicate non-void-command"
"lut_finder","boundary","lut_finder::lut_is_defined","predicate non-void-command"
"lut_finder","boundary","lut_finder::lut_is_defined","predicate"
"lut_finder","boundary","lut_finder::convert_combination","property non-void-command collaborator"
"lut_finder","boundary","lut_finder::init_clause_filter","command"
"lut_finder","boundary","lut_finder::init_clause_filter","command collaborator"
"lut_finder","boundary","lut_finder::get_clause_filter","controller stateless"
"lut_finder","boundary","lut_finder::display_mask","collaborator incidental"
"default_expr_replacer","boundary","default_expr_replacer","constructor"
"default_expr_replacer","boundary","m","property collaborator"
"default_expr_replacer","boundary","set_substitution","command collaborator"
"default_expr_replacer","boundary","operator()","void-accessor set collaborator"
"default_expr_replacer","boundary","get_num_steps","unclassified"
"default_expr_replacer","boundary","reset","command"
"prob","commander boundary","is_true","get controller"
"prob","commander boundary","get_clause","get collaborator"
"prob","commander boundary","is_true","get"
"prob","commander boundary","inc_break","set collaborator"
"prob","commander boundary","dec_break","set collaborator"
"prob","commander boundary","set_seed","command"
"prob","commander boundary","rlimit","get collaborator"
"prob","commander boundary","get_model","get collaborator"
"prob","commander boundary","get_priority","collaborator incidental"
"prob","commander boundary","updt_params","empty"
"prob","commander boundary","num_non_binary_clauses","incidental"
"prob","commander boundary","collect_statistics","empty"
"prob","commander boundary","reinit","wrapper stateless"
"prob","commander boundary","prob::~prob","destructor"
"prob","commander boundary","prob::check","property non-void-command collaborator"
"prob","commander boundary","prob::flip","command collaborator"
"prob","commander boundary","prob::pick_var","property non-void-command collaborator"
"prob","commander boundary","prob::flip","command collaborator"
"prob","commander boundary","prob::add","command collaborator"
"prob","commander boundary","prob::add","command collaborator"
"prob","commander boundary","prob::save_best_values","command"
"prob","commander boundary","prob::flatten_use_list","command collaborator"
"prob","commander boundary","prob::init_clauses","command collaborator"
"prob","commander boundary","prob::auto_config","command"
"prob","commander boundary","prob::log","command"
"prob","commander boundary","prob::init","command"
"prob","commander boundary","prob::init_random_values","set"
"prob","commander boundary","prob::init_best_values","set"
"prob","commander boundary","prob::init_near_best_values","set"
"prob","commander boundary","prob::do_restart","command"
"prob","commander boundary","prob::should_restart","predicate"
"prob","commander boundary","prob::reinit_values","command"
"prob","commander boundary","prob::display","property collaborator"
"prob","commander boundary","prob::invariant","empty"
"array_project_eqs_util","commander boundary","reset_v","command"
"array_project_eqs_util","commander boundary","reset","command"
"array_project_eqs_util","commander boundary","find_arr_eqs","command collaborator"
"array_project_eqs_util","commander boundary","factor_selects","void-accessor command collaborator"
"array_project_eqs_util","commander boundary","convert_peq_to_eq","command collaborator"
"array_project_eqs_util","commander boundary","mk_peq","controller"
"array_project_eqs_util","commander boundary","find_subst_term","command collaborator"
"array_project_eqs_util","commander boundary","project","predicate non-void-command collaborator"
"array_project_eqs_util","commander boundary","mk_result","void-accessor command collaborator"
"array_project_eqs_util","commander boundary","array_project_eqs_util","constructor"
"array_project_eqs_util","commander boundary","operator()","command collaborator"
"array_project_eqs_util","commander boundary","reset_v","command"
"array_project_eqs_util","commander boundary","reset","command"
"array_project_eqs_util","commander boundary","find_arr_eqs","command collaborator"
"array_project_eqs_util","commander boundary","factor_selects","void-accessor command collaborator"
"array_project_eqs_util","commander boundary","convert_peq_to_eq","void-accessor command collaborator"
"array_project_eqs_util","commander boundary","find_subst_term","command collaborator"
"array_project_eqs_util","commander boundary","get_nesting_depth","non-void-command collaborator"
"array_project_eqs_util","commander boundary","project","predicate non-void-command collaborator"
"array_project_eqs_util","commander boundary","mk_result","void-accessor command collaborator"
"array_project_eqs_util","commander boundary","operator()","void-accessor command collaborator"
"mk_unfold","entity boundary small-class","mk_unfold::mk_unfold","constructor"
"mk_unfold","entity boundary small-class","mk_unfold::expand_tail","command collaborator"
"mk_unfold","entity boundary small-class","mk_unfold::operator()","property non-void-command collaborator"
"probing::report","empty","~report","destructor"
"frame","empty","frame","constructor"
"theory_aware_act_lt","data-provider boundary small-class","theory_aware_act_lt","constructor"
"theory_aware_act_lt","data-provider boundary small-class","operator()","predicate collaborator"
"theory_utvpi","boundary","new_edge","empty"
"theory_utvpi","boundary","is_interpreted","predicate collaborator"
"theory_utvpi","boundary","get_name","incidental"
"theory_utvpi","boundary","init","command"
"theory_utvpi","boundary","mk_eq_atom","property non-void-command collaborator"
"theory_utvpi","boundary","new_eq_eh","set collaborator"
"theory_utvpi","boundary","use_diseqs","incidental"
"theory_utvpi","boundary","new_diseq_eh","command collaborator"
"theory_utvpi","boundary","restart_eh","command"
"theory_utvpi","boundary","relevant_eh","empty"
"theory_utvpi","boundary","init_search_eh","command"
"theory_utvpi","boundary","is_shared","collaborator incidental"
"theory_utvpi","boundary","can_propagate","predicate non-void-command"
"theory_utvpi","boundary","why_is_diseq","wrapper stateless"
"theory_utvpi","boundary","new_eq_eh","set collaborator"
"theory_utvpi","boundary","new_diseq_eh","set collaborator"
"theory_utvpi","boundary","is_int","predicate collaborator"
"theory_utvpi","boundary","get_zero","property non-void-command collaborator"
"theory_utvpi","boundary","get_zero","property non-void-command collaborator"
"theory_utvpi","boundary","to_var","collaborator incidental"
"theory_utvpi","boundary","from_var","collaborator incidental"
"theory_utvpi","boundary","pos","collaborator incidental"
"theory_utvpi","boundary","neg","collaborator incidental"
"theory_utvpi","boundary","theory_utvpi<Ext>::theory_utvpi","constructor"
"theory_utvpi","boundary","theory_utvpi<Ext>::~theory_utvpi","destructor"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_var","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_var","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::reset_eh","command"
"theory_utvpi","boundary","theory_utvpi<Ext>::new_eq_or_diseq","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::inc_conflicts","command"
"theory_utvpi","boundary","theory_utvpi<Ext>::set_conflict","command"
"theory_utvpi","boundary","theory_utvpi<Ext>::found_non_utvpi_expr","set collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::init_zero","command"
"theory_utvpi","boundary","theory_utvpi<Ext>::negate","controller stateless"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_weight","wrapper stateless"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_coeffs","void-accessor command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::internalize_eq_eh","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::internalize_atom","predicate non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::internalize_term","predicate non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::assign_eh","command"
"theory_utvpi","boundary","theory_utvpi<Ext>::push_scope_eh","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::pop_scope_eh","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::final_check_eh","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::has_shared","predicate non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::check_z_consistency","predicate non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::display","collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::collect_statistics","collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::del_atoms","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::propagate","command"
"theory_utvpi","boundary","theory_utvpi<Ext>::propagate_atom","predicate non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_term","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_num","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::expand","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::add_ineq","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::enable_edge","predicate non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::is_consistent","get"
"theory_utvpi","boundary","theory_utvpi<Ext>::is_parity_ok","predicate collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::enforce_parity","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::init_model","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::init_model","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::assume_eqs_core","predicate non-void-command"
"theory_utvpi","boundary","theory_utvpi<Ext>::model_validate","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::eval","predicate non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::eval_num","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_value","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_value","property non-void-command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::compute_delta","command collaborator"
"theory_utvpi","boundary","theory_utvpi<Ext>::mk_fresh","wrapper stateless"
"clause_size_lt","pure-controller degenerate small-class","operator()","controller stateless"
"bin_lt","pure-controller degenerate small-class","operator()","controller stateless"
"theory_seq::seq_value_proc","commander boundary","add_unit","command collaborator"
"theory_seq::seq_value_proc","commander boundary","add_int","command collaborator"
"theory_seq::seq_value_proc","commander boundary","add_string","command collaborator"
"theory_seq::seq_value_proc","commander boundary","get_dependencies","command collaborator"
"theory_seq::seq_value_proc","commander boundary","add_buffer","controller stateless"
"theory_seq::seq_value_proc","commander boundary","mk_value","property non-void-command collaborator"
"simplifier::subsumption_report","empty","~subsumption_report","destructor"
"cmd_context","boundary","mc0","property non-void-command collaborator"
"cmd_context","boundary","print_unsupported_msg","command"
"cmd_context","boundary","print_unsupported_info","command"
"cmd_context","boundary","params","get collaborator"
"cmd_context","boundary","get_solver_factory","get collaborator"
"cmd_context","boundary","has_logic","predicate"
"cmd_context","boundary","get_logic","get collaborator"
"cmd_context","boundary","is_logic","predicate"
"cmd_context","boundary","numeral_as_real","get"
"cmd_context","boundary","set_numeral_as_real","set"
"cmd_context","boundary","set_interactive_mode","set"
"cmd_context","boundary","set_ignore_check","set"
"cmd_context","boundary","ignore_check","get"
"cmd_context","boundary","set_exit_on_error","set"
"cmd_context","boundary","exit_on_error","get"
"cmd_context","boundary","interactive_mode","get"
"cmd_context","boundary","set_print_success","set"
"cmd_context","boundary","print_success_enabled","get"
"cmd_context","boundary","print_success","command"
"cmd_context","boundary","print_unsupported","command"
"cmd_context","boundary","global_decls","get"
"cmd_context","boundary","set_global_decls","set"
"cmd_context","boundary","random_seed","get"
"cmd_context","boundary","set_random_seed","set"
"cmd_context","boundary","has_assertions","predicate"
"cmd_context","boundary","set_produce_unsat_assumptions","set"
"cmd_context","boundary","set_allow_duplicate_declarations","set"
"cmd_context","boundary","produce_assignments","get"
"cmd_context","boundary","produce_unsat_assumptions","get"
"cmd_context","boundary","set_produce_assignments","set"
"cmd_context","boundary","set_status","set collaborator"
"cmd_context","boundary","get_status","get collaborator"
"cmd_context","boundary","has_manager","predicate"
"cmd_context","boundary","m","get collaborator"
"cmd_context","boundary","get_ast_manager","property non-void-command collaborator"
"cmd_context","boundary","pm","get collaborator"
"cmd_context","boundary","sm","get set collaborator"
"cmd_context","boundary","get_proof_cmds","property non-void-command collaborator"
"cmd_context","boundary","get_solver","property non-void-command collaborator"
"cmd_context","boundary","set_solver","set collaborator"
"cmd_context","boundary","set_proof_cmds","set collaborator"
"cmd_context","boundary","set_check_sat_result","set collaborator"
"cmd_context","boundary","get_check_sat_result","property collaborator"
"cmd_context","boundary","is_sort_decl","predicate collaborator"
"cmd_context","boundary","insert","command collaborator"
"cmd_context","boundary","insert","command collaborator"
"cmd_context","boundary","insert","command collaborator"
"cmd_context","boundary","insert","command collaborator"
"cmd_context","boundary","erase_func_decl","command collaborator"
"cmd_context","boundary","set_regular_stream","command"
"cmd_context","boundary","set_regular_stream","command collaborator"
"cmd_context","boundary","set_diagnostic_stream","command collaborator"
"cmd_context","boundary","regular_stream","get collaborator"
"cmd_context","boundary","diagnostic_stream","get collaborator"
"cmd_context","boundary","get_regular_stream_name","property"
"cmd_context","boundary","get_diagnostic_stream_name","property"
"cmd_context","boundary","begin_cmds","property collaborator"
"cmd_context","boundary","end_cmds","property collaborator"
"cmd_context","boundary","begin_user_tactics","property collaborator"
"cmd_context","boundary","end_user_tactics","property collaborator"
"cmd_context","boundary","push_assert_string","command"
"cmd_context","boundary","num_scopes","unclassified"
"cmd_context","boundary","get_macros","get collaborator"
"cmd_context","boundary","get_model_converter","property non-void-command collaborator"
"cmd_context","boundary","get_seconds","property"
"cmd_context","boundary","assertions","get collaborator"
"cmd_context","boundary","assertion_names","get collaborator"
"cmd_context","boundary","consume_assertions","predicate non-void-command"
"cmd_context","boundary","pp","void-accessor collaborator"
"cmd_context","boundary","cmd_context::contains_func_decl","predicate collaborator"
"cmd_context","boundary","cmd_context::contains_macro","predicate collaborator"
"cmd_context","boundary","cmd_context::contains_macro","predicate collaborator"
"cmd_context","boundary","cmd_context::contains_macro","predicate collaborator"
"cmd_context","boundary","cmd_context::insert_macro","command collaborator"
"cmd_context","boundary","cmd_context::erase_macro","command collaborator"
"cmd_context","boundary","cmd_context::macros_find","predicate non-void-command collaborator"
"cmd_context","boundary","cmd_context::cmd_context","constructor"
"cmd_context","boundary","cmd_context::~cmd_context","destructor"
"cmd_context","boundary","cmd_context::set_cancel","command"
"cmd_context","boundary","cmd_context::get_opt","property non-void-command collaborator"
"cmd_context","boundary","cmd_context::set_opt","command collaborator"
"cmd_context","boundary","cmd_context::global_params_updated","command collaborator"
"cmd_context","boundary","cmd_context::set_produce_models","set"
"cmd_context","boundary","cmd_context::set_produce_unsat_cores","set"
"cmd_context","boundary","cmd_context::set_produce_proofs","command"
"cmd_context","boundary","cmd_context::produce_models","predicate"
"cmd_context","boundary","cmd_context::produce_proofs","predicate"
"cmd_context","boundary","cmd_context::produce_unsat_cores","predicate"
"cmd_context","boundary","cmd_context::well_sorted_check_enabled","predicate"
"cmd_context","boundary","cmd_context::validate_model_enabled","predicate"
"cmd_context","boundary","cmd_context::cs_state","property collaborator"
"cmd_context","boundary","cmd_context::register_builtin_sorts","command collaborator"
"cmd_context","boundary","cmd_context::register_builtin_ops","command collaborator"
"cmd_context","boundary","cmd_context::register_plugin","command"
"cmd_context","boundary","cmd_context::load_plugin","command collaborator"
"cmd_context","boundary","cmd_context::logic_has_arith","predicate"
"cmd_context","boundary","cmd_context::logic_has_bv","predicate"
"cmd_context","boundary","cmd_context::logic_has_seq","predicate"
"cmd_context","boundary","cmd_context::logic_has_pb","predicate"
"cmd_context","boundary","cmd_context::logic_has_fpa","predicate"
"cmd_context","boundary","cmd_context::logic_has_array","predicate"
"cmd_context","boundary","cmd_context::logic_has_datatype","predicate"
"cmd_context","boundary","cmd_context::logic_has_recfun","incidental"
"cmd_context","boundary","cmd_context::init_manager_core","command collaborator"
"cmd_context","boundary","cmd_context::register_plist","command"
"cmd_context","boundary","cmd_context::init_manager","command"
"cmd_context","boundary","cmd_context::init_external_manager","set"
"cmd_context","boundary","cmd_context::set_logic","predicate non-void-command collaborator"
"cmd_context","boundary","cmd_context::reason_unknown","property"
"cmd_context","boundary","cmd_context::is_func_decl","predicate collaborator"
"cmd_context","boundary","cmd_context::insert","command collaborator"
"cmd_context","boundary","cmd_context::insert","command collaborator"
"cmd_context","boundary","cmd_context::insert","command collaborator"
"cmd_context","boundary","cmd_context::insert","command collaborator"
"cmd_context","boundary","cmd_context::insert_user_tactic","command collaborator"
"cmd_context","boundary","cmd_context::insert","command collaborator"
"cmd_context","boundary","cmd_context::model_add","command collaborator"
"cmd_context","boundary","cmd_context::register_fun","command collaborator"
"cmd_context","boundary","cmd_context::model_del","command collaborator"
"cmd_context","boundary","cmd_context::get_recfun_plugin","property non-void-command collaborator"
"cmd_context","boundary","cmd_context::decl_rec_fun","property non-void-command collaborator"
"cmd_context","boundary","cmd_context::insert_rec_fun","command collaborator"
"cmd_context","boundary","cmd_context::find_func_decl","property collaborator"
"cmd_context","boundary","cmd_context::find_func_decl","property non-void-command collaborator"
"cmd_context","boundary","cmd_context::find_psort_decl","property collaborator"
"cmd_context","boundary","cmd_context::find_cmd","property collaborator"
"cmd_context","boundary","cmd_context::find_user_tactic","property collaborator"
"cmd_context","boundary","cmd_context::find_object_ref","property collaborator"
"cmd_context","boundary","cmd_context::mk_const","command collaborator"
"cmd_context","boundary","cmd_context::try_mk_builtin_app","predicate collaborator"
"cmd_context","boundary","cmd_context::try_mk_declared_app","predicate non-void-command collaborator"
"cmd_context","boundary","cmd_context::try_mk_macro_app","predicate non-void-command collaborator"
"cmd_context","boundary","cmd_context::try_mk_pdecl_app","predicate collaborator"
"cmd_context","boundary","cmd_context::mk_app","command collaborator"
"cmd_context","boundary","cmd_context::erase_func_decl","command collaborator"
"cmd_context","boundary","cmd_context::erase_func_decl_core","command collaborator"
"cmd_context","boundary","cmd_context::erase_func_decl","command collaborator"
"cmd_context","boundary","cmd_context::erase_psort_decl_core","command collaborator"
"cmd_context","boundary","cmd_context::erase_psort_decl","command collaborator"
"cmd_context","boundary","cmd_context::erase_cmd","command collaborator"
"cmd_context","boundary","cmd_context::erase_user_tactic","command collaborator"
"cmd_context","boundary","cmd_context::erase_object_ref","command collaborator"
"cmd_context","boundary","cmd_context::reset_func_decls","command"
"cmd_context","boundary","cmd_context::reset_psort_decls","command collaborator"
"cmd_context","boundary","cmd_context::reset_macros","command"
"cmd_context","boundary","cmd_context::reset_cmds","controller"
"cmd_context","boundary","cmd_context::finalize_cmds","command"
"cmd_context","boundary","cmd_context::reset_user_tactics","command"
"cmd_context","boundary","cmd_context::reset_object_refs","command collaborator"
"cmd_context","boundary","cmd_context::insert_aux_pdecl","command collaborator"
"cmd_context","boundary","cmd_context::reset","command"
"cmd_context","boundary","cmd_context::assert_expr","command collaborator"
"cmd_context","boundary","cmd_context::assert_expr","command collaborator"
"cmd_context","boundary","cmd_context::push","command collaborator"
"cmd_context","boundary","cmd_context::push","command"
"cmd_context","boundary","cmd_context::restore_func_decls","command collaborator"
"cmd_context","boundary","cmd_context::restore_psort_inst","command collaborator"
"cmd_context","boundary","cmd_context::restore_psort_decls","command collaborator"
"cmd_context","boundary","cmd_context::restore_macros","command collaborator"
"cmd_context","boundary","cmd_context::restore_aux_pdecls","command collaborator"
"cmd_context","boundary","cmd_context::restore_assertions","command"
"cmd_context","boundary","cmd_context::pop","command collaborator"
"cmd_context","boundary","cmd_context::check_sat","command collaborator"
"cmd_context","boundary","cmd_context::get_consequences","command collaborator"
"cmd_context","boundary","cmd_context::reset_assertions","command collaborator"
"cmd_context","boundary","cmd_context::display_dimacs","command collaborator"
"cmd_context","boundary","cmd_context::display_model","command collaborator"
"cmd_context","boundary","cmd_context::add_declared_functions","command collaborator"
"cmd_context","boundary","cmd_context::display_sat_result","command collaborator"
"cmd_context","boundary","cmd_context::validate_check_sat_result","command collaborator"
"cmd_context","boundary","cmd_context::set_diagnostic_stream","command"
"cmd_context","boundary","cmd_context::complete_model","collaborator"
"cmd_context","boundary","cmd_context::validate_model","command collaborator"
"cmd_context","boundary","cmd_context::analyze_failure","command collaborator"
"cmd_context","boundary","cmd_context::display_detailed_analysis","void-accessor command collaborator"
"cmd_context","boundary","cmd_context::mk_solver","command collaborator"
"cmd_context","boundary","cmd_context::set_solver_factory","command collaborator"
"cmd_context","boundary","cmd_context::display_statistics","command collaborator"
"cmd_context","boundary","cmd_context::tracked_assertions","property non-void-command collaborator"
"cmd_context","boundary","cmd_context::reset_tracked_assertions","command collaborator"
"cmd_context","boundary","cmd_context::display_assertions","command"
"cmd_context","boundary","cmd_context::is_model_available","predicate collaborator"
"cmd_context","boundary","cmd_context::pp","property collaborator"
"cmd_context","boundary","cmd_context::try_pp","property collaborator"
"cmd_context","boundary","cmd_context::get_pp_env","property collaborator"
"cmd_context","boundary","cmd_context::pp","collaborator"
"cmd_context","boundary","cmd_context::pp","collaborator"
"cmd_context","boundary","cmd_context::pp","collaborator"
"cmd_context","boundary","cmd_context::display","collaborator"
"cmd_context","boundary","cmd_context::display","collaborator"
"cmd_context","boundary","cmd_context::display","collaborator"
"cmd_context","boundary","cmd_context::display","collaborator"
"cmd_context","boundary","cmd_context::dump_assertions","wrapper"
"cmd_context","boundary","cmd_context::display_smt2_benchmark","collaborator"
"cmd_context","boundary","cmd_context::slow_progress_sample","command collaborator"
"cmd_context","boundary","cmd_context::fast_progress_sample","empty"
"tseitin_cnf_tactic","boundary","translate","property wrapper"
"tseitin_cnf_tactic","boundary","~tseitin_cnf_tactic","destructor"
"tseitin_cnf_tactic","boundary","name","incidental"
"tseitin_cnf_tactic","boundary","updt_params","command collaborator"
"tseitin_cnf_tactic","boundary","collect_param_descrs","controller stateless"
"tseitin_cnf_tactic","boundary","operator()","wrapper"
"tseitin_cnf_tactic","boundary","cleanup","wrapper"
"tseitin_cnf_tactic","boundary","collect_statistics","controller"
"tseitin_cnf_tactic","boundary","reset_statistics","set"
"bool_var_and_cost_lt","boundary degenerate small-class","operator()","collaborator incidental"
"converter","commander lazy-class","converter","constructor"
"converter","commander lazy-class","inc_ref","set"
"converter","commander lazy-class","dec_ref","set"
"converter","commander lazy-class","cancel","empty"
"var_shifter_core","entity boundary","var_shifter_core","constructor"
"var_shifter_core","entity boundary","var_shifter_core::visit","predicate non-void-command collaborator"
"var_shifter_core","entity boundary","var_shifter_core::process_app","void-accessor command collaborator"
"var_shifter_core","entity boundary","var_shifter_core::process_quantifier","void-accessor command collaborator"
"var_shifter_core","entity boundary","var_shifter_core::main_loop","command collaborator"
"report","empty","report","constructor"
"report","empty","~report","destructor"
"mk_stat","boundary small-class","mk_stat","constructor"
"mk_stat","boundary small-class","mk_stat::display","collaborator"
"ptr_vector","data-provider boundary small-class","ptr_vector","constructor"
"ptr_vector","data-provider boundary small-class","ptr_vector","constructor"
"ptr_vector","data-provider boundary small-class","ptr_vector","constructor"
"ptr_vector","data-provider boundary small-class","ptr_vector","constructor"
"ptr_vector","data-provider boundary small-class","display","property collaborator"
"scoped_detach","commander data-class small-class","scoped_detach","constructor"
"scoped_detach","commander data-class small-class","~scoped_detach","destructor"
"scoped_detach","commander data-class small-class","del_clause","set"
"eq2bv_tactic","entity boundary","updt_params","empty"
"eq2bv_tactic","entity boundary","operator()","command collaborator"
"eq2bv_tactic","entity boundary","translate","wrapper stateless"
"eq2bv_tactic","entity boundary","name","incidental"
"eq2bv_tactic","entity boundary","collect_param_descrs","empty"
"eq2bv_tactic","entity boundary","cleanup","empty"
"eq2bv_tactic","entity boundary","cleanup_fd","command collaborator"
"eq2bv_tactic","entity boundary","is_var_const_pair","predicate non-void-command collaborator"
"eq2bv_tactic","entity boundary","is_upper","predicate non-void-command collaborator"
"eq2bv_tactic","entity boundary","is_lower","predicate non-void-command collaborator"
"eq2bv_tactic","entity boundary","is_bound","predicate non-void-command collaborator"
"eq2bv_tactic","entity boundary","mark_has_eq","command collaborator"
"eq2bv_tactic","entity boundary","collect_fd","void-accessor command collaborator"
"eq2bv_tactic","entity boundary","is_fd","predicate non-void-command collaborator"
"eq2bv_tactic","entity boundary","add_fd","command collaborator"
"append_assumptions","empty","append_assumptions","constructor"
"append_assumptions","empty","~append_assumptions","destructor"
"inc_sat_solver","boundary","is_internalized","predicate"
"inc_sat_solver","boundary","inc_sat_solver","constructor"
"inc_sat_solver","boundary","override_incremental","predicate controller"
"inc_sat_solver","boundary","is_incremental","predicate"
"inc_sat_solver","boundary","translate","property non-void-command collaborator"
"inc_sat_solver","boundary","set_progress_callback","empty"
"inc_sat_solver","boundary","display_weighted","command"
"inc_sat_solver","boundary","is_literal","predicate collaborator"
"inc_sat_solver","boundary","check_sat_core","property non-void-command collaborator"
"inc_sat_solver","boundary","push","command"
"inc_sat_solver","boundary","push_internal","command"
"inc_sat_solver","boundary","pop","command"
"inc_sat_solver","boundary","set_phase","command collaborator"
"inc_sat_solver","boundary","get_phase","property non-void-command collaborator"
"inc_sat_solver","boundary","set_phase","command collaborator"
"inc_sat_solver","boundary","move_to_front","command collaborator"
"inc_sat_solver","boundary","get_scope_level","get"
"inc_sat_solver","boundary","assert_expr_core2","command collaborator"
"inc_sat_solver","boundary","get_manager","get collaborator"
"inc_sat_solver","boundary","assert_expr_core","command collaborator"
"inc_sat_solver","boundary","set_produce_models","empty"
"inc_sat_solver","boundary","collect_param_descrs","command collaborator"
"inc_sat_solver","boundary","updt_params","command collaborator"
"inc_sat_solver","boundary","collect_statistics","collaborator"
"inc_sat_solver","boundary","get_unsat_core","command collaborator"
"inc_sat_solver","boundary","get_levels","void-accessor command collaborator"
"inc_sat_solver","boundary","get_trail","property non-void-command collaborator"
"inc_sat_solver","boundary","get_proof_core","collaborator incidental"
"inc_sat_solver","boundary","last_cube","property non-void-command collaborator"
"inc_sat_solver","boundary","cube","property non-void-command collaborator"
"inc_sat_solver","boundary","congruence_next","collaborator incidental"
"inc_sat_solver","boundary","congruence_root","collaborator incidental"
"inc_sat_solver","boundary","get_consequences_core","property non-void-command collaborator"
"inc_sat_solver","boundary","find_mutexes","property non-void-command collaborator"
"inc_sat_solver","boundary","init_reason_unknown","set"
"inc_sat_solver","boundary","reason_unknown","get"
"inc_sat_solver","boundary","set_reason_unknown","set"
"inc_sat_solver","boundary","set_reason_unknown","set"
"inc_sat_solver","boundary","get_labels","empty"
"inc_sat_solver","boundary","get_num_assertions","unclassified"
"inc_sat_solver","boundary","get_assertion","get collaborator"
"inc_sat_solver","boundary","get_num_assumptions","unclassified"
"inc_sat_solver","boundary","get_assumption","get collaborator"
"inc_sat_solver","boundary","get_model_converter","get property collaborator"
"inc_sat_solver","boundary","convert_internalized","command collaborator"
"inc_sat_solver","boundary","init_preprocess","command collaborator"
"inc_sat_solver","boundary","get_euf","property non-void-command collaborator"
"inc_sat_solver","boundary","ensure_euf","property non-void-command collaborator"
"inc_sat_solver","boundary","register_on_clause","command collaborator"
"inc_sat_solver","boundary","user_propagate_init","command collaborator"
"inc_sat_solver","boundary","user_propagate_register_fixed","command collaborator"
"inc_sat_solver","boundary","user_propagate_register_final","command collaborator"
"inc_sat_solver","boundary","user_propagate_register_eq","command collaborator"
"inc_sat_solver","boundary","user_propagate_register_diseq","command collaborator"
"inc_sat_solver","boundary","user_propagate_register_expr","command collaborator"
"inc_sat_solver","boundary","user_propagate_register_created","command collaborator"
"inc_sat_solver","boundary","user_propagate_register_decide","command collaborator"
"inc_sat_solver","boundary","check_uninterpreted","property set collaborator"
"inc_sat_solver","boundary","internalize_goal","property non-void-command collaborator"
"inc_sat_solver","boundary","internalize_goal","property non-void-command collaborator"
"inc_sat_solver","boundary","internalize_assumptions","property non-void-command collaborator"
"inc_sat_solver","boundary","internalize_vars","property non-void-command collaborator"
"inc_sat_solver","boundary","internalize_var","predicate non-void-command collaborator"
"inc_sat_solver","boundary","extract_fixed_variable","predicate non-void-command collaborator"
"inc_sat_solver","boundary","internalize_value","void-accessor command collaborator"
"inc_sat_solver","boundary","is_literal","predicate non-void-command collaborator"
"inc_sat_solver","boundary","is_clause","predicate non-void-command collaborator"
"inc_sat_solver","boundary","internalize_formulas","property non-void-command collaborator"
"inc_sat_solver","boundary","extract_assumptions","command collaborator"
"inc_sat_solver","boundary","extract_asm2dep","controller"
"inc_sat_solver","boundary","extract_core","command collaborator"
"inc_sat_solver","boundary","check_assumptions","command collaborator"
"inc_sat_solver","boundary","get_model_core","void-accessor command collaborator"
"setup","commander","setk_already_configured","set"
"setup","commander","already_configured","get"
"setup","commander","get_logic","get collaborator"
"setup","commander","mark_already_configured","set"
"setup","commander","already_configured","get"
"setup","commander","set_logic","predicate set collaborator"
"setup","commander","get_logic","get collaborator"
"setup","commander","setup::setup","constructor"
"setup","commander","setup::operator()","command collaborator"
"setup","commander","setup::setup_default","command"
"setup","commander","setup::setup_auto_config","command collaborator"
"setup","commander","setup::setup_QF_UF","command"
"setup","commander","setup::setup_QF_DT","command"
"setup","commander","setup::setup_QF_BVRE","command"
"setup","commander","setup::setup_QF_UF","command collaborator"
"setup","commander","setup::setup_QF_RDL","command"
"setup","commander","setup::setup_QF_RDL","command collaborator"
"setup","commander","setup::setup_QF_IDL","command"
"setup","commander","setup::setup_QF_IDL","command collaborator"
"setup","commander","setup::setup_QF_UFIDL","command"
"setup","commander","setup::setup_QF_UFIDL","command collaborator"
"setup","commander","setup::setup_QF_LRA","command"
"setup","commander","setup::setup_QF_LRA","command collaborator"
"setup","commander","setup::setup_QF_LIRA","command collaborator"
"setup","commander","setup::setup_QF_LIA","command"
"setup","commander","setup::setup_QF_LIA","command collaborator"
"setup","commander","setup::setup_QF_UFLIA","command"
"setup","commander","setup::setup_QF_UFLIA","command collaborator"
"setup","commander","setup::setup_QF_UFLRA","command"
"setup","commander","setup::setup_QF_BV","command"
"setup","commander","setup::setup_QF_AUFBV","command"
"setup","commander","setup::setup_QF_AX","command"
"setup","commander","setup::setup_QF_AX","command collaborator"
"setup","commander","setup::setup_QF_AUFLIA","command"
"setup","commander","setup::setup_QF_AUFLIA","command collaborator"
"setup","commander","setup::setup_AUFLIA","command"
"setup","commander","setup::setup_AUFLIA","command collaborator"
"setup","commander","setup::setup_AUFLIRA","command"
"setup","commander","setup::setup_UFNIA","command"
"setup","commander","setup::setup_UFLRA","command"
"setup","commander","setup::setup_AUFLIAp","command"
"setup","commander","setup::setup_AUFNIRA","command"
"setup","commander","setup::setup_LRA","command"
"setup","commander","setup::setup_QF_FP","command"
"setup","commander","setup::setup_QF_FPBV","command"
"setup","commander","setup::setup_QF_S","command"
"setup","commander","setup::setup_i_arith","command"
"setup","commander","setup::setup_lra_arith","command"
"setup","commander","setup::setup_mi_arith","command"
"setup","commander","setup::setup_arith","command collaborator"
"setup","commander","setup::setup_bv","command collaborator"
"setup","commander","setup::setup_arrays","command"
"setup","commander","setup::setup_datatypes","command"
"setup","commander","setup::setup_recfuns","command collaborator"
"setup","commander","setup::setup_dl","command"
"setup","commander","setup::setup_seq_str","command collaborator"
"setup","commander","setup::setup_card","command"
"setup","commander","setup::setup_fpa","command"
"setup","commander","setup::setup_str","command"
"setup","commander","setup::setup_seq","command"
"setup","commander","setup::setup_char","command"
"setup","commander","setup::setup_special_relations","command"
"setup","commander","setup::setup_polymorphism","command"
"setup","commander","setup::setup_unknown","command collaborator"
"setup","commander","setup::setup_unknown","command collaborator"
"proof_hint","pure-controller degenerate small-class","~proof_hint","destructor"
"proof_hint","pure-controller degenerate small-class","solver::proof_hint::get_hint","controller stateless"
"expand_mkbv_cfg","entity minimal-entity boundary","expand_mkbv_cfg","constructor"
"expand_mkbv_cfg","entity minimal-entity boundary","~expand_mkbv_cfg","destructor"
"expand_mkbv_cfg","entity minimal-entity boundary","set_src","set collaborator"
"expand_mkbv_cfg","entity minimal-entity boundary","set_dst","set collaborator"
"expand_mkbv_cfg","entity minimal-entity boundary","old_funcs","get collaborator"
"expand_mkbv_cfg","entity minimal-entity boundary","new_funcs","get collaborator"
"expand_mkbv_cfg","entity minimal-entity boundary","reduce_app","property non-void-command collaborator"
"status_pp","empty","status_pp","constructor"
"solver::undo_value","commander small-class","undo","command"
"arith_proof_hint_builder","boundary","reset","command"
"arith_proof_hint_builder","boundary","add","command"
"arith_proof_hint_builder","boundary","add_eq","command collaborator"
"arith_proof_hint_builder","boundary","add_diseq","command collaborator"
"arith_proof_hint_builder","boundary","add_lit","command collaborator"
"arith_proof_hint_builder","boundary","lit","get collaborator"
"arith_proof_hint_builder","boundary","eq","get collaborator"
"arith_proof_hint_builder","boundary","arith_proof_hint_builder::set_type","set collaborator"
"arith_proof_hint_builder","boundary","arith_proof_hint_builder::mk","property factory controller"
"rel_case_split_queue","commander","activity_increased_eh","empty"
"rel_case_split_queue","commander","activity_decreased_eh","empty"
"rel_case_split_queue","commander","mk_var_eh","empty"
"rel_case_split_queue","commander","del_var_eh","empty"
"rel_case_split_queue","commander","unassign_var_eh","empty"
"rel_case_split_queue","commander","relevant_eh","command collaborator"
"rel_case_split_queue","commander","init_search_eh","set"
"rel_case_split_queue","commander","end_search_eh","set"
"rel_case_split_queue","commander","reset","command"
"rel_case_split_queue","commander","push_scope","command collaborator"
"rel_case_split_queue","commander","pop_scope","command collaborator"
"rel_case_split_queue","commander","next_case_split_core","void-accessor command collaborator"
"rel_case_split_queue","commander","next_case_split","void-accessor command collaborator"
"rel_case_split_queue","commander","display_core","controller stateless"
"rel_case_split_queue","commander","display","command collaborator"
"collect_boolean_interface_proc","commander boundary","process","command collaborator"
"collect_boolean_interface_proc","commander boundary","operator()","command collaborator"
"collect_boolean_interface_proc","commander boundary","operator()","command collaborator"
"xr","entity data-provider boundary","operator[]","get collaborator"
"xr","entity data-provider boundary","begin","get collaborator"
"xr","entity data-provider boundary","end","property collaborator"
"xr","entity data-provider boundary","negate","wrapper"
"xr","entity data-provider boundary","swap","command"
"xr","entity data-provider boundary","literals","property collaborator"
"xr","entity data-provider boundary","get_lit","get collaborator"
"xr","entity data-provider boundary","set_lit","set collaborator"
"xr","entity data-provider boundary","is_blocked","collaborator incidental"
"solver::del_eq_occurs_trail","commander small-class","undo","command"
"solver::user_sort","commander boundary small-class","~user_sort","destructor"
"solver::user_sort","commander boundary small-class","add","command collaborator"
"solver::user_sort","commander boundary small-class","register_value","command collaborator"
"pop_back_trail","commander small-class","pop_back_trail","constructor"
"pop_back_trail","commander small-class","undo","command"
"obj_ref_map","entity boundary","obj_ref_map","constructor"
"obj_ref_map","entity boundary","~obj_ref_map","destructor"
"obj_ref_map","entity boundary","reset","command"
"obj_ref_map","entity boundary","finalize","command"
"obj_ref_map","entity boundary","empty","predicate"
"obj_ref_map","entity boundary","size","unclassified"
"obj_ref_map","entity boundary","capacity","unclassified"
"obj_ref_map","entity boundary","begin","property collaborator"
"obj_ref_map","entity boundary","end","property collaborator"
"obj_ref_map","entity boundary","insert","command collaborator"
"obj_ref_map","entity boundary","insert","command collaborator"
"obj_ref_map","entity boundary","insert_if_not_there","property non-void-command collaborator"
"obj_ref_map","entity boundary","insert_if_not_there2","property non-void-command collaborator"
"obj_ref_map","entity boundary","find_core","property collaborator"
"obj_ref_map","entity boundary","find","predicate collaborator"
"obj_ref_map","entity boundary","find","property collaborator"
"obj_ref_map","entity boundary","find","property non-void-command collaborator"
"obj_ref_map","entity boundary","operator[]","property collaborator"
"obj_ref_map","entity boundary","operator[]","property non-void-command collaborator"
"obj_ref_map","entity boundary","find_iterator","property collaborator"
"obj_ref_map","entity boundary","contains","predicate collaborator"
"obj_ref_map","entity boundary","remove","command collaborator"
"obj_ref_map","entity boundary","erase","command collaborator"
"obj_ref_map","entity boundary","get_num_collision","property"
"obj_ref_map","entity boundary","swap","command"
"par_and_then_tactical","commander boundary degenerate","par_and_then_tactical","constructor"
"par_and_then_tactical","commander boundary degenerate","name","incidental"
"par_and_then_tactical","commander boundary degenerate","operator()","command collaborator"
"par_and_then_tactical","commander boundary degenerate","translate","wrapper stateless"
"datatype_atoms","entity boundary","datatype_atoms","constructor"
"datatype_atoms","entity boundary","add_atom","predicate non-void-command collaborator"
"datatype_atoms","entity boundary","num_eqs","non-void-command"
"datatype_atoms","entity boundary","eq","get wrapper"
"datatype_atoms","entity boundary","eq_cond","get wrapper"
"datatype_atoms","entity boundary","eq_atom","get wrapper"
"datatype_atoms","entity boundary","num_neqs","non-void-command"
"datatype_atoms","entity boundary","neq_atom","get wrapper"
"datatype_atoms","entity boundary","num_neq_terms","unclassified"
"datatype_atoms","entity boundary","neq_term","get collaborator"
"datatype_atoms","entity boundary","neq_terms","property collaborator"
"datatype_atoms","entity boundary","num_recognizers","non-void-command"
"datatype_atoms","entity boundary","recognizer","get wrapper"
"datatype_atoms","entity boundary","num_unsat","non-void-command"
"datatype_atoms","entity boundary","unsat_atom","get wrapper"
"datatype_atoms","entity boundary","add_unsat_eq","predicate non-void-command collaborator"
"datatype_atoms","entity boundary","add_atom","command"
"datatype_atoms","entity boundary","add_eq","predicate non-void-command collaborator"
"datatype_atoms","entity boundary","solve_eq","predicate non-void-command collaborator"
"datatype_atoms","entity boundary","solve_diseq","predicate non-void-command collaborator"
"th_explain","entity boundary","to_index","property wrapper"
"th_explain","entity boundary","ext","property collaborator"
"th_explain","entity boundary","lit_consequent","get collaborator"
"th_explain","entity boundary","eq_consequent","get collaborator"
"th_explain","entity boundary","get_pragma","get collaborator"
"th_explain","entity boundary","th_explain::get_obj_size","wrapper stateless"
"th_explain","entity boundary","th_explain::th_explain","constructor"
"th_explain","entity boundary","th_explain::mk","property non-void-command factory collaborator"
"th_explain","entity boundary","th_explain::propagate","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::propagate","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::propagate","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::propagate","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::conflict","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::conflict","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::conflict","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::conflict","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::conflict","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::conflict","property non-void-command collaborator"
"th_explain","entity boundary","th_explain::display","property collaborator"
"karr_relation_plugin::filter_equal_fn","pure-controller small-class","operator()","controller"
"constraint_glue_psm_lt","pure-controller degenerate small-class","operator()","controller stateless"
"add_eq_trail","commander small-class","add_eq_trail","constructor"
"add_eq_trail","commander small-class","undo","command"
"compare_wlit","boundary degenerate small-class","operator()","collaborator incidental"
"sls_solver","entity boundary","sls_solver","constructor"
"sls_solver","entity boundary","updt_params","command collaborator"
"sls_solver","entity boundary","collect_param_descrs","command collaborator"
"sls_solver","entity boundary","collect_statistics","collaborator"
"sls_solver","entity boundary","assert_expr","command collaborator"
"sls_solver","entity boundary","get_unsat_core","command collaborator"
"sls_solver","entity boundary","get_model","void-accessor collaborator"
"sls_solver","entity boundary","get_proof","property non-void-command collaborator"
"sls_solver","entity boundary","reason_unknown","property"
"sls_solver","entity boundary","get_labels","command collaborator"
"sls_solver","entity boundary","set_progress_callback","command collaborator"
"sls_solver","entity boundary","get_num_assertions","unclassified"
"sls_solver","entity boundary","get_assertion","property collaborator"
"sls_solver","entity boundary","display","collaborator"
"sls_solver","entity boundary","opt","command collaborator"
"sls_solver","entity boundary","check_sat_core","property non-void-command collaborator"
"sls_solver","entity boundary","push_core","command"
"sls_solver","entity boundary","pop_core","command"
"sls_solver","entity boundary","assertions2sls","command"
"sls_solver","entity boundary","pbsls_opt","void-accessor command collaborator"
"sls_solver","entity boundary","bvsls_opt","void-accessor command collaborator"
"lit","data-provider boundary small-class","lit","constructor"
"lit","data-provider boundary small-class","lit::display","property collaborator"
"binding_chasher","boundary degenerate small-class","operator()","wrapper stateless"
"get_info_cmd","boundary degenerate","get_info_cmd","constructor"
"get_info_cmd","boundary degenerate","get_usage","incidental"
"get_info_cmd","boundary degenerate","get_descr","collaborator incidental"
"get_info_cmd","boundary degenerate","get_arity","incidental"
"get_info_cmd","boundary degenerate","next_arg_kind","collaborator incidental"
"get_info_cmd","boundary degenerate","set_next_arg","controller"
"product_relation_plugin::unaligned_union_fn","commander boundary data-class small-class","operator()","set collaborator"
"restore_watch","boundary small-class","restore_watch","constructor"
"restore_watch","boundary small-class","undo","wrapper"
"ematch::remove_binding","boundary small-class","undo","wrapper"
"ematch::insert_binding","commander small-class","undo","command"
"mbi_cmd","commander boundary","mbi_cmd","constructor"
"mbi_cmd","commander boundary","get_usage","incidental"
"mbi_cmd","commander boundary","get_descr","collaborator incidental"
"mbi_cmd","commander boundary","get_arity","incidental"
"mbi_cmd","commander boundary","next_arg_kind","property collaborator"
"mbi_cmd","commander boundary","set_next_arg","command collaborator"
"mbi_cmd","commander boundary","set_next_arg","command collaborator"
"mbi_cmd","commander boundary","prepare","command collaborator"
"mbi_cmd","commander boundary","execute","controller"
"ematch::reset_in_queue","commander small-class","undo","command"
"mam_value_trail","empty","mam_value_trail","constructor"
"label_hasher","minimal-entity","mk_lbl_hash","set"
"label_hasher","minimal-entity","operator()","get non-void-command collaborator"
"label_hasher","minimal-entity","display","controller"
"label_hasher","minimal-entity","mk_lbl_hash","set"
"label_hasher","minimal-entity","operator()","get non-void-command collaborator"
"label_hasher","minimal-entity","display","controller"
"symbol_compare","boundary degenerate small-class","operator()","collaborator incidental"
"cast_ast<sort>","boundary degenerate small-class","operator()","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_instr","non-void-command factory collaborator"
"code_tree_manager","boundary degenerate","mk_init","wrapper stateless"
"code_tree_manager","boundary degenerate","code_tree_manager","constructor"
"code_tree_manager","boundary degenerate","mk_code_tree","property non-void-command collaborator"
"code_tree_manager","boundary degenerate","mk_joint2","property factory wrapper"
"code_tree_manager","boundary degenerate","mk_compare","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_check","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_filter_core","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_filter","property non-void-command collaborator"
"code_tree_manager","boundary degenerate","mk_pfilter","property non-void-command collaborator"
"code_tree_manager","boundary degenerate","mk_cfilter","property non-void-command collaborator"
"code_tree_manager","boundary degenerate","mk_get_enode","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_choose","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_noop","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_bind","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_get_cgr","controller stateless"
"code_tree_manager","boundary degenerate","mk_is_cgr","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_yield","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_cont","wrapper stateless"
"code_tree_manager","boundary degenerate","set_next","void-accessor command collaborator"
"code_tree_manager","boundary degenerate","save_num_regs","command collaborator"
"code_tree_manager","boundary degenerate","save_num_choices","command collaborator"
"code_tree_manager","boundary degenerate","insert_new_lbl_hash","command"
"code_tree_manager","boundary degenerate","mk_instr","non-void-command factory collaborator"
"code_tree_manager","boundary degenerate","mk_init","wrapper stateless"
"code_tree_manager","boundary degenerate","code_tree_manager","constructor"
"code_tree_manager","boundary degenerate","mk_code_tree","property non-void-command collaborator"
"code_tree_manager","boundary degenerate","mk_joint2","property factory wrapper"
"code_tree_manager","boundary degenerate","mk_compare","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_check","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_filter_core","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_filter","property non-void-command collaborator"
"code_tree_manager","boundary degenerate","mk_pfilter","property non-void-command collaborator"
"code_tree_manager","boundary degenerate","mk_cfilter","property non-void-command collaborator"
"code_tree_manager","boundary degenerate","mk_get_enode","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_choose","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_noop","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_bind","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_get_cgr","controller stateless"
"code_tree_manager","boundary degenerate","mk_is_cgr","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_yield","wrapper stateless"
"code_tree_manager","boundary degenerate","mk_cont","wrapper stateless"
"code_tree_manager","boundary degenerate","set_next","void-accessor command collaborator"
"code_tree_manager","boundary degenerate","save_num_regs","command collaborator"
"code_tree_manager","boundary degenerate","save_num_choices","command collaborator"
"code_tree_manager","boundary degenerate","insert_new_lbl_hash","command"
"mam_impl","commander boundary","mk_tmp_vector","property non-void-command collaborator"
"mam_impl","commander boundary","recycle","command collaborator"
"mam_impl","commander boundary","add_candidate","command collaborator"
"mam_impl","commander boundary","add_candidate","command collaborator"
"mam_impl","commander boundary","is_plbl","predicate collaborator"
"mam_impl","commander boundary","is_clbl","predicate collaborator"
"mam_impl","commander boundary","update_lbls","command collaborator"
"mam_impl","commander boundary","update_clbls","command collaborator"
"mam_impl","commander boundary","update_children_plbls","command collaborator"
"mam_impl","commander boundary","update_plbls","command collaborator"
"mam_impl","commander boundary","reset_pp_pc","set"
"mam_impl","commander boundary","mk_code","property non-void-command collaborator"
"mam_impl","commander boundary","insert_code","command"
"mam_impl","commander boundary","mk_path_tree","property non-void-command collaborator"
"mam_impl","commander boundary","insert","void-accessor command collaborator"
"mam_impl","commander boundary","update_pc","command collaborator"
"mam_impl","commander boundary","update_pp","command collaborator"
"mam_impl","commander boundary","update_vars","command collaborator"
"mam_impl","commander boundary","get_ground_arg","property non-void-command collaborator"
"mam_impl","commander boundary","update_filters","command collaborator"
"mam_impl","commander boundary","update_filters","command collaborator"
"mam_impl","commander boundary","display_filter_info","controller"
"mam_impl","commander boundary","is_eq","predicate controller"
"mam_impl","commander boundary","collect_parents","command collaborator"
"mam_impl","commander boundary","process_pp","command collaborator"
"mam_impl","commander boundary","process_pc","command collaborator"
"mam_impl","commander boundary","propagate_new_patterns","command collaborator"
"mam_impl","commander boundary","mam_impl","constructor"
"mam_impl","commander boundary","add_pattern","command collaborator"
"mam_impl","commander boundary","reset","command"
"mam_impl","commander boundary","display","property non-void-command collaborator"
"mam_impl","commander boundary","propagate_to_match","command"
"mam_impl","commander boundary","propagate","command"
"mam_impl","commander boundary","rematch","command collaborator"
"mam_impl","commander boundary","check_missing_instances","predicate non-void-command collaborator"
"mam_impl","commander boundary","on_match","command"
"mam_impl","commander boundary","add_node","command"
"mam_impl","commander boundary","can_propagate","predicate"
"mam_impl","commander boundary","on_merge","command collaborator"
"mam_impl","commander boundary","mk_tmp_vector","property non-void-command collaborator"
"mam_impl","commander boundary","recycle","command collaborator"
"mam_impl","commander boundary","add_candidate","command collaborator"
"mam_impl","commander boundary","add_candidate","command collaborator"
"mam_impl","commander boundary","is_plbl","predicate collaborator"
"mam_impl","commander boundary","is_clbl","predicate collaborator"
"mam_impl","commander boundary","update_lbls","command collaborator"
"mam_impl","commander boundary","update_clbls","command collaborator"
"mam_impl","commander boundary","update_children_plbls","command collaborator"
"mam_impl","commander boundary","update_plbls","command collaborator"
"mam_impl","commander boundary","reset_pp_pc","set"
"mam_impl","commander boundary","mk_code","property non-void-command collaborator"
"mam_impl","commander boundary","insert_code","command"
"mam_impl","commander boundary","mk_path_tree","property non-void-command collaborator"
"mam_impl","commander boundary","insert","void-accessor command collaborator"
"mam_impl","commander boundary","update_pc","command collaborator"
"mam_impl","commander boundary","update_pp","command collaborator"
"mam_impl","commander boundary","update_vars","command collaborator"
"mam_impl","commander boundary","get_ground_arg","property controller"
"mam_impl","commander boundary","update_filters","command collaborator"
"mam_impl","commander boundary","update_filters","command collaborator"
"mam_impl","commander boundary","display_filter_info","controller"
"mam_impl","commander boundary","is_eq","predicate controller"
"mam_impl","commander boundary","collect_parents","command collaborator"
"mam_impl","commander boundary","process_pp","command collaborator"
"mam_impl","commander boundary","process_pc","command collaborator"
"mam_impl","commander boundary","match_new_patterns","command collaborator"
"mam_impl","commander boundary","collect_ground_exprs","command collaborator"
"mam_impl","commander boundary","~mam_impl","destructor"
"mam_impl","commander boundary","add_pattern","command collaborator"
"mam_impl","commander boundary","push_scope","command"
"mam_impl","commander boundary","pop_scope","command collaborator"
"mam_impl","commander boundary","reset","command"
"mam_impl","commander boundary","display","command collaborator"
"mam_impl","commander boundary","match","command collaborator"
"mam_impl","commander boundary","rematch","command collaborator"
"mam_impl","commander boundary","check_missing_instances","predicate non-void-command collaborator"
"mam_impl","commander boundary","on_match","command collaborator"
"mam_impl","commander boundary","is_shared","predicate collaborator"
"mam_impl","commander boundary","relevant_eh","command"
"mam_impl","commander boundary","has_work","predicate"
"mam_impl","commander boundary","add_eq_eh","command collaborator"
"relation_manager::default_relation_join_project_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"mam","degenerate small-class","mam","constructor"
"mam","degenerate small-class","mam::ground_subterms","controller stateless"
"mam","degenerate small-class","mam::mk","wrapper stateless"
"theory_recfun","boundary","push_body_expand","command collaborator"
"theory_recfun","boundary","push_case_expand","command collaborator"
"theory_recfun","boundary","push_guard","wrapper stateless"
"theory_recfun","boundary","push_core","wrapper stateless"
"theory_recfun","boundary","is_enabled_guard","predicate non-void-command collaborator"
"theory_recfun","boundary","is_disabled_guard","predicate non-void-command collaborator"
"theory_recfun","boundary","u","get collaborator"
"theory_recfun","boundary","is_defined","predicate collaborator"
"theory_recfun","boundary","is_case_pred","predicate collaborator"
"theory_recfun","boundary","is_defined","predicate collaborator"
"theory_recfun","boundary","is_case_pred","predicate collaborator"
"theory_recfun","boundary","is_standard_order","controller stateless"
"theory_recfun","boundary","new_eq_eh","empty"
"theory_recfun","boundary","new_diseq_eh","empty"
"theory_recfun","boundary","theory_recfun::theory_recfun","constructor"
"theory_recfun","boundary","theory_recfun::~theory_recfun","destructor"
"theory_recfun","boundary","theory_recfun::get_name","incidental"
"theory_recfun","boundary","theory_recfun::mk_fresh","wrapper stateless"
"theory_recfun","boundary","theory_recfun::internalize_atom","predicate non-void-command collaborator"
"theory_recfun","boundary","theory_recfun::internalize_term","predicate non-void-command collaborator"
"theory_recfun","boundary","theory_recfun::reset_eh","command"
"theory_recfun","boundary","theory_recfun::relevant_eh","command collaborator"
"theory_recfun","boundary","theory_recfun::push_scope_eh","command"
"theory_recfun","boundary","theory_recfun::pop_scope_eh","command"
"theory_recfun","boundary","theory_recfun::can_propagate","predicate non-void-command"
"theory_recfun","boundary","theory_recfun::propagate","command"
"theory_recfun","boundary","theory_recfun::push","command collaborator"
"theory_recfun","boundary","theory_recfun::disable_guard","command collaborator"
"theory_recfun","boundary","theory_recfun::get_depth","non-void-command collaborator"
"theory_recfun","boundary","theory_recfun::set_depth_rec","controller"
"theory_recfun","boundary","theory_recfun::set_depth","command collaborator"
"theory_recfun","boundary","theory_recfun::assign_eh","command collaborator"
"theory_recfun","boundary","theory_recfun::apply_args","property non-void-command factory collaborator"
"theory_recfun","boundary","theory_recfun::mk_literal","property non-void-command collaborator"
"theory_recfun","boundary","theory_recfun::mk_eq_lit","property non-void-command collaborator"
"theory_recfun","boundary","theory_recfun::block_core","command collaborator"
"theory_recfun","boundary","theory_recfun::assert_macro_axiom","command collaborator"
"theory_recfun","boundary","theory_recfun::assert_case_axioms","command collaborator"
"theory_recfun","boundary","theory_recfun::activate_guard","command collaborator"
"theory_recfun","boundary","theory_recfun::assert_body_axiom","command collaborator"
"theory_recfun","boundary","theory_recfun::final_check_eh","property non-void-command collaborator"
"theory_recfun","boundary","theory_recfun::add_theory_assumptions","command collaborator"
"theory_recfun","boundary","theory_recfun::should_research","predicate non-void-command collaborator"
"theory_recfun","boundary","theory_recfun::is_beta_redex","predicate collaborator"
"theory_recfun","boundary","theory_recfun::display","collaborator"
"theory_recfun","boundary","theory_recfun::collect_statistics","controller"
"mbqi","boundary","abs","property non-void-command collaborator"
"mbqi","boundary","eval_abs","property non-void-command collaborator"
"mbqi","boundary","restrict_to_universe","command collaborator"
"mbqi","boundary","register_value","command collaborator"
"mbqi","boundary","replace_model_value","property non-void-command collaborator"
"mbqi","boundary","check_forall","property non-void-command collaborator"
"mbqi","boundary","check_exists","property non-void-command collaborator"
"mbqi","boundary","init_term","command collaborator"
"mbqi","boundary","mbqi","constructor"
"mbqi","boundary","set_model","set collaborator"
"mbqi","boundary","get_solver","get collaborator"
"mbqi","boundary","init_val2term","command collaborator"
"mbqi","boundary","check_quantifiers","predicate non-void-command collaborator"
"mbqi","boundary","mbqi::mbqi","constructor"
"mbqi","boundary","mbqi::operator()","property non-void-command collaborator"
"mbqi","boundary","mbqi::restrict_to_universe","command collaborator"
"mbqi","boundary","mbqi::replace_model_value","property non-void-command collaborator"
"mbqi","boundary","mbqi::choose_term","property non-void-command collaborator"
"mbqi","boundary","mbqi::check_forall","property non-void-command collaborator"
"mbqi","boundary","mbqi::check_forall_default","predicate non-void-command collaborator"
"mbqi","boundary","mbqi::check_forall_subst","predicate non-void-command collaborator"
"mbqi","boundary","mbqi::add_instantiation","command collaborator"
"mbqi","boundary","mbqi::extract_binding","property non-void-command collaborator"
"mbqi","boundary","mbqi::add_universe_restriction","command collaborator"
"mbqi","boundary","mbqi::specialize","property non-void-command collaborator"
"mbqi","boundary","mbqi::q2body","property non-void-command collaborator"
"mbqi","boundary","mbqi::solver_project","property non-void-command collaborator"
"mbqi","boundary","mbqi::add_domain_eqs","command collaborator"
"mbqi","boundary","mbqi::assert_expr","command collaborator"
"mbqi","boundary","mbqi::add_domain_bounds","command collaborator"
"mbqi","boundary","mbqi::eliminate_nested_vars","command collaborator"
"mbqi","boundary","mbqi::extract_var_args","controller"
"mbqi","boundary","mbqi::extract_free_vars","command collaborator"
"mbqi","boundary","mbqi::quick_check","predicate non-void-command collaborator"
"mbqi","boundary","mbqi::next_offset","predicate non-void-command collaborator"
"mbqi","boundary","mbqi::set_binding","command collaborator"
"mbqi","boundary","mbqi::first_offset","predicate non-void-command collaborator"
"mbqi","boundary","mbqi::next_offset","predicate non-void-command collaborator"
"mbqi","boundary","mbqi::init_model","set"
"mbqi","boundary","mbqi::init_solver","set"
"mbqi","boundary","mbqi::init_search","set"
"mbqi","boundary","mbqi::finalize_model","wrapper stateless"
"mbqi","boundary","mbqi::get_plugin","property non-void-command collaborator"
"mbqi","boundary","mbqi::add_plugin","command collaborator"
"mbqi","boundary","mbqi::collect_statistics","collaborator"
"ubv_projection","entity boundary small-class","ubv_projection","constructor"
"ubv_projection","entity boundary small-class","operator()","predicate wrapper"
"ubv_projection","entity boundary small-class","mk_lt","property non-void-command collaborator"
"lt","boundary degenerate small-class","lt","constructor"
"lt","boundary degenerate small-class","operator()","wrapper stateless"
"projection_meta_data","empty","projection_meta_data","constructor"
"queue::reset_instantiated","small-class","undo","unclassified"
"relation_base","unclassified","relation_base","constructor"
"relation_base","unclassified","display_tuples","controller stateless"
"relation_base","unclassified","from_table","predicate"
"relation_base","unclassified","is_precise","incidental"
"relation_base","unclassified","relation_base::reset","controller"
"th_internalizer","degenerate","visit","collaborator incidental"
"th_internalizer","degenerate","visited","collaborator incidental"
"th_internalizer","degenerate","post_visit","incidental"
"th_internalizer","degenerate","apply_sort_cnstr","empty"
"th_internalizer","degenerate","eq_internalized","empty"
"th_internalizer","degenerate","th_internalizer::visit_rec","predicate non-void-command collaborator"
"interval_relation_plugin","data-provider boundary","dep","property collaborator"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::interval_relation_plugin","constructor"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::can_handle_signature","predicate non-void-command collaborator"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_empty","property wrapper"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_full","property wrapper"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_join_fn","controller stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_project_fn","controller stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_rename_fn","controller stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::unite","property non-void-command collaborator"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::widen","property non-void-command collaborator"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::meet","property non-void-command collaborator"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::is_infinite","controller stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::is_empty","controller stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_union_fn","wrapper stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_widen_fn","wrapper stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_filter_identical_fn","wrapper stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_filter_equal_fn","wrapper stateless"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::get","collaborator incidental"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::get","collaborator incidental"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::is_linear","predicate collaborator"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::is_le","predicate collaborator"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::is_lt","predicate"
"interval_relation_plugin","data-provider boundary","interval_relation_plugin::is_eq","predicate collaborator"
"goal2sat::imp","commander boundary","aig","property non-void-command collaborator"
"goal2sat::imp","commander boundary","updt_params","command collaborator"
"goal2sat::imp","commander boundary","throw_op_not_handled","wrapper stateless"
"goal2sat::imp","commander boundary","mk_tseitin","property non-void-command collaborator"
"goal2sat::imp","commander boundary","mk_tseitin","property non-void-command collaborator"
"goal2sat::imp","commander boundary","mk_tseitin","property non-void-command collaborator"
"goal2sat::imp","commander boundary","mk_status","property collaborator"
"goal2sat::imp","commander boundary","relevancy_enabled","predicate non-void-command"
"goal2sat::imp","commander boundary","top_level_relevant","predicate non-void-command"
"goal2sat::imp","commander boundary","mk_clause","command collaborator"
"goal2sat::imp","commander boundary","mk_clause","command collaborator"
"goal2sat::imp","commander boundary","mk_clause","command collaborator"
"goal2sat::imp","commander boundary","mk_root_clause","wrapper stateless"
"goal2sat::imp","commander boundary","mk_root_clause","command collaborator"
"goal2sat::imp","commander boundary","mk_root_clause","command collaborator"
"goal2sat::imp","commander boundary","mk_root_clause","command collaborator"
"goal2sat::imp","commander boundary","add_var","property non-void-command collaborator"
"goal2sat::imp","commander boundary","to_bool_var","property non-void-command collaborator"
"goal2sat::imp","commander boundary","set_expr2var_replay","set collaborator"
"goal2sat::imp","commander boundary","mk_bool_var","property non-void-command collaborator"
"goal2sat::imp","commander boundary","add_bool_var","property non-void-command collaborator"
"goal2sat::imp","commander boundary","force_push","command"
"goal2sat::imp","commander boundary","push","set"
"goal2sat::imp","commander boundary","pop","command collaborator"
"goal2sat::imp","commander boundary","uncache","controller stateless"
"goal2sat::imp","commander boundary","cache","command collaborator"
"goal2sat::imp","commander boundary","get_cached","controller stateless"
"goal2sat::imp","commander boundary","is_cached","predicate collaborator"
"goal2sat::imp","commander boundary","convert_atom","command"
"goal2sat::imp","commander boundary","convert_app","predicate non-void-command"
"goal2sat::imp","commander boundary","process_cached","predicate non-void-command collaborator"
"goal2sat::imp","commander boundary","visit","predicate non-void-command collaborator"
"goal2sat::imp","commander boundary","convert_or","command"
"goal2sat::imp","commander boundary","convert_and","command"
"goal2sat::imp","commander boundary","convert_ite","command collaborator"
"goal2sat::imp","commander boundary","convert_not","command collaborator"
"goal2sat::imp","commander boundary","convert_implies","command collaborator"
"goal2sat::imp","commander boundary","convert_iff","command collaborator"
"goal2sat::imp","commander boundary","interpreted_funs","get property non-void-command collaborator"
"goal2sat::imp","commander boundary","ensure_euf","property non-void-command collaborator"
"goal2sat::imp","commander boundary","convert_euf","command collaborator"
"goal2sat::imp","commander boundary","convert_ba","command collaborator"
"goal2sat::imp","commander boundary","convert","command"
"goal2sat::imp","commander boundary","process","command collaborator"
"goal2sat::imp","commander boundary","internalize","property non-void-command collaborator"
"goal2sat::imp","commander boundary","is_bool_op","predicate collaborator"
"goal2sat::imp","commander boundary","process","command collaborator"
"goal2sat::imp","commander boundary","insert_dep","command collaborator"
"goal2sat::imp","commander boundary","operator()","command collaborator"
"goal2sat::imp","commander boundary","assumptions","command collaborator"
"goal2sat::imp","commander boundary","operator()","command collaborator"
"goal2sat::imp","commander boundary","add_assertion","command collaborator"
"goal2sat::imp","commander boundary","update_model","command collaborator"
"goal2sat::imp","commander boundary","user_push","command"
"goal2sat::imp","commander boundary","user_pop","command"
"unsupported_bool_proc","commander degenerate","operator()","empty"
"unsupported_bool_proc","commander degenerate","operator()","empty"
"unsupported_bool_proc","commander degenerate","operator()","command collaborator"
"relevancy_propagator","entity boundary","get_context","get collaborator"
"relevancy_propagator","entity boundary","mk_relevancy_eh","property non-void-command factory collaborator"
"relevancy_propagator","entity boundary","relevancy_propagator::relevancy_propagator","constructor"
"relevancy_propagator","entity boundary","relevancy_propagator::enabled","predicate"
"relevancy_propagator","entity boundary","relevancy_propagator::get_region","property collaborator"
"relevancy_propagator","entity boundary","relevancy_propagator::get_manager","property collaborator"
"relevancy_propagator","entity boundary","relevancy_propagator::add_dependency","command collaborator"
"relevancy_propagator","entity boundary","relevancy_propagator::mk_or_relevancy_eh","property non-void-command collaborator"
"relevancy_propagator","entity boundary","relevancy_propagator::mk_and_relevancy_eh","property non-void-command collaborator"
"relevancy_propagator","entity boundary","relevancy_propagator::mk_ite_relevancy_eh","property non-void-command collaborator"
"relevancy_propagator","entity boundary","relevancy_propagator::mk_term_ite_relevancy_eh","wrapper stateless"
"sat2goal::imp","entity commander boundary","updt_params","command collaborator"
"sat2goal::imp","entity commander boundary","checkpoint","command"
"sat2goal::imp","entity commander boundary","lit2expr","property non-void-command collaborator"
"sat2goal::imp","entity commander boundary","assert_clauses","command collaborator"
"sat2goal::imp","entity commander boundary","operator()","void-accessor command collaborator"
"sat2goal::imp","entity commander boundary","add_clause","command collaborator"
"sat2goal::imp","entity commander boundary","add_clause","command collaborator"
"check_table_plugin::select_equal_and_project_fn","pure-controller degenerate small-class","operator()","controller stateless"
"sat2goal::scoped_set_imp","empty","~scoped_set_imp","destructor"
"drup_checker","commander","add_units","command"
"drup_checker","commander","check_assertion_redundant","empty"
"drup_checker","commander","check_clause","empty"
"drup_checker","commander","check_drup","command collaborator"
"drup_checker","commander","drup_checker","constructor"
"drup_checker","commander","add","command collaborator"
"cmp","pure-controller degenerate","operator()","controller stateless"
"cmp","pure-controller degenerate","operator()","controller stateless"
"cmp","pure-controller degenerate","operator()","controller stateless"
"arith_eq_adapter","boundary","get_context","property collaborator"
"arith_eq_adapter","boundary","get_manager","property collaborator"
"arith_eq_adapter","boundary","get_enode","property collaborator"
"arith_eq_adapter","boundary","arith_eq_adapter::mk_axioms","command collaborator"
"arith_eq_adapter","boundary","arith_eq_adapter::new_eq_eh","command collaborator"
"arith_eq_adapter","boundary","arith_eq_adapter::new_diseq_eh","command collaborator"
"arith_eq_adapter","boundary","arith_eq_adapter::init_search_eh","command"
"arith_eq_adapter","boundary","arith_eq_adapter::reset_eh","command"
"arith_eq_adapter","boundary","arith_eq_adapter::restart_eh","command collaborator"
"arith_eq_adapter","boundary","arith_eq_adapter::collect_statistics","controller"
"arith_eq_adapter","boundary","arith_eq_adapter::display_already_processed","controller"
"tactic_factory2solver_factory","boundary degenerate small-class","tactic_factory2solver_factory","constructor"
"tactic_factory2solver_factory","boundary degenerate small-class","operator()","wrapper stateless"
"lp_bound_propagator","boundary","only_one_nfixed","predicate non-void-command collaborator"
"lp_bound_propagator","boundary","lp","property collaborator"
"lp_bound_propagator","boundary","lp","property non-void-command collaborator"
"lp_bound_propagator","boundary","upper_bound_is_available","predicate"
"lp_bound_propagator","boundary","lower_bound_is_available","predicate"
"lp_bound_propagator","boundary","try_add_equation_with_internal_fixed_tables","command collaborator"
"lp_bound_propagator","boundary","reset_cheap_eq_eh","controller stateless"
"lp_bound_propagator","boundary","ibounds","get collaborator"
"lp_bound_propagator","boundary","init","command"
"lp_bound_propagator","boundary","get_column_type","get collaborator"
"lp_bound_propagator","boundary","get_lower_bound","property collaborator"
"lp_bound_propagator","boundary","get_lower_bound_rational","property collaborator"
"lp_bound_propagator","boundary","get_upper_bound","property collaborator"
"lp_bound_propagator","boundary","get_upper_bound_rational","property collaborator"
"lp_bound_propagator","boundary","column_is_fixed","get collaborator"
"lp_bound_propagator","boundary","add_bound","command collaborator"
"lp_bound_propagator","boundary","consume","command collaborator"
"lp_bound_propagator","boundary","val","property collaborator"
"lp_bound_propagator","boundary","ival","property collaborator"
"lp_bound_propagator","boundary","column","non-void-command"
"lp_bound_propagator","boundary","is_equal","predicate collaborator"
"lp_bound_propagator","boundary","clear_for_eq","command"
"lp_bound_propagator","boundary","print_expl","property collaborator"
"lp_bound_propagator","boundary","add_eq_on_columns","predicate non-void-command"
"lp_bound_propagator","boundary","col_to_imp","unclassified"
"lp_bound_propagator","boundary","imp_to_col","unclassified"
"lp_bound_propagator","boundary","is_int","predicate collaborator"
"lp_bound_propagator","boundary","explain_fixed_in_row","command collaborator"
"lp_bound_propagator","boundary","explain_fixed_in_row_and_get_base","non-void-command collaborator"
"lp_bound_propagator","boundary","explain_fixed_column","command collaborator"
"lp_bound_propagator","boundary","all_fixed_in_row","predicate collaborator"
"lp_bound_propagator","boundary","num_of_non_fixed_in_row","collaborator"
"lp_bound_propagator","boundary","extract_non_fixed","unclassified"
"lp_bound_propagator","boundary","try_add_equation_with_lp_fixed_tables","command collaborator"
"lp_bound_propagator","boundary","cheap_eq_on_nbase","command"
"lp_bound_propagator","boundary","print_row","property collaborator"
"lp_bound_propagator","boundary","check_insert","controller stateless"
"var_dep_proc","unclassified","var_dep_proc","constructor"
"var_dep_proc","unclassified","operator()","command collaborator"
"var_dep_proc","unclassified","operator()","empty"
"var_dep_proc","unclassified","operator()","empty"
"var_dep_proc","unclassified","all_used","predicate non-void-command"
"sortmax","entity boundary","sortmax","constructor"
"sortmax","entity boundary","operator()","property non-void-command collaborator"
"sortmax","entity boundary","update_assignment","command collaborator"
"sortmax","entity boundary","is_true","predicate non-void-command collaborator"
"sortmax","entity boundary","mk_false","property non-void-command collaborator"
"sortmax","entity boundary","mk_true","property non-void-command collaborator"
"sortmax","entity boundary","mk_max","property non-void-command collaborator"
"sortmax","entity boundary","mk_min","property non-void-command collaborator"
"sortmax","entity boundary","mk_not","property non-void-command collaborator"
"sortmax","entity boundary","pp","property wrapper"
"sortmax","entity boundary","trail","property non-void-command collaborator"
"sortmax","entity boundary","fresh","property non-void-command collaborator"
"sortmax","entity boundary","mk_clause","command collaborator"
"dl_var_lt","data-provider boundary data-class small-class","dl_var_lt","constructor"
"dl_var_lt","data-provider boundary data-class small-class","operator()","get collaborator"
"ema","unclassified","invariant","predicate"
"ema","unclassified","ema","constructor"
"ema","unclassified","ema","constructor"
"ema","unclassified","set_alpha","set"
"ema","unclassified","operatordouble","get"
"ema","unclassified","update","command"
"ema","unclassified","set","set"
"par_tactical","commander boundary degenerate","par_tactical","constructor"
"par_tactical","commander boundary degenerate","name","incidental"
"par_tactical","commander boundary degenerate","operator()","command collaborator"
"par_tactical","commander boundary degenerate","translate","wrapper stateless"
"dl_graph","boundary","check_invariant","predicate collaborator"
"dl_graph","boundary","is_feasible","predicate controller"
"dl_graph","boundary","is_feasible_dbg","predicate"
"dl_graph","boundary","get_num_edges","unclassified"
"dl_graph","boundary","get_num_nodes","unclassified"
"dl_graph","boundary","get_source","get collaborator"
"dl_graph","boundary","get_target","get collaborator"
"dl_graph","boundary","get_explanation","get collaborator"
"dl_graph","boundary","is_enabled","get collaborator"
"dl_graph","boundary","is_feasible","predicate collaborator"
"dl_graph","boundary","get_weight","get collaborator"
"dl_graph","boundary","get_out_edges","get collaborator"
"dl_graph","boundary","get_in_edges","get collaborator"
"dl_graph","boundary","is_almost_feasible","predicate collaborator"
"dl_graph","boundary","undo_assignments","command collaborator"
"dl_graph","boundary","set_gamma","property controller"
"dl_graph","boundary","reset_marks","set collaborator"
"dl_graph","boundary","marks_are_clear","predicate"
"dl_graph","boundary","make_feasible","predicate non-void-command collaborator"
"dl_graph","boundary","find_relaxed_edge","property set collaborator"
"dl_graph","boundary","collect_statistics","collaborator"
"dl_graph","boundary","init_var","command collaborator"
"dl_graph","boundary","add_edge","property non-void-command factory collaborator"
"dl_graph","boundary","enable_edge","predicate non-void-command collaborator"
"dl_graph","boundary","traverse_neg_cycle","command collaborator"
"dl_graph","boundary","traverse_neg_cycle2","command collaborator"
"dl_graph","boundary","can_reach","predicate non-void-command collaborator"
"dl_graph","boundary","reachable","predicate controller"
"dl_graph","boundary","is_connected","controller stateless"
"dl_graph","boundary","find_path","predicate non-void-command collaborator"
"dl_graph","boundary","prune_edges","command collaborator"
"dl_graph","boundary","prune_edges_min1","command collaborator"
"dl_graph","boundary","prune_edges_min2","command collaborator"
"dl_graph","boundary","push","command"
"dl_graph","boundary","pop","command collaborator"
"dl_graph","boundary","set_to_zero","command collaborator"
"dl_graph","boundary","set_to_zero","command collaborator"
"dl_graph","boundary","set_to_zero","command collaborator"
"dl_graph","boundary","acc_assignment","set collaborator"
"dl_graph","boundary","inc_assignment","set collaborator"
"dl_graph","boundary","display","wrapper stateless"
"dl_graph","boundary","display_agl","controller"
"dl_graph","boundary","","empty"
"macro_finder_tactic","boundary","translate","property wrapper"
"macro_finder_tactic","boundary","~macro_finder_tactic","destructor"
"macro_finder_tactic","boundary","name","incidental"
"macro_finder_tactic","boundary","updt_params","command collaborator"
"macro_finder_tactic","boundary","collect_param_descrs","controller stateless"
"macro_finder_tactic","boundary","operator()","wrapper stateless"
"macro_finder_tactic","boundary","cleanup","command collaborator"
"udoc_plugin::rename_fn","entity boundary small-class","operator()","property non-void-command collaborator"
"dyn_ack_eq_justification","unclassified","dyn_ack_eq_justification","constructor"
"dyn_ack_eq_justification","unclassified","get_name","incidental"
"dyn_ack_eq_justification","unclassified","get_antecedents","empty"
"dyn_ack_eq_justification","unclassified","display_debug_info","controller"
"dyn_ack_eq_justification","unclassified","mk_proof","property controller"
"optional","data-provider boundary data-class","destroy","set"
"optional","data-provider boundary data-class","optional","constructor"
"optional","data-provider boundary data-class","optional","constructor"
"optional","data-provider boundary data-class","optional","constructor"
"optional","data-provider boundary data-class","optional","copy-constructor"
"optional","data-provider boundary data-class","optional","copy-constructor"
"optional","data-provider boundary data-class","~optional","destructor"
"optional","data-provider boundary data-class","initialized","get"
"optional","data-provider boundary data-class","operatorbool","get"
"optional","data-provider boundary data-class","operator!","predicate"
"optional","data-provider boundary data-class","get","get collaborator"
"optional","data-provider boundary data-class","set_invalid","command"
"optional","data-provider boundary data-class","operator->","get wrapper"
"optional","data-provider boundary data-class","operator->","get wrapper"
"optional","data-provider boundary data-class","operator*","get wrapper"
"optional","data-provider boundary data-class","operator*","get wrapper"
"optional","data-provider boundary data-class","operator=","get set collaborator"
"optional","data-provider boundary data-class","operator=","get wrapper"
"optional","data-provider boundary data-class","operator=","get set"
"has_quantifier_probe","pure-controller degenerate small-class","operator()","controller stateless"
"dyn_ack_params","commander boundary small-class","dyn_ack_params","constructor"
"dyn_ack_params","commander boundary small-class","dyn_ack_params::updt_params","command collaborator"
"dyn_ack_params","commander boundary small-class","dyn_ack_params::display","wrapper"
"preprocessor_params","commander boundary","preprocessor_params","constructor"
"preprocessor_params","commander boundary","preprocessor_params::updt_local_params","command collaborator"
"preprocessor_params","commander boundary","preprocessor_params::updt_params","command collaborator"
"preprocessor_params","commander boundary","preprocessor_params::display","collaborator"
"engine_base","entity boundary","engine_base","constructor"
"engine_base","entity boundary","get_ground_sat_answer","wrapper"
"engine_base","entity boundary","query","property non-void-command collaborator"
"engine_base","entity boundary","query_from_lvl","wrapper"
"engine_base","entity boundary","reset_statistics","empty"
"engine_base","entity boundary","display_profile","empty"
"engine_base","entity boundary","collect_statistics","empty"
"engine_base","entity boundary","get_num_levels","wrapper"
"engine_base","entity boundary","get_reachable","wrapper"
"engine_base","entity boundary","get_cover_delta","wrapper"
"engine_base","entity boundary","add_cover","wrapper"
"engine_base","entity boundary","add_invariant","wrapper"
"engine_base","entity boundary","display_certificate","wrapper"
"engine_base","entity boundary","get_model","wrapper stateless"
"engine_base","entity boundary","get_rules_along_trace","wrapper"
"engine_base","entity boundary","get_proof","property non-void-command collaborator"
"engine_base","entity boundary","add_callback","wrapper"
"engine_base","entity boundary","add_constraint","wrapper"
"engine_base","entity boundary","updt_params","empty"
"engine_base","entity boundary","cancel","empty"
"engine_base","entity boundary","cleanup","empty"
"theory_seq_params","commander boundary small-class","theory_seq_params","constructor"
"theory_seq_params","commander boundary small-class","theory_seq_params::updt_params","command collaborator"
"sls_eval_plugin","empty","~sls_eval_plugin","destructor"
"is_propositional_probe","boundary degenerate small-class","operator()","wrapper stateless"
"sieve_relation_plugin::filter_fn","pure-controller degenerate small-class","operator()","controller stateless"
"delayed_qa_info","empty","delayed_qa_info","constructor"
"qi_queue","commander","has_work","predicate"
"qi_queue","commander","qi_queue::qi_queue","constructor"
"qi_queue","commander","qi_queue::~qi_queue","destructor"
"qi_queue","commander","qi_queue::setup","command"
"qi_queue","commander","qi_queue::init_parser_vars","command"
"qi_queue","commander","qi_queue::set_values","property non-void-command collaborator"
"qi_queue","commander","qi_queue::get_cost","property non-void-command"
"qi_queue","commander","qi_queue::get_new_gen","non-void-command"
"qi_queue","commander","qi_queue::insert","command"
"qi_queue","commander","qi_queue::instantiate","command collaborator"
"qi_queue","commander","qi_queue::display_instance_profile","command"
"qi_queue","commander","qi_queue::instantiate","void-accessor command collaborator"
"qi_queue","commander","qi_queue::push_scope","command collaborator"
"qi_queue","commander","qi_queue::pop_scope","command"
"qi_queue","commander","qi_queue::reset","command"
"qi_queue","commander","qi_queue::init_search_eh","command"
"qi_queue","commander","qi_queue::final_check_eh","predicate non-void-command collaborator"
"qi_queue","commander","qi_queue::display_delayed_instances_stats","controller"
"qi_queue","commander","qi_queue::get_min_max_costs","void-accessor"
"qi_queue","commander","qi_queue::collect_statistics","collaborator"
"remove_obj_pair_map","commander small-class","remove_obj_pair_map","constructor"
"remove_obj_pair_map","commander small-class","undo","command"
"seq_offset_eq","boundary","empty","predicate"
"seq_offset_eq","boundary","contains","predicate collaborator"
"seq_offset_eq","boundary","seq_offset_eq::seq_offset_eq","constructor"
"seq_offset_eq","boundary","seq_offset_eq::match_x_minus_y","predicate collaborator"
"seq_offset_eq","boundary","seq_offset_eq::len_offset","command collaborator"
"seq_offset_eq","boundary","seq_offset_eq::prop_arith_to_len_offset","command collaborator"
"seq_offset_eq","boundary","seq_offset_eq::find","predicate"
"seq_offset_eq","boundary","seq_offset_eq::contains","predicate non-void-command collaborator"
"seq_offset_eq","boundary","seq_offset_eq::propagate","predicate non-void-command"
"seq_offset_eq","boundary","seq_offset_eq::pop_scope_eh","command"
"seq_regex","boundary","push_scope","empty"
"seq_regex","boundary","pop_scope","empty"
"seq_regex","boundary","can_propagate","incidental"
"seq_regex","boundary","propagate","incidental"
"seq_regex","boundary","seq_regex::seq_regex","constructor"
"seq_regex","boundary","seq_regex::u","property collaborator"
"seq_regex","boundary","seq_regex::re","property collaborator"
"seq_regex","boundary","seq_regex::str","property collaborator"
"seq_regex","boundary","seq_regex::seq_rw","property collaborator"
"seq_regex","boundary","seq_regex::sk","property collaborator"
"seq_regex","boundary","seq_regex::a","property collaborator"
"seq_regex","boundary","seq_regex::rewrite","command collaborator"
"seq_regex","boundary","seq_regex::is_string_equality","predicate non-void-command collaborator"
"seq_regex","boundary","seq_regex::propagate_in_re","command collaborator"
"seq_regex","boundary","seq_regex::get_overapprox_regex","property non-void-command collaborator"
"seq_regex","boundary","seq_regex::block_if_empty","predicate non-void-command collaborator"
"seq_regex","boundary","seq_regex::propagate_accept","command collaborator"
"seq_regex","boundary","seq_regex::block_unfolding","predicate non-void-command"
"seq_regex","boundary","seq_regex::coallesce_in_re","predicate non-void-command collaborator"
"seq_regex","boundary","seq_regex::symmetric_diff","property non-void-command collaborator"
"seq_regex","boundary","seq_regex::is_nullable_wrapper","property non-void-command collaborator"
"seq_regex","boundary","seq_regex::mk_derivative_wrapper","property non-void-command collaborator"
"seq_regex","boundary","seq_regex::propagate_eq","command collaborator"
"seq_regex","boundary","seq_regex::propagate_ne","command collaborator"
"seq_regex","boundary","seq_regex::is_member","predicate non-void-command collaborator"
"seq_regex","boundary","seq_regex::propagate_is_non_empty","command collaborator"
"seq_regex","boundary","seq_regex::mk_deriv_accept","property non-void-command collaborator"
"seq_regex","boundary","seq_regex::get_derivative_targets","command collaborator"
"seq_regex","boundary","seq_regex::get_cofactors","command collaborator"
"seq_regex","boundary","seq_regex::propagate_is_empty","command collaborator"
"seq_regex","boundary","seq_regex::mk_first","property non-void-command collaborator"
"seq_regex","boundary","seq_regex::get_state_id","non-void-command collaborator"
"seq_regex","boundary","seq_regex::get_expr_from_id","property non-void-command collaborator"
"seq_regex","boundary","seq_regex::can_be_in_cycle","collaborator incidental"
"seq_regex","boundary","seq_regex::update_state_graph","predicate non-void-command collaborator"
"seq_regex","boundary","seq_regex::state_str","property non-void-command collaborator"
"seq_regex","boundary","seq_regex::expr_id_str","controller stateless"
"fact_reader","data-provider small-class","fact_reader","constructor"
"fact_reader","data-provider small-class","get","property collaborator"
"fact_reader","data-provider small-class","size","unclassified"
"nlsat_tactic","boundary","translate","property wrapper"
"nlsat_tactic","boundary","~nlsat_tactic","destructor"
"nlsat_tactic","boundary","name","incidental"
"nlsat_tactic","boundary","updt_params","command collaborator"
"nlsat_tactic","boundary","collect_param_descrs","command collaborator"
"nlsat_tactic","boundary","operator()","controller"
"nlsat_tactic","boundary","cleanup","empty"
"nlsat_tactic","boundary","collect_statistics","controller"
"nlsat_tactic","boundary","reset_statistics","command"
"include_cmd","commander boundary","include_cmd","constructor"
"include_cmd","commander boundary","get_usage","incidental"
"include_cmd","commander boundary","get_descr","collaborator incidental"
"include_cmd","commander boundary","get_arity","incidental"
"include_cmd","commander boundary","next_arg_kind","collaborator incidental"
"include_cmd","commander boundary","set_next_arg","set"
"include_cmd","commander boundary","failure_cleanup","empty"
"include_cmd","commander boundary","execute","controller"
"include_cmd","commander boundary","prepare","command collaborator"
"include_cmd","commander boundary","reset","set collaborator"
"include_cmd","commander boundary","finalize","command collaborator"
"dimacs_pp","commander boundary","dimacs_pp","constructor"
"dimacs_pp","commander boundary","reset","set"
"dimacs_pp","commander boundary","init_from_dimacs","predicate non-void-command collaborator"
"dimacs_pp","commander boundary","init_formula","command collaborator"
"dimacs_pp","commander boundary","pp_formula","command collaborator"
"dimacs_pp","commander boundary","pp_defs","controller"
"sat2goal","pure-controller small-class","sat2goal::sat2goal","constructor"
"sat2goal","pure-controller small-class","sat2goal::collect_param_descrs","controller stateless"
"sat2goal","pure-controller small-class","sat2goal::operator()","controller"
"almost_cg_table","entity commander boundary","reset","command collaborator"
"almost_cg_table","entity commander boundary","erase","command collaborator"
"almost_cg_table","entity commander boundary","empty","predicate"
"almost_cg_table","entity commander boundary","almost_cg_table::almost_cg_table","constructor"
"almost_cg_table","entity commander boundary","almost_cg_table::reset","command"
"almost_cg_table","entity commander boundary","almost_cg_table::insert","command collaborator"
"almost_cg_table","entity commander boundary","almost_cg_table::find","property non-void-command collaborator"
"b_justification","data-provider boundary","b_justification","constructor"
"b_justification","data-provider boundary","b_justification","constructor"
"b_justification","data-provider boundary","b_justification","constructor"
"b_justification","data-provider boundary","b_justification","constructor"
"b_justification","data-provider boundary","get_kind","property wrapper"
"b_justification","data-provider boundary","get_clause","property collaborator"
"b_justification","data-provider boundary","get_justification","property collaborator"
"b_justification","data-provider boundary","get_literal","property collaborator"
"b_justification","data-provider boundary","operator==","predicate"
"b_justification","data-provider boundary","operator!=","predicate"
"act_case_split_queue","commander boundary","act_case_split_queue","constructor"
"act_case_split_queue","commander boundary","activity_increased_eh","command collaborator"
"act_case_split_queue","commander boundary","activity_decreased_eh","command collaborator"
"act_case_split_queue","commander boundary","mk_var_eh","command collaborator"
"act_case_split_queue","commander boundary","del_var_eh","command collaborator"
"act_case_split_queue","commander boundary","unassign_var_eh","command collaborator"
"act_case_split_queue","commander boundary","relevant_eh","empty"
"act_case_split_queue","commander boundary","init_search_eh","empty"
"act_case_split_queue","commander boundary","end_search_eh","empty"
"act_case_split_queue","commander boundary","reset","command"
"act_case_split_queue","commander boundary","push_scope","empty"
"act_case_split_queue","commander boundary","pop_scope","empty"
"act_case_split_queue","commander boundary","next_case_split","void-accessor command collaborator"
"act_case_split_queue","commander boundary","display","command collaborator"
"dact_case_split_queue","commander","dact_case_split_queue","constructor"
"dact_case_split_queue","commander","activity_increased_eh","command collaborator"
"dact_case_split_queue","commander","activity_decreased_eh","command collaborator"
"dact_case_split_queue","commander","mk_var_eh","command collaborator"
"dact_case_split_queue","commander","del_var_eh","command collaborator"
"dact_case_split_queue","commander","relevant_eh","empty"
"dact_case_split_queue","commander","init_search_eh","empty"
"dact_case_split_queue","commander","end_search_eh","empty"
"dact_case_split_queue","commander","reset","command"
"dact_case_split_queue","commander","push_scope","empty"
"dact_case_split_queue","commander","pop_scope","empty"
"dact_case_split_queue","commander","next_case_split","void-accessor command collaborator"
"instr_mk_unary_singleton","unclassified","instr_mk_unary_singleton","constructor"
"instr_mk_unary_singleton","unclassified","perform","predicate non-void-command collaborator"
"instr_mk_unary_singleton","unclassified","display_head_impl","property controller"
"instr_mk_unary_singleton","unclassified","make_annotations","controller"
"rel_goal_case_split_queue","commander boundary","activity_increased_eh","empty"
"rel_goal_case_split_queue","commander boundary","activity_decreased_eh","empty"
"rel_goal_case_split_queue","commander boundary","mk_var_eh","empty"
"rel_goal_case_split_queue","commander boundary","del_var_eh","empty"
"rel_goal_case_split_queue","commander boundary","unassign_var_eh","empty"
"rel_goal_case_split_queue","commander boundary","relevant_eh","command collaborator"
"rel_goal_case_split_queue","commander boundary","internalize_instance_eh","empty"
"rel_goal_case_split_queue","commander boundary","init_search_eh","command"
"rel_goal_case_split_queue","commander boundary","end_search_eh","set"
"rel_goal_case_split_queue","commander boundary","reset","command"
"rel_goal_case_split_queue","commander boundary","push_scope","command collaborator"
"rel_goal_case_split_queue","commander boundary","pop_scope","command collaborator"
"rel_goal_case_split_queue","commander boundary","next_case_split_core","void-accessor command collaborator"
"rel_goal_case_split_queue","commander boundary","next_case_split","void-accessor command collaborator"
"rel_goal_case_split_queue","commander boundary","display_core","controller stateless"
"rel_goal_case_split_queue","commander boundary","display","command collaborator"
"rel_goal_case_split_queue","commander boundary","assign_lit_eh","command collaborator"
"rel_goal_case_split_queue","commander boundary","get_generation","non-void-command collaborator"
"rel_goal_case_split_queue","commander boundary","add_to_queue2","command collaborator"
"rel_goal_case_split_queue","commander boundary","set_generation_rec","wrapper"
"rel_goal_case_split_queue","commander boundary","lower_generation","command"
"rel_goal_case_split_queue","commander boundary","set_goal","set collaborator"
"rel_goal_case_split_queue","commander boundary","set_global_generation","command"
"theory_aware_branching_queue","commander boundary","theory_aware_branching_queue","constructor"
"theory_aware_branching_queue","commander boundary","activity_increased_eh","command collaborator"
"theory_aware_branching_queue","commander boundary","activity_decreased_eh","command collaborator"
"theory_aware_branching_queue","commander boundary","mk_var_eh","command collaborator"
"theory_aware_branching_queue","commander boundary","del_var_eh","command collaborator"
"theory_aware_branching_queue","commander boundary","unassign_var_eh","command collaborator"
"theory_aware_branching_queue","commander boundary","relevant_eh","empty"
"theory_aware_branching_queue","commander boundary","init_search_eh","empty"
"theory_aware_branching_queue","commander boundary","end_search_eh","empty"
"theory_aware_branching_queue","commander boundary","reset","command"
"theory_aware_branching_queue","commander boundary","push_scope","empty"
"theory_aware_branching_queue","commander boundary","pop_scope","empty"
"theory_aware_branching_queue","commander boundary","next_case_split","void-accessor command collaborator"
"theory_aware_branching_queue","commander boundary","add_theory_aware_branching_info","command collaborator"
"theory_aware_branching_queue","commander boundary","display","command collaborator"
"conflict_resolution","boundary","setup","empty"
"conflict_resolution","boundary","mark_justification","command collaborator"
"conflict_resolution","boundary","mark_eq","command collaborator"
"conflict_resolution","boundary","mark_literal","command collaborator"
"conflict_resolution","boundary","mark_justified_eq","command collaborator"
"conflict_resolution","boundary","get_context","get collaborator"
"conflict_resolution","boundary","get_manager","get collaborator"
"conflict_resolution","boundary","get_new_scope_lvl","get"
"conflict_resolution","boundary","get_lemma_intern_lvl","get"
"conflict_resolution","boundary","get_lemma_num_literals","unclassified"
"conflict_resolution","boundary","get_lemma_literals","property non-void-command collaborator"
"conflict_resolution","boundary","get_lemma_atoms","property non-void-command collaborator"
"conflict_resolution","boundary","release_lemma_atoms","command"
"conflict_resolution","boundary","get_lemma_proof","get collaborator"
"conflict_resolution","boundary","begin_unsat_core","property collaborator"
"conflict_resolution","boundary","end_unsat_core","property collaborator"
"conflict_resolution","boundary","conflict_resolution::conflict_resolution","constructor"
"conflict_resolution","boundary","conflict_resolution::~conflict_resolution","destructor"
"conflict_resolution","boundary","conflict_resolution::mark_enodes_in_trans","controller stateless"
"conflict_resolution","boundary","conflict_resolution::find_common_ancestor","controller stateless"
"conflict_resolution","boundary","conflict_resolution::eq_justification2literals","command collaborator"
"conflict_resolution","boundary","conflict_resolution::eq_branch2literals","void-accessor command collaborator"
"conflict_resolution","boundary","conflict_resolution::eq2literals","command collaborator"
"conflict_resolution","boundary","conflict_resolution::justification2literals_core","command collaborator"
"conflict_resolution","boundary","conflict_resolution::process_justifications","command collaborator"
"conflict_resolution","boundary","conflict_resolution::unmark_justifications","command collaborator"
"conflict_resolution","boundary","conflict_resolution::justification2literals","command collaborator"
"conflict_resolution","boundary","conflict_resolution::eq2literals","command collaborator"
"conflict_resolution","boundary","conflict_resolution::get_justification_max_lvl","non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::get_max_lvl","non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::process_antecedent","void-accessor command collaborator"
"conflict_resolution","boundary","conflict_resolution::process_justification","command collaborator"
"conflict_resolution","boundary","conflict_resolution::skip_literals_above_conflict_level","non-void-command"
"conflict_resolution","boundary","conflict_resolution::initialize_resolve","predicate non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::finalize_resolve","command collaborator"
"conflict_resolution","boundary","conflict_resolution::resolve","predicate non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::get_lemma_approx_level_set","property non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::reset_unmark","command"
"conflict_resolution","boundary","conflict_resolution::reset_unmark_and_justifications","command"
"conflict_resolution","boundary","conflict_resolution::process_antecedent_for_minimization","predicate non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::process_justification_for_minimization","predicate non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::implied_by_marked","predicate non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::minimize_lemma","command collaborator"
"conflict_resolution","boundary","conflict_resolution::get_proof","property non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::norm_eq_proof","property non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::get_proof","property non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::get_proof","property non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::get_proof","property non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::get_proof","property non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::reset","command"
"conflict_resolution","boundary","conflict_resolution::visit_b_justification","predicate non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::mk_proof","command collaborator"
"conflict_resolution","boundary","conflict_resolution::visit_trans_proof","predicate non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::visit_eq_justications","predicate non-void-command collaborator"
"conflict_resolution","boundary","conflict_resolution::mk_proof","void-accessor command collaborator"
"conflict_resolution","boundary","conflict_resolution::mk_proof","command collaborator"
"conflict_resolution","boundary","conflict_resolution::mk_conflict_proof","command collaborator"
"conflict_resolution","boundary","conflict_resolution::process_antecedent_for_unsat_core","command collaborator"
"conflict_resolution","boundary","conflict_resolution::process_justification_for_unsat_core","command collaborator"
"conflict_resolution","boundary","conflict_resolution::mk_unsat_core","command collaborator"
"clause_lt","pure-controller degenerate small-class","operator()","controller stateless"
"set_true_first_trail","boundary small-class","set_true_first_trail","constructor"
"set_true_first_trail","boundary small-class","undo","wrapper"
"unsat_core_learner","boundary","unsat_core_learner","constructor"
"unsat_core_learner","boundary","get_manager","get collaborator"
"unsat_core_learner","boundary","is_a","predicate non-void-command collaborator"
"unsat_core_learner","boundary","is_b","predicate non-void-command collaborator"
"unsat_core_learner","boundary","is_h","predicate non-void-command collaborator"
"unsat_core_learner","boundary","is_b_pure","predicate non-void-command collaborator"
"unsat_core_learner","boundary","is_b_open","predicate non-void-command collaborator"
"unsat_core_learner","boundary","unsat_core_learner::~unsat_core_learner","destructor"
"unsat_core_learner","boundary","unsat_core_learner::register_plugin","command collaborator"
"unsat_core_learner","boundary","unsat_core_learner::compute_unsat_core","command collaborator"
"unsat_core_learner","boundary","unsat_core_learner::compute_partial_core","command collaborator"
"unsat_core_learner","boundary","unsat_core_learner::finalize","controller"
"unsat_core_learner","boundary","unsat_core_learner::is_closed","predicate non-void-command collaborator"
"unsat_core_learner","boundary","unsat_core_learner::set_closed","command"
"unsat_core_learner","boundary","unsat_core_learner::add_lemma_to_core","command collaborator"
"var_counter","commander","var_counter::count_vars","command"
"var_counter","commander","var_counter::get_max_var","non-void-command"
"var_counter","commander","var_counter::get_max_var","non-void-command collaborator"
"var_counter","commander","var_counter::get_next_var","non-void-command collaborator"
"pp_lit","empty","pp_lit","constructor"
"fingerprint_set","boundary","size","unclassified"
"fingerprint_set","boundary","fingerprint_set::mk_dummy","property non-void-command collaborator"
"fingerprint_set","boundary","fingerprint_set::insert","property non-void-command factory collaborator"
"fingerprint_set","boundary","fingerprint_set::contains","predicate non-void-command collaborator"
"fingerprint_set","boundary","fingerprint_set::reset","command"
"fingerprint_set","boundary","fingerprint_set::push_scope","command"
"fingerprint_set","boundary","fingerprint_set::pop_scope","command"
"fingerprint_set","boundary","fingerprint_set::display","collaborator"
"fingerprint_set","boundary","fingerprint_set::slow_contains","predicate controller"
"trans_justification","empty","trans_justification","constructor"
"zstring","data-provider","zstring","constructor"
"zstring","data-provider","zstring","constructor"
"zstring","data-provider","zstring","constructor"
"zstring","data-provider","length","unclassified"
"zstring","data-provider","operator[]","get"
"zstring","data-provider","empty","predicate"
"zstring","data-provider","zstring::is_escape_char","wrapper stateless"
"zstring","data-provider","zstring::zstring","constructor"
"zstring","data-provider","zstring::get_encoding","wrapper stateless"
"zstring","data-provider","zstring::well_formed","predicate wrapper"
"zstring","data-provider","zstring::zstring","constructor"
"zstring","data-provider","zstring::reverse","property"
"zstring","data-provider","zstring::replace","property"
"zstring","data-provider","zstring::encode","property"
"zstring","data-provider","zstring::suffixof","predicate"
"zstring","data-provider","zstring::prefixof","predicate"
"zstring","data-provider","zstring::contains","predicate"
"zstring","data-provider","zstring::indexofu","property"
"zstring","data-provider","zstring::last_indexof","property"
"zstring","data-provider","zstring::extract","property"
"zstring","data-provider","zstring::hash","unclassified"
"zstring","data-provider","zstring::operator+","property controller"
"zstring","data-provider","zstring::operator==","predicate"
"zstring","data-provider","zstring::operator!=","predicate"
"lemma_eq_generalizer","commander boundary small-class","lemma_eq_generalizer","constructor"
"lemma_eq_generalizer","commander boundary small-class","lemma_eq_generalizer::operator()","command collaborator"
"FPRMExpr","empty","FPRMExpr","constructor"
"theory_array_base","boundary","has_propagate_up_trail","predicate"
"theory_array_base","boundary","set_prop_upward","empty"
"theory_array_base","boundary","found_unsupported_op","command collaborator"
"theory_array_base","boundary","found_unsupported_op","command collaborator"
"theory_array_base","boundary","is_store","predicate collaborator"
"theory_array_base","boundary","is_map","predicate collaborator"
"theory_array_base","boundary","is_select","predicate collaborator"
"theory_array_base","boundary","is_default","predicate collaborator"
"theory_array_base","boundary","is_const","predicate collaborator"
"theory_array_base","boundary","is_array_ext","predicate collaborator"
"theory_array_base","boundary","is_as_array","predicate collaborator"
"theory_array_base","boundary","is_array_sort","predicate collaborator"
"theory_array_base","boundary","is_array_sort","predicate collaborator"
"theory_array_base","boundary","is_set_has_size","predicate collaborator"
"theory_array_base","boundary","is_set_card","predicate collaborator"
"theory_array_base","boundary","is_store","predicate collaborator"
"theory_array_base","boundary","is_map","predicate collaborator"
"theory_array_base","boundary","is_select","predicate collaborator"
"theory_array_base","boundary","is_const","predicate collaborator"
"theory_array_base","boundary","is_as_array","predicate collaborator"
"theory_array_base","boundary","is_default","predicate collaborator"
"theory_array_base","boundary","is_array_sort","predicate collaborator"
"theory_array_base","boundary","is_set_has_size","predicate collaborator"
"theory_array_base","boundary","is_set_carde","predicate collaborator"
"theory_array_base","boundary","mk_select","property non-void-command collaborator"
"theory_array_base","boundary","assert_store_axiom1","controller stateless"
"theory_array_base","boundary","~theory_array_base","destructor"
"theory_array_base","boundary","theory_array_base::theory_array_base","constructor"
"theory_array_base","boundary","theory_array_base::add_weak_var","command collaborator"
"theory_array_base","boundary","theory_array_base::found_unsupported_op","command collaborator"
"theory_array_base","boundary","theory_array_base::mk_select","property non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::mk_select_reduce","property non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::mk_store","property non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::mk_default","property non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::get_dimension","collaborator"
"theory_array_base","boundary","theory_array_base::assert_axiom","command collaborator"
"theory_array_base","boundary","theory_array_base::assert_axiom","command collaborator"
"theory_array_base","boundary","theory_array_base::assert_axiom","command collaborator"
"theory_array_base","boundary","theory_array_base::assert_store_axiom1_core","command collaborator"
"theory_array_base","boundary","theory_array_base::assert_store_axiom2_core","command collaborator"
"theory_array_base","boundary","theory_array_base::assert_store_axiom2","predicate non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::register_sort","property non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::already_diseq","predicate non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::assert_extensionality","predicate non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::assert_congruent","command collaborator"
"theory_array_base","boundary","theory_array_base::assert_extensionality_core","command collaborator"
"theory_array_base","boundary","theory_array_base::assert_congruent_core","command collaborator"
"theory_array_base","boundary","theory_array_base::instantiate_lambda","property non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::can_propagate","predicate non-void-command"
"theory_array_base","boundary","theory_array_base::propagate","command"
"theory_array_base","boundary","theory_array_base::is_shared","predicate collaborator"
"theory_array_base","boundary","theory_array_base::is_beta_redex","predicate collaborator"
"theory_array_base","boundary","theory_array_base::is_select_arg","predicate non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::collect_shared_vars","command collaborator"
"theory_array_base","boundary","theory_array_base::mk_interface_eqs","non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::push_scope_eh","command"
"theory_array_base","boundary","theory_array_base::pop_scope_eh","command collaborator"
"theory_array_base","boundary","theory_array_base::restore_sorts","command collaborator"
"theory_array_base","boundary","theory_array_base::reset_eh","command"
"theory_array_base","boundary","theory_array_base::reset_queues","command"
"theory_array_base","boundary","theory_array_base::set_default","set collaborator"
"theory_array_base","boundary","theory_array_base::get_default","get non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::mg_find","property set collaborator"
"theory_array_base","boundary","theory_array_base::mg_merge","command collaborator"
"theory_array_base","boundary","theory_array_base::init_model","command collaborator"
"theory_array_base","boundary","theory_array_base::is_unspecified_default_ok","predicate collaborator"
"theory_array_base","boundary","theory_array_base::collect_defaults","command collaborator"
"theory_array_base","boundary","theory_array_base::get_select_set","property non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::collect_selects","command collaborator"
"theory_array_base","boundary","theory_array_base::propagate_select_to_store_parents","command collaborator"
"theory_array_base","boundary","theory_array_base::propagate_selects_to_store_parents","command collaborator"
"theory_array_base","boundary","theory_array_base::propagate_selects","command collaborator"
"theory_array_base","boundary","theory_array_base::finalize_model","command collaborator"
"theory_array_base","boundary","theory_array_base::include_func_interp","predicate non-void-command collaborator"
"theory_array_base","boundary","theory_array_base::mk_value","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","get_normalize_factor","get collaborator"
"farkas_util","entity minimal-entity boundary","set_split_literals","set"
"farkas_util","entity minimal-entity boundary","farkas_util::farkas_util","constructor"
"farkas_util","entity minimal-entity boundary","farkas_util::mk_coerce","void-accessor command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::mk_add","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::mk_mul","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::mk_le","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::mk_ge","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::mk_gt","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::mk_lt","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::mul","void-accessor command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::is_int_sort","predicate non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::is_int_sort","predicate non-void-command"
"farkas_util","entity minimal-entity boundary","farkas_util::normalize_coeffs","command"
"farkas_util","entity minimal-entity boundary","farkas_util::mk_one","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::fix_sign","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::partition_ineqs","command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::find","non-void-command"
"farkas_util","entity minimal-entity boundary","farkas_util::merge","command"
"farkas_util","entity minimal-entity boundary","farkas_util::process_term","non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::extract_consequence","property non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::fix_dl","void-accessor command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::reset","command"
"farkas_util","entity minimal-entity boundary","farkas_util::add","predicate non-void-command collaborator"
"farkas_util","entity minimal-entity boundary","farkas_util::get","property non-void-command collaborator"
"check_at_labels","entity commander boundary","check_at_labels","constructor"
"check_at_labels","entity commander boundary","check_at_labels::check","predicate set collaborator"
"check_at_labels","entity commander boundary","check_at_labels::count_at_labels_lit","non-void-command collaborator"
"check_at_labels","entity commander boundary","check_at_labels::count_at_labels_neg","non-void-command collaborator"
"check_at_labels","entity commander boundary","check_at_labels::count_at_labels_pos","non-void-command collaborator"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::for_each_relevant_expr","constructor"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::operator()","collaborator incidental"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::reset","command"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::is_relevant","predicate non-void-command collaborator"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::get_assignment","property non-void-command collaborator"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::process","command collaborator"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::process_app","command collaborator"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::process_relevant_child","command collaborator"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::process_and","command collaborator"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::process_or","command collaborator"
"for_each_relevant_expr","entity commander boundary","for_each_relevant_expr::process_ite","command collaborator"
"check_pattern_proc","pure-controller degenerate","operator()","empty"
"check_pattern_proc","pure-controller degenerate","operator()","empty"
"check_pattern_proc","pure-controller degenerate","operator()","controller stateless"
"add_th_var_trail","commander boundary small-class","add_th_var_trail","constructor"
"add_th_var_trail","commander boundary small-class","undo","command collaborator"
"var_pair","unclassified","var_pair","constructor"
"var_pair","unclassified","is_equal","predicate controller"
"var_pair","unclassified","display","wrapper"
"var_pair","unclassified","populate_inst_sets","empty"
"replace_th_var_trail","commander small-class","replace_th_var_trail","constructor"
"replace_th_var_trail","commander small-class","undo","command"
"var","data-provider boundary lazy-class","get_idx","get"
"var","data-provider boundary lazy-class","_get_sort","get collaborator"
"var","data-provider boundary lazy-class","get_size","wrapper stateless"
"unit_resolution_justification","unclassified","has_del_eh","predicate"
"unit_resolution_justification","unclassified","del_eh","command collaborator"
"unit_resolution_justification","unclassified","get_name","incidental"
"unit_resolution_justification","unclassified","unit_resolution_justification::unit_resolution_justification","constructor"
"unit_resolution_justification","unclassified","unit_resolution_justification::unit_resolution_justification","constructor"
"unit_resolution_justification","unclassified","unit_resolution_justification::~unit_resolution_justification","destructor"
"unit_resolution_justification","unclassified","unit_resolution_justification::get_antecedents","controller"
"unit_resolution_justification","unclassified","unit_resolution_justification::mk_proof","property controller"
"x_gle_t","pure-controller","x_gle_t","constructor"
"x_gle_t","pure-controller","get_kind","incidental"
"x_gle_t","pure-controller","process_auf","controller"
"x_gle_t","pure-controller","populate_inst_sets","controller"
"lookahead::compare","data-provider boundary small-class","operator()","predicate collaborator"
"scoped_level","empty","scoped_level","constructor"
"scoped_level","empty","~scoped_level","destructor"
"eq_propagation_justification","unclassified","eq_propagation_justification","constructor"
"eq_propagation_justification","unclassified","get_name","incidental"
"eq_propagation_justification","unclassified","eq_propagation_justification::get_antecedents","controller"
"eq_propagation_justification","unclassified","eq_propagation_justification::mk_proof","property controller"
"format_decl_plugin","entity boundary","set_manager","set collaborator"
"format_decl_plugin","entity boundary","format_decl_plugin","constructor"
"format_decl_plugin","entity boundary","finalize","command"
"format_decl_plugin","entity boundary","mk_fresh","wrapper stateless"
"format_decl_plugin","entity boundary","mk_sort","get wrapper"
"format_decl_plugin","entity boundary","mk_func_decl","property non-void-command collaborator"
"simple_justification","unclassified","get_name","incidental"
"simple_justification","unclassified","simple_justification::simple_justification","constructor"
"simple_justification","unclassified","simple_justification::get_antecedents","controller"
"simple_justification","unclassified","simple_justification::antecedent2proof","predicate controller"
"theory_propagation_justification","unclassified","theory_propagation_justification","constructor"
"theory_propagation_justification","unclassified","get_name","incidental"
"theory_propagation_justification","unclassified","theory_propagation_justification::mk_proof","property non-void-command collaborator"
"theory_propagation_justification","unclassified","theory_propagation_justification::log","controller"
"Z3_optimize_ref","empty","Z3_optimize_ref","constructor"
"Z3_optimize_ref","empty","~Z3_optimize_ref","destructor"
"theory_conflict_justification","unclassified","theory_conflict_justification","constructor"
"theory_conflict_justification","unclassified","get_name","incidental"
"theory_conflict_justification","unclassified","theory_conflict_justification::mk_proof","property non-void-command collaborator"
"theory_conflict_justification","unclassified","theory_conflict_justification::log","controller"
"solver_subsumption_tactic","commander boundary","push","command"
"solver_subsumption_tactic","commander boundary","pop","command"
"solver_subsumption_tactic","commander boundary","assert_expr","command collaborator"
"solver_subsumption_tactic","commander boundary","subsumed","predicate non-void-command collaborator"
"solver_subsumption_tactic","commander boundary","simplify","predicate non-void-command collaborator"
"solver_subsumption_tactic","commander boundary","simplify","command collaborator"
"solver_subsumption_tactic","commander boundary","solver_subsumption_tactic","constructor"
"solver_subsumption_tactic","commander boundary","translate","property wrapper"
"solver_subsumption_tactic","commander boundary","name","incidental"
"solver_subsumption_tactic","commander boundary","updt_params","command collaborator"
"solver_subsumption_tactic","commander boundary","collect_param_descrs","controller stateless"
"solver_subsumption_tactic","commander boundary","operator()","set collaborator"
"solver_subsumption_tactic","commander boundary","cleanup","empty"
"ext_theory_simple_justification","entity boundary","ext_theory_simple_justification","constructor"
"ext_theory_simple_justification","entity boundary","has_del_eh","predicate"
"ext_theory_simple_justification","entity boundary","del_eh","command collaborator"
"ext_theory_simple_justification","entity boundary","get_from_theory","get collaborator"
"fixedpoint","entity boundary","fixedpoint","constructor"
"fixedpoint","entity boundary","fixedpoint","copy-constructor"
"fixedpoint","entity boundary","~fixedpoint","destructor"
"fixedpoint","entity boundary","operator=","get set"
"fixedpoint","entity boundary","operatorZ3_fixedpoint","get"
"fixedpoint","entity boundary","from_string","property non-void-command collaborator"
"fixedpoint","entity boundary","from_file","property non-void-command collaborator"
"fixedpoint","entity boundary","add_rule","command collaborator"
"fixedpoint","entity boundary","add_fact","command"
"fixedpoint","entity boundary","query","property non-void-command collaborator"
"fixedpoint","entity boundary","query","property non-void-command collaborator"
"fixedpoint","entity boundary","get_answer","property non-void-command collaborator"
"fixedpoint","entity boundary","reason_unknown","property non-void-command"
"fixedpoint","entity boundary","update_rule","command collaborator"
"fixedpoint","entity boundary","get_num_levels","non-void-command collaborator"
"fixedpoint","entity boundary","get_cover_delta","property non-void-command collaborator"
"fixedpoint","entity boundary","add_cover","command collaborator"
"fixedpoint","entity boundary","statistics","property collaborator"
"fixedpoint","entity boundary","register_relation","command collaborator"
"fixedpoint","entity boundary","assertions","property collaborator"
"fixedpoint","entity boundary","rules","property collaborator"
"fixedpoint","entity boundary","set","command collaborator"
"fixedpoint","entity boundary","help","property"
"fixedpoint","entity boundary","get_param_descrs","property non-void-command collaborator"
"fixedpoint","entity boundary","to_string","property non-void-command"
"fixedpoint","entity boundary","to_string","property non-void-command collaborator"
"aig_lit","data-provider","is_inverted","predicate"
"aig_lit","data-provider","invert","set"
"aig_lit","data-provider","ptr","property collaborator"
"aig_lit","data-provider","ptr_non_inverted","get collaborator"
"aig_lit","data-provider","is_null","predicate"
"aig_lit","data-provider","operator==","incidental"
"aig_lit","data-provider","operator!=","incidental"
"aig_lit","data-provider","operator=","get set"
"ext_theory_propagation_justification","unclassified","ext_theory_propagation_justification","constructor"
"ext_theory_propagation_justification","unclassified","get_name","incidental"
"ext_theory_propagation_justification","unclassified","ext_theory_propagation_justification::mk_proof","property non-void-command collaborator"
"ext_theory_propagation_justification","unclassified","ext_theory_propagation_justification::log","controller"
"ext_theory_conflict_justification","unclassified","ext_theory_conflict_justification","constructor"
"ext_theory_conflict_justification","unclassified","get_name","incidental"
"ext_theory_conflict_justification","unclassified","ext_theory_conflict_justification::mk_proof","property non-void-command collaborator"
"ext_theory_conflict_justification","unclassified","ext_theory_conflict_justification::log","controller"
"model_checker","boundary","get_context","get collaborator"
"model_checker","boundary","model_checker::model_checker","constructor"
"model_checker","boundary","model_checker::~model_checker","destructor"
"model_checker","boundary","model_checker::get_flat_quantifier","property non-void-command collaborator"
"model_checker","boundary","model_checker::set_qm","command collaborator"
"model_checker","boundary","model_checker::get_term_from_ctx","property non-void-command collaborator"
"model_checker","boundary","model_checker::get_type_compatible_term","property non-void-command collaborator"
"model_checker","boundary","model_checker::init_value2expr","command collaborator"
"model_checker","boundary","model_checker::replace_value_from_ctx","property non-void-command collaborator"
"model_checker","boundary","model_checker::restrict_to_universe","command collaborator"
"model_checker","boundary","model_checker::assert_neg_q_m","predicate non-void-command collaborator"
"model_checker","boundary","model_checker::add_instance","predicate non-void-command collaborator"
"model_checker","boundary","model_checker::add_instance","command collaborator"
"model_checker","boundary","model_checker::operator()","command collaborator"
"model_checker","boundary","model_checker::contains_model_value","predicate non-void-command collaborator"
"model_checker","boundary","model_checker::add_blocking_clause","predicate non-void-command collaborator"
"model_checker","boundary","model_checker::check","predicate non-void-command collaborator"
"model_checker","boundary","model_checker::is_safe_for_mbqi","predicate controller"
"model_checker","boundary","model_checker::init_aux_context","command collaborator"
"model_checker","boundary","model_checker::check","predicate non-void-command collaborator"
"model_checker","boundary","model_checker::check_quantifiers","void-accessor command collaborator"
"model_checker","boundary","model_checker::init_search_eh","command"
"model_checker","boundary","model_checker::restart_eh","command"
"model_checker","boundary","model_checker::has_new_instances","predicate non-void-command"
"model_checker","boundary","model_checker::reset_new_instances","command"
"model_checker","boundary","model_checker::reset","command"
"model_checker","boundary","model_checker::assert_new_instances","command collaborator"
"instantiation_set","entity boundary","instantiation_set","constructor"
"instantiation_set","entity boundary","~instantiation_set","destructor"
"instantiation_set","entity boundary","get_elems","get collaborator"
"instantiation_set","entity boundary","insert","command"
"instantiation_set","entity boundary","remove","command collaborator"
"instantiation_set","entity boundary","display","wrapper"
"instantiation_set","entity boundary","get_inv","property collaborator"
"instantiation_set","entity boundary","get_generation","collaborator"
"instantiation_set","entity boundary","mk_inverse","command collaborator"
"instantiation_set","entity boundary","get_inv_map","get collaborator"
"instantiation_set","entity boundary","operator()","command collaborator"
"instantiation_set","entity boundary","contains_model_value","predicate non-void-command collaborator"
"node","boundary","dappend","controller stateless"
"node","boundary","node","constructor"
"node","boundary","~node","destructor"
"node","boundary","get_id","get"
"node","boundary","get_sort","get collaborator"
"node","boundary","is_root","predicate"
"node","boundary","get_root","property controller"
"node","boundary","merge","command"
"node","boundary","insert_avoid","command collaborator"
"node","boundary","insert_exception","command collaborator"
"node","boundary","set_mono_proj","set"
"node","boundary","is_mono_proj","get"
"node","boundary","set_signed_proj","set"
"node","boundary","is_signed_proj","get"
"node","boundary","mk_instantiation_set","set collaborator"
"node","boundary","insert","command"
"node","boundary","display","collaborator"
"node","boundary","get_instantiation_set","property collaborator"
"node","boundary","get_instantiation_set","property non-void-command collaborator"
"node","boundary","get_exceptions","get collaborator"
"node","boundary","get_avoid_set","get collaborator"
"node","boundary","must_avoid_itself","predicate"
"node","boundary","set_else","command collaborator"
"node","boundary","get_else","get collaborator"
"node","boundary","set_proj","command collaborator"
"node","boundary","get_proj","get collaborator"
"node","boundary","ac_plugin::node::mk","factory controller stateless"
"node","boundary","context_t<C>::node::node","constructor"
"node","boundary","context_t<C>::node::node","copy-constructor"
"node","boundary","context_t<C>::node::push","controller stateless"
"get_interpolant_cmd","boundary degenerate","get_interpolant_cmd","constructor"
"get_interpolant_cmd","boundary degenerate","get_usage","incidental"
"get_interpolant_cmd","boundary degenerate","get_descr","collaborator incidental"
"get_interpolant_cmd","boundary degenerate","get_arity","incidental"
"get_interpolant_cmd","boundary degenerate","next_arg_kind","collaborator incidental"
"get_interpolant_cmd","boundary degenerate","set_next_arg","command collaborator"
"get_interpolant_cmd","boundary degenerate","prepare","command collaborator"
"get_interpolant_cmd","boundary degenerate","execute","controller"
"select_var","entity boundary","get_array","property collaborator"
"select_var","entity boundary","get_array_func_decl","property non-void-command collaborator"
"select_var","entity boundary","select_var","constructor"
"select_var","entity boundary","get_kind","incidental"
"select_var","entity boundary","is_equal","predicate collaborator"
"select_var","entity boundary","display","wrapper"
"select_var","entity boundary","process_auf","command collaborator"
"select_var","entity boundary","populate_inst_sets","command collaborator"
"x_neq_y","pure-controller small-class","x_neq_y","constructor"
"x_neq_y","pure-controller small-class","get_kind","incidental"
"x_neq_y","pure-controller small-class","process_auf","controller"
"x_sleq_y","pure-controller small-class","x_sleq_y","constructor"
"x_sleq_y","pure-controller small-class","get_kind","incidental"
"x_sleq_y","pure-controller small-class","process_auf","controller"
"quantifier_info","entity commander boundary","checkpoint","command"
"quantifier_info","entity commander boundary","insert_qinfo","command collaborator"
"quantifier_info","entity commander boundary","~quantifier_info","destructor"
"quantifier_info","entity commander boundary","display","property collaborator"
"quantifier_info","entity commander boundary","process_auf","command collaborator"
"quantifier_info","entity commander boundary","populate_inst_sets","command collaborator"
"quantifier_info","entity commander boundary","populate_macro_based_inst_sets","set collaborator"
"quantifier_info","entity commander boundary","get_macro_based_inst_set","property non-void-command collaborator"
"quantifier_info","entity commander boundary","reset_the_one","command"
"app_flags","empty","app_flags","constructor"
"solver::add_eq_occurs_trail","commander small-class","undo","command"
"karr_relation_plugin::join_fn","pure-controller degenerate small-class","operator()","controller stateless"
"aig_tactic","boundary degenerate","name","incidental"
"aig_tactic","boundary degenerate","translate","property wrapper"
"aig_tactic","boundary degenerate","updt_params","command collaborator"
"aig_tactic","boundary degenerate","collect_param_descrs","wrapper stateless"
"aig_tactic","boundary degenerate","operator()","command collaborator"
"aig_tactic","boundary degenerate","operator()","controller stateless"
"aig_tactic","boundary degenerate","cleanup","empty"
"extra_fresh_value","data-provider boundary data-class","extra_fresh_value","constructor"
"extra_fresh_value","data-provider boundary data-class","get_sort","get collaborator"
"extra_fresh_value","data-provider boundary data-class","get_idx","get"
"extra_fresh_value","data-provider boundary data-class","set_value","set collaborator"
"extra_fresh_value","data-provider boundary data-class","get_value","get collaborator"
"model_value_dependency","data-provider boundary data-class","model_value_dependency","constructor"
"model_value_dependency","data-provider boundary data-class","model_value_dependency","constructor"
"model_value_dependency","data-provider boundary data-class","model_value_dependency","constructor"
"model_value_dependency","data-provider boundary data-class","is_fresh_value","get"
"model_value_dependency","data-provider boundary data-class","get_enode","get collaborator"
"model_value_dependency","data-provider boundary data-class","get_value","get collaborator"
"ptr_addr_map_entry","unclassified","get_hash","wrapper"
"ptr_addr_map_entry","unclassified","is_free","predicate"
"ptr_addr_map_entry","unclassified","is_deleted","predicate"
"ptr_addr_map_entry","unclassified","is_used","predicate"
"ptr_addr_map_entry","unclassified","get_data","get collaborator"
"ptr_addr_map_entry","unclassified","get_data","get collaborator"
"ptr_addr_map_entry","unclassified","set_data","set collaborator"
"ptr_addr_map_entry","unclassified","set_hash","wrapper"
"ptr_addr_map_entry","unclassified","mark_as_deleted","set"
"ptr_addr_map_entry","unclassified","mark_as_free","set"
"source_hash_proc","pure-controller degenerate small-class","operator()","controller stateless"
"source_eq_proc","pure-controller degenerate small-class","operator()","controller stateless"
"tactic2solver","commander boundary","set_produce_models","set"
"tactic2solver","commander boundary","get_labels","empty"
"tactic2solver","commander boundary","set_progress_callback","empty"
"tactic2solver","commander boundary","set_phase","empty"
"tactic2solver","commander boundary","get_phase","collaborator incidental"
"tactic2solver","commander boundary","set_phase","empty"
"tactic2solver","commander boundary","move_to_front","empty"
"tactic2solver","commander boundary","register_on_clause","command collaborator"
"tactic2solver","commander boundary","user_propagate_init","command collaborator"
"tactic2solver","commander boundary","user_propagate_register_fixed","command collaborator"
"tactic2solver","commander boundary","user_propagate_register_final","command collaborator"
"tactic2solver","commander boundary","user_propagate_register_eq","command collaborator"
"tactic2solver","commander boundary","user_propagate_register_diseq","command collaborator"
"tactic2solver","commander boundary","user_propagate_register_expr","command collaborator"
"tactic2solver","commander boundary","user_propagate_register_created","command collaborator"
"tactic2solver","commander boundary","user_propagate_register_decide","command collaborator"
"tactic2solver","commander boundary","user_propagate_clear","command"
"tactic2solver","commander boundary","cube","property non-void-command collaborator"
"tactic2solver","commander boundary","congruence_next","collaborator incidental"
"tactic2solver","commander boundary","congruence_root","collaborator incidental"
"tactic2solver","commander boundary","get_model_converter","get collaborator"
"tactic2solver","commander boundary","get_levels","wrapper stateless"
"tactic2solver","commander boundary","get_trail","wrapper stateless"
"tactic2solver","commander boundary","tactic2solver::get_manager","property collaborator"
"tactic2solver","commander boundary","tactic2solver::tactic2solver","constructor"
"tactic2solver","commander boundary","tactic2solver::~tactic2solver","destructor"
"tactic2solver","commander boundary","tactic2solver::updt_params","set collaborator"
"tactic2solver","commander boundary","tactic2solver::collect_param_descrs","command collaborator"
"tactic2solver","commander boundary","tactic2solver::assert_expr_core","command collaborator"
"tactic2solver","commander boundary","tactic2solver::push_core","command"
"tactic2solver","commander boundary","tactic2solver::pop_core","command"
"tactic2solver","commander boundary","tactic2solver::check_sat_core2","property non-void-command collaborator"
"tactic2solver","commander boundary","tactic2solver::translate","property non-void-command collaborator"
"tactic2solver","commander boundary","tactic2solver::collect_statistics","controller"
"tactic2solver","commander boundary","tactic2solver::get_unsat_core","command collaborator"
"tactic2solver","commander boundary","tactic2solver::get_model_core","command collaborator"
"tactic2solver","commander boundary","tactic2solver::get_proof_core","property non-void-command collaborator"
"tactic2solver","commander boundary","tactic2solver::reason_unknown","property"
"tactic2solver","commander boundary","tactic2solver::set_reason_unknown","command"
"tactic2solver","commander boundary","tactic2solver::get_num_assertions","unclassified"
"tactic2solver","commander boundary","tactic2solver::get_assertion","property collaborator"
"model_value_proc","degenerate small-class","get_dependencies","empty"
"model_value_proc","degenerate small-class","is_fresh","incidental"
"model_generator","commander boundary","set_context","set collaborator"
"model_generator","commander boundary","get_model","get wrapper"
"model_generator","commander boundary","get_manager","get collaborator"
"model_generator","commander boundary","get_root2value","get collaborator"
"model_generator","commander boundary","hide","command collaborator"
"model_generator","commander boundary","model_generator::model_generator","constructor"
"model_generator","commander boundary","model_generator::~model_generator","destructor"
"model_generator","commander boundary","model_generator::reset","command"
"model_generator","commander boundary","model_generator::init_model","set collaborator"
"model_generator","commander boundary","model_generator::mk_bool_model","command collaborator"
"model_generator","commander boundary","model_generator::mk_value_procs","command collaborator"
"model_generator","commander boundary","model_generator::mk_model_value","property non-void-command collaborator"
"model_generator","commander boundary","model_generator::visit_children","controller stateless"
"model_generator","commander boundary","model_generator::process_source","command collaborator"
"model_generator","commander boundary","model_generator::top_sort_sources","command collaborator"
"model_generator","commander boundary","model_generator::mk_values","command collaborator"
"model_generator","commander boundary","model_generator::get_value","get controller"
"model_generator","commander boundary","model_generator::include_func_interp","predicate collaborator"
"model_generator","commander boundary","model_generator::mk_func_interps","command collaborator"
"model_generator","commander boundary","model_generator::mk_extra_fresh_value","property set collaborator"
"model_generator","commander boundary","model_generator::get_some_value","property non-void-command collaborator"
"model_generator","commander boundary","model_generator::register_value","command collaborator"
"model_generator","commander boundary","model_generator::finalize_theory_models","command collaborator"
"model_generator","commander boundary","model_generator::register_existing_model_values","command collaborator"
"model_generator","commander boundary","model_generator::register_factory","command collaborator"
"model_generator","commander boundary","model_generator::register_macros","command collaborator"
"model_generator","commander boundary","model_generator::mk_model","property non-void-command collaborator"
"poly_factor_cmd","boundary","poly_factor_cmd","constructor"
"poly_factor_cmd","boundary","get_usage","incidental"
"poly_factor_cmd","boundary","get_main_descr","incidental"
"poly_factor_cmd","boundary","init_pdescrs","wrapper stateless"
"poly_factor_cmd","boundary","prepare","set collaborator"
"poly_factor_cmd","boundary","next_arg_kind","property collaborator"
"poly_factor_cmd","boundary","set_next_arg","set collaborator"
"poly_factor_cmd","boundary","execute","controller"
"quantifier_manager","boundary","begin","property collaborator"
"quantifier_manager","boundary","end","property collaborator"
"quantifier_manager","boundary","quantifier_manager::log_justification_to_root","command collaborator"
"quantifier_manager","boundary","quantifier_manager::quantifier_manager","constructor"
"quantifier_manager","boundary","quantifier_manager::~quantifier_manager","destructor"
"quantifier_manager","boundary","quantifier_manager::get_context","property collaborator"
"quantifier_manager","boundary","quantifier_manager::add","command"
"quantifier_manager","boundary","quantifier_manager::del","command collaborator"
"quantifier_manager","boundary","quantifier_manager::empty","predicate"
"quantifier_manager","boundary","quantifier_manager::is_shared","predicate collaborator"
"quantifier_manager","boundary","quantifier_manager::get_stat","property collaborator"
"quantifier_manager","boundary","quantifier_manager::get_generation","collaborator"
"quantifier_manager","boundary","quantifier_manager::add_instance","predicate non-void-command collaborator"
"quantifier_manager","boundary","quantifier_manager::add_instance","predicate non-void-command collaborator"
"quantifier_manager","boundary","quantifier_manager::init_search_eh","command"
"quantifier_manager","boundary","quantifier_manager::assign_eh","command collaborator"
"quantifier_manager","boundary","quantifier_manager::add_eq_eh","command collaborator"
"quantifier_manager","boundary","quantifier_manager::relevant_eh","command collaborator"
"quantifier_manager","boundary","quantifier_manager::final_check_eh","property non-void-command collaborator"
"quantifier_manager","boundary","quantifier_manager::restart_eh","command"
"quantifier_manager","boundary","quantifier_manager::can_propagate","predicate"
"quantifier_manager","boundary","quantifier_manager::propagate","command"
"quantifier_manager","boundary","quantifier_manager::model_based","predicate"
"quantifier_manager","boundary","quantifier_manager::has_quantifiers","predicate"
"quantifier_manager","boundary","quantifier_manager::mbqi_enabled","predicate collaborator"
"quantifier_manager","boundary","quantifier_manager::adjust_model","command collaborator"
"quantifier_manager","boundary","quantifier_manager::check_model","property non-void-command collaborator"
"quantifier_manager","boundary","quantifier_manager::push","set"
"quantifier_manager","boundary","quantifier_manager::pop","set"
"quantifier_manager","boundary","quantifier_manager::reset","command collaborator"
"quantifier_manager","boundary","quantifier_manager::display","empty"
"quantifier_manager","boundary","quantifier_manager::collect_statistics","collaborator"
"quantifier_manager","boundary","quantifier_manager::reset_statistics","empty"
"quantifier_manager","boundary","quantifier_manager::display_stats","collaborator"
"quantifier_manager","boundary","quantifier_manager::begin_quantifiers","property collaborator"
"quantifier_manager","boundary","quantifier_manager::end_quantifiers","property collaborator"
"quantifier_manager","boundary","quantifier_manager::num_quantifiers","unclassified"
"quantifier_manager_plugin","boundary degenerate small-class","mbqi_enabled","collaborator incidental"
"quantifier_instance","data-provider","get_quantifier","get collaborator"
"quantifier_instance","data-provider","get_num_decls","unclassified"
"quantifier_instance","data-provider","get_cost","get"
"quantifier_instance","data-provider","get_enodes","get collaborator"
"and_relevancy_eh","pure-controller small-class","and_relevancy_eh","constructor"
"and_relevancy_eh","pure-controller small-class","and_relevancy_eh::operator()","controller"
"ite_term_relevancy_eh","commander boundary small-class","ite_term_relevancy_eh","constructor"
"ite_term_relevancy_eh","commander boundary small-class","ite_term_relevancy_eh::operator()","command collaborator"
"smt_solver_factory","boundary degenerate small-class","operator()","wrapper stateless"
"euf_project_cmd","commander boundary","euf_project_cmd","constructor"
"euf_project_cmd","commander boundary","get_usage","incidental"
"euf_project_cmd","commander boundary","get_descr","collaborator incidental"
"euf_project_cmd","commander boundary","get_arity","incidental"
"euf_project_cmd","commander boundary","next_arg_kind","property collaborator"
"euf_project_cmd","commander boundary","set_next_arg","set collaborator"
"euf_project_cmd","commander boundary","set_next_arg","command collaborator"
"euf_project_cmd","commander boundary","prepare","command collaborator"
"euf_project_cmd","commander boundary","execute","controller"
"theory","boundary","mk_var","property non-void-command collaborator"
"theory","boundary","get_th_var","property collaborator"
"theory","boundary","is_attached_to_var","predicate collaborator"
"theory","boundary","default_internalizer","incidental"
"theory","boundary","internalize_eq_eh","empty"
"theory","boundary","apply_sort_cnstr","empty"
"theory","boundary","assign_eh","empty"
"theory","boundary","get_phase","collaborator incidental"
"theory","boundary","use_diseqs","incidental"
"theory","boundary","relevant_eh","empty"
"theory","boundary","restart_eh","empty"
"theory","boundary","add_theory_assumptions","empty"
"theory","boundary","validate_unsat_core","collaborator incidental"
"theory","boundary","should_research","collaborator incidental"
"theory","boundary","init_search_eh","empty"
"theory","boundary","final_check_eh","collaborator incidental"
"theory","boundary","is_shared","collaborator incidental"
"theory","boundary","is_beta_redex","collaborator incidental"
"theory","boundary","can_propagate","incidental"
"theory","boundary","propagate","empty"
"theory","boundary","why_is_diseq","collaborator incidental"
"theory","boundary","flush_eh","empty"
"theory","boundary","validate_model","empty"
"theory","boundary","conflict_resolution_eh","empty"
"theory","boundary","setup","empty"
"theory","boundary","init","empty"
"theory","boundary","get_id","get collaborator"
"theory","boundary","get_family_id","get collaborator"
"theory","boundary","get_context","get collaborator"
"theory","boundary","get_manager","get collaborator"
"theory","boundary","get_enode","get controller"
"theory","boundary","get_expr","property collaborator"
"theory","boundary","get_representative","property collaborator"
"theory","boundary","is_representative","predicate collaborator"
"theory","boundary","is_safe_to_copy","collaborator incidental"
"theory","boundary","get_num_vars","controller stateless"
"theory","boundary","get_old_num_vars","get controller"
"theory","boundary","collect_statistics","empty"
"theory","boundary","log_axiom_instantiation","command collaborator"
"theory","boundary","log_axiom_instantiation","command collaborator"
"theory","boundary","log_axiom_unit","command collaborator"
"theory","boundary","assume_eqs","predicate non-void-command collaborator"
"theory","boundary","mk_eq_atom","property non-void-command collaborator"
"theory","boundary","get_root","property non-void-command collaborator"
"theory","boundary","build_models","incidental"
"theory","boundary","init_model","empty"
"theory","boundary","finalize_model","empty"
"theory","boundary","mk_value","collaborator incidental"
"theory","boundary","include_func_interp","collaborator incidental"
"theory","boundary","get_value","collaborator incidental"
"theory","boundary","get_name","incidental"
"theory","boundary","is_fixed_propagated","collaborator incidental"
"theory","boundary","theory::reset_eh","controller stateless"
"theory","boundary","theory::push_scope_eh","controller stateless"
"theory","boundary","theory::pop_scope_eh","controller"
"theory","boundary","theory::lazy_push","get set"
"theory","boundary","theory::lazy_pop","predicate set"
"theory","boundary","theory::force_push","set collaborator"
"theory","boundary","theory::display_var2enode","controller"
"theory","boundary","theory::display_app","property collaborator"
"theory","boundary","theory::display_flat_app","property collaborator"
"theory","boundary","theory::is_relevant_and_shared","predicate collaborator"
"theory","boundary","theory::assume_eq","predicate non-void-command collaborator"
"theory","boundary","theory::mk_eq","property non-void-command collaborator"
"theory","boundary","theory::mk_preferred_eq","property non-void-command collaborator"
"theory","boundary","theory::mk_literal","property non-void-command collaborator"
"theory","boundary","theory::ensure_enode","property non-void-command collaborator"
"theory","boundary","theory::theory","constructor"
"theory","boundary","theory::~theory","destructor"
"theory","boundary","theory::get_fparams","property collaborator"
"theory","boundary","theory::log_axiom_instantiation","command collaborator"
"theory","boundary","theory::log_axiom_instantiation","command collaborator"
"theory","boundary","theory::log_axiom_instantiation","command collaborator"
"theory","boundary","theory::get_th_var","property collaborator"
"bcd::scoped_cleanup","empty","~scoped_cleanup","destructor"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::thread_spanning_tree","constructor"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::initialize","command collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::get_common_ancestor","property collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::get_path","command collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::is_forward_edge","get collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::get_descendants","controller"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::in_subtree_t2","predicate non-void-command collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::is_ancestor_of","predicate collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::update","command collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::swap_order","command collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::check_well_formed","predicate non-void-command collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::find_rev_thread","property wrapper"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::fix_depth","set collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::get_final","property collaborator"
"thread_spanning_tree","boundary","thread_spanning_tree<Ext>::is_preorder_traversal","predicate non-void-command collaborator"
"context_mpf","empty","context_mpf","constructor"
"bvarray2uf_rewriter","commander boundary small-class","bvarray2uf_rewriter","constructor"
"bvarray2uf_rewriter","commander boundary small-class","set_mcs","command collaborator"
"mk_pi_interval","pure-controller degenerate small-class","operator()","controller stateless"
"ctx_solver_simplify_tactic","commander boundary","ctx_solver_simplify_tactic","constructor"
"ctx_solver_simplify_tactic","commander boundary","translate","property wrapper"
"ctx_solver_simplify_tactic","commander boundary","~ctx_solver_simplify_tactic","destructor"
"ctx_solver_simplify_tactic","commander boundary","name","incidental"
"ctx_solver_simplify_tactic","commander boundary","updt_params","command collaborator"
"ctx_solver_simplify_tactic","commander boundary","collect_param_descrs","command collaborator"
"ctx_solver_simplify_tactic","commander boundary","collect_statistics","controller"
"ctx_solver_simplify_tactic","commander boundary","reset_statistics","set"
"ctx_solver_simplify_tactic","commander boundary","operator()","command collaborator"
"ctx_solver_simplify_tactic","commander boundary","cleanup","command"
"ctx_solver_simplify_tactic","commander boundary","reduce","command collaborator"
"ctx_solver_simplify_tactic","commander boundary","reduce","void-accessor command collaborator"
"ctx_solver_simplify_tactic","commander boundary","simplify_bool","predicate non-void-command collaborator"
"ctx_solver_simplify_tactic","commander boundary","mk_fresh","property non-void-command collaborator"
"smt_tactic","entity commander boundary","smt_tactic","constructor"
"smt_tactic","entity commander boundary","translate","property wrapper"
"smt_tactic","entity commander boundary","~smt_tactic","destructor"
"smt_tactic","entity commander boundary","name","incidental"
"smt_tactic","entity commander boundary","fparams","get collaborator"
"smt_tactic","entity commander boundary","params","get collaborator"
"smt_tactic","entity commander boundary","updt_params_core","command collaborator"
"smt_tactic","entity commander boundary","updt_params","command collaborator"
"smt_tactic","entity commander boundary","collect_param_descrs","command collaborator"
"smt_tactic","entity commander boundary","collect_statistics","collaborator"
"smt_tactic","entity commander boundary","cleanup","empty"
"smt_tactic","entity commander boundary","reset_statistics","command"
"smt_tactic","entity commander boundary","set_logic","set collaborator"
"smt_tactic","entity commander boundary","set_progress_callback","set collaborator"
"smt_tactic","entity commander boundary","handle_canceled","empty"
"smt_tactic","entity commander boundary","operator()","command collaborator"
"smt_tactic","entity commander boundary","on_clause_delay_init","command"
"smt_tactic","entity commander boundary","user_propagate_delay_init","command collaborator"
"smt_tactic","entity commander boundary","user_propagate_clear","command"
"smt_tactic","entity commander boundary","register_on_clause","command collaborator"
"smt_tactic","entity commander boundary","user_propagate_init","command collaborator"
"smt_tactic","entity commander boundary","user_propagate_register_fixed","set collaborator"
"smt_tactic","entity commander boundary","user_propagate_register_final","set collaborator"
"smt_tactic","entity commander boundary","user_propagate_register_eq","set collaborator"
"smt_tactic","entity commander boundary","user_propagate_register_diseq","set collaborator"
"smt_tactic","entity commander boundary","user_propagate_register_expr","command collaborator"
"smt_tactic","entity commander boundary","user_propagate_register_created","set collaborator"
"smt_tactic","entity commander boundary","user_propagate_register_decide","set collaborator"
"unit_subsumption_tactic","commander boundary","unit_subsumption_tactic","constructor"
"unit_subsumption_tactic","commander boundary","name","incidental"
"unit_subsumption_tactic","commander boundary","cleanup","empty"
"unit_subsumption_tactic","commander boundary","operator()","command collaborator"
"unit_subsumption_tactic","commander boundary","updt_params","command collaborator"
"unit_subsumption_tactic","commander boundary","translate","property wrapper"
"unit_subsumption_tactic","commander boundary","checkpoint","command"
"unit_subsumption_tactic","commander boundary","reduce_core","command collaborator"
"unit_subsumption_tactic","commander boundary","assert_clauses","command collaborator"
"unit_subsumption_tactic","commander boundary","prune_clauses","command"
"unit_subsumption_tactic","commander boundary","prune_clause","command"
"unit_subsumption_tactic","commander boundary","insert_result","command collaborator"
"unit_subsumption_tactic","commander boundary","init","command collaborator"
"unit_subsumption_tactic","commander boundary","new_bool","property non-void-command collaborator"
"unit_subsumption_tactic","commander boundary","new_clause","property non-void-command factory collaborator"
"theory_arith_stats","boundary small-class","reset","wrapper"
"theory_arith_stats","boundary small-class","theory_arith_stats","constructor"
"implied_bound","boundary","explain_implied","wrapper stateless"
"implied_bound","boundary","set_explain","set collaborator"
"implied_bound","boundary","kind","property collaborator"
"implied_bound","boundary","implied_bound","constructor"
"implied_bound","boundary","implied_bound","constructor"
"theory_arith","boundary","proofs_enabled","predicate"
"theory_arith","boundary","coeffs_enabled","predicate"
"theory_arith","boundary","operator<<","collaborator incidental"
"theory_arith","boundary","has_var","predicate collaborator"
"theory_arith","boundary","expr2var","property collaborator"
"theory_arith","boundary","var2expr","property collaborator"
"theory_arith","boundary","lazy_pivoting_lvl","unclassified"
"theory_arith","boundary","propagate_eqs","predicate"
"theory_arith","boundary","propagate_diseqs","incidental"
"theory_arith","boundary","random_initial_value","predicate"
"theory_arith","boundary","random_lower","property"
"theory_arith","boundary","random_upper","property"
"theory_arith","boundary","blands_rule_threshold","unclassified"
"theory_arith","boundary","propagation_mode","property collaborator"
"theory_arith","boundary","adaptive","predicate"
"theory_arith","boundary","adaptive_assertion_threshold","property"
"theory_arith","boundary","max_lemma_size","unclassified"
"theory_arith","boundary","small_lemma_size","unclassified"
"theory_arith","boundary","relax_bounds","predicate"
"theory_arith","boundary","skip_big_coeffs","predicate"
"theory_arith","boundary","get_num_conflicts","get"
"theory_arith","boundary","get_var_kind","get wrapper"
"theory_arith","boundary","is_base","predicate collaborator"
"theory_arith","boundary","is_quasi_base","predicate collaborator"
"theory_arith","boundary","is_non_base","predicate collaborator"
"theory_arith","boundary","set_var_kind","collaborator"
"theory_arith","boundary","get_var_row","get collaborator"
"theory_arith","boundary","set_var_row","unclassified"
"theory_arith","boundary","is_int","get collaborator"
"theory_arith","boundary","is_int_src","predicate collaborator"
"theory_arith","boundary","is_real","predicate collaborator"
"theory_arith","boundary","is_real_src","predicate collaborator"
"theory_arith","boundary","get_quasi_base_value","property collaborator"
"theory_arith","boundary","get_value","property collaborator"
"theory_arith","boundary","get_bound","get collaborator"
"theory_arith","boundary","lower","get collaborator"
"theory_arith","boundary","upper","get collaborator"
"theory_arith","boundary","lower_bound","property collaborator"
"theory_arith","boundary","upper_bound","property collaborator"
"theory_arith","boundary","below_lower","predicate collaborator"
"theory_arith","boundary","above_upper","predicate collaborator"
"theory_arith","boundary","below_upper","predicate collaborator"
"theory_arith","boundary","above_lower","predicate collaborator"
"theory_arith","boundary","at_lower","predicate collaborator"
"theory_arith","boundary","at_upper","predicate collaborator"
"theory_arith","boundary","is_free","predicate collaborator"
"theory_arith","boundary","is_non_free","predicate collaborator"
"theory_arith","boundary","is_bounded","predicate collaborator"
"theory_arith","boundary","is_free","predicate collaborator"
"theory_arith","boundary","set_bound_core","set"
"theory_arith","boundary","restore_bound","command"
"theory_arith","boundary","get_epsilon","property collaborator"
"theory_arith","boundary","default_internalizer","incidental"
"theory_arith","boundary","insert_bv2a","controller stateless"
"theory_arith","boundary","erase_bv2a","set collaborator"
"theory_arith","boundary","get_bv2a","controller stateless"
"theory_arith","boundary","set_value","command collaborator"
"theory_arith","boundary","select_greatest_error_var","property non-void-command collaborator"
"theory_arith","boundary","select_least_error_var","property non-void-command collaborator"
"theory_arith","boundary","is_equal","predicate collaborator"
"theory_arith","boundary","push_bound_trail","command"
"theory_arith","boundary","push_dec_unassigned_atoms_trail","command collaborator"
"theory_arith","boundary","mk_eq_atom","property non-void-command collaborator"
"theory_arith","boundary","is_pure_monomial","predicate collaborator"
"theory_arith","boundary","get_name","incidental"
"theory_arith","boundary","theory_arith<Ext>::at_bound","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_fixed","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::set_bound","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_a_base_row_that_contains","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::all_coeff_int","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::get_row_for_eliminating","property collaborator"
"theory_arith","boundary","theory_arith<Ext>::move_unconstrained_to_base","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::elim_quasi_base_rows","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::remove_fixed_vars_from_base","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::try_to_minimize_rational_coeffs","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::accumulate_justification","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::normalize_bound","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_bound_from_row","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::add_tmp_row","controller"
"theory_arith","boundary","theory_arith<Ext>::is_safe_to_leave","predicate non-void-command"
"theory_arith","boundary","theory_arith<Ext>::get_theory_vars","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::add_objective","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::value","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::maximize","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_gt","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_ge","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::enable_record_conflict","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::record_conflict","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::conflict_minimize","get collaborator"
"theory_arith","boundary","theory_arith<Ext>::pick_var_to_leave","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::unbounded_gain","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::safe_gain","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::normalize_gain","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::init_gains","void-accessor command collaborator"
"theory_arith","boundary","theory_arith<Ext>::update_gains","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::has_interface_equality","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::max_min","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::move_to_bound","predicate non-void-command"
"theory_arith","boundary","theory_arith<Ext>::add_tmp_row_entry","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::max_min","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::max_min","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_freedom_interval","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::try_to_imply_eq","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::random_update","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mutate_assignment","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_shared","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::assume_eqs","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::delayed_assume_eqs","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::found_unsupported_op","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::found_underspecified_op","void-accessor command collaborator"
"theory_arith","boundary","theory_arith<Ext>::process_atoms","predicate"
"theory_arith","boundary","theory_arith<Ext>::is_int_expr","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_var","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::reflection_enabled","predicate"
"theory_arith","boundary","theory_arith<Ext>::reflect","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::enable_cgc_for","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_enode","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_enode_if_reflect","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::row_vars","get wrapper"
"theory_arith","boundary","theory_arith<Ext>::add_row_entry","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_internal_monomial","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::check_app","controller"
"theory_arith","boundary","theory_arith<Ext>::internalize_sub","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_add","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_mul_core","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_mul","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_binary_op","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_div","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_idiv","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_mod","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_rem","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_axiom","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_div_axiom","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_idiv_mod_axioms","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_rem_axiom","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_to_int_axiom","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_to_int","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_is_int_axiom","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_is_int","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_to_real","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_numeral","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_numeral","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_term_core","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_row","non-void-command"
"theory_arith","boundary","theory_arith<Ext>::init_row","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::collect_vars","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::normalize_quasi_base_row","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::quasi_base_row2base_row","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::normalize_base_row","command"
"theory_arith","boundary","theory_arith<Ext>::mk_clause","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_clause","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_bound_axioms","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_bound_axiom","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::flush_bound_axioms","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::first","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::next_inf","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::next_sup","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::internalize_atom","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_term","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_eq_eh","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::apply_sort_cnstr","empty"
"theory_arith","boundary","theory_arith<Ext>::assign_eh","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::relevant_eh","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::new_eq_eh","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::use_diseqs","incidental"
"theory_arith","boundary","theory_arith<Ext>::new_diseq_eh","set collaborator"
"theory_arith","boundary","theory_arith<Ext>::restart_eh","command"
"theory_arith","boundary","theory_arith<Ext>::init_search_eh","command"
"theory_arith","boundary","theory_arith<Ext>::final_check_core","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::final_check_eh","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::can_propagate","predicate non-void-command"
"theory_arith","boundary","theory_arith<Ext>::propagate","command"
"theory_arith","boundary","theory_arith<Ext>::propagate_core","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::failed","command"
"theory_arith","boundary","theory_arith<Ext>::flush_eh","command"
"theory_arith","boundary","theory_arith<Ext>::reset_eh","command"
"theory_arith","boundary","theory_arith<Ext>::get_implied_value","property collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_implied_old_value","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::theory_arith","constructor"
"theory_arith","boundary","theory_arith<Ext>::~theory_arith","destructor"
"theory_arith","boundary","theory_arith<Ext>::mk_fresh","wrapper stateless"
"theory_arith","boundary","theory_arith<Ext>::setup","command"
"theory_arith","boundary","theory_arith<Ext>::add_row","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::add_rows","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::save_value","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::discard_update_trail","command"
"theory_arith","boundary","theory_arith<Ext>::restore_assignment","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::update_value_core","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::update_value","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::pivot","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::eliminate","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::update_and_pivot","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_num_non_free_dep_vars","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::select_blands_pivot_core","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::select_pivot_core","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_phase","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::select_pivot","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::make_var_feasible","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::select_lg_error_var","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::select_smallest_var","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::select_var_to_fix","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::make_feasible","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::sign_row_conflict","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::assert_lower","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::assert_upper","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::assert_bound","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::sign_bound_conflict","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mark_row_for_bound_prop","command"
"theory_arith","boundary","theory_arith<Ext>::add_column_rows_to_touched_rows","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_row_useful_for_bound_prop","void-accessor"
"theory_arith","boundary","theory_arith<Ext>::imply_bound_for_monomial","non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::imply_bound_for_all_monomials","non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::explain_bound","void-accessor command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_implied_bound","non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::assign_bound_literal","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_bounds","command"
"theory_arith","boundary","theory_arith<Ext>::set_conflict","command"
"theory_arith","boundary","theory_arith<Ext>::set_conflict","command"
"theory_arith","boundary","theory_arith<Ext>::set_conflict","command"
"theory_arith","boundary","theory_arith<Ext>::collect_fixed_var_justifications","collaborator"
"theory_arith","boundary","theory_arith<Ext>::update_epsilon","set collaborator"
"theory_arith","boundary","theory_arith<Ext>::compute_epsilon","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::refine_epsilon","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::init_model","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::include_func_interp","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_value","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::to_expr","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_value","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_lower","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_upper","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_lower","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_upper","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::push_scope_eh","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::pop_scope_eh","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::restore_nl_propagated_flag","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::restore_bounds","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::restore_unassigned_atoms","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::del_atoms","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::del_bounds","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::del_vars","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::del_row","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::fixed_var_eh","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_offset_row","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_cheap_eq","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_eq_to_core","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::move_non_base_vars_to_bounds","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::has_infeasible_int_var","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::find_bounded_infeasible_int_base_var","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::find_infeasible_int_base_var","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::branch_infeasible_int_var","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::branch_infeasible_int_equality","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::constrain_free_vars","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_gomory_cut_target","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_polynomial_ge","void-accessor command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_gomory_cut","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::gcd_test","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::ext_gcd_test","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::gcd_test","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::max_min_infeasible_int_vars","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::patch_int_infeasible_vars","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::fix_non_base_vars","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::check_int_feasibility","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::check_vector_sizes","predicate"
"theory_arith","boundary","theory_arith<Ext>::check_null_var_pos","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::has_var_kind","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::wf_row","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::wf_rows","predicate"
"theory_arith","boundary","theory_arith<Ext>::wf_column","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::wf_columns","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::valid_row_assignment","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::valid_row_assignment","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::satisfy_bounds","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::satisfy_integrality","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::valid_assignment","predicate"
"theory_arith","boundary","theory_arith<Ext>::mk_nary_mul","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_nary_add","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_nary_add","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mark_var","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::mark_dependents","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_non_linear_cluster","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::analyze_monomial","property collaborator"
"theory_arith","boundary","theory_arith<Ext>::decompose_monomial","property collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_interval_for","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_interval_for","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mul_bound_of","void-accessor command collaborator"
"theory_arith","boundary","theory_arith<Ext>::evaluate_as_interval","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_monomial","collaborator"
"theory_arith","boundary","theory_arith<Ext>::dependency2new_bound","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_derived_nl_bound","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::update_bounds_using_interval","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::update_bounds_using_interval","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_nl_upward","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_nl_downward","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_nl_bounds","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_nl_bounds","predicate non-void-command"
"theory_arith","boundary","theory_arith<Ext>::get_value","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::check_monomial_assignment","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::check_monomial_assignments","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::find_nl_var_for_branching","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::branch_nl_int_var","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_monomial_linear","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_monomial_fixed_var_product","property collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_monomial_non_fixed_var","property collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_linear_monomial","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::propagate_linear_monomials","predicate non-void-command"
"theory_arith","boundary","theory_arith<Ext>::is_problematic_non_linear_row","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_mixed_real_integer","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_integer","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_coeff_exprs","collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_polynomial_info","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::p2expr","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::power","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::in_monovariate_monomials","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_pure_monomial","predicate collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_nested_form","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_degree_of","non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::get_min_degree","non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::factor","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::horner","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::cross_nested","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_cross_nested_consistent","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_cross_nested_consistent","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_cross_nested_consistent","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::init_grobner_var_order","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_gb_monomial","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::add_row_to_gb","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::add_monomial_def_to_gb","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::init_grobner","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::mk_interval_for","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::set_conflict","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_inconsistent","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_inconsistent","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::is_inconsistent2","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::monomial2expr","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::internalize_gb_eq","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::update_statistics","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::set_gb_exhausted","set"
"theory_arith","boundary","theory_arith<Ext>::get_gb_eqs_and_look_for_conflict","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::try_to_modify_eqs","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::scan_for_linear","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::compute_basis_loop","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::compute_basis","void-accessor command"
"theory_arith","boundary","theory_arith<Ext>::compute_grobner","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::max_min_nl_vars","predicate non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::process_non_linear","property non-void-command collaborator"
"theory_arith","boundary","theory_arith<Ext>::collect_statistics","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_nl_monomials","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_row","unclassified"
"theory_arith","boundary","theory_arith<Ext>::display_row","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_rows","unclassified"
"theory_arith","boundary","theory_arith<Ext>::display_row_shape","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::is_one_minus_one_row","controller stateless"
"theory_arith","boundary","theory_arith<Ext>::display_rows_shape","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_rows_bignums","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_rows_stats","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_row_info","unclassified"
"theory_arith","boundary","theory_arith<Ext>::display_row_info","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_simplified_row","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_var","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_vars","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_bound","controller"
"theory_arith","boundary","theory_arith<Ext>::display_deps","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_interval","command collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_atoms","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_asserted_atoms","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_atom","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_bounds_in_smtlib","collaborator"
"theory_arith","boundary","theory_arith<Ext>::display_bounds_in_smtlib","collaborator"
"si_ext","empty","si_ext","constructor"
"ASTMap","pure-controller degenerate","Contains","controller stateless"
"ASTMap","pure-controller degenerate","Find","factory controller stateless"
"ASTMap","pure-controller degenerate","Insert","controller stateless"
"ASTMap","pure-controller degenerate","Erase","controller stateless"
"ASTMap","pure-controller degenerate","Reset","controller stateless"
"glue_psm_lt","pure-controller degenerate small-class","operator()","controller stateless"
"theory_array_stats","boundary small-class","reset","wrapper"
"theory_array_stats","boundary small-class","theory_array_stats","constructor"
"array_value_proc","entity commander boundary","array_value_proc","constructor"
"array_value_proc","entity commander boundary","array_value_proc","constructor"
"array_value_proc","entity commander boundary","array_value_proc","constructor"
"array_value_proc","entity commander boundary","array_value_proc","constructor"
"array_value_proc","entity commander boundary","add_entry","command collaborator"
"array_value_proc","entity commander boundary","get_dependencies","command collaborator"
"array_value_proc","entity commander boundary","mk_value","property non-void-command collaborator"
"old_interval","data-provider","join","property non-void-command collaborator"
"old_interval","data-provider","join","property non-void-command collaborator"
"old_interval","data-provider","minus_infinity","predicate"
"old_interval","data-provider","plus_infinity","predicate"
"old_interval","data-provider","is_lower_open","get"
"old_interval","data-provider","is_upper_open","get"
"old_interval","data-provider","get_lower_dependencies","get collaborator"
"old_interval","data-provider","get_upper_dependencies","get collaborator"
"old_interval","data-provider","get_lower_value","property collaborator"
"old_interval","data-provider","get_upper_value","property collaborator"
"old_interval","data-provider","operator==","predicate"
"old_interval","data-provider","is_P","predicate"
"old_interval","data-provider","is_P0","predicate"
"old_interval","data-provider","is_P1","predicate"
"old_interval","data-provider","is_N","predicate"
"old_interval","data-provider","is_N0","predicate"
"old_interval","data-provider","is_N1","predicate"
"old_interval","data-provider","is_M","predicate"
"old_interval","data-provider","is_zero","predicate"
"old_interval","data-provider","inf","get collaborator"
"old_interval","data-provider","sup","get collaborator"
"fixed_eq_justification","unclassified","mark_bits","controller stateless"
"fixed_eq_justification","unclassified","get_proof","controller stateless"
"fixed_eq_justification","unclassified","fixed_eq_justification","constructor"
"fixed_eq_justification","unclassified","get_antecedents","command collaborator"
"fixed_eq_justification","unclassified","mk_proof","property non-void-command collaborator"
"fixed_eq_justification","unclassified","get_from_theory","property collaborator"
"fixed_eq_justification","unclassified","get_name","incidental"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl","constructor"
"bit_blaster_tpl","commander boundary","set_max_memory","set"
"bit_blaster_tpl","commander boundary","m","property collaborator"
"bit_blaster_tpl","commander boundary","power","property collaborator"
"bit_blaster_tpl","commander boundary","mk_xor","command collaborator"
"bit_blaster_tpl","commander boundary","mk_xor3","command collaborator"
"bit_blaster_tpl","commander boundary","mk_carry","command collaborator"
"bit_blaster_tpl","commander boundary","mk_iff","command collaborator"
"bit_blaster_tpl","commander boundary","mk_and","command collaborator"
"bit_blaster_tpl","commander boundary","mk_and","command collaborator"
"bit_blaster_tpl","commander boundary","mk_and","command collaborator"
"bit_blaster_tpl","commander boundary","mk_or","command collaborator"
"bit_blaster_tpl","commander boundary","mk_or","command collaborator"
"bit_blaster_tpl","commander boundary","mk_or","command collaborator"
"bit_blaster_tpl","commander boundary","mk_not","command collaborator"
"bit_blaster_tpl","commander boundary","mk_ite","command collaborator"
"bit_blaster_tpl","commander boundary","mk_nand","command collaborator"
"bit_blaster_tpl","commander boundary","mk_nor","command collaborator"
"bit_blaster_tpl","commander boundary","mk_ge2","command collaborator"
"bit_blaster_tpl","commander boundary","is_bool_const","predicate collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::checkpoint","command"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::is_numeral","predicate collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::is_numeral","predicate collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::is_minus_one","predicate collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::num2bits","collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_half_adder","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_full_adder","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_neg","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_adder","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_subtracter","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_multiplier","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_umul_no_overflow","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_smul_no_overflow_core","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_smul_no_overflow","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_smul_no_underflow","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_udiv_urem","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_udiv","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_urem","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_multiplexer","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_abs","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_sdiv_srem_smod","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_sdiv","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_srem","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_smod","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_eq","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_rotate_left","controller stateless"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_rotate_right","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_sign_extend","controller stateless"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_zero_extend","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_is_eq","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_eqs","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_shl","void-accessor command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_lshr","void-accessor command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_ashr","void-accessor command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_ext_rotate_left_right","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_ext_rotate_left","wrapper stateless"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_ext_rotate_right","wrapper stateless"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_le","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_sle","wrapper stateless"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_ule","wrapper stateless"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_not","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_redand","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_redor","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_comp","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_carry_save_adder","command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_const_case_multiplier","predicate non-void-command collaborator"
"bit_blaster_tpl","commander boundary","bit_blaster_tpl<Cfg>::mk_const_case_multiplier","void-accessor command collaborator"
"bit_eq_justification","entity boundary","bit_eq_justification","constructor"
"bit_eq_justification","entity boundary","get_antecedents","command collaborator"
"bit_eq_justification","entity boundary","mk_proof","property non-void-command collaborator"
"bit_eq_justification","entity boundary","get_from_theory","get collaborator"
"bit_eq_justification","entity boundary","get_name","incidental"
"variable_intersection","boundary","variable_intersection","constructor"
"variable_intersection","boundary","size","controller stateless"
"variable_intersection","boundary","get_cols1","controller stateless"
"variable_intersection","boundary","get_cols2","controller stateless"
"variable_intersection","boundary","empty","predicate"
"variable_intersection","boundary","get","void-accessor"
"variable_intersection","boundary","reset","command"
"variable_intersection","boundary","fill_into_second","void-accessor collaborator"
"variable_intersection","boundary","add_pair","controller stateless"
"variable_intersection","boundary","populate","command collaborator"
"variable_intersection","boundary","variable_intersection::values_match","collaborator incidental"
"variable_intersection","boundary","variable_intersection::args_match","predicate non-void-command collaborator"
"variable_intersection","boundary","variable_intersection::args_self_match","predicate non-void-command collaborator"
"variable_intersection","boundary","variable_intersection::populate_self","command collaborator"
"theory_bv_stats","boundary small-class","reset","wrapper"
"theory_bv_stats","boundary small-class","theory_bv_stats","constructor"
"accounted_object","data-provider boundary","get_parent_object","get collaborator"
"accounted_object","data-provider boundary","get_current_costs","get collaborator"
"accounted_object","data-provider boundary","get_current_costs","get collaborator"
"accounted_object","data-provider boundary","get_processed_costs","get collaborator"
"accounted_object","data-provider boundary","being_recorded","get"
"accounted_object","data-provider boundary","accounted_object::~accounted_object","destructor"
"accounted_object","data-provider boundary","accounted_object::set_accounting_parent_object","command collaborator"
"accounted_object","data-provider boundary","accounted_object::process_costs","command"
"accounted_object","data-provider boundary","accounted_object::get_total_cost","void-accessor controller"
"accounted_object","data-provider boundary","accounted_object::passes_output_thresholds","predicate collaborator"
"accounted_object","data-provider boundary","accounted_object::output_profile","collaborator"
"theory_bv","boundary","insert_bv2a","controller stateless"
"theory_bv","boundary","erase_bv2a","controller stateless"
"theory_bv","boundary","get_bv2a","controller stateless"
"theory_bv","boundary","insert_bv2a","controller stateless"
"theory_bv","boundary","erase_bv2a","set collaborator"
"theory_bv","boundary","get_bv2a","controller stateless"
"theory_bv","boundary","find","property collaborator"
"theory_bv","boundary","next","property collaborator"
"theory_bv","boundary","is_root","predicate collaborator"
"theory_bv","boundary","get_bv_size","collaborator"
"theory_bv","boundary","get_bv_size","collaborator"
"theory_bv","boundary","get_bv_size","collaborator"
"theory_bv","boundary","is_bv","predicate collaborator"
"theory_bv","boundary","is_bv","predicate collaborator"
"theory_bv","boundary","is_bv","predicate collaborator"
"theory_bv","boundary","get_region","property non-void-command collaborator"
"theory_bv","boundary","is_numeral","predicate collaborator"
"theory_bv","boundary","can_propagate","predicate non-void-command"
"theory_bv","boundary","get_name","incidental"
"theory_bv","boundary","get_trail_stack","get collaborator"
"theory_bv","boundary","after_merge_eh","command collaborator"
"theory_bv","boundary","theory_bv::mk_var","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::mk_bit2bool","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::mk_bits","command collaborator"
"theory_bv","boundary","theory_bv::mk_bit2bool","command collaborator"
"theory_bv","boundary","theory_bv::process_args","command collaborator"
"theory_bv","boundary","theory_bv::mk_enode","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::get_var","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::get_arg","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::get_arg_var","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::get_bits","command collaborator"
"theory_bv","boundary","theory_bv::get_bits","command collaborator"
"theory_bv","boundary","theory_bv::get_arg_bits","command collaborator"
"theory_bv","boundary","theory_bv::get_arg_bits","command collaborator"
"theory_bv","boundary","theory_bv::add_new_diseq_axiom","command"
"theory_bv","boundary","theory_bv::assert_new_diseq_axiom","command collaborator"
"theory_bv","boundary","theory_bv::register_true_false_bit","controller"
"theory_bv","boundary","theory_bv::find_new_diseq_axioms","void-accessor command"
"theory_bv","boundary","theory_bv::add_bit","command collaborator"
"theory_bv","boundary","theory_bv::simplify_bit","collaborator incidental"
"theory_bv","boundary","theory_bv::init_bits","command collaborator"
"theory_bv","boundary","theory_bv::find_wpos","command collaborator"
"theory_bv","boundary","theory_bv::add_fixed_eq","command collaborator"
"theory_bv","boundary","theory_bv::fixed_var_eh","command collaborator"
"theory_bv","boundary","theory_bv::is_fixed_propagated","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::get_fixed_value","predicate collaborator"
"theory_bv","boundary","theory_bv::get_fixed_value","predicate collaborator"
"theory_bv","boundary","theory_bv::internalize_num","command collaborator"
"theory_bv","boundary","theory_bv::internalize_mkbv","command collaborator"
"theory_bv","boundary","theory_bv::internalize_bv2int","command collaborator"
"theory_bv","boundary","theory_bv::assert_bv2int_axiom","command collaborator"
"theory_bv","boundary","theory_bv::internalize_int2bv","command collaborator"
"theory_bv","boundary","theory_bv::assert_int2bv_axiom","command collaborator"
"theory_bv","boundary","theory_bv::internalize_sub","command collaborator"
"theory_bv","boundary","theory_bv::internalize_concat","command collaborator"
"theory_bv","boundary","theory_bv::internalize_extract","command collaborator"
"theory_bv","boundary","theory_bv::internalize_term_core","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::internalize_term","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::internalize_le","command collaborator"
"theory_bv","boundary","theory_bv::internalize_carry","predicate non-void-command"
"theory_bv","boundary","theory_bv::internalize_xor3","predicate non-void-command"
"theory_bv","boundary","theory_bv::internalize_atom","predicate non-void-command"
"theory_bv","boundary","theory_bv::approximate_term","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::apply_sort_cnstr","command collaborator"
"theory_bv","boundary","theory_bv::new_eq_eh","command collaborator"
"theory_bv","boundary","theory_bv::new_diseq_eh","command collaborator"
"theory_bv","boundary","theory_bv::expand_diseq","command collaborator"
"theory_bv","boundary","theory_bv::assign_eh","command collaborator"
"theory_bv","boundary","theory_bv::propagate_bits","command collaborator"
"theory_bv","boundary","theory_bv::assign_bit","command collaborator"
"theory_bv","boundary","theory_bv::relevant_eh","command collaborator"
"theory_bv","boundary","theory_bv::push_scope_eh","command"
"theory_bv","boundary","theory_bv::pop_scope_eh","command"
"theory_bv","boundary","theory_bv::final_check_eh","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::reset_eh","command"
"theory_bv","boundary","theory_bv::include_func_interp","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::params","property collaborator"
"theory_bv","boundary","theory_bv::theory_bv","constructor"
"theory_bv","boundary","theory_bv::~theory_bv","destructor"
"theory_bv","boundary","theory_bv::mk_fresh","wrapper stateless"
"theory_bv","boundary","theory_bv::merge_eh","command collaborator"
"theory_bv","boundary","theory_bv::merge_zero_one_bits","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::propagate","command collaborator"
"theory_bv","boundary","theory_bv::mk_bit_eq_justification","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::unmerge_eh","command collaborator"
"theory_bv","boundary","theory_bv::get_lower","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::get_upper","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::init_model","set collaborator"
"theory_bv","boundary","theory_bv::mk_value","property non-void-command collaborator"
"theory_bv","boundary","theory_bv::display_var","collaborator"
"theory_bv","boundary","theory_bv::display_bit_atom","collaborator"
"theory_bv","boundary","theory_bv::display_atoms","collaborator"
"theory_bv","boundary","theory_bv::display","collaborator"
"theory_bv","boundary","theory_bv::collect_statistics","controller"
"theory_bv","boundary","theory_bv::get_bv_with_theory","property collaborator"
"theory_bv","boundary","theory_bv::get_bit","property collaborator"
"theory_bv","boundary","theory_bv::check_assignment","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::check_zero_one_bits","predicate non-void-command collaborator"
"theory_bv","boundary","theory_bv::check_invariant","predicate non-void-command"
"theory_bv","boundary","theory_bv::internalize_udiv_quot_rem","command collaborator"
"theory_bv","boundary","theory_bv::assert_udiv_quot_rem_axiom","command collaborator"
"theory_char","boundary","mk_fresh","wrapper stateless"
"theory_char","boundary","display","empty"
"theory_char","boundary","final_check_eh","property non-void-command collaborator"
"theory_char","boundary","theory_char::theory_char","constructor"
"theory_char","boundary","theory_char::has_bits","predicate collaborator"
"theory_char","boundary","theory_char::mk_var","property non-void-command collaborator"
"theory_char","boundary","theory_char::internalize_atom","predicate non-void-command collaborator"
"theory_char","boundary","theory_char::internalize_term","predicate non-void-command collaborator"
"theory_char","boundary","theory_char::init_bits","command collaborator"
"theory_char","boundary","theory_char::internalize_le","command collaborator"
"theory_char","boundary","theory_char::internalize_is_digit","command collaborator"
"theory_char","boundary","theory_char::get_bits","get non-void-command collaborator"
"theory_char","boundary","theory_char::get_ebits","get non-void-command collaborator"
"theory_char","boundary","theory_char::new_eq_eh","command collaborator"
"theory_char","boundary","theory_char::new_diseq_eh","command collaborator"
"theory_char","boundary","theory_char::new_const_char","command"
"theory_char","boundary","theory_char::new_char2int","command collaborator"
"theory_char","boundary","theory_char::new_char2bv","command collaborator"
"theory_char","boundary","theory_char::new_bv2char","command collaborator"
"theory_char","boundary","theory_char::final_check","predicate non-void-command collaborator"
"theory_char","boundary","theory_char::enforce_bits","command collaborator"
"theory_char","boundary","theory_char::enforce_value_bound","command collaborator"
"theory_char","boundary","theory_char::enforce_ackerman","command collaborator"
"theory_char","boundary","theory_char::get_char_value","get collaborator"
"theory_char","boundary","theory_char::get_char_value","predicate non-void-command collaborator"
"theory_char","boundary","theory_char::init_model","command collaborator"
"theory_char","boundary","theory_char::mk_value","property non-void-command collaborator"
"theory_char","boundary","theory_char::collect_statistics","controller"
"unary_probe","empty","unary_probe","constructor"
"unary_probe","empty","~unary_probe","destructor"
"dt_eq_justification","boundary degenerate small-class","dt_eq_justification","constructor"
"dt_eq_justification","boundary degenerate small-class","get_from_theory","collaborator incidental"
"udoc_relation","data-provider boundary","fast_empty","predicate"
"udoc_relation","data-provider boundary","is_precise","incidental"
"udoc_relation","data-provider boundary","get_size_estimate_rows","unclassified"
"udoc_relation","data-provider boundary","get_dm","get collaborator"
"udoc_relation","data-provider boundary","get_udoc","get collaborator"
"udoc_relation","data-provider boundary","get_udoc","get collaborator"
"udoc_relation","data-provider boundary","get_num_records","unclassified"
"udoc_relation","data-provider boundary","get_num_bits","unclassified"
"udoc_relation","data-provider boundary","get_num_cols","unclassified"
"udoc_relation","data-provider boundary","column_idx","get"
"udoc_relation","data-provider boundary","column_num_bits","get"
"udoc_relation","data-provider boundary","udoc_relation::udoc_relation","constructor"
"udoc_relation","data-provider boundary","udoc_relation::~udoc_relation","destructor"
"udoc_relation","data-provider boundary","udoc_relation::reset","command"
"udoc_relation","data-provider boundary","udoc_relation::expand_column_vector","unclassified"
"udoc_relation","data-provider boundary","udoc_relation::fact2doc","property collaborator"
"udoc_relation","data-provider boundary","udoc_relation::add_fact","command collaborator"
"udoc_relation","data-provider boundary","udoc_relation::add_new_fact","command collaborator"
"udoc_relation","data-provider boundary","udoc_relation::empty","predicate"
"udoc_relation","data-provider boundary","udoc_relation::contains_fact","predicate collaborator"
"udoc_relation","data-provider boundary","udoc_relation::clone","property"
"udoc_relation","data-provider boundary","udoc_relation::complement","property collaborator"
"udoc_relation","data-provider boundary","udoc_relation::to_formula","void-accessor collaborator"
"udoc_relation","data-provider boundary","udoc_relation::to_formula","property collaborator"
"udoc_relation","data-provider boundary","udoc_relation::to_formula","property collaborator"
"udoc_relation","data-provider boundary","udoc_relation::get_plugin","property collaborator"
"udoc_relation","data-provider boundary","udoc_relation::display","collaborator"
"udoc_relation","data-provider boundary","udoc_relation::get_size_estimate_bytes","unclassified"
"udoc_relation","data-provider boundary","udoc_relation::is_var_range","predicate collaborator"
"udoc_relation","data-provider boundary","udoc_relation::is_guard","predicate collaborator"
"udoc_relation","data-provider boundary","udoc_relation::is_guard","predicate collaborator"
"udoc_relation","data-provider boundary","udoc_relation::extract_guard","void-accessor collaborator"
"udoc_relation","data-provider boundary","udoc_relation::extract_equalities","void-accessor collaborator"
"udoc_relation","data-provider boundary","udoc_relation::extract_equalities","collaborator"
"udoc_relation","data-provider boundary","udoc_relation::compile_guard","collaborator"
"udoc_relation","data-provider boundary","udoc_relation::apply_ground_eq","predicate collaborator"
"udoc_relation","data-provider boundary","udoc_relation::apply_bv_eq","predicate collaborator"
"udoc_relation","data-provider boundary","udoc_relation::apply_guard","collaborator"
"spacer_arith_kernel","unclassified","set_plugin","set collaborator"
"spacer_arith_kernel","unclassified","operator()","predicate non-void-command"
"spacer_arith_kernel","unclassified","get_kernel","get collaborator"
"spacer_arith_kernel","unclassified","get_basic_vars","get"
"spacer_arith_kernel","unclassified","reset","set"
"spacer_arith_kernel","unclassified","collect_statistics","collaborator"
"spacer_arith_kernel","unclassified","reset_statistics","command"
"spacer_arith_kernel","unclassified","spacer_arith_kernel::compute_kernel","predicate non-void-command"
"theory_dummy","unclassified","build_models","incidental"
"theory_dummy","unclassified","display","empty"
"theory_dummy","unclassified","mk_fresh","property non-void-command collaborator"
"theory_dummy","unclassified","theory_dummy::found_theory_expr","set"
"theory_dummy","unclassified","theory_dummy::theory_dummy","constructor"
"theory_dummy","unclassified","theory_dummy::internalize_atom","predicate non-void-command"
"theory_dummy","unclassified","theory_dummy::internalize_term","predicate non-void-command collaborator"
"theory_dummy","unclassified","theory_dummy::new_eq_eh","wrapper stateless"
"theory_dummy","unclassified","theory_dummy::use_diseqs","incidental"
"theory_dummy","unclassified","theory_dummy::new_diseq_eh","wrapper stateless"
"theory_dummy","unclassified","theory_dummy::reset_eh","set"
"theory_dummy","unclassified","theory_dummy::final_check_eh","property collaborator"
"theory_dummy","unclassified","theory_dummy::get_name","get"
"theory_opt","small-class","theory_opt::is_linear","predicate non-void-command collaborator"
"theory_opt","small-class","theory_opt::is_numeral","controller stateless"
"random_gen","lazy-class","random_gen","constructor"
"random_gen","lazy-class","set_seed","set"
"random_gen","lazy-class","operator()","property set"
"random_gen","lazy-class","operator()","wrapper stateless"
"ast_counter","entity boundary","begin","property collaborator"
"ast_counter","entity boundary","end","property collaborator"
"ast_counter","entity boundary","get","property non-void-command collaborator"
"ast_counter","entity boundary","update","command"
"ast_counter","entity boundary","inc","command collaborator"
"ast_counter","entity boundary","dec","command collaborator"
"theory_pb::unwatch_ge","commander small-class","undo","command"
"theory_pb::pb_justification","data-provider boundary data-class small-class","get_ineq","get collaborator"
"Z3_apply_result_ref","empty","Z3_apply_result_ref::Z3_apply_result_ref","constructor"
"theory_pb","boundary","get_literals","get non-void-command collaborator"
"theory_pb","boundary","card2expr","property controller"
"theory_pb","boundary","proofs_enabled","predicate"
"theory_pb","boundary","internalize_term","wrapper stateless"
"theory_pb","boundary","new_diseq_eh","empty"
"theory_pb","boundary","use_diseqs","incidental"
"theory_pb","boundary","build_models","incidental"
"theory_pb","boundary","include_func_interp","collaborator incidental"
"theory_pb","boundary","theory_pb::theory_pb","constructor"
"theory_pb","boundary","theory_pb::~theory_pb","destructor"
"theory_pb","boundary","theory_pb::mk_fresh","wrapper stateless"
"theory_pb","boundary","theory_pb::internalize_atom","predicate non-void-command collaborator"
"theory_pb","boundary","theory_pb::compile_arg","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::del_watch","void-accessor controller"
"theory_pb","boundary","theory_pb::add_watch","void-accessor command collaborator"
"theory_pb","boundary","theory_pb::init_watch","command collaborator"
"theory_pb","boundary","theory_pb::watch_literal","command collaborator"
"theory_pb","boundary","theory_pb::unwatch_literal","command collaborator"
"theory_pb","boundary","theory_pb::remove","controller stateless"
"theory_pb","boundary","theory_pb::is_cardinality_constraint","predicate non-void-command collaborator"
"theory_pb","boundary","theory_pb::internalize_card","predicate non-void-command collaborator"
"theory_pb","boundary","theory_pb::card2conjunction","command collaborator"
"theory_pb","boundary","theory_pb::card2disjunction","command collaborator"
"theory_pb","boundary","theory_pb::watch_literal","command collaborator"
"theory_pb","boundary","theory_pb::unwatch_literal","command collaborator"
"theory_pb","boundary","theory_pb::remove","controller stateless"
"theory_pb","boundary","theory_pb::display","property collaborator"
"theory_pb","boundary","theory_pb::add_clause","command collaborator"
"theory_pb","boundary","theory_pb::add_assign","command collaborator"
"theory_pb","boundary","theory_pb::clear_watch","command collaborator"
"theory_pb","boundary","theory_pb::collect_statistics","controller"
"theory_pb","boundary","theory_pb::reset_eh","command"
"theory_pb","boundary","theory_pb::new_eq_eh","wrapper stateless"
"theory_pb","boundary","theory_pb::final_check_eh","collaborator incidental"
"theory_pb","boundary","theory_pb::assign_eh","command collaborator"
"theory_pb","boundary","theory_pb::get_all_literals","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::get_helpful_literals","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::get_unhelpful_literals","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::assign_ineq","command collaborator"
"theory_pb","boundary","theory_pb::assign_eq","controller stateless"
"theory_pb","boundary","theory_pb::assign_watch_ge","predicate non-void-command"
"theory_pb","boundary","theory_pb::assert_ge","controller stateless"
"theory_pb","boundary","theory_pb::inc_propagations","collaborator incidental"
"theory_pb","boundary","theory_pb::restart_eh","empty"
"theory_pb","boundary","theory_pb::gc","predicate non-void-command"
"theory_pb","boundary","theory_pb::init_search_eh","empty"
"theory_pb","boundary","theory_pb::push_scope_eh","command"
"theory_pb","boundary","theory_pb::pop_scope_eh","command collaborator"
"theory_pb","boundary","theory_pb::clear_watch","void-accessor command collaborator"
"theory_pb","boundary","theory_pb::init_watch_literal","void-accessor command collaborator"
"theory_pb","boundary","theory_pb::init_watch_ineq","controller stateless"
"theory_pb","boundary","theory_pb::add_assign","command collaborator"
"theory_pb","boundary","theory_pb::add_clause","command collaborator"
"theory_pb","boundary","theory_pb::get_coeff","property collaborator"
"theory_pb","boundary","theory_pb::get_abs_coeff","property collaborator"
"theory_pb","boundary","theory_pb::reset_coeffs","command"
"theory_pb","boundary","theory_pb::process_antecedent","command"
"theory_pb","boundary","theory_pb::process_card","command"
"theory_pb","boundary","theory_pb::validate_lemma","predicate non-void-command"
"theory_pb","boundary","theory_pb::validate_implies","predicate non-void-command collaborator"
"theory_pb","boundary","theory_pb::justification2expr","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::arg_max","property non-void-command"
"theory_pb","boundary","theory_pb::get_asserting_literal","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::reset_arg_max","command"
"theory_pb","boundary","theory_pb::init_arg_max","predicate non-void-command"
"theory_pb","boundary","theory_pb::normalize_active_coeffs","command collaborator"
"theory_pb","boundary","theory_pb::inc_coeff","command"
"theory_pb","boundary","theory_pb::cut","command collaborator"
"theory_pb","boundary","theory_pb::can_propagate","incidental"
"theory_pb","boundary","theory_pb::propagate","empty"
"theory_pb","boundary","theory_pb::resolve_conflict","predicate non-void-command collaborator"
"theory_pb","boundary","theory_pb::is_proof_justification","predicate collaborator"
"theory_pb","boundary","theory_pb::justify","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::justify","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::validate_watch","controller"
"theory_pb","boundary","theory_pb::validate_assign","collaborator"
"theory_pb","boundary","theory_pb::validate_final_check","command"
"theory_pb","boundary","theory_pb::validate_final_check","command collaborator"
"theory_pb","boundary","theory_pb::validate_final_check","command collaborator"
"theory_pb","boundary","theory_pb::validate_antecedents","predicate non-void-command collaborator"
"theory_pb","boundary","theory_pb::validate_unit_propagation","predicate non-void-command collaborator"
"theory_pb","boundary","theory_pb::literal2expr","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::active2expr","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::display_resolved_lemma","collaborator"
"theory_pb","boundary","theory_pb::display","property controller"
"theory_pb","boundary","theory_pb::display","property collaborator"
"theory_pb","boundary","theory_pb::init_model","command collaborator"
"theory_pb","boundary","theory_pb::mk_value","property non-void-command collaborator"
"theory_pb","boundary","theory_pb::display_watch","controller"
"theory_pb","boundary","theory_pb::display","collaborator"
"theory_seq","boundary","mk_eqdep","property non-void-command collaborator"
"theory_seq","boundary","mk_eqdep","property non-void-command collaborator"
"theory_seq","boundary","mk_fresh","wrapper stateless"
"theory_seq","boundary","get_name","incidental"
"theory_seq","boundary","include_func_interp","predicate non-void-command collaborator"
"theory_seq","boundary","mk_empty","property non-void-command collaborator"
"theory_seq","boundary","mk_concat","property non-void-command collaborator"
"theory_seq","boundary","mk_concat","property non-void-command collaborator"
"theory_seq","boundary","mk_concat","property non-void-command collaborator"
"theory_seq","boundary","mk_concat","property non-void-command collaborator"
"theory_seq","boundary","mk_concat","property non-void-command collaborator"
"theory_seq","boundary","mk_concat","property non-void-command collaborator"
"theory_seq","boundary","mk_concat","property non-void-command collaborator"
"theory_seq","boundary","propagate_lit","predicate non-void-command collaborator"
"theory_seq","boundary","has_length","predicate collaborator"
"theory_seq","boundary","get_trail_stack","get collaborator"
"theory_seq","boundary","merge_eh","empty"
"theory_seq","boundary","after_merge_eh","empty"
"theory_seq","boundary","unmerge_eh","empty"
"theory_seq","boundary","add_solution","command collaborator"
"theory_seq","boundary","theory_seq::solve_eqs","predicate non-void-command"
"theory_seq","boundary","theory_seq::solve_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::add_consequence","command collaborator"
"theory_seq","boundary","theory_seq::expr2rep","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::has_len_offset","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::len_based_split","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::len_based_split","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_variable","predicate non-void-command"
"theory_seq","boundary","theory_seq::branch_variable_mb","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::is_complex","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::split_lengths","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_binary_variable","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_binary_variable","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_unit_variable","predicate set collaborator"
"theory_seq","boundary","theory_seq::branch_ternary_variable","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::can_align_from_lhs","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::can_align_from_rhs","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_ternary_variable_rhs","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_ternary_variable_lhs","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_quat_variable","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_alignment","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_quat_variable","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_variable_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_variable_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::insert_branch_start","command"
"theory_seq","boundary","theory_seq::find_branch_start","non-void-command"
"theory_seq","boundary","theory_seq::find_branch_candidate","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::can_be_equal","predicate collaborator"
"theory_seq","boundary","theory_seq::assume_equality","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_length_coherence","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::check_length_coherence","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::check_length_coherence0","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::check_length_coherence","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::reduce_length_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::is_unit_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::solve_nth_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::solve_nqs","predicate non-void-command"
"theory_seq","boundary","theory_seq::solve_ne","predicate non-void-command"
"theory_seq","boundary","theory_seq::check_ne_literals","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_ne2lit","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_ne2eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_ne2eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::reduce_ne","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_nqs","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_nq","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::theory_seq","constructor"
"theory_seq","boundary","theory_seq::~theory_seq","destructor"
"theory_seq","boundary","theory_seq::init","command collaborator"
"theory_seq","boundary","theory_seq::final_check_eh","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::set_empty","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::enforce_length","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::check_fixed_length","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::fixed_length","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_non_empty","command collaborator"
"theory_seq","boundary","theory_seq::propagate_is_conc","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::is_unit_nth","predicate collaborator"
"theory_seq","boundary","theory_seq::mk_nth","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_decompose","command collaborator"
"theory_seq","boundary","theory_seq::check_extensionality","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::check_extensionality","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::check_contains","predicate non-void-command"
"theory_seq","boundary","theory_seq::check_lts","predicate non-void-command"
"theory_seq","boundary","theory_seq::is_solved","predicate non-void-command"
"theory_seq","boundary","theory_seq::linearize","collaborator"
"theory_seq","boundary","theory_seq::propagate_lit","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::set_conflict","command collaborator"
"theory_seq","boundary","theory_seq::set_conflict","command collaborator"
"theory_seq","boundary","theory_seq::propagate_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::enforce_length_coherence","command collaborator"
"theory_seq","boundary","theory_seq::lift_ite","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::simplify_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::reduce_length","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::is_var","predicate collaborator"
"theory_seq","boundary","theory_seq::add_solution","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_max_length","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::reduce_length_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::reduce_length","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::is_safe_to_copy","predicate collaborator"
"theory_seq","boundary","theory_seq::get_length","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::solve_recfuns","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::solve_nc","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_cell","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::unfold","void-accessor command collaborator"
"theory_seq","boundary","theory_seq::display_explain","command collaborator"
"theory_seq","boundary","theory_seq::explain_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::explain_empty","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::simplify_and_solve_eqs","predicate non-void-command"
"theory_seq","boundary","theory_seq::internalize_eq_eh","empty"
"theory_seq","boundary","theory_seq::internalize_atom","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::internalize_term","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::is_beta_redex","predicate collaborator"
"theory_seq","boundary","theory_seq::add_length","command collaborator"
"theory_seq","boundary","theory_seq::add_length_limit","command collaborator"
"theory_seq","boundary","theory_seq::add_length_to_eqc","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::add_ubv_string","command collaborator"
"theory_seq","boundary","theory_seq::check_ubv_string","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::check_ubv_string","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::add_int_string","command collaborator"
"theory_seq","boundary","theory_seq::check_int_string","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::check_int_string","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_itos","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::branch_itos","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::apply_sort_cnstr","command collaborator"
"theory_seq","boundary","theory_seq::display","collaborator"
"theory_seq","boundary","theory_seq::display_nc","property collaborator"
"theory_seq","boundary","theory_seq::display_equations","property collaborator"
"theory_seq","boundary","theory_seq::display_equation","property collaborator"
"theory_seq","boundary","theory_seq::display_disequations","property collaborator"
"theory_seq","boundary","theory_seq::display_disequation","property collaborator"
"theory_seq","boundary","theory_seq::display_deps","property collaborator"
"theory_seq","boundary","theory_seq::display_deps_smt2","property collaborator"
"theory_seq","boundary","theory_seq::display_lit","property collaborator"
"theory_seq","boundary","theory_seq::display_deps","property collaborator"
"theory_seq","boundary","theory_seq::collect_statistics","controller"
"theory_seq","boundary","theory_seq::init_search_eh","command collaborator"
"theory_seq","boundary","theory_seq::init_model","command collaborator"
"theory_seq","boundary","theory_seq::finalize_model","command collaborator"
"theory_seq","boundary","theory_seq::init_model","command collaborator"
"theory_seq","boundary","theory_seq::get_ite_value","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_value","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_value","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::validate_model","command collaborator"
"theory_seq","boundary","theory_seq::elim_skolem","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::validate_axiom","command collaborator"
"theory_seq","boundary","theory_seq::validate_conflict","command collaborator"
"theory_seq","boundary","theory_seq::validate_assign","command collaborator"
"theory_seq","boundary","theory_seq::validate_assign_eq","command collaborator"
"theory_seq","boundary","theory_seq::validate_fmls","void-accessor command collaborator"
"theory_seq","boundary","theory_seq::mk_var","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::can_propagate","predicate non-void-command"
"theory_seq","boundary","theory_seq::canonize","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::canonize","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::canonize","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::expand","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::try_expand","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::expand1","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::add_dependency","void-accessor command collaborator"
"theory_seq","boundary","theory_seq::propagate","command collaborator"
"theory_seq","boundary","theory_seq::enque_axiom","command collaborator"
"theory_seq","boundary","theory_seq::deque_axiom","command collaborator"
"theory_seq","boundary","theory_seq::add_elim_string_axiom","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_sub","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_add","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_len","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::get_num_value","predicate collaborator"
"theory_seq","boundary","theory_seq::lower_bound","predicate collaborator"
"theory_seq","boundary","theory_seq::upper_bound","predicate collaborator"
"theory_seq","boundary","theory_seq::lower_bound2","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::get_length","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::ensure_nth","command collaborator"
"theory_seq","boundary","theory_seq::mk_simplified_literal","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_seq_eq","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_eq_empty","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::add_axiom","command collaborator"
"theory_seq","boundary","theory_seq::add_axiom","command collaborator"
"theory_seq","boundary","theory_seq::mk_join","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::mk_join","property non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_eq","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::assign_eh","command collaborator"
"theory_seq","boundary","theory_seq::new_eq_eh","command collaborator"
"theory_seq","boundary","theory_seq::new_eq_eh","command collaborator"
"theory_seq","boundary","theory_seq::new_diseq_eh","command collaborator"
"theory_seq","boundary","theory_seq::push_scope_eh","command"
"theory_seq","boundary","theory_seq::pop_scope_eh","command"
"theory_seq","boundary","theory_seq::restart_eh","empty"
"theory_seq","boundary","theory_seq::relevant_eh","command collaborator"
"theory_seq","boundary","theory_seq::add_unhandled_expr","set collaborator"
"theory_seq","boundary","theory_seq::add_theory_assumptions","command collaborator"
"theory_seq","boundary","theory_seq::should_research","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::propagate_length_limit","command collaborator"
"theory_seq","boundary","theory_seq::propagate_not_prefix","command collaborator"
"theory_seq","boundary","theory_seq::propagate_not_suffix","command collaborator"
"theory_seq","boundary","theory_seq::canonizes","predicate non-void-command collaborator"
"theory_seq","boundary","theory_seq::get_ite_concat","command collaborator"
"check_sat_result","commander boundary","check_sat_result","constructor"
"check_sat_result","commander boundary","inc_ref","set"
"check_sat_result","commander boundary","dec_ref","set"
"check_sat_result","commander boundary","set_status","property set collaborator"
"check_sat_result","commander boundary","status","get collaborator"
"check_sat_result","commander boundary","set_model_converter","set collaborator"
"check_sat_result","commander boundary","mc0","controller stateless"
"check_sat_result","commander boundary","get_model","command collaborator"
"check_sat_result","commander boundary","log_inference","command collaborator"
"check_sat_result","commander boundary","set_proof","set collaborator"
"check_sat_result","commander boundary","collect_timer_stats","controller"
"check_sat_result","commander boundary","check_sat_result::set_reason_unknown","command collaborator"
"check_sat_result","commander boundary","check_sat_result::get_proof","property non-void-command collaborator"
"theory_special_relations","boundary","new_diseq_eh","empty"
"theory_special_relations","boundary","use_diseqs","incidental"
"theory_special_relations","boundary","build_models","incidental"
"theory_special_relations","boundary","init_search_eh","empty"
"theory_special_relations","boundary","restart_eh","empty"
"theory_special_relations","boundary","can_propagate","get"
"theory_special_relations","boundary","theory_special_relations::theory_special_relations","constructor"
"theory_special_relations","boundary","theory_special_relations::~theory_special_relations","destructor"
"theory_special_relations","boundary","theory_special_relations::mk_fresh","controller stateless"
"theory_special_relations","boundary","theory_special_relations::internalize_next","command collaborator"
"theory_special_relations","boundary","theory_special_relations::internalize_term","predicate non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::internalize_atom","predicate non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::mk_var","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::new_eq_eh","command collaborator"
"theory_special_relations","boundary","theory_special_relations::final_check_eh","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::final_check_lo","collaborator incidental"
"theory_special_relations","boundary","theory_special_relations::ensure_enode","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::mk_literal","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::mk_var","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::final_check_plo","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::final_check_tc","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::final_check_to","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::enable","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::set_neg_cycle_conflict","command collaborator"
"theory_special_relations","boundary","theory_special_relations::set_conflict","command collaborator"
"theory_special_relations","boundary","theory_special_relations::final_check","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::extract_equalities","predicate non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::propagate_plo","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::propagate_po","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::propagate_tc","controller stateless"
"theory_special_relations","boundary","theory_special_relations::final_check_po","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::propagate","set collaborator"
"theory_special_relations","boundary","theory_special_relations::propagate","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::reset_eh","command collaborator"
"theory_special_relations","boundary","theory_special_relations::assign_eh","set collaborator"
"theory_special_relations","boundary","theory_special_relations::push_scope_eh","command collaborator"
"theory_special_relations","boundary","theory_special_relations::pop_scope_eh","command"
"theory_special_relations","boundary","theory_special_relations::del_atoms","command collaborator"
"theory_special_relations","boundary","theory_special_relations::collect_statistics","controller"
"theory_special_relations","boundary","theory_special_relations::mk_value","wrapper stateless"
"theory_special_relations","boundary","theory_special_relations::ensure_strict","command collaborator"
"theory_special_relations","boundary","theory_special_relations::ensure_tree","command collaborator"
"theory_special_relations","boundary","theory_special_relations::disconnected","predicate collaborator"
"theory_special_relations","boundary","theory_special_relations::mk_inj","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::mk_class","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::mk_interval","property non-void-command collaborator"
"theory_special_relations","boundary","theory_special_relations::init_model_lo","command collaborator"
"theory_special_relations","boundary","theory_special_relations::init_model_plo","command collaborator"
"theory_special_relations","boundary","theory_special_relations::init_model_po","command collaborator"
"theory_special_relations","boundary","theory_special_relations::init_model_to","command collaborator"
"theory_special_relations","boundary","theory_special_relations::is_neighbour_edge","controller stateless"
"theory_special_relations","boundary","theory_special_relations::is_strict_neighbour_edge","predicate collaborator"
"theory_special_relations","boundary","theory_special_relations::count_children","void-accessor command collaborator"
"theory_special_relations","boundary","theory_special_relations::assign_interval","void-accessor command collaborator"
"theory_special_relations","boundary","theory_special_relations::init_model","command collaborator"
"theory_special_relations","boundary","theory_special_relations::display","collaborator"
"theory_special_relations","boundary","theory_special_relations::collect_asserted_po_atoms","controller"
"theory_special_relations","boundary","theory_special_relations::display_atom","collaborator"
"theory_special_relations","boundary","theory_special_relations::get_specrels","controller"
"demodulator_rewriter","commander boundary","demodulator_rewriter::demodulator_rewriter","constructor"
"demodulator_rewriter","commander boundary","demodulator_rewriter::~demodulator_rewriter","destructor"
"demodulator_rewriter","commander boundary","demodulator_rewriter::insert_fwd_idx","command collaborator"
"demodulator_rewriter","commander boundary","demodulator_rewriter::remove_fwd_idx","command collaborator"
"demodulator_rewriter","commander boundary","demodulator_rewriter::check_fwd_idx_consistency","predicate controller"
"demodulator_rewriter","commander boundary","demodulator_rewriter::show_fwd_idx","controller"
"demodulator_rewriter","commander boundary","demodulator_rewriter::rewrite1","predicate non-void-command collaborator"
"demodulator_rewriter","commander boundary","demodulator_rewriter::rewrite_visit_children","predicate non-void-command collaborator"
"demodulator_rewriter","commander boundary","demodulator_rewriter::rewrite_cache","command"
"demodulator_rewriter","commander boundary","demodulator_rewriter::rewrite","property non-void-command collaborator"
"demodulator_rewriter","commander boundary","demodulator_rewriter::insert_bwd_idx","wrapper"
"demodulator_rewriter","commander boundary","demodulator_rewriter::remove_bwd_idx","wrapper"
"demodulator_rewriter","commander boundary","demodulator_rewriter::reschedule_processed","command collaborator"
"demodulator_rewriter","commander boundary","demodulator_rewriter::reschedule_demodulators","command collaborator"
"demodulator_rewriter","commander boundary","demodulator_rewriter::operator()","command collaborator"
"regex_automaton_under_assumptions","entity boundary","regex_automaton_under_assumptions","constructor"
"regex_automaton_under_assumptions","entity boundary","regex_automaton_under_assumptions","constructor"
"regex_automaton_under_assumptions","entity boundary","set_lower_bound","command collaborator"
"regex_automaton_under_assumptions","entity boundary","unset_lower_bound","set"
"regex_automaton_under_assumptions","entity boundary","set_upper_bound","command collaborator"
"regex_automaton_under_assumptions","entity boundary","unset_upper_bound","set"
"regex_automaton_under_assumptions","entity boundary","get_lower_bound","predicate collaborator"
"regex_automaton_under_assumptions","entity boundary","get_upper_bound","predicate collaborator"
"regex_automaton_under_assumptions","entity boundary","get_automaton","get collaborator"
"regex_automaton_under_assumptions","entity boundary","get_regex_term","get collaborator"
"regex_automaton_under_assumptions","entity boundary","get_polarity","get"
"product_relation_plugin","boundary","is_product_relation","predicate non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::get_plugin","controller stateless"
"product_relation_plugin","boundary","product_relation_plugin::product_relation_plugin","constructor"
"product_relation_plugin","boundary","product_relation_plugin::initialize","command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::get_relation_kind","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::get_relation_kind","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::can_handle_signature","predicate non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::can_handle_signature","collaborator incidental"
"product_relation_plugin","boundary","product_relation_plugin::get","collaborator incidental"
"product_relation_plugin","boundary","product_relation_plugin::get","collaborator incidental"
"product_relation_plugin","boundary","product_relation_plugin::get","collaborator incidental"
"product_relation_plugin","boundary","product_relation_plugin::get","collaborator incidental"
"product_relation_plugin","boundary","product_relation_plugin::is_product_relation","controller stateless"
"product_relation_plugin","boundary","product_relation_plugin::are_aligned","controller stateless"
"product_relation_plugin","boundary","product_relation_plugin::get_common_spec","controller stateless"
"product_relation_plugin","boundary","product_relation_plugin::mk_empty","property wrapper"
"product_relation_plugin","boundary","product_relation_plugin::mk_empty","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_full","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_full","property wrapper"
"product_relation_plugin","boundary","product_relation_plugin::mk_join_fn","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_project_fn","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_rename_fn","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_union_w_fn","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_union_fn","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_widen_fn","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_filter_identical_fn","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_filter_equal_fn","property non-void-command collaborator"
"product_relation_plugin","boundary","product_relation_plugin::mk_filter_interpreted_fn","property non-void-command collaborator"
"utvpi_tester","entity boundary","get_weight","get collaborator"
"utvpi_tester","entity boundary","utvpi_tester::utvpi_tester","constructor"
"utvpi_tester","entity boundary","utvpi_tester::operator()","predicate non-void-command collaborator"
"utvpi_tester","entity boundary","utvpi_tester::get_linearization","get collaborator"
"utvpi_tester","entity boundary","utvpi_tester::operator()","wrapper stateless"
"utvpi_tester","entity boundary","utvpi_tester::linearize","predicate non-void-command collaborator"
"utvpi_tester","entity boundary","utvpi_tester::linearize","predicate non-void-command collaborator"
"utvpi_tester","entity boundary","utvpi_tester::linearize","predicate non-void-command collaborator"
"help_cmd","commander boundary degenerate","display_cmd","controller stateless"
"help_cmd","commander boundary degenerate","help_cmd","constructor"
"help_cmd","commander boundary degenerate","get_usage","incidental"
"help_cmd","commander boundary degenerate","get_descr","collaborator incidental"
"help_cmd","commander boundary degenerate","get_arity","incidental"
"help_cmd","commander boundary degenerate","prepare","command collaborator"
"help_cmd","commander boundary degenerate","next_arg_kind","collaborator incidental"
"help_cmd","commander boundary degenerate","set_next_arg","command collaborator"
"help_cmd","commander boundary degenerate","execute","command collaborator"
"simple_check_sat_result","boundary","get_manager","property collaborator"
"simple_check_sat_result","boundary","set_reason_unknown","set"
"simple_check_sat_result","boundary","simple_check_sat_result::simple_check_sat_result","constructor"
"simple_check_sat_result","boundary","simple_check_sat_result::~simple_check_sat_result","destructor"
"simple_check_sat_result","boundary","simple_check_sat_result::collect_statistics","controller"
"simple_check_sat_result","boundary","simple_check_sat_result::get_unsat_core","command collaborator"
"simple_check_sat_result","boundary","simple_check_sat_result::get_model_core","void-accessor collaborator"
"simple_check_sat_result","boundary","simple_check_sat_result::get_proof_core","get collaborator"
"simple_check_sat_result","boundary","simple_check_sat_result::reason_unknown","get"
"simple_check_sat_result","boundary","simple_check_sat_result::get_labels","empty"
"rules","entity boundary","begin","property collaborator"
"rules","entity boundary","end","property collaborator"
"rules","entity boundary","init","command collaborator"
"rules","entity boundary","insert","command collaborator"
"rules","entity boundary","get_num_rules","collaborator"
"rules","entity boundary","get_decls","collaborator"
"rules","entity boundary","get_rule","get collaborator"
"rules","entity boundary","reset","command"
"combined_solver_factory","boundary degenerate small-class","combined_solver_factory","constructor"
"combined_solver_factory","boundary degenerate small-class","operator()","wrapper stateless"
"parallel_tactic","commander boundary","init","command collaborator"
"parallel_tactic","commander boundary","log_branches","collaborator incidental"
"parallel_tactic","commander boundary","add_branches","set collaborator"
"parallel_tactic","commander boundary","dec_branch","set collaborator"
"parallel_tactic","commander boundary","collect_core","command collaborator"
"parallel_tactic","commander boundary","close_branch","command collaborator"
"parallel_tactic","commander boundary","report_sat","command collaborator"
"parallel_tactic","commander boundary","inc_unsat","command collaborator"
"parallel_tactic","commander boundary","report_unsat","command collaborator"
"parallel_tactic","commander boundary","report_undef","command collaborator"
"parallel_tactic","commander boundary","cube_and_conquer","command collaborator"
"parallel_tactic","commander boundary","spawn_cubes","command collaborator"
"parallel_tactic","commander boundary","backtrack","command collaborator"
"parallel_tactic","commander boundary","canceled","predicate set collaborator"
"parallel_tactic","commander boundary","memory_pressure","wrapper stateless"
"parallel_tactic","commander boundary","run_solver","command collaborator"
"parallel_tactic","commander boundary","collect_statistics","command collaborator"
"parallel_tactic","commander boundary","collect_statistics","controller"
"parallel_tactic","commander boundary","solve","property non-void-command collaborator"
"parallel_tactic","commander boundary","display","property non-void-command collaborator"
"parallel_tactic","commander boundary","name","incidental"
"parallel_tactic","commander boundary","operator()","command collaborator"
"parallel_tactic","commander boundary","conquer_batch_size","controller"
"parallel_tactic","commander boundary","cleanup","command"
"parallel_tactic","commander boundary","translate","property non-void-command collaborator"
"parallel_tactic","commander boundary","updt_params","set collaborator"
"parallel_tactic","commander boundary","collect_statistics","collaborator"
"parallel_tactic","commander boundary","reset_statistics","command"
"scc::report","empty","~report","destructor"
"approx_set","boundary degenerate","approx_set","constructor"
"approx_set","boundary degenerate","begin","wrapper stateless"
"approx_set","boundary degenerate","operator==","wrapper stateless"
"approx_set","boundary degenerate","approx_set::display","collaborator incidental"
"approx_set","boundary degenerate","approx_set::size","incidental"
"asserted_formulas","boundary","canceled","predicate non-void-command"
"asserted_formulas","boundary","flush_cache","command"
"asserted_formulas","boundary","depth","get collaborator"
"asserted_formulas","boundary","has_quantifiers","get"
"asserted_formulas","boundary","inconsistent","get"
"asserted_formulas","boundary","get_num_formulas","unclassified"
"asserted_formulas","boundary","get_qhead","get"
"asserted_formulas","boundary","get_formula","get wrapper"
"asserted_formulas","boundary","get_formula_proof","get wrapper"
"asserted_formulas","boundary","get_params","get collaborator"
"asserted_formulas","boundary","empty","predicate"
"asserted_formulas","boundary","get_macro_manager","get collaborator"
"asserted_formulas","boundary","get_num_macros","unclassified"
"asserted_formulas","boundary","get_first_macro_last_level","unclassified"
"asserted_formulas","boundary","get_macro_func_decl","property collaborator"
"asserted_formulas","boundary","get_macro_interpretation","property collaborator"
"asserted_formulas","boundary","get_macro_quantifier","property collaborator"
"asserted_formulas","boundary","insert_macro","command collaborator"
"asserted_formulas","boundary","insert_macro","command collaborator"
"asserted_formulas","boundary","asserted_formulas::asserted_formulas","constructor"
"asserted_formulas","boundary","asserted_formulas::setup","command"
"asserted_formulas","boundary","asserted_formulas::~asserted_formulas","destructor"
"asserted_formulas","boundary","asserted_formulas::push_assertion","command collaborator"
"asserted_formulas","boundary","asserted_formulas::updt_params","command collaborator"
"asserted_formulas","boundary","asserted_formulas::set_eliminate_and","command"
"asserted_formulas","boundary","asserted_formulas::assert_expr","command collaborator"
"asserted_formulas","boundary","asserted_formulas::assert_expr","command collaborator"
"asserted_formulas","boundary","asserted_formulas::get_assertions","controller"
"asserted_formulas","boundary","asserted_formulas::push_scope","set"
"asserted_formulas","boundary","asserted_formulas::push_scope_core","command collaborator"
"asserted_formulas","boundary","asserted_formulas::force_push","set"
"asserted_formulas","boundary","asserted_formulas::pop_scope","command collaborator"
"asserted_formulas","boundary","asserted_formulas::reset","command"
"asserted_formulas","boundary","asserted_formulas::finalize","command"
"asserted_formulas","boundary","asserted_formulas::check_well_sorted","predicate controller"
"asserted_formulas","boundary","asserted_formulas::reduce","command"
"asserted_formulas","boundary","asserted_formulas::get_formulas_last_level","unclassified"
"asserted_formulas","boundary","asserted_formulas::invoke","predicate non-void-command collaborator"
"asserted_formulas","boundary","asserted_formulas::display","collaborator"
"asserted_formulas","boundary","asserted_formulas::display_ll","collaborator"
"asserted_formulas","boundary","asserted_formulas::collect_statistics","empty"
"asserted_formulas","boundary","asserted_formulas::swap_asserted_formulas","command collaborator"
"asserted_formulas","boundary","asserted_formulas::find_macros_core","command"
"asserted_formulas","boundary","asserted_formulas::flatten_clauses","command collaborator"
"asserted_formulas","boundary","asserted_formulas::apply_quasi_macros","command collaborator"
"asserted_formulas","boundary","asserted_formulas::nnf_cnf","command collaborator"
"asserted_formulas","boundary","asserted_formulas::reduce_and_solve","command"
"asserted_formulas","boundary","asserted_formulas::commit","command"
"asserted_formulas","boundary","asserted_formulas::commit","command collaborator"
"asserted_formulas","boundary","asserted_formulas::propagate_values","command"
"asserted_formulas","boundary","asserted_formulas::propagate_values","non-void-command collaborator"
"asserted_formulas","boundary","asserted_formulas::update_substitution","predicate non-void-command collaborator"
"asserted_formulas","boundary","asserted_formulas::is_gt","predicate non-void-command collaborator"
"asserted_formulas","boundary","asserted_formulas::compute_depth","controller stateless"
"asserted_formulas","boundary","asserted_formulas::get_inconsistency_proof","property collaborator"
"asserted_formulas","boundary","asserted_formulas::get_total_size","controller"
"progress_callback","degenerate small-class","fast_progress_sample","empty"
"progress_callback","degenerate small-class","slow_progress_sample","empty"
"mpz_matrix","data-provider boundary","operator()","get wrapper"
"mpz_matrix","data-provider boundary","operator()","get wrapper"
"mpz_matrix","data-provider boundary","swap","wrapper"
"mpz_matrix","data-provider boundary","row","property wrapper"
"smt_logics","entity boundary degenerate","smt_logics::supported_logic","predicate non-void-command collaborator"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_reals_only","collaborator incidental"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_arith","wrapper stateless"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_bv","wrapper stateless"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_array","wrapper stateless"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_seq","wrapper stateless"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_str","wrapper stateless"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_fpa","wrapper stateless"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_uf","collaborator incidental"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_horn","collaborator incidental"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_pb","predicate non-void-command collaborator"
"smt_logics","entity boundary degenerate","smt_logics::logic_has_datatype","predicate non-void-command collaborator"
"scoped_assumption_push","empty","scoped_assumption_push","constructor"
"scoped_assumption_push","empty","~scoped_assumption_push","destructor"
"pool_solver","entity boundary","is_virtual","predicate"
"pool_solver","entity boundary","pool_solver","constructor"
"pool_solver","entity boundary","~pool_solver","destructor"
"pool_solver","entity boundary","base_solver","property non-void-command collaborator"
"pool_solver","entity boundary","set_phase","command collaborator"
"pool_solver","entity boundary","get_phase","property non-void-command collaborator"
"pool_solver","entity boundary","set_phase","command collaborator"
"pool_solver","entity boundary","move_to_front","command collaborator"
"pool_solver","entity boundary","translate","wrapper stateless"
"pool_solver","entity boundary","updt_params","command collaborator"
"pool_solver","entity boundary","push_params","command"
"pool_solver","entity boundary","pop_params","command"
"pool_solver","entity boundary","collect_param_descrs","command collaborator"
"pool_solver","entity boundary","collect_statistics","collaborator"
"pool_solver","entity boundary","get_num_assertions","unclassified"
"pool_solver","entity boundary","get_assertion","property collaborator"
"pool_solver","entity boundary","get_unsat_core","void-accessor command collaborator"
"pool_solver","entity boundary","get_num_assumptions","unclassified"
"pool_solver","entity boundary","get_proof_core","get non-void-command collaborator"
"pool_solver","entity boundary","internalize_assertions","command collaborator"
"pool_solver","entity boundary","get_levels","command collaborator"
"pool_solver","entity boundary","get_trail","property non-void-command collaborator"
"pool_solver","entity boundary","check_sat_core2","property non-void-command collaborator"
"pool_solver","entity boundary","check_sat_cc_core","property non-void-command collaborator"
"pool_solver","entity boundary","push_core","command"
"pool_solver","entity boundary","pop_core","command"
"pool_solver","entity boundary","assert_expr_core","command collaborator"
"pool_solver","entity boundary","get_model_core","command collaborator"
"pool_solver","entity boundary","get_assumption","property collaborator"
"pool_solver","entity boundary","reason_unknown","property"
"pool_solver","entity boundary","set_reason_unknown","command"
"pool_solver","entity boundary","get_labels","command collaborator"
"pool_solver","entity boundary","set_progress_callback","command collaborator"
"pool_solver","entity boundary","cube","property wrapper"
"pool_solver","entity boundary","congruence_next","collaborator incidental"
"pool_solver","entity boundary","congruence_root","collaborator incidental"
"pool_solver","entity boundary","get_manager","property collaborator"
"pool_solver","entity boundary","refresh","command collaborator"
"pool_solver","entity boundary","reset","command"
"pool_solver","entity boundary","dump_benchmark","command collaborator"
"pool_solver","entity boundary","lbool2status","collaborator incidental"
"pool_solver","entity boundary","mk_file_name","property non-void-command collaborator"
"reduce_hypotheses","entity boundary","reset","command"
"reduce_hypotheses","entity boundary","compute_mark1","predicate non-void-command collaborator"
"reduce_hypotheses","entity boundary","compute_marks","command collaborator"
"reduce_hypotheses","entity boundary","find_units","empty"
"reduce_hypotheses","entity boundary","reduce","void-accessor command collaborator"
"reduce_hypotheses","entity boundary","is_reduced","predicate non-void-command collaborator"
"reduce_hypotheses","entity boundary","mk_lemma_core","property non-void-command collaborator"
"reduce_hypotheses","entity boundary","mk_unit_resolution_core","property non-void-command collaborator"
"reduce_hypotheses","entity boundary","reduce_units","predicate non-void-command collaborator"
"reduce_hypotheses","entity boundary","reduce_hypotheses","constructor"
"reduce_hypotheses","entity boundary","operator()","command collaborator"
"solver_pool","boundary","solver_pool::solver_pool","constructor"
"solver_pool","boundary","solver_pool::get_base_solvers","property controller"
"solver_pool","boundary","solver_pool::updt_params","command collaborator"
"solver_pool","boundary","solver_pool::collect_statistics","collaborator"
"solver_pool","boundary","solver_pool::reset_statistics","command"
"solver_pool","boundary","solver_pool::mk_solver","property non-void-command collaborator"
"solver_pool","boundary","solver_pool::reset_solver","controller stateless"
"solver_pool","boundary","solver_pool::refresh","command collaborator"
"aig","empty","aig","constructor"
"aig_hash","boundary degenerate small-class","operator()","wrapper stateless"
"aig_lit_lt","pure-controller degenerate small-class","operator()","controller stateless"
"aig_manager::imp","boundary","dec_ref_core","void-accessor command collaborator"
"aig_manager::imp","boundary","checkpoint","command"
"aig_manager::imp","boundary","dec_ref_core","command collaborator"
"aig_manager::imp","boundary","dec_ref_result","wrapper stateless"
"aig_manager::imp","boundary","dec_ref_result","command collaborator"
"aig_manager::imp","boundary","process_to_delete","command collaborator"
"aig_manager::imp","boundary","delete_node","command collaborator"
"aig_manager::imp","boundary","allocate_node","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_var","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_node_core","property non-void-command collaborator"
"aig_manager::imp","boundary","is_not_eq","controller stateless"
"aig_manager::imp","boundary","mk_node","get property non-void-command collaborator"
"aig_manager::imp","boundary","is_ite_core","predicate collaborator"
"aig_manager::imp","boundary","is_ite","wrapper stateless"
"aig_manager::imp","boundary","is_ite","wrapper stateless"
"aig_manager::imp","boundary","is_iff","predicate collaborator"
"aig_manager::imp","boundary","var2expr","get wrapper"
"aig_manager::imp","boundary","~imp","destructor"
"aig_manager::imp","boundary","m","controller stateless"
"aig_manager::imp","boundary","inc_ref","collaborator incidental"
"aig_manager::imp","boundary","inc_ref","command collaborator"
"aig_manager::imp","boundary","dec_ref","command collaborator"
"aig_manager::imp","boundary","dec_ref","command collaborator"
"aig_manager::imp","boundary","dec_array_ref","command collaborator"
"aig_manager::imp","boundary","mk_and","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_and","get property non-void-command collaborator"
"aig_manager::imp","boundary","mk_or","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_or","get property non-void-command collaborator"
"aig_manager::imp","boundary","mk_ite","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_iff","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_xor","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_implies","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_aig","property non-void-command collaborator"
"aig_manager::imp","boundary","mk_aig","property non-void-command collaborator"
"aig_manager::imp","boundary","to_formula","wrapper"
"aig_manager::imp","boundary","max_sharing","property wrapper"
"aig_manager::imp","boundary","display_ref","wrapper stateless"
"aig_manager::imp","boundary","display_ref","collaborator"
"aig_manager::imp","boundary","display","collaborator"
"aig_manager::imp","boundary","display_smt2_ref","collaborator"
"aig_manager::imp","boundary","display_smt2","collaborator"
"aig_manager::imp","boundary","get_num_aigs","get"
"bv_bounds_simplifier","boundary","bv_bounds_simplifier","constructor"
"bv_bounds_simplifier","boundary","updt_params","set collaborator"
"bv_bounds_simplifier","boundary","~bv_bounds_simplifier","destructor"
"bv_bounds_simplifier","boundary","assert_expr","predicate non-void-command"
"bv_bounds_simplifier","boundary","simplify","predicate non-void-command collaborator"
"bv_bounds_simplifier","boundary","may_simplify","predicate non-void-command collaborator"
"bv_bounds_simplifier","boundary","pop","command"
"bv_bounds_simplifier","boundary","translate","property wrapper"
"bv_bounds_simplifier","boundary","scope_level","unclassified"
"eq_root_propagation_justification","entity boundary","eq_root_propagation_justification","constructor"
"eq_root_propagation_justification","entity boundary","get_name","incidental"
"eq_root_propagation_justification","entity boundary","eq_root_propagation_justification::get_antecedents","command collaborator"
"eq_root_propagation_justification","entity boundary","eq_root_propagation_justification::mk_proof","property non-void-command collaborator"
"aig_manager","boundary","aig_manager::aig_manager","constructor"
"aig_manager","boundary","aig_manager::~aig_manager","destructor"
"aig_manager","boundary","aig_manager::set_max_memory","set"
"aig_manager","boundary","aig_manager::mk_aig","property non-void-command collaborator"
"aig_manager","boundary","aig_manager::mk_aig","property non-void-command collaborator"
"aig_manager","boundary","aig_manager::mk_not","property controller"
"aig_manager","boundary","aig_manager::mk_and","property non-void-command collaborator"
"aig_manager","boundary","aig_manager::mk_or","property non-void-command collaborator"
"aig_manager","boundary","aig_manager::mk_iff","property non-void-command collaborator"
"aig_manager","boundary","aig_manager::mk_ite","property non-void-command collaborator"
"aig_manager","boundary","aig_manager::max_sharing","void-accessor command collaborator"
"aig_manager","boundary","aig_manager::to_formula","command collaborator"
"aig_manager","boundary","aig_manager::display","collaborator"
"aig_manager","boundary","aig_manager::display_smt2","collaborator"
"aig_manager","boundary","aig_manager::get_num_aigs","unclassified"
"is_unbounded_proc","commander degenerate","operator()","command collaborator"
"is_unbounded_proc","commander degenerate","operator()","empty"
"is_unbounded_proc","commander degenerate","operator()","empty"
"is_unbounded_probe","boundary degenerate small-class","operator()","wrapper stateless"
"add_bounds_tactic","boundary","translate","property wrapper"
"add_bounds_tactic","boundary","~add_bounds_tactic","destructor"
"add_bounds_tactic","boundary","name","incidental"
"add_bounds_tactic","boundary","updt_params","command collaborator"
"add_bounds_tactic","boundary","collect_param_descrs","controller stateless"
"add_bounds_tactic","boundary","operator()","wrapper stateless"
"add_bounds_tactic","boundary","cleanup","wrapper"
"fixed_equality","empty","fixed_equality","constructor"
"arith_bounds_tactic","boundary","arith_bounds_tactic","constructor"
"arith_bounds_tactic","boundary","get_manager","get collaborator"
"arith_bounds_tactic","boundary","operator()","command collaborator"
"arith_bounds_tactic","boundary","name","incidental"
"arith_bounds_tactic","boundary","translate","wrapper stateless"
"arith_bounds_tactic","boundary","checkpoint","command"
"arith_bounds_tactic","boundary","mk_proof","void-accessor command collaborator"
"arith_bounds_tactic","boundary","is_le_or_lt","predicate non-void-command"
"arith_bounds_tactic","boundary","bounds_arith_subsumption","command collaborator"
"arith_bounds_tactic","boundary","cleanup","empty"
"pb_lit_rewriter_util","boundary degenerate","negate","collaborator incidental"
"pb_lit_rewriter_util","boundary degenerate","display","collaborator incidental"
"pb_lit_rewriter_util","boundary degenerate","is_negated","controller stateless"
"pb_lit_rewriter_util","boundary degenerate","is_true","collaborator incidental"
"pb_lit_rewriter_util","boundary degenerate","is_false","collaborator incidental"
"lt_rational","boundary degenerate small-class","operator()","collaborator incidental"
"bv2int_rewriter","entity boundary","m","get collaborator"
"bv2int_rewriter","entity boundary","mk_app","void-accessor command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::bv2int_rewriter","copy-constructor"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_app_core","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_le","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_lt","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_ge","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_gt","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_ite","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_eq","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_idiv","collaborator incidental"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_mod","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_rem","collaborator incidental"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_uminus","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_add","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::align_sizes","void-accessor command"
"bv2int_rewriter","entity boundary","bv2int_rewriter::is_zero","predicate non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_bv_add","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_add","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_mul","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_bv_mul","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_mul","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_sub","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_sub","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::is_bv2int","predicate non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::is_shl1","predicate non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::is_bv2int_diff","predicate non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::is_sbv2int","predicate non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_sbv2int","property non-void-command collaborator"
"bv2int_rewriter","entity boundary","bv2int_rewriter::mk_extend","property non-void-command collaborator"
"bv2int_rewriter_cfg","entity boundary degenerate","rewrite_patterns","incidental"
"bv2int_rewriter_cfg","entity boundary degenerate","flat_assoc","collaborator incidental"
"bv2int_rewriter_cfg","entity boundary degenerate","reduce_app","property non-void-command collaborator"
"bv2int_rewriter_cfg","entity boundary degenerate","bv2int_rewriter_cfg","constructor"
"bv2int_rewriter_star","empty","bv2int_rewriter_star","constructor"
"bv2real_util::contains_bv2real_proc","commander degenerate","operator()","command collaborator"
"bv2real_util::contains_bv2real_proc","commander degenerate","operator()","empty"
"bv2real_util::contains_bv2real_proc","commander degenerate","operator()","empty"
"factor_tactic","boundary","translate","property wrapper"
"factor_tactic","boundary","~factor_tactic","destructor"
"factor_tactic","boundary","name","incidental"
"factor_tactic","boundary","updt_params","command collaborator"
"factor_tactic","boundary","collect_param_descrs","command collaborator"
"factor_tactic","boundary","operator()","controller stateless"
"factor_tactic","boundary","cleanup","wrapper"
"bv2real_util","boundary","reset","command"
"bv2real_util","boundary","mk_bv2real","property non-void-command collaborator"
"bv2real_util","boundary","mk_bv2real_reduced","command collaborator"
"bv2real_util","boundary","is_pos_ltf","predicate collaborator"
"bv2real_util","boundary","is_pos_lef","predicate collaborator"
"bv2real_util","boundary","is_pos_lt","predicate collaborator"
"bv2real_util","boundary","is_pos_le","predicate collaborator"
"bv2real_util","boundary","mk_pos_lt","property non-void-command collaborator"
"bv2real_util","boundary","mk_pos_le","property non-void-command collaborator"
"bv2real_util","boundary","default_root","get collaborator"
"bv2real_util","boundary","default_divisor","get collaborator"
"bv2real_util","boundary","max_divisor","get collaborator"
"bv2real_util","boundary","get_max_num_bits","get"
"bv2real_util","boundary","add_side_condition","command collaborator"
"bv2real_util","boundary","num_side_conditions","unclassified"
"bv2real_util","boundary","side_conditions","property collaborator"
"bv2real_util","boundary","add_aux_decl","command collaborator"
"bv2real_util","boundary","num_aux_decls","unclassified"
"bv2real_util","boundary","get_aux_decl","get collaborator"
"bv2real_util","boundary","m","get collaborator"
"bv2real_util","boundary","a","get collaborator"
"bv2real_util","boundary","bv2real_util::bv2real_util","constructor"
"bv2real_util","boundary","bv2real_util::is_bv2real","controller stateless"
"bv2real_util","boundary","bv2real_util::is_bv2real","predicate collaborator"
"bv2real_util","boundary","bv2real_util::is_bv2real","predicate collaborator"
"bv2real_util","boundary","bv2real_util::contains_bv2real","predicate wrapper"
"bv2real_util","boundary","bv2real_util::mk_bv2real","predicate non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::mk_bv2real_c","property non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::mk_bv2real_reduced","void-accessor command collaborator"
"bv2real_util","boundary","bv2real_util::mk_div","void-accessor command collaborator"
"bv2real_util","boundary","bv2real_util::mk_sbv2real","void-accessor command collaborator"
"bv2real_util","boundary","bv2real_util::mk_bv_mul","property non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::align_divisors","void-accessor command collaborator"
"bv2real_util","boundary","bv2real_util::mk_bv_mul","property non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::is_zero","predicate non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::mk_bv_add","property non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::align_sizes","void-accessor command collaborator"
"bv2real_util","boundary","bv2real_util::mk_sbv","property non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::mk_bv_sub","property non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::mk_extend","property non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::is_bv2real","predicate non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::align_divisor","predicate non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::mk_is_divisible_by","predicate non-void-command collaborator"
"bv2real_util","boundary","bv2real_util::memory_exceeded","predicate wrapper"
"normalize_bounds_tactic","unclassified","translate","property wrapper"
"normalize_bounds_tactic","unclassified","~normalize_bounds_tactic","destructor"
"normalize_bounds_tactic","unclassified","name","incidental"
"normalize_bounds_tactic","unclassified","updt_params","command collaborator"
"normalize_bounds_tactic","unclassified","collect_param_descrs","controller stateless"
"normalize_bounds_tactic","unclassified","operator()","controller stateless"
"normalize_bounds_tactic","unclassified","cleanup","wrapper"
"theory_axiom_justification","degenerate","theory_axiom_justification","constructor"
"theory_axiom_justification","degenerate","get_antecedents","empty"
"theory_axiom_justification","degenerate","get_name","incidental"
"theory_axiom_justification","degenerate","theory_axiom_justification::mk_proof","property non-void-command collaborator"
"diff_neq_tactic","boundary","translate","property wrapper"
"diff_neq_tactic","boundary","~diff_neq_tactic","destructor"
"diff_neq_tactic","boundary","name","incidental"
"diff_neq_tactic","boundary","updt_params","command collaborator"
"diff_neq_tactic","boundary","collect_param_descrs","controller stateless"
"diff_neq_tactic","boundary","collect_statistics","controller"
"diff_neq_tactic","boundary","reset_statistics","set"
"diff_neq_tactic","boundary","operator()","wrapper stateless"
"diff_neq_tactic","boundary","cleanup","wrapper"
"fix_dl_var_tactic","boundary","translate","property wrapper"
"fix_dl_var_tactic","boundary","~fix_dl_var_tactic","destructor"
"fix_dl_var_tactic","boundary","name","incidental"
"fix_dl_var_tactic","boundary","updt_params","command collaborator"
"fix_dl_var_tactic","boundary","collect_param_descrs","command collaborator"
"fix_dl_var_tactic","boundary","operator()","controller stateless"
"fix_dl_var_tactic","boundary","cleanup","wrapper"
"ParamDescrs","pure-controller degenerate","Validate","controller stateless"
"ParamDescrs","pure-controller degenerate","GetKind","controller stateless"
"ParamDescrs","pure-controller degenerate","GetDocumentation","controller stateless"
"fm_tactic","boundary","translate","property wrapper"
"fm_tactic","boundary","~fm_tactic","destructor"
"fm_tactic","boundary","name","incidental"
"fm_tactic","boundary","updt_params","command collaborator"
"fm_tactic","boundary","collect_param_descrs","controller stateless"
"fm_tactic","boundary","cleanup","wrapper"
"fm_tactic","boundary","operator()","wrapper stateless"
"theory_checker","boundary","rule_type","property controller"
"theory_checker","boundary","add","controller stateless"
"theory_checker","boundary","mul","collaborator incidental"
"theory_checker","boundary","add","void-accessor command collaborator"
"theory_checker","boundary","resolve","predicate non-void-command collaborator"
"theory_checker","boundary","cut","void-accessor command collaborator"
"theory_checker","boundary","linearize","void-accessor command collaborator"
"theory_checker","boundary","is_numeral","predicate non-void-command collaborator"
"theory_checker","boundary","check_ineq","predicate controller"
"theory_checker","boundary","reduce_eq","predicate non-void-command"
"theory_checker","boundary","add_literal","predicate non-void-command"
"theory_checker","boundary","check_farkas","predicate non-void-command"
"theory_checker","boundary","check_bound","predicate non-void-command collaborator"
"theory_checker","boundary","check_implied_eq","predicate non-void-command"
"theory_checker","boundary","display_row","property wrapper"
"theory_checker","boundary","display_eq","command collaborator"
"theory_checker","boundary","display_ineq","command collaborator"
"theory_checker","boundary","fresh","controller stateless"
"theory_checker","boundary","reset","command"
"theory_checker","boundary","add_ineq","predicate non-void-command collaborator"
"theory_checker","boundary","add_conseq","predicate non-void-command"
"theory_checker","boundary","add_eq","command collaborator"
"theory_checker","boundary","check","predicate non-void-command collaborator"
"theory_checker","boundary","display","property non-void-command collaborator"
"theory_checker","boundary","clause","property non-void-command collaborator"
"theory_checker","boundary","add_implied_diseq","predicate non-void-command collaborator"
"theory_checker","boundary","check","predicate non-void-command collaborator"
"theory_checker","boundary","register_plugins","controller"
"theory_checker","boundary","theory_checker","constructor"
"theory_checker","boundary","check","predicate non-void-command collaborator"
"theory_checker","boundary","clause","property controller"
"theory_checker","boundary","register_plugins","controller"
"theory_checker","boundary","theory_checker","constructor"
"theory_checker","boundary","clause","property controller"
"theory_checker","boundary","check","collaborator incidental"
"theory_checker","boundary","register_plugins","controller"
"theory_checker","boundary","theory_checker","constructor"
"theory_checker","boundary","check","collaborator incidental"
"theory_checker","boundary","register_plugins","controller"
"theory_checker","boundary","mark","command collaborator"
"theory_checker","boundary","is_marked","predicate non-void-command collaborator"
"theory_checker","boundary","nmark","command collaborator"
"theory_checker","boundary","is_nmarked","predicate non-void-command collaborator"
"theory_checker","boundary","complement_mark","command collaborator"
"theory_checker","boundary","is_complement","predicate non-void-command collaborator"
"theory_checker","boundary","register_plugins","controller"
"theory_checker","boundary","theory_checker::check_bv","collaborator incidental"
"theory_checker","boundary","theory_checker::check_bit2eq","collaborator incidental"
"theory_checker","boundary","theory_checker::check_bit2ne","collaborator incidental"
"theory_checker","boundary","theory_checker::check_eq2bit","collaborator incidental"
"theory_checker","boundary","theory_checker::check_ne2bit","collaborator incidental"
"theory_checker","boundary","theory_checker::check_bv2int","collaborator incidental"
"theory_checker","boundary","theory_checker::theory_checker","constructor"
"theory_checker","boundary","theory_checker::~theory_checker","destructor"
"theory_checker","boundary","theory_checker::add_plugin","command collaborator"
"theory_checker","boundary","theory_checker::register_plugin","command collaborator"
"theory_checker","boundary","theory_checker::check","predicate non-void-command collaborator"
"theory_checker","boundary","theory_checker::clause","property non-void-command collaborator"
"theory_checker","boundary","theory_checker::vc","predicate non-void-command collaborator"
"theory_checker","boundary","theory_checker::check","predicate non-void-command collaborator"
"theory_checker","boundary","theory_checker::clause","property non-void-command collaborator"
"theory_checker","boundary","theory_checker::binding","property non-void-command collaborator"
"theory_checker","boundary","theory_checker::vc","predicate non-void-command collaborator"
"theory_checker","boundary","theory_checker::is_inst","predicate non-void-command collaborator"
"theory_checker","boundary","theory_checker::is_bind","predicate non-void-command collaborator"
"theory_checker","boundary","theory_checker::clause","property controller"
"theory_checker","boundary","theory_checker::check","predicate non-void-command collaborator"
"theory_checker","boundary","theory_checker::equiv","wrapper stateless"
"nla2bv_tactic","unclassified","translate","property wrapper"
"nla2bv_tactic","unclassified","name","incidental"
"nla2bv_tactic","unclassified","updt_params","command collaborator"
"nla2bv_tactic","unclassified","collect_param_descrs","controller stateless"
"nla2bv_tactic","unclassified","operator()","controller"
"nla2bv_tactic","unclassified","cleanup","empty"
"is_lira_probe","boundary degenerate small-class","operator()","wrapper stateless"
"arith_bw_probe","controller small-class","operator()","property controller"
"has_nlmul","commander degenerate","throw_found","wrapper stateless"
"has_nlmul","commander degenerate","operator()","empty"
"has_nlmul","commander degenerate","operator()","empty"
"has_nlmul","commander degenerate","operator()","command collaborator"
"theory_datatype_params","commander boundary small-class","theory_datatype_params","constructor"
"theory_datatype_params","commander boundary small-class","updt_params","set collaborator"
"theory_datatype_params","commander boundary small-class","display","collaborator"
"is_qfauflia_probe","boundary degenerate small-class","operator()","wrapper stateless"
"func_decl_dependencies::top_sort","entity boundary","definition","property collaborator"
"func_decl_dependencies::top_sort","entity boundary","get_color","property collaborator"
"func_decl_dependencies::top_sort","entity boundary","set_color","command collaborator"
"func_decl_dependencies::top_sort","entity boundary","visit","void-accessor command"
"func_decl_dependencies::top_sort","entity boundary","visit_children","predicate non-void-command collaborator"
"func_decl_dependencies::top_sort","entity boundary","all_children_closed","predicate collaborator"
"func_decl_dependencies::top_sort","entity boundary","main_loop","predicate non-void-command collaborator"
"func_decl_dependencies::top_sort","entity boundary","operator()","predicate non-void-command collaborator"
"builtin_name","empty","builtin_name","constructor"
"builtin_name","empty","builtin_name","constructor"
"is_qflra_probe","boundary degenerate small-class","operator()","wrapper stateless"
"is_non_nira_functor","entity commander boundary","throw_found","wrapper stateless"
"is_non_nira_functor","entity commander boundary","operator()","command collaborator"
"is_non_nira_functor","entity commander boundary","operator()","command collaborator"
"is_non_nira_functor","entity commander boundary","compatible_sort","predicate collaborator"
"is_non_nira_functor","entity commander boundary","operator()","command collaborator"
"sort_info","data-provider","sort_info","constructor"
"sort_info","data-provider","sort_info","constructor"
"sort_info","data-provider","sort_info","constructor"
"sort_info","data-provider","sort_info","constructor"
"sort_info","data-provider","is_infinite","predicate"
"sort_info","data-provider","is_very_big","predicate"
"sort_info","data-provider","get_num_elements","get collaborator"
"sort_info","data-provider","set_num_elements","set collaborator"
"simple_relevancy_eh","pure-controller small-class","simple_relevancy_eh","constructor"
"simple_relevancy_eh","pure-controller small-class","~simple_relevancy_eh","destructor"
"simple_relevancy_eh","pure-controller small-class","simple_relevancy_eh::operator()","controller"
"is_non_qfufnra_functor","commander boundary","throw_found","wrapper stateless"
"is_non_qfufnra_functor","commander boundary","has_nonlinear","get"
"is_non_qfufnra_functor","commander boundary","operator()","command collaborator"
"is_non_qfufnra_functor","commander boundary","operator()","command"
"is_non_qfufnra_functor","commander boundary","operator()","command collaborator"
"check_relation_plugin::union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"is_qfnra_probe","boundary degenerate small-class","operator()","wrapper stateless"
"vector_eq_proc","boundary degenerate small-class","operator()","wrapper stateless"
"macro_substitution","boundary","m","get collaborator"
"macro_substitution","boundary","proofs_enabled","get"
"macro_substitution","boundary","unsat_core_enabled","get"
"macro_substitution","boundary","empty","controller stateless"
"macro_substitution","boundary","contains","controller stateless"
"macro_substitution","boundary","macro_substitution::init","command"
"macro_substitution","boundary","macro_substitution::macro_substitution","constructor"
"macro_substitution","boundary","macro_substitution::macro_substitution","constructor"
"macro_substitution","boundary","macro_substitution::macro_substitution","constructor"
"macro_substitution","boundary","macro_substitution::~macro_substitution","destructor"
"macro_substitution","boundary","macro_substitution::reset","command"
"macro_substitution","boundary","macro_substitution::cleanup","command"
"macro_substitution","boundary","macro_substitution::insert","command collaborator"
"macro_substitution","boundary","macro_substitution::erase","command collaborator"
"macro_substitution","boundary","macro_substitution::get_head_def","void-accessor command collaborator"
"macro_substitution","boundary","macro_substitution::find","predicate non-void-command collaborator"
"macro_substitution","boundary","macro_substitution::find","predicate non-void-command collaborator"
"theory_pb::card_justification","entity boundary","get_card","get collaborator"
"theory_pb::card_justification","entity boundary","get_antecedents","command collaborator"
"theory_pb::card_justification","entity boundary","get_from_theory","get collaborator"
"theory_pb::card_justification","entity boundary","mk_proof","property non-void-command collaborator"
"is_lia_probe","boundary degenerate small-class","operator()","wrapper stateless"
"is_lra_probe","boundary degenerate small-class","operator()","wrapper stateless"
"product_relation","entity data-provider boundary","size","unclassified"
"product_relation","entity data-provider boundary","operator[]","get collaborator"
"product_relation","entity data-provider boundary","is_precise","predicate"
"product_relation","entity data-provider boundary","product_relation::product_relation","copy-constructor"
"product_relation","entity data-provider boundary","product_relation::product_relation","copy-constructor"
"product_relation","entity data-provider boundary","product_relation::~product_relation","destructor"
"product_relation","entity data-provider boundary","product_relation::get_plugin","property collaborator"
"product_relation","entity data-provider boundary","product_relation::ensure_correct_kind","command collaborator"
"product_relation","entity data-provider boundary","product_relation::convert_spec","command collaborator"
"product_relation","entity data-provider boundary","product_relation::try_get_single_non_transparent","predicate collaborator"
"product_relation","entity data-provider boundary","product_relation::add_fact","command collaborator"
"product_relation","entity data-provider boundary","product_relation::contains_fact","predicate collaborator"
"product_relation","entity data-provider boundary","product_relation::clone","property collaborator"
"product_relation","entity data-provider boundary","product_relation::complement","property"
"product_relation","entity data-provider boundary","product_relation::empty","get predicate"
"product_relation","entity data-provider boundary","product_relation::to_formula","collaborator"
"product_relation","entity data-provider boundary","product_relation::display","collaborator"
"is_qfufnra_probe","boundary degenerate small-class","operator()","wrapper stateless"
"purify_arith_proc","entity boundary","purify_arith_proc","constructor"
"purify_arith_proc","entity boundary","u","get collaborator"
"purify_arith_proc","entity boundary","m","property non-void-command collaborator"
"purify_arith_proc","entity boundary","find_unsafe","command collaborator"
"purify_arith_proc","entity boundary","convert_basis","predicate non-void-command collaborator"
"purify_arith_proc","entity boundary","mk_real_zero","property non-void-command collaborator"
"purify_arith_proc","entity boundary","process_quantifier","void-accessor command collaborator"
"purify_arith_proc","entity boundary","operator()","void-accessor command collaborator"
"recover_01_tactic","boundary","translate","property wrapper"
"recover_01_tactic","boundary","~recover_01_tactic","destructor"
"recover_01_tactic","boundary","name","incidental"
"recover_01_tactic","boundary","updt_params","command collaborator"
"recover_01_tactic","boundary","collect_param_descrs","command collaborator"
"recover_01_tactic","boundary","operator()","controller stateless"
"recover_01_tactic","boundary","cleanup","wrapper"
"bit_blaster_model_converter","boundary","m","property collaborator"
"bit_blaster_model_converter","boundary","bit_blaster_model_converter","constructor"
"bit_blaster_model_converter","boundary","collect_bits","command collaborator"
"bit_blaster_model_converter","boundary","copy_non_bits","controller stateless"
"bit_blaster_model_converter","boundary","mk_bvs","command collaborator"
"bit_blaster_model_converter","boundary","mk_bv","property non-void-command collaborator"
"bit_blaster_model_converter","boundary","operator()","void-accessor command collaborator"
"bit_blaster_model_converter","boundary","operator()","void-accessor command collaborator"
"bit_blaster_model_converter","boundary","display","command collaborator"
"bit_blaster_model_converter","boundary","get_units","empty"
"bit_blaster_model_converter","boundary","bit_blaster_model_converter","constructor"
"bit_blaster_model_converter","boundary","translate","property controller"
"dt_expr_inverter","entity boundary","dt_expr_inverter","constructor"
"dt_expr_inverter","entity boundary","get_fid","property collaborator"
"dt_expr_inverter","entity boundary","operator()","predicate non-void-command collaborator"
"dt_expr_inverter","entity boundary","mk_diff","predicate non-void-command collaborator"
"bit_blaster_tactic","boundary","translate","property wrapper"
"bit_blaster_tactic","boundary","~bit_blaster_tactic","destructor"
"bit_blaster_tactic","boundary","name","incidental"
"bit_blaster_tactic","boundary","updt_params","command collaborator"
"bit_blaster_tactic","boundary","collect_param_descrs","controller stateless"
"bit_blaster_tactic","boundary","operator()","controller stateless"
"bit_blaster_tactic","boundary","cleanup","command collaborator"
"bit_blaster_tactic","boundary","get_num_steps","unclassified"
"rel_context::scoped_query","commander small-class","~scoped_query","destructor"
"rel_context::scoped_query","commander small-class","reset","command"
"bv1_blaster_tactic","entity boundary","translate","property wrapper"
"bv1_blaster_tactic","entity boundary","~bv1_blaster_tactic","destructor"
"bv1_blaster_tactic","entity boundary","name","incidental"
"bv1_blaster_tactic","entity boundary","updt_params","command collaborator"
"bv1_blaster_tactic","entity boundary","collect_param_descrs","wrapper stateless"
"bv1_blaster_tactic","entity boundary","is_target","predicate collaborator"
"bv1_blaster_tactic","entity boundary","operator()","wrapper stateless"
"bv1_blaster_tactic","entity boundary","cleanup","command collaborator"
"bv1_blaster_tactic","entity boundary","get_num_steps","unclassified"
"bv_bound_chk_rewriter","commander boundary","bv_bound_chk_rewriter","constructor"
"bv_bound_chk_rewriter","commander boundary","updt_params","command collaborator"
"bv_bound_chk_rewriter","commander boundary","collect_statistics","collaborator"
"bv_bound_chk_rewriter","commander boundary","reset_statistics","command"
"cofactor_elim_term_ite::imp","boundary","checkpoint","command"
"cofactor_elim_term_ite::imp","boundary","get_first","property non-void-command collaborator"
"cofactor_elim_term_ite::imp","boundary","get_best","property non-void-command collaborator"
"cofactor_elim_term_ite::imp","boundary","updt_params","command collaborator"
"cofactor_elim_term_ite::imp","boundary","collect_param_descrs","controller stateless"
"cofactor_elim_term_ite::imp","boundary","operator()","wrapper"
"interval_tester","entity boundary","singleton","property wrapper"
"interval_tester","entity boundary","all","property wrapper"
"interval_tester","entity boundary","l","property non-void-command collaborator"
"interval_tester","entity boundary","r","property non-void-command collaborator"
"interval_tester","entity boundary","b","property non-void-command collaborator"
"interval_tester","entity boundary","bugs","wrapper stateless"
"interval_tester","entity boundary","tst1","command"
"interval_tester","entity boundary","run","command"
"bit_blast_model_converter","entity boundary","bit_blast_model_converter","constructor"
"bit_blast_model_converter","entity boundary","insert","command collaborator"
"bit_blast_model_converter","entity boundary","translate","property wrapper"
"bit_blast_model_converter","entity boundary","get_units","empty"
"bit_blast_model_converter","entity boundary","display","collaborator incidental"
"bit_blast_model_converter","entity boundary","operator()","command collaborator"
"collect_occs","entity commander boundary","collect_occs::visit","predicate non-void-command collaborator"
"collect_occs","entity commander boundary","collect_occs::process","command collaborator"
"collect_occs","entity commander boundary","collect_occs::operator()","command collaborator"
"collect_statistics_tactic","commander","collect_statistics_tactic","constructor"
"collect_statistics_tactic","commander","name","incidental"
"collect_statistics_tactic","commander","translate","property wrapper"
"collect_statistics_tactic","commander","updt_params","command collaborator"
"collect_statistics_tactic","commander","collect_param_descrs","empty"
"collect_statistics_tactic","commander","operator()","controller"
"collect_statistics_tactic","commander","cleanup","empty"
"collect_statistics_tactic","commander","collect_statistics","empty"
"collect_statistics_tactic","commander","reset_statistics","command"
"collect_statistics_tactic","commander","reset","command"
"ctx_propagate_assertions","commander","scope_level","unclassified"
"ctx_propagate_assertions","commander","ctx_propagate_assertions::ctx_propagate_assertions","constructor"
"ctx_propagate_assertions","commander","ctx_propagate_assertions::assert_expr","predicate non-void-command"
"ctx_propagate_assertions","commander","ctx_propagate_assertions::assert_eq_val","command"
"ctx_propagate_assertions","commander","ctx_propagate_assertions::assert_eq_core","command collaborator"
"ctx_propagate_assertions","commander","ctx_propagate_assertions::simplify","predicate non-void-command collaborator"
"ctx_propagate_assertions","commander","ctx_propagate_assertions::push","command"
"ctx_propagate_assertions","commander","ctx_propagate_assertions::pop","command collaborator"
"ctx_propagate_assertions","commander","ctx_propagate_assertions::translate","wrapper stateless"
"vector_hash_tpl","degenerate small-class","operator()","wrapper stateless"
"vector_hash_tpl","degenerate small-class","vector_hash_tpl","constructor"
"vector_hash_tpl","degenerate small-class","operator()","controller stateless"
"elim_uncnstr_tactic","commander boundary","m","get collaborator"
"elim_uncnstr_tactic","commander boundary","init_mc","set"
"elim_uncnstr_tactic","commander boundary","init_rw","command"
"elim_uncnstr_tactic","commander boundary","run","command collaborator"
"elim_uncnstr_tactic","commander boundary","name","incidental"
"elim_uncnstr_tactic","commander boundary","translate","property wrapper"
"elim_uncnstr_tactic","commander boundary","updt_params","command collaborator"
"elim_uncnstr_tactic","commander boundary","collect_param_descrs","wrapper stateless"
"elim_uncnstr_tactic","commander boundary","operator()","command collaborator"
"elim_uncnstr_tactic","commander boundary","cleanup","command"
"elim_uncnstr_tactic","commander boundary","collect_statistics","controller"
"elim_uncnstr_tactic","commander boundary","reset_statistics","set"
"elim_uncnstr_tactic","commander boundary","user_propagate_register_expr","command collaborator"
"elim_uncnstr_tactic","commander boundary","user_propagate_clear","command"
"nnf_tactic","boundary","translate","property wrapper"
"nnf_tactic","boundary","name","incidental"
"nnf_tactic","boundary","updt_params","command collaborator"
"nnf_tactic","boundary","collect_param_descrs","command collaborator"
"nnf_tactic","boundary","operator()","controller"
"nnf_tactic","boundary","cleanup","empty"
"propagate_values_tactic","entity commander boundary","updt_params_core","set collaborator"
"propagate_values_tactic","entity commander boundary","is_shared","predicate non-void-command collaborator"
"propagate_values_tactic","entity commander boundary","is_shared_neg","predicate non-void-command collaborator"
"propagate_values_tactic","entity commander boundary","is_shared_eq","predicate non-void-command"
"propagate_values_tactic","entity commander boundary","push_result","void-accessor command collaborator"
"propagate_values_tactic","entity commander boundary","process_current","command collaborator"
"propagate_values_tactic","entity commander boundary","run","command collaborator"
"propagate_values_tactic","entity commander boundary","propagate_values_tactic","constructor"
"propagate_values_tactic","entity commander boundary","translate","property wrapper"
"propagate_values_tactic","entity commander boundary","name","incidental"
"propagate_values_tactic","entity commander boundary","updt_params","command collaborator"
"propagate_values_tactic","entity commander boundary","collect_param_descrs","command collaborator"
"propagate_values_tactic","entity commander boundary","operator()","command collaborator"
"propagate_values_tactic","entity commander boundary","cleanup","command"
"reduce_args_tactic","commander boundary","translate","wrapper stateless"
"reduce_args_tactic","commander boundary","name","incidental"
"reduce_args_tactic","commander boundary","reduce_args_tactic::reduce_args_tactic","constructor"
"reduce_args_tactic","commander boundary","reduce_args_tactic::~reduce_args_tactic","destructor"
"reduce_args_tactic","commander boundary","reduce_args_tactic::operator()","command collaborator"
"reduce_args_tactic","commander boundary","reduce_args_tactic::cleanup","command collaborator"
"reduce_args_tactic","commander boundary","reduce_args_tactic::user_propagate_register_expr","command collaborator"
"reduce_args_tactic","commander boundary","reduce_args_tactic::user_propagate_clear","command"
"reduce_args_tactic::imp","entity commander boundary","checkpoint","command"
"reduce_args_tactic::imp","entity commander boundary","find_non_candidates","command collaborator"
"reduce_args_tactic::imp","entity commander boundary","populate_decl2args","command collaborator"
"reduce_args_tactic::imp","entity commander boundary","mk_mc","property non-void-command collaborator"
"reduce_args_tactic::imp","entity commander boundary","operator()","command collaborator"
"simplify_tactic::imp","boundary","~imp","destructor"
"simplify_tactic::imp","boundary","m","get collaborator"
"simplify_tactic::imp","boundary","reset","set"
"simplify_tactic::imp","boundary","collect_statistics","controller"
"simplify_tactic::imp","boundary","operator()","command collaborator"
"simplify_tactic::imp","boundary","get_num_steps","get"
"lp_primal_core_solver","boundary","needs_to_grow","predicate controller"
"lp_primal_core_solver","boundary","inf_sign_of_column","property controller"
"lp_primal_core_solver","boundary","monoid_can_decrease","predicate controller"
"lp_primal_core_solver","boundary","monoid_can_increase","predicate controller"
"lp_primal_core_solver","boundary","get_num_of_not_free_basic_dependent_vars","controller"
"lp_primal_core_solver","boundary","find_beneficial_entering_in_row_tableau_rows_bland_mode","property non-void-command collaborator"
"lp_primal_core_solver","boundary","find_beneficial_entering_tableau_rows","property non-void-command collaborator"
"lp_primal_core_solver","boundary","limit_theta","wrapper stateless"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column_for_inf_case_m_neg_upper_bound","command"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column_for_inf_case_m_neg_lower_bound","command"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column_for_inf_case_m_pos_lower_bound","command"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column_for_inf_case_m_pos_upper_bound","command"
"lp_primal_core_solver","boundary","pivot","controller"
"lp_primal_core_solver","boundary","need_to_switch_costs","predicate"
"lp_primal_core_solver","boundary","update_x_tableau_rows","command collaborator"
"lp_primal_core_solver","boundary","update_basis_and_x_tableau_rows","command collaborator"
"lp_primal_core_solver","boundary","advance_on_entering_and_leaving_tableau_rows","command collaborator"
"lp_primal_core_solver","boundary","find_smallest_inf_column","controller stateless"
"lp_primal_core_solver","boundary","get_val_for_leaving","get controller"
"lp_primal_core_solver","boundary","one_iteration_tableau_rows","command collaborator"
"lp_primal_core_solver","boundary","decide_on_status_when_cannot_find_entering","controller stateless"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column_for_feas_case_m_neg_no_check","void-accessor command"
"lp_primal_core_solver","boundary","limit_inf_on_bound_m_neg","predicate non-void-command"
"lp_primal_core_solver","boundary","limit_inf_on_bound_m_pos","predicate non-void-command"
"lp_primal_core_solver","boundary","limit_inf_on_lower_bound_m_pos","command"
"lp_primal_core_solver","boundary","limit_inf_on_upper_bound_m_neg","command"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column_for_inf_case_m_pos_boxed","void-accessor command collaborator"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column_for_inf_case_m_neg_boxed","void-accessor command collaborator"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column_for_feas_case_m_pos_no_check","void-accessor command"
"lp_primal_core_solver","boundary","limit_theta_on_basis_column","void-accessor command"
"lp_primal_core_solver","boundary","basis_column_is_set_correctly","predicate wrapper"
"lp_primal_core_solver","boundary","basis_columns_are_set_correctly","predicate"
"lp_primal_core_solver","boundary","update_reduced_cost_for_basic_column_cost_change","set"
"lp_primal_core_solver","boundary","init_tableau_rows","command"
"lp_primal_core_solver","boundary","lp_primal_core_solver","constructor"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::sort_non_basis","command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::correctly_moved_to_bounds","get predicate wrapper"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::column_is_benefitial_for_entering_basis","predicate collaborator"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::try_jump_to_another_bound_on_entering","predicate collaborator"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::try_jump_to_another_bound_on_entering_unlimited","predicate collaborator"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::get_bound_on_variable_and_update_leaving_precisely","void-accessor controller"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::check_Ax_equal_b","controller"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::check_the_bounds","command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::check_bound","controller"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::check_correctness","command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::backup_and_normalize_costs","set"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::push_forward_offset_in_non_basis","void-accessor command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::get_number_of_non_basic_column_to_try_for_enter","non-void-command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::find_feasible_solution","set"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::print_column","controller"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::print_bound_info_and_x","controller"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::one_iteration_tableau","command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::advance_on_entering_tableau","command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::choose_entering_column_tableau","property non-void-command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::solve","non-void-command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::advance_on_entering_and_leaving_tableau","void-accessor command collaborator"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::advance_on_entering_equal_leaving_tableau","controller"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::find_leaving_and_t_tableau","get property non-void-command collaborator"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::init_run_tableau","command"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::update_basis_and_x_tableau","predicate non-void-command collaborator"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::update_x_tableau","command collaborator"
"lp_primal_core_solver","boundary","lp_primal_core_solver<T,X>::init_reduced_costs_tableau","command collaborator"
"binary_search_trail","commander small-class","binary_search_trail","constructor"
"binary_search_trail","commander small-class","undo","command"
"simplify_tactic","commander boundary","collect_param_descrs","command collaborator"
"simplify_tactic","commander boundary","translate","property wrapper"
"simplify_tactic","commander boundary","name","incidental"
"simplify_tactic","commander boundary","simplify_tactic::simplify_tactic","constructor"
"simplify_tactic","commander boundary","simplify_tactic::~simplify_tactic","destructor"
"simplify_tactic","commander boundary","simplify_tactic::updt_params","command collaborator"
"simplify_tactic","commander boundary","simplify_tactic::get_param_descrs","command collaborator"
"simplify_tactic","commander boundary","simplify_tactic::operator()","controller stateless"
"simplify_tactic","commander boundary","simplify_tactic::cleanup","command collaborator"
"simplify_tactic","commander boundary","simplify_tactic::collect_statistics","collaborator"
"simplify_tactic","commander boundary","simplify_tactic::get_num_steps","unclassified"
"split_clause_tactic","boundary","select_clause","controller"
"split_clause_tactic","boundary","translate","property wrapper"
"split_clause_tactic","boundary","name","incidental"
"split_clause_tactic","boundary","updt_params","set collaborator"
"split_clause_tactic","boundary","collect_param_descrs","controller stateless"
"split_clause_tactic","boundary","operator()","command collaborator"
"split_clause_tactic","boundary","cleanup","empty"
"symmetry_reduce_tactic","degenerate","translate","wrapper stateless"
"symmetry_reduce_tactic","degenerate","name","incidental"
"symmetry_reduce_tactic","degenerate","symmetry_reduce_tactic::symmetry_reduce_tactic","constructor"
"symmetry_reduce_tactic","degenerate","symmetry_reduce_tactic::~symmetry_reduce_tactic","destructor"
"symmetry_reduce_tactic","degenerate","symmetry_reduce_tactic::operator()","controller stateless"
"symmetry_reduce_tactic","degenerate","symmetry_reduce_tactic::cleanup","empty"
"ac_rewriter","entity boundary small-class","ac_rewriter","constructor"
"ac_rewriter","entity boundary small-class","mk_app_core","property non-void-command collaborator"
"ac_rewriter","entity boundary small-class","mk_app","void-accessor command collaborator"
"ac_rewriter_cfg","entity boundary degenerate","rewrite_patterns","incidental"
"ac_rewriter_cfg","entity boundary degenerate","flat_assoc","collaborator incidental"
"ac_rewriter_cfg","entity boundary degenerate","reduce_app","property non-void-command collaborator"
"ac_rewriter_cfg","entity boundary degenerate","ac_rewriter_cfg","constructor"
"ac_rewriter_star","empty","ac_rewriter_star","constructor"
"dependency_converter","boundary degenerate","dependency_converter::concat","wrapper stateless"
"dependency_converter","boundary degenerate","dependency_converter::unit","wrapper stateless"
"dependency_converter","boundary degenerate","dependency_converter::concat","wrapper stateless"
"dependent_expr_state_tactic","commander boundary","init","command collaborator"
"dependent_expr_state_tactic","commander boundary","dependent_expr_state_tactic","constructor"
"dependent_expr_state_tactic","commander boundary","~dependent_expr_state_tactic","destructor"
"dependent_expr_state_tactic","commander boundary","qtail","unclassified"
"dependent_expr_state_tactic","commander boundary","operator[]","get non-void-command collaborator"
"dependent_expr_state_tactic","commander boundary","update","command collaborator"
"dependent_expr_state_tactic","commander boundary","add","command collaborator"
"dependent_expr_state_tactic","commander boundary","inconsistent","predicate non-void-command"
"dependent_expr_state_tactic","commander boundary","model_trail","get collaborator"
"dependent_expr_state_tactic","commander boundary","name","property"
"dependent_expr_state_tactic","commander boundary","updated","get"
"dependent_expr_state_tactic","commander boundary","reset_updated","set"
"dependent_expr_state_tactic","commander boundary","updt_params","command collaborator"
"dependent_expr_state_tactic","commander boundary","collect_param_descrs","command collaborator"
"dependent_expr_state_tactic","commander boundary","translate","property wrapper"
"dependent_expr_state_tactic","commander boundary","operator()","command collaborator"
"dependent_expr_state_tactic","commander boundary","collect_statistics","collaborator"
"dependent_expr_state_tactic","commander boundary","cleanup","command"
"dependent_expr_state_tactic","commander boundary","reset_statistics","command"
"dependent_expr_state_tactic","commander boundary","user_propagate_register_expr","command collaborator"
"dependent_expr_state_tactic","commander boundary","user_propagate_clear","command"
"bit_blaster_cfg","entity commander boundary","m","property collaborator"
"bit_blaster_cfg","entity commander boundary","power","wrapper stateless"
"bit_blaster_cfg","entity commander boundary","mk_xor","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_iff","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_and","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_and","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_and","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_ge2","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_or","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_or","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_or","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_not","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_ite","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_nand","command collaborator"
"bit_blaster_cfg","entity commander boundary","mk_nor","command collaborator"
"bit_blaster_cfg","entity commander boundary","bit_blaster_cfg::bit_blaster_cfg","constructor"
"bit_blaster_cfg","entity commander boundary","bit_blaster_cfg::mk_xor3","void-accessor command collaborator"
"bit_blaster_cfg","entity commander boundary","bit_blaster_cfg::mk_carry","void-accessor command collaborator"
"fm","boundary","is_literal","predicate collaborator"
"fm","boundary","is_constraint","predicate collaborator"
"fm","boundary","is_var","predicate collaborator"
"fm","boundary","is_var","predicate collaborator"
"fm","boundary","is_linear_mon_core","predicate collaborator"
"fm","boundary","is_linear_mon","predicate collaborator"
"fm","boundary","is_linear_pol","predicate collaborator"
"fm","boundary","is_linear_ineq","predicate collaborator"
"fm","boundary","is_occ","predicate non-void-command collaborator"
"fm","boundary","del_constraint","command collaborator"
"fm","boundary","del_constraints","command collaborator"
"fm","boundary","reset_constraints","command"
"fm","boundary","mk_constraint","non-void-command factory collaborator"
"fm","boundary","num_vars","unclassified"
"fm","boundary","mk_int","void-accessor command collaborator"
"fm","boundary","normalize_coeffs","controller stateless"
"fm","boundary","display","controller"
"fm","boundary","subsumes","predicate non-void-command collaborator"
"fm","boundary","backward_subsumption","command collaborator"
"fm","boundary","subsume","command collaborator"
"fm","boundary","fm","constructor"
"fm","boundary","~fm","destructor"
"fm","boundary","updt_params","command"
"fm","boundary","init_forbidden_set","command collaborator"
"fm","boundary","init","command collaborator"
"fm","boundary","is_int","get collaborator"
"fm","boundary","is_forbidden","get collaborator"
"fm","boundary","all_int","predicate collaborator"
"fm","boundary","to_expr","property non-void-command collaborator"
"fm","boundary","mk_var","property non-void-command collaborator"
"fm","boundary","mk_bvar","property non-void-command collaborator"
"fm","boundary","to_var","property non-void-command collaborator"
"fm","boundary","to_bvar","property non-void-command collaborator"
"fm","boundary","to_literal","property non-void-command collaborator"
"fm","boundary","add_constraint","command collaborator"
"fm","boundary","is_false","controller stateless"
"fm","boundary","register_constraint","predicate non-void-command collaborator"
"fm","boundary","init_use_list","command collaborator"
"fm","boundary","get_cost","wrapper"
"fm","boundary","sort_candidates","command collaborator"
"fm","boundary","cleanup_constraints","controller stateless"
"fm","boundary","analyze","void-accessor"
"fm","boundary","analyze","void-accessor"
"fm","boundary","can_eliminate","predicate collaborator"
"fm","boundary","copy_constraints","command collaborator"
"fm","boundary","save_constraints","empty"
"fm","boundary","mark_constraints_dead","collaborator incidental"
"fm","boundary","mark_constraints_dead","command collaborator"
"fm","boundary","get_coeff","wrapper stateless"
"fm","boundary","resolve","property non-void-command factory collaborator"
"fm","boundary","try_eliminate","predicate non-void-command collaborator"
"fm","boundary","copy_remaining","command collaborator"
"fm","boundary","copy_remaining","command"
"fm","boundary","checkpoint","command"
"fm","boundary","set_is_variable_proc","set collaborator"
"fm","boundary","operator()","command collaborator"
"fm","boundary","display_constraints","collaborator"
"fm","boundary","display","collaborator"
"bounded_int2bv_solver","boundary","bounded_int2bv_solver","constructor"
"bounded_int2bv_solver","boundary","~bounded_int2bv_solver","destructor"
"bounded_int2bv_solver","boundary","translate","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","assert_expr_core","void-accessor command collaborator"
"bounded_int2bv_solver","boundary","push_core","command"
"bounded_int2bv_solver","boundary","pop_core","command"
"bounded_int2bv_solver","boundary","check_assumptions","command collaborator"
"bounded_int2bv_solver","boundary","check_sat_core2","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","updt_params","command collaborator"
"bounded_int2bv_solver","boundary","collect_param_descrs","command collaborator"
"bounded_int2bv_solver","boundary","set_produce_models","command"
"bounded_int2bv_solver","boundary","set_progress_callback","command collaborator"
"bounded_int2bv_solver","boundary","collect_statistics","collaborator"
"bounded_int2bv_solver","boundary","get_unsat_core","command collaborator"
"bounded_int2bv_solver","boundary","set_phase","command collaborator"
"bounded_int2bv_solver","boundary","get_phase","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","set_phase","command collaborator"
"bounded_int2bv_solver","boundary","move_to_front","command collaborator"
"bounded_int2bv_solver","boundary","get_model_core","command collaborator"
"bounded_int2bv_solver","boundary","get_levels","command collaborator"
"bounded_int2bv_solver","boundary","get_trail","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","external_model_converter","property collaborator"
"bounded_int2bv_solver","boundary","local_model_converter","property collaborator"
"bounded_int2bv_solver","boundary","get_model_converter","property collaborator"
"bounded_int2bv_solver","boundary","get_proof_core","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","reason_unknown","property"
"bounded_int2bv_solver","boundary","set_reason_unknown","command"
"bounded_int2bv_solver","boundary","get_labels","command collaborator"
"bounded_int2bv_solver","boundary","get_manager","get collaborator"
"bounded_int2bv_solver","boundary","congruence_next","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","congruence_root","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","cube","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","find_mutexes","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","get_consequences_core","property non-void-command collaborator"
"bounded_int2bv_solver","boundary","accumulate_sub","collaborator"
"bounded_int2bv_solver","boundary","accumulate_sub","collaborator"
"bounded_int2bv_solver","boundary","get_num_bits","controller stateless"
"bounded_int2bv_solver","boundary","flush_assertions","collaborator"
"bounded_int2bv_solver","boundary","get_num_assertions","unclassified"
"bounded_int2bv_solver","boundary","get_assertion","property collaborator"
"elim_term_ite_simplifier","commander","elim_term_ite_simplifier","constructor"
"elim_term_ite_simplifier","commander","name","incidental"
"elim_term_ite_simplifier","commander","reduce","command collaborator"
"elim_term_ite_simplifier","commander","supports_proofs","incidental"
"elim_term_ite_simplifier","commander","push","command"
"elim_term_ite_simplifier","commander","pop","command"
"instr_filter_interpreted","entity boundary","instr_filter_interpreted","constructor"
"instr_filter_interpreted","entity boundary","perform","predicate non-void-command collaborator"
"instr_filter_interpreted","entity boundary","display_head_impl","property collaborator"
"instr_filter_interpreted","entity boundary","make_annotations","command collaborator"
"enum2bv_solver","entity boundary","enum2bv_solver","constructor"
"enum2bv_solver","entity boundary","translate","property non-void-command collaborator"
"enum2bv_solver","entity boundary","assert_expr_core","command collaborator"
"enum2bv_solver","entity boundary","push_core","command"
"enum2bv_solver","entity boundary","pop_core","command"
"enum2bv_solver","entity boundary","check_sat_core2","property non-void-command collaborator"
"enum2bv_solver","entity boundary","updt_params","command collaborator"
"enum2bv_solver","entity boundary","collect_param_descrs","command collaborator"
"enum2bv_solver","entity boundary","set_produce_models","command"
"enum2bv_solver","entity boundary","set_progress_callback","command collaborator"
"enum2bv_solver","entity boundary","collect_statistics","collaborator"
"enum2bv_solver","entity boundary","get_unsat_core","command collaborator"
"enum2bv_solver","entity boundary","set_phase","command collaborator"
"enum2bv_solver","entity boundary","get_phase","property non-void-command collaborator"
"enum2bv_solver","entity boundary","set_phase","command collaborator"
"enum2bv_solver","entity boundary","move_to_front","command collaborator"
"enum2bv_solver","entity boundary","get_model_core","command collaborator"
"enum2bv_solver","entity boundary","local_model_converter","property collaborator"
"enum2bv_solver","entity boundary","external_model_converter","property collaborator"
"enum2bv_solver","entity boundary","get_model_converter","property collaborator"
"enum2bv_solver","entity boundary","get_proof_core","property non-void-command collaborator"
"enum2bv_solver","entity boundary","reason_unknown","property"
"enum2bv_solver","entity boundary","set_reason_unknown","command"
"enum2bv_solver","entity boundary","get_labels","command collaborator"
"enum2bv_solver","entity boundary","get_manager","get collaborator"
"enum2bv_solver","entity boundary","find_mutexes","property non-void-command collaborator"
"enum2bv_solver","entity boundary","cube","property non-void-command collaborator"
"enum2bv_solver","entity boundary","congruence_next","property non-void-command collaborator"
"enum2bv_solver","entity boundary","congruence_root","property non-void-command collaborator"
"enum2bv_solver","entity boundary","get_consequences_core","property non-void-command collaborator"
"enum2bv_solver","entity boundary","get_levels","command collaborator"
"enum2bv_solver","entity boundary","get_trail","property non-void-command collaborator"
"enum2bv_solver","entity boundary","get_num_assertions","unclassified"
"enum2bv_solver","entity boundary","get_assertion","property collaborator"
"smtfd_abs","boundary","pop","controller stateless"
"smtfd_abs","boundary","try_abs","property non-void-command collaborator"
"smtfd_abs","boundary","try_rep","property non-void-command collaborator"
"smtfd_abs","boundary","fresh_var","property non-void-command collaborator"
"smtfd_abs","boundary","push_trail","controller stateless"
"smtfd_abs","boundary","is_atom","predicate non-void-command collaborator"
"smtfd_abs","boundary","is_uninterp_atom","wrapper stateless"
"smtfd_abs","boundary","smtfd_abs","constructor"
"smtfd_abs","boundary","atoms","get collaborator"
"smtfd_abs","boundary","atom_defs","get collaborator"
"smtfd_abs","boundary","reset_atom_defs","command"
"smtfd_abs","boundary","push","command"
"smtfd_abs","boundary","pop","command"
"smtfd_abs","boundary","display","property non-void-command collaborator"
"smtfd_abs","boundary","abs_assumption","property non-void-command collaborator"
"smtfd_abs","boundary","abs","property non-void-command collaborator"
"smtfd_abs","boundary","rep","property non-void-command collaborator"
"plugin_context","boundary","plugin_context","constructor"
"plugin_context","boundary","set_max_lemmas","set"
"plugin_context","boundary","get_max_lemmas","get"
"plugin_context","boundary","get_abs","get collaborator"
"plugin_context","boundary","add","command"
"plugin_context","boundary","get_manager","get collaborator"
"plugin_context","boundary","at_max","predicate"
"plugin_context","boundary","get_model","get collaborator"
"plugin_context","boundary","begin","property non-void-command collaborator"
"plugin_context","boundary","end","property non-void-command collaborator"
"plugin_context","boundary","size","unclassified"
"plugin_context","boundary","empty","predicate"
"plugin_context","boundary","reset_lemmas","command"
"plugin_context","boundary","add_plugin","command collaborator"
"plugin_context","boundary","rewrite","wrapper stateless"
"plugin_context","boundary","plugin_context::global_check","controller"
"plugin_context","boundary","plugin_context::add_theory_axioms","predicate non-void-command collaborator"
"plugin_context","boundary","plugin_context::model_value","property non-void-command collaborator"
"plugin_context","boundary","plugin_context::model_value","property non-void-command collaborator"
"plugin_context","boundary","plugin_context::reset","set collaborator"
"plugin_context","boundary","plugin_context::sort_covered","predicate controller"
"plugin_context","boundary","plugin_context::term_covered","predicate controller"
"plugin_context","boundary","plugin_context::display","property controller"
"plugin_context","boundary","plugin_context::populate_model","controller"
"f_app_eq","data-provider boundary small-class","f_app_eq","constructor"
"f_app_eq","data-provider boundary small-class","f_app_eq::operator()","predicate collaborator"
"f_app_hash","boundary degenerate","f_app_hash","constructor"
"f_app_hash","boundary degenerate","operator()","collaborator incidental"
"f_app_hash","boundary degenerate","operator()","wrapper stateless"
"f_app_hash","boundary degenerate","f_app_hash::operator()","collaborator"
"Expr","pure-controller degenerate small-class","Simplify","controller stateless"
"div_probe","pure-controller degenerate small-class","div_probe","constructor"
"div_probe","pure-controller degenerate small-class","operator()","controller stateless"
"polynorm","entity boundary","polynorm","constructor"
"polynorm","entity boundary","mk_fresh_constants","property non-void-command collaborator"
"polynorm","entity boundary","mk_fresh_reals","property non-void-command collaborator"
"polynorm","entity boundary","mk_mul","property non-void-command collaborator"
"polynorm","entity boundary","nf","command collaborator"
"not_probe","entity boundary small-class","not_probe","constructor"
"not_probe","entity boundary small-class","operator()","property non-void-command collaborator"
"theory_plugin","boundary","mk_app","property non-void-command collaborator"
"theory_plugin","boundary","insert","property non-void-command collaborator"
"theory_plugin","boundary","theory_plugin","constructor"
"theory_plugin","boundary","ast2table","get non-void-command collaborator"
"theory_plugin","boundary","values","get collaborator"
"theory_plugin","boundary","get_manager","get collaborator"
"theory_plugin","boundary","eval_abs","property non-void-command collaborator"
"theory_plugin","boundary","is_true_abs","predicate non-void-command collaborator"
"theory_plugin","boundary","value_of","get controller"
"theory_plugin","boundary","check_congruence","predicate non-void-command collaborator"
"theory_plugin","boundary","enforce_congruence","command collaborator"
"theory_plugin","boundary","display","property non-void-command collaborator"
"theory_plugin","boundary","display","property non-void-command collaborator"
"theory_plugin","boundary","model_value","property non-void-command collaborator"
"theory_plugin","boundary","model_value","property non-void-command collaborator"
"theory_plugin","boundary","global_check","empty"
"theory_plugin","boundary","populate_model","empty"
"theory_plugin","boundary","reset","command"
"basic_plugin","boundary","basic_plugin","constructor"
"basic_plugin","boundary","check_term","empty"
"basic_plugin","boundary","term_covered","predicate non-void-command collaborator"
"basic_plugin","boundary","sort_covered","predicate non-void-command collaborator"
"basic_plugin","boundary","max_rounds","incidental"
"basic_plugin","boundary","populate_model","empty"
"basic_plugin","boundary","model_value_core","property non-void-command collaborator"
"basic_plugin","boundary","model_value_core","property non-void-command collaborator"
"uf_plugin","boundary","get_table","get controller"
"uf_plugin","boundary","is_uf","wrapper stateless"
"uf_plugin","boundary","ensure_table","property non-void-command collaborator"
"uf_plugin","boundary","uf_plugin","constructor"
"uf_plugin","boundary","check_term","command collaborator"
"uf_plugin","boundary","term_covered","predicate non-void-command collaborator"
"uf_plugin","boundary","sort_covered","predicate non-void-command collaborator"
"uf_plugin","boundary","reset","command"
"uf_plugin","boundary","max_rounds","incidental"
"uf_plugin","boundary","populate_model","command collaborator"
"uf_plugin","boundary","model_value_core","property non-void-command collaborator"
"uf_plugin","boundary","model_value_core","property non-void-command collaborator"
"is_non_fp_qfnra_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_fp_qfnra_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_fp_qfnra_predicate","commander boundary degenerate","operator()","command collaborator"
"is_fp_qfnra_probe","boundary degenerate small-class","operator()","wrapper stateless"
"is_qffp_probe","boundary degenerate small-class","operator()","wrapper stateless"
"is_fpa_function","commander degenerate","operator()","empty"
"is_fpa_function","commander degenerate","operator()","empty"
"is_fpa_function","commander degenerate","operator()","command collaborator"
"clp::imp","entity boundary","~imp","destructor"
"clp::imp","entity boundary","query","property non-void-command collaborator"
"clp::imp","entity boundary","reset_statistics","command"
"clp::imp","entity boundary","collect_statistics","empty"
"clp::imp","entity boundary","display_certificate","collaborator"
"clp::imp","entity boundary","get_answer","property collaborator"
"clp::imp","entity boundary","reset_ground","command"
"clp::imp","entity boundary","ground","void-accessor command collaborator"
"clp::imp","entity boundary","search","property non-void-command collaborator"
"clp::imp","entity boundary","get_proof","property wrapper"
"goal_num_occurs","commander small-class","goal_num_occurs","constructor"
"goal_num_occurs","commander small-class","reset","command"
"goal_num_occurs","commander small-class","goal_num_occurs::operator()","command collaborator"
"smt_strategic_solver_factory","controller small-class","smt_strategic_solver_factory","constructor"
"smt_strategic_solver_factory","controller small-class","operator()","property controller"
"relation_manager::default_table_map_fn","commander boundary small-class","operator()","command collaborator"
"qi_params","commander boundary small-class","qi_params","constructor"
"qi_params","commander boundary small-class","qi_params::updt_params","command collaborator"
"qi_params","commander boundary small-class","qi_params::display","wrapper"
"memory_probe","boundary degenerate small-class","operator()","wrapper stateless"
"num_exprs_probe","pure-controller degenerate small-class","operator()","controller stateless"
"set_vector_idx_trail","commander data-class small-class","set_vector_idx_trail","constructor"
"set_vector_idx_trail","commander data-class small-class","undo","set"
"bddv","entity data-provider boundary","bddv","constructor"
"bddv","entity data-provider boundary","bddv","constructor"
"bddv","entity data-provider boundary","bddv","constructor"
"bddv","entity data-provider boundary","operator[]","get collaborator"
"bddv","entity data-provider boundary","operator[]","get collaborator"
"bddv","entity data-provider boundary","push_back","command collaborator"
"bddv","entity data-provider boundary","push_back","command collaborator"
"bddv","entity data-provider boundary","size","unclassified"
"bddv","entity data-provider boundary","bits","get collaborator"
"bddv","entity data-provider boundary","operator<=","property collaborator"
"bddv","entity data-provider boundary","operator>=","property collaborator"
"bddv","entity data-provider boundary","operator<","property collaborator"
"bddv","entity data-provider boundary","operator>","property collaborator"
"bddv","entity data-provider boundary","operator<=","property collaborator"
"bddv","entity data-provider boundary","operator>=","property collaborator"
"bddv","entity data-provider boundary","operator<","property collaborator"
"bddv","entity data-provider boundary","operator>","property collaborator"
"bddv","entity data-provider boundary","sle","property collaborator"
"bddv","entity data-provider boundary","sge","property collaborator"
"bddv","entity data-provider boundary","slt","property collaborator"
"bddv","entity data-provider boundary","sgt","property collaborator"
"bddv","entity data-provider boundary","operator==","property collaborator"
"bddv","entity data-provider boundary","operator==","property collaborator"
"bddv","entity data-provider boundary","operator!=","property collaborator"
"bddv","entity data-provider boundary","operator!=","property collaborator"
"bddv","entity data-provider boundary","operator+","property"
"bddv","entity data-provider boundary","operator+","property collaborator"
"bddv","entity data-provider boundary","operator-","property"
"bddv","entity data-provider boundary","operator-","property collaborator"
"bddv","entity data-provider boundary","rev_sub","property collaborator"
"bddv","entity data-provider boundary","operator*","property"
"bddv","entity data-provider boundary","operator*","property collaborator"
"bddv","entity data-provider boundary","operator*","property collaborator"
"bddv","entity data-provider boundary","append","property"
"bddv","entity data-provider boundary","quot_rem","unclassified"
"bddv","entity data-provider boundary","is_const","predicate"
"bddv","entity data-provider boundary","to_val","property collaborator"
"bddv","entity data-provider boundary","bddv::shl","command"
"bddv","entity data-provider boundary","bddv::shr","command"
"bddv","entity data-provider boundary","bddv::all0","property collaborator"
"bddv","entity data-provider boundary","bddv::all1","property collaborator"
"bin_probe","empty","bin_probe","constructor"
"bin_probe","empty","~bin_probe","destructor"
"and_probe","pure-controller degenerate small-class","and_probe","constructor"
"and_probe","pure-controller degenerate small-class","operator()","controller stateless"
"or_probe","pure-controller degenerate small-class","or_probe","constructor"
"or_probe","pure-controller degenerate small-class","operator()","controller stateless"
"app_triple_lt","pure-controller degenerate small-class","app_triple_lt","constructor"
"app_triple_lt","pure-controller degenerate small-class","operator()","controller stateless"
"eq_probe","pure-controller degenerate small-class","eq_probe","constructor"
"eq_probe","pure-controller degenerate small-class","operator()","controller stateless"
"const_probe","data-provider boundary small-class","const_probe","constructor"
"const_probe","data-provider boundary small-class","operator()","property wrapper"
"set_merge_tf_trail","commander data-class small-class","set_merge_tf_trail","constructor"
"set_merge_tf_trail","commander data-class small-class","undo","set"
"is_non_propositional_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_propositional_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_propositional_predicate","commander boundary degenerate","operator()","command collaborator"
"is_qfaufbv_probe","boundary degenerate small-class","operator()","wrapper stateless"
"is_non_qfufbv_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qfufbv_predicate","commander boundary degenerate","operator()","wrapper stateless"
"is_non_qfufbv_predicate","commander boundary degenerate","operator()","command collaborator"
"fail_tactic","data-provider lazy-class degenerate","operator()","wrapper stateless"
"fail_tactic","data-provider lazy-class degenerate","cleanup","empty"
"fail_tactic","data-provider lazy-class degenerate","name","incidental"
"fail_tactic","data-provider lazy-class degenerate","translate","get collaborator"
"is_qfbv_probe","boundary degenerate small-class","operator()","wrapper stateless"
"report_verbose_tactic","boundary degenerate small-class","report_verbose_tactic","constructor"
"report_verbose_tactic","boundary degenerate small-class","operator()","collaborator incidental"
"trace_tactic","boundary small-class","trace_tactic","constructor"
"trace_tactic","boundary small-class","operator()","collaborator"
"pb_preprocess_tactic","boundary","display_annotation","command collaborator"
"pb_preprocess_tactic","boundary","set_value","command"
"pb_preprocess_tactic","boundary","translate","wrapper stateless"
"pb_preprocess_tactic","boundary","name","incidental"
"pb_preprocess_tactic","boundary","operator()","command collaborator"
"pb_preprocess_tactic","boundary","simplify","get predicate non-void-command collaborator"
"pb_preprocess_tactic","boundary","updt_params","empty"
"pb_preprocess_tactic","boundary","cleanup","empty"
"pb_preprocess_tactic","boundary","reset","command"
"pb_preprocess_tactic","boundary","negate","property non-void-command collaborator"
"pb_preprocess_tactic","boundary","normalize","command collaborator"
"pb_preprocess_tactic","boundary","log2ceil","incidental"
"pb_preprocess_tactic","boundary","decompose","command collaborator"
"pb_preprocess_tactic","boundary","cut","predicate non-void-command collaborator"
"pb_preprocess_tactic","boundary","decompose_cut","property non-void-command collaborator"
"pb_preprocess_tactic","boundary","process_vars","command collaborator"
"pb_preprocess_tactic","boundary","classify_vars","predicate non-void-command collaborator"
"pb_preprocess_tactic","boundary","insert","command"
"pb_preprocess_tactic","boundary","pure_args","predicate collaborator"
"pb_preprocess_tactic","boundary","next_resolvent","property non-void-command collaborator"
"pb_preprocess_tactic","boundary","get_coeff","wrapper stateless"
"pb_preprocess_tactic","boundary","is_valid","predicate collaborator"
"pb_preprocess_tactic","boundary","is_reduction","controller stateless"
"pb_preprocess_tactic","boundary","resolve","command collaborator"
"pb_preprocess_tactic","boundary","is_complement","predicate collaborator"
"pb_preprocess_tactic","boundary","to_ge","predicate non-void-command collaborator"
"pb_preprocess_tactic","boundary","replace","command collaborator"
"pb_preprocess_tactic","boundary","subsumes","controller stateless"
"dyn_ack_manager","entity commander boundary","setup","empty"
"dyn_ack_manager","entity commander boundary","used_cg_eh","command collaborator"
"dyn_ack_manager","entity commander boundary","cg_conflict_eh","command collaborator"
"dyn_ack_manager","entity commander boundary","used_eq_eh","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::dyn_ack_manager","constructor"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::~dyn_ack_manager","destructor"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::reset_app_pairs","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::init_search_eh","command"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::cg_eh","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::eq_eh","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::gc","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::del_clause_eh","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::propagate_eh","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::mk_eq","property non-void-command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::instantiate","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::reset","command"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::reset_app_triples","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::instantiate","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::gc_triples","command collaborator"
"dyn_ack_manager","entity commander boundary","dyn_ack_manager::check_invariant","predicate collaborator"
"false_pred","boundary degenerate small-class","operator()","collaborator incidental"
"cell","commander data-class small-class","cell","constructor"
"cell","commander data-class small-class","~cell","destructor"
"cell","commander data-class small-class","reset","set"
"fail_if_undecided_tactic","pure-controller degenerate small-class","fail_if_undecided_tactic","constructor"
"fail_if_undecided_tactic","pure-controller degenerate small-class","operator()","controller stateless"
"smt_proof_hint","controller small-class","smt_proof_hint","constructor"
"smt_proof_hint","controller small-class","smt_proof_hint::get_hint","property controller"
"statistics_report","empty","statistics_report","constructor"
"statistics_report","empty","statistics_report","constructor"
"statistics_report","empty","statistics_report::~statistics_report","destructor"
"simplifier_cmd","data-provider boundary data-class","simplifier_cmd","constructor"
"simplifier_cmd","data-provider boundary data-class","get_name","get collaborator"
"simplifier_cmd","data-provider boundary data-class","get_descr","get"
"simplifier_cmd","data-provider boundary data-class","factory","get collaborator"
"iexpr_inverter","entity commander boundary","uncnstr","wrapper stateless"
"iexpr_inverter","entity commander boundary","mk_fresh_uncnstr_var_for","command collaborator"
"iexpr_inverter","entity commander boundary","iexpr_inverter","constructor"
"iexpr_inverter","entity commander boundary","~iexpr_inverter","destructor"
"iexpr_inverter","entity commander boundary","set_is_var","set collaborator"
"iexpr_inverter","entity commander boundary","set_model_converter","set collaborator"
"iexpr_inverter","entity commander boundary","set_produce_proofs","set"
"iexpr_inverter","entity commander boundary","iexpr_inverter::uncnstr","wrapper stateless"
"iexpr_inverter","entity commander boundary","iexpr_inverter::mk_fresh_uncnstr_var_for","void-accessor command collaborator"
"iexpr_inverter","entity commander boundary","iexpr_inverter::add_def","command collaborator"
"iexpr_inverter","entity commander boundary","iexpr_inverter::add_defs","command collaborator"
"and_then_tactical","degenerate","and_then_tactical","constructor"
"and_then_tactical","degenerate","name","incidental"
"and_then_tactical","degenerate","operator()","controller stateless"
"and_then_tactical","degenerate","translate","wrapper stateless"
"and_then_tactical","degenerate","register_on_clause","controller stateless"
"and_then_tactical","degenerate","user_propagate_init","controller stateless"
"and_then_tactical","degenerate","user_propagate_register_fixed","controller stateless"
"and_then_tactical","degenerate","user_propagate_register_final","controller stateless"
"and_then_tactical","degenerate","user_propagate_register_eq","controller stateless"
"and_then_tactical","degenerate","user_propagate_register_diseq","controller stateless"
"and_then_tactical","degenerate","user_propagate_register_expr","controller stateless"
"and_then_tactical","degenerate","user_propagate_clear","controller stateless"
"and_then_tactical","degenerate","user_propagate_register_created","controller stateless"
"and_then_tactical","degenerate","user_propagate_register_decide","controller stateless"
"finite_product_relation_plugin::rename_fn","boundary data-class small-class","operator()","property set collaborator"
"nary_tactical","controller","nary_tactical","constructor"
"nary_tactical","controller","updt_params","controller"
"nary_tactical","controller","collect_param_descrs","controller"
"nary_tactical","controller","collect_statistics","controller"
"nary_tactical","controller","reset_statistics","controller"
"nary_tactical","controller","cleanup","controller"
"nary_tactical","controller","reset","controller"
"nary_tactical","controller","set_logic","controller"
"nary_tactical","controller","set_progress_callback","controller"
"nary_tactical","controller","translate_core","property controller"
"no_par_tactical","degenerate","name","incidental"
"no_par_tactical","degenerate","operator()","wrapper stateless"
"no_par_tactical","degenerate","translate","collaborator incidental"
"no_par_tactical","degenerate","cleanup","empty"
"no_par_and_then_tactical","degenerate","name","incidental"
"no_par_and_then_tactical","degenerate","operator()","wrapper stateless"
"no_par_and_then_tactical","degenerate","translate","collaborator incidental"
"no_par_and_then_tactical","degenerate","cleanup","empty"
"table_relation_plugin::universal_target_union_fn","pure-controller degenerate small-class","operator()","controller stateless"
"unary_tactical","entity commander boundary","unary_tactical","constructor"
"unary_tactical","entity commander boundary","operator()","collaborator incidental"
"unary_tactical","entity commander boundary","cleanup","command"
"unary_tactical","entity commander boundary","collect_statistics","collaborator"
"unary_tactical","entity commander boundary","reset_statistics","command"
"unary_tactical","entity commander boundary","updt_params","command collaborator"
"unary_tactical","entity commander boundary","collect_param_descrs","command collaborator"
"unary_tactical","entity commander boundary","reset","command"
"unary_tactical","entity commander boundary","set_logic","command collaborator"
"unary_tactical","entity commander boundary","set_progress_callback","command collaborator"
"unary_tactical","entity commander boundary","user_propagate_register_expr","command collaborator"
"unary_tactical","entity commander boundary","user_propagate_clear","command"
"unary_tactical","entity commander boundary","translate_core","property non-void-command collaborator"
"repeat_tactical","entity commander boundary","operator()","command collaborator"
"repeat_tactical","entity commander boundary","repeat_tactical","constructor"
"repeat_tactical","entity commander boundary","name","incidental"
"repeat_tactical","entity commander boundary","operator()","command collaborator"
"repeat_tactical","entity commander boundary","translate","property non-void-command collaborator"
"cleanup_tactical","entity boundary","cleanup_tactical","constructor"
"cleanup_tactical","entity boundary","name","incidental"
"cleanup_tactical","entity boundary","operator()","command collaborator"
"cleanup_tactical","entity boundary","translate","property non-void-command collaborator"
"_scoped_numeral_vector","commander","_scoped_numeral_vector","constructor"
"_scoped_numeral_vector","commander","_scoped_numeral_vector","copy-constructor"
"_scoped_numeral_vector","commander","~_scoped_numeral_vector","destructor"
"_scoped_numeral_vector","commander","reset","command"
"_scoped_numeral_vector","commander","m","get collaborator"
"_scoped_numeral_vector","commander","push_back","command collaborator"
"_scoped_numeral_vector","commander","pop_back","command"
"_scoped_numeral_vector","commander","shrink","command"
"_scoped_numeral_vector","commander","resize","command"
"if_no_proofs_tactical","degenerate","if_no_proofs_tactical","constructor"
"if_no_proofs_tactical","degenerate","name","incidental"
"if_no_proofs_tactical","degenerate","operator()","controller stateless"
"if_no_proofs_tactical","degenerate","translate","wrapper stateless"
"if_no_unsat_cores_tactical","degenerate","if_no_unsat_cores_tactical","constructor"
"if_no_unsat_cores_tactical","degenerate","name","incidental"
"if_no_unsat_cores_tactical","degenerate","operator()","controller stateless"
"if_no_unsat_cores_tactical","degenerate","translate","wrapper stateless"
"array_value_generator","entity boundary small-class","array_value_generator","constructor"
"array_value_generator","entity boundary small-class","get_fid","property collaborator"
"array_value_generator","entity boundary small-class","get_value","property non-void-command collaborator"
"local_search","boundary","score","get collaborator"
"local_search","boundary","inc_score","collaborator"
"local_search","boundary","dec_score","collaborator"
"local_search","boundary","slack_score","get collaborator"
"local_search","boundary","inc_slack_score","collaborator"
"local_search","boundary","dec_slack_score","collaborator"
"local_search","boundary","already_in_goodvar_stack","get collaborator"
"local_search","boundary","conf_change","get collaborator"
"local_search","boundary","time_stamp","get collaborator"
"local_search","boundary","is_pos","controller stateless"
"local_search","boundary","is_true","predicate collaborator"
"local_search","boundary","is_true","predicate collaborator"
"local_search","boundary","is_false","predicate collaborator"
"local_search","boundary","is_unit","get collaborator"
"local_search","boundary","is_unit","get controller"
"local_search","boundary","num_constraints","unclassified"
"local_search","boundary","constraint_slack","get"
"local_search","boundary","num_vars","unclassified"
"local_search","boundary","rlimit","get collaborator"
"local_search","boundary","num_non_binary_clauses","get"
"local_search","boundary","add","command collaborator"
"local_search","boundary","get_model","get collaborator"
"local_search","boundary","updt_params","empty"
"local_search","boundary","set_seed","command"
"local_search","boundary","get_best_phase","get collaborator"
"local_search","boundary","cur_solution","get collaborator"
"local_search","boundary","get_priority","get collaborator"
"local_search","boundary","config","get collaborator"
"local_search","boundary","local_search::init","command collaborator"
"local_search","boundary","local_search::init_cur_solution","command collaborator"
"local_search","boundary","local_search::init_slack","command"
"local_search","boundary","local_search::init_scores","command collaborator"
"local_search","boundary","local_search::init_goodvars","command"
"local_search","boundary","local_search::reinit","command collaborator"
"local_search","boundary","local_search::propagate","predicate non-void-command collaborator"
"local_search","boundary","local_search::add_propagation","command collaborator"
"local_search","boundary","local_search::set_best_unsat","command"
"local_search","boundary","local_search::verify_solution","collaborator"
"local_search","boundary","local_search::verify_unsat_stack","collaborator"
"local_search","boundary","local_search::verify_goodvar","predicate"
"local_search","boundary","local_search::constraint_coeff","collaborator"
"local_search","boundary","local_search::verify_constraint","collaborator"
"local_search","boundary","local_search::verify_slack","collaborator"
"local_search","boundary","local_search::verify_slack","collaborator"
"local_search","boundary","local_search::constraint_value","property collaborator"
"local_search","boundary","local_search::add_clause","command collaborator"
"local_search","boundary","local_search::add_cardinality","command collaborator"
"local_search","boundary","local_search::add_pb","command collaborator"
"local_search","boundary","local_search::add_unit","command collaborator"
"local_search","boundary","local_search::local_search","constructor"
"local_search","boundary","local_search::reinit","command collaborator"
"local_search","boundary","local_search::import","command collaborator"
"local_search","boundary","local_search::~local_search","destructor"
"local_search","boundary","local_search::check","property non-void-command collaborator"
"local_search","boundary","local_search::walksat","command"
"local_search","boundary","local_search::check","property non-void-command collaborator"
"local_search","boundary","local_search::sat","command"
"local_search","boundary","local_search::unsat","command"
"local_search","boundary","local_search::pick_flip_lookahead","command collaborator"
"local_search","boundary","local_search::pick_flip_walksat","command collaborator"
"local_search","boundary","local_search::flip_walksat","command collaborator"
"local_search","boundary","local_search::set_parameters","command"
"local_search","boundary","local_search::print_info","command collaborator"
"local_search","boundary","local_search::extract_model","command"
"local_search","boundary","local_search::display","property collaborator"
"local_search","boundary","local_search::display","property collaborator"
"local_search","boundary","local_search::display","collaborator incidental"
"local_search","boundary","local_search::collect_statistics","collaborator"
"local_search","boundary","local_search::set_phase","unclassified"
"local_search","boundary","local_search::set_bias","collaborator"
"obj_hash_entry","unclassified","get_hash","unclassified"
"obj_hash_entry","unclassified","is_free","predicate"
"obj_hash_entry","unclassified","is_deleted","predicate"
"obj_hash_entry","unclassified","is_used","predicate"
"obj_hash_entry","unclassified","get_data","get collaborator"
"obj_hash_entry","unclassified","get_data","get collaborator"
"obj_hash_entry","unclassified","set_data","set collaborator"
"obj_hash_entry","unclassified","set_hash","command"
"obj_hash_entry","unclassified","mark_as_deleted","set"
"obj_hash_entry","unclassified","mark_as_free","set"
"util::imp","boundary","m","get collaborator"
"util::imp","boundary","a","get collaborator"
"util::imp","boundary","z","property non-void-command collaborator"
"util::imp","boundary","one","property non-void-command collaborator"
"util::imp","boundary","display","collaborator incidental"
"util::imp","boundary","create_branches","predicate non-void-command collaborator"
"util::imp","boundary","set_enable_linear","set"
"util::imp","boundary","extract_non_linear","command collaborator"
"util::imp","boundary","extract_non_linear","command collaborator"
"util::imp","boundary","extract_non_linear","void-accessor command collaborator"
"util::imp","boundary","track","command collaborator"
"util::imp","boundary","mk_lt","property non-void-command collaborator"
"util::imp","boundary","mk_le","property non-void-command collaborator"
"util::imp","boundary","mk_gt","property non-void-command collaborator"
"util::imp","boundary","mk_ge","property non-void-command collaborator"
"util::imp","boundary","mk_eq","property non-void-command collaborator"
"util::imp","boundary","mk_ne","property non-void-command collaborator"
"util::imp","boundary","num","property non-void-command collaborator"
"util::imp","boundary","mk_uminus","property non-void-command collaborator"
"util::imp","boundary","mk_add","property non-void-command collaborator"
"util::imp","boundary","mk_add","property non-void-command collaborator"
"util::imp","boundary","mk_add","property non-void-command collaborator"
"util::imp","boundary","mk_mul","property non-void-command collaborator"
"util::imp","boundary","mk_sub","property non-void-command collaborator"
"util::imp","boundary","mk_mul","property non-void-command collaborator"
"util::imp","boundary","mk_and","property non-void-command collaborator"
"util::imp","boundary","mk_and","property non-void-command collaborator"
"util::imp","boundary","mk_or","property non-void-command collaborator"
"util::imp","boundary","mk_or","property non-void-command collaborator"
"util::imp","boundary","display_branching","collaborator"
"util::imp","boundary","mk_abs","property non-void-command collaborator"
"util::imp","boundary","to_expr","property non-void-command collaborator"
"util::imp","boundary","mk_def","property non-void-command collaborator"
"util::imp","boundary","mk_epsilon","property non-void-command collaborator"
"util::imp","boundary","mk_inf","property non-void-command collaborator"
"util::imp","boundary","sq","property non-void-command collaborator"
"util::imp","boundary","sq1","property non-void-command collaborator"
"util::imp","boundary","inv","property non-void-command collaborator"
"util::imp","boundary","mk_inf","property non-void-command collaborator"
"util::imp","boundary","inf_branch","command collaborator"
"util::imp","boundary","create_branch_l","command collaborator"
"util::imp","boundary","create_branch","command collaborator"
"util::imp","boundary","is_strict","collaborator incidental"
"util::imp","boundary","mk_subst","command collaborator"
"util::imp","boundary","get_coefficients","void-accessor command collaborator"
"util::imp","boundary","is_le","predicate non-void-command collaborator"
"util::imp","boundary","is_lt","predicate non-void-command collaborator"
"util::imp","boundary","is_degree_two_plus","controller stateless"
"util::imp","boundary","is_linear","predicate collaborator"
"util::imp","boundary","has_single_degree2","controller stateless"
"util::imp","boundary","get_polys","predicate non-void-command collaborator"
"util::imp","boundary","display","command collaborator"
"util::imp","boundary","display","command collaborator"
"util::imp","boundary","is_numeral","predicate collaborator"
"util::imp","boundary","get_decomposition","predicate non-void-command collaborator"
"util::imp","boundary","mk_uminus","void-accessor command collaborator"
"util::imp","boundary","mk_sub","void-accessor command collaborator"
"util::imp","boundary","mk_add","void-accessor command collaborator"
"util::imp","boundary","mk_mul","command collaborator"
"util::imp","boundary","mk_mul","void-accessor command collaborator"
"util::imp","boundary","mk_add","void-accessor command collaborator"
"util::imp","boundary","mk_differentiate","command collaborator"
"util::imp","boundary","apply_subst","controller stateless"
"util::imp","boundary","mk_polynomial","void-accessor command collaborator"
"util::imp","boundary","mk_zero","property non-void-command collaborator"
"util::imp","boundary","mk_zero","command collaborator"
"util::imp","boundary","mk_instantiate","void-accessor command collaborator"
"util::imp","boundary","is_variable","predicate non-void-command collaborator"
"util::imp","boundary","is_arithmetical","predicate non-void-command collaborator"
"util::imp","boundary","is_nonlinear","predicate non-void-command collaborator"
"util::imp","boundary","quot_rem","void-accessor command"
"util::imp","boundary","numeric_quot_rem","void-accessor command collaborator"
"util::imp","boundary","pseudo_quot_rem","void-accessor command"
"util::imp","boundary","test_quot_rem","predicate non-void-command collaborator"
"util::imp","boundary","mk_derivative","void-accessor command collaborator"
"util::imp","boundary","mk_derivative","command collaborator"
"util::imp","boundary","mk_inf_sign","void-accessor command collaborator"
"util::imp","boundary","mk_plus_inf_sign","command collaborator"
"util::imp","boundary","mk_minus_inf_sign","command collaborator"
"util::imp","boundary","mk_bound","void-accessor command collaborator"
"util::imp","boundary","mk_lt","command collaborator"
"util::imp","boundary","mk_exists_zero","command collaborator"
"util::imp","boundary","mk_same_sign","command collaborator"
"util::imp","boundary","mk_same_sign","void-accessor command collaborator"
"util::imp","boundary","collect_atoms","void-accessor command collaborator"
"util::imp","boundary","get_sign_branches_eq","command collaborator"
"util::imp","boundary","get_sign_branches_neq","command collaborator"
"util::imp","boundary","mk_inf_branch","property non-void-command collaborator"
"util::imp","boundary","swap_atoms","controller stateless"
"util::imp","boundary","get_sign_branches_eq_neq","command collaborator"
"util::imp","boundary","mk_bound_ext","property non-void-command collaborator"
"util::imp","boundary","mk_bound_ext","command collaborator"
"util::imp","boundary","get_sign_branches","command collaborator"
"util::imp","boundary","get_sign_literals","predicate non-void-command collaborator"
"util::imp","boundary","mk_sign_matrix","empty"
"util::imp","boundary","condense","controller stateless"
"util::imp","boundary","infer_psign","command collaborator"
"util::imp","boundary","cons","controller stateless"
"util::imp","boundary","deduce_matrix","command collaborator"
"dummy_hash","degenerate small-class","operator()","incidental"
"tst_dl_functor","commander boundary small-class","operator()","command collaborator"
"collector_of_reduced","commander boundary small-class","collector_of_reduced","constructor"
"collector_of_reduced","commander boundary small-class","operator()","command collaborator"
"ex1","data-provider data-class small-class","ex1","constructor"
"ex1","data-provider data-class small-class","msg","get"
"int_hash_proc","degenerate small-class","operator()","incidental"
"lt_proc","degenerate small-class","operator()","incidental"
"im_float_config","boundary","im_float_config","constructor"
"im_float_config","boundary","round_to_minus_inf","command"
"im_float_config","boundary","round_to_plus_inf","command"
"im_float_config","boundary","set_rounding","command"
"im_float_config","boundary","lower","collaborator incidental"
"im_float_config","boundary","upper","collaborator incidental"
"im_float_config","boundary","lower","collaborator incidental"
"im_float_config","boundary","upper","collaborator incidental"
"im_float_config","boundary","lower_is_inf","predicate collaborator"
"im_float_config","boundary","upper_is_inf","predicate collaborator"
"im_float_config","boundary","lower_is_open","predicate collaborator"
"im_float_config","boundary","upper_is_open","predicate collaborator"
"im_float_config","boundary","set_lower","command collaborator"
"im_float_config","boundary","set_upper","command collaborator"
"im_float_config","boundary","set_lower_is_open","empty"
"im_float_config","boundary","set_upper_is_open","empty"
"im_float_config","boundary","set_lower_is_inf","command"
"im_float_config","boundary","set_upper_is_inf","command"
"im_float_config","boundary","m","property collaborator"
"egraph","commander boundary","push_eq","command"
"egraph","commander boundary","push_node","command collaborator"
"egraph","commander boundary","push_plugin_undo","command"
"egraph","commander boundary","push_merge","command collaborator"
"egraph","commander boundary","push_merge","command"
"egraph","commander boundary","get_plugin","property collaborator"
"egraph","commander boundary","find","controller stateless"
"egraph","commander boundary","push","command"
"egraph","commander boundary","merge","command"
"egraph","commander boundary","can_propagate","predicate"
"egraph","commander boundary","inconsistent","get"
"egraph","commander boundary","has_th_eq","predicate"
"egraph","commander boundary","get_th_eq","get collaborator"
"egraph","commander boundary","next_th_eq","command"
"egraph","commander boundary","set_bool_var","controller stateless"
"egraph","commander boundary","set_default_relevant","set"
"egraph","commander boundary","set_on_merge","command collaborator"
"egraph","commander boundary","set_on_propagate","set collaborator"
"egraph","commander boundary","set_on_make","set collaborator"
"egraph","commander boundary","set_used_eq","set collaborator"
"egraph","commander boundary","set_used_cc","set collaborator"
"egraph","commander boundary","set_display_justification","set collaborator"
"egraph","commander boundary","uses_congruence","get"
"egraph","commander boundary","nodes","get collaborator"
"egraph","commander boundary","get_manager","get collaborator"
"egraph","commander boundary","pp","property wrapper"
"egraph","commander boundary","bpp","property wrapper"
"egraph","commander boundary","num_scopes","unclassified"
"egraph","commander boundary","num_nodes","unclassified"
"egraph","commander boundary","egraph::mk_enode","property non-void-command collaborator"
"egraph","commander boundary","egraph::find","property non-void-command collaborator"
"egraph","commander boundary","egraph::enodes_of","get controller"
"egraph","commander boundary","egraph::insert_table","property non-void-command collaborator"
"egraph","commander boundary","egraph::erase_from_table","command collaborator"
"egraph","commander boundary","egraph::reinsert_equality","command collaborator"
"egraph","commander boundary","egraph::queue_literal","command collaborator"
"egraph","commander boundary","egraph::force_push","command"
"egraph","commander boundary","egraph::update_children","command collaborator"
"egraph","commander boundary","egraph::mk","property non-void-command collaborator"
"egraph","commander boundary","egraph::egraph","constructor"
"egraph","commander boundary","egraph::~egraph","destructor"
"egraph","commander boundary","egraph::add_plugin","command collaborator"
"egraph","commander boundary","egraph::propagate_plugins","controller"
"egraph","commander boundary","egraph::add_th_eq","command collaborator"
"egraph","commander boundary","egraph::add_th_diseq","command collaborator"
"egraph","commander boundary","egraph::add_literal","command collaborator"
"egraph","commander boundary","egraph::new_diseq","command collaborator"
"egraph","commander boundary","egraph::add_th_diseqs","command collaborator"
"egraph","commander boundary","egraph::set_th_propagates_diseqs","set collaborator"
"egraph","commander boundary","egraph::th_propagates_diseqs","predicate collaborator"
"egraph","commander boundary","egraph::add_th_var","command collaborator"
"egraph","commander boundary","egraph::undo_add_th_var","controller stateless"
"egraph","commander boundary","egraph::set_merge_tf_enabled","command"
"egraph","commander boundary","egraph::set_cgc_enabled","command"
"egraph","commander boundary","egraph::set_relevant","command collaborator"
"egraph","commander boundary","egraph::toggle_cgc_enabled","command"
"egraph","commander boundary","egraph::set_value","void-accessor command collaborator"
"egraph","commander boundary","egraph::set_lbl_hash","void-accessor command collaborator"
"egraph","commander boundary","egraph::pop","command"
"egraph","commander boundary","egraph::merge","command collaborator"
"egraph","commander boundary","egraph::remove_parents","command collaborator"
"egraph","commander boundary","egraph::reinsert_parents","command collaborator"
"egraph","commander boundary","egraph::merge_th_eq","command collaborator"
"egraph","commander boundary","egraph::undo_eq","command collaborator"
"egraph","commander boundary","egraph::propagate","predicate non-void-command collaborator"
"egraph","commander boundary","egraph::set_conflict","command collaborator"
"egraph","commander boundary","egraph::merge_justification","controller stateless"
"egraph","commander boundary","egraph::unmerge_justification","controller stateless"
"egraph","commander boundary","egraph::are_diseq","predicate non-void-command collaborator"
"egraph","commander boundary","egraph::get_enode_eq_to","property non-void-command collaborator"
"egraph","commander boundary","egraph::tmp_eq","controller stateless"
"egraph","commander boundary","egraph::push_congruence","command"
"egraph","commander boundary","egraph::find_lca","controller stateless"
"egraph","commander boundary","egraph::push_to_lca","void-accessor command collaborator"
"egraph","commander boundary","egraph::push_lca","command collaborator"
"egraph","commander boundary","egraph::push_todo","void-accessor command collaborator"
"egraph","commander boundary","egraph::begin_explain","set"
"egraph","commander boundary","egraph::end_explain","command collaborator"
"egraph","commander boundary","egraph::explain","command collaborator"
"egraph","commander boundary","egraph::explain_eq","command collaborator"
"egraph","commander boundary","egraph::explain_eq","command collaborator"
"egraph","commander boundary","egraph::explain_diseq","non-void-command collaborator"
"egraph","commander boundary","egraph::explain_todo","command collaborator"
"egraph","commander boundary","egraph::invariant","command collaborator"
"egraph","commander boundary","egraph::display","property controller"
"egraph","commander boundary","egraph::display","property collaborator"
"egraph","commander boundary","egraph::collect_statistics","controller"
"egraph","commander boundary","egraph::copy_from","command collaborator"
"gomory_test","degenerate","gomory_test","constructor"
"gomory_test","degenerate","is_real","incidental"
"gomory_test","degenerate","print_row","wrapper stateless"
"gomory_test","degenerate","real_case_in_gomory_cut","controller stateless"
"gomory_test","degenerate","int_case_in_gomory_cut","controller stateless"
"gomory_test","degenerate","report_conflict_from_gomory_cut","wrapper stateless"
"gomory_test","degenerate","adjust_term_and_k_for_some_ints_case_gomory","controller stateless"
"gomory_test","degenerate","print_term","command collaborator"
"gomory_test","degenerate","mk_gomory_cut","void-accessor command collaborator"
"heap_trie","entity boundary","~heap_trie","destructor"
"heap_trie","entity boundary","size","unclassified"
"heap_trie","entity boundary","reset","command"
"heap_trie","entity boundary","insert","command collaborator"
"heap_trie","entity boundary","find_eq","predicate non-void-command collaborator"
"heap_trie","entity boundary","find_all_le","command collaborator"
"heap_trie","entity boundary","find_le","predicate non-void-command collaborator"
"heap_trie","entity boundary","remove","command collaborator"
"heap_trie","entity boundary","reset_statistics","command"
"heap_trie","entity boundary","collect_statistics","collaborator"
"heap_trie","entity boundary","display","collaborator"
"heap_trie","entity boundary","begin","property wrapper"
"heap_trie","entity boundary","end","wrapper stateless"
"heap_trie","entity boundary","num_keys","get"
"heap_trie","entity boundary","get_key","property collaborator"
"heap_trie","entity boundary","reorder_keys","command"
"heap_trie","entity boundary","find_le","predicate non-void-command collaborator"
"heap_trie","entity boundary","insert","void-accessor command collaborator"
"heap_trie","entity boundary","insert_key","property non-void-command collaborator"
"heap_trie","entity boundary","mk_leaf","property non-void-command factory collaborator"
"heap_trie","entity boundary","mk_trie","property non-void-command factory collaborator"
"heap_trie","entity boundary","del_node","command collaborator"
"sort_pred","degenerate small-class","operator()","incidental"
"OptFoo","empty","OptFoo","constructor"
"OptFoo","empty","~OptFoo","destructor"
"finite_product_relation_plugin::filter_identical_pairs_fn","commander boundary data-class small-class","operator()","set collaborator"
"evaluator::imp","boundary","max_var","property collaborator"
"evaluator::imp","boundary","eval_sign","property non-void-command collaborator"
"evaluator::imp","boundary","satisfied","collaborator incidental"
"evaluator::imp","boundary","satisfied","predicate non-void-command"
"evaluator::imp","boundary","eval_ineq","predicate non-void-command"
"evaluator::imp","boundary","eval_root","predicate non-void-command"
"evaluator::imp","boundary","eval","predicate non-void-command"
"evaluator::imp","boundary","add","command collaborator"
"evaluator::imp","boundary","sign_at","controller stateless"
"evaluator::imp","boundary","infeasible_intervals","property non-void-command collaborator"
"evaluator::imp","boundary","infeasible_intervals","property non-void-command collaborator"
"evaluator::imp","boundary","infeasible_intervals","property non-void-command collaborator"
"test_scoped_eh","small-class","operator()","command collaborator"
"test_scoped_eh","small-class","called","get"
"demodulator_index","unclassified","demodulator_index","constructor"
"demodulator_index","unclassified","insert_fwd","command"
"demodulator_index","unclassified","remove_fwd","command"
"demodulator_index","unclassified","find_fwd","predicate non-void-command collaborator"
"demodulator_index","unclassified","find_bwd","predicate non-void-command collaborator"
"demodulator_index","unclassified","empty","predicate"
"demodulator_index","unclassified","demodulator_index::~demodulator_index","destructor"
"demodulator_index","unclassified","demodulator_index::reset","command"
"demodulator_index","unclassified","demodulator_index::add","controller stateless"
"demodulator_index","unclassified","demodulator_index::del","controller stateless"
"demodulator_index","unclassified","demodulator_index::insert_bwd","controller"
"demodulator_index","unclassified","demodulator_index::remove_bwd","controller"
"demodulator_index","unclassified","demodulator_index::display","property wrapper"
"unsigned_ext","boundary degenerate","unsigned_ext","constructor"
"unsigned_ext","boundary degenerate","mk_ite","collaborator incidental"
"unsigned_ext","boundary degenerate","mk_le","collaborator incidental"
"unsigned_ext","boundary degenerate","mk_default","collaborator incidental"
"struct_factory","entity boundary","struct_factory::get_value_set","property non-void-command collaborator"
"struct_factory","entity boundary","struct_factory::struct_factory","constructor"
"struct_factory","entity boundary","struct_factory::~struct_factory","destructor"
"struct_factory","entity boundary","struct_factory::register_value","command collaborator"
"struct_factory","entity boundary","struct_factory::get_some_values","predicate non-void-command collaborator"
"test_context","empty","test_context","constructor"
"ast_manager","boundary","mk_fresh_id","set"
"ast_manager","boundary","has_trace_stream","predicate"
"ast_manager","boundary","trace_stream","get non-void-command collaborator"
"ast_manager","boundary","enable_int_real_coercions","set"
"ast_manager","boundary","int_real_coercions","get"
"ast_manager","boundary","display_free_ids","command collaborator"
"ast_manager","boundary","is_format_manager","predicate"
"ast_manager","boundary","get_format_manager","property non-void-command"
"ast_manager","boundary","get_allocator","get collaborator"
"ast_manager","boundary","mk_family_id","property non-void-command collaborator"
"ast_manager","boundary","mk_family_id","property non-void-command collaborator"
"ast_manager","boundary","get_family_id","property collaborator"
"ast_manager","boundary","get_family_id","property collaborator"
"ast_manager","boundary","get_family_name","property collaborator"
"ast_manager","boundary","is_builtin_family_id","collaborator incidental"
"ast_manager","boundary","limit","get collaborator"
"ast_manager","boundary","inc","predicate non-void-command"
"ast_manager","boundary","has_plugin","predicate collaborator"
"ast_manager","boundary","has_plugin","predicate collaborator"
"ast_manager","boundary","get_dom","collaborator"
"ast_manager","boundary","get_range","collaborator"
"ast_manager","boundary","get_basic_family_id","collaborator incidental"
"ast_manager","boundary","get_basic_decl_plugin","property collaborator"
"ast_manager","boundary","get_user_sort_family_id","collaborator incidental"
"ast_manager","boundary","get_user_sort_plugin","property collaborator"
"ast_manager","boundary","contains","predicate collaborator"
"ast_manager","boundary","is_lambda_def","predicate controller"
"ast_manager","boundary","is_lambda_def","property non-void-command collaborator"
"ast_manager","boundary","lambda_defs","get collaborator"
"ast_manager","boundary","lambda_def_qid","get collaborator"
"ast_manager","boundary","get_num_asts","unclassified"
"ast_manager","boundary","debug_ref_count","set"
"ast_manager","boundary","inc_ref","controller stateless"
"ast_manager","boundary","dec_ref","command collaborator"
"ast_manager","boundary","inc_array_ref","command collaborator"
"ast_manager","boundary","dec_array_ref","command collaborator"
"ast_manager","boundary","get_allocation_size","property"
"ast_manager","boundary","register_node","property non-void-command collaborator"
"ast_manager","boundary","allocate_node","property command collaborator"
"ast_manager","boundary","deallocate_node","command"
"ast_manager","boundary","is_bool","predicate collaborator"
"ast_manager","boundary","get_eq_op","collaborator incidental"
"ast_manager","boundary","mk_uninterpreted_sort","property non-void-command collaborator"
"ast_manager","boundary","mk_sort","property non-void-command collaborator"
"ast_manager","boundary","mk_bool_sort","get collaborator"
"ast_manager","boundary","mk_proof_sort","get collaborator"
"ast_manager","boundary","is_uninterp","controller stateless"
"ast_manager","boundary","is_type_var","controller stateless"
"ast_manager","boundary","has_type_vars","get"
"ast_manager","boundary","poly_root","get controller"
"ast_manager","boundary","mk_const","property non-void-command collaborator"
"ast_manager","boundary","mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_skolem_const_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_const_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_const_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_const_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_const_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","is_considered_uninterpreted","predicate non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_app","property non-void-command collaborator"
"ast_manager","boundary","mk_const","property non-void-command collaborator"
"ast_manager","boundary","mk_skolem_const","property non-void-command collaborator"
"ast_manager","boundary","mk_const","property non-void-command collaborator"
"ast_manager","boundary","mk_const","property non-void-command collaborator"
"ast_manager","boundary","mk_const","property non-void-command collaborator"
"ast_manager","boundary","mk_fresh_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_fresh_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_fresh_func_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_fresh_const","property non-void-command collaborator"
"ast_manager","boundary","mk_fresh_const","property non-void-command collaborator"
"ast_manager","boundary","mk_fresh_const","property non-void-command collaborator"
"ast_manager","boundary","is_label","predicate collaborator"
"ast_manager","boundary","is_label","wrapper stateless"
"ast_manager","boundary","is_label","predicate collaborator"
"ast_manager","boundary","is_label","wrapper stateless"
"ast_manager","boundary","is_label_lit","wrapper stateless"
"ast_manager","boundary","get_label_family_id","collaborator incidental"
"ast_manager","boundary","mk_pattern","property non-void-command collaborator"
"ast_manager","boundary","mk_forall","property non-void-command collaborator"
"ast_manager","boundary","mk_exists","property non-void-command collaborator"
"ast_manager","boundary","mk","command collaborator"
"ast_manager","boundary","del","command collaborator"
"ast_manager","boundary","copy","command collaborator"
"ast_manager","boundary","size","collaborator"
"ast_manager","boundary","empty","predicate collaborator"
"ast_manager","boundary","get","property collaborator"
"ast_manager","boundary","set","command collaborator"
"ast_manager","boundary","set","command collaborator"
"ast_manager","boundary","push_back","command collaborator"
"ast_manager","boundary","push_back","command collaborator"
"ast_manager","boundary","pop_back","command collaborator"
"ast_manager","boundary","pop_back","command collaborator"
"ast_manager","boundary","unshare","command collaborator"
"ast_manager","boundary","unfold","command collaborator"
"ast_manager","boundary","reroot","command collaborator"
"ast_manager","boundary","mk_empty_dependencies","property non-void-command collaborator"
"ast_manager","boundary","mk_join","property non-void-command collaborator"
"ast_manager","boundary","inc_ref","command collaborator"
"ast_manager","boundary","dec_ref","command collaborator"
"ast_manager","boundary","contains","predicate non-void-command collaborator"
"ast_manager","boundary","mk","command collaborator"
"ast_manager","boundary","del","command collaborator"
"ast_manager","boundary","copy","command collaborator"
"ast_manager","boundary","size","collaborator"
"ast_manager","boundary","empty","predicate collaborator"
"ast_manager","boundary","get","property collaborator"
"ast_manager","boundary","set","command collaborator"
"ast_manager","boundary","set","command collaborator"
"ast_manager","boundary","push_back","command collaborator"
"ast_manager","boundary","push_back","command collaborator"
"ast_manager","boundary","pop_back","command collaborator"
"ast_manager","boundary","pop_back","command collaborator"
"ast_manager","boundary","unshare","command collaborator"
"ast_manager","boundary","unfold","command collaborator"
"ast_manager","boundary","reroot","command collaborator"
"ast_manager","boundary","is_or","wrapper stateless"
"ast_manager","boundary","is_implies","wrapper stateless"
"ast_manager","boundary","is_and","wrapper stateless"
"ast_manager","boundary","is_not","wrapper stateless"
"ast_manager","boundary","is_eq","wrapper stateless"
"ast_manager","boundary","is_iff","predicate collaborator"
"ast_manager","boundary","is_oeq","wrapper stateless"
"ast_manager","boundary","is_distinct","wrapper stateless"
"ast_manager","boundary","is_xor","wrapper stateless"
"ast_manager","boundary","is_ite","wrapper stateless"
"ast_manager","boundary","is_term_ite","predicate collaborator"
"ast_manager","boundary","is_true","predicate collaborator"
"ast_manager","boundary","is_false","predicate collaborator"
"ast_manager","boundary","is_complement_core","predicate collaborator"
"ast_manager","boundary","is_complement","predicate collaborator"
"ast_manager","boundary","is_or","wrapper stateless"
"ast_manager","boundary","is_implies","wrapper stateless"
"ast_manager","boundary","is_and","wrapper stateless"
"ast_manager","boundary","is_not","wrapper stateless"
"ast_manager","boundary","is_eq","wrapper stateless"
"ast_manager","boundary","is_iff","predicate collaborator"
"ast_manager","boundary","is_xor","wrapper stateless"
"ast_manager","boundary","is_ite","wrapper stateless"
"ast_manager","boundary","is_term_ite","predicate collaborator"
"ast_manager","boundary","is_distinct","wrapper stateless"
"ast_manager","boundary","is_iff","predicate collaborator"
"ast_manager","boundary","is_ite","predicate collaborator"
"ast_manager","boundary","mk_eq","property non-void-command collaborator"
"ast_manager","boundary","mk_iff","property non-void-command collaborator"
"ast_manager","boundary","mk_oeq","property non-void-command collaborator"
"ast_manager","boundary","mk_xor","property non-void-command collaborator"
"ast_manager","boundary","mk_ite","property non-void-command collaborator"
"ast_manager","boundary","mk_xor","property non-void-command collaborator"
"ast_manager","boundary","mk_xor","property non-void-command collaborator"
"ast_manager","boundary","mk_xor","property non-void-command collaborator"
"ast_manager","boundary","mk_xor","property non-void-command collaborator"
"ast_manager","boundary","mk_or","property non-void-command collaborator"
"ast_manager","boundary","mk_and","property non-void-command collaborator"
"ast_manager","boundary","mk_or","property non-void-command collaborator"
"ast_manager","boundary","mk_and","property non-void-command collaborator"
"ast_manager","boundary","mk_or","property non-void-command collaborator"
"ast_manager","boundary","mk_or","property non-void-command collaborator"
"ast_manager","boundary","mk_and","property non-void-command collaborator"
"ast_manager","boundary","mk_and","property non-void-command collaborator"
"ast_manager","boundary","mk_and","property non-void-command collaborator"
"ast_manager","boundary","mk_and","property non-void-command collaborator"
"ast_manager","boundary","mk_and","property non-void-command collaborator"
"ast_manager","boundary","mk_or","property non-void-command collaborator"
"ast_manager","boundary","mk_or","property non-void-command collaborator"
"ast_manager","boundary","mk_or","property non-void-command collaborator"
"ast_manager","boundary","mk_or","property non-void-command collaborator"
"ast_manager","boundary","mk_implies","property non-void-command collaborator"
"ast_manager","boundary","mk_not","property non-void-command collaborator"
"ast_manager","boundary","mk_true","get collaborator"
"ast_manager","boundary","mk_false","get collaborator"
"ast_manager","boundary","mk_bool_val","property collaborator"
"ast_manager","boundary","mk_and_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_not_decl","property non-void-command collaborator"
"ast_manager","boundary","mk_or_decl","property non-void-command collaborator"
"ast_manager","boundary","is_model_value","wrapper stateless"
"ast_manager","boundary","is_model_value","wrapper stateless"
"ast_manager","boundary","mk_undef_proof","get collaborator"
"ast_manager","boundary","proofs_enabled","predicate"
"ast_manager","boundary","proofs_disabled","predicate"
"ast_manager","boundary","proof_mode","get collaborator"
"ast_manager","boundary","toggle_proof_mode","set collaborator"
"ast_manager","boundary","is_proof","predicate collaborator"
"ast_manager","boundary","is_undef_proof","predicate collaborator"
"ast_manager","boundary","is_asserted","wrapper stateless"
"ast_manager","boundary","is_hypothesis","wrapper stateless"
"ast_manager","boundary","is_goal","wrapper stateless"
"ast_manager","boundary","is_modus_ponens","wrapper stateless"
"ast_manager","boundary","is_reflexivity","wrapper stateless"
"ast_manager","boundary","is_symmetry","wrapper stateless"
"ast_manager","boundary","is_transitivity","wrapper stateless"
"ast_manager","boundary","is_monotonicity","wrapper stateless"
"ast_manager","boundary","is_quant_intro","wrapper stateless"
"ast_manager","boundary","is_quant_inst","wrapper stateless"
"ast_manager","boundary","is_distributivity","wrapper stateless"
"ast_manager","boundary","is_and_elim","wrapper stateless"
"ast_manager","boundary","is_not_or_elim","wrapper stateless"
"ast_manager","boundary","is_rewrite","wrapper stateless"
"ast_manager","boundary","is_rewrite_star","wrapper stateless"
"ast_manager","boundary","is_unit_resolution","wrapper stateless"
"ast_manager","boundary","is_lemma","wrapper stateless"
"ast_manager","boundary","is_hyper_resolve","wrapper stateless"
"ast_manager","boundary","is_def_intro","wrapper stateless"
"ast_manager","boundary","is_apply_def","wrapper stateless"
"ast_manager","boundary","is_skolemize","wrapper stateless"
"ast_manager","boundary","has_fact","predicate collaborator"
"ast_manager","boundary","get_fact","property collaborator"
"ast_manager","boundary","get_parents","property wrapper"
"ast_manager","boundary","get_num_parents","collaborator"
"ast_manager","boundary","get_parent","property collaborator"
"ast_manager","boundary","mk_apply_def","property non-void-command collaborator"
"ast_manager","boundary","push_dec_ref","command collaborator"
"ast_manager","boundary","push_dec_array_ref","command collaborator"
"ast_manager","boundary","ast_manager::ast_manager","constructor"
"ast_manager","boundary","ast_manager::ast_manager","constructor"
"ast_manager","boundary","ast_manager::ast_manager","copy-constructor"
"ast_manager","boundary","ast_manager::update_fresh_id","set"
"ast_manager","boundary","ast_manager::init","command collaborator"
"ast_manager","boundary","ast_manager::~ast_manager","destructor"
"ast_manager","boundary","ast_manager::compact_memory","command collaborator"
"ast_manager","boundary","ast_manager::compress_ids","command collaborator"
"ast_manager","boundary","ast_manager::raise_exception","wrapper stateless"
"ast_manager","boundary","ast_manager::raise_exception","wrapper stateless"
"ast_manager","boundary","ast_manager::display","property controller"
"ast_manager","boundary","ast_manager::copy_families_plugins","command collaborator"
"ast_manager","boundary","ast_manager::set_next_expr_id","command collaborator"
"ast_manager","boundary","ast_manager::get_node_size","non-void-command collaborator"
"ast_manager","boundary","ast_manager::display","property controller"
"ast_manager","boundary","ast_manager::register_plugin","command collaborator"
"ast_manager","boundary","ast_manager::get_plugin","property collaborator"
"ast_manager","boundary","ast_manager::is_value","predicate collaborator"
"ast_manager","boundary","ast_manager::is_unique_value","predicate collaborator"
"ast_manager","boundary","ast_manager::are_equal","predicate collaborator"
"ast_manager","boundary","ast_manager::are_distinct","predicate collaborator"
"ast_manager","boundary","ast_manager::add_lambda_def","command collaborator"
"ast_manager","boundary","ast_manager::is_lambda_def","get property controller"
"ast_manager","boundary","ast_manager::register_plugin","command collaborator"
"ast_manager","boundary","ast_manager::is_bool","predicate controller"
"ast_manager","boundary","ast_manager::slow_not_contains","predicate non-void-command collaborator"
"ast_manager","boundary","ast_manager::register_node_core","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::delete_node","void-accessor command collaborator"
"ast_manager","boundary","ast_manager::mk_sort","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_app","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_app","wrapper stateless"
"ast_manager","boundary","ast_manager::mk_app","wrapper stateless"
"ast_manager","boundary","ast_manager::mk_app","wrapper stateless"
"ast_manager","boundary","ast_manager::mk_app","wrapper stateless"
"ast_manager","boundary","ast_manager::mk_app","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_sort","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::substitute","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_uninterpreted_sort","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_func_decl","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_func_decl","non-void-command factory collaborator"
"ast_manager","boundary","ast_manager::check_sort","collaborator"
"ast_manager","boundary","ast_manager::check_sorts_core","collaborator"
"ast_manager","boundary","ast_manager::check_sorts","predicate collaborator"
"ast_manager","boundary","ast_manager::compatible_sorts","predicate controller"
"ast_manager","boundary","ast_manager::coercion_needed","predicate controller"
"ast_manager","boundary","ast_manager::coerce_to","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_app_core","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::check_args","controller"
"ast_manager","boundary","ast_manager::mk_app_core","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_app","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_fresh_func_decl","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::is_parametric_function","collaborator incidental"
"ast_manager","boundary","ast_manager::mk_fresh_sort","property set collaborator"
"ast_manager","boundary","ast_manager::mk_fresh_var_name","property set collaborator"
"ast_manager","boundary","ast_manager::mk_var","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_label","property controller"
"ast_manager","boundary","ast_manager::mk_label","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::is_label","controller stateless"
"ast_manager","boundary","ast_manager::mk_label_lit","controller stateless"
"ast_manager","boundary","ast_manager::mk_label_lit","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::is_label_lit","controller stateless"
"ast_manager","boundary","ast_manager::mk_pattern","wrapper stateless"
"ast_manager","boundary","ast_manager::is_pattern","wrapper stateless"
"ast_manager","boundary","ast_manager::is_pattern","controller stateless"
"ast_manager","boundary","ast_manager::mk_quantifier","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_lambda","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::update_quantifier","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::update_quantifier","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::update_quantifier","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::update_quantifier_weight","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::update_quantifier","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::update_quantifier","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_distinct","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_distinct_expanded","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_leaf","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_join","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::linearize","command collaborator"
"ast_manager","boundary","ast_manager::mk_model_value","wrapper stateless"
"ast_manager","boundary","ast_manager::get_some_value","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::get_some_value","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::is_fully_interp","predicate collaborator"
"ast_manager","boundary","ast_manager::mk_type_var","property set collaborator"
"ast_manager","boundary","ast_manager::has_type_var","predicate collaborator"
"ast_manager","boundary","ast_manager::has_type_var","predicate collaborator"
"ast_manager","boundary","ast_manager::has_type_var","predicate collaborator"
"ast_manager","boundary","ast_manager::instantiate_polymorphic","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_proof","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_proof","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_proof","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_proof","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_true_proof","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_asserted","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_goal","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_modus_ponens","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_reflexivity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_oeq_reflexivity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_commutativity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_iff_true","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_iff_false","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_symmetry","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_transitivity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_transitivity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_transitivity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_transitivity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_transitivity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_monotonicity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_congruence","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_oeq_congruence","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_bind_proof","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_quant_intro","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_oeq_quant_intro","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_distributivity","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_rewrite","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_oeq_rewrite","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_rewrite_star","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_pull_quant","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_push_quant","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_elim_unused_vars","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_der","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_quant_inst","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::is_quant_inst","predicate collaborator"
"ast_manager","boundary","ast_manager::is_rewrite","predicate collaborator"
"ast_manager","boundary","ast_manager::mk_def_axiom","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_unit_resolution","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_unit_resolution","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_hypothesis","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_lemma","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_def_intro","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_apply_defs","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_iff_oeq","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::check_nnf_proof_parents","predicate collaborator"
"ast_manager","boundary","ast_manager::mk_nnf_pos","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_nnf_neg","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_skolemization","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_and_elim","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_not_or_elim","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_clause_trail_elem","controller stateless"
"ast_manager","boundary","ast_manager::mk_assumption_add","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_lemma_add","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_th_assumption_add","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_th_lemma_add","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_redundant_del","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_clause_trail","controller stateless"
"ast_manager","boundary","ast_manager::mk_th_lemma","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::mk_hyper_resolve","property non-void-command collaborator"
"ast_manager","boundary","ast_manager::is_hyper_resolve","predicate non-void-command collaborator"
"ast_manager","boundary","ast_manager::show_id_gen","command"
"uint_map","unclassified","contains","predicate"
"uint_map","unclassified","find","predicate collaborator"
"uint_map","unclassified","find","get collaborator"
"uint_map","unclassified","insert","command collaborator"
"uint_map","unclassified","erase","set"
"uint_map","unclassified","reset","command"
"approx_set_tpl","unclassified","e2u","wrapper stateless"
"approx_set_tpl","unclassified","u2s","collaborator incidental"
"approx_set_tpl","unclassified","e2s","property collaborator"
"approx_set_tpl","unclassified","approx_set_tpl","constructor"
"approx_set_tpl","unclassified","approx_set_tpl","constructor"
"approx_set_tpl","unclassified","set","set collaborator"
"approx_set_tpl","unclassified","get","get collaborator"
"approx_set_tpl","unclassified","insert","set collaborator"
"approx_set_tpl","unclassified","may_contain","predicate collaborator"
"approx_set_tpl","unclassified","must_not_contain","predicate collaborator"
"approx_set_tpl","unclassified","mk_union","wrapper stateless"
"approx_set_tpl","unclassified","mk_intersection","wrapper stateless"
"approx_set_tpl","unclassified","operator|=","set"
"approx_set_tpl","unclassified","operator&=","set"
"approx_set_tpl","unclassified","operator-=","set"
"approx_set_tpl","unclassified","empty","predicate"
"approx_set_tpl","unclassified","empty","controller stateless"
"approx_set_tpl","unclassified","must_not_subset","predicate"
"approx_set_tpl","unclassified","must_not_subset","controller stateless"
"approx_set_tpl","unclassified","must_not_subsume","predicate"
"approx_set_tpl","unclassified","must_not_subsume","controller stateless"
"approx_set_tpl","unclassified","must_not_eq","incidental"
"approx_set_tpl","unclassified","may_eq","incidental"
"approx_set_tpl","unclassified","equiv","predicate"
"approx_set_tpl","unclassified","equiv","incidental"
"approx_set_tpl","unclassified","approx_subset","predicate non-void-command"
"approx_set_tpl","unclassified","reset","set"
"approx_set_tpl","unclassified","empty_intersection","predicate"
"u2u","degenerate small-class","operator()","incidental"
