Class Name,Class Stereotype,Method Name,Method Stereotype
"Strategy","degenerate small-class","Strategy::Strategy","constructor",
"Strategy","degenerate small-class","Strategy::~Strategy","destructor",
"Strategy","degenerate small-class","Strategy::algorithm","empty",
"ConcreteStrategyA","degenerate small-class","ConcreteStrategyA::ConcreteStrategyA","constructor",
"ConcreteStrategyA","degenerate small-class","ConcreteStrategyA::~ConcreteStrategyA","destructor",
"ConcreteStrategyA","degenerate small-class","ConcreteStrategyA::algorithm","incidental",
"State","degenerate small-class","State::State","constructor",
"State","degenerate small-class","State::~State","destructor",
"State","degenerate small-class","State::handle","empty",
"Invoker","commander small-class","Invoker::Invoker","constructor",
"Invoker","commander small-class","Invoker::~Invoker","destructor",
"Invoker","commander small-class","Invoker::call","command",
"ConcreteImplementorA","degenerate small-class","ConcreteImplementorA::ConcreteImplementorA","constructor",
"ConcreteImplementorA","degenerate small-class","ConcreteImplementorA::~ConcreteImplementorA","destructor",
"ConcreteImplementorA","degenerate small-class","ConcreteImplementorA::operationImp","incidental",
"Receiver","degenerate small-class","Receiver::Receiver","constructor",
"Receiver","degenerate small-class","Receiver::~Receiver","destructor",
"Receiver","degenerate small-class","Receiver::action","incidental",
"ConcreteProduct","degenerate small-class","ConcreteProduct::ConcreteProduct","constructor",
"ConcreteProduct","degenerate small-class","ConcreteProduct::~ConcreteProduct","destructor",
"ConcreteProduct","degenerate small-class","ConcreteProduct::use","incidental",
"Director","entity boundary small-class","Director::Director","constructor",
"Director","entity boundary small-class","Director::~Director","destructor",
"Director","entity boundary small-class","Director::constuct","property non-void-command collaborator",
"Director","entity boundary small-class","Director::setBuilder","set collaborator",
"Implementor","degenerate small-class","Implementor::Implementor","constructor",
"Implementor","degenerate small-class","Implementor::~Implementor","destructor",
"Implementor","degenerate small-class","Implementor::operationImp","empty",
"ProductB1","degenerate small-class","ProductB1::ProductB1","constructor",
"ProductB1","degenerate small-class","ProductB1::~ProductB1","destructor",
"ProductB1","degenerate small-class","ProductB1::eat","incidental",
"Facade","commander small-class","Facade::Facade","constructor",
"Facade","commander small-class","Facade::~Facade","destructor",
"Facade","commander small-class","Facade::wrapOpration","command",
"ConcreteFactory1","factory degenerate small-class","ConcreteFactory1::ConcreteFactory1","constructor",
"ConcreteFactory1","factory degenerate small-class","ConcreteFactory1::~ConcreteFactory1","destructor",
"ConcreteFactory1","factory degenerate small-class","ConcreteFactory1::createProductA","factory wrapper stateless",
"ConcreteFactory1","factory degenerate small-class","ConcreteFactory1::createProductB","factory wrapper stateless",
"ConcreteImplementorB","degenerate small-class","ConcreteImplementorB::ConcreteImplementorB","constructor",
"ConcreteImplementorB","degenerate small-class","ConcreteImplementorB::~ConcreteImplementorB","destructor",
"ConcreteImplementorB","degenerate small-class","ConcreteImplementorB::operationImp","incidental",
"Abstraction","degenerate small-class","Abstraction::Abstraction","constructor",
"Abstraction","degenerate small-class","Abstraction::~Abstraction","destructor",
"Abstraction","degenerate small-class","Abstraction::Abstraction","constructor",
"Abstraction","degenerate small-class","Abstraction::operation","empty",
"SystemA","degenerate small-class","SystemA::SystemA","constructor",
"SystemA","degenerate small-class","SystemA::~SystemA","destructor",
"SystemA","degenerate small-class","SystemA::operationA","incidental",
"ConcreteColleagueA","commander small-class","ConcreteColleagueA::ConcreteColleagueA","constructor",
"ConcreteColleagueA","commander small-class","ConcreteColleagueA::~ConcreteColleagueA","destructor",
"ConcreteColleagueA","commander small-class","ConcreteColleagueA::sendmsg","command",
"ConcreteColleagueA","commander small-class","ConcreteColleagueA::receivemsg","incidental",
"AbstractFactory","empty","AbstractFactory::AbstractFactory","constructor",
"AbstractFactory","empty","AbstractFactory::~AbstractFactory","destructor",
"ConcreteProductA","degenerate small-class","ConcreteProductA::ConcreteProductA","constructor",
"ConcreteProductA","degenerate small-class","ConcreteProductA::~ConcreteProductA","destructor",
"ConcreteProductA","degenerate small-class","ConcreteProductA::Use","incidental",
"Target","degenerate small-class","Target::Target","constructor",
"Target","degenerate small-class","Target::~Target","destructor",
"Target","degenerate small-class","Target::request","incidental",
"AbstractProductA","empty","AbstractProductA::AbstractProductA","constructor",
"AbstractProductA","empty","AbstractProductA::~AbstractProductA","destructor",
"AbstractProductB","empty","AbstractProductB::AbstractProductB","constructor",
"AbstractProductB","empty","AbstractProductB::~AbstractProductB","destructor",
"ConcreteCommand","commander small-class","ConcreteCommand::ConcreteCommand","constructor",
"ConcreteCommand","commander small-class","ConcreteCommand::~ConcreteCommand","destructor",
"ConcreteCommand","commander small-class","ConcreteCommand::execute","command",
"Decorator","commander small-class","Decorator::Decorator","constructor",
"Decorator","commander small-class","Decorator::~Decorator","destructor",
"Decorator","commander small-class","Decorator::operation","command",
"ConcreteFactory2","factory degenerate small-class","ConcreteFactory2::ConcreteFactory2","constructor",
"ConcreteFactory2","factory degenerate small-class","ConcreteFactory2::~ConcreteFactory2","destructor",
"ConcreteFactory2","factory degenerate small-class","ConcreteFactory2::createProductA","factory wrapper stateless",
"ConcreteFactory2","factory degenerate small-class","ConcreteFactory2::createProductB","factory wrapper stateless",
"Mediator","degenerate small-class","Mediator::Mediator","constructor",
"Mediator","degenerate small-class","Mediator::~Mediator","destructor",
"Mediator","degenerate small-class","Mediator::operation","empty",
"Mediator","degenerate small-class","Mediator::registered","empty",
"RefinedAbstraction","commander small-class","RefinedAbstraction::RefinedAbstraction","constructor",
"RefinedAbstraction","commander small-class","RefinedAbstraction::RefinedAbstraction","constructor",
"RefinedAbstraction","commander small-class","RefinedAbstraction::~RefinedAbstraction","destructor",
"RefinedAbstraction","commander small-class","RefinedAbstraction::operation","command",
"ProductA2","degenerate small-class","ProductA2::ProductA2","constructor",
"ProductA2","degenerate small-class","ProductA2::~ProductA2","destructor",
"ProductA2","degenerate small-class","ProductA2::use","incidental",
"Builder","data-provider lazy-class degenerate","Builder::Builder","constructor",
"Builder","data-provider lazy-class degenerate","Builder::~Builder","destructor",
"Builder","data-provider lazy-class degenerate","Builder::buildPartA","empty",
"Builder","data-provider lazy-class degenerate","Builder::buildPartB","empty",
"Builder","data-provider lazy-class degenerate","Builder::buildPartC","empty",
"Builder","data-provider lazy-class degenerate","Builder::getResult","get collaborator",
"ProductB2","degenerate small-class","ProductB2::ProductB2","constructor",
"ProductB2","degenerate small-class","ProductB2::~ProductB2","destructor",
"ProductB2","degenerate small-class","ProductB2::eat","incidental",
"SystemC","degenerate small-class","SystemC::SystemC","constructor",
"SystemC","degenerate small-class","SystemC::~SystemC","destructor",
"SystemC","degenerate small-class","SystemC::opeartionC","incidental",
"Adaptee","degenerate small-class","Adaptee::Adaptee","constructor",
"Adaptee","degenerate small-class","Adaptee::~Adaptee","destructor",
"Adaptee","degenerate small-class","Adaptee::specificRequest","incidental",
"ConcreteComponent","degenerate small-class","ConcreteComponent::ConcreteComponent","constructor",
"ConcreteComponent","degenerate small-class","ConcreteComponent::~ConcreteComponent","destructor",
"ConcreteComponent","degenerate small-class","ConcreteComponent::operation","incidental",
"Adapter","commander small-class","Adapter::Adapter","constructor",
"Adapter","commander small-class","Adapter::~Adapter","destructor",
"Adapter","commander small-class","Adapter::request","command",
"ConcreteBuilder","commander","ConcreteBuilder::ConcreteBuilder","constructor",
"ConcreteBuilder","commander","ConcreteBuilder::~ConcreteBuilder","destructor",
"ConcreteBuilder","commander","ConcreteBuilder::buildPartA","command",
"ConcreteBuilder","commander","ConcreteBuilder::buildPartB","command",
"ConcreteBuilder","commander","ConcreteBuilder::buildPartC","command",
"Flyweight","degenerate small-class","Flyweight::Flyweight","constructor",
"Flyweight","degenerate small-class","Flyweight::~Flyweight","destructor",
"Flyweight","degenerate small-class","Flyweight::operation","empty",
"Client","empty","Client::Client","constructor",
"Client","empty","Client::~Client","destructor",
"Client","empty","Client::Client","constructor",
"Client","empty","Client::~Client","destructor",
"Client","empty","Client::Client","constructor",
"Client","empty","Client::~Client","destructor",
"ConcreteStateB","controller lazy-class data-class small-class","ConcreteStateB::ConcreteStateB","constructor",
"ConcreteStateB","controller lazy-class data-class small-class","ConcreteStateB::Instance","get set factory collaborator",
"ConcreteStateB","controller lazy-class data-class small-class","ConcreteStateB::~ConcreteStateB","destructor",
"ConcreteStateB","controller lazy-class data-class small-class","ConcreteStateB::handle","controller stateless",
"SystemB","degenerate small-class","SystemB::SystemB","constructor",
"SystemB","degenerate small-class","SystemB::~SystemB","destructor",
"SystemB","degenerate small-class","SystemB::operationB","incidental",
"ConcreteFactory","factory degenerate small-class","ConcreteFactory::ConcreteFactory","constructor",
"ConcreteFactory","factory degenerate small-class","ConcreteFactory::~ConcreteFactory","destructor",
"ConcreteFactory","factory degenerate small-class","ConcreteFactory::factoryMethod","factory wrapper stateless",
"Colleague","commander lazy-class degenerate","Colleague::Colleague","constructor",
"Colleague","commander lazy-class degenerate","Colleague::~Colleague","destructor",
"Colleague","commander lazy-class degenerate","Colleague::receivemsg","incidental",
"Colleague","commander lazy-class degenerate","Colleague::sendmsg","empty",
"Colleague","commander lazy-class degenerate","Colleague::setMediator","set collaborator",
"Factory","degenerate small-class","Factory::Factory","constructor",
"Factory","degenerate small-class","Factory::~Factory","destructor",
"Factory","degenerate small-class","Factory::factoryMethod","collaborator incidental",
"Factory","degenerate small-class","Factory::Factory","constructor",
"Factory","degenerate small-class","Factory::~Factory","destructor",
"Factory","degenerate small-class","Factory::createProduct","factory wrapper stateless",
"ConcreteFlyweight","small-class","ConcreteFlyweight::ConcreteFlyweight","constructor",
"ConcreteFlyweight","small-class","ConcreteFlyweight::~ConcreteFlyweight","destructor",
"ConcreteFlyweight","small-class","ConcreteFlyweight::operation","unclassified",
"FlyweightFactory","entity factory controller small-class","FlyweightFactory::FlyweightFactory","constructor",
"FlyweightFactory","entity factory controller small-class","FlyweightFactory::~FlyweightFactory","destructor",
"FlyweightFactory","entity factory controller small-class","FlyweightFactory::getFlyweight","property non-void-command factory collaborator",
"ConcreteMediator","commander boundary small-class","ConcreteMediator::ConcreteMediator","constructor",
"ConcreteMediator","commander boundary small-class","ConcreteMediator::~ConcreteMediator","destructor",
"ConcreteMediator","commander boundary small-class","ConcreteMediator::operation","command collaborator",
"ConcreteMediator","commander boundary small-class","ConcreteMediator::registered","command collaborator",
"Product","commander","Product::Product","constructor",
"Product","commander","Product::~Product","destructor",
"Product","commander","Product::setA","set",
"Product","commander","Product::setB","set",
"Product","commander","Product::setC","set",
"Product","commander","Product::show","unclassified",
"Product","commander","Product::Product","constructor",
"Product","commander","Product::~Product","destructor",
"Product","commander","Product::use","empty",
"Product","commander","Product::Product","constructor",
"Product","commander","Product::~Product","destructor",
"UnsharedConcreteFlyweight","degenerate small-class","UnsharedConcreteFlyweight::UnsharedConcreteFlyweight","constructor",
"UnsharedConcreteFlyweight","degenerate small-class","UnsharedConcreteFlyweight::~UnsharedConcreteFlyweight","destructor",
"UnsharedConcreteFlyweight","degenerate small-class","UnsharedConcreteFlyweight::operation","empty",
"ConcreteDecoratorA","commander small-class","ConcreteDecoratorA::ConcreteDecoratorA","constructor",
"ConcreteDecoratorA","commander small-class","ConcreteDecoratorA::~ConcreteDecoratorA","destructor",
"ConcreteDecoratorA","commander small-class","ConcreteDecoratorA::addBehavior","incidental",
"ConcreteDecoratorA","commander small-class","ConcreteDecoratorA::operation","command",
"ConcreteColleagueB","commander small-class","ConcreteColleagueB::ConcreteColleagueB","constructor",
"ConcreteColleagueB","commander small-class","ConcreteColleagueB::~ConcreteColleagueB","destructor",
"ConcreteColleagueB","commander small-class","ConcreteColleagueB::sendmsg","command",
"ConcreteColleagueB","commander small-class","ConcreteColleagueB::receivemsg","incidental",
"ConcreteObeserver","commander boundary data-class small-class","ConcreteObeserver::ConcreteObeserver","constructor",
"ConcreteObeserver","commander boundary data-class small-class","ConcreteObeserver::~ConcreteObeserver","destructor",
"ConcreteObeserver","commander boundary data-class small-class","ConcreteObeserver::update","set collaborator",
"ProductA1","degenerate small-class","ProductA1::ProductA1","constructor",
"ProductA1","degenerate small-class","ProductA1::~ProductA1","destructor",
"ProductA1","degenerate small-class","ProductA1::use","incidental",
"ConcreteSubject","data-class small-class","ConcreteSubject::ConcreteSubject","constructor",
"ConcreteSubject","data-class small-class","ConcreteSubject::~ConcreteSubject","destructor",
"ConcreteSubject","data-class small-class","ConcreteSubject::getState","get",
"ConcreteSubject","data-class small-class","ConcreteSubject::setState","set",
"Command","degenerate small-class","Command::Command","constructor",
"Command","degenerate small-class","Command::~Command","destructor",
"Command","degenerate small-class","Command::execute","empty",
"Obeserver","empty","Obeserver::Obeserver","constructor",
"Obeserver","empty","Obeserver::~Obeserver","destructor",
"Component","degenerate small-class","Component::Component","constructor",
"Component","degenerate small-class","Component::~Component","destructor",
"Component","degenerate small-class","Component::operation","empty",
"Subject","commander boundary","Subject::Subject","constructor",
"Subject","commander boundary","Subject::~Subject","destructor",
"Subject","commander boundary","Subject::attach","command collaborator",
"Subject","commander boundary","Subject::detach","command collaborator",
"Subject","commander boundary","Subject::notify","command collaborator",
"Subject","commander boundary","Subject::Subject","constructor",
"Subject","commander boundary","Subject::~Subject","destructor",
"Subject","commander boundary","Subject::request","empty",
"Proxy","commander degenerate","Proxy::Proxy","constructor",
"Proxy","commander degenerate","Proxy::~Proxy","destructor",
"Proxy","commander degenerate","Proxy::afterRequest","incidental",
"Proxy","commander degenerate","Proxy::preRequest","incidental",
"Proxy","commander degenerate","Proxy::request","command",
"ConcreteDecoratorB","commander small-class","ConcreteDecoratorB::ConcreteDecoratorB","constructor",
"ConcreteDecoratorB","commander small-class","ConcreteDecoratorB::~ConcreteDecoratorB","destructor",
"ConcreteDecoratorB","commander small-class","ConcreteDecoratorB::addBehavior","incidental",
"ConcreteDecoratorB","commander small-class","ConcreteDecoratorB::operation","command",
"RealSubject","degenerate small-class","RealSubject::RealSubject","constructor",
"RealSubject","degenerate small-class","RealSubject::~RealSubject","destructor",
"RealSubject","degenerate small-class","RealSubject::request","incidental",
"ConcreteProductB","degenerate small-class","ConcreteProductB::ConcreteProductB","constructor",
"ConcreteProductB","degenerate small-class","ConcreteProductB::~ConcreteProductB","destructor",
"ConcreteProductB","degenerate small-class","ConcreteProductB::Use","incidental",
"ConcreteStrategyB","degenerate small-class","ConcreteStrategyB::ConcreteStrategyB","constructor",
"ConcreteStrategyB","degenerate small-class","ConcreteStrategyB::~ConcreteStrategyB","destructor",
"ConcreteStrategyB","degenerate small-class","ConcreteStrategyB::algorithm","incidental",
"Singleton","lazy-class data-class small-class","Singleton::Singleton","constructor",
"Singleton","lazy-class data-class small-class","Singleton::~Singleton","destructor",
"Singleton","lazy-class data-class small-class","Singleton::getInstance","get set factory",
"Singleton","lazy-class data-class small-class","Singleton::singletonOperation","incidental",
"ConcreteStateA","controller lazy-class data-class small-class","ConcreteStateA::ConcreteStateA","constructor",
"ConcreteStateA","controller lazy-class data-class small-class","ConcreteStateA::~ConcreteStateA","destructor",
"ConcreteStateA","controller lazy-class data-class small-class","ConcreteStateA::Instance","get set factory collaborator",
"ConcreteStateA","controller lazy-class data-class small-class","ConcreteStateA::handle","controller stateless",
"Context","boundary","Context::Context","constructor",
"Context","boundary","Context::~Context","destructor",
"Context","boundary","Context::changeState","set collaborator",
"Context","boundary","Context::request","command",
"Context","boundary","Context::Context","constructor",
"Context","boundary","Context::~Context","destructor",
"Context","boundary","Context::algorithm","controller stateless",
"Context","boundary","Context::setStrategy","collaborator incidental",
