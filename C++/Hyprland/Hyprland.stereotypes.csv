Class Name,Class Stereotype,Method Name,Method Stereotype
"CXWayland","entity boundary small-class","CXWayland::CXWayland","constructor",
"CXWayland","entity boundary small-class","CXWayland::setCursor","void-accessor command collaborator",
"CXWM","boundary","CXWM::windowForXID","property collaborator",
"CXWM","boundary","CXWM::handleCreate","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleDestroy","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleConfigure","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleConfigureNotify","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleMapRequest","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleMapNotify","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleUnmapNotify","void-accessor command collaborator",
"CXWM","boundary","CXWM::readProp","void-accessor command collaborator",
"CXWM","boundary","CXWM::handlePropertyNotify","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleClientMessage","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleFocusIn","void-accessor command collaborator",
"CXWM","boundary","CXWM::sendWMMessage","void-accessor wrapper",
"CXWM","boundary","CXWM::focusWindow","command collaborator",
"CXWM","boundary","CXWM::handleError","void-accessor wrapper",
"CXWM","boundary","CXWM::selectionSendNotify","void-accessor wrapper",
"CXWM","boundary","CXWM::mimeToAtom","property controller",
"CXWM","boundary","CXWM::mimeFromAtom","property wrapper",
"CXWM","boundary","CXWM::handleSelectionNotify","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleSelectionPropertyNotify","collaborator incidental",
"CXWM","boundary","CXWM::handleSelectionRequest","void-accessor command collaborator",
"CXWM","boundary","CXWM::handleSelectionXFixesNotify","predicate controller",
"CXWM","boundary","CXWM::handleSelectionEvent","predicate non-void-command collaborator",
"CXWM","boundary","CXWM::onEvent","property non-void-command collaborator",
"CXWM","boundary","CXWM::gatherResources","command collaborator",
"CXWM","boundary","CXWM::getVisual","command collaborator",
"CXWM","boundary","CXWM::getRenderFormat","set collaborator",
"CXWM","boundary","CXWM::CXWM","constructor",
"CXWM","boundary","CXWM::~CXWM","destructor",
"CXWM","boundary","CXWM::setActiveWindow","wrapper",
"CXWM","boundary","CXWM::createWMWindow","set",
"CXWM","boundary","CXWM::activateSurface","command",
"CXWM","boundary","CXWM::sendState","controller",
"CXWM","boundary","CXWM::onNewSurface","command collaborator",
"CXWM","boundary","CXWM::onNewResource","command collaborator",
"CXWM","boundary","CXWM::readWindowData","command collaborator",
"CXWM","boundary","CXWM::associate","command collaborator",
"CXWM","boundary","CXWM::dissociate","controller stateless",
"CXWM","boundary","CXWM::updateClientList","controller",
"CXWM","boundary","CXWM::isWMWindow","predicate collaborator",
"CXWM","boundary","CXWM::initSelection","command",
"CXWM","boundary","CXWM::setClipboardToWayland","controller stateless",
"CXWM","boundary","CXWM::getTransferData","controller stateless",
"CXWM","boundary","CXWM::setCursor","void-accessor set collaborator",
"SXSelection","unclassified","SXSelection::onSelection","controller stateless",
"SXSelection","unclassified","SXSelection::onRead","property non-void-command collaborator",
"SXSelection","unclassified","SXSelection::sendData","predicate non-void-command",
"SXTransfer","entity boundary small-class","SXTransfer::~SXTransfer","destructor",
"SXTransfer","entity boundary small-class","SXTransfer::getIncomingSelectionProp","predicate non-void-command collaborator",
"CXWaylandSurface","commander","CXWaylandSurface::CXWaylandSurface","constructor",
"CXWaylandSurface","commander","CXWaylandSurface::ensureListeners","command",
"CXWaylandSurface","commander","CXWaylandSurface::map","set",
"CXWaylandSurface","commander","CXWaylandSurface::unmap","set",
"CXWaylandSurface","commander","CXWaylandSurface::considerMap","command",
"CXWaylandSurface","commander","CXWaylandSurface::wantsFocus","predicate non-void-command collaborator",
"CXWaylandSurface","commander","CXWaylandSurface::configure","set collaborator",
"CXWaylandSurface","commander","CXWaylandSurface::activate","command",
"CXWaylandSurface","commander","CXWaylandSurface::setFullscreen","set",
"CXWaylandSurface","commander","CXWaylandSurface::setMinimized","set",
"CXWaylandSurface","commander","CXWaylandSurface::restackToTop","controller",
"CXWaylandSurface","commander","CXWaylandSurface::close","command collaborator",
"CXWaylandSurface","commander","CXWaylandSurface::setWithdrawn","set",
"CXWaylandSurface","commander","CXWaylandSurface::CXWaylandSurface","constructor",
"CXWaylandSurface","commander","CXWaylandSurface::ensureListeners","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::map","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::unmap","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::wantsFocus","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::configure","collaborator incidental",
"CXWaylandSurface","commander","CXWaylandSurface::activate","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::setFullscreen","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::setMinimized","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::restackToTop","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::close","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::considerMap","incidental",
"CXWaylandSurface","commander","CXWaylandSurface::setWithdrawn","incidental",
"CXWaylandServer","unclassified","CXWaylandServer::tryOpenSockets","predicate non-void-command",
"CXWaylandServer","unclassified","CXWaylandServer::CXWaylandServer","constructor",
"CXWaylandServer","unclassified","CXWaylandServer::~CXWaylandServer","destructor",
"CXWaylandServer","unclassified","CXWaylandServer::die","command",
"CXWaylandServer","unclassified","CXWaylandServer::create","predicate non-void-command",
"CXWaylandServer","unclassified","CXWaylandServer::runXWayland","controller",
"CXWaylandServer","unclassified","CXWaylandServer::start","predicate non-void-command collaborator",
"CXWaylandServer","unclassified","CXWaylandServer::ready","property set collaborator",
"MaxLengthCString","unclassified","MaxLengthCString","constructor",
"MaxLengthCString","unclassified","operator+=","void-accessor command",
"MaxLengthCString","unclassified","write","void-accessor command",
"MaxLengthCString","unclassified","write","command",
"MaxLengthCString","unclassified","write_num","command",
"MaxLengthCString","unclassified","get_str","get",
"MaxLengthCString","unclassified","boundsExceeded","get",
"CTitleTex","empty","CTitleTex::CTitleTex","constructor",
"CTitleTex","empty","CTitleTex::~CTitleTex","destructor",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::CHyprBorderDecoration","constructor",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::~CHyprBorderDecoration","destructor",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::getPositioningInfo","property non-void-command collaborator",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::onPositioningReply","set collaborator",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::assignedBoxGlobal","property non-void-command collaborator",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::draw","void-accessor command",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::getDecorationType","collaborator incidental",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::updateWindow","command",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::damageEntire","command collaborator",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::getDecorationLayer","collaborator incidental",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::getDecorationFlags","property non-void-command collaborator",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::getDisplayName","incidental",
"CHyprBorderDecoration","boundary","CHyprBorderDecoration::doesntWantBorders","predicate non-void-command",
"IWindowTransformer","boundary degenerate small-class","IWindowTransformer::preWindowRender","collaborator incidental",
"CTexture","unclassified","CTexture::CTexture","constructor",
"CTexture","unclassified","CTexture::~CTexture","destructor",
"CTexture","unclassified","CTexture::CTexture","constructor",
"CTexture","unclassified","CTexture::CTexture","constructor",
"CTexture","unclassified","CTexture::CTexture","constructor",
"CTexture","unclassified","CTexture::update","void-accessor controller",
"CTexture","unclassified","CTexture::destroyTexture","command",
"CTexture","unclassified","CTexture::allocate","wrapper",
"CShader","small-class","CShader::getUniformLocation","property non-void-command collaborator",
"CShader","small-class","CShader::~CShader","destructor",
"CShader","small-class","CShader::destroy","set",
"CHyprRenderer","unclassified","CHyprRenderer::CHyprRenderer","constructor",
"CHyprRenderer","unclassified","CHyprRenderer::~CHyprRenderer","destructor",
"CHyprRenderer","unclassified","CHyprRenderer::shouldRenderWindow","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::shouldRenderWindow","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::renderWorkspaceWindowsFullscreen","void-accessor command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::renderWorkspaceWindows","void-accessor command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::renderWindow","void-accessor controller",
"CHyprRenderer","unclassified","CHyprRenderer::renderLayer","void-accessor controller",
"CHyprRenderer","unclassified","CHyprRenderer::renderIMEPopup","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::renderSessionLockSurface","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::renderAllClientsForWorkspace","void-accessor command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::renderLockscreen","void-accessor command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::renderMonitor","void-accessor command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::renderWorkspace","void-accessor command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::sendFrameEventsToWorkspace","void-accessor command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::setWindowScanoutMode","empty",
"CHyprRenderer","unclassified","CHyprRenderer::arrangeLayerArray","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::arrangeLayersForMonitor","void-accessor command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::damageSurface","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::damageWindow","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::damageMonitor","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::damageBox","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::damageBox","wrapper stateless",
"CHyprRenderer","unclassified","CHyprRenderer::damageRegion","command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::damageMirrorsWith","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::renderDragIcon","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::damageTrackingModeFromStr","collaborator incidental",
"CHyprRenderer","unclassified","CHyprRenderer::applyMonitorRule","predicate non-void-command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::setCursorSurface","set",
"CHyprRenderer","unclassified","CHyprRenderer::getRenderTimes","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::initiateManualCrash","command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::setOccludedForMainWorkspace","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::setOccludedForBackLayers","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::canSkipBackBufferClear","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::recheckSolitaryForMonitor","controller stateless",
"CHyprRenderer","unclassified","CHyprRenderer::getOrCreateRenderbuffer","property non-void-command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::getOrCreateRenderbuffer","property non-void-command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::makeEGLCurrent","wrapper stateless",
"CHyprRenderer","unclassified","CHyprRenderer::unsetEGL","wrapper stateless",
"CHyprRenderer","unclassified","CHyprRenderer::beginRender","predicate non-void-command",
"CHyprRenderer","unclassified","CHyprRenderer::endRender","command collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::onRenderbufferDestroy","void-accessor controller",
"CHyprRenderer","unclassified","CHyprRenderer::getCurrentRBO","get collaborator",
"CHyprRenderer","unclassified","CHyprRenderer::isNvidia","get",
"CRenderbuffer","unclassified","CRenderbuffer::~CRenderbuffer","destructor",
"CRenderbuffer","unclassified","CRenderbuffer::CRenderbuffer","constructor",
"CRenderbuffer","unclassified","CRenderbuffer::CRenderbuffer","constructor",
"CRenderbuffer","unclassified","CRenderbuffer::bind","command",
"CRenderbuffer","unclassified","CRenderbuffer::bindFB","command",
"CRenderbuffer","unclassified","CRenderbuffer::unbind","wrapper stateless",
"CRenderbuffer","unclassified","CRenderbuffer::getFB","property collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::CHyprOpenGLImpl","constructor",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::getModsForFormat","controller stateless",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::initDRMFormats","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::createEGLImage","property controller",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::logShaderError","controller stateless",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::createProgram","property non-void-command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::compileShader","property non-void-command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::passRequiresIntrospection","predicate controller",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::beginSimple","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::begin","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::end","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::setDamage","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::initShaders","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::applyScreenShader","void-accessor command",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::clear","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::blend","set",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::scissor","controller",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::scissor","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::scissor","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderRect","void-accessor command",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderRectWithBlur","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderRectWithDamage","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderTexture","void-accessor command",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderTextureWithDamage","void-accessor command",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderTextureInternalWithDamage","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderTexturePrimitive","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderTextureMatte","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::blurMainFramebufferWithDamage","property non-void-command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::markBlurDirtyForMonitor","collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::preRender","void-accessor controller",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::preBlurForCurrentMonitor","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::preWindowPass","command",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::preBlurQueued","predicate wrapper",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::shouldUseNewBlurOptimizations","predicate controller",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderTextureWithBlur","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderBorder","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::makeRawWindowSnapshot","void-accessor set collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::makeWindowSnapshot","controller",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::makeLayerSnapshot","controller",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderSnapshot","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderSnapshot","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderRoundedShadow","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::saveBufferForMirror","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderMirrored","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderSplash","controller stateless",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::createBGTextureForMonitor","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::clearWithTex","command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::destroyMonitorResources","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::saveMatrix","wrapper",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::setMatrixScaleTranslate","void-accessor wrapper",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::restoreMatrix","wrapper",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::bindOffMain","set",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::renderOffToMain","void-accessor command collaborator",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::bindBackOnMain","set",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::setMonitorTransformEnabled","set",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::setRenderModifEnabled","set",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::getPreferredReadFormat","wrapper stateless",
"CHyprOpenGLImpl","boundary","CHyprOpenGLImpl::getDRMFormats","get collaborator",
"SRenderModifData","unclassified","SRenderModifData::applyToBox","void-accessor controller",
"SRenderModifData","unclassified","SRenderModifData::applyToRegion","controller",
"SRenderModifData","unclassified","SRenderModifData::combinedScale","property wrapper",
"CWLBufferResource","boundary","CWLBufferResource::CWLBufferResource","constructor",
"CWLBufferResource","boundary","CWLBufferResource::good","predicate non-void-command",
"CWLBufferResource","boundary","CWLBufferResource::sendRelease","command",
"CWLBufferResource","boundary","CWLBufferResource::getResource","property non-void-command collaborator",
"CWLBufferResource","boundary","CWLBufferResource::fromResource","controller stateless",
"CWLBufferResource","boundary","CWLBufferResource::create","wrapper stateless",
"IDataSource","lazy-class degenerate","IDataSource","constructor",
"IDataSource","lazy-class degenerate","~IDataSource","destructor",
"IDataSource","lazy-class degenerate","IDataSource::hasDnd","incidental",
"IDataSource","lazy-class degenerate","IDataSource::dndDone","incidental",
"IDataSource","lazy-class degenerate","IDataSource::used","get",
"IDataSource","lazy-class degenerate","IDataSource::markUsed","set",
"IDataSource","lazy-class degenerate","IDataSource::type","collaborator incidental",
"CDMABuffer","lazy-class degenerate","CDMABuffer::CDMABuffer","constructor",
"CDMABuffer","lazy-class degenerate","CDMABuffer::~CDMABuffer","destructor",
"CDMABuffer","lazy-class degenerate","CDMABuffer::caps","collaborator incidental",
"CDMABuffer","lazy-class degenerate","CDMABuffer::type","collaborator incidental",
"CDMABuffer","lazy-class degenerate","CDMABuffer::update","collaborator incidental",
"CDMABuffer","lazy-class degenerate","CDMABuffer::isSynchronous","incidental",
"CDMABuffer","lazy-class degenerate","CDMABuffer::dmabuf","get collaborator",
"CDMABuffer","lazy-class degenerate","CDMABuffer::beginDataPtr","collaborator incidental",
"CDMABuffer","lazy-class degenerate","CDMABuffer::endDataPtr","empty",
"CDMABuffer","lazy-class degenerate","CDMABuffer::good","get",
"CDMABuffer","lazy-class degenerate","CDMABuffer::updateTexture","incidental",
"CDMABuffer","lazy-class degenerate","CDMABuffer::closeFDs","command",
"IWLBuffer","commander lazy-class","~IWLBuffer","destructor",
"IWLBuffer","commander lazy-class","IWLBuffer::dmabuf","wrapper stateless",
"IWLBuffer","commander lazy-class","IWLBuffer::shm","wrapper stateless",
"IWLBuffer","commander lazy-class","IWLBuffer::beginDataPtr","collaborator incidental",
"IWLBuffer","commander lazy-class","IWLBuffer::endDataPtr","incidental",
"IWLBuffer","commander lazy-class","IWLBuffer::sendRelease","command",
"IWLBuffer","commander lazy-class","IWLBuffer::lock","set",
"IWLBuffer","commander lazy-class","IWLBuffer::unlock","set",
"IWLBuffer","commander lazy-class","IWLBuffer::locked","get",
"CWLSubsurfaceResource","entity boundary","CWLSubsurfaceResource::CWLSubsurfaceResource","constructor",
"CWLSubsurfaceResource","entity boundary","CWLSubsurfaceResource::destroy","command",
"CWLSubsurfaceResource","entity boundary","CWLSubsurfaceResource::posRelativeToParent","property non-void-command collaborator",
"CWLSubsurfaceResource","entity boundary","CWLSubsurfaceResource::role","collaborator incidental",
"CWLSubsurfaceResource","entity boundary","CWLSubsurfaceResource::t1Parent","property non-void-command collaborator",
"CWLSHMPoolResource","empty","CWLSHMPoolResource::CWLSHMPoolResource","constructor",
"CSHMPool","commander small-class","CSHMPool::CSHMPool","constructor",
"CSHMPool","commander small-class","CSHMPool::~CSHMPool","destructor",
"CSHMPool","commander small-class","CSHMPool::resize","command",
"CWLSubcompositorProtocol","unclassified","CWLSubcompositorProtocol::CWLSubcompositorProtocol","constructor",
"CWLSubcompositorProtocol","unclassified","CWLSubcompositorProtocol::bindManager","void-accessor command collaborator",
"CWLSubcompositorProtocol","unclassified","CWLSubcompositorProtocol::destroyResource","void-accessor controller",
"CWLSubcompositorProtocol","unclassified","CWLSubcompositorProtocol::destroyResource","void-accessor controller",
"CWLSeatProtocol","controller","CWLSeatProtocol::CWLSeatProtocol","constructor",
"CWLSeatProtocol","controller","CWLSeatProtocol::bindManager","void-accessor command collaborator",
"CWLSeatProtocol","controller","CWLSeatProtocol::destroyResource","void-accessor controller",
"CWLSeatProtocol","controller","CWLSeatProtocol::destroyResource","void-accessor controller",
"CWLSeatProtocol","controller","CWLSeatProtocol::destroyResource","void-accessor controller",
"CWLSeatProtocol","controller","CWLSeatProtocol::destroyResource","void-accessor controller",
"CWLSeatProtocol","controller","CWLSeatProtocol::updateCapabilities","set",
"CWLSeatProtocol","controller","CWLSeatProtocol::updateKeymap","controller",
"CWLSeatProtocol","controller","CWLSeatProtocol::updateRepeatInfo","controller",
"CWLSeatProtocol","controller","CWLSeatProtocol::seatResourceForClient","property controller",
"CWLSeatResource","unclassified","CWLSeatResource::CWLSeatResource","constructor",
"CWLSeatResource","unclassified","CWLSeatResource::sendCapabilities","command",
"CWLSeatResource","unclassified","CWLSeatResource::good","predicate non-void-command",
"CWLSeatResource","unclassified","CWLSeatResource::client","get collaborator",
"CWLKeyboardResource","commander","CWLKeyboardResource::CWLKeyboardResource","constructor",
"CWLKeyboardResource","commander","CWLKeyboardResource::good","predicate non-void-command",
"CWLKeyboardResource","commander","CWLKeyboardResource::sendKeymap","command collaborator",
"CWLKeyboardResource","commander","CWLKeyboardResource::sendEnter","command collaborator",
"CWLKeyboardResource","commander","CWLKeyboardResource::sendLeave","command",
"CWLKeyboardResource","commander","CWLKeyboardResource::sendKey","command collaborator",
"CWLKeyboardResource","commander","CWLKeyboardResource::sendMods","command",
"CWLKeyboardResource","commander","CWLKeyboardResource::repeatInfo","command",
"CWLPointerResource","commander boundary","CWLPointerResource::CWLPointerResource","constructor",
"CWLPointerResource","commander boundary","CWLPointerResource::sendEnter","void-accessor command collaborator",
"CWLPointerResource","commander boundary","CWLPointerResource::sendLeave","command collaborator",
"CWLPointerResource","commander boundary","CWLPointerResource::sendMotion","void-accessor command collaborator",
"CWLPointerResource","commander boundary","CWLPointerResource::sendButton","command collaborator",
"CWLPointerResource","commander boundary","CWLPointerResource::sendAxis","command",
"CWLPointerResource","commander boundary","CWLPointerResource::sendFrame","command",
"CWLPointerResource","commander boundary","CWLPointerResource::sendAxisSource","command collaborator",
"CWLPointerResource","commander boundary","CWLPointerResource::sendAxisStop","command collaborator",
"CWLPointerResource","commander boundary","CWLPointerResource::sendAxisDiscrete","command",
"CWLPointerResource","commander boundary","CWLPointerResource::sendAxisValue120","command",
"CWLPointerResource","commander boundary","CWLPointerResource::sendAxisRelativeDirection","command collaborator",
"CWLTouchResource","unclassified","CWLTouchResource::CWLTouchResource","constructor",
"CWLTouchResource","unclassified","CWLTouchResource::good","predicate non-void-command",
"CWLTouchResource","unclassified","CWLTouchResource::sendDown","void-accessor command collaborator",
"CWLTouchResource","unclassified","CWLTouchResource::sendUp","command",
"CWLTouchResource","unclassified","CWLTouchResource::sendMotion","void-accessor command collaborator",
"CWLTouchResource","unclassified","CWLTouchResource::sendFrame","command",
"CWLTouchResource","unclassified","CWLTouchResource::sendCancel","command",
"CWLTouchResource","unclassified","CWLTouchResource::sendShape","void-accessor command collaborator",
"CWLTouchResource","unclassified","CWLTouchResource::sendOrientation","command",
"CWLOutputProtocol","boundary","CWLOutputProtocol::CWLOutputProtocol","constructor",
"CWLOutputProtocol","boundary","CWLOutputProtocol::bindManager","void-accessor command collaborator",
"CWLOutputProtocol","boundary","CWLOutputProtocol::destroyResource","void-accessor command collaborator",
"CWLOutputProtocol","boundary","CWLOutputProtocol::outputResourceFrom","property controller",
"CWLOutputProtocol","boundary","CWLOutputProtocol::remove","set",
"CWLOutputProtocol","boundary","CWLOutputProtocol::isDefunct","get",
"CWLOutputResource","boundary","CWLOutputResource::CWLOutputResource","constructor",
"CWLOutputResource","boundary","CWLOutputResource::fromResource","controller stateless",
"CWLOutputResource","boundary","CWLOutputResource::good","predicate non-void-command",
"CWLOutputResource","boundary","CWLOutputResource::client","get collaborator",
"CWLOutputResource","boundary","CWLOutputResource::getResource","get collaborator",
"CWLOutputResource","boundary","CWLOutputResource::updateState","command",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::CWLDataDeviceProtocol","constructor",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::bindManager","void-accessor command collaborator",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::destroyResource","void-accessor controller",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::destroyResource","void-accessor controller",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::destroyResource","void-accessor controller",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::destroyResource","void-accessor controller",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::dataDeviceForClient","property non-void-command collaborator",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::sendSelectionToDevice","command collaborator",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::onDestroyDataSource","wrapper stateless",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::setSelection","command collaborator",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::updateSelection","command collaborator",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::onKeyboardFocus","command",
"CWLDataDeviceProtocol","unclassified","CWLDataDeviceProtocol::initiateDrag","controller stateless",
"CHookSystem","boundary","CHookSystem::initHook","property non-void-command collaborator",
"CHookSystem","boundary","CHookSystem::removeHook","predicate controller",
"CHookSystem","boundary","CHookSystem::removeAllHooksFrom","wrapper",
"CHookSystem","boundary","CHookSystem::getAddressForTrampo","property non-void-command collaborator",
"CFunctionHook","boundary","CFunctionHook::CFunctionHook","constructor",
"CFunctionHook","boundary","CFunctionHook::~CFunctionHook","destructor",
"CFunctionHook","boundary","CFunctionHook::getInstructionLenAt","wrapper stateless",
"CFunctionHook","boundary","CFunctionHook::probeMinimumJumpSize","property non-void-command collaborator",
"CFunctionHook","boundary","CFunctionHook::fixInstructionProbeRIPCalls","property controller",
"CFunctionHook","boundary","CFunctionHook::hook","predicate non-void-command",
"CFunctionHook","boundary","CFunctionHook::unhook","predicate non-void-command",
"CWLRDataOffer","small-class","CWLRDataOffer::CWLRDataOffer","constructor",
"CWLRDataOffer","small-class","CWLRDataOffer::good","predicate non-void-command",
"CWLRDataOffer","small-class","CWLRDataOffer::sendData","command",
"CInputMethodRelay","unclassified","CInputMethodRelay::CInputMethodRelay","constructor",
"CInputMethodRelay","unclassified","CInputMethodRelay::onNewIME","command collaborator",
"CInputMethodRelay","unclassified","CInputMethodRelay::setIMEPopupFocus","controller stateless",
"CInputMethodRelay","unclassified","CInputMethodRelay::removePopup","void-accessor controller",
"CInputMethodRelay","unclassified","CInputMethodRelay::getFocusedTextInput","property controller",
"CInputMethodRelay","unclassified","CInputMethodRelay::onNewTextInput","command collaborator",
"CInputMethodRelay","unclassified","CInputMethodRelay::onNewTextInput","void-accessor command collaborator",
"CInputMethodRelay","unclassified","CInputMethodRelay::removeTextInput","void-accessor controller",
"CInputMethodRelay","unclassified","CInputMethodRelay::updateAllPopups","controller",
"CInputMethodRelay","unclassified","CInputMethodRelay::activateIME","void-accessor command collaborator",
"CInputMethodRelay","unclassified","CInputMethodRelay::deactivateIME","void-accessor command collaborator",
"CInputMethodRelay","unclassified","CInputMethodRelay::commitIMEState","command collaborator",
"CInputMethodRelay","unclassified","CInputMethodRelay::onKeyboardFocus","set collaborator",
"CInputMethodRelay","unclassified","CInputMethodRelay::popupFromCoords","property controller",
"CInputMethodRelay","unclassified","CInputMethodRelay::popupFromSurface","property controller",
"CXDGPositionerResource","small-class","CXDGPositionerResource::CXDGPositionerResource","constructor",
"CXDGPositionerResource","small-class","CXDGPositionerResource::fromResource","controller stateless",
"CXDGPositionerResource","small-class","CXDGPositionerResource::good","predicate non-void-command",
"CFocusGrabProtocol","unclassified","CFocusGrabProtocol::CFocusGrabProtocol","constructor",
"CFocusGrabProtocol","unclassified","CFocusGrabProtocol::bindManager","void-accessor command collaborator",
"CFocusGrabProtocol","unclassified","CFocusGrabProtocol::onManagerResourceDestroy","void-accessor controller",
"CFocusGrabProtocol","unclassified","CFocusGrabProtocol::destroyGrab","void-accessor controller",
"CFocusGrabProtocol","unclassified","CFocusGrabProtocol::onCreateGrab","command collaborator",
"CLinuxDMABufV1Protocol","controller","CLinuxDMABufV1Protocol::CLinuxDMABufV1Protocol","constructor",
"CLinuxDMABufV1Protocol","controller","CLinuxDMABufV1Protocol::~CLinuxDMABufV1Protocol","destructor",
"CLinuxDMABufV1Protocol","controller","CLinuxDMABufV1Protocol::bindManager","void-accessor command collaborator",
"CLinuxDMABufV1Protocol","controller","CLinuxDMABufV1Protocol::destroyResource","void-accessor controller",
"CLinuxDMABufV1Protocol","controller","CLinuxDMABufV1Protocol::destroyResource","void-accessor controller",
"CLinuxDMABufV1Protocol","controller","CLinuxDMABufV1Protocol::destroyResource","void-accessor controller",
"CLinuxDMABufV1Protocol","controller","CLinuxDMABufV1Protocol::destroyResource","void-accessor controller",
"CUUIDToken","data-provider data-class small-class","CUUIDToken::CUUIDToken","constructor",
"CUUIDToken","data-provider data-class small-class","CUUIDToken::getUUID","get",
"CLayoutManager","unclassified","CLayoutManager::CLayoutManager","constructor",
"CLayoutManager","unclassified","CLayoutManager::getCurrentLayout","get collaborator",
"CLayoutManager","unclassified","CLayoutManager::switchToLayout","command",
"CLayoutManager","unclassified","CLayoutManager::addLayout","predicate non-void-command collaborator",
"CLayoutManager","unclassified","CLayoutManager::getAllLayoutNames","property non-void-command",
"CVirtualPointer","boundary degenerate","CVirtualPointer::create","wrapper stateless",
"CVirtualPointer","boundary degenerate","CVirtualPointer::CVirtualPointer","copy-constructor",
"CVirtualPointer","boundary degenerate","CVirtualPointer::isVirtual","incidental",
"CVirtualPointer","boundary degenerate","CVirtualPointer::disconnectCallbacks","controller stateless",
"CVirtualPointer","boundary degenerate","CVirtualPointer::wlr","property non-void-command collaborator",
"CSeatManager","commander boundary","CSeatManager::CSeatManager","constructor",
"CSeatManager","commander boundary","CSeatManager::onNewSeatResource","command collaborator",
"CSeatManager","commander boundary","CSeatManager::containerForResource","property collaborator",
"CSeatManager","commander boundary","CSeatManager::nextSerial","property non-void-command collaborator",
"CSeatManager","commander boundary","CSeatManager::serialValid","predicate non-void-command collaborator",
"CSeatManager","commander boundary","CSeatManager::updateCapabilities","controller stateless",
"CSeatManager","commander boundary","CSeatManager::setMouse","set collaborator",
"CSeatManager","commander boundary","CSeatManager::setKeyboard","command collaborator",
"CSeatManager","commander boundary","CSeatManager::updateActiveKeyboardData","command",
"CSeatManager","commander boundary","CSeatManager::setKeyboardFocus","command collaborator",
"CSeatManager","commander boundary","CSeatManager::sendKeyboardKey","controller",
"CSeatManager","commander boundary","CSeatManager::sendKeyboardMods","controller",
"CSeatManager","commander boundary","CSeatManager::setPointerFocus","void-accessor command collaborator",
"CSeatManager","commander boundary","CSeatManager::onSetCursor","controller stateless",
"CSeatManager","commander boundary","CSeatManager::seatResourceForClient","controller stateless",
"CSeatManager","commander boundary","CSeatManager::setCurrentSelection","command collaborator",
"CSeatManager","commander boundary","CSeatManager::setCurrentPrimarySelection","command collaborator",
"CSeatManager","commander boundary","CSeatManager::setGrab","set collaborator",
"CSeatManager","commander boundary","CSeatManager::resendEnterEvents","command collaborator",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::displayDestroy","wrapper",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::CToplevelExportProtocolManager","constructor",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::removeClient","void-accessor command",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::bindManager","void-accessor command collaborator",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::removeFrame","void-accessor command",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::captureToplevel","void-accessor command collaborator",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::copyFrame","void-accessor command collaborator",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::onOutputCommit","void-accessor command collaborator",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::shareFrame","void-accessor command collaborator",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::sendDamage","wrapper stateless",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::copyFrameShm","controller stateless",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::copyFrameDmabuf","controller stateless",
"CToplevelExportProtocolManager","boundary","CToplevelExportProtocolManager::onWindowUnmap","controller",
"CSeatGrab","commander boundary","CSeatGrab::add","command collaborator",
"CSeatGrab","commander boundary","CSeatGrab::remove","controller",
"CSeatGrab","commander boundary","CSeatGrab::setCallback","set collaborator",
"CSeatGrab","commander boundary","CSeatGrab::clear","command",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::CWLDataSourceResource","constructor",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::~CWLDataSourceResource","destructor",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::fromResource","controller stateless",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::good","predicate non-void-command",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::accepted","void-accessor command",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::mimes","get",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::send","void-accessor command",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::cancelled","command",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::hasDnd","get",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::dndDone","get",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::error","void-accessor command",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::sendDndDropPerformed","command",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::sendDndFinished","command",
"CWLDataSourceResource","unclassified","CWLDataSourceResource::sendDndAction","command collaborator",
"CProtocolManager","pure-controller degenerate small-class","CProtocolManager::onMonitorModeChange","controller stateless",
"CProtocolManager","pure-controller degenerate small-class","CProtocolManager::CProtocolManager","constructor",
"CHyprCtl","boundary","CHyprCtl::CHyprCtl","constructor",
"CHyprCtl","boundary","CHyprCtl::~CHyprCtl","destructor",
"CHyprCtl","boundary","CHyprCtl::registerCommand","property non-void-command collaborator",
"CHyprCtl","boundary","CHyprCtl::unregisterCommand","void-accessor wrapper",
"CHyprCtl","boundary","CHyprCtl::getReply","property controller",
"CHyprCtl","boundary","CHyprCtl::makeDynamicCall","property non-void-command",
"CHyprCtl","boundary","CHyprCtl::startHyprCtlSocket","command",
"CCursorShapeProtocol","unclassified","CCursorShapeProtocol::CCursorShapeProtocol","constructor",
"CCursorShapeProtocol","unclassified","CCursorShapeProtocol::onManagerResourceDestroy","void-accessor controller",
"CCursorShapeProtocol","unclassified","CCursorShapeProtocol::onDeviceResourceDestroy","void-accessor controller",
"CCursorShapeProtocol","unclassified","CCursorShapeProtocol::bindManager","void-accessor command collaborator",
"CCursorShapeProtocol","unclassified","CCursorShapeProtocol::onGetPointer","void-accessor command collaborator",
"CCursorShapeProtocol","unclassified","CCursorShapeProtocol::onGetTabletToolV2","void-accessor command collaborator",
"CCursorShapeProtocol","unclassified","CCursorShapeProtocol::createCursorShapeDevice","command collaborator",
"CCursorShapeProtocol","unclassified","CCursorShapeProtocol::onSetShape","controller stateless",
"CSessionLockManager","unclassified","CSessionLockManager::CSessionLockManager","constructor",
"CSessionLockManager","unclassified","CSessionLockManager::onNewSessionLock","command collaborator",
"CSessionLockManager","unclassified","CSessionLockManager::getSessionLockSurfaceForMonitor","property controller",
"CSessionLockManager","unclassified","CSessionLockManager::getRedScreenAlphaForMonitor","property non-void-command collaborator",
"CSessionLockManager","unclassified","CSessionLockManager::isSurfaceSessionLock","predicate controller",
"CSessionLockManager","unclassified","CSessionLockManager::removeSessionLockSurface","void-accessor controller",
"CSessionLockManager","unclassified","CSessionLockManager::isSessionLockPresent","predicate non-void-command",
"IHID","boundary degenerate small-class","~IHID","destructor",
"IHID","boundary degenerate small-class","IHID::getType","collaborator incidental",
"CHookSystemManager","boundary","CHookSystemManager::CHookSystemManager","constructor",
"CHookSystemManager","boundary","CHookSystemManager::hookDynamic","property wrapper",
"CHookSystemManager","boundary","CHookSystemManager::unhook","controller",
"CHookSystemManager","boundary","CHookSystemManager::emit","void-accessor set collaborator",
"CHookSystemManager","boundary","CHookSystemManager::getVecForEvent","property non-void-command collaborator",
"CQueuedPresentationData","commander data-class","CQueuedPresentationData::CQueuedPresentationData","constructor",
"CQueuedPresentationData","commander data-class","CQueuedPresentationData::setPresentationType","set",
"CQueuedPresentationData","commander data-class","CQueuedPresentationData::attachMonitor","set collaborator",
"CQueuedPresentationData","commander data-class","CQueuedPresentationData::presented","set",
"CQueuedPresentationData","commander data-class","CQueuedPresentationData::discarded","set",
"CEventManager","unclassified","CEventManager::CEventManager","constructor",
"CEventManager","unclassified","CEventManager::~CEventManager","destructor",
"CEventManager","unclassified","CEventManager::onServerEvent","controller stateless",
"CEventManager","unclassified","CEventManager::onClientEvent","controller stateless",
"CEventManager","unclassified","CEventManager::onServerEvent","property non-void-command collaborator",
"CEventManager","unclassified","CEventManager::onClientEvent","property non-void-command collaborator",
"CEventManager","unclassified","CEventManager::findClientByFD","property non-void-command collaborator",
"CEventManager","unclassified","CEventManager::removeClientByFD","property non-void-command collaborator",
"CEventManager","unclassified","CEventManager::formatEvent","controller stateless",
"CEventManager","unclassified","CEventManager::postEvent","void-accessor command collaborator",
"CAnimationManager","boundary degenerate","CAnimationManager::deltaSmallToFlip","wrapper stateless",
"CAnimationManager","boundary degenerate","CAnimationManager::deltaSmallToFlip","wrapper stateless",
"CAnimationManager","boundary degenerate","CAnimationManager::deltazero","collaborator incidental",
"CAnimationManager","boundary degenerate","CAnimationManager::deltazero","incidental",
"CAnimationManager","boundary degenerate","CAnimationManager::deltazero","collaborator incidental",
"CAnimationManager","boundary degenerate","CAnimationManager::bezierExists","predicate",
"CAnimationManager","boundary degenerate","CAnimationManager::animationPopin","controller stateless",
"CAnimationManager","boundary degenerate","CAnimationManager::animationSlide","controller stateless",
"CAnimationManager","boundary degenerate","CAnimationManager::onWindowPostCreateClose","command collaborator",
"CAnimationManager","boundary degenerate","CAnimationManager::styleValidInConfigVar","controller stateless",
"CAnimationManager","boundary degenerate","CAnimationManager::getBezier","property non-void-command collaborator",
"CAnimationManager","boundary degenerate","CAnimationManager::getAllBeziers","get collaborator",
"CAnimationManager","boundary degenerate","CAnimationManager::shouldTickForNext","predicate non-void-command",
"CAnimationManager","boundary degenerate","CAnimationManager::scheduleTick","command collaborator",
"CXDataSource","entity boundary lazy-class degenerate","CXDataSource::CXDataSource","constructor",
"CXDataSource","entity boundary lazy-class degenerate","CXDataSource::mimes","get",
"CXDataSource","entity boundary lazy-class degenerate","CXDataSource::send","void-accessor command",
"CXDataSource","entity boundary lazy-class degenerate","CXDataSource::accepted","wrapper stateless",
"CXDataSource","entity boundary lazy-class degenerate","CXDataSource::cancelled","wrapper stateless",
"CXDataSource","entity boundary lazy-class degenerate","CXDataSource::error","wrapper stateless",
"CXDataSource","entity boundary lazy-class degenerate","CXDataSource::type","collaborator incidental",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::displayDestroy","wrapper",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::CTextInputV1ProtocolManager","constructor",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::bindManager","void-accessor wrapper",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::removeTI","void-accessor command collaborator",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::createTI","void-accessor command collaborator",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleActivate","controller stateless",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleDeactivate","controller stateless",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleShowInputPanel","collaborator incidental",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleHideInputPanel","collaborator incidental",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleReset","wrapper stateless",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleSetSurroundingText","wrapper stateless",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleSetContentType","wrapper stateless",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleSetCursorRectangle","wrapper stateless",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleSetPreferredLanguage","incidental",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleCommitState","controller stateless",
"CTextInputV1ProtocolManager","boundary degenerate","CTextInputV1ProtocolManager::handleInvokeAction","incidental",
"CHyprMasterLayout","boundary","CHyprMasterLayout::getNodeFromWindow","property controller",
"CHyprMasterLayout","boundary","CHyprMasterLayout::getNodesOnWorkspace","property",
"CHyprMasterLayout","boundary","CHyprMasterLayout::getMastersOnWorkspace","property",
"CHyprMasterLayout","boundary","CHyprMasterLayout::getMasterWorkspaceData","property non-void-command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::getLayoutName","incidental",
"CHyprMasterLayout","boundary","CHyprMasterLayout::getMasterNodeOnWorkspace","property collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::onWindowCreatedTiling","command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::resizeActiveWindow","void-accessor command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::moveWindowTo","void-accessor command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::switchWindows","command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::alterSplitRatio","command",
"CHyprMasterLayout","boundary","CHyprMasterLayout::getNextWindow","property non-void-command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::layoutMessage","property non-void-command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::runOrientationCycle","void-accessor command",
"CHyprMasterLayout","boundary","CHyprMasterLayout::buildOrientationCycleVectorFromEOperation","controller stateless",
"CHyprMasterLayout","boundary","CHyprMasterLayout::buildOrientationCycleVectorFromVars","controller stateless",
"CHyprMasterLayout","boundary","CHyprMasterLayout::getDynamicOrientation","property non-void-command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::replaceWindowDataWith","command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::predictSizeForNewWindowTiled","property non-void-command collaborator",
"CHyprMasterLayout","boundary","CHyprMasterLayout::onEnable","controller stateless",
"CHyprMasterLayout","boundary","CHyprMasterLayout::onDisable","command",
"std::formatter<SDwindleNodeData*,CharT>","pure-controller degenerate small-class","format","controller stateless",
"CRelativePointer","entity boundary","CRelativePointer::CRelativePointer","constructor",
"CRelativePointer","entity boundary","CRelativePointer::good","predicate non-void-command",
"CRelativePointer","entity boundary","CRelativePointer::client","get collaborator",
"CRelativePointer","entity boundary","CRelativePointer::sendRelativeMotion","void-accessor command collaborator",
"CInputPopup","commander boundary","CInputPopup::CInputPopup","constructor",
"CInputPopup","commander boundary","CInputPopup::queryOwner","controller stateless",
"CInputPopup","commander boundary","CInputPopup::onDestroy","controller",
"CInputPopup","commander boundary","CInputPopup::onMap","command collaborator",
"CInputPopup","commander boundary","CInputPopup::onUnmap","command",
"CInputPopup","commander boundary","CInputPopup::onCommit","command",
"CInputPopup","commander boundary","CInputPopup::damageEntire","command collaborator",
"CInputPopup","commander boundary","CInputPopup::damageSurface","command collaborator",
"CInputPopup","commander boundary","CInputPopup::updateBox","command collaborator",
"CInputPopup","commander boundary","CInputPopup::globalBox","property non-void-command collaborator",
"CInputPopup","commander boundary","CInputPopup::isVecInPopup","predicate non-void-command collaborator",
"CInputPopup","commander boundary","CInputPopup::getSurface","property non-void-command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::getNodesOnWorkspace","property",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::getFirstNodeOnWorkspace","property wrapper",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::getClosestNodeOnWorkspace","property controller",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::getNodeFromWindow","property controller",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::getMasterNodeOnWorkspace","property collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::applyNodeDataToWindow","void-accessor command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::onWindowCreatedTiling","command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::onWindowRemovedTiling","command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::recalculateMonitor","void-accessor command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::calculateWorkspace","void-accessor command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::isWindowTiled","predicate non-void-command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::onBeginDragWindow","command",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::resizeActiveWindow","void-accessor command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::fullscreenRequestForWindow","command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::recalculateWindow","command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::requestRenderHints","property non-void-command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::moveWindowTo","void-accessor command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::switchWindows","command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::alterSplitRatio","command",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::layoutMessage","property non-void-command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::toggleSplit","command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::swapSplit","command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::replaceWindowDataWith","command collaborator",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::getLayoutName","incidental",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::onEnable","controller stateless",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::onDisable","command",
"CHyprDwindleLayout","boundary","CHyprDwindleLayout::predictSizeForNewWindowTiled","property non-void-command collaborator",
"CKeyboard","boundary lazy-class degenerate","CKeyboard::create","wrapper stateless",
"CKeyboard","boundary lazy-class degenerate","CKeyboard::isVirtual","incidental",
"CKeyboard","boundary lazy-class degenerate","CKeyboard::wlr","get collaborator",
"CKeyboard","boundary lazy-class degenerate","CKeyboard::CKeyboard","constructor",
"CKeyboard","boundary lazy-class degenerate","CKeyboard::disconnectCallbacks","controller stateless",
"Vector2D","data-provider","operator+","property",
"Vector2D","data-provider","operator-","property",
"Vector2D","data-provider","operator-","property",
"Vector2D","data-provider","operator*","property",
"Vector2D","data-provider","operator/","property",
"Vector2D","data-provider","operator==","predicate",
"Vector2D","data-provider","operator!=","predicate",
"Vector2D","data-provider","operator*","property",
"Vector2D","data-provider","operator/","property",
"Vector2D","data-provider","operator>","predicate",
"Vector2D","data-provider","operator<","predicate",
"Vector2D","data-provider","operator+=","get non-void-command",
"Vector2D","data-provider","operator-=","get non-void-command",
"Vector2D","data-provider","operator*=","get non-void-command",
"Vector2D","data-provider","operator/=","get non-void-command",
"Vector2D","data-provider","operator*=","get non-void-command",
"Vector2D","data-provider","operator/=","get non-void-command",
"Vector2D","data-provider","Vector2D::Vector2D","constructor",
"Vector2D","data-provider","Vector2D::Vector2D","constructor",
"Vector2D","data-provider","Vector2D::Vector2D","constructor",
"Vector2D","data-provider","Vector2D::~Vector2D","destructor",
"Vector2D","data-provider","Vector2D::normalize","property non-void-command collaborator",
"Vector2D","data-provider","Vector2D::floor","property",
"Vector2D","data-provider","Vector2D::round","property",
"Vector2D","data-provider","Vector2D::clamp","property wrapper",
"Vector2D","data-provider","Vector2D::distance","property",
"Vector2D","data-provider","Vector2D::distanceSq","property",
"Vector2D","data-provider","Vector2D::size","property wrapper",
"Vector2D","data-provider","Vector2D::getComponentMax","property wrapper",
"COutputConfigurationHead","small-class","COutputConfigurationHead::COutputConfigurationHead","constructor",
"COutputConfigurationHead","small-class","COutputConfigurationHead::good","predicate non-void-command",
"CEventLoopTimer","unclassified","CEventLoopTimer::CEventLoopTimer","copy-constructor",
"CEventLoopTimer","unclassified","CEventLoopTimer::updateTimeout","set collaborator",
"CEventLoopTimer","unclassified","CEventLoopTimer::passed","predicate non-void-command",
"CEventLoopTimer","unclassified","CEventLoopTimer::cancel","set",
"CEventLoopTimer","unclassified","CEventLoopTimer::cancelled","get",
"CEventLoopTimer","unclassified","CEventLoopTimer::call","command collaborator",
"CEventLoopTimer","unclassified","CEventLoopTimer::leftUs","property non-void-command",
"CSubsurface","commander boundary","CSubsurface::CSubsurface","constructor",
"CSubsurface","commander boundary","CSubsurface::CSubsurface","constructor",
"CSubsurface","commander boundary","CSubsurface::CSubsurface","constructor",
"CSubsurface","commander boundary","CSubsurface::CSubsurface","constructor",
"CSubsurface","commander boundary","CSubsurface::~CSubsurface","destructor",
"CSubsurface","commander boundary","CSubsurface::initSignals","command",
"CSubsurface","commander boundary","CSubsurface::checkSiblingDamage","command collaborator",
"CSubsurface","commander boundary","CSubsurface::recheckDamageForSubsurfaces","controller",
"CSubsurface","commander boundary","CSubsurface::onCommit","command collaborator",
"CSubsurface","commander boundary","CSubsurface::onDestroy","set",
"CSubsurface","commander boundary","CSubsurface::onNewSubsurface","command collaborator",
"CSubsurface","commander boundary","CSubsurface::onMap","command collaborator",
"CSubsurface","commander boundary","CSubsurface::onUnmap","command collaborator",
"CSubsurface","commander boundary","CSubsurface::coordsRelativeToParent","property non-void-command collaborator",
"CSubsurface","commander boundary","CSubsurface::coordsGlobal","property non-void-command collaborator",
"CSubsurface","commander boundary","CSubsurface::initExistingSubsurfaces","command collaborator",
"CSubsurface","commander boundary","CSubsurface::size","property non-void-command collaborator",
"CSubsurface","commander boundary","CSubsurface::visible","predicate non-void-command",
"CTimer","unclassified","CTimer::reset","set",
"CTimer","unclassified","CTimer::getDuration","property wrapper",
"CTimer","unclassified","CTimer::getMillis","property non-void-command",
"CTimer","unclassified","CTimer::getSeconds","property non-void-command",
"CTimer","unclassified","CTimer::chrono","get collaborator",
"CXDGOutput","commander boundary small-class","CXDGOutput::CXDGOutput","constructor",
"CXDGOutput","commander boundary small-class","CXDGOutput::sendDetails","command collaborator",
"CIdleInhibitorResource","empty","CIdleInhibitorResource::CIdleInhibitorResource","constructor",
"CIdleInhibitorResource","empty","CIdleInhibitorResource::~CIdleInhibitorResource","destructor",
"CBezierCurve","entity data-provider boundary","CBezierCurve::setup","command collaborator",
"CBezierCurve","entity data-provider boundary","CBezierCurve::getYForT","property wrapper",
"CBezierCurve","entity data-provider boundary","CBezierCurve::getXForT","property wrapper",
"CBezierCurve","entity data-provider boundary","CBezierCurve::getYForPoint","property wrapper",
"CXDGActivationProtocol","entity boundary small-class","CXDGActivationProtocol::CXDGActivationProtocol","constructor",
"CXDGActivationProtocol","entity boundary small-class","CXDGActivationProtocol::bindManager","void-accessor command collaborator",
"CAnimatedVariable","entity boundary","CAnimatedVariable","constructor",
"CAnimatedVariable","entity boundary","create","void-accessor command collaborator",
"CAnimatedVariable","entity boundary","create","void-accessor command collaborator",
"CAnimatedVariable","entity boundary","create","void-accessor command collaborator",
"CAnimatedVariable","entity boundary","create","void-accessor command collaborator",
"CAnimatedVariable","entity boundary","value","get collaborator",
"CAnimatedVariable","entity boundary","goal","get collaborator",
"CAnimatedVariable","entity boundary","operator=","get non-void-command collaborator",
"CAnimatedVariable","entity boundary","setValue","command collaborator",
"CAnimatedVariable","entity boundary","setValueAndWarp","command collaborator",
"CAnimatedVariable","entity boundary","warp","command",
"CXDGDecorationProtocol","boundary","CXDGDecorationProtocol::CXDGDecorationProtocol","constructor",
"CXDGDecorationProtocol","boundary","CXDGDecorationProtocol::bindManager","void-accessor command collaborator",
"CXDGDecorationProtocol","boundary","CXDGDecorationProtocol::onManagerResourceDestroy","void-accessor controller",
"CXDGDecorationProtocol","boundary","CXDGDecorationProtocol::destroyDecoration","command collaborator",
"CXDGDecorationProtocol","boundary","CXDGDecorationProtocol::onGetDecoration","void-accessor command collaborator",
"CHyprNotificationOverlay","boundary","CHyprNotificationOverlay::CHyprNotificationOverlay","constructor",
"CHyprNotificationOverlay","boundary","CHyprNotificationOverlay::~CHyprNotificationOverlay","destructor",
"CHyprNotificationOverlay","boundary","CHyprNotificationOverlay::addNotification","command collaborator",
"CHyprNotificationOverlay","boundary","CHyprNotificationOverlay::dismissNotifications","command",
"CHyprNotificationOverlay","boundary","CHyprNotificationOverlay::drawNotifications","property controller",
"CHyprNotificationOverlay","boundary","CHyprNotificationOverlay::draw","void-accessor command collaborator",
"CHyprNotificationOverlay","boundary","CHyprNotificationOverlay::hasAny","predicate non-void-command",
"CVirtualKeyboard","boundary degenerate","CVirtualKeyboard::create","wrapper stateless",
"CVirtualKeyboard","boundary degenerate","CVirtualKeyboard::CVirtualKeyboard","copy-constructor",
"CVirtualKeyboard","boundary degenerate","CVirtualKeyboard::isVirtual","incidental",
"CVirtualKeyboard","boundary degenerate","CVirtualKeyboard::wlr","property non-void-command collaborator",
"CVirtualKeyboard","boundary degenerate","CVirtualKeyboard::disconnectCallbacks","controller stateless",
"CVirtualKeyboard","boundary degenerate","CVirtualKeyboard::getClient","property non-void-command collaborator",
"CTabletV2Resource","small-class","CTabletV2Resource::CTabletV2Resource","constructor",
"CTabletV2Resource","small-class","CTabletV2Resource::good","predicate non-void-command",
"CTabletV2Resource","small-class","CTabletV2Resource::sendData","command",
"CEventLoopManager","commander boundary","CEventLoopManager::CEventLoopManager","constructor",
"CEventLoopManager","commander boundary","CEventLoopManager::~CEventLoopManager","destructor",
"CEventLoopManager","commander boundary","CEventLoopManager::enterLoop","wrapper stateless",
"CEventLoopManager","commander boundary","CEventLoopManager::onTimerFire","command",
"CEventLoopManager","commander boundary","CEventLoopManager::addTimer","command collaborator",
"CEventLoopManager","commander boundary","CEventLoopManager::removeTimer","command collaborator",
"CEventLoopManager","commander boundary","CEventLoopManager::nudgeTimers","controller stateless",
"CXDGOutputProtocol","unclassified","CXDGOutputProtocol::onManagerResourceDestroy","void-accessor controller",
"CXDGOutputProtocol","unclassified","CXDGOutputProtocol::onOutputResourceDestroy","void-accessor controller",
"CXDGOutputProtocol","unclassified","CXDGOutputProtocol::bindManager","void-accessor command collaborator",
"CXDGOutputProtocol","unclassified","CXDGOutputProtocol::CXDGOutputProtocol","constructor",
"CXDGOutputProtocol","unclassified","CXDGOutputProtocol::onManagerGetXDGOutput","void-accessor command collaborator",
"CXDGOutputProtocol","unclassified","CXDGOutputProtocol::updateAllOutputs","controller",
"CPluginSystem","unclassified","CPluginSystem::CPluginSystem","constructor",
"CPluginSystem","unclassified","CPluginSystem::loadPlugin","property non-void-command collaborator",
"CPluginSystem","unclassified","CPluginSystem::unloadPlugin","void-accessor controller",
"CPluginSystem","unclassified","CPluginSystem::unloadAllPlugins","command",
"CPluginSystem","unclassified","CPluginSystem::updateConfigPlugins","property non-void-command",
"CPluginSystem","unclassified","CPluginSystem::getAllPlugins","property non-void-command collaborator",
"CPluginSystem","unclassified","CPluginSystem::pluginCount","property non-void-command",
"CPluginSystem","unclassified","CPluginSystem::sig_getPlugins","void-accessor command",
"std::formatter<Vector2D,CharT>","data-provider boundary small-class","format","property collaborator",
"CGradientValueData","boundary","CGradientValueData","constructor",
"CGradientValueData","boundary","CGradientValueData","constructor",
"CGradientValueData","boundary","~CGradientValueData","destructor",
"CGradientValueData","boundary","getDataType","collaborator incidental",
"CGradientValueData","boundary","reset","command collaborator",
"CGradientValueData","boundary","operator==","predicate",
"CGradientValueData","boundary","toString","property controller",
"CHyprMonitorDebugOverlay","commander","CHyprMonitorDebugOverlay::renderData","command",
"CHyprMonitorDebugOverlay","commander","CHyprMonitorDebugOverlay::renderDataNoOverlay","command",
"CHyprMonitorDebugOverlay","commander","CHyprMonitorDebugOverlay::frameData","command collaborator",
"CHyprMonitorDebugOverlay","commander","CHyprMonitorDebugOverlay::draw","property non-void-command",
"CWLSurfaceResource","boundary","CWLSurfaceResource::CWLSurfaceResource","constructor",
"CWLSurfaceResource","boundary","CWLSurfaceResource::destroy","controller",
"CWLSurfaceResource","boundary","CWLSurfaceResource::fromResource","controller stateless",
"CWLSurfaceResource","boundary","CWLSurfaceResource::good","predicate non-void-command",
"CWLSurfaceResource","boundary","CWLSurfaceResource::client","get collaborator",
"CWLSurfaceResource","boundary","CWLSurfaceResource::enter","command collaborator",
"CWLSurfaceResource","boundary","CWLSurfaceResource::leave","command collaborator",
"CWLSurfaceResource","boundary","CWLSurfaceResource::sendPreferredTransform","command collaborator",
"CWLSurfaceResource","boundary","CWLSurfaceResource::sendPreferredScale","command",
"CWLSurfaceResource","boundary","CWLSurfaceResource::frame","void-accessor command collaborator",
"CWLSurfaceResource","boundary","CWLSurfaceResource::resetRole","set",
"CWLSurfaceResource","boundary","CWLSurfaceResource::bfHelper","void-accessor command collaborator",
"CWLSurfaceResource","boundary","CWLSurfaceResource::breadthfirst","void-accessor command collaborator",
"CWLSurfaceResource","boundary","CWLSurfaceResource::at","controller stateless",
"CWLSurfaceResource","boundary","CWLSurfaceResource::id","property non-void-command",
"CWLSurfaceResource","boundary","CWLSurfaceResource::map","get command collaborator",
"CWLSurfaceResource","boundary","CWLSurfaceResource::extends","controller stateless",
"CWLSurfaceResource","boundary","CWLSurfaceResource::sourceSize","controller stateless",
"CWLSurfaceResource","boundary","CWLSurfaceResource::accumulateCurrentBufferDamage","property non-void-command collaborator",
"CHyprDebugOverlay","unclassified","CHyprDebugOverlay::CHyprDebugOverlay","constructor",
"CHyprDebugOverlay","unclassified","CHyprDebugOverlay::renderData","void-accessor command",
"CHyprDebugOverlay","unclassified","CHyprDebugOverlay::renderDataNoOverlay","void-accessor command",
"CHyprDebugOverlay","unclassified","CHyprDebugOverlay::frameData","void-accessor command collaborator",
"CHyprDebugOverlay","unclassified","CHyprDebugOverlay::draw","command collaborator",
"RollingLogFollow","entity minimal-entity boundary","isEmpty","get wrapper",
"RollingLogFollow","entity minimal-entity boundary","DebugInfo","property non-void-command collaborator",
"RollingLogFollow","entity minimal-entity boundary","GetLog","property set",
"RollingLogFollow","entity minimal-entity boundary","AddLog","command collaborator",
"RollingLogFollow","entity minimal-entity boundary","IsRunning","get collaborator",
"RollingLogFollow","entity minimal-entity boundary","StopFor","command collaborator",
"RollingLogFollow","entity minimal-entity boundary","StartFor","command collaborator",
"CTabletV2Protocol","controller","CTabletV2Protocol::CTabletV2Protocol","constructor",
"CTabletV2Protocol","controller","CTabletV2Protocol::bindManager","void-accessor command collaborator",
"CTabletV2Protocol","controller","CTabletV2Protocol::onManagerResourceDestroy","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::destroyResource","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::destroyResource","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::destroyResource","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::destroyResource","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::destroyResource","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::destroyResource","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::destroyResource","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::onGetSeat","command collaborator",
"CTabletV2Protocol","controller","CTabletV2Protocol::registerDevice","command collaborator",
"CTabletV2Protocol","controller","CTabletV2Protocol::registerDevice","command collaborator",
"CTabletV2Protocol","controller","CTabletV2Protocol::registerDevice","command collaborator",
"CTabletV2Protocol","controller","CTabletV2Protocol::unregisterDevice","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::unregisterDevice","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::unregisterDevice","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::recheckRegisteredDevices","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::pressure","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::distance","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::rotation","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::slider","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::wheel","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::tilt","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::up","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::down","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::proximityIn","command collaborator",
"CTabletV2Protocol","controller","CTabletV2Protocol::proximityOut","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::buttonTool","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::motion","void-accessor controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::mode","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::buttonPad","controller",
"CTabletV2Protocol","controller","CTabletV2Protocol::strip","wrapper stateless",
"CTabletV2Protocol","controller","CTabletV2Protocol::ring","wrapper stateless",
"CWLDataDeviceManagerResource","empty","CWLDataDeviceManagerResource::CWLDataDeviceManagerResource","constructor",
"CConfigValue","data-provider boundary small-class","CConfigValue","constructor",
"CConfigValue","data-provider boundary small-class","ptr","property collaborator",
"CConfigValue","data-provider boundary small-class","operator*","property collaborator",
"CServerDecorationKDEProtocol","unclassified","CServerDecorationKDEProtocol::CServerDecorationKDEProtocol","constructor",
"CServerDecorationKDEProtocol","unclassified","CServerDecorationKDEProtocol::bindManager","void-accessor command collaborator",
"CServerDecorationKDEProtocol","unclassified","CServerDecorationKDEProtocol::onManagerResourceDestroy","void-accessor controller",
"CServerDecorationKDEProtocol","unclassified","CServerDecorationKDEProtocol::destroyResource","void-accessor controller",
"CServerDecorationKDEProtocol","unclassified","CServerDecorationKDEProtocol::createDecoration","void-accessor command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::CHyprGroupBarDecoration","constructor",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::~CHyprGroupBarDecoration","destructor",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::getPositioningInfo","property non-void-command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::onPositioningReply","set collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::getDecorationType","collaborator incidental",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::updateWindow","command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::damageEntire","command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::draw","void-accessor command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::textureFromTitle","controller stateless",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::invalidateTextures","controller stateless",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::onBeginWindowDragOnDeco","predicate non-void-command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::onEndWindowDragOnDeco","predicate non-void-command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::onMouseButtonOnDeco","predicate non-void-command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::onScrollOnDeco","predicate non-void-command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::onInputOnDeco","predicate non-void-command collaborator",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::getDecorationLayer","collaborator incidental",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::getDecorationFlags","incidental",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::getDisplayName","incidental",
"CHyprGroupBarDecoration","boundary","CHyprGroupBarDecoration::assignedBoxGlobal","property non-void-command collaborator",
"CCssGapData","entity boundary","CCssGapData","constructor",
"CCssGapData","entity boundary","CCssGapData","constructor",
"CCssGapData","entity boundary","CCssGapData","constructor",
"CCssGapData","entity boundary","CCssGapData","constructor",
"CCssGapData","entity boundary","CCssGapData","constructor",
"CCssGapData","entity boundary","parseGapData","command collaborator",
"CCssGapData","entity boundary","reset","command",
"CCssGapData","entity boundary","getDataType","collaborator incidental",
"CCssGapData","entity boundary","toString","property wrapper",
"CCursorManager","boundary","CCursorManager::CCursorManager","constructor",
"CCursorManager","boundary","CCursorManager::~CCursorManager","destructor",
"CCursorManager","boundary","CCursorManager::dropBufferRef","void-accessor controller",
"CCursorManager","boundary","CCursorManager::getCursorBuffer","property non-void-command collaborator",
"CCursorManager","boundary","CCursorManager::setCursorSurface","void-accessor set collaborator",
"CCursorManager","boundary","CCursorManager::setXCursor","void-accessor command collaborator",
"CCursorManager","boundary","CCursorManager::setCursorFromName","void-accessor command collaborator",
"CCursorManager","boundary","CCursorManager::tickAnimatedCursor","command",
"CCursorManager","boundary","CCursorManager::dataFor","property non-void-command collaborator",
"CCursorManager","boundary","CCursorManager::setXWaylandCursor","command collaborator",
"SWindowDecorationExtents","unclassified","operator*","property wrapper",
"SWindowDecorationExtents","unclassified","round","property non-void-command",
"SWindowDecorationExtents","unclassified","operator==","predicate",
"SWindowDecorationExtents","unclassified","addExtents","void-accessor command",
"CTokenManager","entity boundary","CTokenManager::getRandomUUID","property non-void-command collaborator",
"CTokenManager","entity boundary","CTokenManager::registerNewToken","property set collaborator",
"CTokenManager","entity boundary","CTokenManager::getToken","property non-void-command collaborator",
"CTokenManager","entity boundary","CTokenManager::removeToken","command collaborator",
"std::formatter<SMasterNodeData*,CharT>","pure-controller degenerate small-class","format","controller stateless",
"CWindow","boundary","operator==","predicate",
"CWindow","boundary","CWindow::create","controller stateless",
"CWindow","boundary","CWindow::create","controller stateless",
"CWindow","boundary","CWindow::CWindow","constructor",
"CWindow","boundary","CWindow::CWindow","constructor",
"CWindow","boundary","CWindow::~CWindow","destructor",
"CWindow","boundary","CWindow::getFullWindowExtents","get property non-void-command collaborator",
"CWindow","boundary","CWindow::getFullWindowBoundingBox","property non-void-command collaborator",
"CWindow","boundary","CWindow::getWindowIdealBoundingBoxIgnoreReserved","property controller",
"CWindow","boundary","CWindow::getWindowBoxUnified","property non-void-command collaborator",
"CWindow","boundary","CWindow::getWindowMainSurfaceBox","property non-void-command collaborator",
"CWindow","boundary","CWindow::getFullWindowReservedArea","property non-void-command collaborator",
"CWindow","boundary","CWindow::updateWindowDecos","command collaborator",
"CWindow","boundary","CWindow::addWindowDeco","command collaborator",
"CWindow","boundary","CWindow::removeWindowDeco","void-accessor command collaborator",
"CWindow","boundary","CWindow::uncacheWindowDecos","controller",
"CWindow","boundary","CWindow::checkInputOnDecos","predicate non-void-command collaborator",
"CWindow","boundary","CWindow::getPID","property non-void-command collaborator",
"CWindow","boundary","CWindow::getDecorationByType","property controller",
"CWindow","boundary","CWindow::updateToplevel","command",
"CWindow","boundary","CWindow::updateSurfaceScaleTransformDetails","command collaborator",
"CWindow","boundary","CWindow::moveToWorkspace","command collaborator",
"CWindow","boundary","CWindow::X11TransientFor","property collaborator",
"CWindow","boundary","CWindow::removeDecorationByType","command collaborator",
"CWindow","boundary","CWindow::onUnmap","command collaborator",
"CWindow","boundary","CWindow::onMap","command",
"CWindow","boundary","CWindow::onBorderAngleAnimEnd","void-accessor command",
"CWindow","boundary","CWindow::setHidden","set",
"CWindow","boundary","CWindow::isHidden","get",
"CWindow","boundary","CWindow::applyDynamicRule","void-accessor command collaborator",
"CWindow","boundary","CWindow::updateDynamicRules","command",
"CWindow","boundary","CWindow::isInCurvedCorner","predicate non-void-command",
"CWindow","boundary","CWindow::hasPopupAt","predicate non-void-command collaborator",
"CWindow","boundary","CWindow::applyGroupRules","command",
"CWindow","boundary","CWindow::createGroup","command",
"CWindow","boundary","CWindow::destroyGroup","command",
"CWindow","boundary","CWindow::getGroupHead","property non-void-command collaborator",
"CWindow","boundary","CWindow::getGroupTail","property non-void-command collaborator",
"CWindow","boundary","CWindow::getGroupCurrent","property non-void-command collaborator",
"CWindow","boundary","CWindow::getGroupSize","property non-void-command collaborator",
"CWindow","boundary","CWindow::canBeGroupedInto","predicate non-void-command collaborator",
"CWindow","boundary","CWindow::getGroupWindowByIndex","property non-void-command collaborator",
"CWindow","boundary","CWindow::setGroupCurrent","command collaborator",
"CWindow","boundary","CWindow::insertWindowToGroup","command collaborator",
"CWindow","boundary","CWindow::getGroupPrevious","property non-void-command collaborator",
"CWindow","boundary","CWindow::switchWithWindowInGroup","command collaborator",
"CWindow","boundary","CWindow::updateGroupOutputs","command collaborator",
"CWindow","boundary","CWindow::middle","property non-void-command collaborator",
"CWindow","boundary","CWindow::opaque","predicate non-void-command collaborator",
"CWindow","boundary","CWindow::rounding","property non-void-command",
"CWindow","boundary","CWindow::updateSpecialRenderData","command collaborator",
"CWindow","boundary","CWindow::updateSpecialRenderData","command collaborator",
"CWindow","boundary","CWindow::getRealBorderSize","property non-void-command collaborator",
"CWindow","boundary","CWindow::canBeTorn","predicate non-void-command",
"CWindow","boundary","CWindow::shouldSendFullscreenState","predicate collaborator",
"CWindow","boundary","CWindow::setSuspended","set",
"CWindow","boundary","CWindow::visibleOnMonitor","predicate non-void-command collaborator",
"CWindow","boundary","CWindow::setAnimationsToMove","command",
"CWindow","boundary","CWindow::onWorkspaceAnimUpdate","set collaborator",
"CWindow","boundary","CWindow::popupsCount","property non-void-command",
"CWindow","boundary","CWindow::surfacesCount","property non-void-command",
"CWindow","boundary","CWindow::workspaceID","property",
"CWindow","boundary","CWindow::onSpecialWorkspace","predicate controller",
"CWindow","boundary","CWindow::getEnv","property non-void-command collaborator",
"CWindow","boundary","CWindow::activate","command collaborator",
"CWindow","boundary","CWindow::onUpdateState","command",
"CWindow","boundary","CWindow::onUpdateMeta","command collaborator",
"CWindow","boundary","CWindow::fetchTitle","property",
"CWindow","boundary","CWindow::fetchClass","property",
"CWindow","boundary","CWindow::onAck","command collaborator",
"CWindow","boundary","CWindow::onResourceChangeX11","command",
"CWindow","boundary","CWindow::onX11Configure","command collaborator",
"CWindow","boundary","CWindow::warpCursor","set collaborator",
"CWindow","boundary","CWindow::getSwallower","property non-void-command collaborator",
"CTagKeeper","unclassified","getTags","get collaborator",
"CTagKeeper","unclassified","CTagKeeper::isTagged","predicate non-void-command",
"CTagKeeper","unclassified","CTagKeeper::applyTag","predicate non-void-command",
"CTagKeeper","unclassified","CTagKeeper::removeDynamicTags","predicate controller",
"CFocusGrabSurfaceState","empty","CFocusGrabSurfaceState::CFocusGrabSurfaceState","constructor",
"CFocusGrabSurfaceState","empty","CFocusGrabSurfaceState::~CFocusGrabSurfaceState","destructor",
"CRelativePointerProtocol","unclassified","CRelativePointerProtocol::CRelativePointerProtocol","constructor",
"CRelativePointerProtocol","unclassified","CRelativePointerProtocol::bindManager","void-accessor command collaborator",
"CRelativePointerProtocol","unclassified","CRelativePointerProtocol::onManagerResourceDestroy","void-accessor controller",
"CRelativePointerProtocol","unclassified","CRelativePointerProtocol::destroyRelativePointer","void-accessor controller",
"CRelativePointerProtocol","unclassified","CRelativePointerProtocol::onGetRelativePointer","command collaborator",
"CRelativePointerProtocol","unclassified","CRelativePointerProtocol::sendRelativeMotion","void-accessor controller",
"CCompiledDMABUFFeedback","empty","CCompiledDMABUFFeedback::CCompiledDMABUFFeedback","constructor",
"CCompiledDMABUFFeedback","empty","CCompiledDMABUFFeedback::~CCompiledDMABUFFeedback","destructor",
"SSessionLockSurface","empty","SSessionLockSurface::SSessionLockSurface","constructor",
"CPluginManager","boundary","CPluginManager::getHyprlandVersion","property controller",
"CPluginManager","boundary","CPluginManager::createSafeDirectory","controller stateless",
"CPluginManager","boundary","CPluginManager::addNewPluginRepo","predicate non-void-command",
"CPluginManager","boundary","CPluginManager::removePluginRepo","predicate non-void-command",
"CPluginManager","boundary","CPluginManager::headersValid","property non-void-command collaborator",
"CPluginManager","boundary","CPluginManager::updateHeaders","predicate non-void-command collaborator",
"CPluginManager","boundary","CPluginManager::updatePlugins","predicate non-void-command collaborator",
"CPluginManager","boundary","CPluginManager::enablePlugin","wrapper stateless",
"CPluginManager","boundary","CPluginManager::disablePlugin","wrapper stateless",
"CPluginManager","boundary","CPluginManager::ensurePluginsLoadState","property non-void-command collaborator",
"CPluginManager","boundary","CPluginManager::notify","wrapper stateless",
"CPluginManager","boundary","CPluginManager::headerError","wrapper stateless",
"CPluginManager","boundary","CPluginManager::hasDeps","wrapper stateless",
"CWatchdog","commander small-class","CWatchdog::~CWatchdog","destructor",
"CWatchdog","commander small-class","CWatchdog::CWatchdog","constructor",
"CWatchdog","commander small-class","CWatchdog::startWatching","command collaborator",
"CWatchdog","commander small-class","CWatchdog::endWatching","command",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::displayDestroy","wrapper",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::CScreencopyProtocolManager","constructor",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::removeClient","void-accessor command",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::bindManager","void-accessor command collaborator",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::removeFrame","void-accessor command",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::captureOutput","void-accessor command collaborator",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::copyFrame","void-accessor command collaborator",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::onOutputCommit","void-accessor set collaborator",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::shareAllFrames","command collaborator",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::shareFrame","void-accessor command collaborator",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::sendFrameDamage","wrapper stateless",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::copyFrameShm","predicate controller",
"CScreencopyProtocolManager","boundary","CScreencopyProtocolManager::copyFrameDmabuf","predicate controller",
"CHyprError","commander boundary","CHyprError::CHyprError","constructor",
"CHyprError","commander boundary","CHyprError::~CHyprError","destructor",
"CHyprError","commander boundary","CHyprError::queueCreate","command collaborator",
"CHyprError","commander boundary","CHyprError::createQueued","command collaborator",
"CHyprError","commander boundary","CHyprError::draw","command collaborator",
"CHyprError","commander boundary","CHyprError::destroy","command",
"CForeignToplevelWlrProtocol","empty","CForeignToplevelWlrProtocol::CForeignToplevelWlrProtocol","constructor",
"ITouch","degenerate small-class","ITouch::getCapabilities","incidental",
"ITouch","degenerate small-class","ITouch::getType","collaborator incidental",
"CXDGPopupResource","boundary","CXDGPopupResource::CXDGPopupResource","constructor",
"CXDGPopupResource","boundary","CXDGPopupResource::~CXDGPopupResource","destructor",
"CXDGPopupResource","boundary","CXDGPopupResource::applyPositioning","void-accessor command collaborator",
"CXDGPopupResource","boundary","CXDGPopupResource::accumulateParentOffset","property non-void-command collaborator",
"CXDGPopupResource","boundary","CXDGPopupResource::fromResource","controller stateless",
"CXDGPopupResource","boundary","CXDGPopupResource::good","predicate non-void-command",
"CXDGPopupResource","boundary","CXDGPopupResource::configure","void-accessor command collaborator",
"CXDGPopupResource","boundary","CXDGPopupResource::done","command",
"CXDGPopupResource","boundary","CXDGPopupResource::repositioned","set",
"CKeybindManager","degenerate","CKeybindManager::CKeybindManager","constructor",
"CKeybindManager","degenerate","CKeybindManager::~CKeybindManager","destructor",
"CKeybindManager","degenerate","CKeybindManager::addKeybind","set collaborator",
"CKeybindManager","degenerate","CKeybindManager::removeKeybind","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::stringToModMask","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::keycodeToModifier","collaborator incidental",
"CKeybindManager","degenerate","CKeybindManager::updateXKBTranslationState","set collaborator",
"CKeybindManager","degenerate","CKeybindManager::ensureMouseBindState","predicate set collaborator",
"CKeybindManager","degenerate","CKeybindManager::tryMoveFocusToMonitor","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::switchToWindow","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::onKeyEvent","predicate non-void-command collaborator",
"CKeybindManager","degenerate","CKeybindManager::onAxisEvent","predicate non-void-command collaborator",
"CKeybindManager","degenerate","CKeybindManager::onMouseEvent","predicate non-void-command collaborator",
"CKeybindManager","degenerate","CKeybindManager::resizeWithBorder","wrapper stateless",
"CKeybindManager","degenerate","CKeybindManager::onSwitchEvent","void-accessor command",
"CKeybindManager","degenerate","CKeybindManager::onSwitchOnEvent","void-accessor command",
"CKeybindManager","degenerate","CKeybindManager::onSwitchOffEvent","void-accessor command",
"CKeybindManager","degenerate","CKeybindManager::mkKeysymSetMatches","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::mkBindMatches","property non-void-command collaborator",
"CKeybindManager","degenerate","CKeybindManager::handleKeybinds","predicate non-void-command collaborator",
"CKeybindManager","degenerate","CKeybindManager::shadowKeybinds","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::handleVT","wrapper stateless",
"CKeybindManager","degenerate","CKeybindManager::handleInternalKeybinds","predicate non-void-command collaborator",
"CKeybindManager","degenerate","CKeybindManager::spawn","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::spawnRaw","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::killActive","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::kill","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::clearKeybinds","command",
"CKeybindManager","degenerate","CKeybindManager::toggleActiveFloating","wrapper stateless",
"CKeybindManager","degenerate","CKeybindManager::setActiveFloating","wrapper stateless",
"CKeybindManager","degenerate","CKeybindManager::setActiveTiled","wrapper stateless",
"CKeybindManager","degenerate","CKeybindManager::centerWindow","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::toggleActivePseudo","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::changeworkspace","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::fullscreenActive","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveActiveToWorkspace","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveActiveToWorkspaceSilent","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveFocusTo","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::focusUrgentOrLast","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::focusCurrentOrLast","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::swapActive","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveActiveTo","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::toggleGroup","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::changeGroupActive","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::toggleSplit","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::swapSplit","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::alterSplitRatio","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::focusMonitor","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::moveCursorToCorner","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveCursor","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::workspaceOpt","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::renameWorkspace","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::exitHyprland","incidental",
"CKeybindManager","degenerate","CKeybindManager::moveCurrentWorkspaceToMonitor","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveWorkspaceToMonitor","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::focusWorkspaceOnCurrentMonitor","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::toggleSpecialWorkspace","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::forceRendererReload","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::resizeActive","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveActive","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveWindow","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::resizeWindow","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::circleNext","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::focusWindow","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::tagWindow","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::setSubmap","set",
"CKeybindManager","degenerate","CKeybindManager::pass","controller",
"CKeybindManager","degenerate","CKeybindManager::alterZOrder","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::fakeFullscreenActive","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::lockGroups","set",
"CKeybindManager","degenerate","CKeybindManager::lockActiveGroup","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveWindowIntoGroup","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::moveWindowOutOfGroup","set collaborator",
"CKeybindManager","degenerate","CKeybindManager::moveIntoGroup","command collaborator",
"CKeybindManager","degenerate","CKeybindManager::moveOutOfGroup","controller",
"CKeybindManager","degenerate","CKeybindManager::moveWindowOrGroup","command",
"CKeybindManager","degenerate","CKeybindManager::setIgnoreGroupLock","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::denyWindowFromGroup","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::global","controller",
"CKeybindManager","degenerate","CKeybindManager::moveGroupWindow","controller stateless",
"CKeybindManager","degenerate","CKeybindManager::event","controller stateless",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::CHyprDropShadowDecoration","constructor",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::~CHyprDropShadowDecoration","destructor",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::getDecorationType","collaborator incidental",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::getPositioningInfo","property set collaborator",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::onPositioningReply","command collaborator",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::getDecorationFlags","incidental",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::getDisplayName","incidental",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::damageEntire","command collaborator",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::updateWindow","command collaborator",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::draw","void-accessor command collaborator",
"CHyprDropShadowDecoration","entity commander boundary","CHyprDropShadowDecoration::getDecorationLayer","collaborator incidental",
"CHyprWLListener","unclassified","CHyprWLListener::CHyprWLListener","constructor",
"CHyprWLListener","unclassified","CHyprWLListener::CHyprWLListener","constructor",
"CHyprWLListener","unclassified","CHyprWLListener::~CHyprWLListener","destructor",
"CHyprWLListener","unclassified","CHyprWLListener::removeCallback","command",
"CHyprWLListener","unclassified","CHyprWLListener::isConnected","predicate wrapper",
"CHyprWLListener","unclassified","CHyprWLListener::initCallback","void-accessor command",
"CHyprWLListener","unclassified","CHyprWLListener::emit","void-accessor wrapper",
"CWLRDataControlManagerResource","empty","CWLRDataControlManagerResource::CWLRDataControlManagerResource","constructor",
"CLayerShellResource","unclassified","CLayerShellResource::CLayerShellResource","constructor",
"CLayerShellResource","unclassified","CLayerShellResource::role","collaborator incidental",
"CLayerShellResource","unclassified","CLayerShellResource::good","predicate non-void-command",
"CLayerShellResource","unclassified","CLayerShellResource::sendClosed","set",
"CLayerShellResource","unclassified","CLayerShellResource::configure","void-accessor command collaborator",
"COutputManager","entity boundary","COutputManager::COutputManager","constructor",
"COutputManager","entity boundary","COutputManager::makeAndSendNewHead","void-accessor command collaborator",
"COutputManager","entity boundary","COutputManager::ensureMonitorSent","void-accessor command collaborator",
"COutputManager","entity boundary","COutputManager::sendDone","command",
"CPointerManager","commander boundary","CPointerManager::CPointerManager","constructor",
"CPointerManager","commander boundary","CPointerManager::lockSoftwareAll","command",
"CPointerManager","commander boundary","CPointerManager::unlockSoftwareAll","command",
"CPointerManager","commander boundary","CPointerManager::lockSoftwareForMonitor","command collaborator",
"CPointerManager","commander boundary","CPointerManager::unlockSoftwareForMonitor","command collaborator",
"CPointerManager","commander boundary","CPointerManager::position","get collaborator",
"CPointerManager","commander boundary","CPointerManager::hasCursor","incidental",
"CPointerManager","commander boundary","CPointerManager::stateFor","property non-void-command collaborator",
"CPointerManager","commander boundary","CPointerManager::setCursorBuffer","void-accessor command",
"CPointerManager","commander boundary","CPointerManager::setCursorSurface","void-accessor command collaborator",
"CPointerManager","commander boundary","CPointerManager::recheckEnteredOutputs","command",
"CPointerManager","commander boundary","CPointerManager::resetCursorImage","command",
"CPointerManager","commander boundary","CPointerManager::updateCursorBackend","command collaborator",
"CPointerManager","commander boundary","CPointerManager::onCursorMoved","command collaborator",
"CPointerManager","commander boundary","CPointerManager::attemptHardwareCursor","predicate non-void-command collaborator",
"CPointerManager","commander boundary","CPointerManager::setHWCursorBuffer","predicate non-void-command collaborator",
"CPointerManager","commander boundary","CPointerManager::renderHWCursorBuffer","controller stateless",
"CPointerManager","commander boundary","CPointerManager::renderSoftwareCursorsFor","void-accessor command collaborator",
"CPointerManager","commander boundary","CPointerManager::transformedHotspot","wrapper stateless",
"CPointerManager","commander boundary","CPointerManager::getCursorBoxGlobal","property wrapper",
"CPointerManager","commander boundary","CPointerManager::closestValid","controller stateless",
"CPointerManager","commander boundary","CPointerManager::damageIfSoftware","command collaborator",
"CPointerManager","commander boundary","CPointerManager::warpTo","void-accessor command collaborator",
"CPointerManager","commander boundary","CPointerManager::move","void-accessor command collaborator",
"CPointerManager","commander boundary","CPointerManager::warpAbsolute","command collaborator",
"CPointerManager","commander boundary","CPointerManager::onMonitorLayoutChange","command",
"CPointerManager","commander boundary","CPointerManager::getCurrentCursorTexture","controller stateless",
"CPointerManager","commander boundary","CPointerManager::attachPointer","command collaborator",
"CPointerManager","commander boundary","CPointerManager::attachTouch","command collaborator",
"CPointerManager","commander boundary","CPointerManager::attachTablet","command collaborator",
"CPointerManager","commander boundary","CPointerManager::detachPointer","controller",
"CPointerManager","commander boundary","CPointerManager::detachTouch","controller",
"CPointerManager","commander boundary","CPointerManager::detachTablet","controller",
"CPointerManager","commander boundary","CPointerManager::damageCursor","command collaborator",
"CPointerManager","commander boundary","CPointerManager::cursorSizeLogical","collaborator incidental",
"CMonitorState","unclassified","CMonitorState::CMonitorState","constructor",
"CMonitorState","unclassified","CMonitorState::~CMonitorState","destructor",
"CMonitorState","unclassified","CMonitorState::wlr","property collaborator",
"CMonitorState","unclassified","CMonitorState::clear","set",
"CMonitorState","unclassified","CMonitorState::commit","predicate non-void-command",
"CMonitorState","unclassified","CMonitorState::test","predicate wrapper",
"CWorkspace","boundary","CWorkspace::create","controller stateless",
"CWorkspace","boundary","CWorkspace::CWorkspace","constructor",
"CWorkspace","boundary","CWorkspace::init","command collaborator",
"CWorkspace","boundary","CWorkspace::~CWorkspace","destructor",
"CWorkspace","boundary","CWorkspace::startAnim","command collaborator",
"CWorkspace","boundary","CWorkspace::setActive","incidental",
"CWorkspace","boundary","CWorkspace::moveToMonitor","incidental",
"CWorkspace","boundary","CWorkspace::getLastFocusedWindow","property non-void-command collaborator",
"CWorkspace","boundary","CWorkspace::rememberPrevWorkspace","wrapper",
"CWorkspace","boundary","CWorkspace::getConfigName","get property wrapper",
"CWorkspace","boundary","CWorkspace::matchesStaticSelector","predicate non-void-command",
"CWorkspace","boundary","CWorkspace::markInert","command",
"CWorkspace","boundary","CWorkspace::inert","get",
"CConfigManager","boundary","CConfigManager::CConfigManager","constructor",
"CConfigManager","boundary","CConfigManager::getConfigDir","wrapper stateless",
"CConfigManager","boundary","CConfigManager::getMainConfigPath","property non-void-command",
"CConfigManager","boundary","CConfigManager::getConfigString","property controller",
"CConfigManager","boundary","CConfigManager::getErrors","get",
"CConfigManager","boundary","CConfigManager::reload","command collaborator",
"CConfigManager","boundary","CConfigManager::setDefaultAnimationVars","set",
"CConfigManager","boundary","CConfigManager::verifyConfigExists","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::resetHLConfig","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::postConfigReload","command collaborator",
"CConfigManager","boundary","CConfigManager::init","command",
"CConfigManager","boundary","CConfigManager::parseKeyword","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::tick","command",
"CConfigManager","boundary","CConfigManager::getConfigValueSafeDevice","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::getDeviceInt","property non-void-command",
"CConfigManager","boundary","CConfigManager::getDeviceFloat","property non-void-command",
"CConfigManager","boundary","CConfigManager::getDeviceVec","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::getDeviceString","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::getMonitorRuleFor","property controller",
"CConfigManager","boundary","CConfigManager::getWorkspaceRuleFor","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::mergeWorkspaceRules","controller stateless",
"CConfigManager","boundary","CConfigManager::getMatchingRules","property controller",
"CConfigManager","boundary","CConfigManager::getMatchingRules","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::dispatchExecOnce","command",
"CConfigManager","boundary","CConfigManager::appendMonitorRule","void-accessor command collaborator",
"CConfigManager","boundary","CConfigManager::replaceMonitorRule","predicate collaborator",
"CConfigManager","boundary","CConfigManager::performMonitorReload","command collaborator",
"CConfigManager","boundary","CConfigManager::getConfigValuePtr","property command collaborator",
"CConfigManager","boundary","CConfigManager::getHyprlangConfigValuePtr","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::deviceConfigExists","predicate non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::shouldBlurLS","predicate",
"CConfigManager","boundary","CConfigManager::ensureMonitorStatus","command collaborator",
"CConfigManager","boundary","CConfigManager::ensureVRR","void-accessor command collaborator",
"CConfigManager","boundary","CConfigManager::getAnimationPropertyConfig","property collaborator",
"CConfigManager","boundary","CConfigManager::addParseError","controller stateless",
"CConfigManager","boundary","CConfigManager::getBoundMonitorForWS","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::getBoundMonitorStringForWS","property controller",
"CConfigManager","boundary","CConfigManager::getAllWorkspaceRules","get collaborator",
"CConfigManager","boundary","CConfigManager::addExecRule","void-accessor command collaborator",
"CConfigManager","boundary","CConfigManager::handlePluginLoads","set collaborator",
"CConfigManager","boundary","CConfigManager::getAnimationConfig","get collaborator",
"CConfigManager","boundary","CConfigManager::addPluginConfigVar","void-accessor command collaborator",
"CConfigManager","boundary","CConfigManager::addPluginKeyword","void-accessor command collaborator",
"CConfigManager","boundary","CConfigManager::removePluginConfig","command collaborator",
"CConfigManager","boundary","CConfigManager::getDefaultWorkspaceFor","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::handleRawExec","property non-void-command",
"CConfigManager","boundary","CConfigManager::handleExecOnce","property non-void-command",
"CConfigManager","boundary","CConfigManager::handleMonitor","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::handleBezier","controller stateless",
"CConfigManager","boundary","CConfigManager::setAnimForChildren","command collaborator",
"CConfigManager","boundary","CConfigManager::handleAnimation","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::handleBind","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::handleUnbind","controller stateless",
"CConfigManager","boundary","CConfigManager::handleWindowRule","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::handleLayerRule","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::handleWindowRuleV2","property non-void-command",
"CConfigManager","boundary","CConfigManager::updateBlurredLS","controller stateless",
"CConfigManager","boundary","CConfigManager::handleBlurLS","property controller",
"CConfigManager","boundary","CConfigManager::handleWorkspaceRules","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::handleSubmap","property set",
"CConfigManager","boundary","CConfigManager::handleSource","property controller",
"CConfigManager","boundary","CConfigManager::handleEnv","property non-void-command collaborator",
"CConfigManager","boundary","CConfigManager::handlePlugin","property non-void-command",
"CWLCallbackResource","small-class","CWLCallbackResource::CWLCallbackResource","constructor",
"CWLCallbackResource","small-class","CWLCallbackResource::good","predicate non-void-command",
"CWLCallbackResource","small-class","CWLCallbackResource::send","void-accessor command collaborator",
"CXDGPositionerRules","controller small-class","CXDGPositionerRules::CXDGPositionerRules","constructor",
"CXDGPositionerRules","controller small-class","CXDGPositionerRules::getPosition","property controller",
"CManifest","empty","CManifest::CManifest","constructor",
"CPointerGesturePinch","small-class","CPointerGesturePinch::CPointerGesturePinch","constructor",
"CPointerGesturePinch","small-class","CPointerGesturePinch::good","predicate non-void-command",
"CXWaylandShellResource","empty","CXWaylandShellResource::CXWaylandShellResource","constructor",
"CMonitor","boundary","operator==","predicate",
"CMonitor","boundary","CMonitor::CMonitor","constructor",
"CMonitor","boundary","CMonitor::~CMonitor","destructor",
"CMonitor","boundary","CMonitor::onConnect","command collaborator",
"CMonitor","boundary","CMonitor::matchesStaticSelector","predicate controller",
"CMonitor","boundary","CMonitor::findAvailableDefaultWS","property controller",
"CMonitor","boundary","CMonitor::setupDefaultWS","set collaborator",
"CMonitor","boundary","CMonitor::setMirror","void-accessor command collaborator",
"CMonitor","boundary","CMonitor::updateMatrix","command",
"CMonitor","boundary","CMonitor::activeWorkspaceID","property",
"CMonitor","boundary","CMonitor::activeSpecialWorkspaceID","property",
"CMonitor","boundary","CMonitor::logicalBox","property collaborator",
"CForeignToplevelProtocol","unclassified","CForeignToplevelProtocol::CForeignToplevelProtocol","constructor",
"CForeignToplevelProtocol","unclassified","CForeignToplevelProtocol::bindManager","void-accessor command collaborator",
"CForeignToplevelProtocol","unclassified","CForeignToplevelProtocol::onManagerResourceDestroy","void-accessor controller",
"CForeignToplevelProtocol","unclassified","CForeignToplevelProtocol::destroyHandle","void-accessor controller",
"CPrimarySelectionManager","empty","CPrimarySelectionManager::CPrimarySelectionManager","constructor",
"IWaylandProtocol","unclassified","protoLog","void-accessor controller",
"IWaylandProtocol","unclassified","IWaylandProtocol::onDisplayDestroy","wrapper",
"IWaylandProtocol","unclassified","IWaylandProtocol::IWaylandProtocol","constructor",
"IWaylandProtocol","unclassified","IWaylandProtocol::~IWaylandProtocol","destructor",
"IWaylandProtocol","unclassified","IWaylandProtocol::removeGlobal","wrapper",
"IHyprLayout","boundary","IHyprLayout::onWindowCreated","command collaborator",
"IHyprLayout","boundary","IHyprLayout::onWindowRemoved","command collaborator",
"IHyprLayout","boundary","IHyprLayout::onWindowRemovedFloating","collaborator incidental",
"IHyprLayout","boundary","IHyprLayout::onWindowCreatedFloating","controller stateless",
"IHyprLayout","boundary","IHyprLayout::onBeginDragWindow","command collaborator",
"IHyprLayout","boundary","IHyprLayout::onEndDragWindow","set collaborator",
"IHyprLayout","boundary","IHyprLayout::onMouseMove","void-accessor command collaborator",
"IHyprLayout","boundary","IHyprLayout::changeWindowFloatingMode","set collaborator",
"IHyprLayout","boundary","IHyprLayout::moveActiveWindow","controller stateless",
"IHyprLayout","boundary","IHyprLayout::onWindowFocusChange","set collaborator",
"IHyprLayout","boundary","IHyprLayout::getNextWindowCandidate","property non-void-command collaborator",
"IHyprLayout","boundary","IHyprLayout::isWindowReachable","controller stateless",
"IHyprLayout","boundary","IHyprLayout::bringWindowToTop","controller stateless",
"IHyprLayout","boundary","IHyprLayout::requestFocusForWindow","command collaborator",
"IHyprLayout","boundary","IHyprLayout::predictSizeForNewWindowFloating","controller stateless",
"IHyprLayout","boundary","IHyprLayout::predictSizeForNewWindow","property non-void-command collaborator",
"IHyprLayout","boundary","IHyprLayout::~IHyprLayout","destructor",
"CCompositor","unclassified","CCompositor::CCompositor","constructor",
"CCompositor","unclassified","CCompositor::~CCompositor","destructor",
"CCompositor","unclassified","CCompositor::setRandomSplash","set collaborator",
"CCompositor","unclassified","CCompositor::initServer","command",
"CCompositor","unclassified","CCompositor::initAllSignals","wrapper",
"CCompositor","unclassified","CCompositor::removeAllSignals","wrapper",
"CCompositor","unclassified","CCompositor::cleanEnvironment","controller",
"CCompositor","unclassified","CCompositor::cleanup","command",
"CCompositor","unclassified","CCompositor::initManagers","controller stateless",
"CCompositor","unclassified","CCompositor::createLockFile","controller",
"CCompositor","unclassified","CCompositor::removeLockFile","wrapper",
"CCompositor","unclassified","CCompositor::prepareFallbackOutput","wrapper",
"CCompositor","unclassified","CCompositor::startCompositor","command collaborator",
"CCompositor","unclassified","CCompositor::getMonitorFromID","property controller",
"CCompositor","unclassified","CCompositor::getMonitorFromName","property controller",
"CCompositor","unclassified","CCompositor::getMonitorFromDesc","property controller",
"CCompositor","unclassified","CCompositor::getMonitorFromCursor","property non-void-command collaborator",
"CCompositor","unclassified","CCompositor::getMonitorFromVector","property non-void-command collaborator",
"CCompositor","unclassified","CCompositor::removeWindowFromVectorSafe","controller",
"CCompositor","unclassified","CCompositor::monitorExists","predicate controller",
"CCompositor","unclassified","CCompositor::vectorToWindowUnified","property non-void-command collaborator",
"CCompositor","unclassified","CCompositor::vectorWindowToSurface","controller stateless",
"CCompositor","unclassified","CCompositor::vectorToSurfaceLocal","controller stateless",
"CCompositor","unclassified","CCompositor::getMonitorFromOutput","property controller",
"CCompositor","unclassified","CCompositor::getRealMonitorFromOutput","property controller",
"CCompositor","unclassified","CCompositor::focusWindow","command collaborator",
"CCompositor","unclassified","CCompositor::focusSurface","command collaborator",
"CCompositor","unclassified","CCompositor::vectorToLayerPopupSurface","controller stateless",
"CCompositor","unclassified","CCompositor::vectorToLayerSurface","controller stateless",
"CCompositor","unclassified","CCompositor::getWindowFromSurface","property controller",
"CCompositor","unclassified","CCompositor::getWindowFromHandle","property controller",
"CCompositor","unclassified","CCompositor::getFullscreenWindowOnWorkspace","property controller",
"CCompositor","unclassified","CCompositor::isWorkspaceVisible","wrapper stateless",
"CCompositor","unclassified","CCompositor::isWorkspaceVisibleNotCovered","predicate non-void-command collaborator",
"CCompositor","unclassified","CCompositor::getWorkspaceByID","property controller",
"CCompositor","unclassified","CCompositor::sanityCheckWorkspaces","command collaborator",
"CCompositor","unclassified","CCompositor::getWindowsOnWorkspace","property controller",
"CCompositor","unclassified","CCompositor::getGroupsOnWorkspace","property controller",
"CCompositor","unclassified","CCompositor::getUrgentWindow","property collaborator",
"CCompositor","unclassified","CCompositor::hasUrgentWindowOnWorkspace","predicate controller",
"CCompositor","unclassified","CCompositor::getFirstWindowOnWorkspace","property controller",
"CCompositor","unclassified","CCompositor::getTopLeftWindowOnWorkspace","property non-void-command collaborator",
"CCompositor","unclassified","CCompositor::isWindowActive","predicate non-void-command collaborator",
"CCompositor","unclassified","CCompositor::changeWindowZOrder","command collaborator",
"CCompositor","unclassified","CCompositor::getMonitorInDirection","property non-void-command collaborator",
"CCompositor","unclassified","CCompositor::getMonitorInDirection","property controller",
"CCompositor","unclassified","CCompositor::updateAllWindowsAnimatedDecorationValues","command",
"CCompositor","unclassified","CCompositor::updateWorkspaceWindows","controller",
"CCompositor","unclassified","CCompositor::updateWindowAnimatedDecorationValues","command collaborator",
"CCompositor","unclassified","CCompositor::getNextAvailableMonitorID","property non-void-command",
"CCompositor","unclassified","CCompositor::createNewWorkspace","property non-void-command collaborator",
"CCompositor","unclassified","CCompositor::renameWorkspace","void-accessor command collaborator",
"CCompositor","unclassified","CCompositor::setActiveMonitor","void-accessor command collaborator",
"CCompositor","unclassified","CCompositor::isWorkspaceSpecial","incidental",
"CCompositor","unclassified","CCompositor::getNewSpecialID","property",
"CCompositor","unclassified","CCompositor::performUserChecks","incidental",
"CCompositor","unclassified","CCompositor::moveWindowToWorkspaceSafe","controller stateless",
"CCompositor","unclassified","CCompositor::getForceFocus","property non-void-command collaborator",
"CCompositor","unclassified","CCompositor::arrangeMonitors","controller",
"CCompositor","unclassified","CCompositor::enterUnsafeState","command",
"CCompositor","unclassified","CCompositor::leaveUnsafeState","set collaborator",
"CCompositor","unclassified","CCompositor::setPreferredScaleForSurface","controller stateless",
"CCompositor","unclassified","CCompositor::setPreferredTransformForSurface","controller stateless",
"CCompositor","unclassified","CCompositor::updateSuspendedStates","command",
"CCompositor","unclassified","CCompositor::windowForCPointer","property controller",
"CPrimarySelectionDevice","entity boundary","CPrimarySelectionDevice::CPrimarySelectionDevice","constructor",
"CPrimarySelectionDevice","entity boundary","CPrimarySelectionDevice::good","predicate non-void-command",
"CPrimarySelectionDevice","entity boundary","CPrimarySelectionDevice::client","get collaborator",
"CPrimarySelectionDevice","entity boundary","CPrimarySelectionDevice::sendDataOffer","command collaborator",
"CPrimarySelectionDevice","entity boundary","CPrimarySelectionDevice::sendSelection","command collaborator",
"ICustomConfigValueData","empty","ICustomConfigValueData::~ICustomConfigValueData","destructor",
"IPointer","degenerate small-class","IPointer::getCapabilities","incidental",
"IPointer","degenerate small-class","IPointer::getType","collaborator incidental",
"COutputManagementProtocol","controller","COutputManagementProtocol::COutputManagementProtocol","constructor",
"COutputManagementProtocol","controller","COutputManagementProtocol::bindManager","void-accessor command collaborator",
"COutputManagementProtocol","controller","COutputManagementProtocol::destroyResource","void-accessor controller",
"COutputManagementProtocol","controller","COutputManagementProtocol::destroyResource","void-accessor controller",
"COutputManagementProtocol","controller","COutputManagementProtocol::destroyResource","void-accessor controller",
"COutputManagementProtocol","controller","COutputManagementProtocol::destroyResource","void-accessor controller",
"COutputManagementProtocol","controller","COutputManagementProtocol::destroyResource","void-accessor controller",
"COutputManagementProtocol","controller","COutputManagementProtocol::updateAllOutputs","controller",
"COutputManagementProtocol","controller","COutputManagementProtocol::headFromResource","property controller",
"COutputManagementProtocol","controller","COutputManagementProtocol::modeFromResource","property controller",
"SDwindleNodeData","unclassified","operator==","predicate",
"SDwindleNodeData","unclassified","SDwindleNodeData::recalcSizePosRecursive","command",
"SDwindleNodeData","unclassified","SDwindleNodeData::getAllChildrenRecursive","void-accessor command",
"CLayerSurface","commander boundary","operator==","predicate",
"CLayerSurface","commander boundary","CLayerSurface::create","controller stateless",
"CLayerSurface","commander boundary","CLayerSurface::registerCallbacks","command",
"CLayerSurface","commander boundary","CLayerSurface::CLayerSurface","constructor",
"CLayerSurface","commander boundary","CLayerSurface::~CLayerSurface","destructor",
"CLayerSurface","commander boundary","CLayerSurface::onDestroy","command collaborator",
"CLayerSurface","commander boundary","CLayerSurface::onMap","command",
"CLayerSurface","commander boundary","CLayerSurface::onUnmap","command collaborator",
"CLayerSurface","commander boundary","CLayerSurface::onCommit","command collaborator",
"CLayerSurface","commander boundary","CLayerSurface::applyRules","command collaborator",
"CLayerSurface","commander boundary","CLayerSurface::startAnimation","command collaborator",
"CLayerSurface","commander boundary","CLayerSurface::isFadedOut","predicate non-void-command",
"CLayerSurface","commander boundary","CLayerSurface::popupsCount","property non-void-command",
"CPopup","boundary","CPopup::CPopup","constructor",
"CPopup","boundary","CPopup::CPopup","constructor",
"CPopup","boundary","CPopup::CPopup","copy-constructor",
"CPopup","boundary","CPopup::~CPopup","destructor",
"CPopup","boundary","CPopup::initAllSignals","command",
"CPopup","boundary","CPopup::onNewPopup","command collaborator",
"CPopup","boundary","CPopup::onDestroy","set",
"CPopup","boundary","CPopup::onMap","command collaborator",
"CPopup","boundary","CPopup::onUnmap","command collaborator",
"CPopup","boundary","CPopup::onCommit","command collaborator",
"CPopup","boundary","CPopup::onReposition","command",
"CPopup","boundary","CPopup::unconstrain","command collaborator",
"CPopup","boundary","CPopup::coordsRelativeToParent","property controller",
"CPopup","boundary","CPopup::coordsGlobal","property non-void-command collaborator",
"CPopup","boundary","CPopup::localToGlobal","property non-void-command collaborator",
"CPopup","boundary","CPopup::t1ParentCoords","property non-void-command collaborator",
"CPopup","boundary","CPopup::recheckTree","controller",
"CPopup","boundary","CPopup::recheckChildrenRecursive","controller",
"CPopup","boundary","CPopup::size","get collaborator",
"CPopup","boundary","CPopup::sendScale","command",
"CPopup","boundary","CPopup::visible","predicate non-void-command",
"CPopup","boundary","CPopup::bfHelper","void-accessor command",
"CPopup","boundary","CPopup::breadthfirst","void-accessor command",
"CPopup","boundary","CPopup::at","property controller",
"CWindowOverridableVar","entity data-provider boundary","CWindowOverridableVar","constructor",
"CWindowOverridableVar","entity data-provider boundary","operator=","get non-void-command collaborator",
"CWindowOverridableVar","entity data-provider boundary","operator=","get property set collaborator",
"CWindowOverridableVar","entity data-provider boundary","forceSetIgnoreLocked","command",
"CWindowOverridableVar","entity data-provider boundary","operator*","property collaborator",
"CWindowOverridableVar","entity data-provider boundary","operator+","property collaborator",
"CWindowOverridableVar","entity data-provider boundary","operator==","predicate collaborator",
"CWindowOverridableVar","entity data-provider boundary","operator>=","predicate collaborator",
"CWindowOverridableVar","entity data-provider boundary","operator<=","predicate collaborator",
"CWindowOverridableVar","entity data-provider boundary","operator>","predicate collaborator",
"CWindowOverridableVar","entity data-provider boundary","operator<","predicate collaborator",
"CWindowOverridableVar","entity data-provider boundary","operatorbool","unclassified",
"CWindowOverridableVar","entity data-provider boundary","toUnderlying","get collaborator",
"CInputMethodPopupV2","entity boundary","CInputMethodPopupV2::CInputMethodPopupV2","constructor",
"CInputMethodPopupV2","entity boundary","CInputMethodPopupV2::~CInputMethodPopupV2","destructor",
"CInputMethodPopupV2","entity boundary","CInputMethodPopupV2::good","predicate non-void-command",
"CInputMethodPopupV2","entity boundary","CInputMethodPopupV2::sendInputRectangle","void-accessor command collaborator",
"CInputMethodPopupV2","entity boundary","CInputMethodPopupV2::surface","property non-void-command collaborator",
"CKeyboardShortcutsInhibitProtocol","unclassified","CKeyboardShortcutsInhibitProtocol::CKeyboardShortcutsInhibitProtocol","constructor",
"CKeyboardShortcutsInhibitProtocol","unclassified","CKeyboardShortcutsInhibitProtocol::bindManager","void-accessor command collaborator",
"CKeyboardShortcutsInhibitProtocol","unclassified","CKeyboardShortcutsInhibitProtocol::onManagerResourceDestroy","void-accessor controller",
"CKeyboardShortcutsInhibitProtocol","unclassified","CKeyboardShortcutsInhibitProtocol::destroyInhibitor","void-accessor controller",
"CKeyboardShortcutsInhibitProtocol","unclassified","CKeyboardShortcutsInhibitProtocol::onInhibit","void-accessor command collaborator",
"CKeyboardShortcutsInhibitProtocol","unclassified","CKeyboardShortcutsInhibitProtocol::isInhibited","predicate controller",
"std::formatter<PHLWINDOW,CharT>","controller small-class","format","property controller",
"CInputMethodV2","commander boundary","CInputMethodV2::CInputMethodV2","constructor",
"CInputMethodV2","commander boundary","CInputMethodV2::good","predicate non-void-command",
"CInputMethodV2","commander boundary","CInputMethodV2::activate","set",
"CInputMethodV2","commander boundary","CInputMethodV2::deactivate","set",
"CInputMethodV2","commander boundary","CInputMethodV2::surroundingText","command",
"CInputMethodV2","commander boundary","CInputMethodV2::textChangeCause","command collaborator",
"CInputMethodV2","commander boundary","CInputMethodV2::textContentType","command collaborator",
"CInputMethodV2","commander boundary","CInputMethodV2::done","command",
"CInputMethodV2","commander boundary","CInputMethodV2::unavailable","command",
"CInputMethodV2","commander boundary","CInputMethodV2::hasGrab","predicate non-void-command",
"CInputMethodV2","commander boundary","CInputMethodV2::grabClient","property non-void-command collaborator",
"CInputMethodV2","commander boundary","CInputMethodV2::sendInputRectangle","set collaborator",
"CInputMethodV2","commander boundary","CInputMethodV2::sendKey","controller",
"CInputMethodV2","commander boundary","CInputMethodV2::sendMods","controller",
"CInputMethodV2","commander boundary","CInputMethodV2::setKeyboard","void-accessor controller",
"CInputMethodV2","commander boundary","CInputMethodV2::client","property non-void-command collaborator",
"CBox","data-provider boundary","CBox","constructor",
"CBox","data-provider boundary","CBox","constructor",
"CBox","data-provider boundary","CBox","constructor",
"CBox","data-provider boundary","CBox","constructor",
"CBox","data-provider boundary","CBox","constructor",
"CBox","data-provider boundary","operator==","predicate",
"CBox","data-provider boundary","CBox::wlr","get set collaborator",
"CBox","data-provider boundary","CBox::pWlr","property set collaborator",
"CBox","data-provider boundary","CBox::scale","get non-void-command",
"CBox","data-provider boundary","CBox::scale","get non-void-command collaborator",
"CBox","data-provider boundary","CBox::translate","get non-void-command collaborator",
"CBox","data-provider boundary","CBox::middle","property wrapper",
"CBox","data-provider boundary","CBox::containsPoint","predicate wrapper",
"CBox","data-provider boundary","CBox::empty","predicate",
"CBox","data-provider boundary","CBox::applyFromWlr","get non-void-command",
"CBox","data-provider boundary","CBox::round","get non-void-command",
"CBox","data-provider boundary","CBox::transform","get non-void-command",
"CBox","data-provider boundary","CBox::addExtents","get non-void-command collaborator",
"CBox","data-provider boundary","CBox::scaleFromCenter","get non-void-command",
"CBox","data-provider boundary","CBox::expand","get non-void-command",
"CBox","data-provider boundary","CBox::noNegativeSize","get non-void-command",
"CBox","data-provider boundary","CBox::intersection","property wrapper",
"CBox","data-provider boundary","CBox::overlaps","predicate",
"CBox","data-provider boundary","CBox::inside","predicate",
"CBox","data-provider boundary","CBox::roundInternal","property wrapper",
"CBox","data-provider boundary","CBox::copy","property wrapper",
"CBox","data-provider boundary","CBox::pos","property collaborator",
"CBox","data-provider boundary","CBox::size","property collaborator",
"CBox","data-provider boundary","CBox::closestPoint","property collaborator",
"CBox","data-provider boundary","CBox::extentsFrom","property collaborator",
"CDecorationPositioner","unclassified","CDecorationPositioner::CDecorationPositioner","constructor",
"CDecorationPositioner","unclassified","CDecorationPositioner::getEdgeDefinedPoint","controller stateless",
"CDecorationPositioner","unclassified","CDecorationPositioner::uncacheDecoration","void-accessor command collaborator",
"CDecorationPositioner","unclassified","CDecorationPositioner::repositionDeco","void-accessor command collaborator",
"CDecorationPositioner","unclassified","CDecorationPositioner::getDataFor","property non-void-command collaborator",
"CDecorationPositioner","unclassified","CDecorationPositioner::sanitizeDatas","controller",
"CInputMethodV2Protocol","unclassified","CInputMethodV2Protocol::CInputMethodV2Protocol","constructor",
"CInputMethodV2Protocol","unclassified","CInputMethodV2Protocol::bindManager","void-accessor command collaborator",
"CInputMethodV2Protocol","unclassified","CInputMethodV2Protocol::onManagerResourceDestroy","void-accessor controller",
"CInputMethodV2Protocol","unclassified","CInputMethodV2Protocol::destroyResource","void-accessor controller",
"CInputMethodV2Protocol","unclassified","CInputMethodV2Protocol::destroyResource","void-accessor controller",
"CInputMethodV2Protocol","unclassified","CInputMethodV2Protocol::destroyResource","void-accessor controller",
"CInputMethodV2Protocol","unclassified","CInputMethodV2Protocol::onGetIME","command collaborator",
"CTextInputV3Protocol","unclassified","CTextInputV3Protocol::CTextInputV3Protocol","constructor",
"CTextInputV3Protocol","unclassified","CTextInputV3Protocol::bindManager","void-accessor command collaborator",
"CTextInputV3Protocol","unclassified","CTextInputV3Protocol::onManagerResourceDestroy","void-accessor controller",
"CTextInputV3Protocol","unclassified","CTextInputV3Protocol::destroyTextInput","void-accessor controller",
"CTextInputV3Protocol","unclassified","CTextInputV3Protocol::onGetTextInput","command collaborator",
"CTabletTool","boundary","CTabletTool::create","controller stateless",
"CTabletTool","boundary","CTabletTool::fromWlr","property non-void-command collaborator",
"CTabletTool","boundary","CTabletTool::getCapabilities","incidental",
"CTabletTool","boundary","CTabletTool::wlr","get collaborator",
"CTabletTool","boundary","CTabletTool::getType","collaborator incidental",
"CTabletTool","boundary","CTabletTool::CTabletTool","constructor",
"CTabletTool","boundary","CTabletTool::~CTabletTool","destructor",
"CTabletTool","boundary","CTabletTool::disconnectCallbacks","controller stateless",
"CTabletTool","boundary","CTabletTool::getSurface","property non-void-command collaborator",
"CTabletTool","boundary","CTabletTool::setSurface","command collaborator",
"CTablet","lazy-class degenerate","CTablet::create","controller stateless",
"CTablet","lazy-class degenerate","CTablet::fromWlr","property non-void-command collaborator",
"CTablet","lazy-class degenerate","CTablet::getCapabilities","incidental",
"CTablet","lazy-class degenerate","CTablet::wlr","get collaborator",
"CTablet","lazy-class degenerate","CTablet::CTablet","constructor",
"CTablet","lazy-class degenerate","CTablet::~CTablet","destructor",
"CTablet","lazy-class degenerate","CTablet::disconnectCallbacks","controller stateless",
"CTablet","lazy-class degenerate","CTablet::getType","collaborator incidental",
"CRegion","data-provider boundary","operator=","get controller",
"CRegion","data-provider boundary","operator=","get controller",
"CRegion","data-provider boundary","pixman","property collaborator",
"CRegion","data-provider boundary","CRegion::CRegion","constructor",
"CRegion","data-provider boundary","CRegion::CRegion","constructor",
"CRegion","data-provider boundary","CRegion::CRegion","constructor",
"CRegion","data-provider boundary","CRegion::CRegion","constructor",
"CRegion","data-provider boundary","CRegion::CRegion","constructor",
"CRegion","data-provider boundary","CRegion::CRegion","constructor",
"CRegion","data-provider boundary","CRegion::CRegion","copy-constructor",
"CRegion","data-provider boundary","CRegion::CRegion","copy-constructor",
"CRegion","data-provider boundary","CRegion::~CRegion","destructor",
"CRegion","data-provider boundary","CRegion::clear","get wrapper",
"CRegion","data-provider boundary","CRegion::set","get non-void-command",
"CRegion","data-provider boundary","CRegion::add","get non-void-command",
"CRegion","data-provider boundary","CRegion::add","get wrapper",
"CRegion","data-provider boundary","CRegion::add","get wrapper",
"CRegion","data-provider boundary","CRegion::subtract","get non-void-command",
"CRegion","data-provider boundary","CRegion::intersect","get non-void-command",
"CRegion","data-provider boundary","CRegion::intersect","get wrapper",
"CRegion","data-provider boundary","CRegion::invert","get wrapper",
"CRegion","data-provider boundary","CRegion::invert","controller stateless",
"CRegion","data-provider boundary","CRegion::translate","get wrapper",
"CRegion","data-provider boundary","CRegion::transform","get wrapper",
"CRegion","data-provider boundary","CRegion::rationalize","get non-void-command",
"CRegion","data-provider boundary","CRegion::copy","property",
"CRegion","data-provider boundary","CRegion::scale","get wrapper",
"CRegion","data-provider boundary","CRegion::scale","get wrapper",
"CRegion","data-provider boundary","CRegion::getRects","property controller",
"CRegion","data-provider boundary","CRegion::getExtents","property wrapper",
"CRegion","data-provider boundary","CRegion::containsPoint","predicate wrapper",
"CRegion","data-provider boundary","CRegion::empty","predicate wrapper",
"CRegion","data-provider boundary","CRegion::closestPoint","property collaborator",
"CForeignToplevelList","entity commander boundary","CForeignToplevelList::CForeignToplevelList","constructor",
"CForeignToplevelList","entity commander boundary","CForeignToplevelList::onMap","command collaborator",
"CForeignToplevelList","entity commander boundary","CForeignToplevelList::handleForWindow","property non-void-command collaborator",
"CForeignToplevelList","entity commander boundary","CForeignToplevelList::onTitle","command collaborator",
"CForeignToplevelList","entity commander boundary","CForeignToplevelList::onClass","command collaborator",
"CForeignToplevelList","entity commander boundary","CForeignToplevelList::onUnmap","command collaborator",
"CForeignToplevelList","entity commander boundary","CForeignToplevelList::good","predicate non-void-command",
"CTabletPad","lazy-class degenerate","CTabletPad::create","controller stateless",
"CTabletPad","lazy-class degenerate","CTabletPad::getCapabilities","incidental",
"CTabletPad","lazy-class degenerate","CTabletPad::wlr","get collaborator",
"CTabletPad","lazy-class degenerate","CTabletPad::getType","collaborator incidental",
"CTabletPad","lazy-class degenerate","CTabletPad::CTabletPad","constructor",
"CTabletPad","lazy-class degenerate","CTabletPad::~CTabletPad","destructor",
"CTabletPad","lazy-class degenerate","CTabletPad::disconnectCallbacks","controller stateless",
"CTouchDevice","boundary lazy-class degenerate","CTouchDevice::create","wrapper stateless",
"CTouchDevice","boundary lazy-class degenerate","CTouchDevice::CTouchDevice","constructor",
"CTouchDevice","boundary lazy-class degenerate","CTouchDevice::isVirtual","incidental",
"CTouchDevice","boundary lazy-class degenerate","CTouchDevice::wlr","get collaborator",
"CTouchDevice","boundary lazy-class degenerate","CTouchDevice::disconnectCallbacks","controller stateless",
"CFramebuffer","boundary","CFramebuffer::CFramebuffer","constructor",
"CFramebuffer","boundary","CFramebuffer::alloc","predicate set collaborator",
"CFramebuffer","boundary","CFramebuffer::addStencil","wrapper",
"CFramebuffer","boundary","CFramebuffer::bind","wrapper",
"CFramebuffer","boundary","CFramebuffer::release","command",
"CFramebuffer","boundary","CFramebuffer::~CFramebuffer","destructor",
"CFramebuffer","boundary","CFramebuffer::isAllocated","predicate",
"BufFileWriter","commander","BufFileWriter","constructor",
"BufFileWriter","commander","~BufFileWriter","destructor",
"BufFileWriter","commander","write","void-accessor set",
"BufFileWriter","commander","write","command",
"BufFileWriter","commander","operator+=","void-accessor command",
"BufFileWriter","commander","operator+=","command collaborator",
"BufFileWriter","commander","operator+=","command",
"BufFileWriter","commander","writeNum","command",
"BufFileWriter","commander","writeCmdOutput","command",
"BufFileWriter","commander","flush","set",
"CTextInput","commander boundary","CTextInput::CTextInput","constructor",
"CTextInput","commander boundary","CTextInput::CTextInput","copy-constructor",
"CTextInput","commander boundary","CTextInput::~CTextInput","destructor",
"CTextInput","commander boundary","CTextInput::tiV1Destroyed","set",
"CTextInput","commander boundary","CTextInput::initCallbacks","command collaborator",
"CTextInput","commander boundary","CTextInput::onEnabled","command collaborator",
"CTextInput","commander boundary","CTextInput::onDisabled","command",
"CTextInput","commander boundary","CTextInput::onCommit","command",
"CTextInput","commander boundary","CTextInput::setFocusedSurface","command collaborator",
"CTextInput","commander boundary","CTextInput::isV3","predicate",
"CTextInput","commander boundary","CTextInput::enter","command collaborator",
"CTextInput","commander boundary","CTextInput::leave","command",
"CTextInput","commander boundary","CTextInput::focusedSurface","property non-void-command collaborator",
"CTextInput","commander boundary","CTextInput::client","property non-void-command collaborator",
"CTextInput","commander boundary","CTextInput::commitStateToIME","command collaborator",
"CTextInput","commander boundary","CTextInput::updateIMEState","command collaborator",
"CTextInput","commander boundary","CTextInput::hasCursorRectangle","predicate non-void-command",
"CTextInput","commander boundary","CTextInput::cursorBox","property non-void-command collaborator",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::CPrimarySelectionSource","constructor",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::~CPrimarySelectionSource","destructor",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::fromResource","controller stateless",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::good","predicate non-void-command",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::mimes","get",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::send","void-accessor command",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::accepted","void-accessor command",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::cancelled","command",
"CPrimarySelectionSource","unclassified","CPrimarySelectionSource::error","void-accessor command",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::CDataDeviceWLRProtocol","constructor",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::bindManager","void-accessor command collaborator",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::destroyResource","void-accessor controller",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::destroyResource","void-accessor controller",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::destroyResource","void-accessor controller",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::destroyResource","void-accessor controller",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::sendSelectionToDevice","command collaborator",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::setSelection","command",
"CDataDeviceWLRProtocol","unclassified","CDataDeviceWLRProtocol::dataDeviceForClient","property non-void-command collaborator",
"CViewporterResource","empty","CViewporterResource::CViewporterResource","constructor",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::CHyprXWaylandManager","constructor",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::~CHyprXWaylandManager","destructor",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::getWindowSurface","controller stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::activateSurface","controller stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::activateWindow","command",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::getGeometryForWindow","controller stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::sendCloseWindow","controller stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::setWindowSize","controller stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::shouldBeFloated","controller stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::checkBorders","collaborator incidental",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::setWindowFullscreen","controller stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::getMaxSizeForWindow","wrapper stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::getMinSizeForWindow","controller stateless",
"CHyprXWaylandManager","controller degenerate","CHyprXWaylandManager::xwaylandToWaylandCoords","controller stateless",
"STextInputV1","data-provider small-class","operator==","predicate",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::CWLSHMBuffer","constructor",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::~CWLSHMBuffer","destructor",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::caps","collaborator incidental",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::type","collaborator incidental",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::isSynchronous","incidental",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::shm","property wrapper",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::beginDataPtr","property collaborator",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::endDataPtr","incidental",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::good","get",
"CWLSHMBuffer","data-provider boundary","CWLSHMBuffer::update","void-accessor command collaborator",
"COutputConfiguration","controller small-class","COutputConfiguration::COutputConfiguration","constructor",
"COutputConfiguration","controller small-class","COutputConfiguration::applyTestConfiguration","predicate controller",
"COutputHead","entity boundary","COutputHead::COutputHead","constructor",
"COutputHead","entity boundary","COutputHead::good","predicate non-void-command",
"COutputHead","entity boundary","COutputHead::sendAllData","command collaborator",
"COutputHead","entity boundary","COutputHead::updateMode","command collaborator",
"COutputHead","entity boundary","COutputHead::makeAndSendNewMode","void-accessor command collaborator",
"COutputHead","entity boundary","COutputHead::monitor","get collaborator",
"IKeyboard","entity commander boundary","IKeyboard::getCapabilities","incidental",
"IKeyboard","entity commander boundary","IKeyboard::getType","collaborator incidental",
"IKeyboard","entity commander boundary","IKeyboard::~IKeyboard","destructor",
"IKeyboard","entity commander boundary","IKeyboard::updateXKBTranslationState","void-accessor command collaborator",
"IKeyboard","entity commander boundary","IKeyboard::getActiveLayout","wrapper stateless",
"IKeyboard","entity commander boundary","IKeyboard::updateLEDs","command",
"IKeyboard","entity commander boundary","IKeyboard::updateLEDs","command collaborator",
"CExtIdleNotification","commander","CExtIdleNotification::CExtIdleNotification","copy-constructor",
"CExtIdleNotification","commander","CExtIdleNotification::~CExtIdleNotification","destructor",
"CExtIdleNotification","commander","CExtIdleNotification::good","predicate non-void-command",
"CExtIdleNotification","commander","CExtIdleNotification::updateTimer","command",
"CExtIdleNotification","commander","CExtIdleNotification::onTimerFired","set",
"CExtIdleNotification","commander","CExtIdleNotification::onActivity","command",
"CXDGSurfaceResource","lazy-class","CXDGSurfaceResource::CXDGSurfaceResource","constructor",
"CXDGSurfaceResource","lazy-class","CXDGSurfaceResource::role","collaborator incidental",
"CXDGSurfaceResource","lazy-class","CXDGSurfaceResource::good","predicate non-void-command",
"CXDGSurfaceResource","lazy-class","CXDGSurfaceResource::fromResource","controller stateless",
"CXDGSurfaceResource","lazy-class","CXDGSurfaceResource::scheduleConfigure","get non-void-command",
"CXDGSurfaceResource","lazy-class","CXDGSurfaceResource::configure","set",
"CAlphaModifierProtocol","unclassified","CAlphaModifierProtocol::CAlphaModifierProtocol","constructor",
"CAlphaModifierProtocol","unclassified","CAlphaModifierProtocol::bindManager","void-accessor command collaborator",
"CAlphaModifierProtocol","unclassified","CAlphaModifierProtocol::onManagerResourceDestroy","void-accessor controller",
"CAlphaModifierProtocol","unclassified","CAlphaModifierProtocol::destroyModifier","controller",
"CAlphaModifierProtocol","unclassified","CAlphaModifierProtocol::onGetSurface","command collaborator",
"CTearingControl","unclassified","operator==","predicate collaborator",
"CTearingControl","unclassified","operator==","predicate",
"CTearingControl","unclassified","CTearingControl::CTearingControl","constructor",
"CTearingControl","unclassified","CTearingControl::onHint","set collaborator",
"CTearingControl","unclassified","CTearingControl::updateWindow","set",
"CTearingControl","unclassified","CTearingControl::good","predicate non-void-command",
"CVirtualPointerProtocol","unclassified","CVirtualPointerProtocol::CVirtualPointerProtocol","constructor",
"CVirtualPointerProtocol","unclassified","CVirtualPointerProtocol::bindManager","void-accessor command collaborator",
"CVirtualPointerProtocol","unclassified","CVirtualPointerProtocol::onManagerResourceDestroy","void-accessor controller",
"CVirtualPointerProtocol","unclassified","CVirtualPointerProtocol::destroyResource","void-accessor controller",
"CVirtualPointerProtocol","unclassified","CVirtualPointerProtocol::onCreatePointer","command collaborator",
"CWLRDataSource","unclassified","CWLRDataSource::CWLRDataSource","constructor",
"CWLRDataSource","unclassified","CWLRDataSource::~CWLRDataSource","destructor",
"CWLRDataSource","unclassified","CWLRDataSource::fromResource","controller stateless",
"CWLRDataSource","unclassified","CWLRDataSource::good","predicate non-void-command",
"CWLRDataSource","unclassified","CWLRDataSource::mimes","get",
"CWLRDataSource","unclassified","CWLRDataSource::send","void-accessor command",
"CWLRDataSource","unclassified","CWLRDataSource::accepted","void-accessor command",
"CWLRDataSource","unclassified","CWLRDataSource::cancelled","command",
"CWLRDataSource","unclassified","CWLRDataSource::error","void-accessor command",
"COutputPower","small-class","COutputPower::COutputPower","constructor",
"COutputPower","small-class","COutputPower::good","predicate non-void-command",
"CBaseAnimatedVariable","commander boundary","setConfig","set collaborator",
"CBaseAnimatedVariable","commander boundary","getConfig","get collaborator",
"CBaseAnimatedVariable","commander boundary","isBeingAnimated","get",
"CBaseAnimatedVariable","commander boundary","setCallbackOnEnd","command",
"CBaseAnimatedVariable","commander boundary","setCallbackOnBegin","command",
"CBaseAnimatedVariable","commander boundary","setUpdateCallback","set collaborator",
"CBaseAnimatedVariable","commander boundary","resetAllCallbacks","command",
"CBaseAnimatedVariable","commander boundary","getWindow","property non-void-command collaborator",
"CBaseAnimatedVariable","commander boundary","onAnimationEnd","command collaborator",
"CBaseAnimatedVariable","commander boundary","onAnimationBegin","command",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::CBaseAnimatedVariable","constructor",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::create","command collaborator",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::create","command collaborator",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::create","command collaborator",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::create","command collaborator",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::~CBaseAnimatedVariable","destructor",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::unregister","set",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::registerVar","set",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::getDurationLeftMs","property wrapper",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::getPercent","property wrapper",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::getCurveValue","property non-void-command collaborator",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::connectToActive","set",
"CBaseAnimatedVariable","commander boundary","CBaseAnimatedVariable::disconnectFromActive","set",
"CXDGActivationToken","small-class","CXDGActivationToken::CXDGActivationToken","constructor",
"CXDGActivationToken","small-class","CXDGActivationToken::good","predicate non-void-command",
"CWLRDataDevice","entity commander boundary","CWLRDataDevice::CWLRDataDevice","constructor",
"CWLRDataDevice","entity commander boundary","CWLRDataDevice::good","predicate non-void-command",
"CWLRDataDevice","entity commander boundary","CWLRDataDevice::client","get collaborator",
"CWLRDataDevice","entity commander boundary","CWLRDataDevice::sendInitialSelections","command",
"CWLRDataDevice","entity commander boundary","CWLRDataDevice::sendDataOffer","command collaborator",
"CWLRDataDevice","entity commander boundary","CWLRDataDevice::sendSelection","command collaborator",
"CWLRDataDevice","entity commander boundary","CWLRDataDevice::sendPrimarySelection","command collaborator",
"SMasterWorkspaceData","data-provider small-class","operator==","predicate",
"CFocusGrab","entity commander boundary","CFocusGrab::CFocusGrab","constructor",
"CFocusGrab","entity commander boundary","CFocusGrab::~CFocusGrab","destructor",
"CFocusGrab","entity commander boundary","CFocusGrab::good","predicate non-void-command",
"CFocusGrab","entity commander boundary","CFocusGrab::isSurfaceComitted","predicate non-void-command collaborator",
"CFocusGrab","entity commander boundary","CFocusGrab::start","set",
"CFocusGrab","entity commander boundary","CFocusGrab::finish","command",
"CFocusGrab","entity commander boundary","CFocusGrab::addSurface","command collaborator",
"CFocusGrab","entity commander boundary","CFocusGrab::removeSurface","command collaborator",
"CFocusGrab","entity commander boundary","CFocusGrab::eraseSurface","command collaborator",
"CFocusGrab","entity commander boundary","CFocusGrab::refocusKeyboard","command collaborator",
"CFocusGrab","entity commander boundary","CFocusGrab::commit","command collaborator",
"CMouse","boundary lazy-class degenerate","CMouse::create","wrapper stateless",
"CMouse","boundary lazy-class degenerate","CMouse::CMouse","constructor",
"CMouse","boundary lazy-class degenerate","CMouse::disconnectCallbacks","controller stateless",
"CMouse","boundary lazy-class degenerate","CMouse::isVirtual","incidental",
"CMouse","boundary lazy-class degenerate","CMouse::wlr","get collaborator",
"CForeignToplevelHandle","small-class","CForeignToplevelHandle::CForeignToplevelHandle","constructor",
"CForeignToplevelHandle","small-class","CForeignToplevelHandle::good","predicate non-void-command",
"CForeignToplevelHandle","small-class","CForeignToplevelHandle::window","property non-void-command collaborator",
"CForeignToplevelHandleWlr","entity boundary","CForeignToplevelHandleWlr::CForeignToplevelHandleWlr","constructor",
"CForeignToplevelHandleWlr","entity boundary","CForeignToplevelHandleWlr::good","predicate non-void-command",
"CForeignToplevelHandleWlr","entity boundary","CForeignToplevelHandleWlr::window","property non-void-command collaborator",
"CForeignToplevelHandleWlr","entity boundary","CForeignToplevelHandleWlr::res","property non-void-command collaborator",
"CForeignToplevelHandleWlr","entity boundary","CForeignToplevelHandleWlr::sendMonitor","void-accessor command collaborator",
"CForeignToplevelHandleWlr","entity boundary","CForeignToplevelHandleWlr::sendState","command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::CForeignToplevelWlrManager","constructor",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::onMap","command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::handleForWindow","property non-void-command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::onTitle","command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::onClass","command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::onUnmap","command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::onMoveMonitor","command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::onFullscreen","command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::onNewFocus","command collaborator",
"CForeignToplevelWlrManager","entity commander boundary","CForeignToplevelWlrManager::good","predicate non-void-command",
"CFractionalScaleAddon","unclassified","operator==","predicate collaborator",
"CFractionalScaleAddon","unclassified","operator==","predicate",
"CFractionalScaleAddon","unclassified","CFractionalScaleAddon::CFractionalScaleAddon","constructor",
"CFractionalScaleAddon","unclassified","CFractionalScaleAddon::onSurfaceDestroy","set",
"CFractionalScaleAddon","unclassified","CFractionalScaleAddon::setScale","void-accessor command",
"CFractionalScaleAddon","unclassified","CFractionalScaleAddon::good","predicate non-void-command",
"CFractionalScaleAddon","unclassified","CFractionalScaleAddon::surf","property non-void-command collaborator",
"CWLSHMResource","empty","CWLSHMResource::CWLSHMResource","constructor",
"CThreadManager","empty","CThreadManager::CThreadManager","constructor",
"CThreadManager","empty","CThreadManager::~CThreadManager","destructor",
"CFractionalScaleProtocol","boundary","CFractionalScaleProtocol::CFractionalScaleProtocol","constructor",
"CFractionalScaleProtocol","boundary","CFractionalScaleProtocol::bindManager","void-accessor command collaborator",
"CFractionalScaleProtocol","boundary","CFractionalScaleProtocol::removeAddon","command collaborator",
"CFractionalScaleProtocol","boundary","CFractionalScaleProtocol::onManagerResourceDestroy","void-accessor controller",
"CFractionalScaleProtocol","boundary","CFractionalScaleProtocol::onGetFractionalScale","command collaborator",
"CTabletPadRingV2Resource","small-class","CTabletPadRingV2Resource::CTabletPadRingV2Resource","constructor",
"CTabletPadRingV2Resource","small-class","CTabletPadRingV2Resource::good","predicate non-void-command",
"CTabletPadV2Resource","unclassified","CTabletPadV2Resource::CTabletPadV2Resource","constructor",
"CTabletPadV2Resource","unclassified","CTabletPadV2Resource::good","predicate non-void-command",
"CTabletPadV2Resource","unclassified","CTabletPadV2Resource::sendData","command",
"CTabletPadV2Resource","unclassified","CTabletPadV2Resource::createGroup","void-accessor command collaborator",
"CGammaControl","unclassified","CGammaControl::CGammaControl","constructor",
"CGammaControl","unclassified","CGammaControl::~CGammaControl","destructor",
"CGammaControl","unclassified","CGammaControl::good","predicate non-void-command",
"CGammaControl","unclassified","CGammaControl::applyToMonitor","command",
"CGammaControl","unclassified","CGammaControl::getMonitor","get collaborator",
"CGammaControl","unclassified","CGammaControl::onMonitorDestroy","set",
"CGammaControlProtocol","unclassified","CGammaControlProtocol::CGammaControlProtocol","constructor",
"CGammaControlProtocol","unclassified","CGammaControlProtocol::bindManager","void-accessor command collaborator",
"CGammaControlProtocol","unclassified","CGammaControlProtocol::onManagerResourceDestroy","void-accessor controller",
"CGammaControlProtocol","unclassified","CGammaControlProtocol::destroyGammaControl","void-accessor controller",
"CGammaControlProtocol","unclassified","CGammaControlProtocol::onGetGammaControl","void-accessor command collaborator",
"CGammaControlProtocol","unclassified","CGammaControlProtocol::applyGammaToState","controller",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::CXDGShellProtocol","constructor",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::bindManager","void-accessor command collaborator",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::destroyResource","void-accessor controller",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::destroyResource","void-accessor controller",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::destroyResource","void-accessor controller",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::destroyResource","void-accessor controller",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::destroyResource","void-accessor controller",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::addOrStartGrab","command collaborator",
"CXDGShellProtocol","unclassified","CXDGShellProtocol::onPopupDestroy","command collaborator",
"CLinuxDMABUFResource","commander small-class","CLinuxDMABUFResource::CLinuxDMABUFResource","constructor",
"CLinuxDMABUFResource","commander small-class","CLinuxDMABUFResource::sendMods","command",
"CInputManager","commander boundary","CInputManager::newIdleInhibitor","command collaborator",
"CInputManager","commander boundary","CInputManager::recheckIdleInhibitorStatus","controller",
"CInputManager","commander boundary","CInputManager::CInputManager","constructor",
"CInputManager","commander boundary","CInputManager::~CInputManager","destructor",
"CInputManager","commander boundary","CInputManager::onMouseMoved","set collaborator",
"CInputManager","commander boundary","CInputManager::onMouseWarp","set collaborator",
"CInputManager","commander boundary","CInputManager::simulateMouseMovement","set collaborator",
"CInputManager","commander boundary","CInputManager::sendMotionEventsToFocused","command collaborator",
"CInputManager","commander boundary","CInputManager::mouseMoveUnified","command collaborator",
"CInputManager","commander boundary","CInputManager::processMouseRequest","command collaborator",
"CInputManager","commander boundary","CInputManager::restoreCursorIconToApp","controller stateless",
"CInputManager","commander boundary","CInputManager::setCursorImageOverride","void-accessor controller",
"CInputManager","commander boundary","CInputManager::cursorImageUnlocked","predicate",
"CInputManager","commander boundary","CInputManager::getClickMode","get collaborator",
"CInputManager","commander boundary","CInputManager::setClickMode","set collaborator",
"CInputManager","commander boundary","CInputManager::processMouseDownNormal","void-accessor command collaborator",
"CInputManager","commander boundary","CInputManager::processMouseDownKill","set collaborator",
"CInputManager","commander boundary","CInputManager::onMouseWheel","controller",
"CInputManager","commander boundary","CInputManager::getMouseCoordsInternal","controller stateless",
"CInputManager","commander boundary","CInputManager::newKeyboard","void-accessor command collaborator",
"CInputManager","commander boundary","CInputManager::newVirtualKeyboard","command collaborator",
"CInputManager","commander boundary","CInputManager::setupKeyboard","command collaborator",
"CInputManager","commander boundary","CInputManager::destroyKeyboard","command collaborator",
"CInputManager","commander boundary","CInputManager::destroyPointer","command collaborator",
"CInputManager","commander boundary","CInputManager::destroyTouchDevice","controller",
"CInputManager","commander boundary","CInputManager::destroyTablet","controller",
"CInputManager","commander boundary","CInputManager::destroyTabletTool","controller",
"CInputManager","commander boundary","CInputManager::destroyTabletPad","controller",
"CInputManager","commander boundary","CInputManager::updateKeyboardsLeds","controller",
"CInputManager","commander boundary","CInputManager::onKeyboardKey","command collaborator",
"CInputManager","commander boundary","CInputManager::onKeyboardMod","command collaborator",
"CInputManager","commander boundary","CInputManager::shouldIgnoreVirtualKeyboard","predicate non-void-command collaborator",
"CInputManager","commander boundary","CInputManager::refocus","command",
"CInputManager","commander boundary","CInputManager::refocusLastWindow","void-accessor command collaborator",
"CInputManager","commander boundary","CInputManager::unconstrainMouse","controller",
"CInputManager","commander boundary","CInputManager::isConstrained","predicate controller",
"CInputManager","commander boundary","CInputManager::updateCapabilities","set collaborator",
"CInputManager","commander boundary","CInputManager::accumulateModsFromAllKBs","property non-void-command",
"CInputManager","commander boundary","CInputManager::disableAllKeyboards","controller",
"CInputManager","commander boundary","CInputManager::newTouchDevice","void-accessor command collaborator",
"CInputManager","commander boundary","CInputManager::deviceNameToInternalString","controller stateless",
"CInputManager","commander boundary","CInputManager::getNameForNewDevice","property non-void-command",
"CInputManager","commander boundary","CInputManager::onSwipeBegin","command collaborator",
"CInputManager","commander boundary","CInputManager::beginWorkspaceSwipe","command collaborator",
"CInputManager","commander boundary","CInputManager::onSwipeEnd","command collaborator",
"CInputManager","commander boundary","CInputManager::endWorkspaceSwipe","command collaborator",
"CInputManager","commander boundary","CInputManager::onSwipeUpdate","command collaborator",
"CInputManager","commander boundary","CInputManager::updateWorkspaceSwipe","command collaborator",
"CInputManager","commander boundary","CInputManager::onTabletAxis","command collaborator",
"CInputManager","commander boundary","CInputManager::onTabletTip","command collaborator",
"CInputManager","commander boundary","CInputManager::onTabletButton","controller stateless",
"CInputManager","commander boundary","CInputManager::onTabletProximity","command collaborator",
"CInputManager","commander boundary","CInputManager::newTablet","void-accessor command collaborator",
"CInputManager","commander boundary","CInputManager::onTouchDown","command collaborator",
"CInputManager","commander boundary","CInputManager::onTouchUp","command collaborator",
"CInputManager","commander boundary","CInputManager::onTouchMove","command collaborator",
"CIdleInhibitor","empty","CIdleInhibitor::CIdleInhibitor","copy-constructor",
"CIdleNotifyProtocol","unclassified","CIdleNotifyProtocol::CIdleNotifyProtocol","constructor",
"CIdleNotifyProtocol","unclassified","CIdleNotifyProtocol::bindManager","void-accessor command collaborator",
"CIdleNotifyProtocol","unclassified","CIdleNotifyProtocol::onManagerResourceDestroy","void-accessor controller",
"CIdleNotifyProtocol","unclassified","CIdleNotifyProtocol::destroyNotification","void-accessor controller",
"CIdleNotifyProtocol","unclassified","CIdleNotifyProtocol::onGetNotification","command collaborator",
"CIdleNotifyProtocol","unclassified","CIdleNotifyProtocol::onActivity","controller",
"CIdleNotifyProtocol","unclassified","CIdleNotifyProtocol::setInhibit","set",
"CInputMethodKeyboardGrabV2","entity boundary","CInputMethodKeyboardGrabV2::CInputMethodKeyboardGrabV2","constructor",
"CInputMethodKeyboardGrabV2","entity boundary","CInputMethodKeyboardGrabV2::~CInputMethodKeyboardGrabV2","destructor",
"CInputMethodKeyboardGrabV2","entity boundary","CInputMethodKeyboardGrabV2::sendKeyboardData","void-accessor command collaborator",
"CInputMethodKeyboardGrabV2","entity boundary","CInputMethodKeyboardGrabV2::sendKey","command collaborator",
"CInputMethodKeyboardGrabV2","entity boundary","CInputMethodKeyboardGrabV2::sendMods","command collaborator",
"CInputMethodKeyboardGrabV2","entity boundary","CInputMethodKeyboardGrabV2::good","predicate non-void-command",
"CInputMethodKeyboardGrabV2","entity boundary","CInputMethodKeyboardGrabV2::getOwner","property non-void-command collaborator",
"CInputMethodKeyboardGrabV2","entity boundary","CInputMethodKeyboardGrabV2::client","property non-void-command collaborator",
"CViewportResource","small-class","CViewportResource::CViewportResource","constructor",
"CViewportResource","small-class","CViewportResource::good","predicate non-void-command",
"CViewportResource","small-class","CViewportResource::verify","command",
"IHyprWindowDecoration","degenerate","IHyprWindowDecoration::IHyprWindowDecoration","constructor",
"IHyprWindowDecoration","degenerate","IHyprWindowDecoration::~IHyprWindowDecoration","destructor",
"IHyprWindowDecoration","degenerate","IHyprWindowDecoration::onInputOnDeco","incidental",
"IHyprWindowDecoration","degenerate","IHyprWindowDecoration::getDecorationLayer","collaborator incidental",
"IHyprWindowDecoration","degenerate","IHyprWindowDecoration::getDecorationFlags","incidental",
"IHyprWindowDecoration","degenerate","IHyprWindowDecoration::getDisplayName","incidental",
"CLayerShellProtocol","unclassified","CLayerShellProtocol::CLayerShellProtocol","constructor",
"CLayerShellProtocol","unclassified","CLayerShellProtocol::bindManager","void-accessor command collaborator",
"CLayerShellProtocol","unclassified","CLayerShellProtocol::onManagerResourceDestroy","void-accessor controller",
"CLayerShellProtocol","unclassified","CLayerShellProtocol::destroyResource","void-accessor controller",
"CLayerShellProtocol","unclassified","CLayerShellProtocol::onGetLayerSurface","void-accessor command collaborator",
"CMesaDRMBufferResource","small-class","CMesaDRMBufferResource::CMesaDRMBufferResource","constructor",
"CMesaDRMBufferResource","small-class","CMesaDRMBufferResource::~CMesaDRMBufferResource","destructor",
"CMesaDRMBufferResource","small-class","CMesaDRMBufferResource::good","predicate non-void-command",
"CLinuxDMABuffer","small-class","CLinuxDMABuffer::CLinuxDMABuffer","constructor",
"CLinuxDMABuffer","small-class","CLinuxDMABuffer::~CLinuxDMABuffer","destructor",
"CLinuxDMABuffer","small-class","CLinuxDMABuffer::good","predicate non-void-command",
"CLinuxDMABBUFParamsResource","unclassified","CLinuxDMABBUFParamsResource::CLinuxDMABBUFParamsResource","constructor",
"CLinuxDMABBUFParamsResource","unclassified","CLinuxDMABBUFParamsResource::~CLinuxDMABBUFParamsResource","destructor",
"CLinuxDMABBUFParamsResource","unclassified","CLinuxDMABBUFParamsResource::good","predicate non-void-command",
"CLinuxDMABBUFParamsResource","unclassified","CLinuxDMABBUFParamsResource::create","command collaborator",
"CLinuxDMABBUFParamsResource","unclassified","CLinuxDMABBUFParamsResource::commence","predicate non-void-command",
"CLinuxDMABBUFParamsResource","unclassified","CLinuxDMABBUFParamsResource::verify","predicate non-void-command",
"CWLSHMProtocol","controller","CWLSHMProtocol::CWLSHMProtocol","constructor",
"CWLSHMProtocol","controller","CWLSHMProtocol::bindManager","void-accessor command collaborator",
"CWLSHMProtocol","controller","CWLSHMProtocol::destroyResource","void-accessor controller",
"CWLSHMProtocol","controller","CWLSHMProtocol::destroyResource","void-accessor controller",
"CWLSHMProtocol","controller","CWLSHMProtocol::destroyResource","void-accessor controller",
"CLinuxDMABUFFeedbackResource","small-class","CLinuxDMABUFFeedbackResource::CLinuxDMABUFFeedbackResource","constructor",
"CLinuxDMABUFFeedbackResource","small-class","CLinuxDMABUFFeedbackResource::~CLinuxDMABUFFeedbackResource","destructor",
"CLinuxDMABUFFeedbackResource","small-class","CLinuxDMABUFFeedbackResource::good","predicate non-void-command",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::displayDestroy","wrapper",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::CGlobalShortcutsProtocolManager","constructor",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::bindManager","void-accessor command collaborator",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::clientFromWlClient","property controller",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::registerShortcut","void-accessor command collaborator",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::globalShortcutExists","predicate",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::sendGlobalShortcutEvent","wrapper",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::getAllShortcuts","property controller",
"CGlobalShortcutsProtocolManager","data-provider boundary","CGlobalShortcutsProtocolManager::destroyShortcut","void-accessor wrapper",
"CMesaDRMResource","empty","CMesaDRMResource::CMesaDRMResource","constructor",
"CVirtualKeyboardProtocol","unclassified","CVirtualKeyboardProtocol::CVirtualKeyboardProtocol","constructor",
"CVirtualKeyboardProtocol","unclassified","CVirtualKeyboardProtocol::bindManager","void-accessor command collaborator",
"CVirtualKeyboardProtocol","unclassified","CVirtualKeyboardProtocol::onManagerResourceDestroy","void-accessor controller",
"CVirtualKeyboardProtocol","unclassified","CVirtualKeyboardProtocol::destroyResource","void-accessor controller",
"CVirtualKeyboardProtocol","unclassified","CVirtualKeyboardProtocol::onCreateKeeb","command collaborator",
"CMesaDRMProtocol","unclassified","CMesaDRMProtocol::CMesaDRMProtocol","constructor",
"CMesaDRMProtocol","unclassified","CMesaDRMProtocol::bindManager","void-accessor command collaborator",
"CMesaDRMProtocol","unclassified","CMesaDRMProtocol::destroyResource","void-accessor controller",
"CMesaDRMProtocol","unclassified","CMesaDRMProtocol::destroyResource","void-accessor controller",
"COutputMode","unclassified","COutputMode::COutputMode","constructor",
"COutputMode","unclassified","COutputMode::sendAllData","command",
"COutputMode","unclassified","COutputMode::good","predicate non-void-command",
"COutputMode","unclassified","COutputMode::getMode","get collaborator",
"COutputPowerProtocol","unclassified","COutputPowerProtocol::COutputPowerProtocol","constructor",
"COutputPowerProtocol","unclassified","COutputPowerProtocol::bindManager","void-accessor command collaborator",
"COutputPowerProtocol","unclassified","COutputPowerProtocol::onManagerResourceDestroy","void-accessor controller",
"COutputPowerProtocol","unclassified","COutputPowerProtocol::destroyOutputPower","void-accessor controller",
"COutputPowerProtocol","unclassified","COutputPowerProtocol::onGetOutputPower","void-accessor command collaborator",
"CPointerConstraint","unclassified","CPointerConstraint::CPointerConstraint","constructor",
"CPointerConstraint","unclassified","CPointerConstraint::CPointerConstraint","constructor",
"CPointerConstraint","unclassified","CPointerConstraint::~CPointerConstraint","destructor",
"CPointerConstraint","unclassified","CPointerConstraint::sharedConstructions","command",
"CPointerConstraint","unclassified","CPointerConstraint::good","predicate non-void-command",
"CPointerConstraint","unclassified","CPointerConstraint::deactivate","command",
"CPointerConstraint","unclassified","CPointerConstraint::activate","command collaborator",
"CPointerConstraint","unclassified","CPointerConstraint::isActive","get",
"CPointerConstraint","unclassified","CPointerConstraint::onSetRegion","void-accessor command collaborator",
"CPointerConstraint","unclassified","CPointerConstraint::owner","property non-void-command collaborator",
"CPointerConstraint","unclassified","CPointerConstraint::logicConstraintRegion","property non-void-command collaborator",
"CPointerConstraint","unclassified","CPointerConstraint::isLocked","get",
"CPointerConstraint","unclassified","CPointerConstraint::logicPositionHint","property non-void-command collaborator",
"CProgressBar","commander small-class","CProgressBar::printMessageAbove","command",
"CProgressBar","commander small-class","CProgressBar::print","set",
"CPointerConstraintsProtocol","unclassified","CPointerConstraintsProtocol::CPointerConstraintsProtocol","constructor",
"CPointerConstraintsProtocol","unclassified","CPointerConstraintsProtocol::bindManager","void-accessor command collaborator",
"CPointerConstraintsProtocol","unclassified","CPointerConstraintsProtocol::onManagerResourceDestroy","void-accessor controller",
"CPointerConstraintsProtocol","unclassified","CPointerConstraintsProtocol::destroyPointerConstraint","void-accessor controller",
"CPointerConstraintsProtocol","unclassified","CPointerConstraintsProtocol::onNewConstraint","command collaborator",
"CPointerConstraintsProtocol","unclassified","CPointerConstraintsProtocol::onLockPointer","void-accessor command collaborator",
"CPointerConstraintsProtocol","unclassified","CPointerConstraintsProtocol::onConfinePointer","void-accessor command collaborator",
"CPointerGestureSwipe","small-class","CPointerGestureSwipe::CPointerGestureSwipe","constructor",
"CPointerGestureSwipe","small-class","CPointerGestureSwipe::good","predicate non-void-command",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::CPointerGesturesProtocol","constructor",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::bindManager","void-accessor command collaborator",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::onManagerResourceDestroy","void-accessor controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::onGestureDestroy","void-accessor controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::onGestureDestroy","void-accessor controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::onGestureDestroy","void-accessor controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::onGetPinchGesture","command collaborator",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::onGetSwipeGesture","command collaborator",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::onGetHoldGesture","command collaborator",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::swipeBegin","controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::swipeUpdate","void-accessor controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::swipeEnd","controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::pinchBegin","controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::pinchUpdate","void-accessor controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::pinchEnd","controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::holdBegin","controller",
"CPointerGesturesProtocol","controller","CPointerGesturesProtocol::holdEnd","controller",
"CPresentationFeedback","small-class","CPresentationFeedback::CPresentationFeedback","constructor",
"CPresentationFeedback","small-class","CPresentationFeedback::good","predicate non-void-command",
"CPresentationFeedback","small-class","CPresentationFeedback::sendQueued","void-accessor command",
"CTabletPadGroupV2Resource","small-class","CTabletPadGroupV2Resource::CTabletPadGroupV2Resource","constructor",
"CTabletPadGroupV2Resource","small-class","CTabletPadGroupV2Resource::good","predicate non-void-command",
"CTabletPadGroupV2Resource","small-class","CTabletPadGroupV2Resource::sendData","void-accessor command collaborator",
"CViewporterProtocol","unclassified","CViewporterProtocol::CViewporterProtocol","constructor",
"CViewporterProtocol","unclassified","CViewporterProtocol::bindManager","void-accessor command collaborator",
"CViewporterProtocol","unclassified","CViewporterProtocol::destroyResource","void-accessor controller",
"CViewporterProtocol","unclassified","CViewporterProtocol::destroyResource","void-accessor controller",
"CIdleInhibitProtocol","unclassified","CIdleInhibitProtocol::CIdleInhibitProtocol","constructor",
"CIdleInhibitProtocol","unclassified","CIdleInhibitProtocol::onManagerResourceDestroy","void-accessor controller",
"CIdleInhibitProtocol","unclassified","CIdleInhibitProtocol::bindManager","void-accessor command collaborator",
"CIdleInhibitProtocol","unclassified","CIdleInhibitProtocol::removeInhibitor","void-accessor controller",
"CIdleInhibitProtocol","unclassified","CIdleInhibitProtocol::onCreateInhibitor","command collaborator",
"CVirtualPointerV1Resource","entity boundary","CVirtualPointerV1Resource::CVirtualPointerV1Resource","constructor",
"CVirtualPointerV1Resource","entity boundary","CVirtualPointerV1Resource::~CVirtualPointerV1Resource","destructor",
"CVirtualPointerV1Resource","entity boundary","CVirtualPointerV1Resource::good","predicate non-void-command",
"CVirtualPointerV1Resource","entity boundary","CVirtualPointerV1Resource::wlr","property collaborator",
"CVirtualPointerV1Resource","entity boundary","CVirtualPointerV1Resource::client","property non-void-command collaborator",
"CPresentationProtocol","unclassified","CPresentationProtocol::CPresentationProtocol","constructor",
"CPresentationProtocol","unclassified","CPresentationProtocol::bindManager","void-accessor command collaborator",
"CPresentationProtocol","unclassified","CPresentationProtocol::onManagerResourceDestroy","void-accessor controller",
"CPresentationProtocol","unclassified","CPresentationProtocol::destroyResource","void-accessor controller",
"CPresentationProtocol","unclassified","CPresentationProtocol::onGetFeedback","void-accessor command collaborator",
"CPresentationProtocol","unclassified","CPresentationProtocol::onPresented","void-accessor controller",
"CPresentationProtocol","unclassified","CPresentationProtocol::queueData","command collaborator",
"CPrimarySelectionOffer","small-class","CPrimarySelectionOffer::CPrimarySelectionOffer","constructor",
"CPrimarySelectionOffer","small-class","CPrimarySelectionOffer::good","predicate non-void-command",
"CPrimarySelectionOffer","small-class","CPrimarySelectionOffer::sendData","command",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::CPrimarySelectionProtocol","constructor",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::bindManager","void-accessor command collaborator",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::destroyResource","void-accessor controller",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::destroyResource","void-accessor controller",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::destroyResource","void-accessor controller",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::destroyResource","void-accessor controller",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::sendSelectionToDevice","command collaborator",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::setSelection","command collaborator",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::updateSelection","command collaborator",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::onPointerFocus","command",
"CPrimarySelectionProtocol","unclassified","CPrimarySelectionProtocol::dataDeviceForClient","property non-void-command collaborator",
"CScreencopyClient","small-class","operator==","predicate",
"CScreencopyClient","small-class","CScreencopyClient::~CScreencopyClient","destructor",
"CScreencopyClient","small-class","CScreencopyClient::CScreencopyClient","constructor",
"CScreencopyClient","small-class","CScreencopyClient::onTick","command",
"CTabletSeat","commander boundary","CTabletSeat::CTabletSeat","constructor",
"CTabletSeat","commander boundary","CTabletSeat::good","predicate non-void-command",
"CTabletSeat","commander boundary","CTabletSeat::sendTool","command collaborator",
"CTabletSeat","commander boundary","CTabletSeat::sendPad","command collaborator",
"CTabletSeat","commander boundary","CTabletSeat::sendTablet","command collaborator",
"CTabletSeat","commander boundary","CTabletSeat::sendData","command",
"CServerDecorationKDE","small-class","CServerDecorationKDE::CServerDecorationKDE","constructor",
"CServerDecorationKDE","small-class","CServerDecorationKDE::good","predicate non-void-command",
"CDefaultSurfaceRole","boundary degenerate small-class","role","collaborator incidental",
"CAlphaModifier","unclassified","CAlphaModifier::CAlphaModifier","constructor",
"CAlphaModifier","unclassified","CAlphaModifier::~CAlphaModifier","destructor",
"CAlphaModifier","unclassified","CAlphaModifier::good","predicate non-void-command",
"CAlphaModifier","unclassified","CAlphaModifier::getSurface","property non-void-command collaborator",
"CAlphaModifier","unclassified","CAlphaModifier::setSurfaceAlpha","command collaborator",
"CAlphaModifier","unclassified","CAlphaModifier::onSurfaceDestroy","command",
"CSessionLockSurface","boundary","CSessionLockSurface::CSessionLockSurface","constructor",
"CSessionLockSurface","boundary","CSessionLockSurface::~CSessionLockSurface","destructor",
"CSessionLockSurface","boundary","CSessionLockSurface::sendConfigure","command collaborator",
"CSessionLockSurface","boundary","CSessionLockSurface::good","predicate non-void-command",
"CSessionLockSurface","boundary","CSessionLockSurface::inert","predicate non-void-command",
"CSessionLockSurface","boundary","CSessionLockSurface::monitor","get collaborator",
"CSessionLockSurface","boundary","CSessionLockSurface::surface","property non-void-command collaborator",
"SScreencopyFrame","data-provider small-class","operator==","predicate",
"CSessionLockProtocol","unclassified","CSessionLockProtocol::CSessionLockProtocol","constructor",
"CSessionLockProtocol","unclassified","CSessionLockProtocol::bindManager","void-accessor command collaborator",
"CSessionLockProtocol","unclassified","CSessionLockProtocol::onManagerResourceDestroy","void-accessor controller",
"CSessionLockProtocol","unclassified","CSessionLockProtocol::destroyResource","void-accessor controller",
"CSessionLockProtocol","unclassified","CSessionLockProtocol::destroyResource","void-accessor controller",
"CSessionLockProtocol","unclassified","CSessionLockProtocol::onLock","command collaborator",
"CSessionLockProtocol","unclassified","CSessionLockProtocol::onGetLockSurface","void-accessor command collaborator",
"CSessionLockProtocol","unclassified","CSessionLockProtocol::isLocked","get",
"CKeyboardShortcutsInhibitor","small-class","CKeyboardShortcutsInhibitor::CKeyboardShortcutsInhibitor","constructor",
"CKeyboardShortcutsInhibitor","small-class","CKeyboardShortcutsInhibitor::surface","property non-void-command collaborator",
"CKeyboardShortcutsInhibitor","small-class","CKeyboardShortcutsInhibitor::good","predicate non-void-command",
"CTabletPadStripV2Resource","small-class","CTabletPadStripV2Resource::CTabletPadStripV2Resource","constructor",
"CTabletPadStripV2Resource","small-class","CTabletPadStripV2Resource::good","predicate non-void-command",
"CTabletToolV2Resource","commander","CTabletToolV2Resource::CTabletToolV2Resource","constructor",
"CTabletToolV2Resource","commander","CTabletToolV2Resource::~CTabletToolV2Resource","destructor",
"CTabletToolV2Resource","commander","CTabletToolV2Resource::good","predicate non-void-command",
"CTabletToolV2Resource","commander","CTabletToolV2Resource::sendData","command collaborator",
"CTabletToolV2Resource","commander","CTabletToolV2Resource::queueFrame","set",
"CTabletToolV2Resource","commander","CTabletToolV2Resource::sendFrame","set collaborator",
"CTearingControlProtocol","unclassified","CTearingControlProtocol::CTearingControlProtocol","constructor",
"CTearingControlProtocol","unclassified","CTearingControlProtocol::bindManager","void-accessor command collaborator",
"CTearingControlProtocol","unclassified","CTearingControlProtocol::onManagerResourceDestroy","void-accessor controller",
"CTearingControlProtocol","unclassified","CTearingControlProtocol::onGetController","void-accessor command collaborator",
"CTearingControlProtocol","unclassified","CTearingControlProtocol::onControllerDestroy","void-accessor controller",
"CTearingControlProtocol","unclassified","CTearingControlProtocol::onWindowDestroy","controller",
"SMasterNodeData","data-provider small-class","operator==","predicate",
"CColor","data-provider","operator-","property",
"CColor","data-provider","operator+","property",
"CColor","data-provider","operator*","property",
"CColor","data-provider","operator==","predicate",
"CColor","data-provider","stripA","property",
"CColor","data-provider","CColor::CColor","constructor",
"CColor","data-provider","CColor::CColor","constructor",
"CColor","data-provider","CColor::CColor","constructor",
"CColor","data-provider","CColor::getAsHex","property",
"CTextInputV3","commander","CTextInputV3::CTextInputV3","constructor",
"CTextInputV3","commander","CTextInputV3::~CTextInputV3","destructor",
"CTextInputV3","commander","CTextInputV3::enter","command collaborator",
"CTextInputV3","commander","CTextInputV3::leave","command collaborator",
"CTextInputV3","commander","CTextInputV3::preeditString","command",
"CTextInputV3","commander","CTextInputV3::commitString","command",
"CTextInputV3","commander","CTextInputV3::deleteSurroundingText","command",
"CTextInputV3","commander","CTextInputV3::sendDone","command",
"CTextInputV3","commander","CTextInputV3::good","predicate non-void-command",
"CTextInputV3","commander","CTextInputV3::client","property non-void-command collaborator",
"CXDGDecoration","small-class","CXDGDecoration::CXDGDecoration","constructor",
"CXDGDecoration","small-class","CXDGDecoration::good","predicate non-void-command",
"CXDGDecoration","small-class","CXDGDecoration::toplevelResource","get collaborator",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::CXDGToplevelResource","constructor",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::~CXDGToplevelResource","destructor",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::fromResource","controller stateless",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::good","predicate non-void-command",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::setSize","property non-void-command collaborator",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::setMaximized","get property non-void-command",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::setFullscreen","get property non-void-command",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::setActive","get property non-void-command",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::setSuspeneded","get property non-void-command",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::applyState","command collaborator",
"CXDGToplevelResource","unclassified","CXDGToplevelResource::close","command",
"CWLSurface","boundary","operator=","get set collaborator",
"CWLSurface","boundary","operator==","predicate",
"CWLSurface","boundary","operator==","predicate collaborator",
"CWLSurface","boundary","operatorbool","unclassified",
"CWLSurface","boundary","CWLSurface::assign","command collaborator",
"CWLSurface","boundary","CWLSurface::assign","command collaborator",
"CWLSurface","boundary","CWLSurface::assign","command collaborator",
"CWLSurface","boundary","CWLSurface::assign","command collaborator",
"CWLSurface","boundary","CWLSurface::assign","command collaborator",
"CWLSurface","boundary","CWLSurface::unassign","wrapper stateless",
"CWLSurface","boundary","CWLSurface::~CWLSurface","destructor",
"CWLSurface","boundary","CWLSurface::exists","get",
"CWLSurface","boundary","CWLSurface::resource","property collaborator",
"CWLSurface","boundary","CWLSurface::small","predicate collaborator",
"CWLSurface","boundary","CWLSurface::correctSmallVec","property collaborator",
"CWLSurface","boundary","CWLSurface::getLayer","property non-void-command collaborator",
"CWLSurface","boundary","CWLSurface::getPopup","get collaborator",
"CWLSurface","boundary","CWLSurface::getSubsurface","get collaborator",
"CWLSurface","boundary","CWLSurface::desktopComponent","predicate non-void-command",
"CWLSurface","boundary","CWLSurface::getSurfaceBoxGlobal","get property non-void-command collaborator",
"CWLSurface","boundary","CWLSurface::appendConstraint","set collaborator",
"CWLSurface","boundary","CWLSurface::constraint","property non-void-command collaborator",
"CWLSurface","boundary","CWLSurface::visible","predicate non-void-command",
"CWLSurface","boundary","CWLSurface::fromResource","controller stateless",
"CXDGWMBase","data-provider boundary data-class small-class","CXDGWMBase::CXDGWMBase","constructor",
"CXDGWMBase","data-provider boundary data-class small-class","CXDGWMBase::client","get collaborator",
"CXWaylandSurfaceResource","small-class","CXWaylandSurfaceResource::CXWaylandSurfaceResource","constructor",
"CXWaylandSurfaceResource","small-class","CXWaylandSurfaceResource::~CXWaylandSurfaceResource","destructor",
"CXWaylandSurfaceResource","small-class","CXWaylandSurfaceResource::good","predicate non-void-command",
"CXWaylandSurfaceResource","small-class","CXWaylandSurfaceResource::client","get collaborator",
"CXWaylandShellProtocol","unclassified","CXWaylandShellProtocol::CXWaylandShellProtocol","constructor",
"CXWaylandShellProtocol","unclassified","CXWaylandShellProtocol::bindManager","void-accessor command collaborator",
"CXWaylandShellProtocol","unclassified","CXWaylandShellProtocol::destroyResource","void-accessor controller",
"CXWaylandShellProtocol","unclassified","CXWaylandShellProtocol::destroyResource","void-accessor controller",
"CWLRegionResource","small-class","CWLRegionResource::CWLRegionResource","constructor",
"CWLRegionResource","small-class","CWLRegionResource::good","predicate non-void-command",
"CWLRegionResource","small-class","CWLRegionResource::fromResource","controller stateless",
"CWLCompositorResource","empty","CWLCompositorResource::CWLCompositorResource","constructor",
"SSwitchDevice","data-provider small-class","operator==","predicate",
"CWLCompositorProtocol","controller","CWLCompositorProtocol::CWLCompositorProtocol","constructor",
"CWLCompositorProtocol","controller","CWLCompositorProtocol::bindManager","void-accessor command collaborator",
"CWLCompositorProtocol","controller","CWLCompositorProtocol::destroyResource","void-accessor controller",
"CWLCompositorProtocol","controller","CWLCompositorProtocol::destroyResource","void-accessor controller",
"CWLCompositorProtocol","controller","CWLCompositorProtocol::destroyResource","void-accessor controller",
"CVirtualKeyboardV1Resource","entity boundary","CVirtualKeyboardV1Resource::CVirtualKeyboardV1Resource","constructor",
"CVirtualKeyboardV1Resource","entity boundary","CVirtualKeyboardV1Resource::~CVirtualKeyboardV1Resource","destructor",
"CVirtualKeyboardV1Resource","entity boundary","CVirtualKeyboardV1Resource::good","predicate non-void-command",
"CVirtualKeyboardV1Resource","entity boundary","CVirtualKeyboardV1Resource::wlr","property collaborator",
"CVirtualKeyboardV1Resource","entity boundary","CVirtualKeyboardV1Resource::client","property non-void-command collaborator",
"CVirtualKeyboardV1Resource","entity boundary","CVirtualKeyboardV1Resource::releasePressed","wrapper",
"CPointerGestureHold","small-class","CPointerGestureHold::CPointerGestureHold","constructor",
"CPointerGestureHold","small-class","CPointerGestureHold::good","predicate non-void-command",
"CWLDataOfferResource","small-class","CWLDataOfferResource::CWLDataOfferResource","constructor",
"CWLDataOfferResource","small-class","CWLDataOfferResource::good","predicate non-void-command",
"CWLDataOfferResource","small-class","CWLDataOfferResource::sendData","command",
"CSessionLock","commander","CSessionLock::CSessionLock","constructor",
"CSessionLock","commander","CSessionLock::~CSessionLock","destructor",
"CSessionLock","commander","CSessionLock::sendLocked","command",
"CSessionLock","commander","CSessionLock::good","predicate non-void-command",
"CSessionLock","commander","CSessionLock::sendDenied","set",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::CWLDataDeviceResource","constructor",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::good","predicate non-void-command",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::client","get collaborator",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::sendDataOffer","command collaborator",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::sendEnter","void-accessor command collaborator",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::sendLeave","command",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::sendMotion","void-accessor command collaborator",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::sendDrop","command",
"CWLDataDeviceResource","boundary","CWLDataDeviceResource::sendSelection","command collaborator",
