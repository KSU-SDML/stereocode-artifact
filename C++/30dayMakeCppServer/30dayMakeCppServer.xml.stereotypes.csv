Class Name,Class Stereotype,Method Name,Method Stereotype
"Poller","controller","Poller::Poller","constructor",
"Poller","controller","Poller::~Poller","destructor",
"Poller","controller","Poller::Poll","property controller",
"Poller","controller","Poller::UpdateChannel","controller",
"Poller","controller","Poller::DeleteChannel","controller",
"Poller","controller","Poller::Poller","constructor",
"Poller","controller","Poller::~Poller","destructor",
"Poller","controller","Poller::Poll","property controller",
"Poller","controller","Poller::UpdateChannel","controller",
"Poller","controller","Poller::DeleteChannel","controller",
"Poller","controller","Poller::Poller","constructor",
"Poller","controller","Poller::~Poller","destructor",
"Poller","controller","Poller::Poll","property controller",
"Poller","controller","Poller::UpdateChannel","controller",
"Poller","controller","Poller::DeleteChannel","controller",
"Poller","controller","Poller::Poller","constructor",
"Poller","controller","Poller::~Poller","destructor",
"Poller","controller","Poller::Poll","property controller",
"Poller","controller","Poller::UpdateChannel","property controller",
"Poller","controller","Poller::DeleteChannel","property controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::addFd","wrapper",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::addFd","wrapper",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::updateChannel","controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::addFd","wrapper",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::updateChannel","controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::addFd","wrapper",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::updateChannel","controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::updateChannel","controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::updateChannel","controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::updateChannel","controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::updateChannel","controller",
"Epoll","controller","Epoll::deleteChannel","controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::poll","property controller",
"Epoll","controller","Epoll::updateChannel","controller",
"Epoll","controller","Epoll::deleteChannel","controller",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::Poll","property controller",
"Epoll","controller","Epoll::UpdateChannel","set collaborator",
"Epoll","controller","Epoll::DeleteChannel","controller stateless",
"Epoll","controller","Epoll::Epoll","constructor",
"Epoll","controller","Epoll::~Epoll","destructor",
"Epoll","controller","Epoll::Poll","property controller",
"Epoll","controller","Epoll::UpdateChannel","set collaborator",
"Epoll","controller","Epoll::DeleteChannel","controller stateless",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","wrapper",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property wrapper",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","wrapper",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property wrapper",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","wrapper",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property wrapper",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","wrapper",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property wrapper",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","controller",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property controller",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","controller",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property controller",
"Socket","boundary","Socket::connect","controller",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","controller",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property controller",
"Socket","boundary","Socket::connect","controller",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","controller",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property controller",
"Socket","boundary","Socket::connect","controller",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::bind","controller",
"Socket","boundary","Socket::listen","wrapper",
"Socket","boundary","Socket::setnonblocking","wrapper",
"Socket","boundary","Socket::accept","property controller",
"Socket","boundary","Socket::connect","controller",
"Socket","boundary","Socket::getFd","get",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::Bind","controller stateless",
"Socket","boundary","Socket::Listen","wrapper stateless",
"Socket","boundary","Socket::SetNonBlocking","wrapper stateless",
"Socket","boundary","Socket::Accept","controller stateless",
"Socket","boundary","Socket::Connect","controller stateless",
"Socket","boundary","Socket::GetFd","incidental",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::Bind","controller stateless",
"Socket","boundary","Socket::Listen","wrapper stateless",
"Socket","boundary","Socket::SetNonBlocking","wrapper stateless",
"Socket","boundary","Socket::IsNonBlocking","wrapper stateless",
"Socket","boundary","Socket::Accept","property non-void-command collaborator",
"Socket","boundary","Socket::Connect","controller stateless",
"Socket","boundary","Socket::Connect","command collaborator",
"Socket","boundary","Socket::GetFd","incidental",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::Bind","controller stateless",
"Socket","boundary","Socket::Listen","wrapper stateless",
"Socket","boundary","Socket::SetNonBlocking","wrapper stateless",
"Socket","boundary","Socket::IsNonBlocking","wrapper stateless",
"Socket","boundary","Socket::Accept","property non-void-command collaborator",
"Socket","boundary","Socket::Connect","controller stateless",
"Socket","boundary","Socket::Connect","command collaborator",
"Socket","boundary","Socket::GetFd","incidental",
"Socket","boundary","Socket::Socket","constructor",
"Socket","boundary","Socket::~Socket","destructor",
"Socket","boundary","Socket::set_fd","incidental",
"Socket","boundary","Socket::fd","incidental",
"Socket","boundary","Socket::get_addr","wrapper stateless",
"Socket","boundary","Socket::SetNonBlocking","wrapper stateless",
"Socket","boundary","Socket::IsNonBlocking","wrapper stateless",
"Socket","boundary","Socket::RecvBufSize","wrapper stateless",
"Socket","boundary","Socket::Create","wrapper stateless",
"Socket","boundary","Socket::Bind","wrapper stateless",
"Socket","boundary","Socket::Listen","wrapper stateless",
"Socket","boundary","Socket::Accept","wrapper stateless",
"Socket","boundary","Socket::Connect","wrapper stateless",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::enableReading","set",
"Channel","lazy-class degenerate","Channel::getFd","get",
"Channel","lazy-class degenerate","Channel::getEvents","get",
"Channel","lazy-class degenerate","Channel::getRevents","get",
"Channel","lazy-class degenerate","Channel::getInEpoll","get",
"Channel","lazy-class degenerate","Channel::setInEpoll","set",
"Channel","lazy-class degenerate","Channel::setRevents","set",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::handleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::enableReading","set",
"Channel","lazy-class degenerate","Channel::getFd","get",
"Channel","lazy-class degenerate","Channel::getEvents","get",
"Channel","lazy-class degenerate","Channel::getRevents","get",
"Channel","lazy-class degenerate","Channel::getInEpoll","get",
"Channel","lazy-class degenerate","Channel::setInEpoll","set",
"Channel","lazy-class degenerate","Channel::setRevents","set",
"Channel","lazy-class degenerate","Channel::setCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::handleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::enableReading","set",
"Channel","lazy-class degenerate","Channel::getFd","get",
"Channel","lazy-class degenerate","Channel::getEvents","get",
"Channel","lazy-class degenerate","Channel::getRevents","get",
"Channel","lazy-class degenerate","Channel::getInEpoll","get",
"Channel","lazy-class degenerate","Channel::setInEpoll","set",
"Channel","lazy-class degenerate","Channel::setRevents","set",
"Channel","lazy-class degenerate","Channel::setCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::handleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::enableReading","set",
"Channel","lazy-class degenerate","Channel::getFd","get",
"Channel","lazy-class degenerate","Channel::getEvents","get",
"Channel","lazy-class degenerate","Channel::getRevents","get",
"Channel","lazy-class degenerate","Channel::getInEpoll","get",
"Channel","lazy-class degenerate","Channel::setInEpoll","set",
"Channel","lazy-class degenerate","Channel::setRevents","set",
"Channel","lazy-class degenerate","Channel::setCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::handleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::enableReading","set",
"Channel","lazy-class degenerate","Channel::getFd","get",
"Channel","lazy-class degenerate","Channel::getEvents","get",
"Channel","lazy-class degenerate","Channel::getRevents","get",
"Channel","lazy-class degenerate","Channel::getInEpoll","get",
"Channel","lazy-class degenerate","Channel::setInEpoll","set",
"Channel","lazy-class degenerate","Channel::setRevents","set",
"Channel","lazy-class degenerate","Channel::setCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::handleEvent","controller stateless",
"Channel","lazy-class degenerate","Channel::enableReading","set",
"Channel","lazy-class degenerate","Channel::getFd","get",
"Channel","lazy-class degenerate","Channel::getEvents","get",
"Channel","lazy-class degenerate","Channel::getRevents","get",
"Channel","lazy-class degenerate","Channel::getInEpoll","get",
"Channel","lazy-class degenerate","Channel::setInEpoll","set",
"Channel","lazy-class degenerate","Channel::setRevents","set",
"Channel","lazy-class degenerate","Channel::setCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::handleEvent","controller stateless",
"Channel","lazy-class degenerate","Channel::enableRead","set",
"Channel","lazy-class degenerate","Channel::useET","set",
"Channel","lazy-class degenerate","Channel::getFd","get",
"Channel","lazy-class degenerate","Channel::getEvents","get",
"Channel","lazy-class degenerate","Channel::getReady","incidental",
"Channel","lazy-class degenerate","Channel::getInEpoll","get",
"Channel","lazy-class degenerate","Channel::setInEpoll","set",
"Channel","lazy-class degenerate","Channel::setReady","incidental",
"Channel","lazy-class degenerate","Channel::setReadCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::setUseThreadPool","incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::handleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::enableRead","set",
"Channel","lazy-class degenerate","Channel::useET","set",
"Channel","lazy-class degenerate","Channel::getFd","get",
"Channel","lazy-class degenerate","Channel::getEvents","get",
"Channel","lazy-class degenerate","Channel::getReady","incidental",
"Channel","lazy-class degenerate","Channel::getInEpoll","get",
"Channel","lazy-class degenerate","Channel::setInEpoll","set",
"Channel","lazy-class degenerate","Channel::setReady","incidental",
"Channel","lazy-class degenerate","Channel::setReadCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::HandleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::EnableRead","controller stateless",
"Channel","lazy-class degenerate","Channel::UseET","controller stateless",
"Channel","lazy-class degenerate","Channel::GetFd","incidental",
"Channel","lazy-class degenerate","Channel::GetListenEvents","incidental",
"Channel","lazy-class degenerate","Channel::GetReadyEvents","incidental",
"Channel","lazy-class degenerate","Channel::GetInEpoll","incidental",
"Channel","lazy-class degenerate","Channel::SetInEpoll","incidental",
"Channel","lazy-class degenerate","Channel::SetReadyEvents","incidental",
"Channel","lazy-class degenerate","Channel::SetReadCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::HandleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::EnableRead","controller stateless",
"Channel","lazy-class degenerate","Channel::UseET","controller stateless",
"Channel","lazy-class degenerate","Channel::GetFd","incidental",
"Channel","lazy-class degenerate","Channel::GetListenEvents","incidental",
"Channel","lazy-class degenerate","Channel::GetReadyEvents","incidental",
"Channel","lazy-class degenerate","Channel::GetInEpoll","incidental",
"Channel","lazy-class degenerate","Channel::SetInEpoll","incidental",
"Channel","lazy-class degenerate","Channel::SetReadyEvents","incidental",
"Channel","lazy-class degenerate","Channel::SetReadCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::HandleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::EnableRead","controller stateless",
"Channel","lazy-class degenerate","Channel::EnableWrite","controller stateless",
"Channel","lazy-class degenerate","Channel::UseET","controller stateless",
"Channel","lazy-class degenerate","Channel::GetSocket","collaborator incidental",
"Channel","lazy-class degenerate","Channel::GetListenEvents","incidental",
"Channel","lazy-class degenerate","Channel::GetReadyEvents","incidental",
"Channel","lazy-class degenerate","Channel::GetExist","incidental",
"Channel","lazy-class degenerate","Channel::SetExist","incidental",
"Channel","lazy-class degenerate","Channel::SetReadyEvents","incidental",
"Channel","lazy-class degenerate","Channel::SetReadCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::SetWriteCallback","collaborator incidental",
"Channel","lazy-class degenerate","Channel::Channel","constructor",
"Channel","lazy-class degenerate","Channel::~Channel","destructor",
"Channel","lazy-class degenerate","Channel::HandleEvent","wrapper stateless",
"Channel","lazy-class degenerate","Channel::EnableRead","controller stateless",
"Channel","lazy-class degenerate","Channel::EnableWrite","controller stateless",
"Channel","lazy-class degenerate","Channel::EnableET","controller stateless",
"Channel","lazy-class degenerate","Channel::fd","incidental",
"Channel","lazy-class degenerate","Channel::listen_events","incidental",
"Channel","lazy-class degenerate","Channel::ready_events","incidental",
"Channel","lazy-class degenerate","Channel::exist","incidental",
"Channel","lazy-class degenerate","Channel::set_exist","incidental",
"Channel","lazy-class degenerate","Channel::set_ready_event","incidental",
"Channel","lazy-class degenerate","Channel::set_read_callback","wrapper stateless",
"Channel","lazy-class degenerate","Channel::set_write_callback","wrapper stateless",
"Server","degenerate","handleReadEvent","wrapper stateless",
"Server","degenerate","handleReadEvent","wrapper stateless",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::handleReadEvent","wrapper stateless",
"Server","degenerate","Server::newConnection","controller",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::handleReadEvent","wrapper stateless",
"Server","degenerate","Server::newConnection","controller",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::newConnection","controller",
"Server","degenerate","Server::deleteConnection","controller stateless",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::newConnection","controller",
"Server","degenerate","Server::deleteConnection","controller stateless",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::newConnection","controller",
"Server","degenerate","Server::deleteConnection","controller stateless",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::newConnection","controller",
"Server","degenerate","Server::deleteConnection","controller stateless",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::newConnection","controller stateless",
"Server","degenerate","Server::deleteConnection","controller stateless",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::NewConnection","controller stateless",
"Server","degenerate","Server::DeleteConnection","controller stateless",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::NewConnection","controller stateless",
"Server","degenerate","Server::DeleteConnection","controller stateless",
"Server","degenerate","Server::OnConnect","wrapper stateless",
"Server","degenerate","Server::Server","constructor",
"Server","degenerate","Server::~Server","destructor",
"Server","degenerate","Server::NewConnection","controller stateless",
"Server","degenerate","Server::DeleteConnection","controller stateless",
"Server","degenerate","Server::OnConnect","wrapper stateless",
"Server","degenerate","Server::OnMessage","wrapper stateless",
"Server","degenerate","Server::NewConnect","wrapper stateless",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::acceptConnection","wrapper",
"Acceptor","commander boundary","Acceptor::setNewConnectionCallback","set collaborator",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::acceptConnection","command collaborator",
"Acceptor","commander boundary","Acceptor::setNewConnectionCallback","set collaborator",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::acceptConnection","command collaborator",
"Acceptor","commander boundary","Acceptor::setNewConnectionCallback","set collaborator",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::acceptConnection","command collaborator",
"Acceptor","commander boundary","Acceptor::setNewConnectionCallback","set collaborator",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::acceptConnection","command collaborator",
"Acceptor","commander boundary","Acceptor::setNewConnectionCallback","set collaborator",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::acceptConnection","command collaborator",
"Acceptor","commander boundary","Acceptor::setNewConnectionCallback","set collaborator",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::AcceptConnection","controller stateless",
"Acceptor","commander boundary","Acceptor::SetNewConnectionCallback","collaborator incidental",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::AcceptConnection","controller stateless",
"Acceptor","commander boundary","Acceptor::SetNewConnectionCallback","collaborator incidental",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::AcceptConnection","controller stateless",
"Acceptor","commander boundary","Acceptor::SetNewConnectionCallback","collaborator incidental",
"Acceptor","commander boundary","Acceptor::Acceptor","constructor",
"Acceptor","commander boundary","Acceptor::~Acceptor","destructor",
"Acceptor","commander boundary","Acceptor::AcceptConnection","controller stateless",
"Acceptor","commander boundary","Acceptor::set_new_connection_callback","wrapper stateless",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::setInetAddr","command collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getAddr","get collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getAddr_len","get collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::setInetAddr","command collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getAddr","get collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getAddr_len","get collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::setInetAddr","command collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getAddr","get collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getAddr_len","get collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::setInetAddr","set collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getAddr","get collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::~InetAddress","destructor",
"InetAddress","entity boundary lazy-class","InetAddress::setInetAddr","set collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getAddr","get collaborator",
"InetAddress","entity boundary lazy-class","InetAddress::getIp","property wrapper",
"InetAddress","entity boundary lazy-class","InetAddress::getPort","property wrapper",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::SetAddr","collaborator incidental",
"InetAddress","entity boundary lazy-class","InetAddress::GetAddr","collaborator incidental",
"InetAddress","entity boundary lazy-class","InetAddress::GetIp","wrapper stateless",
"InetAddress","entity boundary lazy-class","InetAddress::GetPort","wrapper stateless",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::SetAddr","collaborator incidental",
"InetAddress","entity boundary lazy-class","InetAddress::GetAddr","collaborator incidental",
"InetAddress","entity boundary lazy-class","InetAddress::GetIp","wrapper stateless",
"InetAddress","entity boundary lazy-class","InetAddress::GetPort","wrapper stateless",
"InetAddress","entity boundary lazy-class","InetAddress::InetAddress","constructor",
"InetAddress","entity boundary lazy-class","InetAddress::SetAddr","collaborator incidental",
"InetAddress","entity boundary lazy-class","InetAddress::GetAddr","collaborator incidental",
"InetAddress","entity boundary lazy-class","InetAddress::GetIp","wrapper stateless",
"InetAddress","entity boundary lazy-class","InetAddress::GetPort","wrapper stateless",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::loop","command collaborator",
"EventLoop","unclassified","EventLoop::updateChannel","command collaborator",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::loop","command collaborator",
"EventLoop","unclassified","EventLoop::updateChannel","command collaborator",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::loop","command collaborator",
"EventLoop","unclassified","EventLoop::updateChannel","command collaborator",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::loop","command collaborator",
"EventLoop","unclassified","EventLoop::updateChannel","command collaborator",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::loop","command collaborator",
"EventLoop","unclassified","EventLoop::updateChannel","command collaborator",
"EventLoop","unclassified","EventLoop::addThread","controller stateless",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::loop","command collaborator",
"EventLoop","unclassified","EventLoop::updateChannel","command collaborator",
"EventLoop","unclassified","EventLoop::addThread","controller stateless",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::loop","command collaborator",
"EventLoop","unclassified","EventLoop::updateChannel","command collaborator",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::Loop","controller stateless",
"EventLoop","unclassified","EventLoop::UpdateChannel","controller stateless",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::Loop","controller stateless",
"EventLoop","unclassified","EventLoop::UpdateChannel","controller stateless",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::Loop","controller stateless",
"EventLoop","unclassified","EventLoop::Quit","incidental",
"EventLoop","unclassified","EventLoop::UpdateChannel","controller stateless",
"EventLoop","unclassified","EventLoop::DeleteChannel","controller stateless",
"EventLoop","unclassified","EventLoop::EventLoop","constructor",
"EventLoop","unclassified","EventLoop::~EventLoop","destructor",
"EventLoop","unclassified","EventLoop::Loop","controller stateless",
"EventLoop","unclassified","EventLoop::UpdateChannel","controller stateless",
"EventLoop","unclassified","EventLoop::DeleteChannel","controller stateless",
"Exception","empty","Exception","constructor",
"Exception","empty","Exception","copy-constructor",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::echo","wrapper",
"Connection","degenerate","Connection::setDeleteConnectionCallback","set collaborator",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::echo","controller",
"Connection","degenerate","Connection::setDeleteConnectionCallback","set collaborator",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::echo","controller",
"Connection","degenerate","Connection::setDeleteConnectionCallback","set collaborator",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::setDeleteConnectionCallback","set collaborator",
"Connection","degenerate","Connection::echo","command collaborator",
"Connection","degenerate","Connection::send","controller stateless",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::setDeleteConnectionCallback","set collaborator",
"Connection","degenerate","Connection::echo","command collaborator",
"Connection","degenerate","Connection::send","controller stateless",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::SetDeleteConnectionCallback","collaborator incidental",
"Connection","degenerate","Connection::Echo","command collaborator",
"Connection","degenerate","Connection::Send","controller stateless",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::Read","command",
"Connection","degenerate","Connection::Write","command",
"Connection","degenerate","Connection::ReadNonBlocking","controller stateless",
"Connection","degenerate","Connection::WriteNonBlocking","controller stateless",
"Connection","degenerate","Connection::ReadBlocking","controller stateless",
"Connection","degenerate","Connection::WriteBlocking","controller stateless",
"Connection","degenerate","Connection::Close","wrapper stateless",
"Connection","degenerate","Connection::GetState","collaborator incidental",
"Connection","degenerate","Connection::SetSendBuffer","controller stateless",
"Connection","degenerate","Connection::GetReadBuffer","collaborator incidental",
"Connection","degenerate","Connection::ReadBuffer","controller stateless",
"Connection","degenerate","Connection::GetSendBuffer","collaborator incidental",
"Connection","degenerate","Connection::SendBuffer","controller stateless",
"Connection","degenerate","Connection::SetDeleteConnectionCallback","collaborator incidental",
"Connection","degenerate","Connection::SetOnConnectCallback","controller stateless",
"Connection","degenerate","Connection::GetlineSendBuffer","controller stateless",
"Connection","degenerate","Connection::GetSocket","collaborator incidental",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::Read","command",
"Connection","degenerate","Connection::Write","command",
"Connection","degenerate","Connection::ReadNonBlocking","command collaborator",
"Connection","degenerate","Connection::WriteNonBlocking","controller stateless",
"Connection","degenerate","Connection::ReadBlocking","controller stateless",
"Connection","degenerate","Connection::WriteBlocking","controller stateless",
"Connection","degenerate","Connection::Send","command",
"Connection","degenerate","Connection::Business","command",
"Connection","degenerate","Connection::Close","wrapper stateless",
"Connection","degenerate","Connection::GetState","collaborator incidental",
"Connection","degenerate","Connection::SetSendBuffer","controller stateless",
"Connection","degenerate","Connection::GetReadBuffer","collaborator incidental",
"Connection","degenerate","Connection::ReadBuffer","controller stateless",
"Connection","degenerate","Connection::GetSendBuffer","collaborator incidental",
"Connection","degenerate","Connection::SendBuffer","controller stateless",
"Connection","degenerate","Connection::SetDeleteConnectionCallback","collaborator incidental",
"Connection","degenerate","Connection::SetOnConnectCallback","collaborator incidental",
"Connection","degenerate","Connection::SetOnMessageCallback","controller stateless",
"Connection","degenerate","Connection::GetlineSendBuffer","controller stateless",
"Connection","degenerate","Connection::GetSocket","collaborator incidental",
"Connection","degenerate","Connection::Connection","constructor",
"Connection","degenerate","Connection::~Connection","destructor",
"Connection","degenerate","Connection::Read","property non-void-command collaborator",
"Connection","degenerate","Connection::Write","property non-void-command collaborator",
"Connection","degenerate","Connection::ReadNonBlocking","property non-void-command collaborator",
"Connection","degenerate","Connection::WriteNonBlocking","controller stateless",
"Connection","degenerate","Connection::ReadBlocking","controller stateless",
"Connection","degenerate","Connection::WriteBlocking","controller stateless",
"Connection","degenerate","Connection::Send","property non-void-command collaborator",
"Connection","degenerate","Connection::Business","command",
"Connection","degenerate","Connection::set_delete_connection","wrapper stateless",
"Connection","degenerate","Connection::set_on_recv","controller stateless",
"Connection","degenerate","Connection::Close","controller stateless",
"Connection","degenerate","Connection::state","collaborator incidental",
"Connection","degenerate","Connection::socket","controller stateless",
"Connection","degenerate","Connection::set_send_buf","controller stateless",
"Connection","degenerate","Connection::read_buf","controller stateless",
"Connection","degenerate","Connection::send_buf","controller stateless",
"Buffer","degenerate","Buffer::Buffer","constructor",
"Buffer","degenerate","Buffer::~Buffer","destructor",
"Buffer","degenerate","Buffer::append","command",
"Buffer","degenerate","Buffer::size","property non-void-command collaborator",
"Buffer","degenerate","Buffer::c_str","property non-void-command",
"Buffer","degenerate","Buffer::clear","command",
"Buffer","degenerate","Buffer::getline","command",
"Buffer","degenerate","Buffer::Buffer","constructor",
"Buffer","degenerate","Buffer::~Buffer","destructor",
"Buffer","degenerate","Buffer::append","command",
"Buffer","degenerate","Buffer::size","property non-void-command collaborator",
"Buffer","degenerate","Buffer::c_str","property non-void-command",
"Buffer","degenerate","Buffer::clear","command",
"Buffer","degenerate","Buffer::getline","command",
"Buffer","degenerate","Buffer::Buffer","constructor",
"Buffer","degenerate","Buffer::~Buffer","destructor",
"Buffer","degenerate","Buffer::append","command",
"Buffer","degenerate","Buffer::size","property non-void-command collaborator",
"Buffer","degenerate","Buffer::c_str","property non-void-command",
"Buffer","degenerate","Buffer::clear","command",
"Buffer","degenerate","Buffer::getline","command",
"Buffer","degenerate","Buffer::setBuf","command",
"Buffer","degenerate","Buffer::Buffer","constructor",
"Buffer","degenerate","Buffer::~Buffer","destructor",
"Buffer","degenerate","Buffer::append","command",
"Buffer","degenerate","Buffer::size","property non-void-command collaborator",
"Buffer","degenerate","Buffer::c_str","property non-void-command",
"Buffer","degenerate","Buffer::clear","command",
"Buffer","degenerate","Buffer::getline","command",
"Buffer","degenerate","Buffer::setBuf","command",
"Buffer","degenerate","Buffer::Append","controller stateless",
"Buffer","degenerate","Buffer::Size","controller stateless",
"Buffer","degenerate","Buffer::ToStr","controller stateless",
"Buffer","degenerate","Buffer::Clear","controller stateless",
"Buffer","degenerate","Buffer::Getline","controller stateless",
"Buffer","degenerate","Buffer::SetBuf","controller stateless",
"Buffer","degenerate","Buffer::Append","controller stateless",
"Buffer","degenerate","Buffer::Size","controller stateless",
"Buffer","degenerate","Buffer::ToStr","controller stateless",
"Buffer","degenerate","Buffer::Clear","controller stateless",
"Buffer","degenerate","Buffer::Getline","controller stateless",
"Buffer","degenerate","Buffer::SetBuf","controller stateless",
"Buffer","degenerate","Buffer::Append","controller stateless",
"Buffer","degenerate","Buffer::Size","controller stateless",
"Buffer","degenerate","Buffer::ToStr","controller stateless",
"Buffer","degenerate","Buffer::Clear","controller stateless",
"Buffer","degenerate","Buffer::Getline","controller stateless",
"Buffer","degenerate","Buffer::SetBuf","controller stateless",
"Buffer","degenerate","Buffer::buf","incidental",
"Buffer","degenerate","Buffer::c_str","controller stateless",
"Buffer","degenerate","Buffer::set_buf","controller stateless",
"Buffer","degenerate","Buffer::Size","controller stateless",
"Buffer","degenerate","Buffer::Append","controller stateless",
"Buffer","degenerate","Buffer::Clear","controller stateless",
"TcpServer","entity commander boundary","TcpServer::TcpServer","constructor",
"TcpServer","entity commander boundary","TcpServer::~TcpServer","destructor",
"TcpServer","entity commander boundary","TcpServer::Start","command collaborator",
"TcpServer","entity commander boundary","TcpServer::NewConnection","property set collaborator",
"TcpServer","entity commander boundary","TcpServer::DeleteConnection","property non-void-command collaborator",
"TcpServer","entity commander boundary","TcpServer::onConnect","set collaborator",
"TcpServer","entity commander boundary","TcpServer::onRecv","set collaborator",
"Log","empty","Log::Log","constructor",
"Log","empty","Log::~Log","destructor",
"Log","empty","Log::Log","constructor",
"Log","empty","Log::~Log","destructor",
"ThreadPool","degenerate","ThreadPool::ThreadPool","constructor",
"ThreadPool","degenerate","ThreadPool::~ThreadPool","destructor",
"ThreadPool","degenerate","ThreadPool::add","command collaborator",
"ThreadPool","degenerate","ThreadPool::ThreadPool","constructor",
"ThreadPool","degenerate","ThreadPool::~ThreadPool","destructor",
"ThreadPool","degenerate","ThreadPool::add","property non-void-command collaborator",
"ThreadPool","degenerate","ThreadPool::ThreadPool","constructor",
"ThreadPool","degenerate","ThreadPool::~ThreadPool","destructor",
"ThreadPool","degenerate","ThreadPool::add","property non-void-command collaborator",
"ThreadPool","degenerate","ThreadPool::ThreadPool","constructor",
"ThreadPool","degenerate","ThreadPool::~ThreadPool","destructor",
"ThreadPool","degenerate","ThreadPool::Add","controller stateless",
"ThreadPool","degenerate","ThreadPool::ThreadPool","constructor",
"ThreadPool","degenerate","ThreadPool::~ThreadPool","destructor",
"ThreadPool","degenerate","ThreadPool::Add","controller stateless",
"ThreadPool","degenerate","ThreadPool::ThreadPool","constructor",
"ThreadPool","degenerate","ThreadPool::~ThreadPool","destructor",
"ThreadPool","degenerate","ThreadPool::Add","controller stateless",
"ThreadPool","degenerate","ThreadPool::ThreadPool","constructor",
"ThreadPool","degenerate","ThreadPool::~ThreadPool","destructor",
"ThreadPool","degenerate","ThreadPool::Add","controller stateless",
